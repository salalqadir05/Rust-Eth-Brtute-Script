//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	_Z13kernel_sha256PKhiPhi
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 1 .b8 wordlist[20480];
.const .align 8 .b8 K[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
.const .align 4 .b8 K256[256] = {152, 47, 138, 66, 145, 68, 55, 113, 207, 251, 192, 181, 165, 219, 181, 233, 91, 194, 86, 57, 241, 17, 241, 89, 164, 130, 63, 146, 213, 94, 28, 171, 152, 170, 7, 216, 1, 91, 131, 18, 190, 133, 49, 36, 195, 125, 12, 85, 116, 93, 190, 114, 254, 177, 222, 128, 167, 6, 220, 155, 116, 241, 155, 193, 193, 105, 155, 228, 134, 71, 190, 239, 198, 157, 193, 15, 204, 161, 12, 36, 111, 44, 233, 45, 170, 132, 116, 74, 220, 169, 176, 92, 218, 136, 249, 118, 82, 81, 62, 152, 109, 198, 49, 168, 200, 39, 3, 176, 199, 127, 89, 191, 243, 11, 224, 198, 71, 145, 167, 213, 81, 99, 202, 6, 103, 41, 41, 20, 133, 10, 183, 39, 56, 33, 27, 46, 252, 109, 44, 77, 19, 13, 56, 83, 84, 115, 10, 101, 187, 10, 106, 118, 46, 201, 194, 129, 133, 44, 114, 146, 161, 232, 191, 162, 75, 102, 26, 168, 112, 139, 75, 194, 163, 81, 108, 199, 25, 232, 146, 209, 36, 6, 153, 214, 133, 53, 14, 244, 112, 160, 106, 16, 22, 193, 164, 25, 8, 108, 55, 30, 76, 119, 72, 39, 181, 188, 176, 52, 179, 12, 28, 57, 74, 170, 216, 78, 79, 202, 156, 91, 243, 111, 46, 104, 238, 130, 143, 116, 111, 99, 165, 120, 20, 120, 200, 132, 8, 2, 199, 140, 250, 255, 190, 144, 235, 108, 80, 164, 247, 163, 249, 190, 242, 120, 113, 198};
.const .align 8 .b8 SECP256K1_P[32] = {47, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255};
.const .align 8 .b8 EXP_P_MINUS_2[32] = {45, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255};
.global .align 1 .b8 $str$1[22] = {91, 70, 79, 85, 78, 68, 93, 32, 77, 110, 101, 109, 111, 110, 105, 99, 58, 32, 37, 115, 10, 0};

.visible .entry _Z13kernel_sha256PKhiPhi(
	.param .u64 _Z13kernel_sha256PKhiPhi_param_0,
	.param .u32 _Z13kernel_sha256PKhiPhi_param_1,
	.param .u64 _Z13kernel_sha256PKhiPhi_param_2,
	.param .u32 _Z13kernel_sha256PKhiPhi_param_3
)
{
	.local .align 16 .b8 	__local_depot0[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<92>;
	.reg .b32 	%r<2565>;
	.reg .b64 	%rd<27>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd11, [_Z13kernel_sha256PKhiPhi_param_0];
	ld.param.u32 	%r11, [_Z13kernel_sha256PKhiPhi_param_1];
	ld.param.u64 	%rd12, [_Z13kernel_sha256PKhiPhi_param_2];
	ld.param.u32 	%r12, [_Z13kernel_sha256PKhiPhi_param_3];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB0_9;

	cvta.to.global.u64 	%rd2, %rd11;
	mul.lo.s32 	%r16, %r1, %r11;
	cvt.s64.s32 	%rd3, %r16;
	mov.u32 	%r2563, 0;
	st.local.v4.u32 	[%rd1], {%r2563, %r2563, %r2563, %r2563};
	st.local.v4.u32 	[%rd1+16], {%r2563, %r2563, %r2563, %r2563};
	st.local.v4.u32 	[%rd1+32], {%r2563, %r2563, %r2563, %r2563};
	st.local.v4.u32 	[%rd1+48], {%r2563, %r2563, %r2563, %r2563};
	setp.lt.s32 	%p2, %r11, 1;
	@%p2 bra 	$L__BB0_8;

	add.s32 	%r19, %r11, -1;
	and.b32  	%r2564, %r11, 3;
	setp.lt.u32 	%p3, %r19, 3;
	@%p3 bra 	$L__BB0_5;

	sub.s32 	%r2562, %r11, %r2564;
	mov.u32 	%r2563, 0;

$L__BB0_4:
	cvt.s64.s32 	%rd14, %r2563;
	add.s64 	%rd15, %rd14, %rd3;
	add.s64 	%rd16, %rd2, %rd15;
	add.s64 	%rd17, %rd1, %rd14;
	ld.global.u8 	%rs1, [%rd16+3];
	ld.global.u8 	%rs2, [%rd16+2];
	ld.global.u8 	%rs3, [%rd16+1];
	ld.global.u8 	%rs4, [%rd16];
	st.local.v4.u8 	[%rd17], {%rs4, %rs3, %rs2, %rs1};
	add.s32 	%r2563, %r2563, 4;
	add.s32 	%r2562, %r2562, -4;
	setp.ne.s32 	%p4, %r2562, 0;
	@%p4 bra 	$L__BB0_4;

$L__BB0_5:
	setp.eq.s32 	%p5, %r2564, 0;
	@%p5 bra 	$L__BB0_8;

	cvt.s64.s32 	%rd18, %r2563;
	add.s64 	%rd26, %rd1, %rd18;
	add.s64 	%rd19, %rd18, %rd3;
	add.s64 	%rd25, %rd2, %rd19;

$L__BB0_7:
	.pragma "nounroll";
	ld.global.u8 	%rs5, [%rd25];
	st.local.u8 	[%rd26], %rs5;
	add.s64 	%rd26, %rd26, 1;
	add.s64 	%rd25, %rd25, 1;
	add.s32 	%r2564, %r2564, -1;
	setp.ne.s32 	%p6, %r2564, 0;
	@%p6 bra 	$L__BB0_7;

$L__BB0_8:
	cvt.s64.s32 	%rd20, %r11;
	add.s64 	%rd21, %rd1, %rd20;
	mov.u16 	%rs6, 128;
	st.local.u8 	[%rd21], %rs6;
	shr.u32 	%r21, %r11, 5;
	cvt.u16.u32 	%rs7, %r11;
	shl.b16 	%rs8, %rs7, 3;
	cvt.u16.u32 	%rs9, %r21;
	st.local.v2.u8 	[%rd1+62], {%rs9, %rs8};
	ld.local.v4.u32 	{%r22, %r23, %r24, %r25}, [%rd1];
	mov.b32 	{%rs10, %rs11}, %r22;
	shr.u16 	%rs12, %rs10, 8;
	shr.u16 	%rs13, %rs11, 8;
	mov.b32 	{%rs14, %rs15}, %r23;
	shr.u16 	%rs16, %rs14, 8;
	shr.u16 	%rs17, %rs15, 8;
	mov.b32 	{%rs18, %rs19}, %r24;
	shr.u16 	%rs20, %rs18, 8;
	shr.u16 	%rs21, %rs19, 8;
	mov.b32 	{%rs22, %rs23}, %r25;
	shr.u16 	%rs24, %rs22, 8;
	shr.u16 	%rs25, %rs23, 8;
	cvt.u32.u16 	%r30, %rs10;
	shl.b32 	%r31, %r30, 24;
	cvt.u32.u16 	%r32, %rs12;
	shl.b32 	%r33, %r32, 16;
	or.b32  	%r34, %r33, %r31;
	and.b16  	%rs26, %rs11, 255;
	mul.wide.u16 	%r35, %rs26, 256;
	or.b32  	%r36, %r34, %r35;
	cvt.u32.u16 	%r37, %rs13;
	or.b32  	%r38, %r36, %r37;
	cvt.u32.u16 	%r39, %rs14;
	shl.b32 	%r40, %r39, 24;
	cvt.u32.u16 	%r41, %rs16;
	shl.b32 	%r42, %r41, 16;
	or.b32  	%r43, %r42, %r40;
	and.b16  	%rs27, %rs15, 255;
	mul.wide.u16 	%r44, %rs27, 256;
	or.b32  	%r45, %r43, %r44;
	cvt.u32.u16 	%r46, %rs17;
	or.b32  	%r47, %r45, %r46;
	cvt.u32.u16 	%r48, %rs18;
	shl.b32 	%r49, %r48, 24;
	cvt.u32.u16 	%r50, %rs20;
	shl.b32 	%r51, %r50, 16;
	or.b32  	%r52, %r51, %r49;
	and.b16  	%rs28, %rs19, 255;
	mul.wide.u16 	%r53, %rs28, 256;
	or.b32  	%r54, %r52, %r53;
	cvt.u32.u16 	%r55, %rs21;
	or.b32  	%r56, %r54, %r55;
	cvt.u32.u16 	%r57, %rs22;
	shl.b32 	%r58, %r57, 24;
	cvt.u32.u16 	%r59, %rs24;
	shl.b32 	%r60, %r59, 16;
	or.b32  	%r61, %r60, %r58;
	and.b16  	%rs29, %rs23, 255;
	mul.wide.u16 	%r62, %rs29, 256;
	or.b32  	%r63, %r61, %r62;
	cvt.u32.u16 	%r64, %rs25;
	or.b32  	%r65, %r63, %r64;
	ld.local.v4.u32 	{%r66, %r67, %r68, %r69}, [%rd1+16];
	mov.b32 	{%rs30, %rs31}, %r66;
	shr.u16 	%rs32, %rs30, 8;
	shr.u16 	%rs33, %rs31, 8;
	mov.b32 	{%rs34, %rs35}, %r67;
	shr.u16 	%rs36, %rs34, 8;
	shr.u16 	%rs37, %rs35, 8;
	mov.b32 	{%rs38, %rs39}, %r68;
	shr.u16 	%rs40, %rs38, 8;
	shr.u16 	%rs41, %rs39, 8;
	mov.b32 	{%rs42, %rs43}, %r69;
	shr.u16 	%rs44, %rs42, 8;
	shr.u16 	%rs45, %rs43, 8;
	cvt.u32.u16 	%r74, %rs30;
	shl.b32 	%r75, %r74, 24;
	cvt.u32.u16 	%r76, %rs32;
	shl.b32 	%r77, %r76, 16;
	or.b32  	%r78, %r77, %r75;
	and.b16  	%rs46, %rs31, 255;
	mul.wide.u16 	%r79, %rs46, 256;
	or.b32  	%r80, %r78, %r79;
	cvt.u32.u16 	%r81, %rs33;
	or.b32  	%r82, %r80, %r81;
	cvt.u32.u16 	%r83, %rs34;
	shl.b32 	%r84, %r83, 24;
	cvt.u32.u16 	%r85, %rs36;
	shl.b32 	%r86, %r85, 16;
	or.b32  	%r87, %r86, %r84;
	and.b16  	%rs47, %rs35, 255;
	mul.wide.u16 	%r88, %rs47, 256;
	or.b32  	%r89, %r87, %r88;
	cvt.u32.u16 	%r90, %rs37;
	or.b32  	%r91, %r89, %r90;
	cvt.u32.u16 	%r92, %rs38;
	shl.b32 	%r93, %r92, 24;
	cvt.u32.u16 	%r94, %rs40;
	shl.b32 	%r95, %r94, 16;
	or.b32  	%r96, %r95, %r93;
	and.b16  	%rs48, %rs39, 255;
	mul.wide.u16 	%r97, %rs48, 256;
	or.b32  	%r98, %r96, %r97;
	cvt.u32.u16 	%r99, %rs41;
	or.b32  	%r100, %r98, %r99;
	cvt.u32.u16 	%r101, %rs42;
	shl.b32 	%r102, %r101, 24;
	cvt.u32.u16 	%r103, %rs44;
	shl.b32 	%r104, %r103, 16;
	or.b32  	%r105, %r104, %r102;
	and.b16  	%rs49, %rs43, 255;
	mul.wide.u16 	%r106, %rs49, 256;
	or.b32  	%r107, %r105, %r106;
	cvt.u32.u16 	%r108, %rs45;
	or.b32  	%r109, %r107, %r108;
	ld.local.v4.u32 	{%r110, %r111, %r112, %r113}, [%rd1+32];
	mov.b32 	{%rs50, %rs51}, %r110;
	shr.u16 	%rs52, %rs50, 8;
	shr.u16 	%rs53, %rs51, 8;
	mov.b32 	{%rs54, %rs55}, %r111;
	shr.u16 	%rs56, %rs54, 8;
	shr.u16 	%rs57, %rs55, 8;
	mov.b32 	{%rs58, %rs59}, %r112;
	shr.u16 	%rs60, %rs58, 8;
	shr.u16 	%rs61, %rs59, 8;
	mov.b32 	{%rs62, %rs63}, %r113;
	shr.u16 	%rs64, %rs62, 8;
	shr.u16 	%rs65, %rs63, 8;
	cvt.u32.u16 	%r118, %rs50;
	shl.b32 	%r119, %r118, 24;
	cvt.u32.u16 	%r120, %rs52;
	shl.b32 	%r121, %r120, 16;
	or.b32  	%r122, %r121, %r119;
	and.b16  	%rs66, %rs51, 255;
	mul.wide.u16 	%r123, %rs66, 256;
	or.b32  	%r124, %r122, %r123;
	cvt.u32.u16 	%r125, %rs53;
	or.b32  	%r126, %r124, %r125;
	cvt.u32.u16 	%r127, %rs54;
	shl.b32 	%r128, %r127, 24;
	cvt.u32.u16 	%r129, %rs56;
	shl.b32 	%r130, %r129, 16;
	or.b32  	%r131, %r130, %r128;
	and.b16  	%rs67, %rs55, 255;
	mul.wide.u16 	%r132, %rs67, 256;
	or.b32  	%r133, %r131, %r132;
	cvt.u32.u16 	%r134, %rs57;
	or.b32  	%r135, %r133, %r134;
	cvt.u32.u16 	%r136, %rs58;
	shl.b32 	%r137, %r136, 24;
	cvt.u32.u16 	%r138, %rs60;
	shl.b32 	%r139, %r138, 16;
	or.b32  	%r140, %r139, %r137;
	and.b16  	%rs68, %rs59, 255;
	mul.wide.u16 	%r141, %rs68, 256;
	or.b32  	%r142, %r140, %r141;
	cvt.u32.u16 	%r143, %rs61;
	or.b32  	%r144, %r142, %r143;
	cvt.u32.u16 	%r145, %rs62;
	shl.b32 	%r146, %r145, 24;
	cvt.u32.u16 	%r147, %rs64;
	shl.b32 	%r148, %r147, 16;
	or.b32  	%r149, %r148, %r146;
	and.b16  	%rs69, %rs63, 255;
	mul.wide.u16 	%r150, %rs69, 256;
	or.b32  	%r151, %r149, %r150;
	cvt.u32.u16 	%r152, %rs65;
	or.b32  	%r153, %r151, %r152;
	ld.local.v4.u16 	{%rs70, %rs71, %rs72, %rs73}, [%rd1+48];
	shr.u16 	%rs75, %rs70, 8;
	shr.u16 	%rs77, %rs71, 8;
	shr.u16 	%rs79, %rs72, 8;
	shr.u16 	%rs81, %rs73, 8;
	cvt.u32.u16 	%r154, %rs70;
	shl.b32 	%r155, %r154, 24;
	cvt.u32.u16 	%r156, %rs75;
	shl.b32 	%r157, %r156, 16;
	or.b32  	%r158, %r157, %r155;
	and.b16  	%rs82, %rs71, 255;
	mul.wide.u16 	%r159, %rs82, 256;
	or.b32  	%r160, %r158, %r159;
	cvt.u32.u16 	%r161, %rs77;
	or.b32  	%r162, %r160, %r161;
	cvt.u32.u16 	%r163, %rs72;
	shl.b32 	%r164, %r163, 24;
	cvt.u32.u16 	%r165, %rs79;
	shl.b32 	%r166, %r165, 16;
	or.b32  	%r167, %r166, %r164;
	and.b16  	%rs83, %rs73, 255;
	mul.wide.u16 	%r168, %rs83, 256;
	or.b32  	%r169, %r167, %r168;
	cvt.u32.u16 	%r170, %rs81;
	or.b32  	%r171, %r169, %r170;
	ld.local.v4.u8 	{%rs84, %rs85, %rs86, %rs87}, [%rd1+56];
	cvt.u32.u16 	%r172, %rs84;
	shl.b32 	%r173, %r172, 24;
	cvt.u32.u16 	%r174, %rs85;
	shl.b32 	%r175, %r174, 16;
	or.b32  	%r176, %r175, %r173;
	mul.wide.u16 	%r177, %rs86, 256;
	or.b32  	%r178, %r176, %r177;
	cvt.u32.u16 	%r179, %rs87;
	or.b32  	%r180, %r178, %r179;
	ld.local.v2.u8 	{%rs89, %rs90}, [%rd1+60];
	cvt.u32.u16 	%r181, %rs89;
	shl.b32 	%r182, %r181, 24;
	cvt.u32.u16 	%r183, %rs90;
	shl.b32 	%r184, %r183, 16;
	or.b32  	%r185, %r184, %r182;
	shl.b32 	%r186, %r11, 3;
	and.b32  	%r187, %r186, 65280;
	or.b32  	%r188, %r185, %r187;
	cvt.u32.u16 	%r189, %rs8;
	and.b32  	%r190, %r189, 248;
	or.b32  	%r191, %r188, %r190;
	shr.u32 	%r192, %r47, 7;
	shl.b32 	%r193, %r46, 25;
	or.b32  	%r194, %r193, %r192;
	shr.u32 	%r195, %r43, 18;
	shl.b32 	%r196, %r47, 14;
	or.b32  	%r197, %r196, %r195;
	shr.u32 	%r198, %r47, 3;
	xor.b32  	%r199, %r197, %r198;
	xor.b32  	%r200, %r199, %r194;
	shr.u32 	%r201, %r176, 17;
	shl.b32 	%r202, %r180, 15;
	or.b32  	%r203, %r202, %r201;
	shr.u32 	%r204, %r176, 19;
	shl.b32 	%r205, %r180, 13;
	or.b32  	%r206, %r205, %r204;
	shr.u32 	%r207, %r178, 10;
	xor.b32  	%r208, %r206, %r207;
	xor.b32  	%r209, %r208, %r203;
	add.s32 	%r210, %r135, %r38;
	add.s32 	%r211, %r210, %r200;
	add.s32 	%r212, %r211, %r209;
	shr.u32 	%r213, %r56, 7;
	shl.b32 	%r214, %r55, 25;
	or.b32  	%r215, %r214, %r213;
	shr.u32 	%r216, %r52, 18;
	shl.b32 	%r217, %r56, 14;
	or.b32  	%r218, %r217, %r216;
	shr.u32 	%r219, %r56, 3;
	xor.b32  	%r220, %r218, %r219;
	xor.b32  	%r221, %r220, %r215;
	shr.u32 	%r222, %r185, 17;
	shl.b32 	%r223, %r191, 15;
	or.b32  	%r224, %r223, %r222;
	shr.u32 	%r225, %r185, 19;
	shl.b32 	%r226, %r191, 13;
	or.b32  	%r227, %r226, %r225;
	shr.u32 	%r228, %r188, 10;
	xor.b32  	%r229, %r227, %r228;
	xor.b32  	%r230, %r229, %r224;
	add.s32 	%r231, %r144, %r47;
	add.s32 	%r232, %r231, %r221;
	add.s32 	%r233, %r232, %r230;
	shr.u32 	%r234, %r65, 7;
	shl.b32 	%r235, %r64, 25;
	or.b32  	%r236, %r235, %r234;
	shr.u32 	%r237, %r61, 18;
	shl.b32 	%r238, %r65, 14;
	or.b32  	%r239, %r238, %r237;
	shr.u32 	%r240, %r65, 3;
	xor.b32  	%r241, %r239, %r240;
	xor.b32  	%r242, %r241, %r236;
	shf.l.wrap.b32 	%r243, %r212, %r212, 15;
	shf.l.wrap.b32 	%r244, %r212, %r212, 13;
	shr.u32 	%r245, %r212, 10;
	xor.b32  	%r246, %r244, %r245;
	xor.b32  	%r247, %r246, %r243;
	add.s32 	%r248, %r153, %r56;
	add.s32 	%r249, %r248, %r242;
	add.s32 	%r250, %r249, %r247;
	shr.u32 	%r251, %r82, 7;
	shl.b32 	%r252, %r81, 25;
	or.b32  	%r253, %r252, %r251;
	shr.u32 	%r254, %r78, 18;
	shl.b32 	%r255, %r82, 14;
	or.b32  	%r256, %r255, %r254;
	shr.u32 	%r257, %r82, 3;
	xor.b32  	%r258, %r256, %r257;
	xor.b32  	%r259, %r258, %r253;
	shf.l.wrap.b32 	%r260, %r233, %r233, 15;
	shf.l.wrap.b32 	%r261, %r233, %r233, 13;
	shr.u32 	%r262, %r233, 10;
	xor.b32  	%r263, %r261, %r262;
	xor.b32  	%r264, %r263, %r260;
	add.s32 	%r265, %r162, %r65;
	add.s32 	%r266, %r265, %r259;
	add.s32 	%r267, %r266, %r264;
	shr.u32 	%r268, %r91, 7;
	shl.b32 	%r269, %r90, 25;
	or.b32  	%r270, %r269, %r268;
	shr.u32 	%r271, %r87, 18;
	shl.b32 	%r272, %r91, 14;
	or.b32  	%r273, %r272, %r271;
	shr.u32 	%r274, %r91, 3;
	xor.b32  	%r275, %r273, %r274;
	xor.b32  	%r276, %r275, %r270;
	shf.l.wrap.b32 	%r277, %r250, %r250, 15;
	shf.l.wrap.b32 	%r278, %r250, %r250, 13;
	shr.u32 	%r279, %r250, 10;
	xor.b32  	%r280, %r278, %r279;
	xor.b32  	%r281, %r280, %r277;
	add.s32 	%r282, %r171, %r82;
	add.s32 	%r283, %r282, %r276;
	add.s32 	%r284, %r283, %r281;
	shr.u32 	%r285, %r100, 7;
	shl.b32 	%r286, %r99, 25;
	or.b32  	%r287, %r286, %r285;
	shr.u32 	%r288, %r96, 18;
	shl.b32 	%r289, %r100, 14;
	or.b32  	%r290, %r289, %r288;
	shr.u32 	%r291, %r100, 3;
	xor.b32  	%r292, %r290, %r291;
	xor.b32  	%r293, %r292, %r287;
	shf.l.wrap.b32 	%r294, %r267, %r267, 15;
	shf.l.wrap.b32 	%r295, %r267, %r267, 13;
	shr.u32 	%r296, %r267, 10;
	xor.b32  	%r297, %r295, %r296;
	xor.b32  	%r298, %r297, %r294;
	add.s32 	%r299, %r180, %r91;
	add.s32 	%r300, %r299, %r293;
	add.s32 	%r301, %r300, %r298;
	shr.u32 	%r302, %r109, 7;
	shl.b32 	%r303, %r108, 25;
	or.b32  	%r304, %r303, %r302;
	shr.u32 	%r305, %r105, 18;
	shl.b32 	%r306, %r109, 14;
	or.b32  	%r307, %r306, %r305;
	shr.u32 	%r308, %r109, 3;
	xor.b32  	%r309, %r307, %r308;
	xor.b32  	%r310, %r309, %r304;
	shf.l.wrap.b32 	%r311, %r284, %r284, 15;
	shf.l.wrap.b32 	%r312, %r284, %r284, 13;
	shr.u32 	%r313, %r284, 10;
	xor.b32  	%r314, %r312, %r313;
	xor.b32  	%r315, %r314, %r311;
	add.s32 	%r316, %r191, %r100;
	add.s32 	%r317, %r316, %r310;
	add.s32 	%r318, %r317, %r315;
	shr.u32 	%r319, %r126, 7;
	shl.b32 	%r320, %r125, 25;
	or.b32  	%r321, %r320, %r319;
	shr.u32 	%r322, %r122, 18;
	shl.b32 	%r323, %r126, 14;
	or.b32  	%r324, %r323, %r322;
	shr.u32 	%r325, %r126, 3;
	xor.b32  	%r326, %r324, %r325;
	xor.b32  	%r327, %r326, %r321;
	shf.l.wrap.b32 	%r328, %r301, %r301, 15;
	shf.l.wrap.b32 	%r329, %r301, %r301, 13;
	shr.u32 	%r330, %r301, 10;
	xor.b32  	%r331, %r329, %r330;
	xor.b32  	%r332, %r331, %r328;
	add.s32 	%r333, %r212, %r109;
	add.s32 	%r334, %r333, %r327;
	add.s32 	%r335, %r334, %r332;
	shr.u32 	%r336, %r135, 7;
	shl.b32 	%r337, %r134, 25;
	or.b32  	%r338, %r337, %r336;
	shr.u32 	%r339, %r131, 18;
	shl.b32 	%r340, %r135, 14;
	or.b32  	%r341, %r340, %r339;
	shr.u32 	%r342, %r135, 3;
	xor.b32  	%r343, %r341, %r342;
	xor.b32  	%r344, %r343, %r338;
	shf.l.wrap.b32 	%r345, %r318, %r318, 15;
	shf.l.wrap.b32 	%r346, %r318, %r318, 13;
	shr.u32 	%r347, %r318, 10;
	xor.b32  	%r348, %r346, %r347;
	xor.b32  	%r349, %r348, %r345;
	add.s32 	%r350, %r233, %r126;
	add.s32 	%r351, %r350, %r344;
	add.s32 	%r352, %r351, %r349;
	shr.u32 	%r353, %r144, 7;
	shl.b32 	%r354, %r143, 25;
	or.b32  	%r355, %r354, %r353;
	shr.u32 	%r356, %r140, 18;
	shl.b32 	%r357, %r144, 14;
	or.b32  	%r358, %r357, %r356;
	shr.u32 	%r359, %r144, 3;
	xor.b32  	%r360, %r358, %r359;
	xor.b32  	%r361, %r360, %r355;
	shf.l.wrap.b32 	%r362, %r335, %r335, 15;
	shf.l.wrap.b32 	%r363, %r335, %r335, 13;
	shr.u32 	%r364, %r335, 10;
	xor.b32  	%r365, %r363, %r364;
	xor.b32  	%r366, %r365, %r362;
	add.s32 	%r367, %r250, %r135;
	add.s32 	%r368, %r367, %r361;
	add.s32 	%r369, %r368, %r366;
	shr.u32 	%r370, %r153, 7;
	shl.b32 	%r371, %r152, 25;
	or.b32  	%r372, %r371, %r370;
	shr.u32 	%r373, %r149, 18;
	shl.b32 	%r374, %r153, 14;
	or.b32  	%r375, %r374, %r373;
	shr.u32 	%r376, %r153, 3;
	xor.b32  	%r377, %r375, %r376;
	xor.b32  	%r378, %r377, %r372;
	shf.l.wrap.b32 	%r379, %r352, %r352, 15;
	shf.l.wrap.b32 	%r380, %r352, %r352, 13;
	shr.u32 	%r381, %r352, 10;
	xor.b32  	%r382, %r380, %r381;
	xor.b32  	%r383, %r382, %r379;
	add.s32 	%r384, %r267, %r144;
	add.s32 	%r385, %r384, %r378;
	add.s32 	%r386, %r385, %r383;
	shr.u32 	%r387, %r162, 7;
	shl.b32 	%r388, %r161, 25;
	or.b32  	%r389, %r388, %r387;
	shr.u32 	%r390, %r158, 18;
	shl.b32 	%r391, %r162, 14;
	or.b32  	%r392, %r391, %r390;
	shr.u32 	%r393, %r162, 3;
	xor.b32  	%r394, %r392, %r393;
	xor.b32  	%r395, %r394, %r389;
	shf.l.wrap.b32 	%r396, %r369, %r369, 15;
	shf.l.wrap.b32 	%r397, %r369, %r369, 13;
	shr.u32 	%r398, %r369, 10;
	xor.b32  	%r399, %r397, %r398;
	xor.b32  	%r400, %r399, %r396;
	add.s32 	%r401, %r284, %r153;
	add.s32 	%r402, %r401, %r395;
	add.s32 	%r403, %r402, %r400;
	shr.u32 	%r404, %r171, 7;
	shl.b32 	%r405, %r170, 25;
	or.b32  	%r406, %r405, %r404;
	shr.u32 	%r407, %r167, 18;
	shl.b32 	%r408, %r171, 14;
	or.b32  	%r409, %r408, %r407;
	shr.u32 	%r410, %r171, 3;
	xor.b32  	%r411, %r409, %r410;
	xor.b32  	%r412, %r411, %r406;
	shf.l.wrap.b32 	%r413, %r386, %r386, 15;
	shf.l.wrap.b32 	%r414, %r386, %r386, 13;
	shr.u32 	%r415, %r386, 10;
	xor.b32  	%r416, %r414, %r415;
	xor.b32  	%r417, %r416, %r413;
	add.s32 	%r418, %r301, %r162;
	add.s32 	%r419, %r418, %r412;
	add.s32 	%r420, %r419, %r417;
	shr.u32 	%r421, %r180, 7;
	shl.b32 	%r422, %r179, 25;
	or.b32  	%r423, %r422, %r421;
	shr.u32 	%r424, %r176, 18;
	shl.b32 	%r425, %r180, 14;
	or.b32  	%r426, %r425, %r424;
	shr.u32 	%r427, %r180, 3;
	xor.b32  	%r428, %r426, %r427;
	xor.b32  	%r429, %r428, %r423;
	shf.l.wrap.b32 	%r430, %r403, %r403, 15;
	shf.l.wrap.b32 	%r431, %r403, %r403, 13;
	shr.u32 	%r432, %r403, 10;
	xor.b32  	%r433, %r431, %r432;
	xor.b32  	%r434, %r433, %r430;
	add.s32 	%r435, %r318, %r171;
	add.s32 	%r436, %r435, %r429;
	add.s32 	%r437, %r436, %r434;
	shr.u32 	%r438, %r191, 7;
	shl.b32 	%r439, %r11, 28;
	or.b32  	%r440, %r439, %r438;
	shr.u32 	%r441, %r185, 18;
	shl.b32 	%r442, %r191, 14;
	or.b32  	%r443, %r442, %r441;
	shr.u32 	%r444, %r191, 3;
	xor.b32  	%r445, %r443, %r444;
	xor.b32  	%r446, %r445, %r440;
	shf.l.wrap.b32 	%r447, %r420, %r420, 15;
	shf.l.wrap.b32 	%r448, %r420, %r420, 13;
	shr.u32 	%r449, %r420, 10;
	xor.b32  	%r450, %r448, %r449;
	xor.b32  	%r451, %r450, %r447;
	add.s32 	%r452, %r335, %r180;
	add.s32 	%r453, %r452, %r446;
	add.s32 	%r454, %r453, %r451;
	shf.l.wrap.b32 	%r455, %r212, %r212, 25;
	shf.l.wrap.b32 	%r456, %r212, %r212, 14;
	shr.u32 	%r457, %r212, 3;
	xor.b32  	%r458, %r456, %r457;
	xor.b32  	%r459, %r458, %r455;
	shf.l.wrap.b32 	%r460, %r437, %r437, 15;
	shf.l.wrap.b32 	%r461, %r437, %r437, 13;
	shr.u32 	%r462, %r437, 10;
	xor.b32  	%r463, %r461, %r462;
	xor.b32  	%r464, %r463, %r460;
	add.s32 	%r465, %r352, %r191;
	add.s32 	%r466, %r465, %r459;
	add.s32 	%r467, %r466, %r464;
	shf.l.wrap.b32 	%r468, %r233, %r233, 25;
	shf.l.wrap.b32 	%r469, %r233, %r233, 14;
	shr.u32 	%r470, %r233, 3;
	xor.b32  	%r471, %r469, %r470;
	xor.b32  	%r472, %r471, %r468;
	shf.l.wrap.b32 	%r473, %r454, %r454, 15;
	shf.l.wrap.b32 	%r474, %r454, %r454, 13;
	shr.u32 	%r475, %r454, 10;
	xor.b32  	%r476, %r474, %r475;
	xor.b32  	%r477, %r476, %r473;
	add.s32 	%r478, %r369, %r212;
	add.s32 	%r479, %r478, %r472;
	add.s32 	%r480, %r479, %r477;
	shf.l.wrap.b32 	%r481, %r250, %r250, 25;
	shf.l.wrap.b32 	%r482, %r250, %r250, 14;
	shr.u32 	%r483, %r250, 3;
	xor.b32  	%r484, %r482, %r483;
	xor.b32  	%r485, %r484, %r481;
	shf.l.wrap.b32 	%r486, %r467, %r467, 15;
	shf.l.wrap.b32 	%r487, %r467, %r467, 13;
	shr.u32 	%r488, %r467, 10;
	xor.b32  	%r489, %r487, %r488;
	xor.b32  	%r490, %r489, %r486;
	add.s32 	%r491, %r386, %r233;
	add.s32 	%r492, %r491, %r485;
	add.s32 	%r493, %r492, %r490;
	shf.l.wrap.b32 	%r494, %r267, %r267, 25;
	shf.l.wrap.b32 	%r495, %r267, %r267, 14;
	shr.u32 	%r496, %r267, 3;
	xor.b32  	%r497, %r495, %r496;
	xor.b32  	%r498, %r497, %r494;
	shf.l.wrap.b32 	%r499, %r480, %r480, 15;
	shf.l.wrap.b32 	%r500, %r480, %r480, 13;
	shr.u32 	%r501, %r480, 10;
	xor.b32  	%r502, %r500, %r501;
	xor.b32  	%r503, %r502, %r499;
	add.s32 	%r504, %r403, %r250;
	add.s32 	%r505, %r504, %r498;
	add.s32 	%r506, %r505, %r503;
	shf.l.wrap.b32 	%r507, %r284, %r284, 25;
	shf.l.wrap.b32 	%r508, %r284, %r284, 14;
	shr.u32 	%r509, %r284, 3;
	xor.b32  	%r510, %r508, %r509;
	xor.b32  	%r511, %r510, %r507;
	shf.l.wrap.b32 	%r512, %r493, %r493, 15;
	shf.l.wrap.b32 	%r513, %r493, %r493, 13;
	shr.u32 	%r514, %r493, 10;
	xor.b32  	%r515, %r513, %r514;
	xor.b32  	%r516, %r515, %r512;
	add.s32 	%r517, %r420, %r267;
	add.s32 	%r518, %r517, %r511;
	add.s32 	%r519, %r518, %r516;
	shf.l.wrap.b32 	%r520, %r301, %r301, 25;
	shf.l.wrap.b32 	%r521, %r301, %r301, 14;
	shr.u32 	%r522, %r301, 3;
	xor.b32  	%r523, %r521, %r522;
	xor.b32  	%r524, %r523, %r520;
	shf.l.wrap.b32 	%r525, %r506, %r506, 15;
	shf.l.wrap.b32 	%r526, %r506, %r506, 13;
	shr.u32 	%r527, %r506, 10;
	xor.b32  	%r528, %r526, %r527;
	xor.b32  	%r529, %r528, %r525;
	add.s32 	%r530, %r437, %r284;
	add.s32 	%r531, %r530, %r524;
	add.s32 	%r532, %r531, %r529;
	shf.l.wrap.b32 	%r533, %r318, %r318, 25;
	shf.l.wrap.b32 	%r534, %r318, %r318, 14;
	shr.u32 	%r535, %r318, 3;
	xor.b32  	%r536, %r534, %r535;
	xor.b32  	%r537, %r536, %r533;
	shf.l.wrap.b32 	%r538, %r519, %r519, 15;
	shf.l.wrap.b32 	%r539, %r519, %r519, 13;
	shr.u32 	%r540, %r519, 10;
	xor.b32  	%r541, %r539, %r540;
	xor.b32  	%r542, %r541, %r538;
	add.s32 	%r543, %r454, %r301;
	add.s32 	%r544, %r543, %r537;
	add.s32 	%r545, %r544, %r542;
	shf.l.wrap.b32 	%r546, %r335, %r335, 25;
	shf.l.wrap.b32 	%r547, %r335, %r335, 14;
	shr.u32 	%r548, %r335, 3;
	xor.b32  	%r549, %r547, %r548;
	xor.b32  	%r550, %r549, %r546;
	shf.l.wrap.b32 	%r551, %r532, %r532, 15;
	shf.l.wrap.b32 	%r552, %r532, %r532, 13;
	shr.u32 	%r553, %r532, 10;
	xor.b32  	%r554, %r552, %r553;
	xor.b32  	%r555, %r554, %r551;
	add.s32 	%r556, %r467, %r318;
	add.s32 	%r557, %r556, %r550;
	add.s32 	%r558, %r557, %r555;
	shf.l.wrap.b32 	%r559, %r352, %r352, 25;
	shf.l.wrap.b32 	%r560, %r352, %r352, 14;
	shr.u32 	%r561, %r352, 3;
	xor.b32  	%r562, %r560, %r561;
	xor.b32  	%r563, %r562, %r559;
	shf.l.wrap.b32 	%r564, %r545, %r545, 15;
	shf.l.wrap.b32 	%r565, %r545, %r545, 13;
	shr.u32 	%r566, %r545, 10;
	xor.b32  	%r567, %r565, %r566;
	xor.b32  	%r568, %r567, %r564;
	add.s32 	%r569, %r480, %r335;
	add.s32 	%r570, %r569, %r563;
	add.s32 	%r571, %r570, %r568;
	shf.l.wrap.b32 	%r572, %r369, %r369, 25;
	shf.l.wrap.b32 	%r573, %r369, %r369, 14;
	shr.u32 	%r574, %r369, 3;
	xor.b32  	%r575, %r573, %r574;
	xor.b32  	%r576, %r575, %r572;
	shf.l.wrap.b32 	%r577, %r558, %r558, 15;
	shf.l.wrap.b32 	%r578, %r558, %r558, 13;
	shr.u32 	%r579, %r558, 10;
	xor.b32  	%r580, %r578, %r579;
	xor.b32  	%r581, %r580, %r577;
	add.s32 	%r582, %r493, %r352;
	add.s32 	%r583, %r582, %r576;
	add.s32 	%r584, %r583, %r581;
	shf.l.wrap.b32 	%r585, %r386, %r386, 25;
	shf.l.wrap.b32 	%r586, %r386, %r386, 14;
	shr.u32 	%r587, %r386, 3;
	xor.b32  	%r588, %r586, %r587;
	xor.b32  	%r589, %r588, %r585;
	shf.l.wrap.b32 	%r590, %r571, %r571, 15;
	shf.l.wrap.b32 	%r591, %r571, %r571, 13;
	shr.u32 	%r592, %r571, 10;
	xor.b32  	%r593, %r591, %r592;
	xor.b32  	%r594, %r593, %r590;
	add.s32 	%r595, %r506, %r369;
	add.s32 	%r596, %r595, %r589;
	add.s32 	%r597, %r596, %r594;
	shf.l.wrap.b32 	%r598, %r403, %r403, 25;
	shf.l.wrap.b32 	%r599, %r403, %r403, 14;
	shr.u32 	%r600, %r403, 3;
	xor.b32  	%r601, %r599, %r600;
	xor.b32  	%r602, %r601, %r598;
	shf.l.wrap.b32 	%r603, %r584, %r584, 15;
	shf.l.wrap.b32 	%r604, %r584, %r584, 13;
	shr.u32 	%r605, %r584, 10;
	xor.b32  	%r606, %r604, %r605;
	xor.b32  	%r607, %r606, %r603;
	add.s32 	%r608, %r519, %r386;
	add.s32 	%r609, %r608, %r602;
	add.s32 	%r610, %r609, %r607;
	shf.l.wrap.b32 	%r611, %r420, %r420, 25;
	shf.l.wrap.b32 	%r612, %r420, %r420, 14;
	shr.u32 	%r613, %r420, 3;
	xor.b32  	%r614, %r612, %r613;
	xor.b32  	%r615, %r614, %r611;
	shf.l.wrap.b32 	%r616, %r597, %r597, 15;
	shf.l.wrap.b32 	%r617, %r597, %r597, 13;
	shr.u32 	%r618, %r597, 10;
	xor.b32  	%r619, %r617, %r618;
	xor.b32  	%r620, %r619, %r616;
	add.s32 	%r621, %r532, %r403;
	add.s32 	%r622, %r621, %r615;
	add.s32 	%r623, %r622, %r620;
	shf.l.wrap.b32 	%r624, %r437, %r437, 25;
	shf.l.wrap.b32 	%r625, %r437, %r437, 14;
	shr.u32 	%r626, %r437, 3;
	xor.b32  	%r627, %r625, %r626;
	xor.b32  	%r628, %r627, %r624;
	shf.l.wrap.b32 	%r629, %r610, %r610, 15;
	shf.l.wrap.b32 	%r630, %r610, %r610, 13;
	shr.u32 	%r631, %r610, 10;
	xor.b32  	%r632, %r630, %r631;
	xor.b32  	%r633, %r632, %r629;
	add.s32 	%r634, %r545, %r420;
	add.s32 	%r635, %r634, %r628;
	add.s32 	%r636, %r635, %r633;
	shf.l.wrap.b32 	%r637, %r454, %r454, 25;
	shf.l.wrap.b32 	%r638, %r454, %r454, 14;
	shr.u32 	%r639, %r454, 3;
	xor.b32  	%r640, %r638, %r639;
	xor.b32  	%r641, %r640, %r637;
	shf.l.wrap.b32 	%r642, %r623, %r623, 15;
	shf.l.wrap.b32 	%r643, %r623, %r623, 13;
	shr.u32 	%r644, %r623, 10;
	xor.b32  	%r645, %r643, %r644;
	xor.b32  	%r646, %r645, %r642;
	add.s32 	%r647, %r558, %r437;
	add.s32 	%r648, %r647, %r641;
	add.s32 	%r649, %r648, %r646;
	shf.l.wrap.b32 	%r650, %r467, %r467, 25;
	shf.l.wrap.b32 	%r651, %r467, %r467, 14;
	shr.u32 	%r652, %r467, 3;
	xor.b32  	%r653, %r651, %r652;
	xor.b32  	%r654, %r653, %r650;
	shf.l.wrap.b32 	%r655, %r636, %r636, 15;
	shf.l.wrap.b32 	%r656, %r636, %r636, 13;
	shr.u32 	%r657, %r636, 10;
	xor.b32  	%r658, %r656, %r657;
	xor.b32  	%r659, %r658, %r655;
	add.s32 	%r660, %r571, %r454;
	add.s32 	%r661, %r660, %r654;
	add.s32 	%r662, %r661, %r659;
	shf.l.wrap.b32 	%r663, %r480, %r480, 25;
	shf.l.wrap.b32 	%r664, %r480, %r480, 14;
	shr.u32 	%r665, %r480, 3;
	xor.b32  	%r666, %r664, %r665;
	xor.b32  	%r667, %r666, %r663;
	shf.l.wrap.b32 	%r668, %r649, %r649, 15;
	shf.l.wrap.b32 	%r669, %r649, %r649, 13;
	shr.u32 	%r670, %r649, 10;
	xor.b32  	%r671, %r669, %r670;
	xor.b32  	%r672, %r671, %r668;
	add.s32 	%r673, %r584, %r467;
	add.s32 	%r674, %r673, %r667;
	add.s32 	%r675, %r674, %r672;
	shf.l.wrap.b32 	%r676, %r493, %r493, 25;
	shf.l.wrap.b32 	%r677, %r493, %r493, 14;
	shr.u32 	%r678, %r493, 3;
	xor.b32  	%r679, %r677, %r678;
	xor.b32  	%r680, %r679, %r676;
	shf.l.wrap.b32 	%r681, %r662, %r662, 15;
	shf.l.wrap.b32 	%r682, %r662, %r662, 13;
	shr.u32 	%r683, %r662, 10;
	xor.b32  	%r684, %r682, %r683;
	xor.b32  	%r685, %r684, %r681;
	add.s32 	%r686, %r597, %r480;
	add.s32 	%r687, %r686, %r680;
	add.s32 	%r688, %r687, %r685;
	shf.l.wrap.b32 	%r689, %r506, %r506, 25;
	shf.l.wrap.b32 	%r690, %r506, %r506, 14;
	shr.u32 	%r691, %r506, 3;
	xor.b32  	%r692, %r690, %r691;
	xor.b32  	%r693, %r692, %r689;
	shf.l.wrap.b32 	%r694, %r675, %r675, 15;
	shf.l.wrap.b32 	%r695, %r675, %r675, 13;
	shr.u32 	%r696, %r675, 10;
	xor.b32  	%r697, %r695, %r696;
	xor.b32  	%r698, %r697, %r694;
	add.s32 	%r699, %r610, %r493;
	add.s32 	%r700, %r699, %r693;
	add.s32 	%r701, %r700, %r698;
	shf.l.wrap.b32 	%r702, %r519, %r519, 25;
	shf.l.wrap.b32 	%r703, %r519, %r519, 14;
	shr.u32 	%r704, %r519, 3;
	xor.b32  	%r705, %r703, %r704;
	xor.b32  	%r706, %r705, %r702;
	shf.l.wrap.b32 	%r707, %r688, %r688, 15;
	shf.l.wrap.b32 	%r708, %r688, %r688, 13;
	shr.u32 	%r709, %r688, 10;
	xor.b32  	%r710, %r708, %r709;
	xor.b32  	%r711, %r710, %r707;
	add.s32 	%r712, %r623, %r506;
	add.s32 	%r713, %r712, %r706;
	add.s32 	%r714, %r713, %r711;
	shf.l.wrap.b32 	%r715, %r532, %r532, 25;
	shf.l.wrap.b32 	%r716, %r532, %r532, 14;
	shr.u32 	%r717, %r532, 3;
	xor.b32  	%r718, %r716, %r717;
	xor.b32  	%r719, %r718, %r715;
	shf.l.wrap.b32 	%r720, %r701, %r701, 15;
	shf.l.wrap.b32 	%r721, %r701, %r701, 13;
	shr.u32 	%r722, %r701, 10;
	xor.b32  	%r723, %r721, %r722;
	xor.b32  	%r724, %r723, %r720;
	add.s32 	%r725, %r636, %r519;
	add.s32 	%r726, %r725, %r719;
	add.s32 	%r727, %r726, %r724;
	shf.l.wrap.b32 	%r728, %r545, %r545, 25;
	shf.l.wrap.b32 	%r729, %r545, %r545, 14;
	shr.u32 	%r730, %r545, 3;
	xor.b32  	%r731, %r729, %r730;
	xor.b32  	%r732, %r731, %r728;
	shf.l.wrap.b32 	%r733, %r714, %r714, 15;
	shf.l.wrap.b32 	%r734, %r714, %r714, 13;
	shr.u32 	%r735, %r714, 10;
	xor.b32  	%r736, %r734, %r735;
	xor.b32  	%r737, %r736, %r733;
	add.s32 	%r738, %r649, %r532;
	add.s32 	%r739, %r738, %r732;
	add.s32 	%r740, %r739, %r737;
	shf.l.wrap.b32 	%r741, %r558, %r558, 25;
	shf.l.wrap.b32 	%r742, %r558, %r558, 14;
	shr.u32 	%r743, %r558, 3;
	xor.b32  	%r744, %r742, %r743;
	xor.b32  	%r745, %r744, %r741;
	shf.l.wrap.b32 	%r746, %r727, %r727, 15;
	shf.l.wrap.b32 	%r747, %r727, %r727, 13;
	shr.u32 	%r748, %r727, 10;
	xor.b32  	%r749, %r747, %r748;
	xor.b32  	%r750, %r749, %r746;
	add.s32 	%r751, %r662, %r545;
	add.s32 	%r752, %r751, %r745;
	add.s32 	%r753, %r752, %r750;
	shf.l.wrap.b32 	%r754, %r571, %r571, 25;
	shf.l.wrap.b32 	%r755, %r571, %r571, 14;
	shr.u32 	%r756, %r571, 3;
	xor.b32  	%r757, %r755, %r756;
	xor.b32  	%r758, %r757, %r754;
	shf.l.wrap.b32 	%r759, %r740, %r740, 15;
	shf.l.wrap.b32 	%r760, %r740, %r740, 13;
	shr.u32 	%r761, %r740, 10;
	xor.b32  	%r762, %r760, %r761;
	xor.b32  	%r763, %r762, %r759;
	add.s32 	%r764, %r675, %r558;
	add.s32 	%r765, %r764, %r758;
	add.s32 	%r766, %r765, %r763;
	shf.l.wrap.b32 	%r767, %r584, %r584, 25;
	shf.l.wrap.b32 	%r768, %r584, %r584, 14;
	shr.u32 	%r769, %r584, 3;
	xor.b32  	%r770, %r768, %r769;
	xor.b32  	%r771, %r770, %r767;
	shf.l.wrap.b32 	%r772, %r753, %r753, 15;
	shf.l.wrap.b32 	%r773, %r753, %r753, 13;
	shr.u32 	%r774, %r753, 10;
	xor.b32  	%r775, %r773, %r774;
	xor.b32  	%r776, %r775, %r772;
	add.s32 	%r777, %r688, %r571;
	add.s32 	%r778, %r777, %r771;
	add.s32 	%r779, %r778, %r776;
	shf.l.wrap.b32 	%r780, %r597, %r597, 25;
	shf.l.wrap.b32 	%r781, %r597, %r597, 14;
	shr.u32 	%r782, %r597, 3;
	xor.b32  	%r783, %r781, %r782;
	xor.b32  	%r784, %r783, %r780;
	shf.l.wrap.b32 	%r785, %r766, %r766, 15;
	shf.l.wrap.b32 	%r786, %r766, %r766, 13;
	shr.u32 	%r787, %r766, 10;
	xor.b32  	%r788, %r786, %r787;
	xor.b32  	%r789, %r788, %r785;
	add.s32 	%r790, %r701, %r584;
	add.s32 	%r791, %r790, %r784;
	add.s32 	%r792, %r791, %r789;
	shf.l.wrap.b32 	%r793, %r610, %r610, 25;
	shf.l.wrap.b32 	%r794, %r610, %r610, 14;
	shr.u32 	%r795, %r610, 3;
	xor.b32  	%r796, %r794, %r795;
	xor.b32  	%r797, %r796, %r793;
	shf.l.wrap.b32 	%r798, %r779, %r779, 15;
	shf.l.wrap.b32 	%r799, %r779, %r779, 13;
	shr.u32 	%r800, %r779, 10;
	xor.b32  	%r801, %r799, %r800;
	xor.b32  	%r802, %r801, %r798;
	add.s32 	%r803, %r714, %r597;
	add.s32 	%r804, %r803, %r797;
	add.s32 	%r805, %r804, %r802;
	shf.l.wrap.b32 	%r806, %r623, %r623, 25;
	shf.l.wrap.b32 	%r807, %r623, %r623, 14;
	shr.u32 	%r808, %r623, 3;
	xor.b32  	%r809, %r807, %r808;
	xor.b32  	%r810, %r809, %r806;
	shf.l.wrap.b32 	%r811, %r792, %r792, 15;
	shf.l.wrap.b32 	%r812, %r792, %r792, 13;
	shr.u32 	%r813, %r792, 10;
	xor.b32  	%r814, %r812, %r813;
	xor.b32  	%r815, %r814, %r811;
	add.s32 	%r816, %r727, %r610;
	add.s32 	%r817, %r816, %r810;
	add.s32 	%r818, %r817, %r815;
	shf.l.wrap.b32 	%r819, %r636, %r636, 25;
	shf.l.wrap.b32 	%r820, %r636, %r636, 14;
	shr.u32 	%r821, %r636, 3;
	xor.b32  	%r822, %r820, %r821;
	xor.b32  	%r823, %r822, %r819;
	shf.l.wrap.b32 	%r824, %r805, %r805, 15;
	shf.l.wrap.b32 	%r825, %r805, %r805, 13;
	shr.u32 	%r826, %r805, 10;
	xor.b32  	%r827, %r825, %r826;
	xor.b32  	%r828, %r827, %r824;
	add.s32 	%r829, %r740, %r623;
	add.s32 	%r830, %r829, %r823;
	add.s32 	%r831, %r830, %r828;
	shf.l.wrap.b32 	%r832, %r649, %r649, 25;
	shf.l.wrap.b32 	%r833, %r649, %r649, 14;
	shr.u32 	%r834, %r649, 3;
	xor.b32  	%r835, %r833, %r834;
	xor.b32  	%r836, %r835, %r832;
	shf.l.wrap.b32 	%r837, %r818, %r818, 15;
	shf.l.wrap.b32 	%r838, %r818, %r818, 13;
	shr.u32 	%r839, %r818, 10;
	xor.b32  	%r840, %r838, %r839;
	xor.b32  	%r841, %r840, %r837;
	add.s32 	%r842, %r753, %r636;
	add.s32 	%r843, %r842, %r836;
	add.s32 	%r844, %r843, %r841;
	shf.l.wrap.b32 	%r845, %r662, %r662, 25;
	shf.l.wrap.b32 	%r846, %r662, %r662, 14;
	shr.u32 	%r847, %r662, 3;
	xor.b32  	%r848, %r846, %r847;
	xor.b32  	%r849, %r848, %r845;
	shf.l.wrap.b32 	%r850, %r831, %r831, 15;
	shf.l.wrap.b32 	%r851, %r831, %r831, 13;
	shr.u32 	%r852, %r831, 10;
	xor.b32  	%r853, %r851, %r852;
	xor.b32  	%r854, %r853, %r850;
	add.s32 	%r855, %r766, %r649;
	add.s32 	%r856, %r855, %r849;
	add.s32 	%r857, %r856, %r854;
	shf.l.wrap.b32 	%r858, %r675, %r675, 25;
	shf.l.wrap.b32 	%r859, %r675, %r675, 14;
	shr.u32 	%r860, %r675, 3;
	xor.b32  	%r861, %r859, %r860;
	xor.b32  	%r862, %r861, %r858;
	shf.l.wrap.b32 	%r863, %r844, %r844, 15;
	shf.l.wrap.b32 	%r864, %r844, %r844, 13;
	shr.u32 	%r865, %r844, 10;
	xor.b32  	%r866, %r864, %r865;
	xor.b32  	%r867, %r866, %r863;
	add.s32 	%r868, %r779, %r662;
	add.s32 	%r869, %r868, %r862;
	add.s32 	%r870, %r869, %r867;
	shf.l.wrap.b32 	%r871, %r688, %r688, 25;
	shf.l.wrap.b32 	%r872, %r688, %r688, 14;
	shr.u32 	%r873, %r688, 3;
	xor.b32  	%r874, %r872, %r873;
	xor.b32  	%r875, %r874, %r871;
	shf.l.wrap.b32 	%r876, %r857, %r857, 15;
	shf.l.wrap.b32 	%r877, %r857, %r857, 13;
	shr.u32 	%r878, %r857, 10;
	xor.b32  	%r879, %r877, %r878;
	xor.b32  	%r880, %r879, %r876;
	add.s32 	%r881, %r792, %r675;
	add.s32 	%r882, %r881, %r875;
	add.s32 	%r883, %r882, %r880;
	ld.const.u32 	%r884, [K256];
	add.s32 	%r885, %r884, %r38;
	add.s32 	%r886, %r885, 1446884106;
	add.s32 	%r887, %r885, -1182902091;
	shf.l.wrap.b32 	%r888, %r886, %r886, 26;
	shf.l.wrap.b32 	%r889, %r886, %r886, 21;
	xor.b32  	%r890, %r888, %r889;
	shf.l.wrap.b32 	%r891, %r886, %r886, 7;
	xor.b32  	%r892, %r890, %r891;
	and.b32  	%r893, %r886, 1359893119;
	mov.u32 	%r894, -1446884107;
	sub.s32 	%r895, %r894, %r885;
	and.b32  	%r896, %r895, -1694144372;
	or.b32  	%r897, %r893, %r896;
	add.s32 	%r898, %r897, %r892;
	ld.const.u32 	%r899, [K256+4];
	add.s32 	%r900, %r898, %r899;
	add.s32 	%r901, %r900, %r47;
	shf.l.wrap.b32 	%r902, %r887, %r887, 30;
	shf.l.wrap.b32 	%r903, %r887, %r887, 19;
	xor.b32  	%r904, %r902, %r903;
	shf.l.wrap.b32 	%r905, %r887, %r887, 10;
	xor.b32  	%r906, %r904, %r905;
	and.b32  	%r907, %r887, -781301534;
	or.b32  	%r908, %r907, 704751109;
	add.s32 	%r909, %r906, %r908;
	add.s32 	%r910, %r909, %r901;
	add.s32 	%r911, %r901, 1542638877;
	add.s32 	%r912, %r910, 528734635;
	shf.l.wrap.b32 	%r913, %r911, %r911, 26;
	shf.l.wrap.b32 	%r914, %r911, %r911, 21;
	xor.b32  	%r915, %r913, %r914;
	shf.l.wrap.b32 	%r916, %r911, %r911, 7;
	xor.b32  	%r917, %r915, %r916;
	and.b32  	%r918, %r911, %r886;
	mov.u32 	%r919, 604844770;
	sub.s32 	%r920, %r919, %r901;
	and.b32  	%r921, %r920, 1359893119;
	or.b32  	%r922, %r918, %r921;
	add.s32 	%r923, %r922, %r917;
	ld.const.u32 	%r924, [K256+8];
	add.s32 	%r925, %r923, %r924;
	add.s32 	%r926, %r925, %r56;
	shf.l.wrap.b32 	%r927, %r912, %r912, 30;
	shf.l.wrap.b32 	%r928, %r912, %r912, 19;
	xor.b32  	%r929, %r927, %r928;
	shf.l.wrap.b32 	%r930, %r912, %r912, 10;
	xor.b32  	%r931, %r929, %r930;
	xor.b32  	%r932, %r887, 1779033703;
	and.b32  	%r933, %r912, %r932;
	and.b32  	%r934, %r887, 1779033703;
	xor.b32  	%r935, %r933, %r934;
	add.s32 	%r936, %r931, %r935;
	add.s32 	%r937, %r936, %r926;
	add.s32 	%r938, %r926, 1449989905;
	add.s32 	%r939, %r937, -1694144372;
	shf.l.wrap.b32 	%r940, %r938, %r938, 26;
	shf.l.wrap.b32 	%r941, %r938, %r938, 21;
	xor.b32  	%r942, %r940, %r941;
	shf.l.wrap.b32 	%r943, %r938, %r938, 7;
	xor.b32  	%r944, %r942, %r943;
	and.b32  	%r945, %r938, %r911;
	mov.u32 	%r946, -1449989906;
	sub.s32 	%r947, %r946, %r926;
	and.b32  	%r948, %r886, %r947;
	or.b32  	%r949, %r945, %r948;
	add.s32 	%r950, %r949, %r944;
	ld.const.u32 	%r951, [K256+12];
	add.s32 	%r952, %r950, %r951;
	add.s32 	%r953, %r952, %r65;
	shf.l.wrap.b32 	%r954, %r939, %r939, 30;
	shf.l.wrap.b32 	%r955, %r939, %r939, 19;
	xor.b32  	%r956, %r954, %r955;
	shf.l.wrap.b32 	%r957, %r939, %r939, 10;
	xor.b32  	%r958, %r956, %r957;
	xor.b32  	%r959, %r912, %r887;
	and.b32  	%r960, %r939, %r959;
	and.b32  	%r961, %r912, %r887;
	xor.b32  	%r962, %r960, %r961;
	add.s32 	%r963, %r958, %r962;
	add.s32 	%r964, %r963, %r953;
	add.s32 	%r965, %r953, -1156040474;
	add.s32 	%r966, %r964, 1359893119;
	shf.l.wrap.b32 	%r967, %r965, %r965, 26;
	shf.l.wrap.b32 	%r968, %r965, %r965, 21;
	xor.b32  	%r969, %r967, %r968;
	shf.l.wrap.b32 	%r970, %r965, %r965, 7;
	xor.b32  	%r971, %r969, %r970;
	and.b32  	%r972, %r965, %r938;
	mov.u32 	%r973, 1156040473;
	sub.s32 	%r974, %r973, %r953;
	and.b32  	%r975, %r911, %r974;
	or.b32  	%r976, %r972, %r975;
	add.s32 	%r977, %r976, %r886;
	add.s32 	%r978, %r977, %r971;
	ld.const.u32 	%r979, [K256+16];
	add.s32 	%r980, %r978, %r979;
	add.s32 	%r981, %r980, %r82;
	shf.l.wrap.b32 	%r982, %r966, %r966, 30;
	shf.l.wrap.b32 	%r983, %r966, %r966, 19;
	xor.b32  	%r984, %r982, %r983;
	shf.l.wrap.b32 	%r985, %r966, %r966, 10;
	xor.b32  	%r986, %r984, %r985;
	xor.b32  	%r987, %r939, %r912;
	and.b32  	%r988, %r966, %r987;
	and.b32  	%r989, %r939, %r912;
	xor.b32  	%r990, %r988, %r989;
	add.s32 	%r991, %r986, %r990;
	add.s32 	%r992, %r981, %r887;
	add.s32 	%r993, %r991, %r981;
	shf.l.wrap.b32 	%r994, %r992, %r992, 26;
	shf.l.wrap.b32 	%r995, %r992, %r992, 21;
	xor.b32  	%r996, %r994, %r995;
	shf.l.wrap.b32 	%r997, %r992, %r992, 7;
	xor.b32  	%r998, %r996, %r997;
	and.b32  	%r999, %r992, %r965;
	not.b32 	%r1000, %r992;
	and.b32  	%r1001, %r938, %r1000;
	or.b32  	%r1002, %r999, %r1001;
	add.s32 	%r1003, %r1002, %r911;
	add.s32 	%r1004, %r1003, %r998;
	ld.const.u32 	%r1005, [K256+20];
	add.s32 	%r1006, %r1004, %r1005;
	add.s32 	%r1007, %r1006, %r91;
	shf.l.wrap.b32 	%r1008, %r993, %r993, 30;
	shf.l.wrap.b32 	%r1009, %r993, %r993, 19;
	xor.b32  	%r1010, %r1008, %r1009;
	shf.l.wrap.b32 	%r1011, %r993, %r993, 10;
	xor.b32  	%r1012, %r1010, %r1011;
	xor.b32  	%r1013, %r966, %r939;
	and.b32  	%r1014, %r993, %r1013;
	and.b32  	%r1015, %r966, %r939;
	xor.b32  	%r1016, %r1014, %r1015;
	add.s32 	%r1017, %r1012, %r1016;
	add.s32 	%r1018, %r1007, %r912;
	add.s32 	%r1019, %r1017, %r1007;
	shf.l.wrap.b32 	%r1020, %r1018, %r1018, 26;
	shf.l.wrap.b32 	%r1021, %r1018, %r1018, 21;
	xor.b32  	%r1022, %r1020, %r1021;
	shf.l.wrap.b32 	%r1023, %r1018, %r1018, 7;
	xor.b32  	%r1024, %r1022, %r1023;
	and.b32  	%r1025, %r1018, %r992;
	not.b32 	%r1026, %r1018;
	and.b32  	%r1027, %r965, %r1026;
	or.b32  	%r1028, %r1025, %r1027;
	add.s32 	%r1029, %r1028, %r938;
	add.s32 	%r1030, %r1029, %r1024;
	ld.const.u32 	%r1031, [K256+24];
	add.s32 	%r1032, %r1030, %r1031;
	add.s32 	%r1033, %r1032, %r100;
	shf.l.wrap.b32 	%r1034, %r1019, %r1019, 30;
	shf.l.wrap.b32 	%r1035, %r1019, %r1019, 19;
	xor.b32  	%r1036, %r1034, %r1035;
	shf.l.wrap.b32 	%r1037, %r1019, %r1019, 10;
	xor.b32  	%r1038, %r1036, %r1037;
	xor.b32  	%r1039, %r993, %r966;
	and.b32  	%r1040, %r1019, %r1039;
	and.b32  	%r1041, %r993, %r966;
	xor.b32  	%r1042, %r1040, %r1041;
	add.s32 	%r1043, %r1038, %r1042;
	add.s32 	%r1044, %r1033, %r939;
	add.s32 	%r1045, %r1043, %r1033;
	shf.l.wrap.b32 	%r1046, %r1044, %r1044, 26;
	shf.l.wrap.b32 	%r1047, %r1044, %r1044, 21;
	xor.b32  	%r1048, %r1046, %r1047;
	shf.l.wrap.b32 	%r1049, %r1044, %r1044, 7;
	xor.b32  	%r1050, %r1048, %r1049;
	and.b32  	%r1051, %r1044, %r1018;
	not.b32 	%r1052, %r1044;
	and.b32  	%r1053, %r992, %r1052;
	or.b32  	%r1054, %r1051, %r1053;
	add.s32 	%r1055, %r1054, %r965;
	add.s32 	%r1056, %r1055, %r1050;
	ld.const.u32 	%r1057, [K256+28];
	add.s32 	%r1058, %r1056, %r1057;
	add.s32 	%r1059, %r1058, %r109;
	shf.l.wrap.b32 	%r1060, %r1045, %r1045, 30;
	shf.l.wrap.b32 	%r1061, %r1045, %r1045, 19;
	xor.b32  	%r1062, %r1060, %r1061;
	shf.l.wrap.b32 	%r1063, %r1045, %r1045, 10;
	xor.b32  	%r1064, %r1062, %r1063;
	xor.b32  	%r1065, %r1019, %r993;
	and.b32  	%r1066, %r1045, %r1065;
	and.b32  	%r1067, %r1019, %r993;
	xor.b32  	%r1068, %r1066, %r1067;
	add.s32 	%r1069, %r1064, %r1068;
	add.s32 	%r1070, %r1059, %r966;
	add.s32 	%r1071, %r1069, %r1059;
	shf.l.wrap.b32 	%r1072, %r1070, %r1070, 26;
	shf.l.wrap.b32 	%r1073, %r1070, %r1070, 21;
	xor.b32  	%r1074, %r1072, %r1073;
	shf.l.wrap.b32 	%r1075, %r1070, %r1070, 7;
	xor.b32  	%r1076, %r1074, %r1075;
	and.b32  	%r1077, %r1070, %r1044;
	not.b32 	%r1078, %r1070;
	and.b32  	%r1079, %r1018, %r1078;
	or.b32  	%r1080, %r1077, %r1079;
	add.s32 	%r1081, %r1080, %r992;
	add.s32 	%r1082, %r1081, %r1076;
	ld.const.u32 	%r1083, [K256+32];
	add.s32 	%r1084, %r1082, %r1083;
	add.s32 	%r1085, %r1084, %r126;
	shf.l.wrap.b32 	%r1086, %r1071, %r1071, 30;
	shf.l.wrap.b32 	%r1087, %r1071, %r1071, 19;
	xor.b32  	%r1088, %r1086, %r1087;
	shf.l.wrap.b32 	%r1089, %r1071, %r1071, 10;
	xor.b32  	%r1090, %r1088, %r1089;
	xor.b32  	%r1091, %r1045, %r1019;
	and.b32  	%r1092, %r1071, %r1091;
	and.b32  	%r1093, %r1045, %r1019;
	xor.b32  	%r1094, %r1092, %r1093;
	add.s32 	%r1095, %r1090, %r1094;
	add.s32 	%r1096, %r1085, %r993;
	add.s32 	%r1097, %r1095, %r1085;
	shf.l.wrap.b32 	%r1098, %r1096, %r1096, 26;
	shf.l.wrap.b32 	%r1099, %r1096, %r1096, 21;
	xor.b32  	%r1100, %r1098, %r1099;
	shf.l.wrap.b32 	%r1101, %r1096, %r1096, 7;
	xor.b32  	%r1102, %r1100, %r1101;
	and.b32  	%r1103, %r1096, %r1070;
	not.b32 	%r1104, %r1096;
	and.b32  	%r1105, %r1044, %r1104;
	or.b32  	%r1106, %r1103, %r1105;
	add.s32 	%r1107, %r1106, %r1018;
	add.s32 	%r1108, %r1107, %r1102;
	ld.const.u32 	%r1109, [K256+36];
	add.s32 	%r1110, %r1108, %r1109;
	add.s32 	%r1111, %r1110, %r135;
	shf.l.wrap.b32 	%r1112, %r1097, %r1097, 30;
	shf.l.wrap.b32 	%r1113, %r1097, %r1097, 19;
	xor.b32  	%r1114, %r1112, %r1113;
	shf.l.wrap.b32 	%r1115, %r1097, %r1097, 10;
	xor.b32  	%r1116, %r1114, %r1115;
	xor.b32  	%r1117, %r1071, %r1045;
	and.b32  	%r1118, %r1097, %r1117;
	and.b32  	%r1119, %r1071, %r1045;
	xor.b32  	%r1120, %r1118, %r1119;
	add.s32 	%r1121, %r1116, %r1120;
	add.s32 	%r1122, %r1111, %r1019;
	add.s32 	%r1123, %r1121, %r1111;
	shf.l.wrap.b32 	%r1124, %r1122, %r1122, 26;
	shf.l.wrap.b32 	%r1125, %r1122, %r1122, 21;
	xor.b32  	%r1126, %r1124, %r1125;
	shf.l.wrap.b32 	%r1127, %r1122, %r1122, 7;
	xor.b32  	%r1128, %r1126, %r1127;
	and.b32  	%r1129, %r1122, %r1096;
	not.b32 	%r1130, %r1122;
	and.b32  	%r1131, %r1070, %r1130;
	or.b32  	%r1132, %r1129, %r1131;
	add.s32 	%r1133, %r1132, %r1044;
	add.s32 	%r1134, %r1133, %r1128;
	ld.const.u32 	%r1135, [K256+40];
	add.s32 	%r1136, %r1134, %r1135;
	add.s32 	%r1137, %r1136, %r144;
	shf.l.wrap.b32 	%r1138, %r1123, %r1123, 30;
	shf.l.wrap.b32 	%r1139, %r1123, %r1123, 19;
	xor.b32  	%r1140, %r1138, %r1139;
	shf.l.wrap.b32 	%r1141, %r1123, %r1123, 10;
	xor.b32  	%r1142, %r1140, %r1141;
	xor.b32  	%r1143, %r1097, %r1071;
	and.b32  	%r1144, %r1123, %r1143;
	and.b32  	%r1145, %r1097, %r1071;
	xor.b32  	%r1146, %r1144, %r1145;
	add.s32 	%r1147, %r1142, %r1146;
	add.s32 	%r1148, %r1137, %r1045;
	add.s32 	%r1149, %r1147, %r1137;
	shf.l.wrap.b32 	%r1150, %r1148, %r1148, 26;
	shf.l.wrap.b32 	%r1151, %r1148, %r1148, 21;
	xor.b32  	%r1152, %r1150, %r1151;
	shf.l.wrap.b32 	%r1153, %r1148, %r1148, 7;
	xor.b32  	%r1154, %r1152, %r1153;
	and.b32  	%r1155, %r1148, %r1122;
	not.b32 	%r1156, %r1148;
	and.b32  	%r1157, %r1096, %r1156;
	or.b32  	%r1158, %r1155, %r1157;
	add.s32 	%r1159, %r1158, %r1070;
	add.s32 	%r1160, %r1159, %r1154;
	ld.const.u32 	%r1161, [K256+44];
	add.s32 	%r1162, %r1160, %r1161;
	add.s32 	%r1163, %r1162, %r153;
	shf.l.wrap.b32 	%r1164, %r1149, %r1149, 30;
	shf.l.wrap.b32 	%r1165, %r1149, %r1149, 19;
	xor.b32  	%r1166, %r1164, %r1165;
	shf.l.wrap.b32 	%r1167, %r1149, %r1149, 10;
	xor.b32  	%r1168, %r1166, %r1167;
	xor.b32  	%r1169, %r1123, %r1097;
	and.b32  	%r1170, %r1149, %r1169;
	and.b32  	%r1171, %r1123, %r1097;
	xor.b32  	%r1172, %r1170, %r1171;
	add.s32 	%r1173, %r1168, %r1172;
	add.s32 	%r1174, %r1163, %r1071;
	add.s32 	%r1175, %r1173, %r1163;
	shf.l.wrap.b32 	%r1176, %r1174, %r1174, 26;
	shf.l.wrap.b32 	%r1177, %r1174, %r1174, 21;
	xor.b32  	%r1178, %r1176, %r1177;
	shf.l.wrap.b32 	%r1179, %r1174, %r1174, 7;
	xor.b32  	%r1180, %r1178, %r1179;
	and.b32  	%r1181, %r1174, %r1148;
	not.b32 	%r1182, %r1174;
	and.b32  	%r1183, %r1122, %r1182;
	or.b32  	%r1184, %r1181, %r1183;
	add.s32 	%r1185, %r1184, %r1096;
	add.s32 	%r1186, %r1185, %r1180;
	ld.const.u32 	%r1187, [K256+48];
	add.s32 	%r1188, %r1186, %r1187;
	add.s32 	%r1189, %r1188, %r162;
	shf.l.wrap.b32 	%r1190, %r1175, %r1175, 30;
	shf.l.wrap.b32 	%r1191, %r1175, %r1175, 19;
	xor.b32  	%r1192, %r1190, %r1191;
	shf.l.wrap.b32 	%r1193, %r1175, %r1175, 10;
	xor.b32  	%r1194, %r1192, %r1193;
	xor.b32  	%r1195, %r1149, %r1123;
	and.b32  	%r1196, %r1175, %r1195;
	and.b32  	%r1197, %r1149, %r1123;
	xor.b32  	%r1198, %r1196, %r1197;
	add.s32 	%r1199, %r1194, %r1198;
	add.s32 	%r1200, %r1189, %r1097;
	add.s32 	%r1201, %r1199, %r1189;
	shf.l.wrap.b32 	%r1202, %r1200, %r1200, 26;
	shf.l.wrap.b32 	%r1203, %r1200, %r1200, 21;
	xor.b32  	%r1204, %r1202, %r1203;
	shf.l.wrap.b32 	%r1205, %r1200, %r1200, 7;
	xor.b32  	%r1206, %r1204, %r1205;
	and.b32  	%r1207, %r1200, %r1174;
	not.b32 	%r1208, %r1200;
	and.b32  	%r1209, %r1148, %r1208;
	or.b32  	%r1210, %r1207, %r1209;
	add.s32 	%r1211, %r1210, %r1122;
	add.s32 	%r1212, %r1211, %r1206;
	ld.const.u32 	%r1213, [K256+52];
	add.s32 	%r1214, %r1212, %r1213;
	add.s32 	%r1215, %r1214, %r171;
	shf.l.wrap.b32 	%r1216, %r1201, %r1201, 30;
	shf.l.wrap.b32 	%r1217, %r1201, %r1201, 19;
	xor.b32  	%r1218, %r1216, %r1217;
	shf.l.wrap.b32 	%r1219, %r1201, %r1201, 10;
	xor.b32  	%r1220, %r1218, %r1219;
	xor.b32  	%r1221, %r1175, %r1149;
	and.b32  	%r1222, %r1201, %r1221;
	and.b32  	%r1223, %r1175, %r1149;
	xor.b32  	%r1224, %r1222, %r1223;
	add.s32 	%r1225, %r1220, %r1224;
	add.s32 	%r1226, %r1215, %r1123;
	add.s32 	%r1227, %r1225, %r1215;
	shf.l.wrap.b32 	%r1228, %r1226, %r1226, 26;
	shf.l.wrap.b32 	%r1229, %r1226, %r1226, 21;
	xor.b32  	%r1230, %r1228, %r1229;
	shf.l.wrap.b32 	%r1231, %r1226, %r1226, 7;
	xor.b32  	%r1232, %r1230, %r1231;
	and.b32  	%r1233, %r1226, %r1200;
	not.b32 	%r1234, %r1226;
	and.b32  	%r1235, %r1174, %r1234;
	or.b32  	%r1236, %r1233, %r1235;
	add.s32 	%r1237, %r1236, %r1148;
	add.s32 	%r1238, %r1237, %r1232;
	ld.const.u32 	%r1239, [K256+56];
	add.s32 	%r1240, %r1238, %r1239;
	add.s32 	%r1241, %r1240, %r180;
	shf.l.wrap.b32 	%r1242, %r1227, %r1227, 30;
	shf.l.wrap.b32 	%r1243, %r1227, %r1227, 19;
	xor.b32  	%r1244, %r1242, %r1243;
	shf.l.wrap.b32 	%r1245, %r1227, %r1227, 10;
	xor.b32  	%r1246, %r1244, %r1245;
	xor.b32  	%r1247, %r1201, %r1175;
	and.b32  	%r1248, %r1227, %r1247;
	and.b32  	%r1249, %r1201, %r1175;
	xor.b32  	%r1250, %r1248, %r1249;
	add.s32 	%r1251, %r1246, %r1250;
	add.s32 	%r1252, %r1241, %r1149;
	add.s32 	%r1253, %r1251, %r1241;
	shf.l.wrap.b32 	%r1254, %r1252, %r1252, 26;
	shf.l.wrap.b32 	%r1255, %r1252, %r1252, 21;
	xor.b32  	%r1256, %r1254, %r1255;
	shf.l.wrap.b32 	%r1257, %r1252, %r1252, 7;
	xor.b32  	%r1258, %r1256, %r1257;
	and.b32  	%r1259, %r1252, %r1226;
	not.b32 	%r1260, %r1252;
	and.b32  	%r1261, %r1200, %r1260;
	or.b32  	%r1262, %r1259, %r1261;
	add.s32 	%r1263, %r1262, %r1174;
	add.s32 	%r1264, %r1263, %r1258;
	ld.const.u32 	%r1265, [K256+60];
	add.s32 	%r1266, %r1264, %r1265;
	add.s32 	%r1267, %r1266, %r191;
	shf.l.wrap.b32 	%r1268, %r1253, %r1253, 30;
	shf.l.wrap.b32 	%r1269, %r1253, %r1253, 19;
	xor.b32  	%r1270, %r1268, %r1269;
	shf.l.wrap.b32 	%r1271, %r1253, %r1253, 10;
	xor.b32  	%r1272, %r1270, %r1271;
	xor.b32  	%r1273, %r1227, %r1201;
	and.b32  	%r1274, %r1253, %r1273;
	and.b32  	%r1275, %r1227, %r1201;
	xor.b32  	%r1276, %r1274, %r1275;
	add.s32 	%r1277, %r1272, %r1276;
	add.s32 	%r1278, %r1267, %r1175;
	add.s32 	%r1279, %r1277, %r1267;
	shf.l.wrap.b32 	%r1280, %r1278, %r1278, 26;
	shf.l.wrap.b32 	%r1281, %r1278, %r1278, 21;
	xor.b32  	%r1282, %r1280, %r1281;
	shf.l.wrap.b32 	%r1283, %r1278, %r1278, 7;
	xor.b32  	%r1284, %r1282, %r1283;
	and.b32  	%r1285, %r1278, %r1252;
	not.b32 	%r1286, %r1278;
	and.b32  	%r1287, %r1226, %r1286;
	or.b32  	%r1288, %r1285, %r1287;
	add.s32 	%r1289, %r1288, %r1200;
	add.s32 	%r1290, %r1289, %r1284;
	ld.const.u32 	%r1291, [K256+64];
	add.s32 	%r1292, %r1290, %r1291;
	add.s32 	%r1293, %r1292, %r212;
	shf.l.wrap.b32 	%r1294, %r1279, %r1279, 30;
	shf.l.wrap.b32 	%r1295, %r1279, %r1279, 19;
	xor.b32  	%r1296, %r1294, %r1295;
	shf.l.wrap.b32 	%r1297, %r1279, %r1279, 10;
	xor.b32  	%r1298, %r1296, %r1297;
	xor.b32  	%r1299, %r1253, %r1227;
	and.b32  	%r1300, %r1279, %r1299;
	and.b32  	%r1301, %r1253, %r1227;
	xor.b32  	%r1302, %r1300, %r1301;
	add.s32 	%r1303, %r1298, %r1302;
	add.s32 	%r1304, %r1293, %r1201;
	add.s32 	%r1305, %r1303, %r1293;
	shf.l.wrap.b32 	%r1306, %r1304, %r1304, 26;
	shf.l.wrap.b32 	%r1307, %r1304, %r1304, 21;
	xor.b32  	%r1308, %r1306, %r1307;
	shf.l.wrap.b32 	%r1309, %r1304, %r1304, 7;
	xor.b32  	%r1310, %r1308, %r1309;
	and.b32  	%r1311, %r1304, %r1278;
	not.b32 	%r1312, %r1304;
	and.b32  	%r1313, %r1252, %r1312;
	or.b32  	%r1314, %r1311, %r1313;
	add.s32 	%r1315, %r1314, %r1226;
	add.s32 	%r1316, %r1315, %r1310;
	ld.const.u32 	%r1317, [K256+68];
	add.s32 	%r1318, %r1316, %r1317;
	add.s32 	%r1319, %r1318, %r233;
	shf.l.wrap.b32 	%r1320, %r1305, %r1305, 30;
	shf.l.wrap.b32 	%r1321, %r1305, %r1305, 19;
	xor.b32  	%r1322, %r1320, %r1321;
	shf.l.wrap.b32 	%r1323, %r1305, %r1305, 10;
	xor.b32  	%r1324, %r1322, %r1323;
	xor.b32  	%r1325, %r1279, %r1253;
	and.b32  	%r1326, %r1305, %r1325;
	and.b32  	%r1327, %r1279, %r1253;
	xor.b32  	%r1328, %r1326, %r1327;
	add.s32 	%r1329, %r1324, %r1328;
	add.s32 	%r1330, %r1319, %r1227;
	add.s32 	%r1331, %r1329, %r1319;
	shf.l.wrap.b32 	%r1332, %r1330, %r1330, 26;
	shf.l.wrap.b32 	%r1333, %r1330, %r1330, 21;
	xor.b32  	%r1334, %r1332, %r1333;
	shf.l.wrap.b32 	%r1335, %r1330, %r1330, 7;
	xor.b32  	%r1336, %r1334, %r1335;
	and.b32  	%r1337, %r1330, %r1304;
	not.b32 	%r1338, %r1330;
	and.b32  	%r1339, %r1278, %r1338;
	or.b32  	%r1340, %r1337, %r1339;
	add.s32 	%r1341, %r1340, %r1252;
	add.s32 	%r1342, %r1341, %r1336;
	ld.const.u32 	%r1343, [K256+72];
	add.s32 	%r1344, %r1342, %r1343;
	add.s32 	%r1345, %r1344, %r250;
	shf.l.wrap.b32 	%r1346, %r1331, %r1331, 30;
	shf.l.wrap.b32 	%r1347, %r1331, %r1331, 19;
	xor.b32  	%r1348, %r1346, %r1347;
	shf.l.wrap.b32 	%r1349, %r1331, %r1331, 10;
	xor.b32  	%r1350, %r1348, %r1349;
	xor.b32  	%r1351, %r1305, %r1279;
	and.b32  	%r1352, %r1331, %r1351;
	and.b32  	%r1353, %r1305, %r1279;
	xor.b32  	%r1354, %r1352, %r1353;
	add.s32 	%r1355, %r1350, %r1354;
	add.s32 	%r1356, %r1345, %r1253;
	add.s32 	%r1357, %r1355, %r1345;
	shf.l.wrap.b32 	%r1358, %r1356, %r1356, 26;
	shf.l.wrap.b32 	%r1359, %r1356, %r1356, 21;
	xor.b32  	%r1360, %r1358, %r1359;
	shf.l.wrap.b32 	%r1361, %r1356, %r1356, 7;
	xor.b32  	%r1362, %r1360, %r1361;
	and.b32  	%r1363, %r1356, %r1330;
	not.b32 	%r1364, %r1356;
	and.b32  	%r1365, %r1304, %r1364;
	or.b32  	%r1366, %r1363, %r1365;
	add.s32 	%r1367, %r1366, %r1278;
	add.s32 	%r1368, %r1367, %r1362;
	ld.const.u32 	%r1369, [K256+76];
	add.s32 	%r1370, %r1368, %r1369;
	add.s32 	%r1371, %r1370, %r267;
	shf.l.wrap.b32 	%r1372, %r1357, %r1357, 30;
	shf.l.wrap.b32 	%r1373, %r1357, %r1357, 19;
	xor.b32  	%r1374, %r1372, %r1373;
	shf.l.wrap.b32 	%r1375, %r1357, %r1357, 10;
	xor.b32  	%r1376, %r1374, %r1375;
	xor.b32  	%r1377, %r1331, %r1305;
	and.b32  	%r1378, %r1357, %r1377;
	and.b32  	%r1379, %r1331, %r1305;
	xor.b32  	%r1380, %r1378, %r1379;
	add.s32 	%r1381, %r1376, %r1380;
	add.s32 	%r1382, %r1371, %r1279;
	add.s32 	%r1383, %r1381, %r1371;
	shf.l.wrap.b32 	%r1384, %r1382, %r1382, 26;
	shf.l.wrap.b32 	%r1385, %r1382, %r1382, 21;
	xor.b32  	%r1386, %r1384, %r1385;
	shf.l.wrap.b32 	%r1387, %r1382, %r1382, 7;
	xor.b32  	%r1388, %r1386, %r1387;
	and.b32  	%r1389, %r1382, %r1356;
	not.b32 	%r1390, %r1382;
	and.b32  	%r1391, %r1330, %r1390;
	or.b32  	%r1392, %r1389, %r1391;
	add.s32 	%r1393, %r1392, %r1304;
	add.s32 	%r1394, %r1393, %r1388;
	ld.const.u32 	%r1395, [K256+80];
	add.s32 	%r1396, %r1394, %r1395;
	add.s32 	%r1397, %r1396, %r284;
	shf.l.wrap.b32 	%r1398, %r1383, %r1383, 30;
	shf.l.wrap.b32 	%r1399, %r1383, %r1383, 19;
	xor.b32  	%r1400, %r1398, %r1399;
	shf.l.wrap.b32 	%r1401, %r1383, %r1383, 10;
	xor.b32  	%r1402, %r1400, %r1401;
	xor.b32  	%r1403, %r1357, %r1331;
	and.b32  	%r1404, %r1383, %r1403;
	and.b32  	%r1405, %r1357, %r1331;
	xor.b32  	%r1406, %r1404, %r1405;
	add.s32 	%r1407, %r1402, %r1406;
	add.s32 	%r1408, %r1397, %r1305;
	add.s32 	%r1409, %r1407, %r1397;
	shf.l.wrap.b32 	%r1410, %r1408, %r1408, 26;
	shf.l.wrap.b32 	%r1411, %r1408, %r1408, 21;
	xor.b32  	%r1412, %r1410, %r1411;
	shf.l.wrap.b32 	%r1413, %r1408, %r1408, 7;
	xor.b32  	%r1414, %r1412, %r1413;
	and.b32  	%r1415, %r1408, %r1382;
	not.b32 	%r1416, %r1408;
	and.b32  	%r1417, %r1356, %r1416;
	or.b32  	%r1418, %r1415, %r1417;
	add.s32 	%r1419, %r1418, %r1330;
	add.s32 	%r1420, %r1419, %r1414;
	ld.const.u32 	%r1421, [K256+84];
	add.s32 	%r1422, %r1420, %r1421;
	add.s32 	%r1423, %r1422, %r301;
	shf.l.wrap.b32 	%r1424, %r1409, %r1409, 30;
	shf.l.wrap.b32 	%r1425, %r1409, %r1409, 19;
	xor.b32  	%r1426, %r1424, %r1425;
	shf.l.wrap.b32 	%r1427, %r1409, %r1409, 10;
	xor.b32  	%r1428, %r1426, %r1427;
	xor.b32  	%r1429, %r1383, %r1357;
	and.b32  	%r1430, %r1409, %r1429;
	and.b32  	%r1431, %r1383, %r1357;
	xor.b32  	%r1432, %r1430, %r1431;
	add.s32 	%r1433, %r1428, %r1432;
	add.s32 	%r1434, %r1423, %r1331;
	add.s32 	%r1435, %r1433, %r1423;
	shf.l.wrap.b32 	%r1436, %r1434, %r1434, 26;
	shf.l.wrap.b32 	%r1437, %r1434, %r1434, 21;
	xor.b32  	%r1438, %r1436, %r1437;
	shf.l.wrap.b32 	%r1439, %r1434, %r1434, 7;
	xor.b32  	%r1440, %r1438, %r1439;
	and.b32  	%r1441, %r1434, %r1408;
	not.b32 	%r1442, %r1434;
	and.b32  	%r1443, %r1382, %r1442;
	or.b32  	%r1444, %r1441, %r1443;
	add.s32 	%r1445, %r1444, %r1356;
	add.s32 	%r1446, %r1445, %r1440;
	ld.const.u32 	%r1447, [K256+88];
	add.s32 	%r1448, %r1446, %r1447;
	add.s32 	%r1449, %r1448, %r318;
	shf.l.wrap.b32 	%r1450, %r1435, %r1435, 30;
	shf.l.wrap.b32 	%r1451, %r1435, %r1435, 19;
	xor.b32  	%r1452, %r1450, %r1451;
	shf.l.wrap.b32 	%r1453, %r1435, %r1435, 10;
	xor.b32  	%r1454, %r1452, %r1453;
	xor.b32  	%r1455, %r1409, %r1383;
	and.b32  	%r1456, %r1435, %r1455;
	and.b32  	%r1457, %r1409, %r1383;
	xor.b32  	%r1458, %r1456, %r1457;
	add.s32 	%r1459, %r1454, %r1458;
	add.s32 	%r1460, %r1449, %r1357;
	add.s32 	%r1461, %r1459, %r1449;
	shf.l.wrap.b32 	%r1462, %r1460, %r1460, 26;
	shf.l.wrap.b32 	%r1463, %r1460, %r1460, 21;
	xor.b32  	%r1464, %r1462, %r1463;
	shf.l.wrap.b32 	%r1465, %r1460, %r1460, 7;
	xor.b32  	%r1466, %r1464, %r1465;
	and.b32  	%r1467, %r1460, %r1434;
	not.b32 	%r1468, %r1460;
	and.b32  	%r1469, %r1408, %r1468;
	or.b32  	%r1470, %r1467, %r1469;
	add.s32 	%r1471, %r1470, %r1382;
	add.s32 	%r1472, %r1471, %r1466;
	ld.const.u32 	%r1473, [K256+92];
	add.s32 	%r1474, %r1472, %r1473;
	add.s32 	%r1475, %r1474, %r335;
	shf.l.wrap.b32 	%r1476, %r1461, %r1461, 30;
	shf.l.wrap.b32 	%r1477, %r1461, %r1461, 19;
	xor.b32  	%r1478, %r1476, %r1477;
	shf.l.wrap.b32 	%r1479, %r1461, %r1461, 10;
	xor.b32  	%r1480, %r1478, %r1479;
	xor.b32  	%r1481, %r1435, %r1409;
	and.b32  	%r1482, %r1461, %r1481;
	and.b32  	%r1483, %r1435, %r1409;
	xor.b32  	%r1484, %r1482, %r1483;
	add.s32 	%r1485, %r1480, %r1484;
	add.s32 	%r1486, %r1475, %r1383;
	add.s32 	%r1487, %r1485, %r1475;
	shf.l.wrap.b32 	%r1488, %r1486, %r1486, 26;
	shf.l.wrap.b32 	%r1489, %r1486, %r1486, 21;
	xor.b32  	%r1490, %r1488, %r1489;
	shf.l.wrap.b32 	%r1491, %r1486, %r1486, 7;
	xor.b32  	%r1492, %r1490, %r1491;
	and.b32  	%r1493, %r1486, %r1460;
	not.b32 	%r1494, %r1486;
	and.b32  	%r1495, %r1434, %r1494;
	or.b32  	%r1496, %r1493, %r1495;
	add.s32 	%r1497, %r1496, %r1408;
	add.s32 	%r1498, %r1497, %r1492;
	ld.const.u32 	%r1499, [K256+96];
	add.s32 	%r1500, %r1498, %r1499;
	add.s32 	%r1501, %r1500, %r352;
	shf.l.wrap.b32 	%r1502, %r1487, %r1487, 30;
	shf.l.wrap.b32 	%r1503, %r1487, %r1487, 19;
	xor.b32  	%r1504, %r1502, %r1503;
	shf.l.wrap.b32 	%r1505, %r1487, %r1487, 10;
	xor.b32  	%r1506, %r1504, %r1505;
	xor.b32  	%r1507, %r1461, %r1435;
	and.b32  	%r1508, %r1487, %r1507;
	and.b32  	%r1509, %r1461, %r1435;
	xor.b32  	%r1510, %r1508, %r1509;
	add.s32 	%r1511, %r1506, %r1510;
	add.s32 	%r1512, %r1501, %r1409;
	add.s32 	%r1513, %r1511, %r1501;
	shf.l.wrap.b32 	%r1514, %r1512, %r1512, 26;
	shf.l.wrap.b32 	%r1515, %r1512, %r1512, 21;
	xor.b32  	%r1516, %r1514, %r1515;
	shf.l.wrap.b32 	%r1517, %r1512, %r1512, 7;
	xor.b32  	%r1518, %r1516, %r1517;
	and.b32  	%r1519, %r1512, %r1486;
	not.b32 	%r1520, %r1512;
	and.b32  	%r1521, %r1460, %r1520;
	or.b32  	%r1522, %r1519, %r1521;
	add.s32 	%r1523, %r1522, %r1434;
	add.s32 	%r1524, %r1523, %r1518;
	ld.const.u32 	%r1525, [K256+100];
	add.s32 	%r1526, %r1524, %r1525;
	add.s32 	%r1527, %r1526, %r369;
	shf.l.wrap.b32 	%r1528, %r1513, %r1513, 30;
	shf.l.wrap.b32 	%r1529, %r1513, %r1513, 19;
	xor.b32  	%r1530, %r1528, %r1529;
	shf.l.wrap.b32 	%r1531, %r1513, %r1513, 10;
	xor.b32  	%r1532, %r1530, %r1531;
	xor.b32  	%r1533, %r1487, %r1461;
	and.b32  	%r1534, %r1513, %r1533;
	and.b32  	%r1535, %r1487, %r1461;
	xor.b32  	%r1536, %r1534, %r1535;
	add.s32 	%r1537, %r1532, %r1536;
	add.s32 	%r1538, %r1527, %r1435;
	add.s32 	%r1539, %r1537, %r1527;
	shf.l.wrap.b32 	%r1540, %r1538, %r1538, 26;
	shf.l.wrap.b32 	%r1541, %r1538, %r1538, 21;
	xor.b32  	%r1542, %r1540, %r1541;
	shf.l.wrap.b32 	%r1543, %r1538, %r1538, 7;
	xor.b32  	%r1544, %r1542, %r1543;
	and.b32  	%r1545, %r1538, %r1512;
	not.b32 	%r1546, %r1538;
	and.b32  	%r1547, %r1486, %r1546;
	or.b32  	%r1548, %r1545, %r1547;
	add.s32 	%r1549, %r1548, %r1460;
	add.s32 	%r1550, %r1549, %r1544;
	ld.const.u32 	%r1551, [K256+104];
	add.s32 	%r1552, %r1550, %r1551;
	add.s32 	%r1553, %r1552, %r386;
	shf.l.wrap.b32 	%r1554, %r1539, %r1539, 30;
	shf.l.wrap.b32 	%r1555, %r1539, %r1539, 19;
	xor.b32  	%r1556, %r1554, %r1555;
	shf.l.wrap.b32 	%r1557, %r1539, %r1539, 10;
	xor.b32  	%r1558, %r1556, %r1557;
	xor.b32  	%r1559, %r1513, %r1487;
	and.b32  	%r1560, %r1539, %r1559;
	and.b32  	%r1561, %r1513, %r1487;
	xor.b32  	%r1562, %r1560, %r1561;
	add.s32 	%r1563, %r1558, %r1562;
	add.s32 	%r1564, %r1553, %r1461;
	add.s32 	%r1565, %r1563, %r1553;
	shf.l.wrap.b32 	%r1566, %r1564, %r1564, 26;
	shf.l.wrap.b32 	%r1567, %r1564, %r1564, 21;
	xor.b32  	%r1568, %r1566, %r1567;
	shf.l.wrap.b32 	%r1569, %r1564, %r1564, 7;
	xor.b32  	%r1570, %r1568, %r1569;
	and.b32  	%r1571, %r1564, %r1538;
	not.b32 	%r1572, %r1564;
	and.b32  	%r1573, %r1512, %r1572;
	or.b32  	%r1574, %r1571, %r1573;
	add.s32 	%r1575, %r1574, %r1486;
	add.s32 	%r1576, %r1575, %r1570;
	ld.const.u32 	%r1577, [K256+108];
	add.s32 	%r1578, %r1576, %r1577;
	add.s32 	%r1579, %r1578, %r403;
	shf.l.wrap.b32 	%r1580, %r1565, %r1565, 30;
	shf.l.wrap.b32 	%r1581, %r1565, %r1565, 19;
	xor.b32  	%r1582, %r1580, %r1581;
	shf.l.wrap.b32 	%r1583, %r1565, %r1565, 10;
	xor.b32  	%r1584, %r1582, %r1583;
	xor.b32  	%r1585, %r1539, %r1513;
	and.b32  	%r1586, %r1565, %r1585;
	and.b32  	%r1587, %r1539, %r1513;
	xor.b32  	%r1588, %r1586, %r1587;
	add.s32 	%r1589, %r1584, %r1588;
	add.s32 	%r1590, %r1579, %r1487;
	add.s32 	%r1591, %r1589, %r1579;
	shf.l.wrap.b32 	%r1592, %r1590, %r1590, 26;
	shf.l.wrap.b32 	%r1593, %r1590, %r1590, 21;
	xor.b32  	%r1594, %r1592, %r1593;
	shf.l.wrap.b32 	%r1595, %r1590, %r1590, 7;
	xor.b32  	%r1596, %r1594, %r1595;
	and.b32  	%r1597, %r1590, %r1564;
	not.b32 	%r1598, %r1590;
	and.b32  	%r1599, %r1538, %r1598;
	or.b32  	%r1600, %r1597, %r1599;
	add.s32 	%r1601, %r1600, %r1512;
	add.s32 	%r1602, %r1601, %r1596;
	ld.const.u32 	%r1603, [K256+112];
	add.s32 	%r1604, %r1602, %r1603;
	add.s32 	%r1605, %r1604, %r420;
	shf.l.wrap.b32 	%r1606, %r1591, %r1591, 30;
	shf.l.wrap.b32 	%r1607, %r1591, %r1591, 19;
	xor.b32  	%r1608, %r1606, %r1607;
	shf.l.wrap.b32 	%r1609, %r1591, %r1591, 10;
	xor.b32  	%r1610, %r1608, %r1609;
	xor.b32  	%r1611, %r1565, %r1539;
	and.b32  	%r1612, %r1591, %r1611;
	and.b32  	%r1613, %r1565, %r1539;
	xor.b32  	%r1614, %r1612, %r1613;
	add.s32 	%r1615, %r1610, %r1614;
	add.s32 	%r1616, %r1605, %r1513;
	add.s32 	%r1617, %r1615, %r1605;
	shf.l.wrap.b32 	%r1618, %r1616, %r1616, 26;
	shf.l.wrap.b32 	%r1619, %r1616, %r1616, 21;
	xor.b32  	%r1620, %r1618, %r1619;
	shf.l.wrap.b32 	%r1621, %r1616, %r1616, 7;
	xor.b32  	%r1622, %r1620, %r1621;
	and.b32  	%r1623, %r1616, %r1590;
	not.b32 	%r1624, %r1616;
	and.b32  	%r1625, %r1564, %r1624;
	or.b32  	%r1626, %r1623, %r1625;
	add.s32 	%r1627, %r1626, %r1538;
	add.s32 	%r1628, %r1627, %r1622;
	ld.const.u32 	%r1629, [K256+116];
	add.s32 	%r1630, %r1628, %r1629;
	add.s32 	%r1631, %r1630, %r437;
	shf.l.wrap.b32 	%r1632, %r1617, %r1617, 30;
	shf.l.wrap.b32 	%r1633, %r1617, %r1617, 19;
	xor.b32  	%r1634, %r1632, %r1633;
	shf.l.wrap.b32 	%r1635, %r1617, %r1617, 10;
	xor.b32  	%r1636, %r1634, %r1635;
	xor.b32  	%r1637, %r1591, %r1565;
	and.b32  	%r1638, %r1617, %r1637;
	and.b32  	%r1639, %r1591, %r1565;
	xor.b32  	%r1640, %r1638, %r1639;
	add.s32 	%r1641, %r1636, %r1640;
	add.s32 	%r1642, %r1631, %r1539;
	add.s32 	%r1643, %r1641, %r1631;
	shf.l.wrap.b32 	%r1644, %r1642, %r1642, 26;
	shf.l.wrap.b32 	%r1645, %r1642, %r1642, 21;
	xor.b32  	%r1646, %r1644, %r1645;
	shf.l.wrap.b32 	%r1647, %r1642, %r1642, 7;
	xor.b32  	%r1648, %r1646, %r1647;
	and.b32  	%r1649, %r1642, %r1616;
	not.b32 	%r1650, %r1642;
	and.b32  	%r1651, %r1590, %r1650;
	or.b32  	%r1652, %r1649, %r1651;
	add.s32 	%r1653, %r1652, %r1564;
	add.s32 	%r1654, %r1653, %r1648;
	ld.const.u32 	%r1655, [K256+120];
	add.s32 	%r1656, %r1654, %r1655;
	add.s32 	%r1657, %r1656, %r454;
	shf.l.wrap.b32 	%r1658, %r1643, %r1643, 30;
	shf.l.wrap.b32 	%r1659, %r1643, %r1643, 19;
	xor.b32  	%r1660, %r1658, %r1659;
	shf.l.wrap.b32 	%r1661, %r1643, %r1643, 10;
	xor.b32  	%r1662, %r1660, %r1661;
	xor.b32  	%r1663, %r1617, %r1591;
	and.b32  	%r1664, %r1643, %r1663;
	and.b32  	%r1665, %r1617, %r1591;
	xor.b32  	%r1666, %r1664, %r1665;
	add.s32 	%r1667, %r1662, %r1666;
	add.s32 	%r1668, %r1657, %r1565;
	add.s32 	%r1669, %r1667, %r1657;
	shf.l.wrap.b32 	%r1670, %r1668, %r1668, 26;
	shf.l.wrap.b32 	%r1671, %r1668, %r1668, 21;
	xor.b32  	%r1672, %r1670, %r1671;
	shf.l.wrap.b32 	%r1673, %r1668, %r1668, 7;
	xor.b32  	%r1674, %r1672, %r1673;
	and.b32  	%r1675, %r1668, %r1642;
	not.b32 	%r1676, %r1668;
	and.b32  	%r1677, %r1616, %r1676;
	or.b32  	%r1678, %r1675, %r1677;
	add.s32 	%r1679, %r1678, %r1590;
	add.s32 	%r1680, %r1679, %r1674;
	ld.const.u32 	%r1681, [K256+124];
	add.s32 	%r1682, %r1680, %r1681;
	add.s32 	%r1683, %r1682, %r467;
	shf.l.wrap.b32 	%r1684, %r1669, %r1669, 30;
	shf.l.wrap.b32 	%r1685, %r1669, %r1669, 19;
	xor.b32  	%r1686, %r1684, %r1685;
	shf.l.wrap.b32 	%r1687, %r1669, %r1669, 10;
	xor.b32  	%r1688, %r1686, %r1687;
	xor.b32  	%r1689, %r1643, %r1617;
	and.b32  	%r1690, %r1669, %r1689;
	and.b32  	%r1691, %r1643, %r1617;
	xor.b32  	%r1692, %r1690, %r1691;
	add.s32 	%r1693, %r1688, %r1692;
	add.s32 	%r1694, %r1683, %r1591;
	add.s32 	%r1695, %r1693, %r1683;
	shf.l.wrap.b32 	%r1696, %r1694, %r1694, 26;
	shf.l.wrap.b32 	%r1697, %r1694, %r1694, 21;
	xor.b32  	%r1698, %r1696, %r1697;
	shf.l.wrap.b32 	%r1699, %r1694, %r1694, 7;
	xor.b32  	%r1700, %r1698, %r1699;
	and.b32  	%r1701, %r1694, %r1668;
	not.b32 	%r1702, %r1694;
	and.b32  	%r1703, %r1642, %r1702;
	or.b32  	%r1704, %r1701, %r1703;
	add.s32 	%r1705, %r1704, %r1616;
	add.s32 	%r1706, %r1705, %r1700;
	ld.const.u32 	%r1707, [K256+128];
	add.s32 	%r1708, %r1706, %r1707;
	add.s32 	%r1709, %r1708, %r480;
	shf.l.wrap.b32 	%r1710, %r1695, %r1695, 30;
	shf.l.wrap.b32 	%r1711, %r1695, %r1695, 19;
	xor.b32  	%r1712, %r1710, %r1711;
	shf.l.wrap.b32 	%r1713, %r1695, %r1695, 10;
	xor.b32  	%r1714, %r1712, %r1713;
	xor.b32  	%r1715, %r1669, %r1643;
	and.b32  	%r1716, %r1695, %r1715;
	and.b32  	%r1717, %r1669, %r1643;
	xor.b32  	%r1718, %r1716, %r1717;
	add.s32 	%r1719, %r1714, %r1718;
	add.s32 	%r1720, %r1709, %r1617;
	add.s32 	%r1721, %r1719, %r1709;
	shf.l.wrap.b32 	%r1722, %r1720, %r1720, 26;
	shf.l.wrap.b32 	%r1723, %r1720, %r1720, 21;
	xor.b32  	%r1724, %r1722, %r1723;
	shf.l.wrap.b32 	%r1725, %r1720, %r1720, 7;
	xor.b32  	%r1726, %r1724, %r1725;
	and.b32  	%r1727, %r1720, %r1694;
	not.b32 	%r1728, %r1720;
	and.b32  	%r1729, %r1668, %r1728;
	or.b32  	%r1730, %r1727, %r1729;
	add.s32 	%r1731, %r1730, %r1642;
	add.s32 	%r1732, %r1731, %r1726;
	ld.const.u32 	%r1733, [K256+132];
	add.s32 	%r1734, %r1732, %r1733;
	add.s32 	%r1735, %r1734, %r493;
	shf.l.wrap.b32 	%r1736, %r1721, %r1721, 30;
	shf.l.wrap.b32 	%r1737, %r1721, %r1721, 19;
	xor.b32  	%r1738, %r1736, %r1737;
	shf.l.wrap.b32 	%r1739, %r1721, %r1721, 10;
	xor.b32  	%r1740, %r1738, %r1739;
	xor.b32  	%r1741, %r1695, %r1669;
	and.b32  	%r1742, %r1721, %r1741;
	and.b32  	%r1743, %r1695, %r1669;
	xor.b32  	%r1744, %r1742, %r1743;
	add.s32 	%r1745, %r1740, %r1744;
	add.s32 	%r1746, %r1735, %r1643;
	add.s32 	%r1747, %r1745, %r1735;
	shf.l.wrap.b32 	%r1748, %r1746, %r1746, 26;
	shf.l.wrap.b32 	%r1749, %r1746, %r1746, 21;
	xor.b32  	%r1750, %r1748, %r1749;
	shf.l.wrap.b32 	%r1751, %r1746, %r1746, 7;
	xor.b32  	%r1752, %r1750, %r1751;
	and.b32  	%r1753, %r1746, %r1720;
	not.b32 	%r1754, %r1746;
	and.b32  	%r1755, %r1694, %r1754;
	or.b32  	%r1756, %r1753, %r1755;
	add.s32 	%r1757, %r1756, %r1668;
	add.s32 	%r1758, %r1757, %r1752;
	ld.const.u32 	%r1759, [K256+136];
	add.s32 	%r1760, %r1758, %r1759;
	add.s32 	%r1761, %r1760, %r506;
	shf.l.wrap.b32 	%r1762, %r1747, %r1747, 30;
	shf.l.wrap.b32 	%r1763, %r1747, %r1747, 19;
	xor.b32  	%r1764, %r1762, %r1763;
	shf.l.wrap.b32 	%r1765, %r1747, %r1747, 10;
	xor.b32  	%r1766, %r1764, %r1765;
	xor.b32  	%r1767, %r1721, %r1695;
	and.b32  	%r1768, %r1747, %r1767;
	and.b32  	%r1769, %r1721, %r1695;
	xor.b32  	%r1770, %r1768, %r1769;
	add.s32 	%r1771, %r1766, %r1770;
	add.s32 	%r1772, %r1761, %r1669;
	add.s32 	%r1773, %r1771, %r1761;
	shf.l.wrap.b32 	%r1774, %r1772, %r1772, 26;
	shf.l.wrap.b32 	%r1775, %r1772, %r1772, 21;
	xor.b32  	%r1776, %r1774, %r1775;
	shf.l.wrap.b32 	%r1777, %r1772, %r1772, 7;
	xor.b32  	%r1778, %r1776, %r1777;
	and.b32  	%r1779, %r1772, %r1746;
	not.b32 	%r1780, %r1772;
	and.b32  	%r1781, %r1720, %r1780;
	or.b32  	%r1782, %r1779, %r1781;
	add.s32 	%r1783, %r1782, %r1694;
	add.s32 	%r1784, %r1783, %r1778;
	ld.const.u32 	%r1785, [K256+140];
	add.s32 	%r1786, %r1784, %r1785;
	add.s32 	%r1787, %r1786, %r519;
	shf.l.wrap.b32 	%r1788, %r1773, %r1773, 30;
	shf.l.wrap.b32 	%r1789, %r1773, %r1773, 19;
	xor.b32  	%r1790, %r1788, %r1789;
	shf.l.wrap.b32 	%r1791, %r1773, %r1773, 10;
	xor.b32  	%r1792, %r1790, %r1791;
	xor.b32  	%r1793, %r1747, %r1721;
	and.b32  	%r1794, %r1773, %r1793;
	and.b32  	%r1795, %r1747, %r1721;
	xor.b32  	%r1796, %r1794, %r1795;
	add.s32 	%r1797, %r1792, %r1796;
	add.s32 	%r1798, %r1787, %r1695;
	add.s32 	%r1799, %r1797, %r1787;
	shf.l.wrap.b32 	%r1800, %r1798, %r1798, 26;
	shf.l.wrap.b32 	%r1801, %r1798, %r1798, 21;
	xor.b32  	%r1802, %r1800, %r1801;
	shf.l.wrap.b32 	%r1803, %r1798, %r1798, 7;
	xor.b32  	%r1804, %r1802, %r1803;
	and.b32  	%r1805, %r1798, %r1772;
	not.b32 	%r1806, %r1798;
	and.b32  	%r1807, %r1746, %r1806;
	or.b32  	%r1808, %r1805, %r1807;
	add.s32 	%r1809, %r1808, %r1720;
	add.s32 	%r1810, %r1809, %r1804;
	ld.const.u32 	%r1811, [K256+144];
	add.s32 	%r1812, %r1810, %r1811;
	add.s32 	%r1813, %r1812, %r532;
	shf.l.wrap.b32 	%r1814, %r1799, %r1799, 30;
	shf.l.wrap.b32 	%r1815, %r1799, %r1799, 19;
	xor.b32  	%r1816, %r1814, %r1815;
	shf.l.wrap.b32 	%r1817, %r1799, %r1799, 10;
	xor.b32  	%r1818, %r1816, %r1817;
	xor.b32  	%r1819, %r1773, %r1747;
	and.b32  	%r1820, %r1799, %r1819;
	and.b32  	%r1821, %r1773, %r1747;
	xor.b32  	%r1822, %r1820, %r1821;
	add.s32 	%r1823, %r1818, %r1822;
	add.s32 	%r1824, %r1813, %r1721;
	add.s32 	%r1825, %r1823, %r1813;
	shf.l.wrap.b32 	%r1826, %r1824, %r1824, 26;
	shf.l.wrap.b32 	%r1827, %r1824, %r1824, 21;
	xor.b32  	%r1828, %r1826, %r1827;
	shf.l.wrap.b32 	%r1829, %r1824, %r1824, 7;
	xor.b32  	%r1830, %r1828, %r1829;
	and.b32  	%r1831, %r1824, %r1798;
	not.b32 	%r1832, %r1824;
	and.b32  	%r1833, %r1772, %r1832;
	or.b32  	%r1834, %r1831, %r1833;
	add.s32 	%r1835, %r1834, %r1746;
	add.s32 	%r1836, %r1835, %r1830;
	ld.const.u32 	%r1837, [K256+148];
	add.s32 	%r1838, %r1836, %r1837;
	add.s32 	%r1839, %r1838, %r545;
	shf.l.wrap.b32 	%r1840, %r1825, %r1825, 30;
	shf.l.wrap.b32 	%r1841, %r1825, %r1825, 19;
	xor.b32  	%r1842, %r1840, %r1841;
	shf.l.wrap.b32 	%r1843, %r1825, %r1825, 10;
	xor.b32  	%r1844, %r1842, %r1843;
	xor.b32  	%r1845, %r1799, %r1773;
	and.b32  	%r1846, %r1825, %r1845;
	and.b32  	%r1847, %r1799, %r1773;
	xor.b32  	%r1848, %r1846, %r1847;
	add.s32 	%r1849, %r1844, %r1848;
	add.s32 	%r1850, %r1839, %r1747;
	add.s32 	%r1851, %r1849, %r1839;
	shf.l.wrap.b32 	%r1852, %r1850, %r1850, 26;
	shf.l.wrap.b32 	%r1853, %r1850, %r1850, 21;
	xor.b32  	%r1854, %r1852, %r1853;
	shf.l.wrap.b32 	%r1855, %r1850, %r1850, 7;
	xor.b32  	%r1856, %r1854, %r1855;
	and.b32  	%r1857, %r1850, %r1824;
	not.b32 	%r1858, %r1850;
	and.b32  	%r1859, %r1798, %r1858;
	or.b32  	%r1860, %r1857, %r1859;
	add.s32 	%r1861, %r1860, %r1772;
	add.s32 	%r1862, %r1861, %r1856;
	ld.const.u32 	%r1863, [K256+152];
	add.s32 	%r1864, %r1862, %r1863;
	add.s32 	%r1865, %r1864, %r558;
	shf.l.wrap.b32 	%r1866, %r1851, %r1851, 30;
	shf.l.wrap.b32 	%r1867, %r1851, %r1851, 19;
	xor.b32  	%r1868, %r1866, %r1867;
	shf.l.wrap.b32 	%r1869, %r1851, %r1851, 10;
	xor.b32  	%r1870, %r1868, %r1869;
	xor.b32  	%r1871, %r1825, %r1799;
	and.b32  	%r1872, %r1851, %r1871;
	and.b32  	%r1873, %r1825, %r1799;
	xor.b32  	%r1874, %r1872, %r1873;
	add.s32 	%r1875, %r1870, %r1874;
	add.s32 	%r1876, %r1865, %r1773;
	add.s32 	%r1877, %r1875, %r1865;
	shf.l.wrap.b32 	%r1878, %r1876, %r1876, 26;
	shf.l.wrap.b32 	%r1879, %r1876, %r1876, 21;
	xor.b32  	%r1880, %r1878, %r1879;
	shf.l.wrap.b32 	%r1881, %r1876, %r1876, 7;
	xor.b32  	%r1882, %r1880, %r1881;
	and.b32  	%r1883, %r1876, %r1850;
	not.b32 	%r1884, %r1876;
	and.b32  	%r1885, %r1824, %r1884;
	or.b32  	%r1886, %r1883, %r1885;
	add.s32 	%r1887, %r1886, %r1798;
	add.s32 	%r1888, %r1887, %r1882;
	ld.const.u32 	%r1889, [K256+156];
	add.s32 	%r1890, %r1888, %r1889;
	add.s32 	%r1891, %r1890, %r571;
	shf.l.wrap.b32 	%r1892, %r1877, %r1877, 30;
	shf.l.wrap.b32 	%r1893, %r1877, %r1877, 19;
	xor.b32  	%r1894, %r1892, %r1893;
	shf.l.wrap.b32 	%r1895, %r1877, %r1877, 10;
	xor.b32  	%r1896, %r1894, %r1895;
	xor.b32  	%r1897, %r1851, %r1825;
	and.b32  	%r1898, %r1877, %r1897;
	and.b32  	%r1899, %r1851, %r1825;
	xor.b32  	%r1900, %r1898, %r1899;
	add.s32 	%r1901, %r1896, %r1900;
	add.s32 	%r1902, %r1891, %r1799;
	add.s32 	%r1903, %r1901, %r1891;
	shf.l.wrap.b32 	%r1904, %r1902, %r1902, 26;
	shf.l.wrap.b32 	%r1905, %r1902, %r1902, 21;
	xor.b32  	%r1906, %r1904, %r1905;
	shf.l.wrap.b32 	%r1907, %r1902, %r1902, 7;
	xor.b32  	%r1908, %r1906, %r1907;
	and.b32  	%r1909, %r1902, %r1876;
	not.b32 	%r1910, %r1902;
	and.b32  	%r1911, %r1850, %r1910;
	or.b32  	%r1912, %r1909, %r1911;
	add.s32 	%r1913, %r1912, %r1824;
	add.s32 	%r1914, %r1913, %r1908;
	ld.const.u32 	%r1915, [K256+160];
	add.s32 	%r1916, %r1914, %r1915;
	add.s32 	%r1917, %r1916, %r584;
	shf.l.wrap.b32 	%r1918, %r1903, %r1903, 30;
	shf.l.wrap.b32 	%r1919, %r1903, %r1903, 19;
	xor.b32  	%r1920, %r1918, %r1919;
	shf.l.wrap.b32 	%r1921, %r1903, %r1903, 10;
	xor.b32  	%r1922, %r1920, %r1921;
	xor.b32  	%r1923, %r1877, %r1851;
	and.b32  	%r1924, %r1903, %r1923;
	and.b32  	%r1925, %r1877, %r1851;
	xor.b32  	%r1926, %r1924, %r1925;
	add.s32 	%r1927, %r1922, %r1926;
	add.s32 	%r1928, %r1917, %r1825;
	add.s32 	%r1929, %r1927, %r1917;
	shf.l.wrap.b32 	%r1930, %r1928, %r1928, 26;
	shf.l.wrap.b32 	%r1931, %r1928, %r1928, 21;
	xor.b32  	%r1932, %r1930, %r1931;
	shf.l.wrap.b32 	%r1933, %r1928, %r1928, 7;
	xor.b32  	%r1934, %r1932, %r1933;
	and.b32  	%r1935, %r1928, %r1902;
	not.b32 	%r1936, %r1928;
	and.b32  	%r1937, %r1876, %r1936;
	or.b32  	%r1938, %r1935, %r1937;
	add.s32 	%r1939, %r1938, %r1850;
	add.s32 	%r1940, %r1939, %r1934;
	ld.const.u32 	%r1941, [K256+164];
	add.s32 	%r1942, %r1940, %r1941;
	add.s32 	%r1943, %r1942, %r597;
	shf.l.wrap.b32 	%r1944, %r1929, %r1929, 30;
	shf.l.wrap.b32 	%r1945, %r1929, %r1929, 19;
	xor.b32  	%r1946, %r1944, %r1945;
	shf.l.wrap.b32 	%r1947, %r1929, %r1929, 10;
	xor.b32  	%r1948, %r1946, %r1947;
	xor.b32  	%r1949, %r1903, %r1877;
	and.b32  	%r1950, %r1929, %r1949;
	and.b32  	%r1951, %r1903, %r1877;
	xor.b32  	%r1952, %r1950, %r1951;
	add.s32 	%r1953, %r1948, %r1952;
	add.s32 	%r1954, %r1943, %r1851;
	add.s32 	%r1955, %r1953, %r1943;
	shf.l.wrap.b32 	%r1956, %r1954, %r1954, 26;
	shf.l.wrap.b32 	%r1957, %r1954, %r1954, 21;
	xor.b32  	%r1958, %r1956, %r1957;
	shf.l.wrap.b32 	%r1959, %r1954, %r1954, 7;
	xor.b32  	%r1960, %r1958, %r1959;
	and.b32  	%r1961, %r1954, %r1928;
	not.b32 	%r1962, %r1954;
	and.b32  	%r1963, %r1902, %r1962;
	or.b32  	%r1964, %r1961, %r1963;
	add.s32 	%r1965, %r1964, %r1876;
	add.s32 	%r1966, %r1965, %r1960;
	ld.const.u32 	%r1967, [K256+168];
	add.s32 	%r1968, %r1966, %r1967;
	add.s32 	%r1969, %r1968, %r610;
	shf.l.wrap.b32 	%r1970, %r1955, %r1955, 30;
	shf.l.wrap.b32 	%r1971, %r1955, %r1955, 19;
	xor.b32  	%r1972, %r1970, %r1971;
	shf.l.wrap.b32 	%r1973, %r1955, %r1955, 10;
	xor.b32  	%r1974, %r1972, %r1973;
	xor.b32  	%r1975, %r1929, %r1903;
	and.b32  	%r1976, %r1955, %r1975;
	and.b32  	%r1977, %r1929, %r1903;
	xor.b32  	%r1978, %r1976, %r1977;
	add.s32 	%r1979, %r1974, %r1978;
	add.s32 	%r1980, %r1969, %r1877;
	add.s32 	%r1981, %r1979, %r1969;
	shf.l.wrap.b32 	%r1982, %r1980, %r1980, 26;
	shf.l.wrap.b32 	%r1983, %r1980, %r1980, 21;
	xor.b32  	%r1984, %r1982, %r1983;
	shf.l.wrap.b32 	%r1985, %r1980, %r1980, 7;
	xor.b32  	%r1986, %r1984, %r1985;
	and.b32  	%r1987, %r1980, %r1954;
	not.b32 	%r1988, %r1980;
	and.b32  	%r1989, %r1928, %r1988;
	or.b32  	%r1990, %r1987, %r1989;
	add.s32 	%r1991, %r1990, %r1902;
	add.s32 	%r1992, %r1991, %r1986;
	ld.const.u32 	%r1993, [K256+172];
	add.s32 	%r1994, %r1992, %r1993;
	add.s32 	%r1995, %r1994, %r623;
	shf.l.wrap.b32 	%r1996, %r1981, %r1981, 30;
	shf.l.wrap.b32 	%r1997, %r1981, %r1981, 19;
	xor.b32  	%r1998, %r1996, %r1997;
	shf.l.wrap.b32 	%r1999, %r1981, %r1981, 10;
	xor.b32  	%r2000, %r1998, %r1999;
	xor.b32  	%r2001, %r1955, %r1929;
	and.b32  	%r2002, %r1981, %r2001;
	and.b32  	%r2003, %r1955, %r1929;
	xor.b32  	%r2004, %r2002, %r2003;
	add.s32 	%r2005, %r2000, %r2004;
	add.s32 	%r2006, %r1995, %r1903;
	add.s32 	%r2007, %r2005, %r1995;
	shf.l.wrap.b32 	%r2008, %r2006, %r2006, 26;
	shf.l.wrap.b32 	%r2009, %r2006, %r2006, 21;
	xor.b32  	%r2010, %r2008, %r2009;
	shf.l.wrap.b32 	%r2011, %r2006, %r2006, 7;
	xor.b32  	%r2012, %r2010, %r2011;
	and.b32  	%r2013, %r2006, %r1980;
	not.b32 	%r2014, %r2006;
	and.b32  	%r2015, %r1954, %r2014;
	or.b32  	%r2016, %r2013, %r2015;
	add.s32 	%r2017, %r2016, %r1928;
	add.s32 	%r2018, %r2017, %r2012;
	ld.const.u32 	%r2019, [K256+176];
	add.s32 	%r2020, %r2018, %r2019;
	add.s32 	%r2021, %r2020, %r636;
	shf.l.wrap.b32 	%r2022, %r2007, %r2007, 30;
	shf.l.wrap.b32 	%r2023, %r2007, %r2007, 19;
	xor.b32  	%r2024, %r2022, %r2023;
	shf.l.wrap.b32 	%r2025, %r2007, %r2007, 10;
	xor.b32  	%r2026, %r2024, %r2025;
	xor.b32  	%r2027, %r1981, %r1955;
	and.b32  	%r2028, %r2007, %r2027;
	and.b32  	%r2029, %r1981, %r1955;
	xor.b32  	%r2030, %r2028, %r2029;
	add.s32 	%r2031, %r2026, %r2030;
	add.s32 	%r2032, %r2021, %r1929;
	add.s32 	%r2033, %r2031, %r2021;
	shf.l.wrap.b32 	%r2034, %r2032, %r2032, 26;
	shf.l.wrap.b32 	%r2035, %r2032, %r2032, 21;
	xor.b32  	%r2036, %r2034, %r2035;
	shf.l.wrap.b32 	%r2037, %r2032, %r2032, 7;
	xor.b32  	%r2038, %r2036, %r2037;
	and.b32  	%r2039, %r2032, %r2006;
	not.b32 	%r2040, %r2032;
	and.b32  	%r2041, %r1980, %r2040;
	or.b32  	%r2042, %r2039, %r2041;
	add.s32 	%r2043, %r2042, %r1954;
	add.s32 	%r2044, %r2043, %r2038;
	ld.const.u32 	%r2045, [K256+180];
	add.s32 	%r2046, %r2044, %r2045;
	add.s32 	%r2047, %r2046, %r649;
	shf.l.wrap.b32 	%r2048, %r2033, %r2033, 30;
	shf.l.wrap.b32 	%r2049, %r2033, %r2033, 19;
	xor.b32  	%r2050, %r2048, %r2049;
	shf.l.wrap.b32 	%r2051, %r2033, %r2033, 10;
	xor.b32  	%r2052, %r2050, %r2051;
	xor.b32  	%r2053, %r2007, %r1981;
	and.b32  	%r2054, %r2033, %r2053;
	and.b32  	%r2055, %r2007, %r1981;
	xor.b32  	%r2056, %r2054, %r2055;
	add.s32 	%r2057, %r2052, %r2056;
	add.s32 	%r2058, %r2047, %r1955;
	add.s32 	%r2059, %r2057, %r2047;
	shf.l.wrap.b32 	%r2060, %r2058, %r2058, 26;
	shf.l.wrap.b32 	%r2061, %r2058, %r2058, 21;
	xor.b32  	%r2062, %r2060, %r2061;
	shf.l.wrap.b32 	%r2063, %r2058, %r2058, 7;
	xor.b32  	%r2064, %r2062, %r2063;
	and.b32  	%r2065, %r2058, %r2032;
	not.b32 	%r2066, %r2058;
	and.b32  	%r2067, %r2006, %r2066;
	or.b32  	%r2068, %r2065, %r2067;
	add.s32 	%r2069, %r2068, %r1980;
	add.s32 	%r2070, %r2069, %r2064;
	ld.const.u32 	%r2071, [K256+184];
	add.s32 	%r2072, %r2070, %r2071;
	add.s32 	%r2073, %r2072, %r662;
	shf.l.wrap.b32 	%r2074, %r2059, %r2059, 30;
	shf.l.wrap.b32 	%r2075, %r2059, %r2059, 19;
	xor.b32  	%r2076, %r2074, %r2075;
	shf.l.wrap.b32 	%r2077, %r2059, %r2059, 10;
	xor.b32  	%r2078, %r2076, %r2077;
	xor.b32  	%r2079, %r2033, %r2007;
	and.b32  	%r2080, %r2059, %r2079;
	and.b32  	%r2081, %r2033, %r2007;
	xor.b32  	%r2082, %r2080, %r2081;
	add.s32 	%r2083, %r2078, %r2082;
	add.s32 	%r2084, %r2073, %r1981;
	add.s32 	%r2085, %r2083, %r2073;
	shf.l.wrap.b32 	%r2086, %r2084, %r2084, 26;
	shf.l.wrap.b32 	%r2087, %r2084, %r2084, 21;
	xor.b32  	%r2088, %r2086, %r2087;
	shf.l.wrap.b32 	%r2089, %r2084, %r2084, 7;
	xor.b32  	%r2090, %r2088, %r2089;
	and.b32  	%r2091, %r2084, %r2058;
	not.b32 	%r2092, %r2084;
	and.b32  	%r2093, %r2032, %r2092;
	or.b32  	%r2094, %r2091, %r2093;
	add.s32 	%r2095, %r2094, %r2006;
	add.s32 	%r2096, %r2095, %r2090;
	ld.const.u32 	%r2097, [K256+188];
	add.s32 	%r2098, %r2096, %r2097;
	add.s32 	%r2099, %r2098, %r675;
	shf.l.wrap.b32 	%r2100, %r2085, %r2085, 30;
	shf.l.wrap.b32 	%r2101, %r2085, %r2085, 19;
	xor.b32  	%r2102, %r2100, %r2101;
	shf.l.wrap.b32 	%r2103, %r2085, %r2085, 10;
	xor.b32  	%r2104, %r2102, %r2103;
	xor.b32  	%r2105, %r2059, %r2033;
	and.b32  	%r2106, %r2085, %r2105;
	and.b32  	%r2107, %r2059, %r2033;
	xor.b32  	%r2108, %r2106, %r2107;
	add.s32 	%r2109, %r2104, %r2108;
	add.s32 	%r2110, %r2099, %r2007;
	add.s32 	%r2111, %r2109, %r2099;
	shf.l.wrap.b32 	%r2112, %r2110, %r2110, 26;
	shf.l.wrap.b32 	%r2113, %r2110, %r2110, 21;
	xor.b32  	%r2114, %r2112, %r2113;
	shf.l.wrap.b32 	%r2115, %r2110, %r2110, 7;
	xor.b32  	%r2116, %r2114, %r2115;
	and.b32  	%r2117, %r2110, %r2084;
	not.b32 	%r2118, %r2110;
	and.b32  	%r2119, %r2058, %r2118;
	or.b32  	%r2120, %r2117, %r2119;
	add.s32 	%r2121, %r2120, %r2032;
	add.s32 	%r2122, %r2121, %r2116;
	ld.const.u32 	%r2123, [K256+192];
	add.s32 	%r2124, %r2122, %r2123;
	add.s32 	%r2125, %r2124, %r688;
	shf.l.wrap.b32 	%r2126, %r2111, %r2111, 30;
	shf.l.wrap.b32 	%r2127, %r2111, %r2111, 19;
	xor.b32  	%r2128, %r2126, %r2127;
	shf.l.wrap.b32 	%r2129, %r2111, %r2111, 10;
	xor.b32  	%r2130, %r2128, %r2129;
	xor.b32  	%r2131, %r2085, %r2059;
	and.b32  	%r2132, %r2111, %r2131;
	and.b32  	%r2133, %r2085, %r2059;
	xor.b32  	%r2134, %r2132, %r2133;
	add.s32 	%r2135, %r2130, %r2134;
	add.s32 	%r2136, %r2125, %r2033;
	add.s32 	%r2137, %r2135, %r2125;
	shf.l.wrap.b32 	%r2138, %r2136, %r2136, 26;
	shf.l.wrap.b32 	%r2139, %r2136, %r2136, 21;
	xor.b32  	%r2140, %r2138, %r2139;
	shf.l.wrap.b32 	%r2141, %r2136, %r2136, 7;
	xor.b32  	%r2142, %r2140, %r2141;
	and.b32  	%r2143, %r2136, %r2110;
	not.b32 	%r2144, %r2136;
	and.b32  	%r2145, %r2084, %r2144;
	or.b32  	%r2146, %r2143, %r2145;
	add.s32 	%r2147, %r2146, %r2058;
	add.s32 	%r2148, %r2147, %r2142;
	ld.const.u32 	%r2149, [K256+196];
	add.s32 	%r2150, %r2148, %r2149;
	add.s32 	%r2151, %r2150, %r701;
	shf.l.wrap.b32 	%r2152, %r2137, %r2137, 30;
	shf.l.wrap.b32 	%r2153, %r2137, %r2137, 19;
	xor.b32  	%r2154, %r2152, %r2153;
	shf.l.wrap.b32 	%r2155, %r2137, %r2137, 10;
	xor.b32  	%r2156, %r2154, %r2155;
	xor.b32  	%r2157, %r2111, %r2085;
	and.b32  	%r2158, %r2137, %r2157;
	and.b32  	%r2159, %r2111, %r2085;
	xor.b32  	%r2160, %r2158, %r2159;
	add.s32 	%r2161, %r2156, %r2160;
	add.s32 	%r2162, %r2151, %r2059;
	add.s32 	%r2163, %r2161, %r2151;
	shf.l.wrap.b32 	%r2164, %r2162, %r2162, 26;
	shf.l.wrap.b32 	%r2165, %r2162, %r2162, 21;
	xor.b32  	%r2166, %r2164, %r2165;
	shf.l.wrap.b32 	%r2167, %r2162, %r2162, 7;
	xor.b32  	%r2168, %r2166, %r2167;
	and.b32  	%r2169, %r2162, %r2136;
	not.b32 	%r2170, %r2162;
	and.b32  	%r2171, %r2110, %r2170;
	or.b32  	%r2172, %r2169, %r2171;
	add.s32 	%r2173, %r2172, %r2084;
	add.s32 	%r2174, %r2173, %r2168;
	ld.const.u32 	%r2175, [K256+200];
	add.s32 	%r2176, %r2174, %r2175;
	add.s32 	%r2177, %r2176, %r714;
	shf.l.wrap.b32 	%r2178, %r2163, %r2163, 30;
	shf.l.wrap.b32 	%r2179, %r2163, %r2163, 19;
	xor.b32  	%r2180, %r2178, %r2179;
	shf.l.wrap.b32 	%r2181, %r2163, %r2163, 10;
	xor.b32  	%r2182, %r2180, %r2181;
	xor.b32  	%r2183, %r2137, %r2111;
	and.b32  	%r2184, %r2163, %r2183;
	and.b32  	%r2185, %r2137, %r2111;
	xor.b32  	%r2186, %r2184, %r2185;
	add.s32 	%r2187, %r2182, %r2186;
	add.s32 	%r2188, %r2177, %r2085;
	add.s32 	%r2189, %r2187, %r2177;
	shf.l.wrap.b32 	%r2190, %r2188, %r2188, 26;
	shf.l.wrap.b32 	%r2191, %r2188, %r2188, 21;
	xor.b32  	%r2192, %r2190, %r2191;
	shf.l.wrap.b32 	%r2193, %r2188, %r2188, 7;
	xor.b32  	%r2194, %r2192, %r2193;
	and.b32  	%r2195, %r2188, %r2162;
	not.b32 	%r2196, %r2188;
	and.b32  	%r2197, %r2136, %r2196;
	or.b32  	%r2198, %r2195, %r2197;
	add.s32 	%r2199, %r2198, %r2110;
	add.s32 	%r2200, %r2199, %r2194;
	ld.const.u32 	%r2201, [K256+204];
	add.s32 	%r2202, %r2200, %r2201;
	add.s32 	%r2203, %r2202, %r727;
	shf.l.wrap.b32 	%r2204, %r2189, %r2189, 30;
	shf.l.wrap.b32 	%r2205, %r2189, %r2189, 19;
	xor.b32  	%r2206, %r2204, %r2205;
	shf.l.wrap.b32 	%r2207, %r2189, %r2189, 10;
	xor.b32  	%r2208, %r2206, %r2207;
	xor.b32  	%r2209, %r2163, %r2137;
	and.b32  	%r2210, %r2189, %r2209;
	and.b32  	%r2211, %r2163, %r2137;
	xor.b32  	%r2212, %r2210, %r2211;
	add.s32 	%r2213, %r2208, %r2212;
	add.s32 	%r2214, %r2203, %r2111;
	add.s32 	%r2215, %r2213, %r2203;
	shf.l.wrap.b32 	%r2216, %r2214, %r2214, 26;
	shf.l.wrap.b32 	%r2217, %r2214, %r2214, 21;
	xor.b32  	%r2218, %r2216, %r2217;
	shf.l.wrap.b32 	%r2219, %r2214, %r2214, 7;
	xor.b32  	%r2220, %r2218, %r2219;
	and.b32  	%r2221, %r2214, %r2188;
	not.b32 	%r2222, %r2214;
	and.b32  	%r2223, %r2162, %r2222;
	or.b32  	%r2224, %r2221, %r2223;
	add.s32 	%r2225, %r2224, %r2136;
	add.s32 	%r2226, %r2225, %r2220;
	ld.const.u32 	%r2227, [K256+208];
	add.s32 	%r2228, %r2226, %r2227;
	add.s32 	%r2229, %r2228, %r740;
	shf.l.wrap.b32 	%r2230, %r2215, %r2215, 30;
	shf.l.wrap.b32 	%r2231, %r2215, %r2215, 19;
	xor.b32  	%r2232, %r2230, %r2231;
	shf.l.wrap.b32 	%r2233, %r2215, %r2215, 10;
	xor.b32  	%r2234, %r2232, %r2233;
	xor.b32  	%r2235, %r2189, %r2163;
	and.b32  	%r2236, %r2215, %r2235;
	and.b32  	%r2237, %r2189, %r2163;
	xor.b32  	%r2238, %r2236, %r2237;
	add.s32 	%r2239, %r2234, %r2238;
	add.s32 	%r2240, %r2229, %r2137;
	add.s32 	%r2241, %r2239, %r2229;
	shf.l.wrap.b32 	%r2242, %r2240, %r2240, 26;
	shf.l.wrap.b32 	%r2243, %r2240, %r2240, 21;
	xor.b32  	%r2244, %r2242, %r2243;
	shf.l.wrap.b32 	%r2245, %r2240, %r2240, 7;
	xor.b32  	%r2246, %r2244, %r2245;
	and.b32  	%r2247, %r2240, %r2214;
	not.b32 	%r2248, %r2240;
	and.b32  	%r2249, %r2188, %r2248;
	or.b32  	%r2250, %r2247, %r2249;
	add.s32 	%r2251, %r2250, %r2162;
	add.s32 	%r2252, %r2251, %r2246;
	ld.const.u32 	%r2253, [K256+212];
	add.s32 	%r2254, %r2252, %r2253;
	add.s32 	%r2255, %r2254, %r753;
	shf.l.wrap.b32 	%r2256, %r2241, %r2241, 30;
	shf.l.wrap.b32 	%r2257, %r2241, %r2241, 19;
	xor.b32  	%r2258, %r2256, %r2257;
	shf.l.wrap.b32 	%r2259, %r2241, %r2241, 10;
	xor.b32  	%r2260, %r2258, %r2259;
	xor.b32  	%r2261, %r2215, %r2189;
	and.b32  	%r2262, %r2241, %r2261;
	and.b32  	%r2263, %r2215, %r2189;
	xor.b32  	%r2264, %r2262, %r2263;
	add.s32 	%r2265, %r2260, %r2264;
	add.s32 	%r2266, %r2255, %r2163;
	add.s32 	%r2267, %r2265, %r2255;
	shf.l.wrap.b32 	%r2268, %r2266, %r2266, 26;
	shf.l.wrap.b32 	%r2269, %r2266, %r2266, 21;
	xor.b32  	%r2270, %r2268, %r2269;
	shf.l.wrap.b32 	%r2271, %r2266, %r2266, 7;
	xor.b32  	%r2272, %r2270, %r2271;
	and.b32  	%r2273, %r2266, %r2240;
	not.b32 	%r2274, %r2266;
	and.b32  	%r2275, %r2214, %r2274;
	or.b32  	%r2276, %r2273, %r2275;
	add.s32 	%r2277, %r2276, %r2188;
	add.s32 	%r2278, %r2277, %r2272;
	ld.const.u32 	%r2279, [K256+216];
	add.s32 	%r2280, %r2278, %r2279;
	add.s32 	%r2281, %r2280, %r766;
	shf.l.wrap.b32 	%r2282, %r2267, %r2267, 30;
	shf.l.wrap.b32 	%r2283, %r2267, %r2267, 19;
	xor.b32  	%r2284, %r2282, %r2283;
	shf.l.wrap.b32 	%r2285, %r2267, %r2267, 10;
	xor.b32  	%r2286, %r2284, %r2285;
	xor.b32  	%r2287, %r2241, %r2215;
	and.b32  	%r2288, %r2267, %r2287;
	and.b32  	%r2289, %r2241, %r2215;
	xor.b32  	%r2290, %r2288, %r2289;
	add.s32 	%r2291, %r2286, %r2290;
	add.s32 	%r2292, %r2281, %r2189;
	add.s32 	%r2293, %r2291, %r2281;
	shf.l.wrap.b32 	%r2294, %r2292, %r2292, 26;
	shf.l.wrap.b32 	%r2295, %r2292, %r2292, 21;
	xor.b32  	%r2296, %r2294, %r2295;
	shf.l.wrap.b32 	%r2297, %r2292, %r2292, 7;
	xor.b32  	%r2298, %r2296, %r2297;
	and.b32  	%r2299, %r2292, %r2266;
	not.b32 	%r2300, %r2292;
	and.b32  	%r2301, %r2240, %r2300;
	or.b32  	%r2302, %r2299, %r2301;
	add.s32 	%r2303, %r2302, %r2214;
	add.s32 	%r2304, %r2303, %r2298;
	ld.const.u32 	%r2305, [K256+220];
	add.s32 	%r2306, %r2304, %r2305;
	add.s32 	%r2307, %r2306, %r779;
	shf.l.wrap.b32 	%r2308, %r2293, %r2293, 30;
	shf.l.wrap.b32 	%r2309, %r2293, %r2293, 19;
	xor.b32  	%r2310, %r2308, %r2309;
	shf.l.wrap.b32 	%r2311, %r2293, %r2293, 10;
	xor.b32  	%r2312, %r2310, %r2311;
	xor.b32  	%r2313, %r2267, %r2241;
	and.b32  	%r2314, %r2293, %r2313;
	and.b32  	%r2315, %r2267, %r2241;
	xor.b32  	%r2316, %r2314, %r2315;
	add.s32 	%r2317, %r2312, %r2316;
	add.s32 	%r2318, %r2307, %r2215;
	add.s32 	%r2319, %r2317, %r2307;
	shf.l.wrap.b32 	%r2320, %r2318, %r2318, 26;
	shf.l.wrap.b32 	%r2321, %r2318, %r2318, 21;
	xor.b32  	%r2322, %r2320, %r2321;
	shf.l.wrap.b32 	%r2323, %r2318, %r2318, 7;
	xor.b32  	%r2324, %r2322, %r2323;
	and.b32  	%r2325, %r2318, %r2292;
	not.b32 	%r2326, %r2318;
	and.b32  	%r2327, %r2266, %r2326;
	or.b32  	%r2328, %r2325, %r2327;
	add.s32 	%r2329, %r2328, %r2240;
	add.s32 	%r2330, %r2329, %r2324;
	ld.const.u32 	%r2331, [K256+224];
	add.s32 	%r2332, %r2330, %r2331;
	add.s32 	%r2333, %r2332, %r792;
	shf.l.wrap.b32 	%r2334, %r2319, %r2319, 30;
	shf.l.wrap.b32 	%r2335, %r2319, %r2319, 19;
	xor.b32  	%r2336, %r2334, %r2335;
	shf.l.wrap.b32 	%r2337, %r2319, %r2319, 10;
	xor.b32  	%r2338, %r2336, %r2337;
	xor.b32  	%r2339, %r2293, %r2267;
	and.b32  	%r2340, %r2319, %r2339;
	and.b32  	%r2341, %r2293, %r2267;
	xor.b32  	%r2342, %r2340, %r2341;
	add.s32 	%r2343, %r2338, %r2342;
	add.s32 	%r2344, %r2333, %r2241;
	add.s32 	%r2345, %r2343, %r2333;
	shf.l.wrap.b32 	%r2346, %r2344, %r2344, 26;
	shf.l.wrap.b32 	%r2347, %r2344, %r2344, 21;
	xor.b32  	%r2348, %r2346, %r2347;
	shf.l.wrap.b32 	%r2349, %r2344, %r2344, 7;
	xor.b32  	%r2350, %r2348, %r2349;
	and.b32  	%r2351, %r2344, %r2318;
	not.b32 	%r2352, %r2344;
	and.b32  	%r2353, %r2292, %r2352;
	or.b32  	%r2354, %r2351, %r2353;
	add.s32 	%r2355, %r2354, %r2266;
	add.s32 	%r2356, %r2355, %r2350;
	ld.const.u32 	%r2357, [K256+228];
	add.s32 	%r2358, %r2356, %r2357;
	add.s32 	%r2359, %r2358, %r805;
	shf.l.wrap.b32 	%r2360, %r2345, %r2345, 30;
	shf.l.wrap.b32 	%r2361, %r2345, %r2345, 19;
	xor.b32  	%r2362, %r2360, %r2361;
	shf.l.wrap.b32 	%r2363, %r2345, %r2345, 10;
	xor.b32  	%r2364, %r2362, %r2363;
	xor.b32  	%r2365, %r2319, %r2293;
	and.b32  	%r2366, %r2345, %r2365;
	and.b32  	%r2367, %r2319, %r2293;
	xor.b32  	%r2368, %r2366, %r2367;
	add.s32 	%r2369, %r2364, %r2368;
	add.s32 	%r2370, %r2359, %r2267;
	add.s32 	%r2371, %r2369, %r2359;
	shf.l.wrap.b32 	%r2372, %r2370, %r2370, 26;
	shf.l.wrap.b32 	%r2373, %r2370, %r2370, 21;
	xor.b32  	%r2374, %r2372, %r2373;
	shf.l.wrap.b32 	%r2375, %r2370, %r2370, 7;
	xor.b32  	%r2376, %r2374, %r2375;
	and.b32  	%r2377, %r2370, %r2344;
	not.b32 	%r2378, %r2370;
	and.b32  	%r2379, %r2318, %r2378;
	or.b32  	%r2380, %r2377, %r2379;
	add.s32 	%r2381, %r2380, %r2292;
	add.s32 	%r2382, %r2381, %r2376;
	ld.const.u32 	%r2383, [K256+232];
	add.s32 	%r2384, %r2382, %r2383;
	add.s32 	%r2385, %r2384, %r818;
	shf.l.wrap.b32 	%r2386, %r2371, %r2371, 30;
	shf.l.wrap.b32 	%r2387, %r2371, %r2371, 19;
	xor.b32  	%r2388, %r2386, %r2387;
	shf.l.wrap.b32 	%r2389, %r2371, %r2371, 10;
	xor.b32  	%r2390, %r2388, %r2389;
	xor.b32  	%r2391, %r2345, %r2319;
	and.b32  	%r2392, %r2371, %r2391;
	and.b32  	%r2393, %r2345, %r2319;
	xor.b32  	%r2394, %r2392, %r2393;
	add.s32 	%r2395, %r2390, %r2394;
	add.s32 	%r2396, %r2385, %r2293;
	add.s32 	%r2397, %r2395, %r2385;
	shf.l.wrap.b32 	%r2398, %r2396, %r2396, 26;
	shf.l.wrap.b32 	%r2399, %r2396, %r2396, 21;
	xor.b32  	%r2400, %r2398, %r2399;
	shf.l.wrap.b32 	%r2401, %r2396, %r2396, 7;
	xor.b32  	%r2402, %r2400, %r2401;
	and.b32  	%r2403, %r2396, %r2370;
	not.b32 	%r2404, %r2396;
	and.b32  	%r2405, %r2344, %r2404;
	or.b32  	%r2406, %r2403, %r2405;
	add.s32 	%r2407, %r2406, %r2318;
	add.s32 	%r2408, %r2407, %r2402;
	ld.const.u32 	%r2409, [K256+236];
	add.s32 	%r2410, %r2408, %r2409;
	add.s32 	%r2411, %r2410, %r831;
	shf.l.wrap.b32 	%r2412, %r2397, %r2397, 30;
	shf.l.wrap.b32 	%r2413, %r2397, %r2397, 19;
	xor.b32  	%r2414, %r2412, %r2413;
	shf.l.wrap.b32 	%r2415, %r2397, %r2397, 10;
	xor.b32  	%r2416, %r2414, %r2415;
	xor.b32  	%r2417, %r2371, %r2345;
	and.b32  	%r2418, %r2397, %r2417;
	and.b32  	%r2419, %r2371, %r2345;
	xor.b32  	%r2420, %r2418, %r2419;
	add.s32 	%r2421, %r2416, %r2420;
	add.s32 	%r2422, %r2411, %r2319;
	add.s32 	%r2423, %r2421, %r2411;
	shf.l.wrap.b32 	%r2424, %r2422, %r2422, 26;
	shf.l.wrap.b32 	%r2425, %r2422, %r2422, 21;
	xor.b32  	%r2426, %r2424, %r2425;
	shf.l.wrap.b32 	%r2427, %r2422, %r2422, 7;
	xor.b32  	%r2428, %r2426, %r2427;
	and.b32  	%r2429, %r2422, %r2396;
	not.b32 	%r2430, %r2422;
	and.b32  	%r2431, %r2370, %r2430;
	or.b32  	%r2432, %r2429, %r2431;
	add.s32 	%r2433, %r2432, %r2344;
	add.s32 	%r2434, %r2433, %r2428;
	ld.const.u32 	%r2435, [K256+240];
	add.s32 	%r2436, %r2434, %r2435;
	add.s32 	%r2437, %r2436, %r844;
	shf.l.wrap.b32 	%r2438, %r2423, %r2423, 30;
	shf.l.wrap.b32 	%r2439, %r2423, %r2423, 19;
	xor.b32  	%r2440, %r2438, %r2439;
	shf.l.wrap.b32 	%r2441, %r2423, %r2423, 10;
	xor.b32  	%r2442, %r2440, %r2441;
	xor.b32  	%r2443, %r2397, %r2371;
	and.b32  	%r2444, %r2423, %r2443;
	and.b32  	%r2445, %r2397, %r2371;
	xor.b32  	%r2446, %r2444, %r2445;
	add.s32 	%r2447, %r2442, %r2446;
	add.s32 	%r2448, %r2437, %r2345;
	add.s32 	%r2449, %r2447, %r2437;
	shf.l.wrap.b32 	%r2450, %r2448, %r2448, 26;
	shf.l.wrap.b32 	%r2451, %r2448, %r2448, 21;
	xor.b32  	%r2452, %r2450, %r2451;
	shf.l.wrap.b32 	%r2453, %r2448, %r2448, 7;
	xor.b32  	%r2454, %r2452, %r2453;
	and.b32  	%r2455, %r2448, %r2422;
	not.b32 	%r2456, %r2448;
	and.b32  	%r2457, %r2396, %r2456;
	or.b32  	%r2458, %r2455, %r2457;
	add.s32 	%r2459, %r2458, %r2370;
	add.s32 	%r2460, %r2459, %r2454;
	ld.const.u32 	%r2461, [K256+244];
	add.s32 	%r2462, %r2460, %r2461;
	add.s32 	%r2463, %r2462, %r857;
	shf.l.wrap.b32 	%r2464, %r2449, %r2449, 30;
	shf.l.wrap.b32 	%r2465, %r2449, %r2449, 19;
	xor.b32  	%r2466, %r2464, %r2465;
	shf.l.wrap.b32 	%r2467, %r2449, %r2449, 10;
	xor.b32  	%r2468, %r2466, %r2467;
	xor.b32  	%r2469, %r2423, %r2397;
	and.b32  	%r2470, %r2449, %r2469;
	and.b32  	%r2471, %r2423, %r2397;
	xor.b32  	%r2472, %r2470, %r2471;
	add.s32 	%r2473, %r2468, %r2472;
	add.s32 	%r2474, %r2463, %r2371;
	add.s32 	%r2475, %r2473, %r2463;
	shf.l.wrap.b32 	%r2476, %r2474, %r2474, 26;
	shf.l.wrap.b32 	%r2477, %r2474, %r2474, 21;
	xor.b32  	%r2478, %r2476, %r2477;
	shf.l.wrap.b32 	%r2479, %r2474, %r2474, 7;
	xor.b32  	%r2480, %r2478, %r2479;
	and.b32  	%r2481, %r2474, %r2448;
	not.b32 	%r2482, %r2474;
	and.b32  	%r2483, %r2422, %r2482;
	or.b32  	%r2484, %r2481, %r2483;
	add.s32 	%r2485, %r2484, %r2396;
	add.s32 	%r2486, %r2485, %r2480;
	ld.const.u32 	%r2487, [K256+248];
	add.s32 	%r2488, %r2486, %r2487;
	add.s32 	%r2489, %r2488, %r870;
	shf.l.wrap.b32 	%r2490, %r2475, %r2475, 30;
	shf.l.wrap.b32 	%r2491, %r2475, %r2475, 19;
	xor.b32  	%r2492, %r2490, %r2491;
	shf.l.wrap.b32 	%r2493, %r2475, %r2475, 10;
	xor.b32  	%r2494, %r2492, %r2493;
	xor.b32  	%r2495, %r2449, %r2423;
	and.b32  	%r2496, %r2475, %r2495;
	and.b32  	%r2497, %r2449, %r2423;
	xor.b32  	%r2498, %r2496, %r2497;
	add.s32 	%r2499, %r2494, %r2498;
	add.s32 	%r2500, %r2489, %r2397;
	add.s32 	%r2501, %r2499, %r2489;
	shf.l.wrap.b32 	%r2502, %r2500, %r2500, 26;
	shf.l.wrap.b32 	%r2503, %r2500, %r2500, 21;
	xor.b32  	%r2504, %r2502, %r2503;
	shf.l.wrap.b32 	%r2505, %r2500, %r2500, 7;
	xor.b32  	%r2506, %r2504, %r2505;
	and.b32  	%r2507, %r2500, %r2474;
	not.b32 	%r2508, %r2500;
	and.b32  	%r2509, %r2448, %r2508;
	or.b32  	%r2510, %r2507, %r2509;
	add.s32 	%r2511, %r2510, %r2422;
	add.s32 	%r2512, %r2511, %r2506;
	ld.const.u32 	%r2513, [K256+252];
	add.s32 	%r2514, %r2512, %r2513;
	add.s32 	%r2515, %r2514, %r883;
	shf.l.wrap.b32 	%r2516, %r2501, %r2501, 30;
	shf.l.wrap.b32 	%r2517, %r2501, %r2501, 19;
	xor.b32  	%r2518, %r2516, %r2517;
	shf.l.wrap.b32 	%r2519, %r2501, %r2501, 10;
	xor.b32  	%r2520, %r2518, %r2519;
	xor.b32  	%r2521, %r2475, %r2449;
	and.b32  	%r2522, %r2501, %r2521;
	and.b32  	%r2523, %r2475, %r2449;
	xor.b32  	%r2524, %r2522, %r2523;
	add.s32 	%r2525, %r2520, %r2524;
	add.s32 	%r2526, %r2515, %r2423;
	add.s32 	%r2527, %r2525, %r2515;
	add.s32 	%r2528, %r2527, 1779033703;
	add.s32 	%r2529, %r2501, -1150833019;
	add.s32 	%r2530, %r2475, 1013904242;
	add.s32 	%r2531, %r2449, -1521486534;
	add.s32 	%r2532, %r2526, 1359893119;
	add.s32 	%r2533, %r2500, -1694144372;
	add.s32 	%r2534, %r2474, 528734635;
	add.s32 	%r2535, %r2448, 1541459225;
	shr.u32 	%r2536, %r2528, 24;
	shl.b32 	%r2537, %r1, 5;
	cvt.s64.s32 	%rd22, %r2537;
	cvta.to.global.u64 	%rd23, %rd12;
	add.s64 	%rd24, %rd23, %rd22;
	st.global.u8 	[%rd24], %r2536;
	shr.u32 	%r2538, %r2528, 16;
	st.global.u8 	[%rd24+1], %r2538;
	shr.u32 	%r2539, %r2528, 8;
	st.global.u8 	[%rd24+2], %r2539;
	st.global.u8 	[%rd24+3], %r2528;
	shr.u32 	%r2540, %r2529, 24;
	st.global.u8 	[%rd24+4], %r2540;
	shr.u32 	%r2541, %r2529, 16;
	st.global.u8 	[%rd24+5], %r2541;
	shr.u32 	%r2542, %r2529, 8;
	st.global.u8 	[%rd24+6], %r2542;
	st.global.u8 	[%rd24+7], %r2529;
	shr.u32 	%r2543, %r2530, 24;
	st.global.u8 	[%rd24+8], %r2543;
	shr.u32 	%r2544, %r2530, 16;
	st.global.u8 	[%rd24+9], %r2544;
	shr.u32 	%r2545, %r2530, 8;
	st.global.u8 	[%rd24+10], %r2545;
	st.global.u8 	[%rd24+11], %r2530;
	shr.u32 	%r2546, %r2531, 24;
	st.global.u8 	[%rd24+12], %r2546;
	shr.u32 	%r2547, %r2531, 16;
	st.global.u8 	[%rd24+13], %r2547;
	shr.u32 	%r2548, %r2531, 8;
	st.global.u8 	[%rd24+14], %r2548;
	st.global.u8 	[%rd24+15], %r2531;
	shr.u32 	%r2549, %r2532, 24;
	st.global.u8 	[%rd24+16], %r2549;
	shr.u32 	%r2550, %r2532, 16;
	st.global.u8 	[%rd24+17], %r2550;
	shr.u32 	%r2551, %r2532, 8;
	st.global.u8 	[%rd24+18], %r2551;
	st.global.u8 	[%rd24+19], %r2532;
	shr.u32 	%r2552, %r2533, 24;
	st.global.u8 	[%rd24+20], %r2552;
	shr.u32 	%r2553, %r2533, 16;
	st.global.u8 	[%rd24+21], %r2553;
	shr.u32 	%r2554, %r2533, 8;
	st.global.u8 	[%rd24+22], %r2554;
	st.global.u8 	[%rd24+23], %r2533;
	shr.u32 	%r2555, %r2534, 24;
	st.global.u8 	[%rd24+24], %r2555;
	shr.u32 	%r2556, %r2534, 16;
	st.global.u8 	[%rd24+25], %r2556;
	shr.u32 	%r2557, %r2534, 8;
	st.global.u8 	[%rd24+26], %r2557;
	st.global.u8 	[%rd24+27], %r2534;
	shr.u32 	%r2558, %r2535, 24;
	st.global.u8 	[%rd24+28], %r2558;
	shr.u32 	%r2559, %r2535, 16;
	st.global.u8 	[%rd24+29], %r2559;
	shr.u32 	%r2560, %r2535, 8;
	st.global.u8 	[%rd24+30], %r2560;
	st.global.u8 	[%rd24+31], %r2535;

$L__BB0_9:
	ret;

}
	// .globl	_Z16kernel_keccak256PKhiPhi
.visible .entry _Z16kernel_keccak256PKhiPhi(
	.param .u64 _Z16kernel_keccak256PKhiPhi_param_0,
	.param .u32 _Z16kernel_keccak256PKhiPhi_param_1,
	.param .u64 _Z16kernel_keccak256PKhiPhi_param_2,
	.param .u32 _Z16kernel_keccak256PKhiPhi_param_3
)
{
	.local .align 16 .b8 	__local_depot1[400];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<170>;
	.reg .b64 	%rd<317>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.u64 	%rd92, [_Z16kernel_keccak256PKhiPhi_param_0];
	ld.param.u32 	%r15, [_Z16kernel_keccak256PKhiPhi_param_1];
	ld.param.u64 	%rd93, [_Z16kernel_keccak256PKhiPhi_param_2];
	ld.param.u32 	%r16, [_Z16kernel_keccak256PKhiPhi_param_3];
	add.u64 	%rd291, %SPL, 0;
	add.u64 	%rd2, %SPL, 192;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r1, %r18, %r17, %r19;
	setp.ge.s32 	%p1, %r1, %r16;
	@%p1 bra 	$L__BB1_13;

	cvta.to.global.u64 	%rd3, %rd93;
	cvta.to.global.u64 	%rd4, %rd92;
	mul.lo.s32 	%r21, %r1, %r15;
	cvt.s64.s32 	%rd5, %r21;
	shl.b32 	%r22, %r1, 5;
	cvt.s64.s32 	%rd6, %r22;
	mov.u32 	%r20, 0;
	mov.u64 	%rd288, %rd2;
	mov.u32 	%r164, %r20;

$L__BB1_2:
	st.local.v2.u32 	[%rd288], {%r20, %r20};
	add.s64 	%rd288, %rd288, 8;
	add.s32 	%r164, %r164, 1;
	setp.lt.u32 	%p2, %r164, 25;
	@%p2 bra 	$L__BB1_2;

	setp.lt.s32 	%p3, %r15, 1;
	@%p3 bra 	$L__BB1_10;

	add.s32 	%r25, %r15, -1;
	and.b32  	%r168, %r15, 3;
	setp.lt.u32 	%p4, %r25, 3;
	mov.u32 	%r166, 0;
	@%p4 bra 	$L__BB1_7;

	sub.s32 	%r5, %r168, %r15;
	add.s64 	%rd96, %rd4, %rd5;
	add.s64 	%rd289, %rd96, 1;

$L__BB1_6:
	shl.b32 	%r27, %r166, 3;
	and.b32  	%r28, %r27, 32;
	ld.global.u8 	%rd97, [%rd289+-1];
	shl.b64 	%rd98, %rd97, %r28;
	and.b32  	%r29, %r166, -8;
	cvt.u64.u32 	%rd99, %r29;
	add.s64 	%rd100, %rd2, %rd99;
	ld.local.u64 	%rd101, [%rd100];
	xor.b64  	%rd102, %rd98, %rd101;
	st.local.u64 	[%rd100], %rd102;
	add.s32 	%r30, %r27, 8;
	and.b32  	%r31, %r30, 40;
	ld.global.u8 	%rd103, [%rd289];
	shl.b64 	%rd104, %rd103, %r31;
	xor.b64  	%rd105, %rd104, %rd102;
	st.local.u64 	[%rd100], %rd105;
	add.s32 	%r32, %r27, 16;
	and.b32  	%r33, %r32, 48;
	ld.global.u8 	%rd106, [%rd289+1];
	shl.b64 	%rd107, %rd106, %r33;
	xor.b64  	%rd108, %rd107, %rd105;
	st.local.u64 	[%rd100], %rd108;
	add.s32 	%r34, %r27, 24;
	and.b32  	%r35, %r34, 56;
	ld.global.u8 	%rd109, [%rd289+2];
	shl.b64 	%rd110, %rd109, %r35;
	xor.b64  	%rd111, %rd110, %rd108;
	st.local.u64 	[%rd100], %rd111;
	add.s32 	%r166, %r166, 4;
	add.s32 	%r36, %r5, %r166;
	add.s64 	%rd289, %rd289, 4;
	setp.ne.s32 	%p5, %r36, 0;
	@%p5 bra 	$L__BB1_6;

$L__BB1_7:
	setp.eq.s32 	%p6, %r168, 0;
	@%p6 bra 	$L__BB1_10;

	cvt.s64.s32 	%rd112, %r166;
	add.s64 	%rd113, %rd112, %rd5;
	add.s64 	%rd290, %rd4, %rd113;

$L__BB1_9:
	.pragma "nounroll";
	shl.b32 	%r37, %r166, 3;
	and.b32  	%r38, %r37, 56;
	ld.global.u8 	%rd114, [%rd290];
	shl.b64 	%rd115, %rd114, %r38;
	and.b32  	%r39, %r166, -8;
	cvt.u64.u32 	%rd116, %r39;
	add.s64 	%rd117, %rd2, %rd116;
	ld.local.u64 	%rd118, [%rd117];
	xor.b64  	%rd119, %rd115, %rd118;
	st.local.u64 	[%rd117], %rd119;
	add.s32 	%r166, %r166, 1;
	add.s64 	%rd290, %rd290, 1;
	add.s32 	%r168, %r168, -1;
	setp.ne.s32 	%p7, %r168, 0;
	@%p7 bra 	$L__BB1_9;

$L__BB1_10:
	shr.s32 	%r41, %r15, 31;
	shr.u32 	%r42, %r41, 29;
	add.s32 	%r43, %r15, %r42;
	and.b32  	%r44, %r43, 536870904;
	sub.s32 	%r45, %r15, %r44;
	shl.b32 	%r46, %r45, 3;
	mov.u64 	%rd120, 1;
	shl.b64 	%rd121, %rd120, %r46;
	shr.s32 	%r47, %r43, 3;
	mul.wide.s32 	%rd122, %r47, 8;
	add.s64 	%rd123, %rd2, %rd122;
	ld.local.u64 	%rd124, [%rd123];
	xor.b64  	%rd125, %rd124, %rd121;
	st.local.u64 	[%rd123], %rd125;
	ld.local.u64 	%rd126, [%rd2+128];
	xor.b64  	%rd308, %rd126, -9223372036854775808;
	st.local.u64 	[%rd2+128], %rd308;
	mov.u64 	%rd127, 32898;
	st.local.v2.u64 	[%rd291], {%rd120, %rd127};
	mov.u64 	%rd128, -9223372034707259392;
	mov.u64 	%rd129, -9223372036854742902;
	st.local.v2.u64 	[%rd291+16], {%rd129, %rd128};
	mov.u64 	%rd130, 32907;
	mov.u64 	%rd131, 2147483649;
	st.local.v2.u64 	[%rd291+32], {%rd130, %rd131};
	mov.u64 	%rd132, -9223372036854743031;
	mov.u64 	%rd133, -9223372034707259263;
	st.local.v2.u64 	[%rd291+48], {%rd133, %rd132};
	mov.u64 	%rd134, 136;
	mov.u64 	%rd135, 138;
	st.local.v2.u64 	[%rd291+64], {%rd135, %rd134};
	mov.u64 	%rd136, 2147483658;
	mov.u64 	%rd137, 2147516425;
	st.local.v2.u64 	[%rd291+80], {%rd137, %rd136};
	mov.u64 	%rd138, -9223372036854775669;
	mov.u64 	%rd139, 2147516555;
	st.local.v2.u64 	[%rd291+96], {%rd139, %rd138};
	mov.u64 	%rd140, -9223372036854743037;
	mov.u64 	%rd141, -9223372036854742903;
	st.local.v2.u64 	[%rd291+112], {%rd141, %rd140};
	mov.u64 	%rd142, -9223372036854775680;
	mov.u64 	%rd143, -9223372036854743038;
	st.local.v2.u64 	[%rd291+128], {%rd143, %rd142};
	mov.u64 	%rd144, -9223372034707292150;
	mov.u64 	%rd145, 32778;
	st.local.v2.u64 	[%rd291+144], {%rd145, %rd144};
	mov.u64 	%rd146, -9223372036854742912;
	st.local.v2.u64 	[%rd291+160], {%rd133, %rd146};
	mov.u64 	%rd147, -9223372034707259384;
	st.local.v2.u64 	[%rd291+176], {%rd131, %rd147};
	ld.local.u64 	%rd316, [%rd2];
	ld.local.u64 	%rd315, [%rd2+40];
	ld.local.u64 	%rd314, [%rd2+80];
	ld.local.u64 	%rd313, [%rd2+120];
	ld.local.u64 	%rd312, [%rd2+160];
	ld.local.u64 	%rd311, [%rd2+8];
	ld.local.u64 	%rd310, [%rd2+48];
	ld.local.u64 	%rd309, [%rd2+88];
	ld.local.u64 	%rd307, [%rd2+168];
	ld.local.u64 	%rd306, [%rd2+16];
	ld.local.u64 	%rd305, [%rd2+56];
	ld.local.u64 	%rd304, [%rd2+96];
	ld.local.u64 	%rd303, [%rd2+136];
	ld.local.u64 	%rd302, [%rd2+176];
	ld.local.u64 	%rd301, [%rd2+24];
	ld.local.u64 	%rd300, [%rd2+64];
	ld.local.u64 	%rd299, [%rd2+104];
	ld.local.u64 	%rd298, [%rd2+144];
	ld.local.u64 	%rd297, [%rd2+184];
	ld.local.u64 	%rd296, [%rd2+32];
	ld.local.u64 	%rd295, [%rd2+72];
	ld.local.u64 	%rd294, [%rd2+112];
	ld.local.u64 	%rd293, [%rd2+152];
	ld.local.u64 	%rd292, [%rd2+192];
	mov.u32 	%r169, 0;

$L__BB1_11:
	xor.b64  	%rd148, %rd315, %rd316;
	xor.b64  	%rd149, %rd148, %rd314;
	xor.b64  	%rd150, %rd149, %rd313;
	xor.b64  	%rd151, %rd150, %rd312;
	xor.b64  	%rd152, %rd310, %rd311;
	xor.b64  	%rd153, %rd152, %rd309;
	xor.b64  	%rd154, %rd153, %rd308;
	xor.b64  	%rd155, %rd154, %rd307;
	xor.b64  	%rd156, %rd305, %rd306;
	xor.b64  	%rd157, %rd156, %rd304;
	xor.b64  	%rd158, %rd157, %rd303;
	xor.b64  	%rd159, %rd158, %rd302;
	xor.b64  	%rd160, %rd300, %rd301;
	xor.b64  	%rd161, %rd160, %rd299;
	xor.b64  	%rd162, %rd161, %rd298;
	xor.b64  	%rd163, %rd162, %rd297;
	xor.b64  	%rd164, %rd295, %rd296;
	xor.b64  	%rd165, %rd164, %rd294;
	xor.b64  	%rd166, %rd165, %rd293;
	xor.b64  	%rd167, %rd166, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r48,%dummy}, %rd155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r49}, %rd155;
	}
	shf.r.wrap.b32 	%r50, %r49, %r48, 1;
	shf.r.wrap.b32 	%r51, %r48, %r49, 1;
	mov.b64 	%rd168, {%r51, %r50};
	xor.b64  	%rd169, %rd168, %rd167;
	xor.b64  	%rd170, %rd169, %rd316;
	xor.b64  	%rd171, %rd169, %rd315;
	xor.b64  	%rd172, %rd169, %rd314;
	xor.b64  	%rd173, %rd169, %rd313;
	xor.b64  	%rd174, %rd169, %rd312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r52,%dummy}, %rd159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r53}, %rd159;
	}
	shf.r.wrap.b32 	%r54, %r53, %r52, 1;
	shf.r.wrap.b32 	%r55, %r52, %r53, 1;
	mov.b64 	%rd175, {%r55, %r54};
	xor.b64  	%rd176, %rd175, %rd151;
	xor.b64  	%rd177, %rd176, %rd311;
	xor.b64  	%rd178, %rd176, %rd310;
	xor.b64  	%rd179, %rd176, %rd309;
	xor.b64  	%rd180, %rd176, %rd308;
	xor.b64  	%rd181, %rd176, %rd307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r56,%dummy}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r57}, %rd163;
	}
	shf.r.wrap.b32 	%r58, %r57, %r56, 1;
	shf.r.wrap.b32 	%r59, %r56, %r57, 1;
	mov.b64 	%rd182, {%r59, %r58};
	xor.b64  	%rd183, %rd182, %rd155;
	xor.b64  	%rd184, %rd183, %rd306;
	xor.b64  	%rd185, %rd183, %rd305;
	xor.b64  	%rd186, %rd183, %rd304;
	xor.b64  	%rd187, %rd183, %rd303;
	xor.b64  	%rd188, %rd183, %rd302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r60,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r61}, %rd167;
	}
	shf.r.wrap.b32 	%r62, %r61, %r60, 1;
	shf.r.wrap.b32 	%r63, %r60, %r61, 1;
	mov.b64 	%rd189, {%r63, %r62};
	xor.b64  	%rd190, %rd189, %rd159;
	xor.b64  	%rd191, %rd190, %rd301;
	xor.b64  	%rd192, %rd190, %rd300;
	xor.b64  	%rd193, %rd190, %rd299;
	xor.b64  	%rd194, %rd190, %rd298;
	xor.b64  	%rd195, %rd190, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r65}, %rd151;
	}
	shf.r.wrap.b32 	%r66, %r65, %r64, 1;
	shf.r.wrap.b32 	%r67, %r64, %r65, 1;
	mov.b64 	%rd196, {%r67, %r66};
	xor.b64  	%rd197, %rd196, %rd163;
	xor.b64  	%rd198, %rd197, %rd296;
	xor.b64  	%rd199, %rd197, %rd295;
	xor.b64  	%rd200, %rd197, %rd294;
	xor.b64  	%rd201, %rd197, %rd293;
	xor.b64  	%rd202, %rd197, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r68,%dummy}, %rd177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r69}, %rd177;
	}
	shf.r.wrap.b32 	%r70, %r69, %r68, 1;
	shf.r.wrap.b32 	%r71, %r68, %r69, 1;
	mov.b64 	%rd203, {%r71, %r70};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r72,%dummy}, %rd172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r73}, %rd172;
	}
	shf.r.wrap.b32 	%r74, %r73, %r72, 3;
	shf.r.wrap.b32 	%r75, %r72, %r73, 3;
	mov.b64 	%rd204, {%r75, %r74};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r76,%dummy}, %rd185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd185;
	}
	shf.r.wrap.b32 	%r78, %r77, %r76, 6;
	shf.r.wrap.b32 	%r79, %r76, %r77, 6;
	mov.b64 	%rd205, {%r79, %r78};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r80,%dummy}, %rd179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r81}, %rd179;
	}
	shf.r.wrap.b32 	%r82, %r81, %r80, 10;
	shf.r.wrap.b32 	%r83, %r80, %r81, 10;
	mov.b64 	%rd206, {%r83, %r82};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r84,%dummy}, %rd187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r85}, %rd187;
	}
	shf.r.wrap.b32 	%r86, %r85, %r84, 15;
	shf.r.wrap.b32 	%r87, %r84, %r85, 15;
	mov.b64 	%rd207, {%r87, %r86};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r88,%dummy}, %rd194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r89}, %rd194;
	}
	shf.r.wrap.b32 	%r90, %r89, %r88, 21;
	shf.r.wrap.b32 	%r91, %r88, %r89, 21;
	mov.b64 	%rd208, {%r91, %r90};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r92,%dummy}, %rd191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r93}, %rd191;
	}
	shf.r.wrap.b32 	%r94, %r93, %r92, 28;
	shf.r.wrap.b32 	%r95, %r92, %r93, 28;
	mov.b64 	%rd209, {%r95, %r94};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r96}, %rd171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd171;
	}
	shf.l.wrap.b32 	%r98, %r97, %r96, 28;
	shf.l.wrap.b32 	%r99, %r96, %r97, 28;
	mov.b64 	%rd210, {%r99, %r98};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r100}, %rd180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r101,%dummy}, %rd180;
	}
	shf.l.wrap.b32 	%r102, %r101, %r100, 19;
	shf.l.wrap.b32 	%r103, %r100, %r101, 19;
	mov.b64 	%rd211, {%r103, %r102};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r104}, %rd192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r105,%dummy}, %rd192;
	}
	shf.l.wrap.b32 	%r106, %r105, %r104, 9;
	shf.l.wrap.b32 	%r107, %r104, %r105, 9;
	mov.b64 	%rd212, {%r107, %r106};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r108,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r109}, %rd181;
	}
	shf.r.wrap.b32 	%r110, %r109, %r108, 2;
	shf.r.wrap.b32 	%r111, %r108, %r109, 2;
	mov.b64 	%rd213, {%r111, %r110};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r112,%dummy}, %rd202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r113}, %rd202;
	}
	shf.r.wrap.b32 	%r114, %r113, %r112, 14;
	shf.r.wrap.b32 	%r115, %r112, %r113, 14;
	mov.b64 	%rd214, {%r115, %r114};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r116,%dummy}, %rd198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r117}, %rd198;
	}
	shf.r.wrap.b32 	%r118, %r117, %r116, 27;
	shf.r.wrap.b32 	%r119, %r116, %r117, 27;
	mov.b64 	%rd215, {%r119, %r118};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r120}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r121,%dummy}, %rd173;
	}
	shf.l.wrap.b32 	%r122, %r121, %r120, 23;
	shf.l.wrap.b32 	%r123, %r120, %r121, 23;
	mov.b64 	%rd216, {%r123, %r122};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r124}, %rd195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r125,%dummy}, %rd195;
	}
	shf.l.wrap.b32 	%r126, %r125, %r124, 8;
	shf.l.wrap.b32 	%r127, %r124, %r125, 8;
	mov.b64 	%rd217, {%r127, %r126};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r128,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r129}, %rd201;
	}
	shf.r.wrap.b32 	%r130, %r129, %r128, 8;
	shf.r.wrap.b32 	%r131, %r128, %r129, 8;
	mov.b64 	%rd218, {%r131, %r130};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r132,%dummy}, %rd193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r133}, %rd193;
	}
	shf.r.wrap.b32 	%r134, %r133, %r132, 25;
	shf.r.wrap.b32 	%r135, %r132, %r133, 25;
	mov.b64 	%rd219, {%r135, %r134};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r136}, %rd186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r137,%dummy}, %rd186;
	}
	shf.l.wrap.b32 	%r138, %r137, %r136, 21;
	shf.l.wrap.b32 	%r139, %r136, %r137, 21;
	mov.b64 	%rd220, {%r139, %r138};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r140}, %rd184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r141,%dummy}, %rd184;
	}
	shf.l.wrap.b32 	%r142, %r141, %r140, 2;
	shf.l.wrap.b32 	%r143, %r140, %r141, 2;
	mov.b64 	%rd221, {%r143, %r142};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r144,%dummy}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r145}, %rd174;
	}
	shf.r.wrap.b32 	%r146, %r145, %r144, 18;
	shf.r.wrap.b32 	%r147, %r144, %r145, 18;
	mov.b64 	%rd222, {%r147, %r146};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r148}, %rd200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r149,%dummy}, %rd200;
	}
	shf.l.wrap.b32 	%r150, %r149, %r148, 25;
	shf.l.wrap.b32 	%r151, %r148, %r149, 25;
	mov.b64 	%rd223, {%r151, %r150};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r152}, %rd188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd188;
	}
	shf.l.wrap.b32 	%r154, %r153, %r152, 3;
	shf.l.wrap.b32 	%r155, %r152, %r153, 3;
	mov.b64 	%rd224, {%r155, %r154};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r156,%dummy}, %rd199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r157}, %rd199;
	}
	shf.r.wrap.b32 	%r158, %r157, %r156, 20;
	shf.r.wrap.b32 	%r159, %r156, %r157, 20;
	mov.b64 	%rd225, {%r159, %r158};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r160}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r161,%dummy}, %rd178;
	}
	shf.l.wrap.b32 	%r162, %r161, %r160, 20;
	shf.l.wrap.b32 	%r163, %r160, %r161, 20;
	mov.b64 	%rd226, {%r163, %r162};
	xor.b64  	%rd227, %rd209, %rd170;
	xor.b64  	%rd228, %rd227, %rd203;
	xor.b64  	%rd229, %rd228, %rd215;
	xor.b64  	%rd230, %rd229, %rd221;
	xor.b64  	%rd231, %rd225, %rd226;
	xor.b64  	%rd232, %rd231, %rd205;
	xor.b64  	%rd233, %rd232, %rd210;
	xor.b64  	%rd234, %rd233, %rd212;
	xor.b64  	%rd235, %rd204, %rd220;
	xor.b64  	%rd236, %rd235, %rd219;
	xor.b64  	%rd237, %rd236, %rd206;
	xor.b64  	%rd238, %rd237, %rd223;
	xor.b64  	%rd239, %rd211, %rd208;
	xor.b64  	%rd240, %rd239, %rd218;
	xor.b64  	%rd241, %rd240, %rd207;
	xor.b64  	%rd242, %rd241, %rd216;
	xor.b64  	%rd243, %rd224, %rd214;
	xor.b64  	%rd244, %rd243, %rd222;
	xor.b64  	%rd245, %rd244, %rd217;
	xor.b64  	%rd246, %rd245, %rd213;
	not.b64 	%rd247, %rd234;
	and.b64  	%rd248, %rd238, %rd247;
	xor.b64  	%rd249, %rd170, %rd248;
	xor.b64  	%rd315, %rd209, %rd248;
	xor.b64  	%rd314, %rd203, %rd248;
	xor.b64  	%rd313, %rd215, %rd248;
	xor.b64  	%rd312, %rd221, %rd248;
	not.b64 	%rd250, %rd238;
	and.b64  	%rd251, %rd242, %rd250;
	xor.b64  	%rd311, %rd226, %rd251;
	xor.b64  	%rd310, %rd225, %rd251;
	xor.b64  	%rd309, %rd205, %rd251;
	xor.b64  	%rd308, %rd210, %rd251;
	xor.b64  	%rd307, %rd212, %rd251;
	not.b64 	%rd252, %rd242;
	and.b64  	%rd253, %rd246, %rd252;
	xor.b64  	%rd306, %rd220, %rd253;
	xor.b64  	%rd305, %rd204, %rd253;
	xor.b64  	%rd304, %rd219, %rd253;
	xor.b64  	%rd303, %rd206, %rd253;
	xor.b64  	%rd302, %rd223, %rd253;
	not.b64 	%rd254, %rd246;
	and.b64  	%rd255, %rd230, %rd254;
	xor.b64  	%rd301, %rd208, %rd255;
	xor.b64  	%rd300, %rd211, %rd255;
	xor.b64  	%rd299, %rd218, %rd255;
	xor.b64  	%rd298, %rd207, %rd255;
	xor.b64  	%rd297, %rd216, %rd255;
	not.b64 	%rd256, %rd230;
	and.b64  	%rd257, %rd234, %rd256;
	xor.b64  	%rd296, %rd214, %rd257;
	xor.b64  	%rd295, %rd224, %rd257;
	xor.b64  	%rd294, %rd222, %rd257;
	xor.b64  	%rd293, %rd217, %rd257;
	xor.b64  	%rd292, %rd213, %rd257;
	ld.local.u64 	%rd258, [%rd291];
	xor.b64  	%rd316, %rd249, %rd258;
	add.s64 	%rd291, %rd291, 8;
	add.s32 	%r169, %r169, 1;
	setp.ne.s32 	%p8, %r169, 24;
	@%p8 bra 	$L__BB1_11;

	add.s64 	%rd259, %rd3, %rd6;
	st.global.u8 	[%rd259], %rd316;
	shr.u64 	%rd260, %rd316, 8;
	st.global.u8 	[%rd259+1], %rd260;
	shr.u64 	%rd261, %rd316, 16;
	st.global.u8 	[%rd259+2], %rd261;
	shr.u64 	%rd262, %rd316, 24;
	st.global.u8 	[%rd259+3], %rd262;
	shr.u64 	%rd263, %rd316, 32;
	st.global.u8 	[%rd259+4], %rd263;
	shr.u64 	%rd264, %rd316, 40;
	st.global.u8 	[%rd259+5], %rd264;
	shr.u64 	%rd265, %rd316, 48;
	st.global.u8 	[%rd259+6], %rd265;
	shr.u64 	%rd266, %rd316, 56;
	st.global.u8 	[%rd259+7], %rd266;
	st.global.u8 	[%rd259+8], %rd311;
	shr.u64 	%rd267, %rd311, 8;
	st.global.u8 	[%rd259+9], %rd267;
	shr.u64 	%rd268, %rd311, 16;
	st.global.u8 	[%rd259+10], %rd268;
	shr.u64 	%rd269, %rd311, 24;
	st.global.u8 	[%rd259+11], %rd269;
	shr.u64 	%rd270, %rd311, 32;
	st.global.u8 	[%rd259+12], %rd270;
	shr.u64 	%rd271, %rd311, 40;
	st.global.u8 	[%rd259+13], %rd271;
	shr.u64 	%rd272, %rd311, 48;
	st.global.u8 	[%rd259+14], %rd272;
	shr.u64 	%rd273, %rd311, 56;
	st.global.u8 	[%rd259+15], %rd273;
	st.global.u8 	[%rd259+16], %rd306;
	shr.u64 	%rd274, %rd306, 8;
	st.global.u8 	[%rd259+17], %rd274;
	shr.u64 	%rd275, %rd306, 16;
	st.global.u8 	[%rd259+18], %rd275;
	shr.u64 	%rd276, %rd306, 24;
	st.global.u8 	[%rd259+19], %rd276;
	shr.u64 	%rd277, %rd306, 32;
	st.global.u8 	[%rd259+20], %rd277;
	shr.u64 	%rd278, %rd306, 40;
	st.global.u8 	[%rd259+21], %rd278;
	shr.u64 	%rd279, %rd306, 48;
	st.global.u8 	[%rd259+22], %rd279;
	shr.u64 	%rd280, %rd306, 56;
	st.global.u8 	[%rd259+23], %rd280;
	st.global.u8 	[%rd259+24], %rd301;
	shr.u64 	%rd281, %rd301, 8;
	st.global.u8 	[%rd259+25], %rd281;
	shr.u64 	%rd282, %rd301, 16;
	st.global.u8 	[%rd259+26], %rd282;
	shr.u64 	%rd283, %rd301, 24;
	st.global.u8 	[%rd259+27], %rd283;
	shr.u64 	%rd284, %rd301, 32;
	st.global.u8 	[%rd259+28], %rd284;
	shr.u64 	%rd285, %rd301, 40;
	st.global.u8 	[%rd259+29], %rd285;
	shr.u64 	%rd286, %rd301, 48;
	st.global.u8 	[%rd259+30], %rd286;
	shr.u64 	%rd287, %rd301, 56;
	st.global.u8 	[%rd259+31], %rd287;

$L__BB1_13:
	ret;

}
	// .globl	_Z22kernel_wordlist_lookupPciPi
.visible .entry _Z22kernel_wordlist_lookupPciPi(
	.param .u64 _Z22kernel_wordlist_lookupPciPi_param_0,
	.param .u32 _Z22kernel_wordlist_lookupPciPi_param_1,
	.param .u64 _Z22kernel_wordlist_lookupPciPi_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<16>;


	ld.param.u64 	%rd5, [_Z22kernel_wordlist_lookupPciPi_param_0];
	ld.param.u32 	%r6, [_Z22kernel_wordlist_lookupPciPi_param_1];
	ld.param.u64 	%rd6, [_Z22kernel_wordlist_lookupPciPi_param_2];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.s32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB2_7;

	cvta.to.global.u64 	%rd7, %rd6;
	mul.lo.s32 	%r11, %r1, 10;
	cvt.s64.s32 	%rd1, %r11;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd2, %rd7, %rd8;
	mov.u32 	%r12, -1;
	st.global.u32 	[%rd2], %r12;
	cvta.to.global.u64 	%rd3, %rd5;
	mov.u32 	%r10, 0;
	mov.u32 	%r14, %r10;

$L__BB2_2:
	cvt.s64.s32 	%rd4, %r14;
	mov.u32 	%r15, %r10;

$L__BB2_3:
	cvt.s64.s32 	%rd9, %r15;
	add.s64 	%rd10, %rd9, %rd1;
	add.s64 	%rd11, %rd3, %rd10;
	mul.lo.s64 	%rd12, %rd4, 10;
	mov.u64 	%rd13, wordlist;
	add.s64 	%rd14, %rd13, %rd12;
	add.s64 	%rd15, %rd14, %rd9;
	ld.const.u8 	%rs2, [%rd15];
	ld.global.u8 	%rs1, [%rd11];
	setp.eq.s16 	%p2, %rs1, %rs2;
	@%p2 bra 	$L__BB2_5;
	bra.uni 	$L__BB2_4;

$L__BB2_5:
	setp.ne.s16 	%p4, %rs1, 0;
	add.s32 	%r15, %r15, 1;
	setp.lt.u32 	%p5, %r15, 10;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB2_3;
	bra.uni 	$L__BB2_6;

$L__BB2_4:
	add.s32 	%r14, %r14, 1;
	setp.lt.u32 	%p3, %r14, 2048;
	@%p3 bra 	$L__BB2_2;
	bra.uni 	$L__BB2_7;

$L__BB2_6:
	st.global.u32 	[%rd2], %r14;

$L__BB2_7:
	ret;

}
	// .globl	_Z24kernel_validate_mnemonicPiiiS_
.visible .entry _Z24kernel_validate_mnemonicPiiiS_(
	.param .u64 _Z24kernel_validate_mnemonicPiiiS__param_0,
	.param .u32 _Z24kernel_validate_mnemonicPiiiS__param_1,
	.param .u32 _Z24kernel_validate_mnemonicPiiiS__param_2,
	.param .u64 _Z24kernel_validate_mnemonicPiiiS__param_3
)
{
	.local .align 16 .b8 	__local_depot3[96];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<118>;
	.reg .b32 	%r<2645>;
	.reg .b64 	%rd<53>;


	mov.u64 	%SPL, __local_depot3;
	ld.param.u64 	%rd12, [_Z24kernel_validate_mnemonicPiiiS__param_0];
	ld.param.u32 	%r36, [_Z24kernel_validate_mnemonicPiiiS__param_1];
	ld.param.u32 	%r37, [_Z24kernel_validate_mnemonicPiiiS__param_2];
	cvta.to.global.u64 	%rd1, %rd12;
	add.u64 	%rd2, %SPL, 0;
	add.u64 	%rd3, %SPL, 64;
	mov.u32 	%r38, %ntid.x;
	mov.u32 	%r39, %ctaid.x;
	mov.u32 	%r40, %tid.x;
	mad.lo.s32 	%r1, %r39, %r38, %r40;
	setp.ge.s32 	%p1, %r1, %r37;
	@%p1 bra 	$L__BB3_20;

	mul.lo.s32 	%r2, %r36, 11;
	mul.hi.s32 	%r41, %r36, 1431655766;
	shr.u32 	%r42, %r41, 31;
	add.s32 	%r3, %r41, %r42;
	sub.s32 	%r4, %r2, %r3;
	shr.s32 	%r43, %r4, 31;
	shr.u32 	%r44, %r43, 29;
	add.s32 	%r45, %r4, %r44;
	shr.s32 	%r5, %r45, 3;
	mov.u32 	%r46, 0;
	st.local.v4.u32 	[%rd3], {%r46, %r46, %r46, %r46};
	st.local.v4.u32 	[%rd3+16], {%r46, %r46, %r46, %r46};
	setp.lt.s32 	%p2, %r4, 1;
	@%p2 bra 	$L__BB3_8;

	mul.lo.s32 	%r6, %r1, %r36;
	not.b32 	%r48, %r3;
	add.s32 	%r49, %r2, %r48;
	and.b32  	%r2638, %r4, 3;
	setp.lt.u32 	%p3, %r49, 3;
	mov.u32 	%r2635, %r46;
	@%p3 bra 	$L__BB3_5;

	sub.s32 	%r2634, %r4, %r2638;
	mov.u32 	%r2635, 0;

$L__BB3_4:
	.pragma "nounroll";
	mul.wide.u32 	%rd15, %r2635, -1171354717;
	shr.u64 	%rd16, %rd15, 35;
	cvt.u32.u64 	%r51, %rd16;
	mul.lo.s32 	%r52, %r51, 11;
	sub.s32 	%r53, %r52, %r2635;
	add.s32 	%r54, %r53, 10;
	add.s32 	%r55, %r51, %r6;
	mul.wide.s32 	%rd17, %r55, 4;
	add.s64 	%rd18, %rd1, %rd17;
	ld.global.u32 	%r56, [%rd18];
	shr.u32 	%r57, %r56, %r54;
	and.b32  	%r58, %r2635, 4;
	xor.b32  	%r59, %r58, 7;
	shr.u32 	%r60, %r2635, 3;
	cvt.u64.u32 	%rd19, %r60;
	add.s64 	%rd20, %rd3, %rd19;
	cvt.u16.u32 	%rs1, %r57;
	and.b16  	%rs2, %rs1, 1;
	shl.b16 	%rs3, %rs2, %r59;
	ld.local.u8 	%rs4, [%rd20];
	or.b16  	%rs5, %rs4, %rs3;
	st.local.u8 	[%rd20], %rs5;
	add.s32 	%r61, %r2635, 1;
	mul.wide.u32 	%rd21, %r61, -1171354717;
	shr.u64 	%rd22, %rd21, 35;
	cvt.u32.u64 	%r62, %rd22;
	mul.lo.s32 	%r63, %r62, 11;
	sub.s32 	%r64, %r63, %r61;
	add.s32 	%r65, %r64, 10;
	add.s32 	%r66, %r62, %r6;
	mul.wide.s32 	%rd23, %r66, 4;
	add.s64 	%rd24, %rd1, %rd23;
	ld.global.u32 	%r67, [%rd24];
	shr.u32 	%r68, %r67, %r65;
	and.b32  	%r69, %r61, 4;
	xor.b32  	%r70, %r69, 6;
	cvt.u16.u32 	%rs6, %r68;
	and.b16  	%rs7, %rs6, 1;
	shl.b16 	%rs8, %rs7, %r70;
	or.b16  	%rs9, %rs5, %rs8;
	st.local.u8 	[%rd20], %rs9;
	add.s32 	%r71, %r2635, 2;
	mul.wide.u32 	%rd25, %r71, -1171354717;
	shr.u64 	%rd26, %rd25, 35;
	cvt.u32.u64 	%r72, %rd26;
	mul.lo.s32 	%r73, %r72, 11;
	sub.s32 	%r74, %r73, %r71;
	add.s32 	%r75, %r74, 10;
	add.s32 	%r76, %r72, %r6;
	mul.wide.s32 	%rd27, %r76, 4;
	add.s64 	%rd28, %rd1, %rd27;
	ld.global.u32 	%r77, [%rd28];
	shr.u32 	%r78, %r77, %r75;
	and.b32  	%r79, %r71, 4;
	xor.b32  	%r80, %r79, 5;
	cvt.u16.u32 	%rs10, %r78;
	and.b16  	%rs11, %rs10, 1;
	shl.b16 	%rs12, %rs11, %r80;
	or.b16  	%rs13, %rs9, %rs12;
	st.local.u8 	[%rd20], %rs13;
	add.s32 	%r81, %r2635, 3;
	not.b32 	%r82, %r81;
	mul.wide.u32 	%rd29, %r81, -1171354717;
	shr.u64 	%rd30, %rd29, 35;
	cvt.u32.u64 	%r83, %rd30;
	mul.lo.s32 	%r84, %r83, 11;
	sub.s32 	%r85, %r84, %r81;
	add.s32 	%r86, %r85, 10;
	add.s32 	%r87, %r83, %r6;
	mul.wide.s32 	%rd31, %r87, 4;
	add.s64 	%rd32, %rd1, %rd31;
	ld.global.u32 	%r88, [%rd32];
	shr.u32 	%r89, %r88, %r86;
	and.b32  	%r90, %r82, 4;
	cvt.u16.u32 	%rs14, %r89;
	and.b16  	%rs15, %rs14, 1;
	shl.b16 	%rs16, %rs15, %r90;
	or.b16  	%rs17, %rs13, %rs16;
	st.local.u8 	[%rd20], %rs17;
	add.s32 	%r2635, %r2635, 4;
	add.s32 	%r2634, %r2634, -4;
	setp.ne.s32 	%p4, %r2634, 0;
	@%p4 bra 	$L__BB3_4;

$L__BB3_5:
	setp.eq.s32 	%p5, %r2638, 0;
	@%p5 bra 	$L__BB3_8;

	mov.u32 	%r92, 10;
	sub.s32 	%r14, %r92, %r2635;
	mov.u32 	%r2636, 0;

$L__BB3_7:
	.pragma "nounroll";
	not.b32 	%r93, %r2635;
	mul.wide.u32 	%rd33, %r2635, -1171354717;
	shr.u64 	%rd34, %rd33, 35;
	cvt.u32.u64 	%r94, %rd34;
	mad.lo.s32 	%r95, %r94, 11, %r14;
	add.s32 	%r96, %r2636, %r95;
	add.s32 	%r97, %r94, %r6;
	mul.wide.s32 	%rd35, %r97, 4;
	add.s64 	%rd36, %rd1, %rd35;
	ld.global.u32 	%r98, [%rd36];
	shr.u32 	%r99, %r98, %r96;
	and.b32  	%r100, %r93, 7;
	shr.u32 	%r101, %r2635, 3;
	cvt.u64.u32 	%rd37, %r101;
	add.s64 	%rd38, %rd3, %rd37;
	cvt.u16.u32 	%rs18, %r99;
	and.b16  	%rs19, %rs18, 1;
	shl.b16 	%rs20, %rs19, %r100;
	ld.local.u8 	%rs21, [%rd38];
	or.b16  	%rs22, %rs21, %rs20;
	st.local.u8 	[%rd38], %rs22;
	add.s32 	%r2635, %r2635, 1;
	add.s32 	%r2636, %r2636, -1;
	add.s32 	%r2638, %r2638, -1;
	setp.ne.s32 	%p6, %r2638, 0;
	@%p6 bra 	$L__BB3_7;

$L__BB3_8:
	st.local.v4.u32 	[%rd2], {%r46, %r46, %r46, %r46};
	st.local.v4.u32 	[%rd2+16], {%r46, %r46, %r46, %r46};
	st.local.v4.u32 	[%rd2+32], {%r46, %r46, %r46, %r46};
	st.local.v4.u32 	[%rd2+48], {%r46, %r46, %r46, %r46};
	setp.lt.s32 	%p7, %r4, 8;
	@%p7 bra 	$L__BB3_15;

	add.s32 	%r104, %r5, -1;
	and.b32  	%r2642, %r5, 3;
	setp.lt.u32 	%p8, %r104, 3;
	mov.u32 	%r2641, 0;
	@%p8 bra 	$L__BB3_12;

	sub.s32 	%r2640, %r5, %r2642;

$L__BB3_11:
	cvt.s64.s32 	%rd39, %r2641;
	add.s64 	%rd40, %rd3, %rd39;
	ld.local.v4.u8 	{%rs23, %rs24, %rs25, %rs26}, [%rd40];
	add.s64 	%rd41, %rd2, %rd39;
	st.local.v4.u8 	[%rd41], {%rs23, %rs24, %rs25, %rs26};
	add.s32 	%r2641, %r2641, 4;
	add.s32 	%r2640, %r2640, -4;
	setp.ne.s32 	%p9, %r2640, 0;
	@%p9 bra 	$L__BB3_11;

$L__BB3_12:
	setp.eq.s32 	%p10, %r2642, 0;
	@%p10 bra 	$L__BB3_15;

	cvt.s64.s32 	%rd42, %r2641;
	add.s64 	%rd52, %rd2, %rd42;
	add.s64 	%rd51, %rd3, %rd42;

$L__BB3_14:
	.pragma "nounroll";
	ld.local.u8 	%rs31, [%rd51];
	st.local.u8 	[%rd52], %rs31;
	add.s64 	%rd52, %rd52, 1;
	add.s64 	%rd51, %rd51, 1;
	add.s32 	%r2642, %r2642, -1;
	setp.ne.s32 	%p11, %r2642, 0;
	@%p11 bra 	$L__BB3_14;

$L__BB3_15:
	cvt.s64.s32 	%rd43, %r5;
	add.s64 	%rd44, %rd2, %rd43;
	mov.u16 	%rs32, 128;
	st.local.u8 	[%rd44], %rs32;
	shr.u32 	%r107, %r5, 5;
	cvt.u16.u32 	%rs33, %r5;
	mov.u32 	%r106, 1;
	shl.b16 	%rs34, %rs33, 3;
	cvt.u16.u32 	%rs35, %r107;
	st.local.v2.u8 	[%rd2+62], {%rs35, %rs34};
	ld.local.v4.u32 	{%r108, %r109, %r110, %r111}, [%rd2];
	mov.b32 	{%rs36, %rs37}, %r108;
	shr.u16 	%rs38, %rs36, 8;
	shr.u16 	%rs39, %rs37, 8;
	mov.b32 	{%rs40, %rs41}, %r109;
	shr.u16 	%rs42, %rs40, 8;
	shr.u16 	%rs43, %rs41, 8;
	mov.b32 	{%rs44, %rs45}, %r110;
	shr.u16 	%rs46, %rs44, 8;
	shr.u16 	%rs47, %rs45, 8;
	mov.b32 	{%rs48, %rs49}, %r111;
	shr.u16 	%rs50, %rs48, 8;
	shr.u16 	%rs51, %rs49, 8;
	cvt.u32.u16 	%r116, %rs36;
	shl.b32 	%r117, %r116, 24;
	cvt.u32.u16 	%r118, %rs38;
	shl.b32 	%r119, %r118, 16;
	or.b32  	%r120, %r119, %r117;
	and.b16  	%rs52, %rs37, 255;
	mul.wide.u16 	%r121, %rs52, 256;
	or.b32  	%r122, %r120, %r121;
	cvt.u32.u16 	%r123, %rs39;
	or.b32  	%r124, %r122, %r123;
	cvt.u32.u16 	%r125, %rs40;
	shl.b32 	%r126, %r125, 24;
	cvt.u32.u16 	%r127, %rs42;
	shl.b32 	%r128, %r127, 16;
	or.b32  	%r129, %r128, %r126;
	and.b16  	%rs53, %rs41, 255;
	mul.wide.u16 	%r130, %rs53, 256;
	or.b32  	%r131, %r129, %r130;
	cvt.u32.u16 	%r132, %rs43;
	or.b32  	%r133, %r131, %r132;
	cvt.u32.u16 	%r134, %rs44;
	shl.b32 	%r135, %r134, 24;
	cvt.u32.u16 	%r136, %rs46;
	shl.b32 	%r137, %r136, 16;
	or.b32  	%r138, %r137, %r135;
	and.b16  	%rs54, %rs45, 255;
	mul.wide.u16 	%r139, %rs54, 256;
	or.b32  	%r140, %r138, %r139;
	cvt.u32.u16 	%r141, %rs47;
	or.b32  	%r142, %r140, %r141;
	cvt.u32.u16 	%r143, %rs48;
	shl.b32 	%r144, %r143, 24;
	cvt.u32.u16 	%r145, %rs50;
	shl.b32 	%r146, %r145, 16;
	or.b32  	%r147, %r146, %r144;
	and.b16  	%rs55, %rs49, 255;
	mul.wide.u16 	%r148, %rs55, 256;
	or.b32  	%r149, %r147, %r148;
	cvt.u32.u16 	%r150, %rs51;
	or.b32  	%r151, %r149, %r150;
	ld.local.v4.u32 	{%r152, %r153, %r154, %r155}, [%rd2+16];
	mov.b32 	{%rs56, %rs57}, %r152;
	shr.u16 	%rs58, %rs56, 8;
	shr.u16 	%rs59, %rs57, 8;
	mov.b32 	{%rs60, %rs61}, %r153;
	shr.u16 	%rs62, %rs60, 8;
	shr.u16 	%rs63, %rs61, 8;
	mov.b32 	{%rs64, %rs65}, %r154;
	shr.u16 	%rs66, %rs64, 8;
	shr.u16 	%rs67, %rs65, 8;
	mov.b32 	{%rs68, %rs69}, %r155;
	shr.u16 	%rs70, %rs68, 8;
	shr.u16 	%rs71, %rs69, 8;
	cvt.u32.u16 	%r160, %rs56;
	shl.b32 	%r161, %r160, 24;
	cvt.u32.u16 	%r162, %rs58;
	shl.b32 	%r163, %r162, 16;
	or.b32  	%r164, %r163, %r161;
	and.b16  	%rs72, %rs57, 255;
	mul.wide.u16 	%r165, %rs72, 256;
	or.b32  	%r166, %r164, %r165;
	cvt.u32.u16 	%r167, %rs59;
	or.b32  	%r168, %r166, %r167;
	cvt.u32.u16 	%r169, %rs60;
	shl.b32 	%r170, %r169, 24;
	cvt.u32.u16 	%r171, %rs62;
	shl.b32 	%r172, %r171, 16;
	or.b32  	%r173, %r172, %r170;
	and.b16  	%rs73, %rs61, 255;
	mul.wide.u16 	%r174, %rs73, 256;
	or.b32  	%r175, %r173, %r174;
	cvt.u32.u16 	%r176, %rs63;
	or.b32  	%r177, %r175, %r176;
	cvt.u32.u16 	%r178, %rs64;
	shl.b32 	%r179, %r178, 24;
	cvt.u32.u16 	%r180, %rs66;
	shl.b32 	%r181, %r180, 16;
	or.b32  	%r182, %r181, %r179;
	and.b16  	%rs74, %rs65, 255;
	mul.wide.u16 	%r183, %rs74, 256;
	or.b32  	%r184, %r182, %r183;
	cvt.u32.u16 	%r185, %rs67;
	or.b32  	%r186, %r184, %r185;
	cvt.u32.u16 	%r187, %rs68;
	shl.b32 	%r188, %r187, 24;
	cvt.u32.u16 	%r189, %rs70;
	shl.b32 	%r190, %r189, 16;
	or.b32  	%r191, %r190, %r188;
	and.b16  	%rs75, %rs69, 255;
	mul.wide.u16 	%r192, %rs75, 256;
	or.b32  	%r193, %r191, %r192;
	cvt.u32.u16 	%r194, %rs71;
	or.b32  	%r195, %r193, %r194;
	ld.local.v4.u32 	{%r196, %r197, %r198, %r199}, [%rd2+32];
	mov.b32 	{%rs76, %rs77}, %r196;
	shr.u16 	%rs78, %rs76, 8;
	shr.u16 	%rs79, %rs77, 8;
	mov.b32 	{%rs80, %rs81}, %r197;
	shr.u16 	%rs82, %rs80, 8;
	shr.u16 	%rs83, %rs81, 8;
	mov.b32 	{%rs84, %rs85}, %r198;
	shr.u16 	%rs86, %rs84, 8;
	shr.u16 	%rs87, %rs85, 8;
	mov.b32 	{%rs88, %rs89}, %r199;
	shr.u16 	%rs90, %rs88, 8;
	shr.u16 	%rs91, %rs89, 8;
	cvt.u32.u16 	%r204, %rs76;
	shl.b32 	%r205, %r204, 24;
	cvt.u32.u16 	%r206, %rs78;
	shl.b32 	%r207, %r206, 16;
	or.b32  	%r208, %r207, %r205;
	and.b16  	%rs92, %rs77, 255;
	mul.wide.u16 	%r209, %rs92, 256;
	or.b32  	%r210, %r208, %r209;
	cvt.u32.u16 	%r211, %rs79;
	or.b32  	%r212, %r210, %r211;
	cvt.u32.u16 	%r213, %rs80;
	shl.b32 	%r214, %r213, 24;
	cvt.u32.u16 	%r215, %rs82;
	shl.b32 	%r216, %r215, 16;
	or.b32  	%r217, %r216, %r214;
	and.b16  	%rs93, %rs81, 255;
	mul.wide.u16 	%r218, %rs93, 256;
	or.b32  	%r219, %r217, %r218;
	cvt.u32.u16 	%r220, %rs83;
	or.b32  	%r221, %r219, %r220;
	cvt.u32.u16 	%r222, %rs84;
	shl.b32 	%r223, %r222, 24;
	cvt.u32.u16 	%r224, %rs86;
	shl.b32 	%r225, %r224, 16;
	or.b32  	%r226, %r225, %r223;
	and.b16  	%rs94, %rs85, 255;
	mul.wide.u16 	%r227, %rs94, 256;
	or.b32  	%r228, %r226, %r227;
	cvt.u32.u16 	%r229, %rs87;
	or.b32  	%r230, %r228, %r229;
	cvt.u32.u16 	%r231, %rs88;
	shl.b32 	%r232, %r231, 24;
	cvt.u32.u16 	%r233, %rs90;
	shl.b32 	%r234, %r233, 16;
	or.b32  	%r235, %r234, %r232;
	and.b16  	%rs95, %rs89, 255;
	mul.wide.u16 	%r236, %rs95, 256;
	or.b32  	%r237, %r235, %r236;
	cvt.u32.u16 	%r238, %rs91;
	or.b32  	%r239, %r237, %r238;
	ld.local.v4.u16 	{%rs96, %rs97, %rs98, %rs99}, [%rd2+48];
	shr.u16 	%rs101, %rs96, 8;
	shr.u16 	%rs103, %rs97, 8;
	shr.u16 	%rs105, %rs98, 8;
	shr.u16 	%rs107, %rs99, 8;
	cvt.u32.u16 	%r240, %rs96;
	shl.b32 	%r241, %r240, 24;
	cvt.u32.u16 	%r242, %rs101;
	shl.b32 	%r243, %r242, 16;
	or.b32  	%r244, %r243, %r241;
	and.b16  	%rs108, %rs97, 255;
	mul.wide.u16 	%r245, %rs108, 256;
	or.b32  	%r246, %r244, %r245;
	cvt.u32.u16 	%r247, %rs103;
	or.b32  	%r248, %r246, %r247;
	cvt.u32.u16 	%r249, %rs98;
	shl.b32 	%r250, %r249, 24;
	cvt.u32.u16 	%r251, %rs105;
	shl.b32 	%r252, %r251, 16;
	or.b32  	%r253, %r252, %r250;
	and.b16  	%rs109, %rs99, 255;
	mul.wide.u16 	%r254, %rs109, 256;
	or.b32  	%r255, %r253, %r254;
	cvt.u32.u16 	%r256, %rs107;
	or.b32  	%r257, %r255, %r256;
	ld.local.v4.u8 	{%rs110, %rs111, %rs112, %rs113}, [%rd2+56];
	cvt.u32.u16 	%r258, %rs110;
	shl.b32 	%r259, %r258, 24;
	cvt.u32.u16 	%r260, %rs111;
	shl.b32 	%r261, %r260, 16;
	or.b32  	%r262, %r261, %r259;
	mul.wide.u16 	%r263, %rs112, 256;
	or.b32  	%r264, %r262, %r263;
	cvt.u32.u16 	%r265, %rs113;
	or.b32  	%r266, %r264, %r265;
	ld.local.v2.u8 	{%rs115, %rs116}, [%rd2+60];
	cvt.u32.u16 	%r267, %rs115;
	shl.b32 	%r268, %r267, 24;
	cvt.u32.u16 	%r269, %rs116;
	shl.b32 	%r270, %r269, 16;
	or.b32  	%r271, %r270, %r268;
	shl.b32 	%r272, %r5, 3;
	and.b32  	%r273, %r272, 65280;
	or.b32  	%r274, %r271, %r273;
	cvt.u32.u16 	%r275, %rs34;
	and.b32  	%r276, %r275, 248;
	or.b32  	%r277, %r274, %r276;
	shr.u32 	%r278, %r133, 7;
	shl.b32 	%r279, %r132, 25;
	or.b32  	%r280, %r279, %r278;
	shr.u32 	%r281, %r129, 18;
	shl.b32 	%r282, %r133, 14;
	or.b32  	%r283, %r282, %r281;
	shr.u32 	%r284, %r133, 3;
	xor.b32  	%r285, %r283, %r284;
	xor.b32  	%r286, %r285, %r280;
	shr.u32 	%r287, %r262, 17;
	shl.b32 	%r288, %r266, 15;
	or.b32  	%r289, %r288, %r287;
	shr.u32 	%r290, %r262, 19;
	shl.b32 	%r291, %r266, 13;
	or.b32  	%r292, %r291, %r290;
	shr.u32 	%r293, %r264, 10;
	xor.b32  	%r294, %r292, %r293;
	xor.b32  	%r295, %r294, %r289;
	add.s32 	%r296, %r221, %r124;
	add.s32 	%r297, %r296, %r286;
	add.s32 	%r298, %r297, %r295;
	shr.u32 	%r299, %r142, 7;
	shl.b32 	%r300, %r141, 25;
	or.b32  	%r301, %r300, %r299;
	shr.u32 	%r302, %r138, 18;
	shl.b32 	%r303, %r142, 14;
	or.b32  	%r304, %r303, %r302;
	shr.u32 	%r305, %r142, 3;
	xor.b32  	%r306, %r304, %r305;
	xor.b32  	%r307, %r306, %r301;
	shr.u32 	%r308, %r271, 17;
	shl.b32 	%r309, %r277, 15;
	or.b32  	%r310, %r309, %r308;
	shr.u32 	%r311, %r271, 19;
	shl.b32 	%r312, %r277, 13;
	or.b32  	%r313, %r312, %r311;
	shr.u32 	%r314, %r274, 10;
	xor.b32  	%r315, %r313, %r314;
	xor.b32  	%r316, %r315, %r310;
	add.s32 	%r317, %r230, %r133;
	add.s32 	%r318, %r317, %r307;
	add.s32 	%r319, %r318, %r316;
	shr.u32 	%r320, %r151, 7;
	shl.b32 	%r321, %r150, 25;
	or.b32  	%r322, %r321, %r320;
	shr.u32 	%r323, %r147, 18;
	shl.b32 	%r324, %r151, 14;
	or.b32  	%r325, %r324, %r323;
	shr.u32 	%r326, %r151, 3;
	xor.b32  	%r327, %r325, %r326;
	xor.b32  	%r328, %r327, %r322;
	shf.l.wrap.b32 	%r329, %r298, %r298, 15;
	shf.l.wrap.b32 	%r330, %r298, %r298, 13;
	shr.u32 	%r331, %r298, 10;
	xor.b32  	%r332, %r330, %r331;
	xor.b32  	%r333, %r332, %r329;
	add.s32 	%r334, %r239, %r142;
	add.s32 	%r335, %r334, %r328;
	add.s32 	%r336, %r335, %r333;
	shr.u32 	%r337, %r168, 7;
	shl.b32 	%r338, %r167, 25;
	or.b32  	%r339, %r338, %r337;
	shr.u32 	%r340, %r164, 18;
	shl.b32 	%r341, %r168, 14;
	or.b32  	%r342, %r341, %r340;
	shr.u32 	%r343, %r168, 3;
	xor.b32  	%r344, %r342, %r343;
	xor.b32  	%r345, %r344, %r339;
	shf.l.wrap.b32 	%r346, %r319, %r319, 15;
	shf.l.wrap.b32 	%r347, %r319, %r319, 13;
	shr.u32 	%r348, %r319, 10;
	xor.b32  	%r349, %r347, %r348;
	xor.b32  	%r350, %r349, %r346;
	add.s32 	%r351, %r248, %r151;
	add.s32 	%r352, %r351, %r345;
	add.s32 	%r353, %r352, %r350;
	shr.u32 	%r354, %r177, 7;
	shl.b32 	%r355, %r176, 25;
	or.b32  	%r356, %r355, %r354;
	shr.u32 	%r357, %r173, 18;
	shl.b32 	%r358, %r177, 14;
	or.b32  	%r359, %r358, %r357;
	shr.u32 	%r360, %r177, 3;
	xor.b32  	%r361, %r359, %r360;
	xor.b32  	%r362, %r361, %r356;
	shf.l.wrap.b32 	%r363, %r336, %r336, 15;
	shf.l.wrap.b32 	%r364, %r336, %r336, 13;
	shr.u32 	%r365, %r336, 10;
	xor.b32  	%r366, %r364, %r365;
	xor.b32  	%r367, %r366, %r363;
	add.s32 	%r368, %r257, %r168;
	add.s32 	%r369, %r368, %r362;
	add.s32 	%r370, %r369, %r367;
	shr.u32 	%r371, %r186, 7;
	shl.b32 	%r372, %r185, 25;
	or.b32  	%r373, %r372, %r371;
	shr.u32 	%r374, %r182, 18;
	shl.b32 	%r375, %r186, 14;
	or.b32  	%r376, %r375, %r374;
	shr.u32 	%r377, %r186, 3;
	xor.b32  	%r378, %r376, %r377;
	xor.b32  	%r379, %r378, %r373;
	shf.l.wrap.b32 	%r380, %r353, %r353, 15;
	shf.l.wrap.b32 	%r381, %r353, %r353, 13;
	shr.u32 	%r382, %r353, 10;
	xor.b32  	%r383, %r381, %r382;
	xor.b32  	%r384, %r383, %r380;
	add.s32 	%r385, %r266, %r177;
	add.s32 	%r386, %r385, %r379;
	add.s32 	%r387, %r386, %r384;
	shr.u32 	%r388, %r195, 7;
	shl.b32 	%r389, %r194, 25;
	or.b32  	%r390, %r389, %r388;
	shr.u32 	%r391, %r191, 18;
	shl.b32 	%r392, %r195, 14;
	or.b32  	%r393, %r392, %r391;
	shr.u32 	%r394, %r195, 3;
	xor.b32  	%r395, %r393, %r394;
	xor.b32  	%r396, %r395, %r390;
	shf.l.wrap.b32 	%r397, %r370, %r370, 15;
	shf.l.wrap.b32 	%r398, %r370, %r370, 13;
	shr.u32 	%r399, %r370, 10;
	xor.b32  	%r400, %r398, %r399;
	xor.b32  	%r401, %r400, %r397;
	add.s32 	%r402, %r277, %r186;
	add.s32 	%r403, %r402, %r396;
	add.s32 	%r404, %r403, %r401;
	shr.u32 	%r405, %r212, 7;
	shl.b32 	%r406, %r211, 25;
	or.b32  	%r407, %r406, %r405;
	shr.u32 	%r408, %r208, 18;
	shl.b32 	%r409, %r212, 14;
	or.b32  	%r410, %r409, %r408;
	shr.u32 	%r411, %r212, 3;
	xor.b32  	%r412, %r410, %r411;
	xor.b32  	%r413, %r412, %r407;
	shf.l.wrap.b32 	%r414, %r387, %r387, 15;
	shf.l.wrap.b32 	%r415, %r387, %r387, 13;
	shr.u32 	%r416, %r387, 10;
	xor.b32  	%r417, %r415, %r416;
	xor.b32  	%r418, %r417, %r414;
	add.s32 	%r419, %r298, %r195;
	add.s32 	%r420, %r419, %r413;
	add.s32 	%r421, %r420, %r418;
	shr.u32 	%r422, %r221, 7;
	shl.b32 	%r423, %r220, 25;
	or.b32  	%r424, %r423, %r422;
	shr.u32 	%r425, %r217, 18;
	shl.b32 	%r426, %r221, 14;
	or.b32  	%r427, %r426, %r425;
	shr.u32 	%r428, %r221, 3;
	xor.b32  	%r429, %r427, %r428;
	xor.b32  	%r430, %r429, %r424;
	shf.l.wrap.b32 	%r431, %r404, %r404, 15;
	shf.l.wrap.b32 	%r432, %r404, %r404, 13;
	shr.u32 	%r433, %r404, 10;
	xor.b32  	%r434, %r432, %r433;
	xor.b32  	%r435, %r434, %r431;
	add.s32 	%r436, %r319, %r212;
	add.s32 	%r437, %r436, %r430;
	add.s32 	%r438, %r437, %r435;
	shr.u32 	%r439, %r230, 7;
	shl.b32 	%r440, %r229, 25;
	or.b32  	%r441, %r440, %r439;
	shr.u32 	%r442, %r226, 18;
	shl.b32 	%r443, %r230, 14;
	or.b32  	%r444, %r443, %r442;
	shr.u32 	%r445, %r230, 3;
	xor.b32  	%r446, %r444, %r445;
	xor.b32  	%r447, %r446, %r441;
	shf.l.wrap.b32 	%r448, %r421, %r421, 15;
	shf.l.wrap.b32 	%r449, %r421, %r421, 13;
	shr.u32 	%r450, %r421, 10;
	xor.b32  	%r451, %r449, %r450;
	xor.b32  	%r452, %r451, %r448;
	add.s32 	%r453, %r336, %r221;
	add.s32 	%r454, %r453, %r447;
	add.s32 	%r455, %r454, %r452;
	shr.u32 	%r456, %r239, 7;
	shl.b32 	%r457, %r238, 25;
	or.b32  	%r458, %r457, %r456;
	shr.u32 	%r459, %r235, 18;
	shl.b32 	%r460, %r239, 14;
	or.b32  	%r461, %r460, %r459;
	shr.u32 	%r462, %r239, 3;
	xor.b32  	%r463, %r461, %r462;
	xor.b32  	%r464, %r463, %r458;
	shf.l.wrap.b32 	%r465, %r438, %r438, 15;
	shf.l.wrap.b32 	%r466, %r438, %r438, 13;
	shr.u32 	%r467, %r438, 10;
	xor.b32  	%r468, %r466, %r467;
	xor.b32  	%r469, %r468, %r465;
	add.s32 	%r470, %r353, %r230;
	add.s32 	%r471, %r470, %r464;
	add.s32 	%r472, %r471, %r469;
	shr.u32 	%r473, %r248, 7;
	shl.b32 	%r474, %r247, 25;
	or.b32  	%r475, %r474, %r473;
	shr.u32 	%r476, %r244, 18;
	shl.b32 	%r477, %r248, 14;
	or.b32  	%r478, %r477, %r476;
	shr.u32 	%r479, %r248, 3;
	xor.b32  	%r480, %r478, %r479;
	xor.b32  	%r481, %r480, %r475;
	shf.l.wrap.b32 	%r482, %r455, %r455, 15;
	shf.l.wrap.b32 	%r483, %r455, %r455, 13;
	shr.u32 	%r484, %r455, 10;
	xor.b32  	%r485, %r483, %r484;
	xor.b32  	%r486, %r485, %r482;
	add.s32 	%r487, %r370, %r239;
	add.s32 	%r488, %r487, %r481;
	add.s32 	%r489, %r488, %r486;
	shr.u32 	%r490, %r257, 7;
	shl.b32 	%r491, %r256, 25;
	or.b32  	%r492, %r491, %r490;
	shr.u32 	%r493, %r253, 18;
	shl.b32 	%r494, %r257, 14;
	or.b32  	%r495, %r494, %r493;
	shr.u32 	%r496, %r257, 3;
	xor.b32  	%r497, %r495, %r496;
	xor.b32  	%r498, %r497, %r492;
	shf.l.wrap.b32 	%r499, %r472, %r472, 15;
	shf.l.wrap.b32 	%r500, %r472, %r472, 13;
	shr.u32 	%r501, %r472, 10;
	xor.b32  	%r502, %r500, %r501;
	xor.b32  	%r503, %r502, %r499;
	add.s32 	%r504, %r387, %r248;
	add.s32 	%r505, %r504, %r498;
	add.s32 	%r506, %r505, %r503;
	shr.u32 	%r507, %r266, 7;
	shl.b32 	%r508, %r265, 25;
	or.b32  	%r509, %r508, %r507;
	shr.u32 	%r510, %r262, 18;
	shl.b32 	%r511, %r266, 14;
	or.b32  	%r512, %r511, %r510;
	shr.u32 	%r513, %r266, 3;
	xor.b32  	%r514, %r512, %r513;
	xor.b32  	%r515, %r514, %r509;
	shf.l.wrap.b32 	%r516, %r489, %r489, 15;
	shf.l.wrap.b32 	%r517, %r489, %r489, 13;
	shr.u32 	%r518, %r489, 10;
	xor.b32  	%r519, %r517, %r518;
	xor.b32  	%r520, %r519, %r516;
	add.s32 	%r521, %r404, %r257;
	add.s32 	%r522, %r521, %r515;
	add.s32 	%r523, %r522, %r520;
	shr.u32 	%r524, %r277, 7;
	shl.b32 	%r525, %r5, 28;
	or.b32  	%r526, %r525, %r524;
	shr.u32 	%r527, %r271, 18;
	shl.b32 	%r528, %r277, 14;
	or.b32  	%r529, %r528, %r527;
	shr.u32 	%r530, %r277, 3;
	xor.b32  	%r531, %r529, %r530;
	xor.b32  	%r532, %r531, %r526;
	shf.l.wrap.b32 	%r533, %r506, %r506, 15;
	shf.l.wrap.b32 	%r534, %r506, %r506, 13;
	shr.u32 	%r535, %r506, 10;
	xor.b32  	%r536, %r534, %r535;
	xor.b32  	%r537, %r536, %r533;
	add.s32 	%r538, %r421, %r266;
	add.s32 	%r539, %r538, %r532;
	add.s32 	%r540, %r539, %r537;
	shf.l.wrap.b32 	%r541, %r298, %r298, 25;
	shf.l.wrap.b32 	%r542, %r298, %r298, 14;
	shr.u32 	%r543, %r298, 3;
	xor.b32  	%r544, %r542, %r543;
	xor.b32  	%r545, %r544, %r541;
	shf.l.wrap.b32 	%r546, %r523, %r523, 15;
	shf.l.wrap.b32 	%r547, %r523, %r523, 13;
	shr.u32 	%r548, %r523, 10;
	xor.b32  	%r549, %r547, %r548;
	xor.b32  	%r550, %r549, %r546;
	add.s32 	%r551, %r438, %r277;
	add.s32 	%r552, %r551, %r545;
	add.s32 	%r553, %r552, %r550;
	shf.l.wrap.b32 	%r554, %r319, %r319, 25;
	shf.l.wrap.b32 	%r555, %r319, %r319, 14;
	shr.u32 	%r556, %r319, 3;
	xor.b32  	%r557, %r555, %r556;
	xor.b32  	%r558, %r557, %r554;
	shf.l.wrap.b32 	%r559, %r540, %r540, 15;
	shf.l.wrap.b32 	%r560, %r540, %r540, 13;
	shr.u32 	%r561, %r540, 10;
	xor.b32  	%r562, %r560, %r561;
	xor.b32  	%r563, %r562, %r559;
	add.s32 	%r564, %r455, %r298;
	add.s32 	%r565, %r564, %r558;
	add.s32 	%r566, %r565, %r563;
	shf.l.wrap.b32 	%r567, %r336, %r336, 25;
	shf.l.wrap.b32 	%r568, %r336, %r336, 14;
	shr.u32 	%r569, %r336, 3;
	xor.b32  	%r570, %r568, %r569;
	xor.b32  	%r571, %r570, %r567;
	shf.l.wrap.b32 	%r572, %r553, %r553, 15;
	shf.l.wrap.b32 	%r573, %r553, %r553, 13;
	shr.u32 	%r574, %r553, 10;
	xor.b32  	%r575, %r573, %r574;
	xor.b32  	%r576, %r575, %r572;
	add.s32 	%r577, %r472, %r319;
	add.s32 	%r578, %r577, %r571;
	add.s32 	%r579, %r578, %r576;
	shf.l.wrap.b32 	%r580, %r353, %r353, 25;
	shf.l.wrap.b32 	%r581, %r353, %r353, 14;
	shr.u32 	%r582, %r353, 3;
	xor.b32  	%r583, %r581, %r582;
	xor.b32  	%r584, %r583, %r580;
	shf.l.wrap.b32 	%r585, %r566, %r566, 15;
	shf.l.wrap.b32 	%r586, %r566, %r566, 13;
	shr.u32 	%r587, %r566, 10;
	xor.b32  	%r588, %r586, %r587;
	xor.b32  	%r589, %r588, %r585;
	add.s32 	%r590, %r489, %r336;
	add.s32 	%r591, %r590, %r584;
	add.s32 	%r592, %r591, %r589;
	shf.l.wrap.b32 	%r593, %r370, %r370, 25;
	shf.l.wrap.b32 	%r594, %r370, %r370, 14;
	shr.u32 	%r595, %r370, 3;
	xor.b32  	%r596, %r594, %r595;
	xor.b32  	%r597, %r596, %r593;
	shf.l.wrap.b32 	%r598, %r579, %r579, 15;
	shf.l.wrap.b32 	%r599, %r579, %r579, 13;
	shr.u32 	%r600, %r579, 10;
	xor.b32  	%r601, %r599, %r600;
	xor.b32  	%r602, %r601, %r598;
	add.s32 	%r603, %r506, %r353;
	add.s32 	%r604, %r603, %r597;
	add.s32 	%r605, %r604, %r602;
	shf.l.wrap.b32 	%r606, %r387, %r387, 25;
	shf.l.wrap.b32 	%r607, %r387, %r387, 14;
	shr.u32 	%r608, %r387, 3;
	xor.b32  	%r609, %r607, %r608;
	xor.b32  	%r610, %r609, %r606;
	shf.l.wrap.b32 	%r611, %r592, %r592, 15;
	shf.l.wrap.b32 	%r612, %r592, %r592, 13;
	shr.u32 	%r613, %r592, 10;
	xor.b32  	%r614, %r612, %r613;
	xor.b32  	%r615, %r614, %r611;
	add.s32 	%r616, %r523, %r370;
	add.s32 	%r617, %r616, %r610;
	add.s32 	%r618, %r617, %r615;
	shf.l.wrap.b32 	%r619, %r404, %r404, 25;
	shf.l.wrap.b32 	%r620, %r404, %r404, 14;
	shr.u32 	%r621, %r404, 3;
	xor.b32  	%r622, %r620, %r621;
	xor.b32  	%r623, %r622, %r619;
	shf.l.wrap.b32 	%r624, %r605, %r605, 15;
	shf.l.wrap.b32 	%r625, %r605, %r605, 13;
	shr.u32 	%r626, %r605, 10;
	xor.b32  	%r627, %r625, %r626;
	xor.b32  	%r628, %r627, %r624;
	add.s32 	%r629, %r540, %r387;
	add.s32 	%r630, %r629, %r623;
	add.s32 	%r631, %r630, %r628;
	shf.l.wrap.b32 	%r632, %r421, %r421, 25;
	shf.l.wrap.b32 	%r633, %r421, %r421, 14;
	shr.u32 	%r634, %r421, 3;
	xor.b32  	%r635, %r633, %r634;
	xor.b32  	%r636, %r635, %r632;
	shf.l.wrap.b32 	%r637, %r618, %r618, 15;
	shf.l.wrap.b32 	%r638, %r618, %r618, 13;
	shr.u32 	%r639, %r618, 10;
	xor.b32  	%r640, %r638, %r639;
	xor.b32  	%r641, %r640, %r637;
	add.s32 	%r642, %r553, %r404;
	add.s32 	%r643, %r642, %r636;
	add.s32 	%r644, %r643, %r641;
	shf.l.wrap.b32 	%r645, %r438, %r438, 25;
	shf.l.wrap.b32 	%r646, %r438, %r438, 14;
	shr.u32 	%r647, %r438, 3;
	xor.b32  	%r648, %r646, %r647;
	xor.b32  	%r649, %r648, %r645;
	shf.l.wrap.b32 	%r650, %r631, %r631, 15;
	shf.l.wrap.b32 	%r651, %r631, %r631, 13;
	shr.u32 	%r652, %r631, 10;
	xor.b32  	%r653, %r651, %r652;
	xor.b32  	%r654, %r653, %r650;
	add.s32 	%r655, %r566, %r421;
	add.s32 	%r656, %r655, %r649;
	add.s32 	%r657, %r656, %r654;
	shf.l.wrap.b32 	%r658, %r455, %r455, 25;
	shf.l.wrap.b32 	%r659, %r455, %r455, 14;
	shr.u32 	%r660, %r455, 3;
	xor.b32  	%r661, %r659, %r660;
	xor.b32  	%r662, %r661, %r658;
	shf.l.wrap.b32 	%r663, %r644, %r644, 15;
	shf.l.wrap.b32 	%r664, %r644, %r644, 13;
	shr.u32 	%r665, %r644, 10;
	xor.b32  	%r666, %r664, %r665;
	xor.b32  	%r667, %r666, %r663;
	add.s32 	%r668, %r579, %r438;
	add.s32 	%r669, %r668, %r662;
	add.s32 	%r670, %r669, %r667;
	shf.l.wrap.b32 	%r671, %r472, %r472, 25;
	shf.l.wrap.b32 	%r672, %r472, %r472, 14;
	shr.u32 	%r673, %r472, 3;
	xor.b32  	%r674, %r672, %r673;
	xor.b32  	%r675, %r674, %r671;
	shf.l.wrap.b32 	%r676, %r657, %r657, 15;
	shf.l.wrap.b32 	%r677, %r657, %r657, 13;
	shr.u32 	%r678, %r657, 10;
	xor.b32  	%r679, %r677, %r678;
	xor.b32  	%r680, %r679, %r676;
	add.s32 	%r681, %r592, %r455;
	add.s32 	%r682, %r681, %r675;
	add.s32 	%r683, %r682, %r680;
	shf.l.wrap.b32 	%r684, %r489, %r489, 25;
	shf.l.wrap.b32 	%r685, %r489, %r489, 14;
	shr.u32 	%r686, %r489, 3;
	xor.b32  	%r687, %r685, %r686;
	xor.b32  	%r688, %r687, %r684;
	shf.l.wrap.b32 	%r689, %r670, %r670, 15;
	shf.l.wrap.b32 	%r690, %r670, %r670, 13;
	shr.u32 	%r691, %r670, 10;
	xor.b32  	%r692, %r690, %r691;
	xor.b32  	%r693, %r692, %r689;
	add.s32 	%r694, %r605, %r472;
	add.s32 	%r695, %r694, %r688;
	add.s32 	%r696, %r695, %r693;
	shf.l.wrap.b32 	%r697, %r506, %r506, 25;
	shf.l.wrap.b32 	%r698, %r506, %r506, 14;
	shr.u32 	%r699, %r506, 3;
	xor.b32  	%r700, %r698, %r699;
	xor.b32  	%r701, %r700, %r697;
	shf.l.wrap.b32 	%r702, %r683, %r683, 15;
	shf.l.wrap.b32 	%r703, %r683, %r683, 13;
	shr.u32 	%r704, %r683, 10;
	xor.b32  	%r705, %r703, %r704;
	xor.b32  	%r706, %r705, %r702;
	add.s32 	%r707, %r618, %r489;
	add.s32 	%r708, %r707, %r701;
	add.s32 	%r709, %r708, %r706;
	shf.l.wrap.b32 	%r710, %r523, %r523, 25;
	shf.l.wrap.b32 	%r711, %r523, %r523, 14;
	shr.u32 	%r712, %r523, 3;
	xor.b32  	%r713, %r711, %r712;
	xor.b32  	%r714, %r713, %r710;
	shf.l.wrap.b32 	%r715, %r696, %r696, 15;
	shf.l.wrap.b32 	%r716, %r696, %r696, 13;
	shr.u32 	%r717, %r696, 10;
	xor.b32  	%r718, %r716, %r717;
	xor.b32  	%r719, %r718, %r715;
	add.s32 	%r720, %r631, %r506;
	add.s32 	%r721, %r720, %r714;
	add.s32 	%r722, %r721, %r719;
	shf.l.wrap.b32 	%r723, %r540, %r540, 25;
	shf.l.wrap.b32 	%r724, %r540, %r540, 14;
	shr.u32 	%r725, %r540, 3;
	xor.b32  	%r726, %r724, %r725;
	xor.b32  	%r727, %r726, %r723;
	shf.l.wrap.b32 	%r728, %r709, %r709, 15;
	shf.l.wrap.b32 	%r729, %r709, %r709, 13;
	shr.u32 	%r730, %r709, 10;
	xor.b32  	%r731, %r729, %r730;
	xor.b32  	%r732, %r731, %r728;
	add.s32 	%r733, %r644, %r523;
	add.s32 	%r734, %r733, %r727;
	add.s32 	%r735, %r734, %r732;
	shf.l.wrap.b32 	%r736, %r553, %r553, 25;
	shf.l.wrap.b32 	%r737, %r553, %r553, 14;
	shr.u32 	%r738, %r553, 3;
	xor.b32  	%r739, %r737, %r738;
	xor.b32  	%r740, %r739, %r736;
	shf.l.wrap.b32 	%r741, %r722, %r722, 15;
	shf.l.wrap.b32 	%r742, %r722, %r722, 13;
	shr.u32 	%r743, %r722, 10;
	xor.b32  	%r744, %r742, %r743;
	xor.b32  	%r745, %r744, %r741;
	add.s32 	%r746, %r657, %r540;
	add.s32 	%r747, %r746, %r740;
	add.s32 	%r748, %r747, %r745;
	shf.l.wrap.b32 	%r749, %r566, %r566, 25;
	shf.l.wrap.b32 	%r750, %r566, %r566, 14;
	shr.u32 	%r751, %r566, 3;
	xor.b32  	%r752, %r750, %r751;
	xor.b32  	%r753, %r752, %r749;
	shf.l.wrap.b32 	%r754, %r735, %r735, 15;
	shf.l.wrap.b32 	%r755, %r735, %r735, 13;
	shr.u32 	%r756, %r735, 10;
	xor.b32  	%r757, %r755, %r756;
	xor.b32  	%r758, %r757, %r754;
	add.s32 	%r759, %r670, %r553;
	add.s32 	%r760, %r759, %r753;
	add.s32 	%r761, %r760, %r758;
	shf.l.wrap.b32 	%r762, %r579, %r579, 25;
	shf.l.wrap.b32 	%r763, %r579, %r579, 14;
	shr.u32 	%r764, %r579, 3;
	xor.b32  	%r765, %r763, %r764;
	xor.b32  	%r766, %r765, %r762;
	shf.l.wrap.b32 	%r767, %r748, %r748, 15;
	shf.l.wrap.b32 	%r768, %r748, %r748, 13;
	shr.u32 	%r769, %r748, 10;
	xor.b32  	%r770, %r768, %r769;
	xor.b32  	%r771, %r770, %r767;
	add.s32 	%r772, %r683, %r566;
	add.s32 	%r773, %r772, %r766;
	add.s32 	%r774, %r773, %r771;
	shf.l.wrap.b32 	%r775, %r592, %r592, 25;
	shf.l.wrap.b32 	%r776, %r592, %r592, 14;
	shr.u32 	%r777, %r592, 3;
	xor.b32  	%r778, %r776, %r777;
	xor.b32  	%r779, %r778, %r775;
	shf.l.wrap.b32 	%r780, %r761, %r761, 15;
	shf.l.wrap.b32 	%r781, %r761, %r761, 13;
	shr.u32 	%r782, %r761, 10;
	xor.b32  	%r783, %r781, %r782;
	xor.b32  	%r784, %r783, %r780;
	add.s32 	%r785, %r696, %r579;
	add.s32 	%r786, %r785, %r779;
	add.s32 	%r787, %r786, %r784;
	shf.l.wrap.b32 	%r788, %r605, %r605, 25;
	shf.l.wrap.b32 	%r789, %r605, %r605, 14;
	shr.u32 	%r790, %r605, 3;
	xor.b32  	%r791, %r789, %r790;
	xor.b32  	%r792, %r791, %r788;
	shf.l.wrap.b32 	%r793, %r774, %r774, 15;
	shf.l.wrap.b32 	%r794, %r774, %r774, 13;
	shr.u32 	%r795, %r774, 10;
	xor.b32  	%r796, %r794, %r795;
	xor.b32  	%r797, %r796, %r793;
	add.s32 	%r798, %r709, %r592;
	add.s32 	%r799, %r798, %r792;
	add.s32 	%r800, %r799, %r797;
	shf.l.wrap.b32 	%r801, %r618, %r618, 25;
	shf.l.wrap.b32 	%r802, %r618, %r618, 14;
	shr.u32 	%r803, %r618, 3;
	xor.b32  	%r804, %r802, %r803;
	xor.b32  	%r805, %r804, %r801;
	shf.l.wrap.b32 	%r806, %r787, %r787, 15;
	shf.l.wrap.b32 	%r807, %r787, %r787, 13;
	shr.u32 	%r808, %r787, 10;
	xor.b32  	%r809, %r807, %r808;
	xor.b32  	%r810, %r809, %r806;
	add.s32 	%r811, %r722, %r605;
	add.s32 	%r812, %r811, %r805;
	add.s32 	%r813, %r812, %r810;
	shf.l.wrap.b32 	%r814, %r631, %r631, 25;
	shf.l.wrap.b32 	%r815, %r631, %r631, 14;
	shr.u32 	%r816, %r631, 3;
	xor.b32  	%r817, %r815, %r816;
	xor.b32  	%r818, %r817, %r814;
	shf.l.wrap.b32 	%r819, %r800, %r800, 15;
	shf.l.wrap.b32 	%r820, %r800, %r800, 13;
	shr.u32 	%r821, %r800, 10;
	xor.b32  	%r822, %r820, %r821;
	xor.b32  	%r823, %r822, %r819;
	add.s32 	%r824, %r735, %r618;
	add.s32 	%r825, %r824, %r818;
	add.s32 	%r826, %r825, %r823;
	shf.l.wrap.b32 	%r827, %r644, %r644, 25;
	shf.l.wrap.b32 	%r828, %r644, %r644, 14;
	shr.u32 	%r829, %r644, 3;
	xor.b32  	%r830, %r828, %r829;
	xor.b32  	%r831, %r830, %r827;
	shf.l.wrap.b32 	%r832, %r813, %r813, 15;
	shf.l.wrap.b32 	%r833, %r813, %r813, 13;
	shr.u32 	%r834, %r813, 10;
	xor.b32  	%r835, %r833, %r834;
	xor.b32  	%r836, %r835, %r832;
	add.s32 	%r837, %r748, %r631;
	add.s32 	%r838, %r837, %r831;
	add.s32 	%r839, %r838, %r836;
	shf.l.wrap.b32 	%r840, %r657, %r657, 25;
	shf.l.wrap.b32 	%r841, %r657, %r657, 14;
	shr.u32 	%r842, %r657, 3;
	xor.b32  	%r843, %r841, %r842;
	xor.b32  	%r844, %r843, %r840;
	shf.l.wrap.b32 	%r845, %r826, %r826, 15;
	shf.l.wrap.b32 	%r846, %r826, %r826, 13;
	shr.u32 	%r847, %r826, 10;
	xor.b32  	%r848, %r846, %r847;
	xor.b32  	%r849, %r848, %r845;
	add.s32 	%r850, %r761, %r644;
	add.s32 	%r851, %r850, %r844;
	add.s32 	%r852, %r851, %r849;
	shf.l.wrap.b32 	%r853, %r670, %r670, 25;
	shf.l.wrap.b32 	%r854, %r670, %r670, 14;
	shr.u32 	%r855, %r670, 3;
	xor.b32  	%r856, %r854, %r855;
	xor.b32  	%r857, %r856, %r853;
	shf.l.wrap.b32 	%r858, %r839, %r839, 15;
	shf.l.wrap.b32 	%r859, %r839, %r839, 13;
	shr.u32 	%r860, %r839, 10;
	xor.b32  	%r861, %r859, %r860;
	xor.b32  	%r862, %r861, %r858;
	add.s32 	%r863, %r774, %r657;
	add.s32 	%r864, %r863, %r857;
	add.s32 	%r865, %r864, %r862;
	shf.l.wrap.b32 	%r866, %r683, %r683, 25;
	shf.l.wrap.b32 	%r867, %r683, %r683, 14;
	shr.u32 	%r868, %r683, 3;
	xor.b32  	%r869, %r867, %r868;
	xor.b32  	%r870, %r869, %r866;
	shf.l.wrap.b32 	%r871, %r852, %r852, 15;
	shf.l.wrap.b32 	%r872, %r852, %r852, 13;
	shr.u32 	%r873, %r852, 10;
	xor.b32  	%r874, %r872, %r873;
	xor.b32  	%r875, %r874, %r871;
	add.s32 	%r876, %r787, %r670;
	add.s32 	%r877, %r876, %r870;
	add.s32 	%r878, %r877, %r875;
	shf.l.wrap.b32 	%r879, %r696, %r696, 25;
	shf.l.wrap.b32 	%r880, %r696, %r696, 14;
	shr.u32 	%r881, %r696, 3;
	xor.b32  	%r882, %r880, %r881;
	xor.b32  	%r883, %r882, %r879;
	shf.l.wrap.b32 	%r884, %r865, %r865, 15;
	shf.l.wrap.b32 	%r885, %r865, %r865, 13;
	shr.u32 	%r886, %r865, 10;
	xor.b32  	%r887, %r885, %r886;
	xor.b32  	%r888, %r887, %r884;
	add.s32 	%r889, %r800, %r683;
	add.s32 	%r890, %r889, %r883;
	add.s32 	%r891, %r890, %r888;
	shf.l.wrap.b32 	%r892, %r709, %r709, 25;
	shf.l.wrap.b32 	%r893, %r709, %r709, 14;
	shr.u32 	%r894, %r709, 3;
	xor.b32  	%r895, %r893, %r894;
	xor.b32  	%r896, %r895, %r892;
	shf.l.wrap.b32 	%r897, %r878, %r878, 15;
	shf.l.wrap.b32 	%r898, %r878, %r878, 13;
	shr.u32 	%r899, %r878, 10;
	xor.b32  	%r900, %r898, %r899;
	xor.b32  	%r901, %r900, %r897;
	add.s32 	%r902, %r813, %r696;
	add.s32 	%r903, %r902, %r896;
	add.s32 	%r904, %r903, %r901;
	shf.l.wrap.b32 	%r905, %r722, %r722, 25;
	shf.l.wrap.b32 	%r906, %r722, %r722, 14;
	shr.u32 	%r907, %r722, 3;
	xor.b32  	%r908, %r906, %r907;
	xor.b32  	%r909, %r908, %r905;
	shf.l.wrap.b32 	%r910, %r891, %r891, 15;
	shf.l.wrap.b32 	%r911, %r891, %r891, 13;
	shr.u32 	%r912, %r891, 10;
	xor.b32  	%r913, %r911, %r912;
	xor.b32  	%r914, %r913, %r910;
	add.s32 	%r915, %r826, %r709;
	add.s32 	%r916, %r915, %r909;
	add.s32 	%r917, %r916, %r914;
	shf.l.wrap.b32 	%r918, %r735, %r735, 25;
	shf.l.wrap.b32 	%r919, %r735, %r735, 14;
	shr.u32 	%r920, %r735, 3;
	xor.b32  	%r921, %r919, %r920;
	xor.b32  	%r922, %r921, %r918;
	shf.l.wrap.b32 	%r923, %r904, %r904, 15;
	shf.l.wrap.b32 	%r924, %r904, %r904, 13;
	shr.u32 	%r925, %r904, 10;
	xor.b32  	%r926, %r924, %r925;
	xor.b32  	%r927, %r926, %r923;
	add.s32 	%r928, %r839, %r722;
	add.s32 	%r929, %r928, %r922;
	add.s32 	%r930, %r929, %r927;
	shf.l.wrap.b32 	%r931, %r748, %r748, 25;
	shf.l.wrap.b32 	%r932, %r748, %r748, 14;
	shr.u32 	%r933, %r748, 3;
	xor.b32  	%r934, %r932, %r933;
	xor.b32  	%r935, %r934, %r931;
	shf.l.wrap.b32 	%r936, %r917, %r917, 15;
	shf.l.wrap.b32 	%r937, %r917, %r917, 13;
	shr.u32 	%r938, %r917, 10;
	xor.b32  	%r939, %r937, %r938;
	xor.b32  	%r940, %r939, %r936;
	add.s32 	%r941, %r852, %r735;
	add.s32 	%r942, %r941, %r935;
	add.s32 	%r943, %r942, %r940;
	shf.l.wrap.b32 	%r944, %r761, %r761, 25;
	shf.l.wrap.b32 	%r945, %r761, %r761, 14;
	shr.u32 	%r946, %r761, 3;
	xor.b32  	%r947, %r945, %r946;
	xor.b32  	%r948, %r947, %r944;
	shf.l.wrap.b32 	%r949, %r930, %r930, 15;
	shf.l.wrap.b32 	%r950, %r930, %r930, 13;
	shr.u32 	%r951, %r930, 10;
	xor.b32  	%r952, %r950, %r951;
	xor.b32  	%r953, %r952, %r949;
	add.s32 	%r954, %r865, %r748;
	add.s32 	%r955, %r954, %r948;
	add.s32 	%r956, %r955, %r953;
	shf.l.wrap.b32 	%r957, %r774, %r774, 25;
	shf.l.wrap.b32 	%r958, %r774, %r774, 14;
	shr.u32 	%r959, %r774, 3;
	xor.b32  	%r960, %r958, %r959;
	xor.b32  	%r961, %r960, %r957;
	shf.l.wrap.b32 	%r962, %r943, %r943, 15;
	shf.l.wrap.b32 	%r963, %r943, %r943, 13;
	shr.u32 	%r964, %r943, 10;
	xor.b32  	%r965, %r963, %r964;
	xor.b32  	%r966, %r965, %r962;
	add.s32 	%r967, %r878, %r761;
	add.s32 	%r968, %r967, %r961;
	add.s32 	%r969, %r968, %r966;
	ld.const.u32 	%r970, [K256];
	add.s32 	%r971, %r970, %r124;
	add.s32 	%r972, %r971, 1446884106;
	add.s32 	%r973, %r971, -1182902091;
	shf.l.wrap.b32 	%r974, %r972, %r972, 26;
	shf.l.wrap.b32 	%r975, %r972, %r972, 21;
	xor.b32  	%r976, %r974, %r975;
	shf.l.wrap.b32 	%r977, %r972, %r972, 7;
	xor.b32  	%r978, %r976, %r977;
	and.b32  	%r979, %r972, 1359893119;
	mov.u32 	%r980, -1446884107;
	sub.s32 	%r981, %r980, %r971;
	and.b32  	%r982, %r981, -1694144372;
	or.b32  	%r983, %r979, %r982;
	add.s32 	%r984, %r983, %r978;
	ld.const.u32 	%r985, [K256+4];
	add.s32 	%r986, %r984, %r985;
	add.s32 	%r987, %r986, %r133;
	shf.l.wrap.b32 	%r988, %r973, %r973, 30;
	shf.l.wrap.b32 	%r989, %r973, %r973, 19;
	xor.b32  	%r990, %r988, %r989;
	shf.l.wrap.b32 	%r991, %r973, %r973, 10;
	xor.b32  	%r992, %r990, %r991;
	and.b32  	%r993, %r973, -781301534;
	or.b32  	%r994, %r993, 704751109;
	add.s32 	%r995, %r992, %r994;
	add.s32 	%r996, %r995, %r987;
	add.s32 	%r997, %r987, 1542638877;
	add.s32 	%r998, %r996, 528734635;
	shf.l.wrap.b32 	%r999, %r997, %r997, 26;
	shf.l.wrap.b32 	%r1000, %r997, %r997, 21;
	xor.b32  	%r1001, %r999, %r1000;
	shf.l.wrap.b32 	%r1002, %r997, %r997, 7;
	xor.b32  	%r1003, %r1001, %r1002;
	and.b32  	%r1004, %r997, %r972;
	mov.u32 	%r1005, 604844770;
	sub.s32 	%r1006, %r1005, %r987;
	and.b32  	%r1007, %r1006, 1359893119;
	or.b32  	%r1008, %r1004, %r1007;
	add.s32 	%r1009, %r1008, %r1003;
	ld.const.u32 	%r1010, [K256+8];
	add.s32 	%r1011, %r1009, %r1010;
	add.s32 	%r1012, %r1011, %r142;
	shf.l.wrap.b32 	%r1013, %r998, %r998, 30;
	shf.l.wrap.b32 	%r1014, %r998, %r998, 19;
	xor.b32  	%r1015, %r1013, %r1014;
	shf.l.wrap.b32 	%r1016, %r998, %r998, 10;
	xor.b32  	%r1017, %r1015, %r1016;
	xor.b32  	%r1018, %r973, 1779033703;
	and.b32  	%r1019, %r998, %r1018;
	and.b32  	%r1020, %r973, 1779033703;
	xor.b32  	%r1021, %r1019, %r1020;
	add.s32 	%r1022, %r1017, %r1021;
	add.s32 	%r1023, %r1022, %r1012;
	add.s32 	%r1024, %r1012, 1449989905;
	add.s32 	%r1025, %r1023, -1694144372;
	shf.l.wrap.b32 	%r1026, %r1024, %r1024, 26;
	shf.l.wrap.b32 	%r1027, %r1024, %r1024, 21;
	xor.b32  	%r1028, %r1026, %r1027;
	shf.l.wrap.b32 	%r1029, %r1024, %r1024, 7;
	xor.b32  	%r1030, %r1028, %r1029;
	and.b32  	%r1031, %r1024, %r997;
	mov.u32 	%r1032, -1449989906;
	sub.s32 	%r1033, %r1032, %r1012;
	and.b32  	%r1034, %r972, %r1033;
	or.b32  	%r1035, %r1031, %r1034;
	add.s32 	%r1036, %r1035, %r1030;
	ld.const.u32 	%r1037, [K256+12];
	add.s32 	%r1038, %r1036, %r1037;
	add.s32 	%r1039, %r1038, %r151;
	shf.l.wrap.b32 	%r1040, %r1025, %r1025, 30;
	shf.l.wrap.b32 	%r1041, %r1025, %r1025, 19;
	xor.b32  	%r1042, %r1040, %r1041;
	shf.l.wrap.b32 	%r1043, %r1025, %r1025, 10;
	xor.b32  	%r1044, %r1042, %r1043;
	xor.b32  	%r1045, %r998, %r973;
	and.b32  	%r1046, %r1025, %r1045;
	and.b32  	%r1047, %r998, %r973;
	xor.b32  	%r1048, %r1046, %r1047;
	add.s32 	%r1049, %r1044, %r1048;
	add.s32 	%r1050, %r1049, %r1039;
	add.s32 	%r1051, %r1039, -1156040474;
	add.s32 	%r1052, %r1050, 1359893119;
	shf.l.wrap.b32 	%r1053, %r1051, %r1051, 26;
	shf.l.wrap.b32 	%r1054, %r1051, %r1051, 21;
	xor.b32  	%r1055, %r1053, %r1054;
	shf.l.wrap.b32 	%r1056, %r1051, %r1051, 7;
	xor.b32  	%r1057, %r1055, %r1056;
	and.b32  	%r1058, %r1051, %r1024;
	mov.u32 	%r1059, 1156040473;
	sub.s32 	%r1060, %r1059, %r1039;
	and.b32  	%r1061, %r997, %r1060;
	or.b32  	%r1062, %r1058, %r1061;
	add.s32 	%r1063, %r1062, %r972;
	add.s32 	%r1064, %r1063, %r1057;
	ld.const.u32 	%r1065, [K256+16];
	add.s32 	%r1066, %r1064, %r1065;
	add.s32 	%r1067, %r1066, %r168;
	shf.l.wrap.b32 	%r1068, %r1052, %r1052, 30;
	shf.l.wrap.b32 	%r1069, %r1052, %r1052, 19;
	xor.b32  	%r1070, %r1068, %r1069;
	shf.l.wrap.b32 	%r1071, %r1052, %r1052, 10;
	xor.b32  	%r1072, %r1070, %r1071;
	xor.b32  	%r1073, %r1025, %r998;
	and.b32  	%r1074, %r1052, %r1073;
	and.b32  	%r1075, %r1025, %r998;
	xor.b32  	%r1076, %r1074, %r1075;
	add.s32 	%r1077, %r1072, %r1076;
	add.s32 	%r1078, %r1067, %r973;
	add.s32 	%r1079, %r1077, %r1067;
	shf.l.wrap.b32 	%r1080, %r1078, %r1078, 26;
	shf.l.wrap.b32 	%r1081, %r1078, %r1078, 21;
	xor.b32  	%r1082, %r1080, %r1081;
	shf.l.wrap.b32 	%r1083, %r1078, %r1078, 7;
	xor.b32  	%r1084, %r1082, %r1083;
	and.b32  	%r1085, %r1078, %r1051;
	not.b32 	%r1086, %r1078;
	and.b32  	%r1087, %r1024, %r1086;
	or.b32  	%r1088, %r1085, %r1087;
	add.s32 	%r1089, %r1088, %r997;
	add.s32 	%r1090, %r1089, %r1084;
	ld.const.u32 	%r1091, [K256+20];
	add.s32 	%r1092, %r1090, %r1091;
	add.s32 	%r1093, %r1092, %r177;
	shf.l.wrap.b32 	%r1094, %r1079, %r1079, 30;
	shf.l.wrap.b32 	%r1095, %r1079, %r1079, 19;
	xor.b32  	%r1096, %r1094, %r1095;
	shf.l.wrap.b32 	%r1097, %r1079, %r1079, 10;
	xor.b32  	%r1098, %r1096, %r1097;
	xor.b32  	%r1099, %r1052, %r1025;
	and.b32  	%r1100, %r1079, %r1099;
	and.b32  	%r1101, %r1052, %r1025;
	xor.b32  	%r1102, %r1100, %r1101;
	add.s32 	%r1103, %r1098, %r1102;
	add.s32 	%r1104, %r1093, %r998;
	add.s32 	%r1105, %r1103, %r1093;
	shf.l.wrap.b32 	%r1106, %r1104, %r1104, 26;
	shf.l.wrap.b32 	%r1107, %r1104, %r1104, 21;
	xor.b32  	%r1108, %r1106, %r1107;
	shf.l.wrap.b32 	%r1109, %r1104, %r1104, 7;
	xor.b32  	%r1110, %r1108, %r1109;
	and.b32  	%r1111, %r1104, %r1078;
	not.b32 	%r1112, %r1104;
	and.b32  	%r1113, %r1051, %r1112;
	or.b32  	%r1114, %r1111, %r1113;
	add.s32 	%r1115, %r1114, %r1024;
	add.s32 	%r1116, %r1115, %r1110;
	ld.const.u32 	%r1117, [K256+24];
	add.s32 	%r1118, %r1116, %r1117;
	add.s32 	%r1119, %r1118, %r186;
	shf.l.wrap.b32 	%r1120, %r1105, %r1105, 30;
	shf.l.wrap.b32 	%r1121, %r1105, %r1105, 19;
	xor.b32  	%r1122, %r1120, %r1121;
	shf.l.wrap.b32 	%r1123, %r1105, %r1105, 10;
	xor.b32  	%r1124, %r1122, %r1123;
	xor.b32  	%r1125, %r1079, %r1052;
	and.b32  	%r1126, %r1105, %r1125;
	and.b32  	%r1127, %r1079, %r1052;
	xor.b32  	%r1128, %r1126, %r1127;
	add.s32 	%r1129, %r1124, %r1128;
	add.s32 	%r1130, %r1119, %r1025;
	add.s32 	%r1131, %r1129, %r1119;
	shf.l.wrap.b32 	%r1132, %r1130, %r1130, 26;
	shf.l.wrap.b32 	%r1133, %r1130, %r1130, 21;
	xor.b32  	%r1134, %r1132, %r1133;
	shf.l.wrap.b32 	%r1135, %r1130, %r1130, 7;
	xor.b32  	%r1136, %r1134, %r1135;
	and.b32  	%r1137, %r1130, %r1104;
	not.b32 	%r1138, %r1130;
	and.b32  	%r1139, %r1078, %r1138;
	or.b32  	%r1140, %r1137, %r1139;
	add.s32 	%r1141, %r1140, %r1051;
	add.s32 	%r1142, %r1141, %r1136;
	ld.const.u32 	%r1143, [K256+28];
	add.s32 	%r1144, %r1142, %r1143;
	add.s32 	%r1145, %r1144, %r195;
	shf.l.wrap.b32 	%r1146, %r1131, %r1131, 30;
	shf.l.wrap.b32 	%r1147, %r1131, %r1131, 19;
	xor.b32  	%r1148, %r1146, %r1147;
	shf.l.wrap.b32 	%r1149, %r1131, %r1131, 10;
	xor.b32  	%r1150, %r1148, %r1149;
	xor.b32  	%r1151, %r1105, %r1079;
	and.b32  	%r1152, %r1131, %r1151;
	and.b32  	%r1153, %r1105, %r1079;
	xor.b32  	%r1154, %r1152, %r1153;
	add.s32 	%r1155, %r1150, %r1154;
	add.s32 	%r1156, %r1145, %r1052;
	add.s32 	%r1157, %r1155, %r1145;
	shf.l.wrap.b32 	%r1158, %r1156, %r1156, 26;
	shf.l.wrap.b32 	%r1159, %r1156, %r1156, 21;
	xor.b32  	%r1160, %r1158, %r1159;
	shf.l.wrap.b32 	%r1161, %r1156, %r1156, 7;
	xor.b32  	%r1162, %r1160, %r1161;
	and.b32  	%r1163, %r1156, %r1130;
	not.b32 	%r1164, %r1156;
	and.b32  	%r1165, %r1104, %r1164;
	or.b32  	%r1166, %r1163, %r1165;
	add.s32 	%r1167, %r1166, %r1078;
	add.s32 	%r1168, %r1167, %r1162;
	ld.const.u32 	%r1169, [K256+32];
	add.s32 	%r1170, %r1168, %r1169;
	add.s32 	%r1171, %r1170, %r212;
	shf.l.wrap.b32 	%r1172, %r1157, %r1157, 30;
	shf.l.wrap.b32 	%r1173, %r1157, %r1157, 19;
	xor.b32  	%r1174, %r1172, %r1173;
	shf.l.wrap.b32 	%r1175, %r1157, %r1157, 10;
	xor.b32  	%r1176, %r1174, %r1175;
	xor.b32  	%r1177, %r1131, %r1105;
	and.b32  	%r1178, %r1157, %r1177;
	and.b32  	%r1179, %r1131, %r1105;
	xor.b32  	%r1180, %r1178, %r1179;
	add.s32 	%r1181, %r1176, %r1180;
	add.s32 	%r1182, %r1171, %r1079;
	add.s32 	%r1183, %r1181, %r1171;
	shf.l.wrap.b32 	%r1184, %r1182, %r1182, 26;
	shf.l.wrap.b32 	%r1185, %r1182, %r1182, 21;
	xor.b32  	%r1186, %r1184, %r1185;
	shf.l.wrap.b32 	%r1187, %r1182, %r1182, 7;
	xor.b32  	%r1188, %r1186, %r1187;
	and.b32  	%r1189, %r1182, %r1156;
	not.b32 	%r1190, %r1182;
	and.b32  	%r1191, %r1130, %r1190;
	or.b32  	%r1192, %r1189, %r1191;
	add.s32 	%r1193, %r1192, %r1104;
	add.s32 	%r1194, %r1193, %r1188;
	ld.const.u32 	%r1195, [K256+36];
	add.s32 	%r1196, %r1194, %r1195;
	add.s32 	%r1197, %r1196, %r221;
	shf.l.wrap.b32 	%r1198, %r1183, %r1183, 30;
	shf.l.wrap.b32 	%r1199, %r1183, %r1183, 19;
	xor.b32  	%r1200, %r1198, %r1199;
	shf.l.wrap.b32 	%r1201, %r1183, %r1183, 10;
	xor.b32  	%r1202, %r1200, %r1201;
	xor.b32  	%r1203, %r1157, %r1131;
	and.b32  	%r1204, %r1183, %r1203;
	and.b32  	%r1205, %r1157, %r1131;
	xor.b32  	%r1206, %r1204, %r1205;
	add.s32 	%r1207, %r1202, %r1206;
	add.s32 	%r1208, %r1197, %r1105;
	add.s32 	%r1209, %r1207, %r1197;
	shf.l.wrap.b32 	%r1210, %r1208, %r1208, 26;
	shf.l.wrap.b32 	%r1211, %r1208, %r1208, 21;
	xor.b32  	%r1212, %r1210, %r1211;
	shf.l.wrap.b32 	%r1213, %r1208, %r1208, 7;
	xor.b32  	%r1214, %r1212, %r1213;
	and.b32  	%r1215, %r1208, %r1182;
	not.b32 	%r1216, %r1208;
	and.b32  	%r1217, %r1156, %r1216;
	or.b32  	%r1218, %r1215, %r1217;
	add.s32 	%r1219, %r1218, %r1130;
	add.s32 	%r1220, %r1219, %r1214;
	ld.const.u32 	%r1221, [K256+40];
	add.s32 	%r1222, %r1220, %r1221;
	add.s32 	%r1223, %r1222, %r230;
	shf.l.wrap.b32 	%r1224, %r1209, %r1209, 30;
	shf.l.wrap.b32 	%r1225, %r1209, %r1209, 19;
	xor.b32  	%r1226, %r1224, %r1225;
	shf.l.wrap.b32 	%r1227, %r1209, %r1209, 10;
	xor.b32  	%r1228, %r1226, %r1227;
	xor.b32  	%r1229, %r1183, %r1157;
	and.b32  	%r1230, %r1209, %r1229;
	and.b32  	%r1231, %r1183, %r1157;
	xor.b32  	%r1232, %r1230, %r1231;
	add.s32 	%r1233, %r1228, %r1232;
	add.s32 	%r1234, %r1223, %r1131;
	add.s32 	%r1235, %r1233, %r1223;
	shf.l.wrap.b32 	%r1236, %r1234, %r1234, 26;
	shf.l.wrap.b32 	%r1237, %r1234, %r1234, 21;
	xor.b32  	%r1238, %r1236, %r1237;
	shf.l.wrap.b32 	%r1239, %r1234, %r1234, 7;
	xor.b32  	%r1240, %r1238, %r1239;
	and.b32  	%r1241, %r1234, %r1208;
	not.b32 	%r1242, %r1234;
	and.b32  	%r1243, %r1182, %r1242;
	or.b32  	%r1244, %r1241, %r1243;
	add.s32 	%r1245, %r1244, %r1156;
	add.s32 	%r1246, %r1245, %r1240;
	ld.const.u32 	%r1247, [K256+44];
	add.s32 	%r1248, %r1246, %r1247;
	add.s32 	%r1249, %r1248, %r239;
	shf.l.wrap.b32 	%r1250, %r1235, %r1235, 30;
	shf.l.wrap.b32 	%r1251, %r1235, %r1235, 19;
	xor.b32  	%r1252, %r1250, %r1251;
	shf.l.wrap.b32 	%r1253, %r1235, %r1235, 10;
	xor.b32  	%r1254, %r1252, %r1253;
	xor.b32  	%r1255, %r1209, %r1183;
	and.b32  	%r1256, %r1235, %r1255;
	and.b32  	%r1257, %r1209, %r1183;
	xor.b32  	%r1258, %r1256, %r1257;
	add.s32 	%r1259, %r1254, %r1258;
	add.s32 	%r1260, %r1249, %r1157;
	add.s32 	%r1261, %r1259, %r1249;
	shf.l.wrap.b32 	%r1262, %r1260, %r1260, 26;
	shf.l.wrap.b32 	%r1263, %r1260, %r1260, 21;
	xor.b32  	%r1264, %r1262, %r1263;
	shf.l.wrap.b32 	%r1265, %r1260, %r1260, 7;
	xor.b32  	%r1266, %r1264, %r1265;
	and.b32  	%r1267, %r1260, %r1234;
	not.b32 	%r1268, %r1260;
	and.b32  	%r1269, %r1208, %r1268;
	or.b32  	%r1270, %r1267, %r1269;
	add.s32 	%r1271, %r1270, %r1182;
	add.s32 	%r1272, %r1271, %r1266;
	ld.const.u32 	%r1273, [K256+48];
	add.s32 	%r1274, %r1272, %r1273;
	add.s32 	%r1275, %r1274, %r248;
	shf.l.wrap.b32 	%r1276, %r1261, %r1261, 30;
	shf.l.wrap.b32 	%r1277, %r1261, %r1261, 19;
	xor.b32  	%r1278, %r1276, %r1277;
	shf.l.wrap.b32 	%r1279, %r1261, %r1261, 10;
	xor.b32  	%r1280, %r1278, %r1279;
	xor.b32  	%r1281, %r1235, %r1209;
	and.b32  	%r1282, %r1261, %r1281;
	and.b32  	%r1283, %r1235, %r1209;
	xor.b32  	%r1284, %r1282, %r1283;
	add.s32 	%r1285, %r1280, %r1284;
	add.s32 	%r1286, %r1275, %r1183;
	add.s32 	%r1287, %r1285, %r1275;
	shf.l.wrap.b32 	%r1288, %r1286, %r1286, 26;
	shf.l.wrap.b32 	%r1289, %r1286, %r1286, 21;
	xor.b32  	%r1290, %r1288, %r1289;
	shf.l.wrap.b32 	%r1291, %r1286, %r1286, 7;
	xor.b32  	%r1292, %r1290, %r1291;
	and.b32  	%r1293, %r1286, %r1260;
	not.b32 	%r1294, %r1286;
	and.b32  	%r1295, %r1234, %r1294;
	or.b32  	%r1296, %r1293, %r1295;
	add.s32 	%r1297, %r1296, %r1208;
	add.s32 	%r1298, %r1297, %r1292;
	ld.const.u32 	%r1299, [K256+52];
	add.s32 	%r1300, %r1298, %r1299;
	add.s32 	%r1301, %r1300, %r257;
	shf.l.wrap.b32 	%r1302, %r1287, %r1287, 30;
	shf.l.wrap.b32 	%r1303, %r1287, %r1287, 19;
	xor.b32  	%r1304, %r1302, %r1303;
	shf.l.wrap.b32 	%r1305, %r1287, %r1287, 10;
	xor.b32  	%r1306, %r1304, %r1305;
	xor.b32  	%r1307, %r1261, %r1235;
	and.b32  	%r1308, %r1287, %r1307;
	and.b32  	%r1309, %r1261, %r1235;
	xor.b32  	%r1310, %r1308, %r1309;
	add.s32 	%r1311, %r1306, %r1310;
	add.s32 	%r1312, %r1301, %r1209;
	add.s32 	%r1313, %r1311, %r1301;
	shf.l.wrap.b32 	%r1314, %r1312, %r1312, 26;
	shf.l.wrap.b32 	%r1315, %r1312, %r1312, 21;
	xor.b32  	%r1316, %r1314, %r1315;
	shf.l.wrap.b32 	%r1317, %r1312, %r1312, 7;
	xor.b32  	%r1318, %r1316, %r1317;
	and.b32  	%r1319, %r1312, %r1286;
	not.b32 	%r1320, %r1312;
	and.b32  	%r1321, %r1260, %r1320;
	or.b32  	%r1322, %r1319, %r1321;
	add.s32 	%r1323, %r1322, %r1234;
	add.s32 	%r1324, %r1323, %r1318;
	ld.const.u32 	%r1325, [K256+56];
	add.s32 	%r1326, %r1324, %r1325;
	add.s32 	%r1327, %r1326, %r266;
	shf.l.wrap.b32 	%r1328, %r1313, %r1313, 30;
	shf.l.wrap.b32 	%r1329, %r1313, %r1313, 19;
	xor.b32  	%r1330, %r1328, %r1329;
	shf.l.wrap.b32 	%r1331, %r1313, %r1313, 10;
	xor.b32  	%r1332, %r1330, %r1331;
	xor.b32  	%r1333, %r1287, %r1261;
	and.b32  	%r1334, %r1313, %r1333;
	and.b32  	%r1335, %r1287, %r1261;
	xor.b32  	%r1336, %r1334, %r1335;
	add.s32 	%r1337, %r1332, %r1336;
	add.s32 	%r1338, %r1327, %r1235;
	add.s32 	%r1339, %r1337, %r1327;
	shf.l.wrap.b32 	%r1340, %r1338, %r1338, 26;
	shf.l.wrap.b32 	%r1341, %r1338, %r1338, 21;
	xor.b32  	%r1342, %r1340, %r1341;
	shf.l.wrap.b32 	%r1343, %r1338, %r1338, 7;
	xor.b32  	%r1344, %r1342, %r1343;
	and.b32  	%r1345, %r1338, %r1312;
	not.b32 	%r1346, %r1338;
	and.b32  	%r1347, %r1286, %r1346;
	or.b32  	%r1348, %r1345, %r1347;
	add.s32 	%r1349, %r1348, %r1260;
	add.s32 	%r1350, %r1349, %r1344;
	ld.const.u32 	%r1351, [K256+60];
	add.s32 	%r1352, %r1350, %r1351;
	add.s32 	%r1353, %r1352, %r277;
	shf.l.wrap.b32 	%r1354, %r1339, %r1339, 30;
	shf.l.wrap.b32 	%r1355, %r1339, %r1339, 19;
	xor.b32  	%r1356, %r1354, %r1355;
	shf.l.wrap.b32 	%r1357, %r1339, %r1339, 10;
	xor.b32  	%r1358, %r1356, %r1357;
	xor.b32  	%r1359, %r1313, %r1287;
	and.b32  	%r1360, %r1339, %r1359;
	and.b32  	%r1361, %r1313, %r1287;
	xor.b32  	%r1362, %r1360, %r1361;
	add.s32 	%r1363, %r1358, %r1362;
	add.s32 	%r1364, %r1353, %r1261;
	add.s32 	%r1365, %r1363, %r1353;
	shf.l.wrap.b32 	%r1366, %r1364, %r1364, 26;
	shf.l.wrap.b32 	%r1367, %r1364, %r1364, 21;
	xor.b32  	%r1368, %r1366, %r1367;
	shf.l.wrap.b32 	%r1369, %r1364, %r1364, 7;
	xor.b32  	%r1370, %r1368, %r1369;
	and.b32  	%r1371, %r1364, %r1338;
	not.b32 	%r1372, %r1364;
	and.b32  	%r1373, %r1312, %r1372;
	or.b32  	%r1374, %r1371, %r1373;
	add.s32 	%r1375, %r1374, %r1286;
	add.s32 	%r1376, %r1375, %r1370;
	ld.const.u32 	%r1377, [K256+64];
	add.s32 	%r1378, %r1376, %r1377;
	add.s32 	%r1379, %r1378, %r298;
	shf.l.wrap.b32 	%r1380, %r1365, %r1365, 30;
	shf.l.wrap.b32 	%r1381, %r1365, %r1365, 19;
	xor.b32  	%r1382, %r1380, %r1381;
	shf.l.wrap.b32 	%r1383, %r1365, %r1365, 10;
	xor.b32  	%r1384, %r1382, %r1383;
	xor.b32  	%r1385, %r1339, %r1313;
	and.b32  	%r1386, %r1365, %r1385;
	and.b32  	%r1387, %r1339, %r1313;
	xor.b32  	%r1388, %r1386, %r1387;
	add.s32 	%r1389, %r1384, %r1388;
	add.s32 	%r1390, %r1379, %r1287;
	add.s32 	%r1391, %r1389, %r1379;
	shf.l.wrap.b32 	%r1392, %r1390, %r1390, 26;
	shf.l.wrap.b32 	%r1393, %r1390, %r1390, 21;
	xor.b32  	%r1394, %r1392, %r1393;
	shf.l.wrap.b32 	%r1395, %r1390, %r1390, 7;
	xor.b32  	%r1396, %r1394, %r1395;
	and.b32  	%r1397, %r1390, %r1364;
	not.b32 	%r1398, %r1390;
	and.b32  	%r1399, %r1338, %r1398;
	or.b32  	%r1400, %r1397, %r1399;
	add.s32 	%r1401, %r1400, %r1312;
	add.s32 	%r1402, %r1401, %r1396;
	ld.const.u32 	%r1403, [K256+68];
	add.s32 	%r1404, %r1402, %r1403;
	add.s32 	%r1405, %r1404, %r319;
	shf.l.wrap.b32 	%r1406, %r1391, %r1391, 30;
	shf.l.wrap.b32 	%r1407, %r1391, %r1391, 19;
	xor.b32  	%r1408, %r1406, %r1407;
	shf.l.wrap.b32 	%r1409, %r1391, %r1391, 10;
	xor.b32  	%r1410, %r1408, %r1409;
	xor.b32  	%r1411, %r1365, %r1339;
	and.b32  	%r1412, %r1391, %r1411;
	and.b32  	%r1413, %r1365, %r1339;
	xor.b32  	%r1414, %r1412, %r1413;
	add.s32 	%r1415, %r1410, %r1414;
	add.s32 	%r1416, %r1405, %r1313;
	add.s32 	%r1417, %r1415, %r1405;
	shf.l.wrap.b32 	%r1418, %r1416, %r1416, 26;
	shf.l.wrap.b32 	%r1419, %r1416, %r1416, 21;
	xor.b32  	%r1420, %r1418, %r1419;
	shf.l.wrap.b32 	%r1421, %r1416, %r1416, 7;
	xor.b32  	%r1422, %r1420, %r1421;
	and.b32  	%r1423, %r1416, %r1390;
	not.b32 	%r1424, %r1416;
	and.b32  	%r1425, %r1364, %r1424;
	or.b32  	%r1426, %r1423, %r1425;
	add.s32 	%r1427, %r1426, %r1338;
	add.s32 	%r1428, %r1427, %r1422;
	ld.const.u32 	%r1429, [K256+72];
	add.s32 	%r1430, %r1428, %r1429;
	add.s32 	%r1431, %r1430, %r336;
	shf.l.wrap.b32 	%r1432, %r1417, %r1417, 30;
	shf.l.wrap.b32 	%r1433, %r1417, %r1417, 19;
	xor.b32  	%r1434, %r1432, %r1433;
	shf.l.wrap.b32 	%r1435, %r1417, %r1417, 10;
	xor.b32  	%r1436, %r1434, %r1435;
	xor.b32  	%r1437, %r1391, %r1365;
	and.b32  	%r1438, %r1417, %r1437;
	and.b32  	%r1439, %r1391, %r1365;
	xor.b32  	%r1440, %r1438, %r1439;
	add.s32 	%r1441, %r1436, %r1440;
	add.s32 	%r1442, %r1431, %r1339;
	add.s32 	%r1443, %r1441, %r1431;
	shf.l.wrap.b32 	%r1444, %r1442, %r1442, 26;
	shf.l.wrap.b32 	%r1445, %r1442, %r1442, 21;
	xor.b32  	%r1446, %r1444, %r1445;
	shf.l.wrap.b32 	%r1447, %r1442, %r1442, 7;
	xor.b32  	%r1448, %r1446, %r1447;
	and.b32  	%r1449, %r1442, %r1416;
	not.b32 	%r1450, %r1442;
	and.b32  	%r1451, %r1390, %r1450;
	or.b32  	%r1452, %r1449, %r1451;
	add.s32 	%r1453, %r1452, %r1364;
	add.s32 	%r1454, %r1453, %r1448;
	ld.const.u32 	%r1455, [K256+76];
	add.s32 	%r1456, %r1454, %r1455;
	add.s32 	%r1457, %r1456, %r353;
	shf.l.wrap.b32 	%r1458, %r1443, %r1443, 30;
	shf.l.wrap.b32 	%r1459, %r1443, %r1443, 19;
	xor.b32  	%r1460, %r1458, %r1459;
	shf.l.wrap.b32 	%r1461, %r1443, %r1443, 10;
	xor.b32  	%r1462, %r1460, %r1461;
	xor.b32  	%r1463, %r1417, %r1391;
	and.b32  	%r1464, %r1443, %r1463;
	and.b32  	%r1465, %r1417, %r1391;
	xor.b32  	%r1466, %r1464, %r1465;
	add.s32 	%r1467, %r1462, %r1466;
	add.s32 	%r1468, %r1457, %r1365;
	add.s32 	%r1469, %r1467, %r1457;
	shf.l.wrap.b32 	%r1470, %r1468, %r1468, 26;
	shf.l.wrap.b32 	%r1471, %r1468, %r1468, 21;
	xor.b32  	%r1472, %r1470, %r1471;
	shf.l.wrap.b32 	%r1473, %r1468, %r1468, 7;
	xor.b32  	%r1474, %r1472, %r1473;
	and.b32  	%r1475, %r1468, %r1442;
	not.b32 	%r1476, %r1468;
	and.b32  	%r1477, %r1416, %r1476;
	or.b32  	%r1478, %r1475, %r1477;
	add.s32 	%r1479, %r1478, %r1390;
	add.s32 	%r1480, %r1479, %r1474;
	ld.const.u32 	%r1481, [K256+80];
	add.s32 	%r1482, %r1480, %r1481;
	add.s32 	%r1483, %r1482, %r370;
	shf.l.wrap.b32 	%r1484, %r1469, %r1469, 30;
	shf.l.wrap.b32 	%r1485, %r1469, %r1469, 19;
	xor.b32  	%r1486, %r1484, %r1485;
	shf.l.wrap.b32 	%r1487, %r1469, %r1469, 10;
	xor.b32  	%r1488, %r1486, %r1487;
	xor.b32  	%r1489, %r1443, %r1417;
	and.b32  	%r1490, %r1469, %r1489;
	and.b32  	%r1491, %r1443, %r1417;
	xor.b32  	%r1492, %r1490, %r1491;
	add.s32 	%r1493, %r1488, %r1492;
	add.s32 	%r1494, %r1483, %r1391;
	add.s32 	%r1495, %r1493, %r1483;
	shf.l.wrap.b32 	%r1496, %r1494, %r1494, 26;
	shf.l.wrap.b32 	%r1497, %r1494, %r1494, 21;
	xor.b32  	%r1498, %r1496, %r1497;
	shf.l.wrap.b32 	%r1499, %r1494, %r1494, 7;
	xor.b32  	%r1500, %r1498, %r1499;
	and.b32  	%r1501, %r1494, %r1468;
	not.b32 	%r1502, %r1494;
	and.b32  	%r1503, %r1442, %r1502;
	or.b32  	%r1504, %r1501, %r1503;
	add.s32 	%r1505, %r1504, %r1416;
	add.s32 	%r1506, %r1505, %r1500;
	ld.const.u32 	%r1507, [K256+84];
	add.s32 	%r1508, %r1506, %r1507;
	add.s32 	%r1509, %r1508, %r387;
	shf.l.wrap.b32 	%r1510, %r1495, %r1495, 30;
	shf.l.wrap.b32 	%r1511, %r1495, %r1495, 19;
	xor.b32  	%r1512, %r1510, %r1511;
	shf.l.wrap.b32 	%r1513, %r1495, %r1495, 10;
	xor.b32  	%r1514, %r1512, %r1513;
	xor.b32  	%r1515, %r1469, %r1443;
	and.b32  	%r1516, %r1495, %r1515;
	and.b32  	%r1517, %r1469, %r1443;
	xor.b32  	%r1518, %r1516, %r1517;
	add.s32 	%r1519, %r1514, %r1518;
	add.s32 	%r1520, %r1509, %r1417;
	add.s32 	%r1521, %r1519, %r1509;
	shf.l.wrap.b32 	%r1522, %r1520, %r1520, 26;
	shf.l.wrap.b32 	%r1523, %r1520, %r1520, 21;
	xor.b32  	%r1524, %r1522, %r1523;
	shf.l.wrap.b32 	%r1525, %r1520, %r1520, 7;
	xor.b32  	%r1526, %r1524, %r1525;
	and.b32  	%r1527, %r1520, %r1494;
	not.b32 	%r1528, %r1520;
	and.b32  	%r1529, %r1468, %r1528;
	or.b32  	%r1530, %r1527, %r1529;
	add.s32 	%r1531, %r1530, %r1442;
	add.s32 	%r1532, %r1531, %r1526;
	ld.const.u32 	%r1533, [K256+88];
	add.s32 	%r1534, %r1532, %r1533;
	add.s32 	%r1535, %r1534, %r404;
	shf.l.wrap.b32 	%r1536, %r1521, %r1521, 30;
	shf.l.wrap.b32 	%r1537, %r1521, %r1521, 19;
	xor.b32  	%r1538, %r1536, %r1537;
	shf.l.wrap.b32 	%r1539, %r1521, %r1521, 10;
	xor.b32  	%r1540, %r1538, %r1539;
	xor.b32  	%r1541, %r1495, %r1469;
	and.b32  	%r1542, %r1521, %r1541;
	and.b32  	%r1543, %r1495, %r1469;
	xor.b32  	%r1544, %r1542, %r1543;
	add.s32 	%r1545, %r1540, %r1544;
	add.s32 	%r1546, %r1535, %r1443;
	add.s32 	%r1547, %r1545, %r1535;
	shf.l.wrap.b32 	%r1548, %r1546, %r1546, 26;
	shf.l.wrap.b32 	%r1549, %r1546, %r1546, 21;
	xor.b32  	%r1550, %r1548, %r1549;
	shf.l.wrap.b32 	%r1551, %r1546, %r1546, 7;
	xor.b32  	%r1552, %r1550, %r1551;
	and.b32  	%r1553, %r1546, %r1520;
	not.b32 	%r1554, %r1546;
	and.b32  	%r1555, %r1494, %r1554;
	or.b32  	%r1556, %r1553, %r1555;
	add.s32 	%r1557, %r1556, %r1468;
	add.s32 	%r1558, %r1557, %r1552;
	ld.const.u32 	%r1559, [K256+92];
	add.s32 	%r1560, %r1558, %r1559;
	add.s32 	%r1561, %r1560, %r421;
	shf.l.wrap.b32 	%r1562, %r1547, %r1547, 30;
	shf.l.wrap.b32 	%r1563, %r1547, %r1547, 19;
	xor.b32  	%r1564, %r1562, %r1563;
	shf.l.wrap.b32 	%r1565, %r1547, %r1547, 10;
	xor.b32  	%r1566, %r1564, %r1565;
	xor.b32  	%r1567, %r1521, %r1495;
	and.b32  	%r1568, %r1547, %r1567;
	and.b32  	%r1569, %r1521, %r1495;
	xor.b32  	%r1570, %r1568, %r1569;
	add.s32 	%r1571, %r1566, %r1570;
	add.s32 	%r1572, %r1561, %r1469;
	add.s32 	%r1573, %r1571, %r1561;
	shf.l.wrap.b32 	%r1574, %r1572, %r1572, 26;
	shf.l.wrap.b32 	%r1575, %r1572, %r1572, 21;
	xor.b32  	%r1576, %r1574, %r1575;
	shf.l.wrap.b32 	%r1577, %r1572, %r1572, 7;
	xor.b32  	%r1578, %r1576, %r1577;
	and.b32  	%r1579, %r1572, %r1546;
	not.b32 	%r1580, %r1572;
	and.b32  	%r1581, %r1520, %r1580;
	or.b32  	%r1582, %r1579, %r1581;
	add.s32 	%r1583, %r1582, %r1494;
	add.s32 	%r1584, %r1583, %r1578;
	ld.const.u32 	%r1585, [K256+96];
	add.s32 	%r1586, %r1584, %r1585;
	add.s32 	%r1587, %r1586, %r438;
	shf.l.wrap.b32 	%r1588, %r1573, %r1573, 30;
	shf.l.wrap.b32 	%r1589, %r1573, %r1573, 19;
	xor.b32  	%r1590, %r1588, %r1589;
	shf.l.wrap.b32 	%r1591, %r1573, %r1573, 10;
	xor.b32  	%r1592, %r1590, %r1591;
	xor.b32  	%r1593, %r1547, %r1521;
	and.b32  	%r1594, %r1573, %r1593;
	and.b32  	%r1595, %r1547, %r1521;
	xor.b32  	%r1596, %r1594, %r1595;
	add.s32 	%r1597, %r1592, %r1596;
	add.s32 	%r1598, %r1587, %r1495;
	add.s32 	%r1599, %r1597, %r1587;
	shf.l.wrap.b32 	%r1600, %r1598, %r1598, 26;
	shf.l.wrap.b32 	%r1601, %r1598, %r1598, 21;
	xor.b32  	%r1602, %r1600, %r1601;
	shf.l.wrap.b32 	%r1603, %r1598, %r1598, 7;
	xor.b32  	%r1604, %r1602, %r1603;
	and.b32  	%r1605, %r1598, %r1572;
	not.b32 	%r1606, %r1598;
	and.b32  	%r1607, %r1546, %r1606;
	or.b32  	%r1608, %r1605, %r1607;
	add.s32 	%r1609, %r1608, %r1520;
	add.s32 	%r1610, %r1609, %r1604;
	ld.const.u32 	%r1611, [K256+100];
	add.s32 	%r1612, %r1610, %r1611;
	add.s32 	%r1613, %r1612, %r455;
	shf.l.wrap.b32 	%r1614, %r1599, %r1599, 30;
	shf.l.wrap.b32 	%r1615, %r1599, %r1599, 19;
	xor.b32  	%r1616, %r1614, %r1615;
	shf.l.wrap.b32 	%r1617, %r1599, %r1599, 10;
	xor.b32  	%r1618, %r1616, %r1617;
	xor.b32  	%r1619, %r1573, %r1547;
	and.b32  	%r1620, %r1599, %r1619;
	and.b32  	%r1621, %r1573, %r1547;
	xor.b32  	%r1622, %r1620, %r1621;
	add.s32 	%r1623, %r1618, %r1622;
	add.s32 	%r1624, %r1613, %r1521;
	add.s32 	%r1625, %r1623, %r1613;
	shf.l.wrap.b32 	%r1626, %r1624, %r1624, 26;
	shf.l.wrap.b32 	%r1627, %r1624, %r1624, 21;
	xor.b32  	%r1628, %r1626, %r1627;
	shf.l.wrap.b32 	%r1629, %r1624, %r1624, 7;
	xor.b32  	%r1630, %r1628, %r1629;
	and.b32  	%r1631, %r1624, %r1598;
	not.b32 	%r1632, %r1624;
	and.b32  	%r1633, %r1572, %r1632;
	or.b32  	%r1634, %r1631, %r1633;
	add.s32 	%r1635, %r1634, %r1546;
	add.s32 	%r1636, %r1635, %r1630;
	ld.const.u32 	%r1637, [K256+104];
	add.s32 	%r1638, %r1636, %r1637;
	add.s32 	%r1639, %r1638, %r472;
	shf.l.wrap.b32 	%r1640, %r1625, %r1625, 30;
	shf.l.wrap.b32 	%r1641, %r1625, %r1625, 19;
	xor.b32  	%r1642, %r1640, %r1641;
	shf.l.wrap.b32 	%r1643, %r1625, %r1625, 10;
	xor.b32  	%r1644, %r1642, %r1643;
	xor.b32  	%r1645, %r1599, %r1573;
	and.b32  	%r1646, %r1625, %r1645;
	and.b32  	%r1647, %r1599, %r1573;
	xor.b32  	%r1648, %r1646, %r1647;
	add.s32 	%r1649, %r1644, %r1648;
	add.s32 	%r1650, %r1639, %r1547;
	add.s32 	%r1651, %r1649, %r1639;
	shf.l.wrap.b32 	%r1652, %r1650, %r1650, 26;
	shf.l.wrap.b32 	%r1653, %r1650, %r1650, 21;
	xor.b32  	%r1654, %r1652, %r1653;
	shf.l.wrap.b32 	%r1655, %r1650, %r1650, 7;
	xor.b32  	%r1656, %r1654, %r1655;
	and.b32  	%r1657, %r1650, %r1624;
	not.b32 	%r1658, %r1650;
	and.b32  	%r1659, %r1598, %r1658;
	or.b32  	%r1660, %r1657, %r1659;
	add.s32 	%r1661, %r1660, %r1572;
	add.s32 	%r1662, %r1661, %r1656;
	ld.const.u32 	%r1663, [K256+108];
	add.s32 	%r1664, %r1662, %r1663;
	add.s32 	%r1665, %r1664, %r489;
	shf.l.wrap.b32 	%r1666, %r1651, %r1651, 30;
	shf.l.wrap.b32 	%r1667, %r1651, %r1651, 19;
	xor.b32  	%r1668, %r1666, %r1667;
	shf.l.wrap.b32 	%r1669, %r1651, %r1651, 10;
	xor.b32  	%r1670, %r1668, %r1669;
	xor.b32  	%r1671, %r1625, %r1599;
	and.b32  	%r1672, %r1651, %r1671;
	and.b32  	%r1673, %r1625, %r1599;
	xor.b32  	%r1674, %r1672, %r1673;
	add.s32 	%r1675, %r1670, %r1674;
	add.s32 	%r1676, %r1665, %r1573;
	add.s32 	%r1677, %r1675, %r1665;
	shf.l.wrap.b32 	%r1678, %r1676, %r1676, 26;
	shf.l.wrap.b32 	%r1679, %r1676, %r1676, 21;
	xor.b32  	%r1680, %r1678, %r1679;
	shf.l.wrap.b32 	%r1681, %r1676, %r1676, 7;
	xor.b32  	%r1682, %r1680, %r1681;
	and.b32  	%r1683, %r1676, %r1650;
	not.b32 	%r1684, %r1676;
	and.b32  	%r1685, %r1624, %r1684;
	or.b32  	%r1686, %r1683, %r1685;
	add.s32 	%r1687, %r1686, %r1598;
	add.s32 	%r1688, %r1687, %r1682;
	ld.const.u32 	%r1689, [K256+112];
	add.s32 	%r1690, %r1688, %r1689;
	add.s32 	%r1691, %r1690, %r506;
	shf.l.wrap.b32 	%r1692, %r1677, %r1677, 30;
	shf.l.wrap.b32 	%r1693, %r1677, %r1677, 19;
	xor.b32  	%r1694, %r1692, %r1693;
	shf.l.wrap.b32 	%r1695, %r1677, %r1677, 10;
	xor.b32  	%r1696, %r1694, %r1695;
	xor.b32  	%r1697, %r1651, %r1625;
	and.b32  	%r1698, %r1677, %r1697;
	and.b32  	%r1699, %r1651, %r1625;
	xor.b32  	%r1700, %r1698, %r1699;
	add.s32 	%r1701, %r1696, %r1700;
	add.s32 	%r1702, %r1691, %r1599;
	add.s32 	%r1703, %r1701, %r1691;
	shf.l.wrap.b32 	%r1704, %r1702, %r1702, 26;
	shf.l.wrap.b32 	%r1705, %r1702, %r1702, 21;
	xor.b32  	%r1706, %r1704, %r1705;
	shf.l.wrap.b32 	%r1707, %r1702, %r1702, 7;
	xor.b32  	%r1708, %r1706, %r1707;
	and.b32  	%r1709, %r1702, %r1676;
	not.b32 	%r1710, %r1702;
	and.b32  	%r1711, %r1650, %r1710;
	or.b32  	%r1712, %r1709, %r1711;
	add.s32 	%r1713, %r1712, %r1624;
	add.s32 	%r1714, %r1713, %r1708;
	ld.const.u32 	%r1715, [K256+116];
	add.s32 	%r1716, %r1714, %r1715;
	add.s32 	%r1717, %r1716, %r523;
	shf.l.wrap.b32 	%r1718, %r1703, %r1703, 30;
	shf.l.wrap.b32 	%r1719, %r1703, %r1703, 19;
	xor.b32  	%r1720, %r1718, %r1719;
	shf.l.wrap.b32 	%r1721, %r1703, %r1703, 10;
	xor.b32  	%r1722, %r1720, %r1721;
	xor.b32  	%r1723, %r1677, %r1651;
	and.b32  	%r1724, %r1703, %r1723;
	and.b32  	%r1725, %r1677, %r1651;
	xor.b32  	%r1726, %r1724, %r1725;
	add.s32 	%r1727, %r1722, %r1726;
	add.s32 	%r1728, %r1717, %r1625;
	add.s32 	%r1729, %r1727, %r1717;
	shf.l.wrap.b32 	%r1730, %r1728, %r1728, 26;
	shf.l.wrap.b32 	%r1731, %r1728, %r1728, 21;
	xor.b32  	%r1732, %r1730, %r1731;
	shf.l.wrap.b32 	%r1733, %r1728, %r1728, 7;
	xor.b32  	%r1734, %r1732, %r1733;
	and.b32  	%r1735, %r1728, %r1702;
	not.b32 	%r1736, %r1728;
	and.b32  	%r1737, %r1676, %r1736;
	or.b32  	%r1738, %r1735, %r1737;
	add.s32 	%r1739, %r1738, %r1650;
	add.s32 	%r1740, %r1739, %r1734;
	ld.const.u32 	%r1741, [K256+120];
	add.s32 	%r1742, %r1740, %r1741;
	add.s32 	%r1743, %r1742, %r540;
	shf.l.wrap.b32 	%r1744, %r1729, %r1729, 30;
	shf.l.wrap.b32 	%r1745, %r1729, %r1729, 19;
	xor.b32  	%r1746, %r1744, %r1745;
	shf.l.wrap.b32 	%r1747, %r1729, %r1729, 10;
	xor.b32  	%r1748, %r1746, %r1747;
	xor.b32  	%r1749, %r1703, %r1677;
	and.b32  	%r1750, %r1729, %r1749;
	and.b32  	%r1751, %r1703, %r1677;
	xor.b32  	%r1752, %r1750, %r1751;
	add.s32 	%r1753, %r1748, %r1752;
	add.s32 	%r1754, %r1743, %r1651;
	add.s32 	%r1755, %r1753, %r1743;
	shf.l.wrap.b32 	%r1756, %r1754, %r1754, 26;
	shf.l.wrap.b32 	%r1757, %r1754, %r1754, 21;
	xor.b32  	%r1758, %r1756, %r1757;
	shf.l.wrap.b32 	%r1759, %r1754, %r1754, 7;
	xor.b32  	%r1760, %r1758, %r1759;
	and.b32  	%r1761, %r1754, %r1728;
	not.b32 	%r1762, %r1754;
	and.b32  	%r1763, %r1702, %r1762;
	or.b32  	%r1764, %r1761, %r1763;
	add.s32 	%r1765, %r1764, %r1676;
	add.s32 	%r1766, %r1765, %r1760;
	ld.const.u32 	%r1767, [K256+124];
	add.s32 	%r1768, %r1766, %r1767;
	add.s32 	%r1769, %r1768, %r553;
	shf.l.wrap.b32 	%r1770, %r1755, %r1755, 30;
	shf.l.wrap.b32 	%r1771, %r1755, %r1755, 19;
	xor.b32  	%r1772, %r1770, %r1771;
	shf.l.wrap.b32 	%r1773, %r1755, %r1755, 10;
	xor.b32  	%r1774, %r1772, %r1773;
	xor.b32  	%r1775, %r1729, %r1703;
	and.b32  	%r1776, %r1755, %r1775;
	and.b32  	%r1777, %r1729, %r1703;
	xor.b32  	%r1778, %r1776, %r1777;
	add.s32 	%r1779, %r1774, %r1778;
	add.s32 	%r1780, %r1769, %r1677;
	add.s32 	%r1781, %r1779, %r1769;
	shf.l.wrap.b32 	%r1782, %r1780, %r1780, 26;
	shf.l.wrap.b32 	%r1783, %r1780, %r1780, 21;
	xor.b32  	%r1784, %r1782, %r1783;
	shf.l.wrap.b32 	%r1785, %r1780, %r1780, 7;
	xor.b32  	%r1786, %r1784, %r1785;
	and.b32  	%r1787, %r1780, %r1754;
	not.b32 	%r1788, %r1780;
	and.b32  	%r1789, %r1728, %r1788;
	or.b32  	%r1790, %r1787, %r1789;
	add.s32 	%r1791, %r1790, %r1702;
	add.s32 	%r1792, %r1791, %r1786;
	ld.const.u32 	%r1793, [K256+128];
	add.s32 	%r1794, %r1792, %r1793;
	add.s32 	%r1795, %r1794, %r566;
	shf.l.wrap.b32 	%r1796, %r1781, %r1781, 30;
	shf.l.wrap.b32 	%r1797, %r1781, %r1781, 19;
	xor.b32  	%r1798, %r1796, %r1797;
	shf.l.wrap.b32 	%r1799, %r1781, %r1781, 10;
	xor.b32  	%r1800, %r1798, %r1799;
	xor.b32  	%r1801, %r1755, %r1729;
	and.b32  	%r1802, %r1781, %r1801;
	and.b32  	%r1803, %r1755, %r1729;
	xor.b32  	%r1804, %r1802, %r1803;
	add.s32 	%r1805, %r1800, %r1804;
	add.s32 	%r1806, %r1795, %r1703;
	add.s32 	%r1807, %r1805, %r1795;
	shf.l.wrap.b32 	%r1808, %r1806, %r1806, 26;
	shf.l.wrap.b32 	%r1809, %r1806, %r1806, 21;
	xor.b32  	%r1810, %r1808, %r1809;
	shf.l.wrap.b32 	%r1811, %r1806, %r1806, 7;
	xor.b32  	%r1812, %r1810, %r1811;
	and.b32  	%r1813, %r1806, %r1780;
	not.b32 	%r1814, %r1806;
	and.b32  	%r1815, %r1754, %r1814;
	or.b32  	%r1816, %r1813, %r1815;
	add.s32 	%r1817, %r1816, %r1728;
	add.s32 	%r1818, %r1817, %r1812;
	ld.const.u32 	%r1819, [K256+132];
	add.s32 	%r1820, %r1818, %r1819;
	add.s32 	%r1821, %r1820, %r579;
	shf.l.wrap.b32 	%r1822, %r1807, %r1807, 30;
	shf.l.wrap.b32 	%r1823, %r1807, %r1807, 19;
	xor.b32  	%r1824, %r1822, %r1823;
	shf.l.wrap.b32 	%r1825, %r1807, %r1807, 10;
	xor.b32  	%r1826, %r1824, %r1825;
	xor.b32  	%r1827, %r1781, %r1755;
	and.b32  	%r1828, %r1807, %r1827;
	and.b32  	%r1829, %r1781, %r1755;
	xor.b32  	%r1830, %r1828, %r1829;
	add.s32 	%r1831, %r1826, %r1830;
	add.s32 	%r1832, %r1821, %r1729;
	add.s32 	%r1833, %r1831, %r1821;
	shf.l.wrap.b32 	%r1834, %r1832, %r1832, 26;
	shf.l.wrap.b32 	%r1835, %r1832, %r1832, 21;
	xor.b32  	%r1836, %r1834, %r1835;
	shf.l.wrap.b32 	%r1837, %r1832, %r1832, 7;
	xor.b32  	%r1838, %r1836, %r1837;
	and.b32  	%r1839, %r1832, %r1806;
	not.b32 	%r1840, %r1832;
	and.b32  	%r1841, %r1780, %r1840;
	or.b32  	%r1842, %r1839, %r1841;
	add.s32 	%r1843, %r1842, %r1754;
	add.s32 	%r1844, %r1843, %r1838;
	ld.const.u32 	%r1845, [K256+136];
	add.s32 	%r1846, %r1844, %r1845;
	add.s32 	%r1847, %r1846, %r592;
	shf.l.wrap.b32 	%r1848, %r1833, %r1833, 30;
	shf.l.wrap.b32 	%r1849, %r1833, %r1833, 19;
	xor.b32  	%r1850, %r1848, %r1849;
	shf.l.wrap.b32 	%r1851, %r1833, %r1833, 10;
	xor.b32  	%r1852, %r1850, %r1851;
	xor.b32  	%r1853, %r1807, %r1781;
	and.b32  	%r1854, %r1833, %r1853;
	and.b32  	%r1855, %r1807, %r1781;
	xor.b32  	%r1856, %r1854, %r1855;
	add.s32 	%r1857, %r1852, %r1856;
	add.s32 	%r1858, %r1847, %r1755;
	add.s32 	%r1859, %r1857, %r1847;
	shf.l.wrap.b32 	%r1860, %r1858, %r1858, 26;
	shf.l.wrap.b32 	%r1861, %r1858, %r1858, 21;
	xor.b32  	%r1862, %r1860, %r1861;
	shf.l.wrap.b32 	%r1863, %r1858, %r1858, 7;
	xor.b32  	%r1864, %r1862, %r1863;
	and.b32  	%r1865, %r1858, %r1832;
	not.b32 	%r1866, %r1858;
	and.b32  	%r1867, %r1806, %r1866;
	or.b32  	%r1868, %r1865, %r1867;
	add.s32 	%r1869, %r1868, %r1780;
	add.s32 	%r1870, %r1869, %r1864;
	ld.const.u32 	%r1871, [K256+140];
	add.s32 	%r1872, %r1870, %r1871;
	add.s32 	%r1873, %r1872, %r605;
	shf.l.wrap.b32 	%r1874, %r1859, %r1859, 30;
	shf.l.wrap.b32 	%r1875, %r1859, %r1859, 19;
	xor.b32  	%r1876, %r1874, %r1875;
	shf.l.wrap.b32 	%r1877, %r1859, %r1859, 10;
	xor.b32  	%r1878, %r1876, %r1877;
	xor.b32  	%r1879, %r1833, %r1807;
	and.b32  	%r1880, %r1859, %r1879;
	and.b32  	%r1881, %r1833, %r1807;
	xor.b32  	%r1882, %r1880, %r1881;
	add.s32 	%r1883, %r1878, %r1882;
	add.s32 	%r1884, %r1873, %r1781;
	add.s32 	%r1885, %r1883, %r1873;
	shf.l.wrap.b32 	%r1886, %r1884, %r1884, 26;
	shf.l.wrap.b32 	%r1887, %r1884, %r1884, 21;
	xor.b32  	%r1888, %r1886, %r1887;
	shf.l.wrap.b32 	%r1889, %r1884, %r1884, 7;
	xor.b32  	%r1890, %r1888, %r1889;
	and.b32  	%r1891, %r1884, %r1858;
	not.b32 	%r1892, %r1884;
	and.b32  	%r1893, %r1832, %r1892;
	or.b32  	%r1894, %r1891, %r1893;
	add.s32 	%r1895, %r1894, %r1806;
	add.s32 	%r1896, %r1895, %r1890;
	ld.const.u32 	%r1897, [K256+144];
	add.s32 	%r1898, %r1896, %r1897;
	add.s32 	%r1899, %r1898, %r618;
	shf.l.wrap.b32 	%r1900, %r1885, %r1885, 30;
	shf.l.wrap.b32 	%r1901, %r1885, %r1885, 19;
	xor.b32  	%r1902, %r1900, %r1901;
	shf.l.wrap.b32 	%r1903, %r1885, %r1885, 10;
	xor.b32  	%r1904, %r1902, %r1903;
	xor.b32  	%r1905, %r1859, %r1833;
	and.b32  	%r1906, %r1885, %r1905;
	and.b32  	%r1907, %r1859, %r1833;
	xor.b32  	%r1908, %r1906, %r1907;
	add.s32 	%r1909, %r1904, %r1908;
	add.s32 	%r1910, %r1899, %r1807;
	add.s32 	%r1911, %r1909, %r1899;
	shf.l.wrap.b32 	%r1912, %r1910, %r1910, 26;
	shf.l.wrap.b32 	%r1913, %r1910, %r1910, 21;
	xor.b32  	%r1914, %r1912, %r1913;
	shf.l.wrap.b32 	%r1915, %r1910, %r1910, 7;
	xor.b32  	%r1916, %r1914, %r1915;
	and.b32  	%r1917, %r1910, %r1884;
	not.b32 	%r1918, %r1910;
	and.b32  	%r1919, %r1858, %r1918;
	or.b32  	%r1920, %r1917, %r1919;
	add.s32 	%r1921, %r1920, %r1832;
	add.s32 	%r1922, %r1921, %r1916;
	ld.const.u32 	%r1923, [K256+148];
	add.s32 	%r1924, %r1922, %r1923;
	add.s32 	%r1925, %r1924, %r631;
	shf.l.wrap.b32 	%r1926, %r1911, %r1911, 30;
	shf.l.wrap.b32 	%r1927, %r1911, %r1911, 19;
	xor.b32  	%r1928, %r1926, %r1927;
	shf.l.wrap.b32 	%r1929, %r1911, %r1911, 10;
	xor.b32  	%r1930, %r1928, %r1929;
	xor.b32  	%r1931, %r1885, %r1859;
	and.b32  	%r1932, %r1911, %r1931;
	and.b32  	%r1933, %r1885, %r1859;
	xor.b32  	%r1934, %r1932, %r1933;
	add.s32 	%r1935, %r1930, %r1934;
	add.s32 	%r1936, %r1925, %r1833;
	add.s32 	%r1937, %r1935, %r1925;
	shf.l.wrap.b32 	%r1938, %r1936, %r1936, 26;
	shf.l.wrap.b32 	%r1939, %r1936, %r1936, 21;
	xor.b32  	%r1940, %r1938, %r1939;
	shf.l.wrap.b32 	%r1941, %r1936, %r1936, 7;
	xor.b32  	%r1942, %r1940, %r1941;
	and.b32  	%r1943, %r1936, %r1910;
	not.b32 	%r1944, %r1936;
	and.b32  	%r1945, %r1884, %r1944;
	or.b32  	%r1946, %r1943, %r1945;
	add.s32 	%r1947, %r1946, %r1858;
	add.s32 	%r1948, %r1947, %r1942;
	ld.const.u32 	%r1949, [K256+152];
	add.s32 	%r1950, %r1948, %r1949;
	add.s32 	%r1951, %r1950, %r644;
	shf.l.wrap.b32 	%r1952, %r1937, %r1937, 30;
	shf.l.wrap.b32 	%r1953, %r1937, %r1937, 19;
	xor.b32  	%r1954, %r1952, %r1953;
	shf.l.wrap.b32 	%r1955, %r1937, %r1937, 10;
	xor.b32  	%r1956, %r1954, %r1955;
	xor.b32  	%r1957, %r1911, %r1885;
	and.b32  	%r1958, %r1937, %r1957;
	and.b32  	%r1959, %r1911, %r1885;
	xor.b32  	%r1960, %r1958, %r1959;
	add.s32 	%r1961, %r1956, %r1960;
	add.s32 	%r1962, %r1951, %r1859;
	add.s32 	%r1963, %r1961, %r1951;
	shf.l.wrap.b32 	%r1964, %r1962, %r1962, 26;
	shf.l.wrap.b32 	%r1965, %r1962, %r1962, 21;
	xor.b32  	%r1966, %r1964, %r1965;
	shf.l.wrap.b32 	%r1967, %r1962, %r1962, 7;
	xor.b32  	%r1968, %r1966, %r1967;
	and.b32  	%r1969, %r1962, %r1936;
	not.b32 	%r1970, %r1962;
	and.b32  	%r1971, %r1910, %r1970;
	or.b32  	%r1972, %r1969, %r1971;
	add.s32 	%r1973, %r1972, %r1884;
	add.s32 	%r1974, %r1973, %r1968;
	ld.const.u32 	%r1975, [K256+156];
	add.s32 	%r1976, %r1974, %r1975;
	add.s32 	%r1977, %r1976, %r657;
	shf.l.wrap.b32 	%r1978, %r1963, %r1963, 30;
	shf.l.wrap.b32 	%r1979, %r1963, %r1963, 19;
	xor.b32  	%r1980, %r1978, %r1979;
	shf.l.wrap.b32 	%r1981, %r1963, %r1963, 10;
	xor.b32  	%r1982, %r1980, %r1981;
	xor.b32  	%r1983, %r1937, %r1911;
	and.b32  	%r1984, %r1963, %r1983;
	and.b32  	%r1985, %r1937, %r1911;
	xor.b32  	%r1986, %r1984, %r1985;
	add.s32 	%r1987, %r1982, %r1986;
	add.s32 	%r1988, %r1977, %r1885;
	add.s32 	%r1989, %r1987, %r1977;
	shf.l.wrap.b32 	%r1990, %r1988, %r1988, 26;
	shf.l.wrap.b32 	%r1991, %r1988, %r1988, 21;
	xor.b32  	%r1992, %r1990, %r1991;
	shf.l.wrap.b32 	%r1993, %r1988, %r1988, 7;
	xor.b32  	%r1994, %r1992, %r1993;
	and.b32  	%r1995, %r1988, %r1962;
	not.b32 	%r1996, %r1988;
	and.b32  	%r1997, %r1936, %r1996;
	or.b32  	%r1998, %r1995, %r1997;
	add.s32 	%r1999, %r1998, %r1910;
	add.s32 	%r2000, %r1999, %r1994;
	ld.const.u32 	%r2001, [K256+160];
	add.s32 	%r2002, %r2000, %r2001;
	add.s32 	%r2003, %r2002, %r670;
	shf.l.wrap.b32 	%r2004, %r1989, %r1989, 30;
	shf.l.wrap.b32 	%r2005, %r1989, %r1989, 19;
	xor.b32  	%r2006, %r2004, %r2005;
	shf.l.wrap.b32 	%r2007, %r1989, %r1989, 10;
	xor.b32  	%r2008, %r2006, %r2007;
	xor.b32  	%r2009, %r1963, %r1937;
	and.b32  	%r2010, %r1989, %r2009;
	and.b32  	%r2011, %r1963, %r1937;
	xor.b32  	%r2012, %r2010, %r2011;
	add.s32 	%r2013, %r2008, %r2012;
	add.s32 	%r2014, %r2003, %r1911;
	add.s32 	%r2015, %r2013, %r2003;
	shf.l.wrap.b32 	%r2016, %r2014, %r2014, 26;
	shf.l.wrap.b32 	%r2017, %r2014, %r2014, 21;
	xor.b32  	%r2018, %r2016, %r2017;
	shf.l.wrap.b32 	%r2019, %r2014, %r2014, 7;
	xor.b32  	%r2020, %r2018, %r2019;
	and.b32  	%r2021, %r2014, %r1988;
	not.b32 	%r2022, %r2014;
	and.b32  	%r2023, %r1962, %r2022;
	or.b32  	%r2024, %r2021, %r2023;
	add.s32 	%r2025, %r2024, %r1936;
	add.s32 	%r2026, %r2025, %r2020;
	ld.const.u32 	%r2027, [K256+164];
	add.s32 	%r2028, %r2026, %r2027;
	add.s32 	%r2029, %r2028, %r683;
	shf.l.wrap.b32 	%r2030, %r2015, %r2015, 30;
	shf.l.wrap.b32 	%r2031, %r2015, %r2015, 19;
	xor.b32  	%r2032, %r2030, %r2031;
	shf.l.wrap.b32 	%r2033, %r2015, %r2015, 10;
	xor.b32  	%r2034, %r2032, %r2033;
	xor.b32  	%r2035, %r1989, %r1963;
	and.b32  	%r2036, %r2015, %r2035;
	and.b32  	%r2037, %r1989, %r1963;
	xor.b32  	%r2038, %r2036, %r2037;
	add.s32 	%r2039, %r2034, %r2038;
	add.s32 	%r2040, %r2029, %r1937;
	add.s32 	%r2041, %r2039, %r2029;
	shf.l.wrap.b32 	%r2042, %r2040, %r2040, 26;
	shf.l.wrap.b32 	%r2043, %r2040, %r2040, 21;
	xor.b32  	%r2044, %r2042, %r2043;
	shf.l.wrap.b32 	%r2045, %r2040, %r2040, 7;
	xor.b32  	%r2046, %r2044, %r2045;
	and.b32  	%r2047, %r2040, %r2014;
	not.b32 	%r2048, %r2040;
	and.b32  	%r2049, %r1988, %r2048;
	or.b32  	%r2050, %r2047, %r2049;
	add.s32 	%r2051, %r2050, %r1962;
	add.s32 	%r2052, %r2051, %r2046;
	ld.const.u32 	%r2053, [K256+168];
	add.s32 	%r2054, %r2052, %r2053;
	add.s32 	%r2055, %r2054, %r696;
	shf.l.wrap.b32 	%r2056, %r2041, %r2041, 30;
	shf.l.wrap.b32 	%r2057, %r2041, %r2041, 19;
	xor.b32  	%r2058, %r2056, %r2057;
	shf.l.wrap.b32 	%r2059, %r2041, %r2041, 10;
	xor.b32  	%r2060, %r2058, %r2059;
	xor.b32  	%r2061, %r2015, %r1989;
	and.b32  	%r2062, %r2041, %r2061;
	and.b32  	%r2063, %r2015, %r1989;
	xor.b32  	%r2064, %r2062, %r2063;
	add.s32 	%r2065, %r2060, %r2064;
	add.s32 	%r2066, %r2055, %r1963;
	add.s32 	%r2067, %r2065, %r2055;
	shf.l.wrap.b32 	%r2068, %r2066, %r2066, 26;
	shf.l.wrap.b32 	%r2069, %r2066, %r2066, 21;
	xor.b32  	%r2070, %r2068, %r2069;
	shf.l.wrap.b32 	%r2071, %r2066, %r2066, 7;
	xor.b32  	%r2072, %r2070, %r2071;
	and.b32  	%r2073, %r2066, %r2040;
	not.b32 	%r2074, %r2066;
	and.b32  	%r2075, %r2014, %r2074;
	or.b32  	%r2076, %r2073, %r2075;
	add.s32 	%r2077, %r2076, %r1988;
	add.s32 	%r2078, %r2077, %r2072;
	ld.const.u32 	%r2079, [K256+172];
	add.s32 	%r2080, %r2078, %r2079;
	add.s32 	%r2081, %r2080, %r709;
	shf.l.wrap.b32 	%r2082, %r2067, %r2067, 30;
	shf.l.wrap.b32 	%r2083, %r2067, %r2067, 19;
	xor.b32  	%r2084, %r2082, %r2083;
	shf.l.wrap.b32 	%r2085, %r2067, %r2067, 10;
	xor.b32  	%r2086, %r2084, %r2085;
	xor.b32  	%r2087, %r2041, %r2015;
	and.b32  	%r2088, %r2067, %r2087;
	and.b32  	%r2089, %r2041, %r2015;
	xor.b32  	%r2090, %r2088, %r2089;
	add.s32 	%r2091, %r2086, %r2090;
	add.s32 	%r2092, %r2081, %r1989;
	add.s32 	%r2093, %r2091, %r2081;
	shf.l.wrap.b32 	%r2094, %r2092, %r2092, 26;
	shf.l.wrap.b32 	%r2095, %r2092, %r2092, 21;
	xor.b32  	%r2096, %r2094, %r2095;
	shf.l.wrap.b32 	%r2097, %r2092, %r2092, 7;
	xor.b32  	%r2098, %r2096, %r2097;
	and.b32  	%r2099, %r2092, %r2066;
	not.b32 	%r2100, %r2092;
	and.b32  	%r2101, %r2040, %r2100;
	or.b32  	%r2102, %r2099, %r2101;
	add.s32 	%r2103, %r2102, %r2014;
	add.s32 	%r2104, %r2103, %r2098;
	ld.const.u32 	%r2105, [K256+176];
	add.s32 	%r2106, %r2104, %r2105;
	add.s32 	%r2107, %r2106, %r722;
	shf.l.wrap.b32 	%r2108, %r2093, %r2093, 30;
	shf.l.wrap.b32 	%r2109, %r2093, %r2093, 19;
	xor.b32  	%r2110, %r2108, %r2109;
	shf.l.wrap.b32 	%r2111, %r2093, %r2093, 10;
	xor.b32  	%r2112, %r2110, %r2111;
	xor.b32  	%r2113, %r2067, %r2041;
	and.b32  	%r2114, %r2093, %r2113;
	and.b32  	%r2115, %r2067, %r2041;
	xor.b32  	%r2116, %r2114, %r2115;
	add.s32 	%r2117, %r2112, %r2116;
	add.s32 	%r2118, %r2107, %r2015;
	add.s32 	%r2119, %r2117, %r2107;
	shf.l.wrap.b32 	%r2120, %r2118, %r2118, 26;
	shf.l.wrap.b32 	%r2121, %r2118, %r2118, 21;
	xor.b32  	%r2122, %r2120, %r2121;
	shf.l.wrap.b32 	%r2123, %r2118, %r2118, 7;
	xor.b32  	%r2124, %r2122, %r2123;
	and.b32  	%r2125, %r2118, %r2092;
	not.b32 	%r2126, %r2118;
	and.b32  	%r2127, %r2066, %r2126;
	or.b32  	%r2128, %r2125, %r2127;
	add.s32 	%r2129, %r2128, %r2040;
	add.s32 	%r2130, %r2129, %r2124;
	ld.const.u32 	%r2131, [K256+180];
	add.s32 	%r2132, %r2130, %r2131;
	add.s32 	%r2133, %r2132, %r735;
	shf.l.wrap.b32 	%r2134, %r2119, %r2119, 30;
	shf.l.wrap.b32 	%r2135, %r2119, %r2119, 19;
	xor.b32  	%r2136, %r2134, %r2135;
	shf.l.wrap.b32 	%r2137, %r2119, %r2119, 10;
	xor.b32  	%r2138, %r2136, %r2137;
	xor.b32  	%r2139, %r2093, %r2067;
	and.b32  	%r2140, %r2119, %r2139;
	and.b32  	%r2141, %r2093, %r2067;
	xor.b32  	%r2142, %r2140, %r2141;
	add.s32 	%r2143, %r2138, %r2142;
	add.s32 	%r2144, %r2133, %r2041;
	add.s32 	%r2145, %r2143, %r2133;
	shf.l.wrap.b32 	%r2146, %r2144, %r2144, 26;
	shf.l.wrap.b32 	%r2147, %r2144, %r2144, 21;
	xor.b32  	%r2148, %r2146, %r2147;
	shf.l.wrap.b32 	%r2149, %r2144, %r2144, 7;
	xor.b32  	%r2150, %r2148, %r2149;
	and.b32  	%r2151, %r2144, %r2118;
	not.b32 	%r2152, %r2144;
	and.b32  	%r2153, %r2092, %r2152;
	or.b32  	%r2154, %r2151, %r2153;
	add.s32 	%r2155, %r2154, %r2066;
	add.s32 	%r2156, %r2155, %r2150;
	ld.const.u32 	%r2157, [K256+184];
	add.s32 	%r2158, %r2156, %r2157;
	add.s32 	%r2159, %r2158, %r748;
	shf.l.wrap.b32 	%r2160, %r2145, %r2145, 30;
	shf.l.wrap.b32 	%r2161, %r2145, %r2145, 19;
	xor.b32  	%r2162, %r2160, %r2161;
	shf.l.wrap.b32 	%r2163, %r2145, %r2145, 10;
	xor.b32  	%r2164, %r2162, %r2163;
	xor.b32  	%r2165, %r2119, %r2093;
	and.b32  	%r2166, %r2145, %r2165;
	and.b32  	%r2167, %r2119, %r2093;
	xor.b32  	%r2168, %r2166, %r2167;
	add.s32 	%r2169, %r2164, %r2168;
	add.s32 	%r2170, %r2159, %r2067;
	add.s32 	%r2171, %r2169, %r2159;
	shf.l.wrap.b32 	%r2172, %r2170, %r2170, 26;
	shf.l.wrap.b32 	%r2173, %r2170, %r2170, 21;
	xor.b32  	%r2174, %r2172, %r2173;
	shf.l.wrap.b32 	%r2175, %r2170, %r2170, 7;
	xor.b32  	%r2176, %r2174, %r2175;
	and.b32  	%r2177, %r2170, %r2144;
	not.b32 	%r2178, %r2170;
	and.b32  	%r2179, %r2118, %r2178;
	or.b32  	%r2180, %r2177, %r2179;
	add.s32 	%r2181, %r2180, %r2092;
	add.s32 	%r2182, %r2181, %r2176;
	ld.const.u32 	%r2183, [K256+188];
	add.s32 	%r2184, %r2182, %r2183;
	add.s32 	%r2185, %r2184, %r761;
	shf.l.wrap.b32 	%r2186, %r2171, %r2171, 30;
	shf.l.wrap.b32 	%r2187, %r2171, %r2171, 19;
	xor.b32  	%r2188, %r2186, %r2187;
	shf.l.wrap.b32 	%r2189, %r2171, %r2171, 10;
	xor.b32  	%r2190, %r2188, %r2189;
	xor.b32  	%r2191, %r2145, %r2119;
	and.b32  	%r2192, %r2171, %r2191;
	and.b32  	%r2193, %r2145, %r2119;
	xor.b32  	%r2194, %r2192, %r2193;
	add.s32 	%r2195, %r2190, %r2194;
	add.s32 	%r2196, %r2185, %r2093;
	add.s32 	%r2197, %r2195, %r2185;
	shf.l.wrap.b32 	%r2198, %r2196, %r2196, 26;
	shf.l.wrap.b32 	%r2199, %r2196, %r2196, 21;
	xor.b32  	%r2200, %r2198, %r2199;
	shf.l.wrap.b32 	%r2201, %r2196, %r2196, 7;
	xor.b32  	%r2202, %r2200, %r2201;
	and.b32  	%r2203, %r2196, %r2170;
	not.b32 	%r2204, %r2196;
	and.b32  	%r2205, %r2144, %r2204;
	or.b32  	%r2206, %r2203, %r2205;
	add.s32 	%r2207, %r2206, %r2118;
	add.s32 	%r2208, %r2207, %r2202;
	ld.const.u32 	%r2209, [K256+192];
	add.s32 	%r2210, %r2208, %r2209;
	add.s32 	%r2211, %r2210, %r774;
	shf.l.wrap.b32 	%r2212, %r2197, %r2197, 30;
	shf.l.wrap.b32 	%r2213, %r2197, %r2197, 19;
	xor.b32  	%r2214, %r2212, %r2213;
	shf.l.wrap.b32 	%r2215, %r2197, %r2197, 10;
	xor.b32  	%r2216, %r2214, %r2215;
	xor.b32  	%r2217, %r2171, %r2145;
	and.b32  	%r2218, %r2197, %r2217;
	and.b32  	%r2219, %r2171, %r2145;
	xor.b32  	%r2220, %r2218, %r2219;
	add.s32 	%r2221, %r2216, %r2220;
	add.s32 	%r2222, %r2211, %r2119;
	add.s32 	%r2223, %r2221, %r2211;
	shf.l.wrap.b32 	%r2224, %r2222, %r2222, 26;
	shf.l.wrap.b32 	%r2225, %r2222, %r2222, 21;
	xor.b32  	%r2226, %r2224, %r2225;
	shf.l.wrap.b32 	%r2227, %r2222, %r2222, 7;
	xor.b32  	%r2228, %r2226, %r2227;
	and.b32  	%r2229, %r2222, %r2196;
	not.b32 	%r2230, %r2222;
	and.b32  	%r2231, %r2170, %r2230;
	or.b32  	%r2232, %r2229, %r2231;
	add.s32 	%r2233, %r2232, %r2144;
	add.s32 	%r2234, %r2233, %r2228;
	ld.const.u32 	%r2235, [K256+196];
	add.s32 	%r2236, %r2234, %r2235;
	add.s32 	%r2237, %r2236, %r787;
	shf.l.wrap.b32 	%r2238, %r2223, %r2223, 30;
	shf.l.wrap.b32 	%r2239, %r2223, %r2223, 19;
	xor.b32  	%r2240, %r2238, %r2239;
	shf.l.wrap.b32 	%r2241, %r2223, %r2223, 10;
	xor.b32  	%r2242, %r2240, %r2241;
	xor.b32  	%r2243, %r2197, %r2171;
	and.b32  	%r2244, %r2223, %r2243;
	and.b32  	%r2245, %r2197, %r2171;
	xor.b32  	%r2246, %r2244, %r2245;
	add.s32 	%r2247, %r2242, %r2246;
	add.s32 	%r2248, %r2237, %r2145;
	add.s32 	%r2249, %r2247, %r2237;
	shf.l.wrap.b32 	%r2250, %r2248, %r2248, 26;
	shf.l.wrap.b32 	%r2251, %r2248, %r2248, 21;
	xor.b32  	%r2252, %r2250, %r2251;
	shf.l.wrap.b32 	%r2253, %r2248, %r2248, 7;
	xor.b32  	%r2254, %r2252, %r2253;
	and.b32  	%r2255, %r2248, %r2222;
	not.b32 	%r2256, %r2248;
	and.b32  	%r2257, %r2196, %r2256;
	or.b32  	%r2258, %r2255, %r2257;
	add.s32 	%r2259, %r2258, %r2170;
	add.s32 	%r2260, %r2259, %r2254;
	ld.const.u32 	%r2261, [K256+200];
	add.s32 	%r2262, %r2260, %r2261;
	add.s32 	%r2263, %r2262, %r800;
	shf.l.wrap.b32 	%r2264, %r2249, %r2249, 30;
	shf.l.wrap.b32 	%r2265, %r2249, %r2249, 19;
	xor.b32  	%r2266, %r2264, %r2265;
	shf.l.wrap.b32 	%r2267, %r2249, %r2249, 10;
	xor.b32  	%r2268, %r2266, %r2267;
	xor.b32  	%r2269, %r2223, %r2197;
	and.b32  	%r2270, %r2249, %r2269;
	and.b32  	%r2271, %r2223, %r2197;
	xor.b32  	%r2272, %r2270, %r2271;
	add.s32 	%r2273, %r2268, %r2272;
	add.s32 	%r2274, %r2263, %r2171;
	add.s32 	%r2275, %r2273, %r2263;
	shf.l.wrap.b32 	%r2276, %r2274, %r2274, 26;
	shf.l.wrap.b32 	%r2277, %r2274, %r2274, 21;
	xor.b32  	%r2278, %r2276, %r2277;
	shf.l.wrap.b32 	%r2279, %r2274, %r2274, 7;
	xor.b32  	%r2280, %r2278, %r2279;
	and.b32  	%r2281, %r2274, %r2248;
	not.b32 	%r2282, %r2274;
	and.b32  	%r2283, %r2222, %r2282;
	or.b32  	%r2284, %r2281, %r2283;
	add.s32 	%r2285, %r2284, %r2196;
	add.s32 	%r2286, %r2285, %r2280;
	ld.const.u32 	%r2287, [K256+204];
	add.s32 	%r2288, %r2286, %r2287;
	add.s32 	%r2289, %r2288, %r813;
	shf.l.wrap.b32 	%r2290, %r2275, %r2275, 30;
	shf.l.wrap.b32 	%r2291, %r2275, %r2275, 19;
	xor.b32  	%r2292, %r2290, %r2291;
	shf.l.wrap.b32 	%r2293, %r2275, %r2275, 10;
	xor.b32  	%r2294, %r2292, %r2293;
	xor.b32  	%r2295, %r2249, %r2223;
	and.b32  	%r2296, %r2275, %r2295;
	and.b32  	%r2297, %r2249, %r2223;
	xor.b32  	%r2298, %r2296, %r2297;
	add.s32 	%r2299, %r2294, %r2298;
	add.s32 	%r2300, %r2289, %r2197;
	add.s32 	%r2301, %r2299, %r2289;
	shf.l.wrap.b32 	%r2302, %r2300, %r2300, 26;
	shf.l.wrap.b32 	%r2303, %r2300, %r2300, 21;
	xor.b32  	%r2304, %r2302, %r2303;
	shf.l.wrap.b32 	%r2305, %r2300, %r2300, 7;
	xor.b32  	%r2306, %r2304, %r2305;
	and.b32  	%r2307, %r2300, %r2274;
	not.b32 	%r2308, %r2300;
	and.b32  	%r2309, %r2248, %r2308;
	or.b32  	%r2310, %r2307, %r2309;
	add.s32 	%r2311, %r2310, %r2222;
	add.s32 	%r2312, %r2311, %r2306;
	ld.const.u32 	%r2313, [K256+208];
	add.s32 	%r2314, %r2312, %r2313;
	add.s32 	%r2315, %r2314, %r826;
	shf.l.wrap.b32 	%r2316, %r2301, %r2301, 30;
	shf.l.wrap.b32 	%r2317, %r2301, %r2301, 19;
	xor.b32  	%r2318, %r2316, %r2317;
	shf.l.wrap.b32 	%r2319, %r2301, %r2301, 10;
	xor.b32  	%r2320, %r2318, %r2319;
	xor.b32  	%r2321, %r2275, %r2249;
	and.b32  	%r2322, %r2301, %r2321;
	and.b32  	%r2323, %r2275, %r2249;
	xor.b32  	%r2324, %r2322, %r2323;
	add.s32 	%r2325, %r2320, %r2324;
	add.s32 	%r2326, %r2315, %r2223;
	add.s32 	%r2327, %r2325, %r2315;
	shf.l.wrap.b32 	%r2328, %r2326, %r2326, 26;
	shf.l.wrap.b32 	%r2329, %r2326, %r2326, 21;
	xor.b32  	%r2330, %r2328, %r2329;
	shf.l.wrap.b32 	%r2331, %r2326, %r2326, 7;
	xor.b32  	%r2332, %r2330, %r2331;
	and.b32  	%r2333, %r2326, %r2300;
	not.b32 	%r2334, %r2326;
	and.b32  	%r2335, %r2274, %r2334;
	or.b32  	%r2336, %r2333, %r2335;
	add.s32 	%r2337, %r2336, %r2248;
	add.s32 	%r2338, %r2337, %r2332;
	ld.const.u32 	%r2339, [K256+212];
	add.s32 	%r2340, %r2338, %r2339;
	add.s32 	%r2341, %r2340, %r839;
	shf.l.wrap.b32 	%r2342, %r2327, %r2327, 30;
	shf.l.wrap.b32 	%r2343, %r2327, %r2327, 19;
	xor.b32  	%r2344, %r2342, %r2343;
	shf.l.wrap.b32 	%r2345, %r2327, %r2327, 10;
	xor.b32  	%r2346, %r2344, %r2345;
	xor.b32  	%r2347, %r2301, %r2275;
	and.b32  	%r2348, %r2327, %r2347;
	and.b32  	%r2349, %r2301, %r2275;
	xor.b32  	%r2350, %r2348, %r2349;
	add.s32 	%r2351, %r2346, %r2350;
	add.s32 	%r2352, %r2341, %r2249;
	add.s32 	%r2353, %r2351, %r2341;
	shf.l.wrap.b32 	%r2354, %r2352, %r2352, 26;
	shf.l.wrap.b32 	%r2355, %r2352, %r2352, 21;
	xor.b32  	%r2356, %r2354, %r2355;
	shf.l.wrap.b32 	%r2357, %r2352, %r2352, 7;
	xor.b32  	%r2358, %r2356, %r2357;
	and.b32  	%r2359, %r2352, %r2326;
	not.b32 	%r2360, %r2352;
	and.b32  	%r2361, %r2300, %r2360;
	or.b32  	%r2362, %r2359, %r2361;
	add.s32 	%r2363, %r2362, %r2274;
	add.s32 	%r2364, %r2363, %r2358;
	ld.const.u32 	%r2365, [K256+216];
	add.s32 	%r2366, %r2364, %r2365;
	add.s32 	%r2367, %r2366, %r852;
	shf.l.wrap.b32 	%r2368, %r2353, %r2353, 30;
	shf.l.wrap.b32 	%r2369, %r2353, %r2353, 19;
	xor.b32  	%r2370, %r2368, %r2369;
	shf.l.wrap.b32 	%r2371, %r2353, %r2353, 10;
	xor.b32  	%r2372, %r2370, %r2371;
	xor.b32  	%r2373, %r2327, %r2301;
	and.b32  	%r2374, %r2353, %r2373;
	and.b32  	%r2375, %r2327, %r2301;
	xor.b32  	%r2376, %r2374, %r2375;
	add.s32 	%r2377, %r2372, %r2376;
	add.s32 	%r2378, %r2367, %r2275;
	add.s32 	%r2379, %r2377, %r2367;
	shf.l.wrap.b32 	%r2380, %r2378, %r2378, 26;
	shf.l.wrap.b32 	%r2381, %r2378, %r2378, 21;
	xor.b32  	%r2382, %r2380, %r2381;
	shf.l.wrap.b32 	%r2383, %r2378, %r2378, 7;
	xor.b32  	%r2384, %r2382, %r2383;
	and.b32  	%r2385, %r2378, %r2352;
	not.b32 	%r2386, %r2378;
	and.b32  	%r2387, %r2326, %r2386;
	or.b32  	%r2388, %r2385, %r2387;
	add.s32 	%r2389, %r2388, %r2300;
	add.s32 	%r2390, %r2389, %r2384;
	ld.const.u32 	%r2391, [K256+220];
	add.s32 	%r2392, %r2390, %r2391;
	add.s32 	%r2393, %r2392, %r865;
	shf.l.wrap.b32 	%r2394, %r2379, %r2379, 30;
	shf.l.wrap.b32 	%r2395, %r2379, %r2379, 19;
	xor.b32  	%r2396, %r2394, %r2395;
	shf.l.wrap.b32 	%r2397, %r2379, %r2379, 10;
	xor.b32  	%r2398, %r2396, %r2397;
	xor.b32  	%r2399, %r2353, %r2327;
	and.b32  	%r2400, %r2379, %r2399;
	and.b32  	%r2401, %r2353, %r2327;
	xor.b32  	%r2402, %r2400, %r2401;
	add.s32 	%r2403, %r2398, %r2402;
	add.s32 	%r2404, %r2393, %r2301;
	add.s32 	%r2405, %r2403, %r2393;
	shf.l.wrap.b32 	%r2406, %r2404, %r2404, 26;
	shf.l.wrap.b32 	%r2407, %r2404, %r2404, 21;
	xor.b32  	%r2408, %r2406, %r2407;
	shf.l.wrap.b32 	%r2409, %r2404, %r2404, 7;
	xor.b32  	%r2410, %r2408, %r2409;
	and.b32  	%r2411, %r2404, %r2378;
	not.b32 	%r2412, %r2404;
	and.b32  	%r2413, %r2352, %r2412;
	or.b32  	%r2414, %r2411, %r2413;
	add.s32 	%r2415, %r2414, %r2326;
	add.s32 	%r2416, %r2415, %r2410;
	ld.const.u32 	%r2417, [K256+224];
	add.s32 	%r2418, %r2416, %r2417;
	add.s32 	%r2419, %r2418, %r878;
	shf.l.wrap.b32 	%r2420, %r2405, %r2405, 30;
	shf.l.wrap.b32 	%r2421, %r2405, %r2405, 19;
	xor.b32  	%r2422, %r2420, %r2421;
	shf.l.wrap.b32 	%r2423, %r2405, %r2405, 10;
	xor.b32  	%r2424, %r2422, %r2423;
	xor.b32  	%r2425, %r2379, %r2353;
	and.b32  	%r2426, %r2405, %r2425;
	and.b32  	%r2427, %r2379, %r2353;
	xor.b32  	%r2428, %r2426, %r2427;
	add.s32 	%r2429, %r2424, %r2428;
	add.s32 	%r2430, %r2419, %r2327;
	add.s32 	%r2431, %r2429, %r2419;
	shf.l.wrap.b32 	%r2432, %r2430, %r2430, 26;
	shf.l.wrap.b32 	%r2433, %r2430, %r2430, 21;
	xor.b32  	%r2434, %r2432, %r2433;
	shf.l.wrap.b32 	%r2435, %r2430, %r2430, 7;
	xor.b32  	%r2436, %r2434, %r2435;
	and.b32  	%r2437, %r2430, %r2404;
	not.b32 	%r2438, %r2430;
	and.b32  	%r2439, %r2378, %r2438;
	or.b32  	%r2440, %r2437, %r2439;
	add.s32 	%r2441, %r2440, %r2352;
	add.s32 	%r2442, %r2441, %r2436;
	ld.const.u32 	%r2443, [K256+228];
	add.s32 	%r2444, %r2442, %r2443;
	add.s32 	%r2445, %r2444, %r891;
	shf.l.wrap.b32 	%r2446, %r2431, %r2431, 30;
	shf.l.wrap.b32 	%r2447, %r2431, %r2431, 19;
	xor.b32  	%r2448, %r2446, %r2447;
	shf.l.wrap.b32 	%r2449, %r2431, %r2431, 10;
	xor.b32  	%r2450, %r2448, %r2449;
	xor.b32  	%r2451, %r2405, %r2379;
	and.b32  	%r2452, %r2431, %r2451;
	and.b32  	%r2453, %r2405, %r2379;
	xor.b32  	%r2454, %r2452, %r2453;
	add.s32 	%r2455, %r2450, %r2454;
	add.s32 	%r2456, %r2445, %r2353;
	add.s32 	%r2457, %r2455, %r2445;
	shf.l.wrap.b32 	%r2458, %r2456, %r2456, 26;
	shf.l.wrap.b32 	%r2459, %r2456, %r2456, 21;
	xor.b32  	%r2460, %r2458, %r2459;
	shf.l.wrap.b32 	%r2461, %r2456, %r2456, 7;
	xor.b32  	%r2462, %r2460, %r2461;
	and.b32  	%r2463, %r2456, %r2430;
	not.b32 	%r2464, %r2456;
	and.b32  	%r2465, %r2404, %r2464;
	or.b32  	%r2466, %r2463, %r2465;
	add.s32 	%r2467, %r2466, %r2378;
	add.s32 	%r2468, %r2467, %r2462;
	ld.const.u32 	%r2469, [K256+232];
	add.s32 	%r2470, %r2468, %r2469;
	add.s32 	%r2471, %r2470, %r904;
	shf.l.wrap.b32 	%r2472, %r2457, %r2457, 30;
	shf.l.wrap.b32 	%r2473, %r2457, %r2457, 19;
	xor.b32  	%r2474, %r2472, %r2473;
	shf.l.wrap.b32 	%r2475, %r2457, %r2457, 10;
	xor.b32  	%r2476, %r2474, %r2475;
	xor.b32  	%r2477, %r2431, %r2405;
	and.b32  	%r2478, %r2457, %r2477;
	and.b32  	%r2479, %r2431, %r2405;
	xor.b32  	%r2480, %r2478, %r2479;
	add.s32 	%r2481, %r2476, %r2480;
	add.s32 	%r2482, %r2471, %r2379;
	add.s32 	%r2483, %r2481, %r2471;
	shf.l.wrap.b32 	%r2484, %r2482, %r2482, 26;
	shf.l.wrap.b32 	%r2485, %r2482, %r2482, 21;
	xor.b32  	%r2486, %r2484, %r2485;
	shf.l.wrap.b32 	%r2487, %r2482, %r2482, 7;
	xor.b32  	%r2488, %r2486, %r2487;
	and.b32  	%r2489, %r2482, %r2456;
	not.b32 	%r2490, %r2482;
	and.b32  	%r2491, %r2430, %r2490;
	or.b32  	%r2492, %r2489, %r2491;
	add.s32 	%r2493, %r2492, %r2404;
	add.s32 	%r2494, %r2493, %r2488;
	ld.const.u32 	%r2495, [K256+236];
	add.s32 	%r2496, %r2494, %r2495;
	add.s32 	%r2497, %r2496, %r917;
	shf.l.wrap.b32 	%r2498, %r2483, %r2483, 30;
	shf.l.wrap.b32 	%r2499, %r2483, %r2483, 19;
	xor.b32  	%r2500, %r2498, %r2499;
	shf.l.wrap.b32 	%r2501, %r2483, %r2483, 10;
	xor.b32  	%r2502, %r2500, %r2501;
	xor.b32  	%r2503, %r2457, %r2431;
	and.b32  	%r2504, %r2483, %r2503;
	and.b32  	%r2505, %r2457, %r2431;
	xor.b32  	%r2506, %r2504, %r2505;
	add.s32 	%r2507, %r2502, %r2506;
	add.s32 	%r2508, %r2497, %r2405;
	add.s32 	%r2509, %r2507, %r2497;
	shf.l.wrap.b32 	%r2510, %r2508, %r2508, 26;
	shf.l.wrap.b32 	%r2511, %r2508, %r2508, 21;
	xor.b32  	%r2512, %r2510, %r2511;
	shf.l.wrap.b32 	%r2513, %r2508, %r2508, 7;
	xor.b32  	%r2514, %r2512, %r2513;
	and.b32  	%r2515, %r2508, %r2482;
	not.b32 	%r2516, %r2508;
	and.b32  	%r2517, %r2456, %r2516;
	or.b32  	%r2518, %r2515, %r2517;
	add.s32 	%r2519, %r2518, %r2430;
	add.s32 	%r2520, %r2519, %r2514;
	ld.const.u32 	%r2521, [K256+240];
	add.s32 	%r2522, %r2520, %r2521;
	add.s32 	%r2523, %r2522, %r930;
	shf.l.wrap.b32 	%r2524, %r2509, %r2509, 30;
	shf.l.wrap.b32 	%r2525, %r2509, %r2509, 19;
	xor.b32  	%r2526, %r2524, %r2525;
	shf.l.wrap.b32 	%r2527, %r2509, %r2509, 10;
	xor.b32  	%r2528, %r2526, %r2527;
	xor.b32  	%r2529, %r2483, %r2457;
	and.b32  	%r2530, %r2509, %r2529;
	and.b32  	%r2531, %r2483, %r2457;
	xor.b32  	%r2532, %r2530, %r2531;
	add.s32 	%r2533, %r2528, %r2532;
	add.s32 	%r2534, %r2523, %r2431;
	add.s32 	%r2535, %r2533, %r2523;
	shf.l.wrap.b32 	%r2536, %r2534, %r2534, 26;
	shf.l.wrap.b32 	%r2537, %r2534, %r2534, 21;
	xor.b32  	%r2538, %r2536, %r2537;
	shf.l.wrap.b32 	%r2539, %r2534, %r2534, 7;
	xor.b32  	%r2540, %r2538, %r2539;
	and.b32  	%r2541, %r2534, %r2508;
	not.b32 	%r2542, %r2534;
	and.b32  	%r2543, %r2482, %r2542;
	or.b32  	%r2544, %r2541, %r2543;
	add.s32 	%r2545, %r2544, %r2456;
	add.s32 	%r2546, %r2545, %r2540;
	ld.const.u32 	%r2547, [K256+244];
	add.s32 	%r2548, %r2546, %r2547;
	add.s32 	%r2549, %r2548, %r943;
	shf.l.wrap.b32 	%r2550, %r2535, %r2535, 30;
	shf.l.wrap.b32 	%r2551, %r2535, %r2535, 19;
	xor.b32  	%r2552, %r2550, %r2551;
	shf.l.wrap.b32 	%r2553, %r2535, %r2535, 10;
	xor.b32  	%r2554, %r2552, %r2553;
	xor.b32  	%r2555, %r2509, %r2483;
	and.b32  	%r2556, %r2535, %r2555;
	and.b32  	%r2557, %r2509, %r2483;
	xor.b32  	%r2558, %r2556, %r2557;
	add.s32 	%r2559, %r2554, %r2558;
	add.s32 	%r2560, %r2549, %r2457;
	add.s32 	%r2561, %r2559, %r2549;
	shf.l.wrap.b32 	%r2562, %r2560, %r2560, 26;
	shf.l.wrap.b32 	%r2563, %r2560, %r2560, 21;
	xor.b32  	%r2564, %r2562, %r2563;
	shf.l.wrap.b32 	%r2565, %r2560, %r2560, 7;
	xor.b32  	%r2566, %r2564, %r2565;
	and.b32  	%r2567, %r2560, %r2534;
	not.b32 	%r2568, %r2560;
	and.b32  	%r2569, %r2508, %r2568;
	or.b32  	%r2570, %r2567, %r2569;
	add.s32 	%r2571, %r2570, %r2482;
	add.s32 	%r2572, %r2571, %r2566;
	ld.const.u32 	%r2573, [K256+248];
	add.s32 	%r2574, %r2572, %r2573;
	add.s32 	%r2575, %r2574, %r956;
	shf.l.wrap.b32 	%r2576, %r2561, %r2561, 30;
	shf.l.wrap.b32 	%r2577, %r2561, %r2561, 19;
	xor.b32  	%r2578, %r2576, %r2577;
	shf.l.wrap.b32 	%r2579, %r2561, %r2561, 10;
	xor.b32  	%r2580, %r2578, %r2579;
	xor.b32  	%r2581, %r2535, %r2509;
	and.b32  	%r2582, %r2561, %r2581;
	and.b32  	%r2583, %r2535, %r2509;
	xor.b32  	%r2584, %r2582, %r2583;
	add.s32 	%r2585, %r2580, %r2584;
	add.s32 	%r2586, %r2575, %r2483;
	add.s32 	%r2587, %r2585, %r2575;
	shf.l.wrap.b32 	%r2588, %r2586, %r2586, 26;
	shf.l.wrap.b32 	%r2589, %r2586, %r2586, 21;
	xor.b32  	%r2590, %r2588, %r2589;
	shf.l.wrap.b32 	%r2591, %r2586, %r2586, 7;
	xor.b32  	%r2592, %r2590, %r2591;
	and.b32  	%r2593, %r2586, %r2560;
	not.b32 	%r2594, %r2586;
	and.b32  	%r2595, %r2534, %r2594;
	or.b32  	%r2596, %r2593, %r2595;
	add.s32 	%r2597, %r2596, %r2508;
	add.s32 	%r2598, %r2597, %r2592;
	ld.const.u32 	%r2599, [K256+252];
	add.s32 	%r2600, %r2598, %r2599;
	add.s32 	%r2601, %r2600, %r969;
	shf.l.wrap.b32 	%r2602, %r2587, %r2587, 30;
	shf.l.wrap.b32 	%r2603, %r2587, %r2587, 19;
	xor.b32  	%r2604, %r2602, %r2603;
	shf.l.wrap.b32 	%r2605, %r2587, %r2587, 10;
	xor.b32  	%r2606, %r2604, %r2605;
	xor.b32  	%r2607, %r2561, %r2535;
	and.b32  	%r2608, %r2587, %r2607;
	and.b32  	%r2609, %r2561, %r2535;
	xor.b32  	%r2610, %r2608, %r2609;
	add.s32 	%r2611, %r2606, %r2610;
	add.s32 	%r30, %r2611, %r2601;
	setp.lt.s32 	%p12, %r36, 3;
	mov.u32 	%r2644, %r106;
	@%p12 bra 	$L__BB3_19;

	ld.param.u32 	%r2632, [_Z24kernel_validate_mnemonicPiiiS__param_1];
	add.s32 	%r2613, %r30, 1779033703;
	shr.u32 	%r31, %r2613, 24;
	mul.lo.s32 	%r32, %r1, %r2632;
	mov.u32 	%r2612, 0;
	mov.u32 	%r2643, %r2612;

$L__BB3_17:
	add.s32 	%r2615, %r2643, %r4;
	mul.hi.s32 	%r2616, %r2615, 780903145;
	shr.u32 	%r2617, %r2616, 31;
	shr.s32 	%r2618, %r2616, 1;
	add.s32 	%r2619, %r2618, %r2617;
	mul.lo.s32 	%r2620, %r2619, 11;
	sub.s32 	%r2621, %r2620, %r2615;
	add.s32 	%r2622, %r2621, 10;
	add.s32 	%r2623, %r2619, %r32;
	mul.wide.s32 	%rd45, %r2623, 4;
	add.s64 	%rd46, %rd1, %rd45;
	ld.global.u32 	%r2624, [%rd46];
	shr.u32 	%r2625, %r2624, %r2622;
	mov.u32 	%r2626, 7;
	sub.s32 	%r2627, %r2626, %r2643;
	shr.u32 	%r2628, %r31, %r2627;
	and.b32  	%r2629, %r2625, 1;
	setp.eq.b32 	%p13, %r2629, 1;
	and.b32  	%r2630, %r2628, 1;
	setp.eq.b32 	%p14, %r2630, 1;
	xor.pred  	%p15, %p14, %p13;
	mov.pred 	%p16, 0;
	xor.pred  	%p17, %p15, %p16;
	add.s32 	%r2643, %r2643, 1;
	mov.u32 	%r2644, %r2612;
	@%p17 bra 	$L__BB3_19;

	setp.lt.s32 	%p18, %r2643, %r3;
	mov.u32 	%r2644, %r106;
	@%p18 bra 	$L__BB3_17;

$L__BB3_19:
	ld.param.u64 	%rd50, [_Z24kernel_validate_mnemonicPiiiS__param_3];
	cvta.to.global.u64 	%rd47, %rd50;
	mul.wide.s32 	%rd48, %r1, 4;
	add.s64 	%rd49, %rd47, %rd48;
	st.global.u32 	[%rd49], %r2644;

$L__BB3_20:
	ret;

}
	// .globl	search_seeds
.visible .entry search_seeds(
	.param .u64 search_seeds_param_0,
	.param .u64 search_seeds_param_1,
	.param .u64 search_seeds_param_2,
	.param .u64 search_seeds_param_3,
	.param .u32 search_seeds_param_4,
	.param .u32 search_seeds_param_5,
	.param .u64 search_seeds_param_6,
	.param .u64 search_seeds_param_7,
	.param .u32 search_seeds_param_8,
	.param .u32 search_seeds_param_9
)
{
	.local .align 16 .b8 	__local_depot4[640];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<437>;
	.reg .b16 	%rs<1152>;
	.reg .b32 	%r<11239>;
	.reg .b64 	%rd<15731>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd689, [search_seeds_param_0];
	ld.param.u64 	%rd691, [search_seeds_param_2];
	ld.param.u64 	%rd693, [search_seeds_param_3];
	ld.param.u32 	%r136, [search_seeds_param_5];
	ld.param.u64 	%rd694, [search_seeds_param_6];
	ld.param.u32 	%r138, [search_seeds_param_9];
	cvta.to.global.u64 	%rd1, %rd694;
	add.u64 	%rd2, %SPL, 0;
	add.u64 	%rd3, %SPL, 208;
	add.u64 	%rd4, %SPL, 336;
	add.u64 	%rd698, %SP, 384;
	add.u64 	%rd15507, %SPL, 384;
	mov.u32 	%r139, %ntid.x;
	mov.u32 	%r140, %ctaid.x;
	mov.u32 	%r141, %tid.x;
	mad.lo.s32 	%r142, %r140, %r139, %r141;
	cvt.u64.u32 	%rd6, %r142;
	setp.ge.u64 	%p9, %rd6, %rd693;
	@%p9 bra 	$L__BB4_325;

	add.s64 	%rd15502, %rd6, %rd691;
	setp.lt.s32 	%p10, %r136, 1;
	@%p10 bra 	$L__BB4_8;

	add.s32 	%r144, %r136, -1;
	and.b32  	%r11178, %r136, 3;
	setp.lt.u32 	%p11, %r144, 3;
	mov.u32 	%r11177, 0;
	@%p11 bra 	$L__BB4_5;

	sub.s32 	%r11176, %r136, %r11178;

$L__BB4_4:
	.pragma "nounroll";
	mul.wide.s32 	%rd699, %r11177, 4;
	add.s64 	%rd700, %rd1, %rd699;
	add.s64 	%rd701, %rd4, %rd699;
	ld.global.u32 	%r146, [%rd700+12];
	ld.global.u32 	%r147, [%rd700+8];
	ld.global.u32 	%r148, [%rd700+4];
	ld.global.u32 	%r149, [%rd700];
	st.local.v4.u32 	[%rd701], {%r149, %r148, %r147, %r146};
	add.s32 	%r11177, %r11177, 4;
	add.s32 	%r11176, %r11176, -4;
	setp.ne.s32 	%p12, %r11176, 0;
	@%p12 bra 	$L__BB4_4;

$L__BB4_5:
	setp.eq.s32 	%p13, %r11178, 0;
	@%p13 bra 	$L__BB4_8;

	mul.wide.s32 	%rd702, %r11177, 4;
	add.s64 	%rd15499, %rd4, %rd702;
	add.s64 	%rd15498, %rd1, %rd702;

$L__BB4_7:
	.pragma "nounroll";
	ld.global.u32 	%r150, [%rd15498];
	st.local.u32 	[%rd15499], %r150;
	add.s64 	%rd15499, %rd15499, 4;
	add.s64 	%rd15498, %rd15498, 4;
	add.s32 	%r11178, %r11178, -1;
	setp.ne.s32 	%p14, %r11178, 0;
	@%p14 bra 	$L__BB4_7;

$L__BB4_8:
	setp.gt.s32 	%p15, %r136, 11;
	@%p15 bra 	$L__BB4_15;

	neg.s32 	%r151, %r136;
	and.b32  	%r11180, %r151, 3;
	setp.eq.s32 	%p16, %r11180, 0;
	mov.u32 	%r11181, %r136;
	@%p16 bra 	$L__BB4_12;

	mul.wide.s32 	%rd703, %r136, 4;
	add.s64 	%rd15500, %rd4, %rd703;
	mov.u32 	%r11181, %r136;

$L__BB4_11:
	.pragma "nounroll";
	cvt.u32.u64 	%r152, %rd15502;
	and.b32  	%r153, %r152, 2047;
	st.local.u32 	[%rd15500], %r153;
	shr.u64 	%rd15502, %rd15502, 11;
	add.s32 	%r11181, %r11181, 1;
	add.s64 	%rd15500, %rd15500, 4;
	add.s32 	%r11180, %r11180, -1;
	setp.ne.s32 	%p17, %r11180, 0;
	@%p17 bra 	$L__BB4_11;

$L__BB4_12:
	mov.u32 	%r154, 11;
	sub.s32 	%r155, %r154, %r136;
	setp.lt.u32 	%p18, %r155, 3;
	@%p18 bra 	$L__BB4_15;

	add.s32 	%r11182, %r11181, -4;
	mul.wide.s32 	%rd704, %r11181, 4;
	add.s64 	%rd705, %rd4, %rd704;
	add.s64 	%rd15503, %rd705, 8;

$L__BB4_14:
	cvt.u32.u64 	%r156, %rd15502;
	and.b32  	%r157, %r156, 2047;
	st.local.u32 	[%rd15503+-8], %r157;
	bfe.u32 	%r158, %r156, 11, 11;
	st.local.u32 	[%rd15503+-4], %r158;
	shr.u64 	%rd706, %rd15502, 22;
	cvt.u32.u64 	%r159, %rd706;
	and.b32  	%r160, %r159, 2047;
	st.local.u32 	[%rd15503], %r160;
	shr.u64 	%rd707, %rd15502, 33;
	cvt.u32.u64 	%r161, %rd707;
	and.b32  	%r162, %r161, 2047;
	st.local.u32 	[%rd15503+4], %r162;
	shr.u64 	%rd15502, %rd15502, 44;
	add.s64 	%rd15503, %rd15503, 16;
	add.s32 	%r11182, %r11182, 4;
	setp.lt.s32 	%p19, %r11182, 8;
	@%p19 bra 	$L__BB4_14;

$L__BB4_15:
	mov.u32 	%r11183, 0;
	st.local.v4.u32 	[%rd2], {%r11183, %r11183, %r11183, %r11183};
	cvta.to.global.u64 	%rd26, %rd689;

$L__BB4_16:
	mul.wide.u32 	%rd708, %r11183, -1171354717;
	shr.u64 	%rd709, %rd708, 35;
	cvt.u32.u64 	%r164, %rd709;
	mul.lo.s32 	%r165, %r164, 11;
	sub.s32 	%r166, %r165, %r11183;
	add.s32 	%r167, %r166, 10;
	mul.wide.u32 	%rd710, %r164, 2;
	add.s64 	%rd711, %rd4, %rd710;
	ld.local.u16 	%r168, [%rd711];
	mov.u32 	%r169, 1;
	shl.b32 	%r170, %r169, %r167;
	and.b32  	%r171, %r170, %r168;
	setp.eq.s32 	%p20, %r171, 0;
	@%p20 bra 	$L__BB4_18;

	shr.u32 	%r172, %r11183, 3;
	cvt.u64.u32 	%rd712, %r172;
	add.s64 	%rd713, %rd2, %rd712;
	ld.local.u8 	%rs177, [%rd713];
	or.b16  	%rs178, %rs177, 128;
	st.local.u8 	[%rd713], %rs178;

$L__BB4_18:
	add.s32 	%r173, %r11183, 1;
	mul.wide.u32 	%rd714, %r173, -1171354717;
	shr.u64 	%rd715, %rd714, 35;
	cvt.u32.u64 	%r175, %rd715;
	mul.lo.s32 	%r176, %r175, 11;
	sub.s32 	%r177, %r176, %r173;
	add.s32 	%r178, %r177, 10;
	mul.wide.u32 	%rd716, %r175, 2;
	add.s64 	%rd717, %rd4, %rd716;
	ld.local.u16 	%r179, [%rd717];
	shl.b32 	%r180, %r169, %r178;
	and.b32  	%r181, %r180, %r179;
	setp.eq.s32 	%p21, %r181, 0;
	@%p21 bra 	$L__BB4_20;

	shr.u32 	%r182, %r11183, 3;
	cvt.u64.u32 	%rd718, %r182;
	add.s64 	%rd719, %rd2, %rd718;
	ld.local.u8 	%rs179, [%rd719];
	or.b16  	%rs180, %rs179, 64;
	st.local.u8 	[%rd719], %rs180;

$L__BB4_20:
	add.s32 	%r183, %r11183, 2;
	mul.wide.u32 	%rd720, %r183, -1171354717;
	shr.u64 	%rd721, %rd720, 35;
	cvt.u32.u64 	%r184, %rd721;
	mul.lo.s32 	%r185, %r184, 11;
	sub.s32 	%r186, %r185, %r183;
	add.s32 	%r187, %r186, 10;
	mul.wide.u32 	%rd722, %r184, 2;
	add.s64 	%rd723, %rd4, %rd722;
	ld.local.u16 	%r188, [%rd723];
	mov.u32 	%r189, 1;
	shl.b32 	%r190, %r189, %r187;
	and.b32  	%r191, %r190, %r188;
	setp.eq.s32 	%p22, %r191, 0;
	@%p22 bra 	$L__BB4_22;

	shr.u32 	%r192, %r11183, 3;
	cvt.u64.u32 	%rd724, %r192;
	add.s64 	%rd725, %rd2, %rd724;
	ld.local.u8 	%rs181, [%rd725];
	or.b16  	%rs182, %rs181, 32;
	st.local.u8 	[%rd725], %rs182;

$L__BB4_22:
	add.s32 	%r193, %r11183, 3;
	mul.wide.u32 	%rd726, %r193, -1171354717;
	shr.u64 	%rd727, %rd726, 35;
	cvt.u32.u64 	%r194, %rd727;
	mul.lo.s32 	%r195, %r194, 11;
	sub.s32 	%r196, %r195, %r193;
	add.s32 	%r197, %r196, 10;
	mul.wide.u32 	%rd728, %r194, 2;
	add.s64 	%rd729, %rd4, %rd728;
	ld.local.u16 	%r198, [%rd729];
	shl.b32 	%r200, %r189, %r197;
	and.b32  	%r201, %r200, %r198;
	setp.eq.s32 	%p23, %r201, 0;
	@%p23 bra 	$L__BB4_24;

	shr.u32 	%r202, %r11183, 3;
	cvt.u64.u32 	%rd730, %r202;
	add.s64 	%rd731, %rd2, %rd730;
	ld.local.u8 	%rs183, [%rd731];
	or.b16  	%rs184, %rs183, 16;
	st.local.u8 	[%rd731], %rs184;

$L__BB4_24:
	add.s32 	%r203, %r11183, 4;
	mul.wide.u32 	%rd732, %r203, -1171354717;
	shr.u64 	%rd733, %rd732, 35;
	cvt.u32.u64 	%r204, %rd733;
	mul.lo.s32 	%r205, %r204, 11;
	sub.s32 	%r206, %r205, %r203;
	add.s32 	%r207, %r206, 10;
	mul.wide.u32 	%rd734, %r204, 2;
	add.s64 	%rd735, %rd4, %rd734;
	ld.local.u16 	%r208, [%rd735];
	mov.u32 	%r209, 1;
	shl.b32 	%r210, %r209, %r207;
	and.b32  	%r211, %r210, %r208;
	setp.eq.s32 	%p24, %r211, 0;
	@%p24 bra 	$L__BB4_26;

	shr.u32 	%r212, %r11183, 3;
	cvt.u64.u32 	%rd736, %r212;
	add.s64 	%rd737, %rd2, %rd736;
	ld.local.u8 	%rs185, [%rd737];
	or.b16  	%rs186, %rs185, 8;
	st.local.u8 	[%rd737], %rs186;

$L__BB4_26:
	add.s32 	%r213, %r11183, 5;
	mul.wide.u32 	%rd738, %r213, -1171354717;
	shr.u64 	%rd739, %rd738, 35;
	cvt.u32.u64 	%r214, %rd739;
	mul.lo.s32 	%r215, %r214, 11;
	sub.s32 	%r216, %r215, %r213;
	add.s32 	%r217, %r216, 10;
	mul.wide.u32 	%rd740, %r214, 2;
	add.s64 	%rd741, %rd4, %rd740;
	ld.local.u16 	%r218, [%rd741];
	shl.b32 	%r220, %r209, %r217;
	and.b32  	%r221, %r220, %r218;
	setp.eq.s32 	%p25, %r221, 0;
	@%p25 bra 	$L__BB4_28;

	shr.u32 	%r222, %r11183, 3;
	cvt.u64.u32 	%rd742, %r222;
	add.s64 	%rd743, %rd2, %rd742;
	ld.local.u8 	%rs187, [%rd743];
	or.b16  	%rs188, %rs187, 4;
	st.local.u8 	[%rd743], %rs188;

$L__BB4_28:
	add.s32 	%r223, %r11183, 6;
	mul.wide.u32 	%rd744, %r223, -1171354717;
	shr.u64 	%rd745, %rd744, 35;
	cvt.u32.u64 	%r224, %rd745;
	mul.lo.s32 	%r225, %r224, 11;
	sub.s32 	%r226, %r225, %r223;
	add.s32 	%r227, %r226, 10;
	mul.wide.u32 	%rd746, %r224, 2;
	add.s64 	%rd747, %rd4, %rd746;
	ld.local.u16 	%r228, [%rd747];
	mov.u32 	%r229, 1;
	shl.b32 	%r230, %r229, %r227;
	and.b32  	%r231, %r230, %r228;
	setp.eq.s32 	%p26, %r231, 0;
	@%p26 bra 	$L__BB4_30;

	shr.u32 	%r232, %r11183, 3;
	cvt.u64.u32 	%rd748, %r232;
	add.s64 	%rd749, %rd2, %rd748;
	ld.local.u8 	%rs189, [%rd749];
	or.b16  	%rs190, %rs189, 2;
	st.local.u8 	[%rd749], %rs190;

$L__BB4_30:
	add.s32 	%r233, %r11183, 7;
	mul.wide.u32 	%rd750, %r233, -1171354717;
	shr.u64 	%rd751, %rd750, 35;
	cvt.u32.u64 	%r234, %rd751;
	mul.lo.s32 	%r235, %r234, 11;
	sub.s32 	%r236, %r235, %r233;
	add.s32 	%r237, %r236, 10;
	mul.wide.u32 	%rd752, %r234, 2;
	add.s64 	%rd753, %rd4, %rd752;
	ld.local.u16 	%r238, [%rd753];
	shl.b32 	%r240, %r229, %r237;
	and.b32  	%r241, %r240, %r238;
	setp.eq.s32 	%p27, %r241, 0;
	@%p27 bra 	$L__BB4_32;

	shr.u32 	%r242, %r11183, 3;
	cvt.u64.u32 	%rd754, %r242;
	add.s64 	%rd755, %rd2, %rd754;
	ld.local.u8 	%rs191, [%rd755];
	or.b16  	%rs192, %rs191, 1;
	st.local.u8 	[%rd755], %rs192;

$L__BB4_32:
	add.s32 	%r11183, %r11183, 8;
	setp.ne.s32 	%p28, %r11183, 128;
	@%p28 bra 	$L__BB4_16;

	ld.local.v4.u32 	{%r243, %r244, %r245, %r246}, [%rd2];
	mov.b32 	{%rs193, %rs194}, %r243;
	shr.u16 	%rs195, %rs193, 8;
	shr.u16 	%rs196, %rs194, 8;
	mov.b32 	{%rs197, %rs198}, %r244;
	shr.u16 	%rs199, %rs197, 8;
	shr.u16 	%rs200, %rs198, 8;
	mov.b32 	{%rs201, %rs202}, %r245;
	shr.u16 	%rs203, %rs201, 8;
	shr.u16 	%rs204, %rs202, 8;
	mov.b32 	{%rs205, %rs206}, %r246;
	shr.u16 	%rs207, %rs205, 8;
	shr.u16 	%rs208, %rs206, 8;
	cvt.u32.u16 	%r251, %rs193;
	shl.b32 	%r252, %r251, 24;
	cvt.u32.u16 	%r253, %rs195;
	shl.b32 	%r254, %r253, 16;
	or.b32  	%r255, %r254, %r252;
	and.b16  	%rs209, %rs194, 255;
	mul.wide.u16 	%r256, %rs209, 256;
	or.b32  	%r257, %r255, %r256;
	cvt.u32.u16 	%r258, %rs196;
	or.b32  	%r259, %r257, %r258;
	cvt.u32.u16 	%r260, %rs197;
	shl.b32 	%r261, %r260, 24;
	cvt.u32.u16 	%r262, %rs199;
	shl.b32 	%r263, %r262, 16;
	or.b32  	%r264, %r263, %r261;
	and.b16  	%rs210, %rs198, 255;
	mul.wide.u16 	%r265, %rs210, 256;
	or.b32  	%r266, %r264, %r265;
	cvt.u32.u16 	%r267, %rs200;
	or.b32  	%r268, %r266, %r267;
	cvt.u32.u16 	%r269, %rs201;
	shl.b32 	%r270, %r269, 24;
	cvt.u32.u16 	%r271, %rs203;
	shl.b32 	%r272, %r271, 16;
	or.b32  	%r273, %r272, %r270;
	and.b16  	%rs211, %rs202, 255;
	mul.wide.u16 	%r274, %rs211, 256;
	or.b32  	%r275, %r273, %r274;
	cvt.u32.u16 	%r276, %rs204;
	or.b32  	%r277, %r275, %r276;
	cvt.u32.u16 	%r278, %rs205;
	shl.b32 	%r279, %r278, 24;
	cvt.u32.u16 	%r280, %rs207;
	shl.b32 	%r281, %r280, 16;
	or.b32  	%r282, %r281, %r279;
	and.b16  	%rs212, %rs206, 255;
	mul.wide.u16 	%r283, %rs212, 256;
	or.b32  	%r284, %r282, %r283;
	cvt.u32.u16 	%r285, %rs208;
	or.b32  	%r286, %r284, %r285;
	shr.u32 	%r287, %r268, 7;
	shl.b32 	%r288, %r267, 25;
	or.b32  	%r289, %r288, %r287;
	shr.u32 	%r290, %r264, 18;
	shl.b32 	%r291, %r268, 14;
	or.b32  	%r292, %r291, %r290;
	shr.u32 	%r293, %r268, 3;
	xor.b32  	%r294, %r292, %r293;
	xor.b32  	%r295, %r294, %r289;
	add.s32 	%r296, %r259, %r295;
	shr.u32 	%r297, %r277, 7;
	shl.b32 	%r298, %r276, 25;
	or.b32  	%r299, %r298, %r297;
	shr.u32 	%r300, %r273, 18;
	shl.b32 	%r301, %r277, 14;
	or.b32  	%r302, %r301, %r300;
	shr.u32 	%r303, %r277, 3;
	xor.b32  	%r304, %r302, %r303;
	xor.b32  	%r305, %r304, %r299;
	add.s32 	%r306, %r268, %r305;
	add.s32 	%r307, %r306, 5242880;
	shr.u32 	%r308, %r286, 7;
	shl.b32 	%r309, %r285, 25;
	or.b32  	%r310, %r309, %r308;
	shr.u32 	%r311, %r282, 18;
	shl.b32 	%r312, %r286, 14;
	or.b32  	%r313, %r312, %r311;
	shr.u32 	%r314, %r286, 3;
	xor.b32  	%r315, %r313, %r314;
	xor.b32  	%r316, %r315, %r310;
	shf.l.wrap.b32 	%r317, %r296, %r296, 15;
	shf.l.wrap.b32 	%r318, %r296, %r296, 13;
	shr.u32 	%r319, %r296, 10;
	xor.b32  	%r320, %r318, %r319;
	xor.b32  	%r321, %r320, %r317;
	add.s32 	%r322, %r277, %r316;
	add.s32 	%r323, %r322, %r321;
	shf.l.wrap.b32 	%r324, %r307, %r307, 15;
	shf.l.wrap.b32 	%r325, %r307, %r307, 13;
	shr.u32 	%r326, %r307, 10;
	xor.b32  	%r327, %r325, %r326;
	xor.b32  	%r328, %r327, %r324;
	add.s32 	%r329, %r286, %r328;
	add.s32 	%r330, %r329, 285220864;
	shf.l.wrap.b32 	%r331, %r323, %r323, 15;
	shf.l.wrap.b32 	%r332, %r323, %r323, 13;
	shr.u32 	%r333, %r323, 10;
	xor.b32  	%r334, %r332, %r333;
	xor.b32  	%r335, %r334, %r331;
	xor.b32  	%r336, %r335, -2147483648;
	shf.l.wrap.b32 	%r337, %r330, %r330, 15;
	shf.l.wrap.b32 	%r338, %r330, %r330, 13;
	shr.u32 	%r339, %r330, 10;
	xor.b32  	%r340, %r338, %r339;
	xor.b32  	%r341, %r340, %r337;
	shr.u32 	%r342, %r336, 17;
	shl.b32 	%r343, %r335, 15;
	or.b32  	%r344, %r343, %r342;
	shr.u32 	%r345, %r336, 19;
	shl.b32 	%r346, %r335, 13;
	or.b32  	%r347, %r346, %r345;
	shr.u32 	%r348, %r336, 10;
	xor.b32  	%r349, %r347, %r348;
	xor.b32  	%r350, %r349, %r344;
	add.s32 	%r351, %r350, 128;
	shf.l.wrap.b32 	%r352, %r341, %r341, 15;
	shf.l.wrap.b32 	%r353, %r341, %r341, 13;
	shr.u32 	%r354, %r341, 10;
	xor.b32  	%r355, %r353, %r354;
	xor.b32  	%r356, %r355, %r352;
	add.s32 	%r357, %r296, %r356;
	shf.l.wrap.b32 	%r358, %r351, %r351, 15;
	shf.l.wrap.b32 	%r359, %r351, %r351, 13;
	shr.u32 	%r360, %r351, 10;
	xor.b32  	%r361, %r359, %r360;
	xor.b32  	%r362, %r361, %r358;
	add.s32 	%r363, %r307, %r362;
	shf.l.wrap.b32 	%r364, %r357, %r357, 15;
	shf.l.wrap.b32 	%r365, %r357, %r357, 13;
	shr.u32 	%r366, %r357, 10;
	xor.b32  	%r367, %r365, %r366;
	xor.b32  	%r368, %r367, %r364;
	add.s32 	%r369, %r323, %r368;
	shf.l.wrap.b32 	%r370, %r363, %r363, 15;
	shf.l.wrap.b32 	%r371, %r363, %r363, 13;
	shr.u32 	%r372, %r363, 10;
	xor.b32  	%r373, %r371, %r372;
	xor.b32  	%r374, %r373, %r370;
	add.s32 	%r375, %r330, %r374;
	shf.l.wrap.b32 	%r376, %r369, %r369, 15;
	shf.l.wrap.b32 	%r377, %r369, %r369, 13;
	shr.u32 	%r378, %r369, 10;
	xor.b32  	%r379, %r377, %r378;
	xor.b32  	%r380, %r379, %r376;
	add.s32 	%r381, %r336, %r380;
	shf.l.wrap.b32 	%r382, %r375, %r375, 15;
	shf.l.wrap.b32 	%r383, %r375, %r375, 13;
	shr.u32 	%r384, %r375, 10;
	xor.b32  	%r385, %r383, %r384;
	xor.b32  	%r386, %r385, %r382;
	add.s32 	%r387, %r341, %r386;
	shf.l.wrap.b32 	%r388, %r381, %r381, 15;
	shf.l.wrap.b32 	%r389, %r381, %r381, 13;
	shr.u32 	%r390, %r381, 10;
	xor.b32  	%r391, %r389, %r390;
	xor.b32  	%r392, %r391, %r388;
	add.s32 	%r393, %r351, %r392;
	shf.l.wrap.b32 	%r394, %r387, %r387, 15;
	shf.l.wrap.b32 	%r395, %r387, %r387, 13;
	shr.u32 	%r396, %r387, 10;
	xor.b32  	%r397, %r395, %r396;
	xor.b32  	%r398, %r397, %r394;
	add.s32 	%r399, %r357, %r398;
	add.s32 	%r400, %r399, 2097169;
	shf.l.wrap.b32 	%r401, %r296, %r296, 25;
	shf.l.wrap.b32 	%r402, %r296, %r296, 14;
	shr.u32 	%r403, %r296, 3;
	xor.b32  	%r404, %r402, %r403;
	xor.b32  	%r405, %r404, %r401;
	shf.l.wrap.b32 	%r406, %r393, %r393, 15;
	shf.l.wrap.b32 	%r407, %r393, %r393, 13;
	shr.u32 	%r408, %r393, 10;
	xor.b32  	%r409, %r407, %r408;
	xor.b32  	%r410, %r409, %r406;
	add.s32 	%r411, %r363, %r405;
	add.s32 	%r412, %r411, %r410;
	add.s32 	%r413, %r412, 128;
	shf.l.wrap.b32 	%r414, %r307, %r307, 25;
	shf.l.wrap.b32 	%r415, %r307, %r307, 14;
	shr.u32 	%r416, %r307, 3;
	xor.b32  	%r417, %r415, %r416;
	xor.b32  	%r418, %r417, %r414;
	shf.l.wrap.b32 	%r419, %r400, %r400, 15;
	shf.l.wrap.b32 	%r420, %r400, %r400, 13;
	shr.u32 	%r421, %r400, 10;
	xor.b32  	%r422, %r420, %r421;
	xor.b32  	%r423, %r422, %r419;
	add.s32 	%r424, %r369, %r296;
	add.s32 	%r425, %r424, %r418;
	add.s32 	%r426, %r425, %r423;
	shf.l.wrap.b32 	%r427, %r323, %r323, 25;
	shf.l.wrap.b32 	%r428, %r323, %r323, 14;
	shr.u32 	%r429, %r323, 3;
	xor.b32  	%r430, %r428, %r429;
	xor.b32  	%r431, %r430, %r427;
	shf.l.wrap.b32 	%r432, %r413, %r413, 15;
	shf.l.wrap.b32 	%r433, %r413, %r413, 13;
	shr.u32 	%r434, %r413, 10;
	xor.b32  	%r435, %r433, %r434;
	xor.b32  	%r436, %r435, %r432;
	add.s32 	%r437, %r375, %r307;
	add.s32 	%r438, %r437, %r431;
	add.s32 	%r439, %r438, %r436;
	shf.l.wrap.b32 	%r440, %r330, %r330, 25;
	shf.l.wrap.b32 	%r441, %r330, %r330, 14;
	shr.u32 	%r442, %r330, 3;
	xor.b32  	%r443, %r441, %r442;
	xor.b32  	%r444, %r443, %r440;
	shf.l.wrap.b32 	%r445, %r426, %r426, 15;
	shf.l.wrap.b32 	%r446, %r426, %r426, 13;
	shr.u32 	%r447, %r426, 10;
	xor.b32  	%r448, %r446, %r447;
	xor.b32  	%r449, %r448, %r445;
	add.s32 	%r450, %r381, %r323;
	add.s32 	%r451, %r450, %r444;
	add.s32 	%r452, %r451, %r449;
	shr.u32 	%r453, %r336, 7;
	shl.b32 	%r454, %r335, 25;
	or.b32  	%r455, %r454, %r453;
	shr.u32 	%r456, %r336, 18;
	shl.b32 	%r457, %r335, 14;
	or.b32  	%r458, %r457, %r456;
	shr.u32 	%r459, %r336, 3;
	xor.b32  	%r460, %r458, %r459;
	xor.b32  	%r461, %r460, %r455;
	shf.l.wrap.b32 	%r462, %r439, %r439, 15;
	shf.l.wrap.b32 	%r463, %r439, %r439, 13;
	shr.u32 	%r464, %r439, 10;
	xor.b32  	%r465, %r463, %r464;
	xor.b32  	%r466, %r465, %r462;
	add.s32 	%r467, %r387, %r330;
	add.s32 	%r468, %r467, %r461;
	add.s32 	%r469, %r468, %r466;
	shf.l.wrap.b32 	%r470, %r341, %r341, 25;
	shf.l.wrap.b32 	%r471, %r341, %r341, 14;
	shr.u32 	%r472, %r341, 3;
	xor.b32  	%r473, %r471, %r472;
	xor.b32  	%r474, %r473, %r470;
	shf.l.wrap.b32 	%r475, %r452, %r452, 15;
	shf.l.wrap.b32 	%r476, %r452, %r452, 13;
	shr.u32 	%r477, %r452, 10;
	xor.b32  	%r478, %r476, %r477;
	xor.b32  	%r479, %r478, %r475;
	add.s32 	%r480, %r393, %r336;
	add.s32 	%r481, %r480, %r474;
	add.s32 	%r482, %r481, %r479;
	shf.l.wrap.b32 	%r483, %r351, %r351, 25;
	shf.l.wrap.b32 	%r484, %r351, %r351, 14;
	shr.u32 	%r485, %r351, 3;
	xor.b32  	%r486, %r484, %r485;
	xor.b32  	%r487, %r486, %r483;
	shf.l.wrap.b32 	%r488, %r469, %r469, 15;
	shf.l.wrap.b32 	%r489, %r469, %r469, 13;
	shr.u32 	%r490, %r469, 10;
	xor.b32  	%r491, %r489, %r490;
	xor.b32  	%r492, %r491, %r488;
	add.s32 	%r493, %r400, %r341;
	add.s32 	%r494, %r493, %r487;
	add.s32 	%r495, %r494, %r492;
	shf.l.wrap.b32 	%r496, %r357, %r357, 25;
	shf.l.wrap.b32 	%r497, %r357, %r357, 14;
	shr.u32 	%r498, %r357, 3;
	xor.b32  	%r499, %r497, %r498;
	xor.b32  	%r500, %r499, %r496;
	shf.l.wrap.b32 	%r501, %r482, %r482, 15;
	shf.l.wrap.b32 	%r502, %r482, %r482, 13;
	shr.u32 	%r503, %r482, 10;
	xor.b32  	%r504, %r502, %r503;
	xor.b32  	%r505, %r504, %r501;
	add.s32 	%r506, %r413, %r351;
	add.s32 	%r507, %r506, %r500;
	add.s32 	%r508, %r507, %r505;
	shf.l.wrap.b32 	%r509, %r363, %r363, 25;
	shf.l.wrap.b32 	%r510, %r363, %r363, 14;
	shr.u32 	%r511, %r363, 3;
	xor.b32  	%r512, %r510, %r511;
	xor.b32  	%r513, %r512, %r509;
	shf.l.wrap.b32 	%r514, %r495, %r495, 15;
	shf.l.wrap.b32 	%r515, %r495, %r495, 13;
	shr.u32 	%r516, %r495, 10;
	xor.b32  	%r517, %r515, %r516;
	xor.b32  	%r518, %r517, %r514;
	add.s32 	%r519, %r426, %r357;
	add.s32 	%r520, %r519, %r513;
	add.s32 	%r521, %r520, %r518;
	shf.l.wrap.b32 	%r522, %r369, %r369, 25;
	shf.l.wrap.b32 	%r523, %r369, %r369, 14;
	shr.u32 	%r524, %r369, 3;
	xor.b32  	%r525, %r523, %r524;
	xor.b32  	%r526, %r525, %r522;
	shf.l.wrap.b32 	%r527, %r508, %r508, 15;
	shf.l.wrap.b32 	%r528, %r508, %r508, 13;
	shr.u32 	%r529, %r508, 10;
	xor.b32  	%r530, %r528, %r529;
	xor.b32  	%r531, %r530, %r527;
	add.s32 	%r532, %r439, %r363;
	add.s32 	%r533, %r532, %r526;
	add.s32 	%r534, %r533, %r531;
	shf.l.wrap.b32 	%r535, %r375, %r375, 25;
	shf.l.wrap.b32 	%r536, %r375, %r375, 14;
	shr.u32 	%r537, %r375, 3;
	xor.b32  	%r538, %r536, %r537;
	xor.b32  	%r539, %r538, %r535;
	shf.l.wrap.b32 	%r540, %r521, %r521, 15;
	shf.l.wrap.b32 	%r541, %r521, %r521, 13;
	shr.u32 	%r542, %r521, 10;
	xor.b32  	%r543, %r541, %r542;
	xor.b32  	%r544, %r543, %r540;
	add.s32 	%r545, %r452, %r369;
	add.s32 	%r546, %r545, %r539;
	add.s32 	%r547, %r546, %r544;
	shf.l.wrap.b32 	%r548, %r381, %r381, 25;
	shf.l.wrap.b32 	%r549, %r381, %r381, 14;
	shr.u32 	%r550, %r381, 3;
	xor.b32  	%r551, %r549, %r550;
	xor.b32  	%r552, %r551, %r548;
	shf.l.wrap.b32 	%r553, %r534, %r534, 15;
	shf.l.wrap.b32 	%r554, %r534, %r534, 13;
	shr.u32 	%r555, %r534, 10;
	xor.b32  	%r556, %r554, %r555;
	xor.b32  	%r557, %r556, %r553;
	add.s32 	%r558, %r469, %r375;
	add.s32 	%r559, %r558, %r552;
	add.s32 	%r560, %r559, %r557;
	shf.l.wrap.b32 	%r561, %r387, %r387, 25;
	shf.l.wrap.b32 	%r562, %r387, %r387, 14;
	shr.u32 	%r563, %r387, 3;
	xor.b32  	%r564, %r562, %r563;
	xor.b32  	%r565, %r564, %r561;
	shf.l.wrap.b32 	%r566, %r547, %r547, 15;
	shf.l.wrap.b32 	%r567, %r547, %r547, 13;
	shr.u32 	%r568, %r547, 10;
	xor.b32  	%r569, %r567, %r568;
	xor.b32  	%r570, %r569, %r566;
	add.s32 	%r571, %r482, %r381;
	add.s32 	%r572, %r571, %r565;
	add.s32 	%r573, %r572, %r570;
	shf.l.wrap.b32 	%r574, %r393, %r393, 25;
	shf.l.wrap.b32 	%r575, %r393, %r393, 14;
	shr.u32 	%r576, %r393, 3;
	xor.b32  	%r577, %r575, %r576;
	xor.b32  	%r578, %r577, %r574;
	shf.l.wrap.b32 	%r579, %r560, %r560, 15;
	shf.l.wrap.b32 	%r580, %r560, %r560, 13;
	shr.u32 	%r581, %r560, 10;
	xor.b32  	%r582, %r580, %r581;
	xor.b32  	%r583, %r582, %r579;
	add.s32 	%r584, %r495, %r387;
	add.s32 	%r585, %r584, %r578;
	add.s32 	%r586, %r585, %r583;
	shf.l.wrap.b32 	%r587, %r400, %r400, 25;
	shf.l.wrap.b32 	%r588, %r400, %r400, 14;
	shr.u32 	%r589, %r400, 3;
	xor.b32  	%r590, %r588, %r589;
	xor.b32  	%r591, %r590, %r587;
	shf.l.wrap.b32 	%r592, %r573, %r573, 15;
	shf.l.wrap.b32 	%r593, %r573, %r573, 13;
	shr.u32 	%r594, %r573, 10;
	xor.b32  	%r595, %r593, %r594;
	xor.b32  	%r596, %r595, %r592;
	add.s32 	%r597, %r508, %r393;
	add.s32 	%r598, %r597, %r591;
	add.s32 	%r599, %r598, %r596;
	shf.l.wrap.b32 	%r600, %r413, %r413, 25;
	shf.l.wrap.b32 	%r601, %r413, %r413, 14;
	shr.u32 	%r602, %r413, 3;
	xor.b32  	%r603, %r601, %r602;
	xor.b32  	%r604, %r603, %r600;
	shf.l.wrap.b32 	%r605, %r586, %r586, 15;
	shf.l.wrap.b32 	%r606, %r586, %r586, 13;
	shr.u32 	%r607, %r586, 10;
	xor.b32  	%r608, %r606, %r607;
	xor.b32  	%r609, %r608, %r605;
	add.s32 	%r610, %r521, %r400;
	add.s32 	%r611, %r610, %r604;
	add.s32 	%r612, %r611, %r609;
	shf.l.wrap.b32 	%r613, %r426, %r426, 25;
	shf.l.wrap.b32 	%r614, %r426, %r426, 14;
	shr.u32 	%r615, %r426, 3;
	xor.b32  	%r616, %r614, %r615;
	xor.b32  	%r617, %r616, %r613;
	shf.l.wrap.b32 	%r618, %r599, %r599, 15;
	shf.l.wrap.b32 	%r619, %r599, %r599, 13;
	shr.u32 	%r620, %r599, 10;
	xor.b32  	%r621, %r619, %r620;
	xor.b32  	%r622, %r621, %r618;
	add.s32 	%r623, %r534, %r413;
	add.s32 	%r624, %r623, %r617;
	add.s32 	%r625, %r624, %r622;
	shf.l.wrap.b32 	%r626, %r439, %r439, 25;
	shf.l.wrap.b32 	%r627, %r439, %r439, 14;
	shr.u32 	%r628, %r439, 3;
	xor.b32  	%r629, %r627, %r628;
	xor.b32  	%r630, %r629, %r626;
	shf.l.wrap.b32 	%r631, %r612, %r612, 15;
	shf.l.wrap.b32 	%r632, %r612, %r612, 13;
	shr.u32 	%r633, %r612, 10;
	xor.b32  	%r634, %r632, %r633;
	xor.b32  	%r635, %r634, %r631;
	add.s32 	%r636, %r547, %r426;
	add.s32 	%r637, %r636, %r630;
	add.s32 	%r638, %r637, %r635;
	shf.l.wrap.b32 	%r639, %r452, %r452, 25;
	shf.l.wrap.b32 	%r640, %r452, %r452, 14;
	shr.u32 	%r641, %r452, 3;
	xor.b32  	%r642, %r640, %r641;
	xor.b32  	%r643, %r642, %r639;
	shf.l.wrap.b32 	%r644, %r625, %r625, 15;
	shf.l.wrap.b32 	%r645, %r625, %r625, 13;
	shr.u32 	%r646, %r625, 10;
	xor.b32  	%r647, %r645, %r646;
	xor.b32  	%r648, %r647, %r644;
	add.s32 	%r649, %r560, %r439;
	add.s32 	%r650, %r649, %r643;
	add.s32 	%r651, %r650, %r648;
	shf.l.wrap.b32 	%r652, %r469, %r469, 25;
	shf.l.wrap.b32 	%r653, %r469, %r469, 14;
	shr.u32 	%r654, %r469, 3;
	xor.b32  	%r655, %r653, %r654;
	xor.b32  	%r656, %r655, %r652;
	shf.l.wrap.b32 	%r657, %r638, %r638, 15;
	shf.l.wrap.b32 	%r658, %r638, %r638, 13;
	shr.u32 	%r659, %r638, 10;
	xor.b32  	%r660, %r658, %r659;
	xor.b32  	%r661, %r660, %r657;
	add.s32 	%r662, %r573, %r452;
	add.s32 	%r663, %r662, %r656;
	add.s32 	%r664, %r663, %r661;
	shf.l.wrap.b32 	%r665, %r482, %r482, 25;
	shf.l.wrap.b32 	%r666, %r482, %r482, 14;
	shr.u32 	%r667, %r482, 3;
	xor.b32  	%r668, %r666, %r667;
	xor.b32  	%r669, %r668, %r665;
	shf.l.wrap.b32 	%r670, %r651, %r651, 15;
	shf.l.wrap.b32 	%r671, %r651, %r651, 13;
	shr.u32 	%r672, %r651, 10;
	xor.b32  	%r673, %r671, %r672;
	xor.b32  	%r674, %r673, %r670;
	add.s32 	%r675, %r586, %r469;
	add.s32 	%r676, %r675, %r669;
	add.s32 	%r677, %r676, %r674;
	shf.l.wrap.b32 	%r678, %r495, %r495, 25;
	shf.l.wrap.b32 	%r679, %r495, %r495, 14;
	shr.u32 	%r680, %r495, 3;
	xor.b32  	%r681, %r679, %r680;
	xor.b32  	%r682, %r681, %r678;
	shf.l.wrap.b32 	%r683, %r664, %r664, 15;
	shf.l.wrap.b32 	%r684, %r664, %r664, 13;
	shr.u32 	%r685, %r664, 10;
	xor.b32  	%r686, %r684, %r685;
	xor.b32  	%r687, %r686, %r683;
	add.s32 	%r688, %r599, %r482;
	add.s32 	%r689, %r688, %r682;
	add.s32 	%r690, %r689, %r687;
	shf.l.wrap.b32 	%r691, %r508, %r508, 25;
	shf.l.wrap.b32 	%r692, %r508, %r508, 14;
	shr.u32 	%r693, %r508, 3;
	xor.b32  	%r694, %r692, %r693;
	xor.b32  	%r695, %r694, %r691;
	shf.l.wrap.b32 	%r696, %r677, %r677, 15;
	shf.l.wrap.b32 	%r697, %r677, %r677, 13;
	shr.u32 	%r698, %r677, 10;
	xor.b32  	%r699, %r697, %r698;
	xor.b32  	%r700, %r699, %r696;
	add.s32 	%r701, %r612, %r495;
	add.s32 	%r702, %r701, %r695;
	add.s32 	%r703, %r702, %r700;
	shf.l.wrap.b32 	%r704, %r521, %r521, 25;
	shf.l.wrap.b32 	%r705, %r521, %r521, 14;
	shr.u32 	%r706, %r521, 3;
	xor.b32  	%r707, %r705, %r706;
	xor.b32  	%r708, %r707, %r704;
	shf.l.wrap.b32 	%r709, %r690, %r690, 15;
	shf.l.wrap.b32 	%r710, %r690, %r690, 13;
	shr.u32 	%r711, %r690, 10;
	xor.b32  	%r712, %r710, %r711;
	xor.b32  	%r713, %r712, %r709;
	add.s32 	%r714, %r625, %r508;
	add.s32 	%r715, %r714, %r708;
	add.s32 	%r716, %r715, %r713;
	shf.l.wrap.b32 	%r717, %r534, %r534, 25;
	shf.l.wrap.b32 	%r718, %r534, %r534, 14;
	shr.u32 	%r719, %r534, 3;
	xor.b32  	%r720, %r718, %r719;
	xor.b32  	%r721, %r720, %r717;
	shf.l.wrap.b32 	%r722, %r703, %r703, 15;
	shf.l.wrap.b32 	%r723, %r703, %r703, 13;
	shr.u32 	%r724, %r703, 10;
	xor.b32  	%r725, %r723, %r724;
	xor.b32  	%r726, %r725, %r722;
	add.s32 	%r727, %r638, %r521;
	add.s32 	%r728, %r727, %r721;
	add.s32 	%r729, %r728, %r726;
	shf.l.wrap.b32 	%r730, %r547, %r547, 25;
	shf.l.wrap.b32 	%r731, %r547, %r547, 14;
	shr.u32 	%r732, %r547, 3;
	xor.b32  	%r733, %r731, %r732;
	xor.b32  	%r734, %r733, %r730;
	shf.l.wrap.b32 	%r735, %r716, %r716, 15;
	shf.l.wrap.b32 	%r736, %r716, %r716, 13;
	shr.u32 	%r737, %r716, 10;
	xor.b32  	%r738, %r736, %r737;
	xor.b32  	%r739, %r738, %r735;
	add.s32 	%r740, %r651, %r534;
	add.s32 	%r741, %r740, %r734;
	add.s32 	%r742, %r741, %r739;
	shf.l.wrap.b32 	%r743, %r560, %r560, 25;
	shf.l.wrap.b32 	%r744, %r560, %r560, 14;
	shr.u32 	%r745, %r560, 3;
	xor.b32  	%r746, %r744, %r745;
	xor.b32  	%r747, %r746, %r743;
	shf.l.wrap.b32 	%r748, %r729, %r729, 15;
	shf.l.wrap.b32 	%r749, %r729, %r729, 13;
	shr.u32 	%r750, %r729, 10;
	xor.b32  	%r751, %r749, %r750;
	xor.b32  	%r752, %r751, %r748;
	add.s32 	%r753, %r664, %r547;
	add.s32 	%r754, %r753, %r747;
	add.s32 	%r755, %r754, %r752;
	shf.l.wrap.b32 	%r756, %r573, %r573, 25;
	shf.l.wrap.b32 	%r757, %r573, %r573, 14;
	shr.u32 	%r758, %r573, 3;
	xor.b32  	%r759, %r757, %r758;
	xor.b32  	%r760, %r759, %r756;
	shf.l.wrap.b32 	%r761, %r742, %r742, 15;
	shf.l.wrap.b32 	%r762, %r742, %r742, 13;
	shr.u32 	%r763, %r742, 10;
	xor.b32  	%r764, %r762, %r763;
	xor.b32  	%r765, %r764, %r761;
	add.s32 	%r766, %r677, %r560;
	add.s32 	%r767, %r766, %r760;
	add.s32 	%r768, %r767, %r765;
	shf.l.wrap.b32 	%r769, %r586, %r586, 25;
	shf.l.wrap.b32 	%r770, %r586, %r586, 14;
	shr.u32 	%r771, %r586, 3;
	xor.b32  	%r772, %r770, %r771;
	xor.b32  	%r773, %r772, %r769;
	shf.l.wrap.b32 	%r774, %r755, %r755, 15;
	shf.l.wrap.b32 	%r775, %r755, %r755, 13;
	shr.u32 	%r776, %r755, 10;
	xor.b32  	%r777, %r775, %r776;
	xor.b32  	%r778, %r777, %r774;
	add.s32 	%r779, %r690, %r573;
	add.s32 	%r780, %r779, %r773;
	add.s32 	%r781, %r780, %r778;
	shf.l.wrap.b32 	%r782, %r599, %r599, 25;
	shf.l.wrap.b32 	%r783, %r599, %r599, 14;
	shr.u32 	%r784, %r599, 3;
	xor.b32  	%r785, %r783, %r784;
	xor.b32  	%r786, %r785, %r782;
	shf.l.wrap.b32 	%r787, %r768, %r768, 15;
	shf.l.wrap.b32 	%r788, %r768, %r768, 13;
	shr.u32 	%r789, %r768, 10;
	xor.b32  	%r790, %r788, %r789;
	xor.b32  	%r791, %r790, %r787;
	add.s32 	%r792, %r703, %r586;
	add.s32 	%r793, %r792, %r786;
	add.s32 	%r794, %r793, %r791;
	shf.l.wrap.b32 	%r795, %r612, %r612, 25;
	shf.l.wrap.b32 	%r796, %r612, %r612, 14;
	shr.u32 	%r797, %r612, 3;
	xor.b32  	%r798, %r796, %r797;
	xor.b32  	%r799, %r798, %r795;
	shf.l.wrap.b32 	%r800, %r781, %r781, 15;
	shf.l.wrap.b32 	%r801, %r781, %r781, 13;
	shr.u32 	%r802, %r781, 10;
	xor.b32  	%r803, %r801, %r802;
	xor.b32  	%r804, %r803, %r800;
	add.s32 	%r805, %r716, %r599;
	add.s32 	%r806, %r805, %r799;
	add.s32 	%r807, %r806, %r804;
	shf.l.wrap.b32 	%r808, %r625, %r625, 25;
	shf.l.wrap.b32 	%r809, %r625, %r625, 14;
	shr.u32 	%r810, %r625, 3;
	xor.b32  	%r811, %r809, %r810;
	xor.b32  	%r812, %r811, %r808;
	shf.l.wrap.b32 	%r813, %r794, %r794, 15;
	shf.l.wrap.b32 	%r814, %r794, %r794, 13;
	shr.u32 	%r815, %r794, 10;
	xor.b32  	%r816, %r814, %r815;
	xor.b32  	%r817, %r816, %r813;
	add.s32 	%r818, %r729, %r612;
	add.s32 	%r819, %r818, %r812;
	add.s32 	%r820, %r819, %r817;
	shf.l.wrap.b32 	%r821, %r638, %r638, 25;
	shf.l.wrap.b32 	%r822, %r638, %r638, 14;
	shr.u32 	%r823, %r638, 3;
	xor.b32  	%r824, %r822, %r823;
	xor.b32  	%r825, %r824, %r821;
	shf.l.wrap.b32 	%r826, %r807, %r807, 15;
	shf.l.wrap.b32 	%r827, %r807, %r807, 13;
	shr.u32 	%r828, %r807, 10;
	xor.b32  	%r829, %r827, %r828;
	xor.b32  	%r830, %r829, %r826;
	add.s32 	%r831, %r742, %r625;
	add.s32 	%r832, %r831, %r825;
	add.s32 	%r833, %r832, %r830;
	ld.const.u32 	%r834, [K256];
	add.s32 	%r835, %r834, %r259;
	add.s32 	%r836, %r835, 1446884106;
	add.s32 	%r837, %r835, -1182902091;
	shf.l.wrap.b32 	%r838, %r836, %r836, 26;
	shf.l.wrap.b32 	%r839, %r836, %r836, 21;
	xor.b32  	%r840, %r838, %r839;
	shf.l.wrap.b32 	%r841, %r836, %r836, 7;
	xor.b32  	%r842, %r840, %r841;
	and.b32  	%r843, %r836, 1359893119;
	mov.u32 	%r844, -1446884107;
	sub.s32 	%r845, %r844, %r835;
	and.b32  	%r846, %r845, -1694144372;
	or.b32  	%r847, %r843, %r846;
	add.s32 	%r848, %r847, %r842;
	ld.const.u32 	%r849, [K256+4];
	add.s32 	%r850, %r848, %r849;
	add.s32 	%r851, %r850, %r268;
	shf.l.wrap.b32 	%r852, %r837, %r837, 30;
	shf.l.wrap.b32 	%r853, %r837, %r837, 19;
	xor.b32  	%r854, %r852, %r853;
	shf.l.wrap.b32 	%r855, %r837, %r837, 10;
	xor.b32  	%r856, %r854, %r855;
	and.b32  	%r857, %r837, -781301534;
	or.b32  	%r858, %r857, 704751109;
	add.s32 	%r859, %r856, %r858;
	add.s32 	%r860, %r859, %r851;
	add.s32 	%r861, %r851, 1542638877;
	add.s32 	%r862, %r860, 528734635;
	shf.l.wrap.b32 	%r863, %r861, %r861, 26;
	shf.l.wrap.b32 	%r864, %r861, %r861, 21;
	xor.b32  	%r865, %r863, %r864;
	shf.l.wrap.b32 	%r866, %r861, %r861, 7;
	xor.b32  	%r867, %r865, %r866;
	and.b32  	%r868, %r861, %r836;
	mov.u32 	%r869, 604844770;
	sub.s32 	%r870, %r869, %r851;
	and.b32  	%r871, %r870, 1359893119;
	or.b32  	%r872, %r868, %r871;
	add.s32 	%r873, %r872, %r867;
	ld.const.u32 	%r874, [K256+8];
	add.s32 	%r875, %r873, %r874;
	add.s32 	%r876, %r875, %r277;
	shf.l.wrap.b32 	%r877, %r862, %r862, 30;
	shf.l.wrap.b32 	%r878, %r862, %r862, 19;
	xor.b32  	%r879, %r877, %r878;
	shf.l.wrap.b32 	%r880, %r862, %r862, 10;
	xor.b32  	%r881, %r879, %r880;
	xor.b32  	%r882, %r837, 1779033703;
	and.b32  	%r883, %r862, %r882;
	and.b32  	%r884, %r837, 1779033703;
	xor.b32  	%r885, %r883, %r884;
	add.s32 	%r886, %r881, %r885;
	add.s32 	%r887, %r886, %r876;
	add.s32 	%r888, %r876, 1449989905;
	add.s32 	%r889, %r887, -1694144372;
	shf.l.wrap.b32 	%r890, %r888, %r888, 26;
	shf.l.wrap.b32 	%r891, %r888, %r888, 21;
	xor.b32  	%r892, %r890, %r891;
	shf.l.wrap.b32 	%r893, %r888, %r888, 7;
	xor.b32  	%r894, %r892, %r893;
	and.b32  	%r895, %r888, %r861;
	mov.u32 	%r896, -1449989906;
	sub.s32 	%r897, %r896, %r876;
	and.b32  	%r898, %r836, %r897;
	or.b32  	%r899, %r895, %r898;
	add.s32 	%r900, %r899, %r894;
	ld.const.u32 	%r901, [K256+12];
	add.s32 	%r902, %r900, %r901;
	add.s32 	%r903, %r902, %r286;
	shf.l.wrap.b32 	%r904, %r889, %r889, 30;
	shf.l.wrap.b32 	%r905, %r889, %r889, 19;
	xor.b32  	%r906, %r904, %r905;
	shf.l.wrap.b32 	%r907, %r889, %r889, 10;
	xor.b32  	%r908, %r906, %r907;
	xor.b32  	%r909, %r862, %r837;
	and.b32  	%r910, %r889, %r909;
	and.b32  	%r911, %r862, %r837;
	xor.b32  	%r912, %r910, %r911;
	add.s32 	%r913, %r908, %r912;
	add.s32 	%r914, %r913, %r903;
	add.s32 	%r915, %r903, -1156040474;
	add.s32 	%r916, %r914, 1359893119;
	shf.l.wrap.b32 	%r917, %r915, %r915, 26;
	shf.l.wrap.b32 	%r918, %r915, %r915, 21;
	xor.b32  	%r919, %r917, %r918;
	shf.l.wrap.b32 	%r920, %r915, %r915, 7;
	xor.b32  	%r921, %r919, %r920;
	and.b32  	%r922, %r915, %r888;
	mov.u32 	%r923, 1156040473;
	sub.s32 	%r924, %r923, %r903;
	and.b32  	%r925, %r861, %r924;
	or.b32  	%r926, %r922, %r925;
	add.s32 	%r927, %r926, %r836;
	add.s32 	%r928, %r927, %r921;
	ld.const.u32 	%r929, [K256+16];
	add.s32 	%r930, %r928, %r929;
	xor.b32  	%r931, %r930, -2147483648;
	shf.l.wrap.b32 	%r932, %r916, %r916, 30;
	shf.l.wrap.b32 	%r933, %r916, %r916, 19;
	xor.b32  	%r934, %r932, %r933;
	shf.l.wrap.b32 	%r935, %r916, %r916, 10;
	xor.b32  	%r936, %r934, %r935;
	xor.b32  	%r937, %r889, %r862;
	and.b32  	%r938, %r916, %r937;
	and.b32  	%r939, %r889, %r862;
	xor.b32  	%r940, %r938, %r939;
	add.s32 	%r941, %r936, %r940;
	add.s32 	%r942, %r931, %r837;
	add.s32 	%r943, %r941, %r931;
	shf.l.wrap.b32 	%r944, %r942, %r942, 26;
	shf.l.wrap.b32 	%r945, %r942, %r942, 21;
	xor.b32  	%r946, %r944, %r945;
	shf.l.wrap.b32 	%r947, %r942, %r942, 7;
	xor.b32  	%r948, %r946, %r947;
	and.b32  	%r949, %r942, %r915;
	not.b32 	%r950, %r942;
	and.b32  	%r951, %r888, %r950;
	or.b32  	%r952, %r949, %r951;
	add.s32 	%r953, %r952, %r861;
	add.s32 	%r954, %r953, %r948;
	ld.const.u32 	%r955, [K256+20];
	add.s32 	%r956, %r954, %r955;
	shf.l.wrap.b32 	%r957, %r943, %r943, 30;
	shf.l.wrap.b32 	%r958, %r943, %r943, 19;
	xor.b32  	%r959, %r957, %r958;
	shf.l.wrap.b32 	%r960, %r943, %r943, 10;
	xor.b32  	%r961, %r959, %r960;
	xor.b32  	%r962, %r916, %r889;
	and.b32  	%r963, %r943, %r962;
	and.b32  	%r964, %r916, %r889;
	xor.b32  	%r965, %r963, %r964;
	add.s32 	%r966, %r961, %r965;
	add.s32 	%r967, %r956, %r862;
	add.s32 	%r968, %r966, %r956;
	shf.l.wrap.b32 	%r969, %r967, %r967, 26;
	shf.l.wrap.b32 	%r970, %r967, %r967, 21;
	xor.b32  	%r971, %r969, %r970;
	shf.l.wrap.b32 	%r972, %r967, %r967, 7;
	xor.b32  	%r973, %r971, %r972;
	and.b32  	%r974, %r967, %r942;
	not.b32 	%r975, %r967;
	and.b32  	%r976, %r915, %r975;
	or.b32  	%r977, %r974, %r976;
	add.s32 	%r978, %r977, %r888;
	add.s32 	%r979, %r978, %r973;
	ld.const.u32 	%r980, [K256+24];
	add.s32 	%r981, %r979, %r980;
	shf.l.wrap.b32 	%r982, %r968, %r968, 30;
	shf.l.wrap.b32 	%r983, %r968, %r968, 19;
	xor.b32  	%r984, %r982, %r983;
	shf.l.wrap.b32 	%r985, %r968, %r968, 10;
	xor.b32  	%r986, %r984, %r985;
	xor.b32  	%r987, %r943, %r916;
	and.b32  	%r988, %r968, %r987;
	and.b32  	%r989, %r943, %r916;
	xor.b32  	%r990, %r988, %r989;
	add.s32 	%r991, %r986, %r990;
	add.s32 	%r992, %r981, %r889;
	add.s32 	%r993, %r991, %r981;
	shf.l.wrap.b32 	%r994, %r992, %r992, 26;
	shf.l.wrap.b32 	%r995, %r992, %r992, 21;
	xor.b32  	%r996, %r994, %r995;
	shf.l.wrap.b32 	%r997, %r992, %r992, 7;
	xor.b32  	%r998, %r996, %r997;
	and.b32  	%r999, %r992, %r967;
	not.b32 	%r1000, %r992;
	and.b32  	%r1001, %r942, %r1000;
	or.b32  	%r1002, %r999, %r1001;
	add.s32 	%r1003, %r1002, %r915;
	add.s32 	%r1004, %r1003, %r998;
	ld.const.u32 	%r1005, [K256+28];
	add.s32 	%r1006, %r1004, %r1005;
	shf.l.wrap.b32 	%r1007, %r993, %r993, 30;
	shf.l.wrap.b32 	%r1008, %r993, %r993, 19;
	xor.b32  	%r1009, %r1007, %r1008;
	shf.l.wrap.b32 	%r1010, %r993, %r993, 10;
	xor.b32  	%r1011, %r1009, %r1010;
	xor.b32  	%r1012, %r968, %r943;
	and.b32  	%r1013, %r993, %r1012;
	and.b32  	%r1014, %r968, %r943;
	xor.b32  	%r1015, %r1013, %r1014;
	add.s32 	%r1016, %r1011, %r1015;
	add.s32 	%r1017, %r1006, %r916;
	add.s32 	%r1018, %r1016, %r1006;
	shf.l.wrap.b32 	%r1019, %r1017, %r1017, 26;
	shf.l.wrap.b32 	%r1020, %r1017, %r1017, 21;
	xor.b32  	%r1021, %r1019, %r1020;
	shf.l.wrap.b32 	%r1022, %r1017, %r1017, 7;
	xor.b32  	%r1023, %r1021, %r1022;
	and.b32  	%r1024, %r1017, %r992;
	not.b32 	%r1025, %r1017;
	and.b32  	%r1026, %r967, %r1025;
	or.b32  	%r1027, %r1024, %r1026;
	add.s32 	%r1028, %r1027, %r942;
	add.s32 	%r1029, %r1028, %r1023;
	ld.const.u32 	%r1030, [K256+32];
	add.s32 	%r1031, %r1029, %r1030;
	shf.l.wrap.b32 	%r1032, %r1018, %r1018, 30;
	shf.l.wrap.b32 	%r1033, %r1018, %r1018, 19;
	xor.b32  	%r1034, %r1032, %r1033;
	shf.l.wrap.b32 	%r1035, %r1018, %r1018, 10;
	xor.b32  	%r1036, %r1034, %r1035;
	xor.b32  	%r1037, %r993, %r968;
	and.b32  	%r1038, %r1018, %r1037;
	and.b32  	%r1039, %r993, %r968;
	xor.b32  	%r1040, %r1038, %r1039;
	add.s32 	%r1041, %r1036, %r1040;
	add.s32 	%r1042, %r1031, %r943;
	add.s32 	%r1043, %r1041, %r1031;
	shf.l.wrap.b32 	%r1044, %r1042, %r1042, 26;
	shf.l.wrap.b32 	%r1045, %r1042, %r1042, 21;
	xor.b32  	%r1046, %r1044, %r1045;
	shf.l.wrap.b32 	%r1047, %r1042, %r1042, 7;
	xor.b32  	%r1048, %r1046, %r1047;
	and.b32  	%r1049, %r1042, %r1017;
	not.b32 	%r1050, %r1042;
	and.b32  	%r1051, %r992, %r1050;
	or.b32  	%r1052, %r1049, %r1051;
	add.s32 	%r1053, %r1052, %r967;
	add.s32 	%r1054, %r1053, %r1048;
	ld.const.u32 	%r1055, [K256+36];
	add.s32 	%r1056, %r1054, %r1055;
	shf.l.wrap.b32 	%r1057, %r1043, %r1043, 30;
	shf.l.wrap.b32 	%r1058, %r1043, %r1043, 19;
	xor.b32  	%r1059, %r1057, %r1058;
	shf.l.wrap.b32 	%r1060, %r1043, %r1043, 10;
	xor.b32  	%r1061, %r1059, %r1060;
	xor.b32  	%r1062, %r1018, %r993;
	and.b32  	%r1063, %r1043, %r1062;
	and.b32  	%r1064, %r1018, %r993;
	xor.b32  	%r1065, %r1063, %r1064;
	add.s32 	%r1066, %r1061, %r1065;
	add.s32 	%r1067, %r1056, %r968;
	add.s32 	%r1068, %r1066, %r1056;
	shf.l.wrap.b32 	%r1069, %r1067, %r1067, 26;
	shf.l.wrap.b32 	%r1070, %r1067, %r1067, 21;
	xor.b32  	%r1071, %r1069, %r1070;
	shf.l.wrap.b32 	%r1072, %r1067, %r1067, 7;
	xor.b32  	%r1073, %r1071, %r1072;
	and.b32  	%r1074, %r1067, %r1042;
	not.b32 	%r1075, %r1067;
	and.b32  	%r1076, %r1017, %r1075;
	or.b32  	%r1077, %r1074, %r1076;
	add.s32 	%r1078, %r1077, %r992;
	add.s32 	%r1079, %r1078, %r1073;
	ld.const.u32 	%r1080, [K256+40];
	add.s32 	%r1081, %r1079, %r1080;
	shf.l.wrap.b32 	%r1082, %r1068, %r1068, 30;
	shf.l.wrap.b32 	%r1083, %r1068, %r1068, 19;
	xor.b32  	%r1084, %r1082, %r1083;
	shf.l.wrap.b32 	%r1085, %r1068, %r1068, 10;
	xor.b32  	%r1086, %r1084, %r1085;
	xor.b32  	%r1087, %r1043, %r1018;
	and.b32  	%r1088, %r1068, %r1087;
	and.b32  	%r1089, %r1043, %r1018;
	xor.b32  	%r1090, %r1088, %r1089;
	add.s32 	%r1091, %r1086, %r1090;
	add.s32 	%r1092, %r1081, %r993;
	add.s32 	%r1093, %r1091, %r1081;
	shf.l.wrap.b32 	%r1094, %r1092, %r1092, 26;
	shf.l.wrap.b32 	%r1095, %r1092, %r1092, 21;
	xor.b32  	%r1096, %r1094, %r1095;
	shf.l.wrap.b32 	%r1097, %r1092, %r1092, 7;
	xor.b32  	%r1098, %r1096, %r1097;
	and.b32  	%r1099, %r1092, %r1067;
	not.b32 	%r1100, %r1092;
	and.b32  	%r1101, %r1042, %r1100;
	or.b32  	%r1102, %r1099, %r1101;
	add.s32 	%r1103, %r1102, %r1017;
	add.s32 	%r1104, %r1103, %r1098;
	ld.const.u32 	%r1105, [K256+44];
	add.s32 	%r1106, %r1104, %r1105;
	shf.l.wrap.b32 	%r1107, %r1093, %r1093, 30;
	shf.l.wrap.b32 	%r1108, %r1093, %r1093, 19;
	xor.b32  	%r1109, %r1107, %r1108;
	shf.l.wrap.b32 	%r1110, %r1093, %r1093, 10;
	xor.b32  	%r1111, %r1109, %r1110;
	xor.b32  	%r1112, %r1068, %r1043;
	and.b32  	%r1113, %r1093, %r1112;
	and.b32  	%r1114, %r1068, %r1043;
	xor.b32  	%r1115, %r1113, %r1114;
	add.s32 	%r1116, %r1111, %r1115;
	add.s32 	%r1117, %r1106, %r1018;
	add.s32 	%r1118, %r1116, %r1106;
	shf.l.wrap.b32 	%r1119, %r1117, %r1117, 26;
	shf.l.wrap.b32 	%r1120, %r1117, %r1117, 21;
	xor.b32  	%r1121, %r1119, %r1120;
	shf.l.wrap.b32 	%r1122, %r1117, %r1117, 7;
	xor.b32  	%r1123, %r1121, %r1122;
	and.b32  	%r1124, %r1117, %r1092;
	not.b32 	%r1125, %r1117;
	and.b32  	%r1126, %r1067, %r1125;
	or.b32  	%r1127, %r1124, %r1126;
	add.s32 	%r1128, %r1127, %r1042;
	add.s32 	%r1129, %r1128, %r1123;
	ld.const.u32 	%r1130, [K256+48];
	add.s32 	%r1131, %r1129, %r1130;
	shf.l.wrap.b32 	%r1132, %r1118, %r1118, 30;
	shf.l.wrap.b32 	%r1133, %r1118, %r1118, 19;
	xor.b32  	%r1134, %r1132, %r1133;
	shf.l.wrap.b32 	%r1135, %r1118, %r1118, 10;
	xor.b32  	%r1136, %r1134, %r1135;
	xor.b32  	%r1137, %r1093, %r1068;
	and.b32  	%r1138, %r1118, %r1137;
	and.b32  	%r1139, %r1093, %r1068;
	xor.b32  	%r1140, %r1138, %r1139;
	add.s32 	%r1141, %r1136, %r1140;
	add.s32 	%r1142, %r1131, %r1043;
	add.s32 	%r1143, %r1141, %r1131;
	shf.l.wrap.b32 	%r1144, %r1142, %r1142, 26;
	shf.l.wrap.b32 	%r1145, %r1142, %r1142, 21;
	xor.b32  	%r1146, %r1144, %r1145;
	shf.l.wrap.b32 	%r1147, %r1142, %r1142, 7;
	xor.b32  	%r1148, %r1146, %r1147;
	and.b32  	%r1149, %r1142, %r1117;
	not.b32 	%r1150, %r1142;
	and.b32  	%r1151, %r1092, %r1150;
	or.b32  	%r1152, %r1149, %r1151;
	add.s32 	%r1153, %r1152, %r1067;
	add.s32 	%r1154, %r1153, %r1148;
	ld.const.u32 	%r1155, [K256+52];
	add.s32 	%r1156, %r1154, %r1155;
	shf.l.wrap.b32 	%r1157, %r1143, %r1143, 30;
	shf.l.wrap.b32 	%r1158, %r1143, %r1143, 19;
	xor.b32  	%r1159, %r1157, %r1158;
	shf.l.wrap.b32 	%r1160, %r1143, %r1143, 10;
	xor.b32  	%r1161, %r1159, %r1160;
	xor.b32  	%r1162, %r1118, %r1093;
	and.b32  	%r1163, %r1143, %r1162;
	and.b32  	%r1164, %r1118, %r1093;
	xor.b32  	%r1165, %r1163, %r1164;
	add.s32 	%r1166, %r1161, %r1165;
	add.s32 	%r1167, %r1156, %r1068;
	add.s32 	%r1168, %r1166, %r1156;
	shf.l.wrap.b32 	%r1169, %r1167, %r1167, 26;
	shf.l.wrap.b32 	%r1170, %r1167, %r1167, 21;
	xor.b32  	%r1171, %r1169, %r1170;
	shf.l.wrap.b32 	%r1172, %r1167, %r1167, 7;
	xor.b32  	%r1173, %r1171, %r1172;
	and.b32  	%r1174, %r1167, %r1142;
	not.b32 	%r1175, %r1167;
	and.b32  	%r1176, %r1117, %r1175;
	or.b32  	%r1177, %r1174, %r1176;
	add.s32 	%r1178, %r1177, %r1092;
	add.s32 	%r1179, %r1178, %r1173;
	ld.const.u32 	%r1180, [K256+56];
	add.s32 	%r1181, %r1179, %r1180;
	shf.l.wrap.b32 	%r1182, %r1168, %r1168, 30;
	shf.l.wrap.b32 	%r1183, %r1168, %r1168, 19;
	xor.b32  	%r1184, %r1182, %r1183;
	shf.l.wrap.b32 	%r1185, %r1168, %r1168, 10;
	xor.b32  	%r1186, %r1184, %r1185;
	xor.b32  	%r1187, %r1143, %r1118;
	and.b32  	%r1188, %r1168, %r1187;
	and.b32  	%r1189, %r1143, %r1118;
	xor.b32  	%r1190, %r1188, %r1189;
	add.s32 	%r1191, %r1186, %r1190;
	add.s32 	%r1192, %r1181, %r1093;
	add.s32 	%r1193, %r1191, %r1181;
	shf.l.wrap.b32 	%r1194, %r1192, %r1192, 26;
	shf.l.wrap.b32 	%r1195, %r1192, %r1192, 21;
	xor.b32  	%r1196, %r1194, %r1195;
	shf.l.wrap.b32 	%r1197, %r1192, %r1192, 7;
	xor.b32  	%r1198, %r1196, %r1197;
	and.b32  	%r1199, %r1192, %r1167;
	not.b32 	%r1200, %r1192;
	and.b32  	%r1201, %r1142, %r1200;
	or.b32  	%r1202, %r1199, %r1201;
	add.s32 	%r1203, %r1202, %r1117;
	add.s32 	%r1204, %r1203, %r1198;
	ld.const.u32 	%r1205, [K256+60];
	add.s32 	%r1206, %r1204, %r1205;
	add.s32 	%r1207, %r1206, 128;
	shf.l.wrap.b32 	%r1208, %r1193, %r1193, 30;
	shf.l.wrap.b32 	%r1209, %r1193, %r1193, 19;
	xor.b32  	%r1210, %r1208, %r1209;
	shf.l.wrap.b32 	%r1211, %r1193, %r1193, 10;
	xor.b32  	%r1212, %r1210, %r1211;
	xor.b32  	%r1213, %r1168, %r1143;
	and.b32  	%r1214, %r1193, %r1213;
	and.b32  	%r1215, %r1168, %r1143;
	xor.b32  	%r1216, %r1214, %r1215;
	add.s32 	%r1217, %r1212, %r1216;
	add.s32 	%r1218, %r1207, %r1118;
	add.s32 	%r1219, %r1217, %r1207;
	shf.l.wrap.b32 	%r1220, %r1218, %r1218, 26;
	shf.l.wrap.b32 	%r1221, %r1218, %r1218, 21;
	xor.b32  	%r1222, %r1220, %r1221;
	shf.l.wrap.b32 	%r1223, %r1218, %r1218, 7;
	xor.b32  	%r1224, %r1222, %r1223;
	and.b32  	%r1225, %r1218, %r1192;
	not.b32 	%r1226, %r1218;
	and.b32  	%r1227, %r1167, %r1226;
	or.b32  	%r1228, %r1225, %r1227;
	add.s32 	%r1229, %r1228, %r1142;
	add.s32 	%r1230, %r1229, %r1224;
	ld.const.u32 	%r1231, [K256+64];
	add.s32 	%r1232, %r1230, %r1231;
	add.s32 	%r1233, %r1232, %r296;
	shf.l.wrap.b32 	%r1234, %r1219, %r1219, 30;
	shf.l.wrap.b32 	%r1235, %r1219, %r1219, 19;
	xor.b32  	%r1236, %r1234, %r1235;
	shf.l.wrap.b32 	%r1237, %r1219, %r1219, 10;
	xor.b32  	%r1238, %r1236, %r1237;
	xor.b32  	%r1239, %r1193, %r1168;
	and.b32  	%r1240, %r1219, %r1239;
	and.b32  	%r1241, %r1193, %r1168;
	xor.b32  	%r1242, %r1240, %r1241;
	add.s32 	%r1243, %r1238, %r1242;
	add.s32 	%r1244, %r1233, %r1143;
	add.s32 	%r1245, %r1243, %r1233;
	shf.l.wrap.b32 	%r1246, %r1244, %r1244, 26;
	shf.l.wrap.b32 	%r1247, %r1244, %r1244, 21;
	xor.b32  	%r1248, %r1246, %r1247;
	shf.l.wrap.b32 	%r1249, %r1244, %r1244, 7;
	xor.b32  	%r1250, %r1248, %r1249;
	and.b32  	%r1251, %r1244, %r1218;
	not.b32 	%r1252, %r1244;
	and.b32  	%r1253, %r1192, %r1252;
	or.b32  	%r1254, %r1251, %r1253;
	add.s32 	%r1255, %r1254, %r1167;
	add.s32 	%r1256, %r1255, %r1250;
	ld.const.u32 	%r1257, [K256+68];
	add.s32 	%r1258, %r1256, %r1257;
	add.s32 	%r1259, %r1258, %r307;
	shf.l.wrap.b32 	%r1260, %r1245, %r1245, 30;
	shf.l.wrap.b32 	%r1261, %r1245, %r1245, 19;
	xor.b32  	%r1262, %r1260, %r1261;
	shf.l.wrap.b32 	%r1263, %r1245, %r1245, 10;
	xor.b32  	%r1264, %r1262, %r1263;
	xor.b32  	%r1265, %r1219, %r1193;
	and.b32  	%r1266, %r1245, %r1265;
	and.b32  	%r1267, %r1219, %r1193;
	xor.b32  	%r1268, %r1266, %r1267;
	add.s32 	%r1269, %r1264, %r1268;
	add.s32 	%r1270, %r1259, %r1168;
	add.s32 	%r1271, %r1269, %r1259;
	shf.l.wrap.b32 	%r1272, %r1270, %r1270, 26;
	shf.l.wrap.b32 	%r1273, %r1270, %r1270, 21;
	xor.b32  	%r1274, %r1272, %r1273;
	shf.l.wrap.b32 	%r1275, %r1270, %r1270, 7;
	xor.b32  	%r1276, %r1274, %r1275;
	and.b32  	%r1277, %r1270, %r1244;
	not.b32 	%r1278, %r1270;
	and.b32  	%r1279, %r1218, %r1278;
	or.b32  	%r1280, %r1277, %r1279;
	add.s32 	%r1281, %r1280, %r1192;
	add.s32 	%r1282, %r1281, %r1276;
	ld.const.u32 	%r1283, [K256+72];
	add.s32 	%r1284, %r1282, %r1283;
	add.s32 	%r1285, %r1284, %r323;
	shf.l.wrap.b32 	%r1286, %r1271, %r1271, 30;
	shf.l.wrap.b32 	%r1287, %r1271, %r1271, 19;
	xor.b32  	%r1288, %r1286, %r1287;
	shf.l.wrap.b32 	%r1289, %r1271, %r1271, 10;
	xor.b32  	%r1290, %r1288, %r1289;
	xor.b32  	%r1291, %r1245, %r1219;
	and.b32  	%r1292, %r1271, %r1291;
	and.b32  	%r1293, %r1245, %r1219;
	xor.b32  	%r1294, %r1292, %r1293;
	add.s32 	%r1295, %r1290, %r1294;
	add.s32 	%r1296, %r1285, %r1193;
	add.s32 	%r1297, %r1295, %r1285;
	shf.l.wrap.b32 	%r1298, %r1296, %r1296, 26;
	shf.l.wrap.b32 	%r1299, %r1296, %r1296, 21;
	xor.b32  	%r1300, %r1298, %r1299;
	shf.l.wrap.b32 	%r1301, %r1296, %r1296, 7;
	xor.b32  	%r1302, %r1300, %r1301;
	and.b32  	%r1303, %r1296, %r1270;
	not.b32 	%r1304, %r1296;
	and.b32  	%r1305, %r1244, %r1304;
	or.b32  	%r1306, %r1303, %r1305;
	add.s32 	%r1307, %r1306, %r1218;
	add.s32 	%r1308, %r1307, %r1302;
	ld.const.u32 	%r1309, [K256+76];
	add.s32 	%r1310, %r1308, %r1309;
	add.s32 	%r1311, %r1310, %r330;
	shf.l.wrap.b32 	%r1312, %r1297, %r1297, 30;
	shf.l.wrap.b32 	%r1313, %r1297, %r1297, 19;
	xor.b32  	%r1314, %r1312, %r1313;
	shf.l.wrap.b32 	%r1315, %r1297, %r1297, 10;
	xor.b32  	%r1316, %r1314, %r1315;
	xor.b32  	%r1317, %r1271, %r1245;
	and.b32  	%r1318, %r1297, %r1317;
	and.b32  	%r1319, %r1271, %r1245;
	xor.b32  	%r1320, %r1318, %r1319;
	add.s32 	%r1321, %r1316, %r1320;
	add.s32 	%r1322, %r1311, %r1219;
	add.s32 	%r1323, %r1321, %r1311;
	shf.l.wrap.b32 	%r1324, %r1322, %r1322, 26;
	shf.l.wrap.b32 	%r1325, %r1322, %r1322, 21;
	xor.b32  	%r1326, %r1324, %r1325;
	shf.l.wrap.b32 	%r1327, %r1322, %r1322, 7;
	xor.b32  	%r1328, %r1326, %r1327;
	and.b32  	%r1329, %r1322, %r1296;
	not.b32 	%r1330, %r1322;
	and.b32  	%r1331, %r1270, %r1330;
	or.b32  	%r1332, %r1329, %r1331;
	add.s32 	%r1333, %r1332, %r1244;
	add.s32 	%r1334, %r1333, %r1328;
	ld.const.u32 	%r1335, [K256+80];
	add.s32 	%r1336, %r1334, %r1335;
	add.s32 	%r1337, %r1336, %r336;
	shf.l.wrap.b32 	%r1338, %r1323, %r1323, 30;
	shf.l.wrap.b32 	%r1339, %r1323, %r1323, 19;
	xor.b32  	%r1340, %r1338, %r1339;
	shf.l.wrap.b32 	%r1341, %r1323, %r1323, 10;
	xor.b32  	%r1342, %r1340, %r1341;
	xor.b32  	%r1343, %r1297, %r1271;
	and.b32  	%r1344, %r1323, %r1343;
	and.b32  	%r1345, %r1297, %r1271;
	xor.b32  	%r1346, %r1344, %r1345;
	add.s32 	%r1347, %r1342, %r1346;
	add.s32 	%r1348, %r1337, %r1245;
	add.s32 	%r1349, %r1347, %r1337;
	shf.l.wrap.b32 	%r1350, %r1348, %r1348, 26;
	shf.l.wrap.b32 	%r1351, %r1348, %r1348, 21;
	xor.b32  	%r1352, %r1350, %r1351;
	shf.l.wrap.b32 	%r1353, %r1348, %r1348, 7;
	xor.b32  	%r1354, %r1352, %r1353;
	and.b32  	%r1355, %r1348, %r1322;
	not.b32 	%r1356, %r1348;
	and.b32  	%r1357, %r1296, %r1356;
	or.b32  	%r1358, %r1355, %r1357;
	add.s32 	%r1359, %r1358, %r1270;
	add.s32 	%r1360, %r1359, %r1354;
	ld.const.u32 	%r1361, [K256+84];
	add.s32 	%r1362, %r1360, %r1361;
	add.s32 	%r1363, %r1362, %r341;
	shf.l.wrap.b32 	%r1364, %r1349, %r1349, 30;
	shf.l.wrap.b32 	%r1365, %r1349, %r1349, 19;
	xor.b32  	%r1366, %r1364, %r1365;
	shf.l.wrap.b32 	%r1367, %r1349, %r1349, 10;
	xor.b32  	%r1368, %r1366, %r1367;
	xor.b32  	%r1369, %r1323, %r1297;
	and.b32  	%r1370, %r1349, %r1369;
	and.b32  	%r1371, %r1323, %r1297;
	xor.b32  	%r1372, %r1370, %r1371;
	add.s32 	%r1373, %r1368, %r1372;
	add.s32 	%r1374, %r1363, %r1271;
	add.s32 	%r1375, %r1373, %r1363;
	shf.l.wrap.b32 	%r1376, %r1374, %r1374, 26;
	shf.l.wrap.b32 	%r1377, %r1374, %r1374, 21;
	xor.b32  	%r1378, %r1376, %r1377;
	shf.l.wrap.b32 	%r1379, %r1374, %r1374, 7;
	xor.b32  	%r1380, %r1378, %r1379;
	and.b32  	%r1381, %r1374, %r1348;
	not.b32 	%r1382, %r1374;
	and.b32  	%r1383, %r1322, %r1382;
	or.b32  	%r1384, %r1381, %r1383;
	add.s32 	%r1385, %r1384, %r1296;
	add.s32 	%r1386, %r1385, %r1380;
	ld.const.u32 	%r1387, [K256+88];
	add.s32 	%r1388, %r1386, %r1387;
	add.s32 	%r1389, %r1388, %r351;
	shf.l.wrap.b32 	%r1390, %r1375, %r1375, 30;
	shf.l.wrap.b32 	%r1391, %r1375, %r1375, 19;
	xor.b32  	%r1392, %r1390, %r1391;
	shf.l.wrap.b32 	%r1393, %r1375, %r1375, 10;
	xor.b32  	%r1394, %r1392, %r1393;
	xor.b32  	%r1395, %r1349, %r1323;
	and.b32  	%r1396, %r1375, %r1395;
	and.b32  	%r1397, %r1349, %r1323;
	xor.b32  	%r1398, %r1396, %r1397;
	add.s32 	%r1399, %r1394, %r1398;
	add.s32 	%r1400, %r1389, %r1297;
	add.s32 	%r1401, %r1399, %r1389;
	shf.l.wrap.b32 	%r1402, %r1400, %r1400, 26;
	shf.l.wrap.b32 	%r1403, %r1400, %r1400, 21;
	xor.b32  	%r1404, %r1402, %r1403;
	shf.l.wrap.b32 	%r1405, %r1400, %r1400, 7;
	xor.b32  	%r1406, %r1404, %r1405;
	and.b32  	%r1407, %r1400, %r1374;
	not.b32 	%r1408, %r1400;
	and.b32  	%r1409, %r1348, %r1408;
	or.b32  	%r1410, %r1407, %r1409;
	add.s32 	%r1411, %r1410, %r1322;
	add.s32 	%r1412, %r1411, %r1406;
	ld.const.u32 	%r1413, [K256+92];
	add.s32 	%r1414, %r1412, %r1413;
	add.s32 	%r1415, %r1414, %r357;
	shf.l.wrap.b32 	%r1416, %r1401, %r1401, 30;
	shf.l.wrap.b32 	%r1417, %r1401, %r1401, 19;
	xor.b32  	%r1418, %r1416, %r1417;
	shf.l.wrap.b32 	%r1419, %r1401, %r1401, 10;
	xor.b32  	%r1420, %r1418, %r1419;
	xor.b32  	%r1421, %r1375, %r1349;
	and.b32  	%r1422, %r1401, %r1421;
	and.b32  	%r1423, %r1375, %r1349;
	xor.b32  	%r1424, %r1422, %r1423;
	add.s32 	%r1425, %r1420, %r1424;
	add.s32 	%r1426, %r1415, %r1323;
	add.s32 	%r1427, %r1425, %r1415;
	shf.l.wrap.b32 	%r1428, %r1426, %r1426, 26;
	shf.l.wrap.b32 	%r1429, %r1426, %r1426, 21;
	xor.b32  	%r1430, %r1428, %r1429;
	shf.l.wrap.b32 	%r1431, %r1426, %r1426, 7;
	xor.b32  	%r1432, %r1430, %r1431;
	and.b32  	%r1433, %r1426, %r1400;
	not.b32 	%r1434, %r1426;
	and.b32  	%r1435, %r1374, %r1434;
	or.b32  	%r1436, %r1433, %r1435;
	add.s32 	%r1437, %r1436, %r1348;
	add.s32 	%r1438, %r1437, %r1432;
	ld.const.u32 	%r1439, [K256+96];
	add.s32 	%r1440, %r1438, %r1439;
	add.s32 	%r1441, %r1440, %r363;
	shf.l.wrap.b32 	%r1442, %r1427, %r1427, 30;
	shf.l.wrap.b32 	%r1443, %r1427, %r1427, 19;
	xor.b32  	%r1444, %r1442, %r1443;
	shf.l.wrap.b32 	%r1445, %r1427, %r1427, 10;
	xor.b32  	%r1446, %r1444, %r1445;
	xor.b32  	%r1447, %r1401, %r1375;
	and.b32  	%r1448, %r1427, %r1447;
	and.b32  	%r1449, %r1401, %r1375;
	xor.b32  	%r1450, %r1448, %r1449;
	add.s32 	%r1451, %r1446, %r1450;
	add.s32 	%r1452, %r1441, %r1349;
	add.s32 	%r1453, %r1451, %r1441;
	shf.l.wrap.b32 	%r1454, %r1452, %r1452, 26;
	shf.l.wrap.b32 	%r1455, %r1452, %r1452, 21;
	xor.b32  	%r1456, %r1454, %r1455;
	shf.l.wrap.b32 	%r1457, %r1452, %r1452, 7;
	xor.b32  	%r1458, %r1456, %r1457;
	and.b32  	%r1459, %r1452, %r1426;
	not.b32 	%r1460, %r1452;
	and.b32  	%r1461, %r1400, %r1460;
	or.b32  	%r1462, %r1459, %r1461;
	add.s32 	%r1463, %r1462, %r1374;
	add.s32 	%r1464, %r1463, %r1458;
	ld.const.u32 	%r1465, [K256+100];
	add.s32 	%r1466, %r1464, %r1465;
	add.s32 	%r1467, %r1466, %r369;
	shf.l.wrap.b32 	%r1468, %r1453, %r1453, 30;
	shf.l.wrap.b32 	%r1469, %r1453, %r1453, 19;
	xor.b32  	%r1470, %r1468, %r1469;
	shf.l.wrap.b32 	%r1471, %r1453, %r1453, 10;
	xor.b32  	%r1472, %r1470, %r1471;
	xor.b32  	%r1473, %r1427, %r1401;
	and.b32  	%r1474, %r1453, %r1473;
	and.b32  	%r1475, %r1427, %r1401;
	xor.b32  	%r1476, %r1474, %r1475;
	add.s32 	%r1477, %r1472, %r1476;
	add.s32 	%r1478, %r1467, %r1375;
	add.s32 	%r1479, %r1477, %r1467;
	shf.l.wrap.b32 	%r1480, %r1478, %r1478, 26;
	shf.l.wrap.b32 	%r1481, %r1478, %r1478, 21;
	xor.b32  	%r1482, %r1480, %r1481;
	shf.l.wrap.b32 	%r1483, %r1478, %r1478, 7;
	xor.b32  	%r1484, %r1482, %r1483;
	and.b32  	%r1485, %r1478, %r1452;
	not.b32 	%r1486, %r1478;
	and.b32  	%r1487, %r1426, %r1486;
	or.b32  	%r1488, %r1485, %r1487;
	add.s32 	%r1489, %r1488, %r1400;
	add.s32 	%r1490, %r1489, %r1484;
	ld.const.u32 	%r1491, [K256+104];
	add.s32 	%r1492, %r1490, %r1491;
	add.s32 	%r1493, %r1492, %r375;
	shf.l.wrap.b32 	%r1494, %r1479, %r1479, 30;
	shf.l.wrap.b32 	%r1495, %r1479, %r1479, 19;
	xor.b32  	%r1496, %r1494, %r1495;
	shf.l.wrap.b32 	%r1497, %r1479, %r1479, 10;
	xor.b32  	%r1498, %r1496, %r1497;
	xor.b32  	%r1499, %r1453, %r1427;
	and.b32  	%r1500, %r1479, %r1499;
	and.b32  	%r1501, %r1453, %r1427;
	xor.b32  	%r1502, %r1500, %r1501;
	add.s32 	%r1503, %r1498, %r1502;
	add.s32 	%r1504, %r1493, %r1401;
	add.s32 	%r1505, %r1503, %r1493;
	shf.l.wrap.b32 	%r1506, %r1504, %r1504, 26;
	shf.l.wrap.b32 	%r1507, %r1504, %r1504, 21;
	xor.b32  	%r1508, %r1506, %r1507;
	shf.l.wrap.b32 	%r1509, %r1504, %r1504, 7;
	xor.b32  	%r1510, %r1508, %r1509;
	and.b32  	%r1511, %r1504, %r1478;
	not.b32 	%r1512, %r1504;
	and.b32  	%r1513, %r1452, %r1512;
	or.b32  	%r1514, %r1511, %r1513;
	add.s32 	%r1515, %r1514, %r1426;
	add.s32 	%r1516, %r1515, %r1510;
	ld.const.u32 	%r1517, [K256+108];
	add.s32 	%r1518, %r1516, %r1517;
	add.s32 	%r1519, %r1518, %r381;
	shf.l.wrap.b32 	%r1520, %r1505, %r1505, 30;
	shf.l.wrap.b32 	%r1521, %r1505, %r1505, 19;
	xor.b32  	%r1522, %r1520, %r1521;
	shf.l.wrap.b32 	%r1523, %r1505, %r1505, 10;
	xor.b32  	%r1524, %r1522, %r1523;
	xor.b32  	%r1525, %r1479, %r1453;
	and.b32  	%r1526, %r1505, %r1525;
	and.b32  	%r1527, %r1479, %r1453;
	xor.b32  	%r1528, %r1526, %r1527;
	add.s32 	%r1529, %r1524, %r1528;
	add.s32 	%r1530, %r1519, %r1427;
	add.s32 	%r1531, %r1529, %r1519;
	shf.l.wrap.b32 	%r1532, %r1530, %r1530, 26;
	shf.l.wrap.b32 	%r1533, %r1530, %r1530, 21;
	xor.b32  	%r1534, %r1532, %r1533;
	shf.l.wrap.b32 	%r1535, %r1530, %r1530, 7;
	xor.b32  	%r1536, %r1534, %r1535;
	and.b32  	%r1537, %r1530, %r1504;
	not.b32 	%r1538, %r1530;
	and.b32  	%r1539, %r1478, %r1538;
	or.b32  	%r1540, %r1537, %r1539;
	add.s32 	%r1541, %r1540, %r1452;
	add.s32 	%r1542, %r1541, %r1536;
	ld.const.u32 	%r1543, [K256+112];
	add.s32 	%r1544, %r1542, %r1543;
	add.s32 	%r1545, %r1544, %r387;
	shf.l.wrap.b32 	%r1546, %r1531, %r1531, 30;
	shf.l.wrap.b32 	%r1547, %r1531, %r1531, 19;
	xor.b32  	%r1548, %r1546, %r1547;
	shf.l.wrap.b32 	%r1549, %r1531, %r1531, 10;
	xor.b32  	%r1550, %r1548, %r1549;
	xor.b32  	%r1551, %r1505, %r1479;
	and.b32  	%r1552, %r1531, %r1551;
	and.b32  	%r1553, %r1505, %r1479;
	xor.b32  	%r1554, %r1552, %r1553;
	add.s32 	%r1555, %r1550, %r1554;
	add.s32 	%r1556, %r1545, %r1453;
	add.s32 	%r1557, %r1555, %r1545;
	shf.l.wrap.b32 	%r1558, %r1556, %r1556, 26;
	shf.l.wrap.b32 	%r1559, %r1556, %r1556, 21;
	xor.b32  	%r1560, %r1558, %r1559;
	shf.l.wrap.b32 	%r1561, %r1556, %r1556, 7;
	xor.b32  	%r1562, %r1560, %r1561;
	and.b32  	%r1563, %r1556, %r1530;
	not.b32 	%r1564, %r1556;
	and.b32  	%r1565, %r1504, %r1564;
	or.b32  	%r1566, %r1563, %r1565;
	add.s32 	%r1567, %r1566, %r1478;
	add.s32 	%r1568, %r1567, %r1562;
	ld.const.u32 	%r1569, [K256+116];
	add.s32 	%r1570, %r1568, %r1569;
	add.s32 	%r1571, %r1570, %r393;
	shf.l.wrap.b32 	%r1572, %r1557, %r1557, 30;
	shf.l.wrap.b32 	%r1573, %r1557, %r1557, 19;
	xor.b32  	%r1574, %r1572, %r1573;
	shf.l.wrap.b32 	%r1575, %r1557, %r1557, 10;
	xor.b32  	%r1576, %r1574, %r1575;
	xor.b32  	%r1577, %r1531, %r1505;
	and.b32  	%r1578, %r1557, %r1577;
	and.b32  	%r1579, %r1531, %r1505;
	xor.b32  	%r1580, %r1578, %r1579;
	add.s32 	%r1581, %r1576, %r1580;
	add.s32 	%r1582, %r1571, %r1479;
	add.s32 	%r1583, %r1581, %r1571;
	shf.l.wrap.b32 	%r1584, %r1582, %r1582, 26;
	shf.l.wrap.b32 	%r1585, %r1582, %r1582, 21;
	xor.b32  	%r1586, %r1584, %r1585;
	shf.l.wrap.b32 	%r1587, %r1582, %r1582, 7;
	xor.b32  	%r1588, %r1586, %r1587;
	and.b32  	%r1589, %r1582, %r1556;
	not.b32 	%r1590, %r1582;
	and.b32  	%r1591, %r1530, %r1590;
	or.b32  	%r1592, %r1589, %r1591;
	add.s32 	%r1593, %r1592, %r1504;
	add.s32 	%r1594, %r1593, %r1588;
	ld.const.u32 	%r1595, [K256+120];
	add.s32 	%r1596, %r1594, %r1595;
	add.s32 	%r1597, %r1596, %r400;
	shf.l.wrap.b32 	%r1598, %r1583, %r1583, 30;
	shf.l.wrap.b32 	%r1599, %r1583, %r1583, 19;
	xor.b32  	%r1600, %r1598, %r1599;
	shf.l.wrap.b32 	%r1601, %r1583, %r1583, 10;
	xor.b32  	%r1602, %r1600, %r1601;
	xor.b32  	%r1603, %r1557, %r1531;
	and.b32  	%r1604, %r1583, %r1603;
	and.b32  	%r1605, %r1557, %r1531;
	xor.b32  	%r1606, %r1604, %r1605;
	add.s32 	%r1607, %r1602, %r1606;
	add.s32 	%r1608, %r1597, %r1505;
	add.s32 	%r1609, %r1607, %r1597;
	shf.l.wrap.b32 	%r1610, %r1608, %r1608, 26;
	shf.l.wrap.b32 	%r1611, %r1608, %r1608, 21;
	xor.b32  	%r1612, %r1610, %r1611;
	shf.l.wrap.b32 	%r1613, %r1608, %r1608, 7;
	xor.b32  	%r1614, %r1612, %r1613;
	and.b32  	%r1615, %r1608, %r1582;
	not.b32 	%r1616, %r1608;
	and.b32  	%r1617, %r1556, %r1616;
	or.b32  	%r1618, %r1615, %r1617;
	add.s32 	%r1619, %r1618, %r1530;
	add.s32 	%r1620, %r1619, %r1614;
	ld.const.u32 	%r1621, [K256+124];
	add.s32 	%r1622, %r1620, %r1621;
	add.s32 	%r1623, %r1622, %r413;
	shf.l.wrap.b32 	%r1624, %r1609, %r1609, 30;
	shf.l.wrap.b32 	%r1625, %r1609, %r1609, 19;
	xor.b32  	%r1626, %r1624, %r1625;
	shf.l.wrap.b32 	%r1627, %r1609, %r1609, 10;
	xor.b32  	%r1628, %r1626, %r1627;
	xor.b32  	%r1629, %r1583, %r1557;
	and.b32  	%r1630, %r1609, %r1629;
	and.b32  	%r1631, %r1583, %r1557;
	xor.b32  	%r1632, %r1630, %r1631;
	add.s32 	%r1633, %r1628, %r1632;
	add.s32 	%r1634, %r1623, %r1531;
	add.s32 	%r1635, %r1633, %r1623;
	shf.l.wrap.b32 	%r1636, %r1634, %r1634, 26;
	shf.l.wrap.b32 	%r1637, %r1634, %r1634, 21;
	xor.b32  	%r1638, %r1636, %r1637;
	shf.l.wrap.b32 	%r1639, %r1634, %r1634, 7;
	xor.b32  	%r1640, %r1638, %r1639;
	and.b32  	%r1641, %r1634, %r1608;
	not.b32 	%r1642, %r1634;
	and.b32  	%r1643, %r1582, %r1642;
	or.b32  	%r1644, %r1641, %r1643;
	add.s32 	%r1645, %r1644, %r1556;
	add.s32 	%r1646, %r1645, %r1640;
	ld.const.u32 	%r1647, [K256+128];
	add.s32 	%r1648, %r1646, %r1647;
	add.s32 	%r1649, %r1648, %r426;
	shf.l.wrap.b32 	%r1650, %r1635, %r1635, 30;
	shf.l.wrap.b32 	%r1651, %r1635, %r1635, 19;
	xor.b32  	%r1652, %r1650, %r1651;
	shf.l.wrap.b32 	%r1653, %r1635, %r1635, 10;
	xor.b32  	%r1654, %r1652, %r1653;
	xor.b32  	%r1655, %r1609, %r1583;
	and.b32  	%r1656, %r1635, %r1655;
	and.b32  	%r1657, %r1609, %r1583;
	xor.b32  	%r1658, %r1656, %r1657;
	add.s32 	%r1659, %r1654, %r1658;
	add.s32 	%r1660, %r1649, %r1557;
	add.s32 	%r1661, %r1659, %r1649;
	shf.l.wrap.b32 	%r1662, %r1660, %r1660, 26;
	shf.l.wrap.b32 	%r1663, %r1660, %r1660, 21;
	xor.b32  	%r1664, %r1662, %r1663;
	shf.l.wrap.b32 	%r1665, %r1660, %r1660, 7;
	xor.b32  	%r1666, %r1664, %r1665;
	and.b32  	%r1667, %r1660, %r1634;
	not.b32 	%r1668, %r1660;
	and.b32  	%r1669, %r1608, %r1668;
	or.b32  	%r1670, %r1667, %r1669;
	add.s32 	%r1671, %r1670, %r1582;
	add.s32 	%r1672, %r1671, %r1666;
	ld.const.u32 	%r1673, [K256+132];
	add.s32 	%r1674, %r1672, %r1673;
	add.s32 	%r1675, %r1674, %r439;
	shf.l.wrap.b32 	%r1676, %r1661, %r1661, 30;
	shf.l.wrap.b32 	%r1677, %r1661, %r1661, 19;
	xor.b32  	%r1678, %r1676, %r1677;
	shf.l.wrap.b32 	%r1679, %r1661, %r1661, 10;
	xor.b32  	%r1680, %r1678, %r1679;
	xor.b32  	%r1681, %r1635, %r1609;
	and.b32  	%r1682, %r1661, %r1681;
	and.b32  	%r1683, %r1635, %r1609;
	xor.b32  	%r1684, %r1682, %r1683;
	add.s32 	%r1685, %r1680, %r1684;
	add.s32 	%r1686, %r1675, %r1583;
	add.s32 	%r1687, %r1685, %r1675;
	shf.l.wrap.b32 	%r1688, %r1686, %r1686, 26;
	shf.l.wrap.b32 	%r1689, %r1686, %r1686, 21;
	xor.b32  	%r1690, %r1688, %r1689;
	shf.l.wrap.b32 	%r1691, %r1686, %r1686, 7;
	xor.b32  	%r1692, %r1690, %r1691;
	and.b32  	%r1693, %r1686, %r1660;
	not.b32 	%r1694, %r1686;
	and.b32  	%r1695, %r1634, %r1694;
	or.b32  	%r1696, %r1693, %r1695;
	add.s32 	%r1697, %r1696, %r1608;
	add.s32 	%r1698, %r1697, %r1692;
	ld.const.u32 	%r1699, [K256+136];
	add.s32 	%r1700, %r1698, %r1699;
	add.s32 	%r1701, %r1700, %r452;
	shf.l.wrap.b32 	%r1702, %r1687, %r1687, 30;
	shf.l.wrap.b32 	%r1703, %r1687, %r1687, 19;
	xor.b32  	%r1704, %r1702, %r1703;
	shf.l.wrap.b32 	%r1705, %r1687, %r1687, 10;
	xor.b32  	%r1706, %r1704, %r1705;
	xor.b32  	%r1707, %r1661, %r1635;
	and.b32  	%r1708, %r1687, %r1707;
	and.b32  	%r1709, %r1661, %r1635;
	xor.b32  	%r1710, %r1708, %r1709;
	add.s32 	%r1711, %r1706, %r1710;
	add.s32 	%r1712, %r1701, %r1609;
	add.s32 	%r1713, %r1711, %r1701;
	shf.l.wrap.b32 	%r1714, %r1712, %r1712, 26;
	shf.l.wrap.b32 	%r1715, %r1712, %r1712, 21;
	xor.b32  	%r1716, %r1714, %r1715;
	shf.l.wrap.b32 	%r1717, %r1712, %r1712, 7;
	xor.b32  	%r1718, %r1716, %r1717;
	and.b32  	%r1719, %r1712, %r1686;
	not.b32 	%r1720, %r1712;
	and.b32  	%r1721, %r1660, %r1720;
	or.b32  	%r1722, %r1719, %r1721;
	add.s32 	%r1723, %r1722, %r1634;
	add.s32 	%r1724, %r1723, %r1718;
	ld.const.u32 	%r1725, [K256+140];
	add.s32 	%r1726, %r1724, %r1725;
	add.s32 	%r1727, %r1726, %r469;
	shf.l.wrap.b32 	%r1728, %r1713, %r1713, 30;
	shf.l.wrap.b32 	%r1729, %r1713, %r1713, 19;
	xor.b32  	%r1730, %r1728, %r1729;
	shf.l.wrap.b32 	%r1731, %r1713, %r1713, 10;
	xor.b32  	%r1732, %r1730, %r1731;
	xor.b32  	%r1733, %r1687, %r1661;
	and.b32  	%r1734, %r1713, %r1733;
	and.b32  	%r1735, %r1687, %r1661;
	xor.b32  	%r1736, %r1734, %r1735;
	add.s32 	%r1737, %r1732, %r1736;
	add.s32 	%r1738, %r1727, %r1635;
	add.s32 	%r1739, %r1737, %r1727;
	shf.l.wrap.b32 	%r1740, %r1738, %r1738, 26;
	shf.l.wrap.b32 	%r1741, %r1738, %r1738, 21;
	xor.b32  	%r1742, %r1740, %r1741;
	shf.l.wrap.b32 	%r1743, %r1738, %r1738, 7;
	xor.b32  	%r1744, %r1742, %r1743;
	and.b32  	%r1745, %r1738, %r1712;
	not.b32 	%r1746, %r1738;
	and.b32  	%r1747, %r1686, %r1746;
	or.b32  	%r1748, %r1745, %r1747;
	add.s32 	%r1749, %r1748, %r1660;
	add.s32 	%r1750, %r1749, %r1744;
	ld.const.u32 	%r1751, [K256+144];
	add.s32 	%r1752, %r1750, %r1751;
	add.s32 	%r1753, %r1752, %r482;
	shf.l.wrap.b32 	%r1754, %r1739, %r1739, 30;
	shf.l.wrap.b32 	%r1755, %r1739, %r1739, 19;
	xor.b32  	%r1756, %r1754, %r1755;
	shf.l.wrap.b32 	%r1757, %r1739, %r1739, 10;
	xor.b32  	%r1758, %r1756, %r1757;
	xor.b32  	%r1759, %r1713, %r1687;
	and.b32  	%r1760, %r1739, %r1759;
	and.b32  	%r1761, %r1713, %r1687;
	xor.b32  	%r1762, %r1760, %r1761;
	add.s32 	%r1763, %r1758, %r1762;
	add.s32 	%r1764, %r1753, %r1661;
	add.s32 	%r1765, %r1763, %r1753;
	shf.l.wrap.b32 	%r1766, %r1764, %r1764, 26;
	shf.l.wrap.b32 	%r1767, %r1764, %r1764, 21;
	xor.b32  	%r1768, %r1766, %r1767;
	shf.l.wrap.b32 	%r1769, %r1764, %r1764, 7;
	xor.b32  	%r1770, %r1768, %r1769;
	and.b32  	%r1771, %r1764, %r1738;
	not.b32 	%r1772, %r1764;
	and.b32  	%r1773, %r1712, %r1772;
	or.b32  	%r1774, %r1771, %r1773;
	add.s32 	%r1775, %r1774, %r1686;
	add.s32 	%r1776, %r1775, %r1770;
	ld.const.u32 	%r1777, [K256+148];
	add.s32 	%r1778, %r1776, %r1777;
	add.s32 	%r1779, %r1778, %r495;
	shf.l.wrap.b32 	%r1780, %r1765, %r1765, 30;
	shf.l.wrap.b32 	%r1781, %r1765, %r1765, 19;
	xor.b32  	%r1782, %r1780, %r1781;
	shf.l.wrap.b32 	%r1783, %r1765, %r1765, 10;
	xor.b32  	%r1784, %r1782, %r1783;
	xor.b32  	%r1785, %r1739, %r1713;
	and.b32  	%r1786, %r1765, %r1785;
	and.b32  	%r1787, %r1739, %r1713;
	xor.b32  	%r1788, %r1786, %r1787;
	add.s32 	%r1789, %r1784, %r1788;
	add.s32 	%r1790, %r1779, %r1687;
	add.s32 	%r1791, %r1789, %r1779;
	shf.l.wrap.b32 	%r1792, %r1790, %r1790, 26;
	shf.l.wrap.b32 	%r1793, %r1790, %r1790, 21;
	xor.b32  	%r1794, %r1792, %r1793;
	shf.l.wrap.b32 	%r1795, %r1790, %r1790, 7;
	xor.b32  	%r1796, %r1794, %r1795;
	and.b32  	%r1797, %r1790, %r1764;
	not.b32 	%r1798, %r1790;
	and.b32  	%r1799, %r1738, %r1798;
	or.b32  	%r1800, %r1797, %r1799;
	add.s32 	%r1801, %r1800, %r1712;
	add.s32 	%r1802, %r1801, %r1796;
	ld.const.u32 	%r1803, [K256+152];
	add.s32 	%r1804, %r1802, %r1803;
	add.s32 	%r1805, %r1804, %r508;
	shf.l.wrap.b32 	%r1806, %r1791, %r1791, 30;
	shf.l.wrap.b32 	%r1807, %r1791, %r1791, 19;
	xor.b32  	%r1808, %r1806, %r1807;
	shf.l.wrap.b32 	%r1809, %r1791, %r1791, 10;
	xor.b32  	%r1810, %r1808, %r1809;
	xor.b32  	%r1811, %r1765, %r1739;
	and.b32  	%r1812, %r1791, %r1811;
	and.b32  	%r1813, %r1765, %r1739;
	xor.b32  	%r1814, %r1812, %r1813;
	add.s32 	%r1815, %r1810, %r1814;
	add.s32 	%r1816, %r1805, %r1713;
	add.s32 	%r1817, %r1815, %r1805;
	shf.l.wrap.b32 	%r1818, %r1816, %r1816, 26;
	shf.l.wrap.b32 	%r1819, %r1816, %r1816, 21;
	xor.b32  	%r1820, %r1818, %r1819;
	shf.l.wrap.b32 	%r1821, %r1816, %r1816, 7;
	xor.b32  	%r1822, %r1820, %r1821;
	and.b32  	%r1823, %r1816, %r1790;
	not.b32 	%r1824, %r1816;
	and.b32  	%r1825, %r1764, %r1824;
	or.b32  	%r1826, %r1823, %r1825;
	add.s32 	%r1827, %r1826, %r1738;
	add.s32 	%r1828, %r1827, %r1822;
	ld.const.u32 	%r1829, [K256+156];
	add.s32 	%r1830, %r1828, %r1829;
	add.s32 	%r1831, %r1830, %r521;
	shf.l.wrap.b32 	%r1832, %r1817, %r1817, 30;
	shf.l.wrap.b32 	%r1833, %r1817, %r1817, 19;
	xor.b32  	%r1834, %r1832, %r1833;
	shf.l.wrap.b32 	%r1835, %r1817, %r1817, 10;
	xor.b32  	%r1836, %r1834, %r1835;
	xor.b32  	%r1837, %r1791, %r1765;
	and.b32  	%r1838, %r1817, %r1837;
	and.b32  	%r1839, %r1791, %r1765;
	xor.b32  	%r1840, %r1838, %r1839;
	add.s32 	%r1841, %r1836, %r1840;
	add.s32 	%r1842, %r1831, %r1739;
	add.s32 	%r1843, %r1841, %r1831;
	shf.l.wrap.b32 	%r1844, %r1842, %r1842, 26;
	shf.l.wrap.b32 	%r1845, %r1842, %r1842, 21;
	xor.b32  	%r1846, %r1844, %r1845;
	shf.l.wrap.b32 	%r1847, %r1842, %r1842, 7;
	xor.b32  	%r1848, %r1846, %r1847;
	and.b32  	%r1849, %r1842, %r1816;
	not.b32 	%r1850, %r1842;
	and.b32  	%r1851, %r1790, %r1850;
	or.b32  	%r1852, %r1849, %r1851;
	add.s32 	%r1853, %r1852, %r1764;
	add.s32 	%r1854, %r1853, %r1848;
	ld.const.u32 	%r1855, [K256+160];
	add.s32 	%r1856, %r1854, %r1855;
	add.s32 	%r1857, %r1856, %r534;
	shf.l.wrap.b32 	%r1858, %r1843, %r1843, 30;
	shf.l.wrap.b32 	%r1859, %r1843, %r1843, 19;
	xor.b32  	%r1860, %r1858, %r1859;
	shf.l.wrap.b32 	%r1861, %r1843, %r1843, 10;
	xor.b32  	%r1862, %r1860, %r1861;
	xor.b32  	%r1863, %r1817, %r1791;
	and.b32  	%r1864, %r1843, %r1863;
	and.b32  	%r1865, %r1817, %r1791;
	xor.b32  	%r1866, %r1864, %r1865;
	add.s32 	%r1867, %r1862, %r1866;
	add.s32 	%r1868, %r1857, %r1765;
	add.s32 	%r1869, %r1867, %r1857;
	shf.l.wrap.b32 	%r1870, %r1868, %r1868, 26;
	shf.l.wrap.b32 	%r1871, %r1868, %r1868, 21;
	xor.b32  	%r1872, %r1870, %r1871;
	shf.l.wrap.b32 	%r1873, %r1868, %r1868, 7;
	xor.b32  	%r1874, %r1872, %r1873;
	and.b32  	%r1875, %r1868, %r1842;
	not.b32 	%r1876, %r1868;
	and.b32  	%r1877, %r1816, %r1876;
	or.b32  	%r1878, %r1875, %r1877;
	add.s32 	%r1879, %r1878, %r1790;
	add.s32 	%r1880, %r1879, %r1874;
	ld.const.u32 	%r1881, [K256+164];
	add.s32 	%r1882, %r1880, %r1881;
	add.s32 	%r1883, %r1882, %r547;
	shf.l.wrap.b32 	%r1884, %r1869, %r1869, 30;
	shf.l.wrap.b32 	%r1885, %r1869, %r1869, 19;
	xor.b32  	%r1886, %r1884, %r1885;
	shf.l.wrap.b32 	%r1887, %r1869, %r1869, 10;
	xor.b32  	%r1888, %r1886, %r1887;
	xor.b32  	%r1889, %r1843, %r1817;
	and.b32  	%r1890, %r1869, %r1889;
	and.b32  	%r1891, %r1843, %r1817;
	xor.b32  	%r1892, %r1890, %r1891;
	add.s32 	%r1893, %r1888, %r1892;
	add.s32 	%r1894, %r1883, %r1791;
	add.s32 	%r1895, %r1893, %r1883;
	shf.l.wrap.b32 	%r1896, %r1894, %r1894, 26;
	shf.l.wrap.b32 	%r1897, %r1894, %r1894, 21;
	xor.b32  	%r1898, %r1896, %r1897;
	shf.l.wrap.b32 	%r1899, %r1894, %r1894, 7;
	xor.b32  	%r1900, %r1898, %r1899;
	and.b32  	%r1901, %r1894, %r1868;
	not.b32 	%r1902, %r1894;
	and.b32  	%r1903, %r1842, %r1902;
	or.b32  	%r1904, %r1901, %r1903;
	add.s32 	%r1905, %r1904, %r1816;
	add.s32 	%r1906, %r1905, %r1900;
	ld.const.u32 	%r1907, [K256+168];
	add.s32 	%r1908, %r1906, %r1907;
	add.s32 	%r1909, %r1908, %r560;
	shf.l.wrap.b32 	%r1910, %r1895, %r1895, 30;
	shf.l.wrap.b32 	%r1911, %r1895, %r1895, 19;
	xor.b32  	%r1912, %r1910, %r1911;
	shf.l.wrap.b32 	%r1913, %r1895, %r1895, 10;
	xor.b32  	%r1914, %r1912, %r1913;
	xor.b32  	%r1915, %r1869, %r1843;
	and.b32  	%r1916, %r1895, %r1915;
	and.b32  	%r1917, %r1869, %r1843;
	xor.b32  	%r1918, %r1916, %r1917;
	add.s32 	%r1919, %r1914, %r1918;
	add.s32 	%r1920, %r1909, %r1817;
	add.s32 	%r1921, %r1919, %r1909;
	shf.l.wrap.b32 	%r1922, %r1920, %r1920, 26;
	shf.l.wrap.b32 	%r1923, %r1920, %r1920, 21;
	xor.b32  	%r1924, %r1922, %r1923;
	shf.l.wrap.b32 	%r1925, %r1920, %r1920, 7;
	xor.b32  	%r1926, %r1924, %r1925;
	and.b32  	%r1927, %r1920, %r1894;
	not.b32 	%r1928, %r1920;
	and.b32  	%r1929, %r1868, %r1928;
	or.b32  	%r1930, %r1927, %r1929;
	add.s32 	%r1931, %r1930, %r1842;
	add.s32 	%r1932, %r1931, %r1926;
	ld.const.u32 	%r1933, [K256+172];
	add.s32 	%r1934, %r1932, %r1933;
	add.s32 	%r1935, %r1934, %r573;
	shf.l.wrap.b32 	%r1936, %r1921, %r1921, 30;
	shf.l.wrap.b32 	%r1937, %r1921, %r1921, 19;
	xor.b32  	%r1938, %r1936, %r1937;
	shf.l.wrap.b32 	%r1939, %r1921, %r1921, 10;
	xor.b32  	%r1940, %r1938, %r1939;
	xor.b32  	%r1941, %r1895, %r1869;
	and.b32  	%r1942, %r1921, %r1941;
	and.b32  	%r1943, %r1895, %r1869;
	xor.b32  	%r1944, %r1942, %r1943;
	add.s32 	%r1945, %r1940, %r1944;
	add.s32 	%r1946, %r1935, %r1843;
	add.s32 	%r1947, %r1945, %r1935;
	shf.l.wrap.b32 	%r1948, %r1946, %r1946, 26;
	shf.l.wrap.b32 	%r1949, %r1946, %r1946, 21;
	xor.b32  	%r1950, %r1948, %r1949;
	shf.l.wrap.b32 	%r1951, %r1946, %r1946, 7;
	xor.b32  	%r1952, %r1950, %r1951;
	and.b32  	%r1953, %r1946, %r1920;
	not.b32 	%r1954, %r1946;
	and.b32  	%r1955, %r1894, %r1954;
	or.b32  	%r1956, %r1953, %r1955;
	add.s32 	%r1957, %r1956, %r1868;
	add.s32 	%r1958, %r1957, %r1952;
	ld.const.u32 	%r1959, [K256+176];
	add.s32 	%r1960, %r1958, %r1959;
	add.s32 	%r1961, %r1960, %r586;
	shf.l.wrap.b32 	%r1962, %r1947, %r1947, 30;
	shf.l.wrap.b32 	%r1963, %r1947, %r1947, 19;
	xor.b32  	%r1964, %r1962, %r1963;
	shf.l.wrap.b32 	%r1965, %r1947, %r1947, 10;
	xor.b32  	%r1966, %r1964, %r1965;
	xor.b32  	%r1967, %r1921, %r1895;
	and.b32  	%r1968, %r1947, %r1967;
	and.b32  	%r1969, %r1921, %r1895;
	xor.b32  	%r1970, %r1968, %r1969;
	add.s32 	%r1971, %r1966, %r1970;
	add.s32 	%r1972, %r1961, %r1869;
	add.s32 	%r1973, %r1971, %r1961;
	shf.l.wrap.b32 	%r1974, %r1972, %r1972, 26;
	shf.l.wrap.b32 	%r1975, %r1972, %r1972, 21;
	xor.b32  	%r1976, %r1974, %r1975;
	shf.l.wrap.b32 	%r1977, %r1972, %r1972, 7;
	xor.b32  	%r1978, %r1976, %r1977;
	and.b32  	%r1979, %r1972, %r1946;
	not.b32 	%r1980, %r1972;
	and.b32  	%r1981, %r1920, %r1980;
	or.b32  	%r1982, %r1979, %r1981;
	add.s32 	%r1983, %r1982, %r1894;
	add.s32 	%r1984, %r1983, %r1978;
	ld.const.u32 	%r1985, [K256+180];
	add.s32 	%r1986, %r1984, %r1985;
	add.s32 	%r1987, %r1986, %r599;
	shf.l.wrap.b32 	%r1988, %r1973, %r1973, 30;
	shf.l.wrap.b32 	%r1989, %r1973, %r1973, 19;
	xor.b32  	%r1990, %r1988, %r1989;
	shf.l.wrap.b32 	%r1991, %r1973, %r1973, 10;
	xor.b32  	%r1992, %r1990, %r1991;
	xor.b32  	%r1993, %r1947, %r1921;
	and.b32  	%r1994, %r1973, %r1993;
	and.b32  	%r1995, %r1947, %r1921;
	xor.b32  	%r1996, %r1994, %r1995;
	add.s32 	%r1997, %r1992, %r1996;
	add.s32 	%r1998, %r1987, %r1895;
	add.s32 	%r1999, %r1997, %r1987;
	shf.l.wrap.b32 	%r2000, %r1998, %r1998, 26;
	shf.l.wrap.b32 	%r2001, %r1998, %r1998, 21;
	xor.b32  	%r2002, %r2000, %r2001;
	shf.l.wrap.b32 	%r2003, %r1998, %r1998, 7;
	xor.b32  	%r2004, %r2002, %r2003;
	and.b32  	%r2005, %r1998, %r1972;
	not.b32 	%r2006, %r1998;
	and.b32  	%r2007, %r1946, %r2006;
	or.b32  	%r2008, %r2005, %r2007;
	add.s32 	%r2009, %r2008, %r1920;
	add.s32 	%r2010, %r2009, %r2004;
	ld.const.u32 	%r2011, [K256+184];
	add.s32 	%r2012, %r2010, %r2011;
	add.s32 	%r2013, %r2012, %r612;
	shf.l.wrap.b32 	%r2014, %r1999, %r1999, 30;
	shf.l.wrap.b32 	%r2015, %r1999, %r1999, 19;
	xor.b32  	%r2016, %r2014, %r2015;
	shf.l.wrap.b32 	%r2017, %r1999, %r1999, 10;
	xor.b32  	%r2018, %r2016, %r2017;
	xor.b32  	%r2019, %r1973, %r1947;
	and.b32  	%r2020, %r1999, %r2019;
	and.b32  	%r2021, %r1973, %r1947;
	xor.b32  	%r2022, %r2020, %r2021;
	add.s32 	%r2023, %r2018, %r2022;
	add.s32 	%r2024, %r2013, %r1921;
	add.s32 	%r2025, %r2023, %r2013;
	shf.l.wrap.b32 	%r2026, %r2024, %r2024, 26;
	shf.l.wrap.b32 	%r2027, %r2024, %r2024, 21;
	xor.b32  	%r2028, %r2026, %r2027;
	shf.l.wrap.b32 	%r2029, %r2024, %r2024, 7;
	xor.b32  	%r2030, %r2028, %r2029;
	and.b32  	%r2031, %r2024, %r1998;
	not.b32 	%r2032, %r2024;
	and.b32  	%r2033, %r1972, %r2032;
	or.b32  	%r2034, %r2031, %r2033;
	add.s32 	%r2035, %r2034, %r1946;
	add.s32 	%r2036, %r2035, %r2030;
	ld.const.u32 	%r2037, [K256+188];
	add.s32 	%r2038, %r2036, %r2037;
	add.s32 	%r2039, %r2038, %r625;
	shf.l.wrap.b32 	%r2040, %r2025, %r2025, 30;
	shf.l.wrap.b32 	%r2041, %r2025, %r2025, 19;
	xor.b32  	%r2042, %r2040, %r2041;
	shf.l.wrap.b32 	%r2043, %r2025, %r2025, 10;
	xor.b32  	%r2044, %r2042, %r2043;
	xor.b32  	%r2045, %r1999, %r1973;
	and.b32  	%r2046, %r2025, %r2045;
	and.b32  	%r2047, %r1999, %r1973;
	xor.b32  	%r2048, %r2046, %r2047;
	add.s32 	%r2049, %r2044, %r2048;
	add.s32 	%r2050, %r2039, %r1947;
	add.s32 	%r2051, %r2049, %r2039;
	shf.l.wrap.b32 	%r2052, %r2050, %r2050, 26;
	shf.l.wrap.b32 	%r2053, %r2050, %r2050, 21;
	xor.b32  	%r2054, %r2052, %r2053;
	shf.l.wrap.b32 	%r2055, %r2050, %r2050, 7;
	xor.b32  	%r2056, %r2054, %r2055;
	and.b32  	%r2057, %r2050, %r2024;
	not.b32 	%r2058, %r2050;
	and.b32  	%r2059, %r1998, %r2058;
	or.b32  	%r2060, %r2057, %r2059;
	add.s32 	%r2061, %r2060, %r1972;
	add.s32 	%r2062, %r2061, %r2056;
	ld.const.u32 	%r2063, [K256+192];
	add.s32 	%r2064, %r2062, %r2063;
	add.s32 	%r2065, %r2064, %r638;
	shf.l.wrap.b32 	%r2066, %r2051, %r2051, 30;
	shf.l.wrap.b32 	%r2067, %r2051, %r2051, 19;
	xor.b32  	%r2068, %r2066, %r2067;
	shf.l.wrap.b32 	%r2069, %r2051, %r2051, 10;
	xor.b32  	%r2070, %r2068, %r2069;
	xor.b32  	%r2071, %r2025, %r1999;
	and.b32  	%r2072, %r2051, %r2071;
	and.b32  	%r2073, %r2025, %r1999;
	xor.b32  	%r2074, %r2072, %r2073;
	add.s32 	%r2075, %r2070, %r2074;
	add.s32 	%r2076, %r2065, %r1973;
	add.s32 	%r2077, %r2075, %r2065;
	shf.l.wrap.b32 	%r2078, %r2076, %r2076, 26;
	shf.l.wrap.b32 	%r2079, %r2076, %r2076, 21;
	xor.b32  	%r2080, %r2078, %r2079;
	shf.l.wrap.b32 	%r2081, %r2076, %r2076, 7;
	xor.b32  	%r2082, %r2080, %r2081;
	and.b32  	%r2083, %r2076, %r2050;
	not.b32 	%r2084, %r2076;
	and.b32  	%r2085, %r2024, %r2084;
	or.b32  	%r2086, %r2083, %r2085;
	add.s32 	%r2087, %r2086, %r1998;
	add.s32 	%r2088, %r2087, %r2082;
	ld.const.u32 	%r2089, [K256+196];
	add.s32 	%r2090, %r2088, %r2089;
	add.s32 	%r2091, %r2090, %r651;
	shf.l.wrap.b32 	%r2092, %r2077, %r2077, 30;
	shf.l.wrap.b32 	%r2093, %r2077, %r2077, 19;
	xor.b32  	%r2094, %r2092, %r2093;
	shf.l.wrap.b32 	%r2095, %r2077, %r2077, 10;
	xor.b32  	%r2096, %r2094, %r2095;
	xor.b32  	%r2097, %r2051, %r2025;
	and.b32  	%r2098, %r2077, %r2097;
	and.b32  	%r2099, %r2051, %r2025;
	xor.b32  	%r2100, %r2098, %r2099;
	add.s32 	%r2101, %r2096, %r2100;
	add.s32 	%r2102, %r2091, %r1999;
	add.s32 	%r2103, %r2101, %r2091;
	shf.l.wrap.b32 	%r2104, %r2102, %r2102, 26;
	shf.l.wrap.b32 	%r2105, %r2102, %r2102, 21;
	xor.b32  	%r2106, %r2104, %r2105;
	shf.l.wrap.b32 	%r2107, %r2102, %r2102, 7;
	xor.b32  	%r2108, %r2106, %r2107;
	and.b32  	%r2109, %r2102, %r2076;
	not.b32 	%r2110, %r2102;
	and.b32  	%r2111, %r2050, %r2110;
	or.b32  	%r2112, %r2109, %r2111;
	add.s32 	%r2113, %r2112, %r2024;
	add.s32 	%r2114, %r2113, %r2108;
	ld.const.u32 	%r2115, [K256+200];
	add.s32 	%r2116, %r2114, %r2115;
	add.s32 	%r2117, %r2116, %r664;
	shf.l.wrap.b32 	%r2118, %r2103, %r2103, 30;
	shf.l.wrap.b32 	%r2119, %r2103, %r2103, 19;
	xor.b32  	%r2120, %r2118, %r2119;
	shf.l.wrap.b32 	%r2121, %r2103, %r2103, 10;
	xor.b32  	%r2122, %r2120, %r2121;
	xor.b32  	%r2123, %r2077, %r2051;
	and.b32  	%r2124, %r2103, %r2123;
	and.b32  	%r2125, %r2077, %r2051;
	xor.b32  	%r2126, %r2124, %r2125;
	add.s32 	%r2127, %r2122, %r2126;
	add.s32 	%r2128, %r2117, %r2025;
	add.s32 	%r2129, %r2127, %r2117;
	shf.l.wrap.b32 	%r2130, %r2128, %r2128, 26;
	shf.l.wrap.b32 	%r2131, %r2128, %r2128, 21;
	xor.b32  	%r2132, %r2130, %r2131;
	shf.l.wrap.b32 	%r2133, %r2128, %r2128, 7;
	xor.b32  	%r2134, %r2132, %r2133;
	and.b32  	%r2135, %r2128, %r2102;
	not.b32 	%r2136, %r2128;
	and.b32  	%r2137, %r2076, %r2136;
	or.b32  	%r2138, %r2135, %r2137;
	add.s32 	%r2139, %r2138, %r2050;
	add.s32 	%r2140, %r2139, %r2134;
	ld.const.u32 	%r2141, [K256+204];
	add.s32 	%r2142, %r2140, %r2141;
	add.s32 	%r2143, %r2142, %r677;
	shf.l.wrap.b32 	%r2144, %r2129, %r2129, 30;
	shf.l.wrap.b32 	%r2145, %r2129, %r2129, 19;
	xor.b32  	%r2146, %r2144, %r2145;
	shf.l.wrap.b32 	%r2147, %r2129, %r2129, 10;
	xor.b32  	%r2148, %r2146, %r2147;
	xor.b32  	%r2149, %r2103, %r2077;
	and.b32  	%r2150, %r2129, %r2149;
	and.b32  	%r2151, %r2103, %r2077;
	xor.b32  	%r2152, %r2150, %r2151;
	add.s32 	%r2153, %r2148, %r2152;
	add.s32 	%r2154, %r2143, %r2051;
	add.s32 	%r2155, %r2153, %r2143;
	shf.l.wrap.b32 	%r2156, %r2154, %r2154, 26;
	shf.l.wrap.b32 	%r2157, %r2154, %r2154, 21;
	xor.b32  	%r2158, %r2156, %r2157;
	shf.l.wrap.b32 	%r2159, %r2154, %r2154, 7;
	xor.b32  	%r2160, %r2158, %r2159;
	and.b32  	%r2161, %r2154, %r2128;
	not.b32 	%r2162, %r2154;
	and.b32  	%r2163, %r2102, %r2162;
	or.b32  	%r2164, %r2161, %r2163;
	add.s32 	%r2165, %r2164, %r2076;
	add.s32 	%r2166, %r2165, %r2160;
	ld.const.u32 	%r2167, [K256+208];
	add.s32 	%r2168, %r2166, %r2167;
	add.s32 	%r2169, %r2168, %r690;
	shf.l.wrap.b32 	%r2170, %r2155, %r2155, 30;
	shf.l.wrap.b32 	%r2171, %r2155, %r2155, 19;
	xor.b32  	%r2172, %r2170, %r2171;
	shf.l.wrap.b32 	%r2173, %r2155, %r2155, 10;
	xor.b32  	%r2174, %r2172, %r2173;
	xor.b32  	%r2175, %r2129, %r2103;
	and.b32  	%r2176, %r2155, %r2175;
	and.b32  	%r2177, %r2129, %r2103;
	xor.b32  	%r2178, %r2176, %r2177;
	add.s32 	%r2179, %r2174, %r2178;
	add.s32 	%r2180, %r2169, %r2077;
	add.s32 	%r2181, %r2179, %r2169;
	shf.l.wrap.b32 	%r2182, %r2180, %r2180, 26;
	shf.l.wrap.b32 	%r2183, %r2180, %r2180, 21;
	xor.b32  	%r2184, %r2182, %r2183;
	shf.l.wrap.b32 	%r2185, %r2180, %r2180, 7;
	xor.b32  	%r2186, %r2184, %r2185;
	and.b32  	%r2187, %r2180, %r2154;
	not.b32 	%r2188, %r2180;
	and.b32  	%r2189, %r2128, %r2188;
	or.b32  	%r2190, %r2187, %r2189;
	add.s32 	%r2191, %r2190, %r2102;
	add.s32 	%r2192, %r2191, %r2186;
	ld.const.u32 	%r2193, [K256+212];
	add.s32 	%r2194, %r2192, %r2193;
	add.s32 	%r2195, %r2194, %r703;
	shf.l.wrap.b32 	%r2196, %r2181, %r2181, 30;
	shf.l.wrap.b32 	%r2197, %r2181, %r2181, 19;
	xor.b32  	%r2198, %r2196, %r2197;
	shf.l.wrap.b32 	%r2199, %r2181, %r2181, 10;
	xor.b32  	%r2200, %r2198, %r2199;
	xor.b32  	%r2201, %r2155, %r2129;
	and.b32  	%r2202, %r2181, %r2201;
	and.b32  	%r2203, %r2155, %r2129;
	xor.b32  	%r2204, %r2202, %r2203;
	add.s32 	%r2205, %r2200, %r2204;
	add.s32 	%r2206, %r2195, %r2103;
	add.s32 	%r2207, %r2205, %r2195;
	shf.l.wrap.b32 	%r2208, %r2206, %r2206, 26;
	shf.l.wrap.b32 	%r2209, %r2206, %r2206, 21;
	xor.b32  	%r2210, %r2208, %r2209;
	shf.l.wrap.b32 	%r2211, %r2206, %r2206, 7;
	xor.b32  	%r2212, %r2210, %r2211;
	and.b32  	%r2213, %r2206, %r2180;
	not.b32 	%r2214, %r2206;
	and.b32  	%r2215, %r2154, %r2214;
	or.b32  	%r2216, %r2213, %r2215;
	add.s32 	%r2217, %r2216, %r2128;
	add.s32 	%r2218, %r2217, %r2212;
	ld.const.u32 	%r2219, [K256+216];
	add.s32 	%r2220, %r2218, %r2219;
	add.s32 	%r2221, %r2220, %r716;
	shf.l.wrap.b32 	%r2222, %r2207, %r2207, 30;
	shf.l.wrap.b32 	%r2223, %r2207, %r2207, 19;
	xor.b32  	%r2224, %r2222, %r2223;
	shf.l.wrap.b32 	%r2225, %r2207, %r2207, 10;
	xor.b32  	%r2226, %r2224, %r2225;
	xor.b32  	%r2227, %r2181, %r2155;
	and.b32  	%r2228, %r2207, %r2227;
	and.b32  	%r2229, %r2181, %r2155;
	xor.b32  	%r2230, %r2228, %r2229;
	add.s32 	%r2231, %r2226, %r2230;
	add.s32 	%r2232, %r2221, %r2129;
	add.s32 	%r2233, %r2231, %r2221;
	shf.l.wrap.b32 	%r2234, %r2232, %r2232, 26;
	shf.l.wrap.b32 	%r2235, %r2232, %r2232, 21;
	xor.b32  	%r2236, %r2234, %r2235;
	shf.l.wrap.b32 	%r2237, %r2232, %r2232, 7;
	xor.b32  	%r2238, %r2236, %r2237;
	and.b32  	%r2239, %r2232, %r2206;
	not.b32 	%r2240, %r2232;
	and.b32  	%r2241, %r2180, %r2240;
	or.b32  	%r2242, %r2239, %r2241;
	add.s32 	%r2243, %r2242, %r2154;
	add.s32 	%r2244, %r2243, %r2238;
	ld.const.u32 	%r2245, [K256+220];
	add.s32 	%r2246, %r2244, %r2245;
	add.s32 	%r2247, %r2246, %r729;
	shf.l.wrap.b32 	%r2248, %r2233, %r2233, 30;
	shf.l.wrap.b32 	%r2249, %r2233, %r2233, 19;
	xor.b32  	%r2250, %r2248, %r2249;
	shf.l.wrap.b32 	%r2251, %r2233, %r2233, 10;
	xor.b32  	%r2252, %r2250, %r2251;
	xor.b32  	%r2253, %r2207, %r2181;
	and.b32  	%r2254, %r2233, %r2253;
	and.b32  	%r2255, %r2207, %r2181;
	xor.b32  	%r2256, %r2254, %r2255;
	add.s32 	%r2257, %r2252, %r2256;
	add.s32 	%r2258, %r2247, %r2155;
	add.s32 	%r2259, %r2257, %r2247;
	shf.l.wrap.b32 	%r2260, %r2258, %r2258, 26;
	shf.l.wrap.b32 	%r2261, %r2258, %r2258, 21;
	xor.b32  	%r2262, %r2260, %r2261;
	shf.l.wrap.b32 	%r2263, %r2258, %r2258, 7;
	xor.b32  	%r2264, %r2262, %r2263;
	and.b32  	%r2265, %r2258, %r2232;
	not.b32 	%r2266, %r2258;
	and.b32  	%r2267, %r2206, %r2266;
	or.b32  	%r2268, %r2265, %r2267;
	add.s32 	%r2269, %r2268, %r2180;
	add.s32 	%r2270, %r2269, %r2264;
	ld.const.u32 	%r2271, [K256+224];
	add.s32 	%r2272, %r2270, %r2271;
	add.s32 	%r2273, %r2272, %r742;
	shf.l.wrap.b32 	%r2274, %r2259, %r2259, 30;
	shf.l.wrap.b32 	%r2275, %r2259, %r2259, 19;
	xor.b32  	%r2276, %r2274, %r2275;
	shf.l.wrap.b32 	%r2277, %r2259, %r2259, 10;
	xor.b32  	%r2278, %r2276, %r2277;
	xor.b32  	%r2279, %r2233, %r2207;
	and.b32  	%r2280, %r2259, %r2279;
	and.b32  	%r2281, %r2233, %r2207;
	xor.b32  	%r2282, %r2280, %r2281;
	add.s32 	%r2283, %r2278, %r2282;
	add.s32 	%r2284, %r2273, %r2181;
	add.s32 	%r2285, %r2283, %r2273;
	shf.l.wrap.b32 	%r2286, %r2284, %r2284, 26;
	shf.l.wrap.b32 	%r2287, %r2284, %r2284, 21;
	xor.b32  	%r2288, %r2286, %r2287;
	shf.l.wrap.b32 	%r2289, %r2284, %r2284, 7;
	xor.b32  	%r2290, %r2288, %r2289;
	and.b32  	%r2291, %r2284, %r2258;
	not.b32 	%r2292, %r2284;
	and.b32  	%r2293, %r2232, %r2292;
	or.b32  	%r2294, %r2291, %r2293;
	add.s32 	%r2295, %r2294, %r2206;
	add.s32 	%r2296, %r2295, %r2290;
	ld.const.u32 	%r2297, [K256+228];
	add.s32 	%r2298, %r2296, %r2297;
	add.s32 	%r2299, %r2298, %r755;
	shf.l.wrap.b32 	%r2300, %r2285, %r2285, 30;
	shf.l.wrap.b32 	%r2301, %r2285, %r2285, 19;
	xor.b32  	%r2302, %r2300, %r2301;
	shf.l.wrap.b32 	%r2303, %r2285, %r2285, 10;
	xor.b32  	%r2304, %r2302, %r2303;
	xor.b32  	%r2305, %r2259, %r2233;
	and.b32  	%r2306, %r2285, %r2305;
	and.b32  	%r2307, %r2259, %r2233;
	xor.b32  	%r2308, %r2306, %r2307;
	add.s32 	%r2309, %r2304, %r2308;
	add.s32 	%r2310, %r2299, %r2207;
	add.s32 	%r2311, %r2309, %r2299;
	shf.l.wrap.b32 	%r2312, %r2310, %r2310, 26;
	shf.l.wrap.b32 	%r2313, %r2310, %r2310, 21;
	xor.b32  	%r2314, %r2312, %r2313;
	shf.l.wrap.b32 	%r2315, %r2310, %r2310, 7;
	xor.b32  	%r2316, %r2314, %r2315;
	and.b32  	%r2317, %r2310, %r2284;
	not.b32 	%r2318, %r2310;
	and.b32  	%r2319, %r2258, %r2318;
	or.b32  	%r2320, %r2317, %r2319;
	add.s32 	%r2321, %r2320, %r2232;
	add.s32 	%r2322, %r2321, %r2316;
	ld.const.u32 	%r2323, [K256+232];
	add.s32 	%r2324, %r2322, %r2323;
	add.s32 	%r2325, %r2324, %r768;
	shf.l.wrap.b32 	%r2326, %r2311, %r2311, 30;
	shf.l.wrap.b32 	%r2327, %r2311, %r2311, 19;
	xor.b32  	%r2328, %r2326, %r2327;
	shf.l.wrap.b32 	%r2329, %r2311, %r2311, 10;
	xor.b32  	%r2330, %r2328, %r2329;
	xor.b32  	%r2331, %r2285, %r2259;
	and.b32  	%r2332, %r2311, %r2331;
	and.b32  	%r2333, %r2285, %r2259;
	xor.b32  	%r2334, %r2332, %r2333;
	add.s32 	%r2335, %r2330, %r2334;
	add.s32 	%r2336, %r2325, %r2233;
	add.s32 	%r2337, %r2335, %r2325;
	shf.l.wrap.b32 	%r2338, %r2336, %r2336, 26;
	shf.l.wrap.b32 	%r2339, %r2336, %r2336, 21;
	xor.b32  	%r2340, %r2338, %r2339;
	shf.l.wrap.b32 	%r2341, %r2336, %r2336, 7;
	xor.b32  	%r2342, %r2340, %r2341;
	and.b32  	%r2343, %r2336, %r2310;
	not.b32 	%r2344, %r2336;
	and.b32  	%r2345, %r2284, %r2344;
	or.b32  	%r2346, %r2343, %r2345;
	add.s32 	%r2347, %r2346, %r2258;
	add.s32 	%r2348, %r2347, %r2342;
	ld.const.u32 	%r2349, [K256+236];
	add.s32 	%r2350, %r2348, %r2349;
	add.s32 	%r2351, %r2350, %r781;
	shf.l.wrap.b32 	%r2352, %r2337, %r2337, 30;
	shf.l.wrap.b32 	%r2353, %r2337, %r2337, 19;
	xor.b32  	%r2354, %r2352, %r2353;
	shf.l.wrap.b32 	%r2355, %r2337, %r2337, 10;
	xor.b32  	%r2356, %r2354, %r2355;
	xor.b32  	%r2357, %r2311, %r2285;
	and.b32  	%r2358, %r2337, %r2357;
	and.b32  	%r2359, %r2311, %r2285;
	xor.b32  	%r2360, %r2358, %r2359;
	add.s32 	%r2361, %r2356, %r2360;
	add.s32 	%r2362, %r2351, %r2259;
	add.s32 	%r2363, %r2361, %r2351;
	shf.l.wrap.b32 	%r2364, %r2362, %r2362, 26;
	shf.l.wrap.b32 	%r2365, %r2362, %r2362, 21;
	xor.b32  	%r2366, %r2364, %r2365;
	shf.l.wrap.b32 	%r2367, %r2362, %r2362, 7;
	xor.b32  	%r2368, %r2366, %r2367;
	and.b32  	%r2369, %r2362, %r2336;
	not.b32 	%r2370, %r2362;
	and.b32  	%r2371, %r2310, %r2370;
	or.b32  	%r2372, %r2369, %r2371;
	add.s32 	%r2373, %r2372, %r2284;
	add.s32 	%r2374, %r2373, %r2368;
	ld.const.u32 	%r2375, [K256+240];
	add.s32 	%r2376, %r2374, %r2375;
	add.s32 	%r2377, %r2376, %r794;
	shf.l.wrap.b32 	%r2378, %r2363, %r2363, 30;
	shf.l.wrap.b32 	%r2379, %r2363, %r2363, 19;
	xor.b32  	%r2380, %r2378, %r2379;
	shf.l.wrap.b32 	%r2381, %r2363, %r2363, 10;
	xor.b32  	%r2382, %r2380, %r2381;
	xor.b32  	%r2383, %r2337, %r2311;
	and.b32  	%r2384, %r2363, %r2383;
	and.b32  	%r2385, %r2337, %r2311;
	xor.b32  	%r2386, %r2384, %r2385;
	add.s32 	%r2387, %r2382, %r2386;
	add.s32 	%r2388, %r2377, %r2285;
	add.s32 	%r2389, %r2387, %r2377;
	shf.l.wrap.b32 	%r2390, %r2388, %r2388, 26;
	shf.l.wrap.b32 	%r2391, %r2388, %r2388, 21;
	xor.b32  	%r2392, %r2390, %r2391;
	shf.l.wrap.b32 	%r2393, %r2388, %r2388, 7;
	xor.b32  	%r2394, %r2392, %r2393;
	and.b32  	%r2395, %r2388, %r2362;
	not.b32 	%r2396, %r2388;
	and.b32  	%r2397, %r2336, %r2396;
	or.b32  	%r2398, %r2395, %r2397;
	add.s32 	%r2399, %r2398, %r2310;
	add.s32 	%r2400, %r2399, %r2394;
	ld.const.u32 	%r2401, [K256+244];
	add.s32 	%r2402, %r2400, %r2401;
	add.s32 	%r2403, %r2402, %r807;
	shf.l.wrap.b32 	%r2404, %r2389, %r2389, 30;
	shf.l.wrap.b32 	%r2405, %r2389, %r2389, 19;
	xor.b32  	%r2406, %r2404, %r2405;
	shf.l.wrap.b32 	%r2407, %r2389, %r2389, 10;
	xor.b32  	%r2408, %r2406, %r2407;
	xor.b32  	%r2409, %r2363, %r2337;
	and.b32  	%r2410, %r2389, %r2409;
	and.b32  	%r2411, %r2363, %r2337;
	xor.b32  	%r2412, %r2410, %r2411;
	add.s32 	%r2413, %r2408, %r2412;
	add.s32 	%r2414, %r2403, %r2311;
	add.s32 	%r2415, %r2413, %r2403;
	shf.l.wrap.b32 	%r2416, %r2414, %r2414, 26;
	shf.l.wrap.b32 	%r2417, %r2414, %r2414, 21;
	xor.b32  	%r2418, %r2416, %r2417;
	shf.l.wrap.b32 	%r2419, %r2414, %r2414, 7;
	xor.b32  	%r2420, %r2418, %r2419;
	and.b32  	%r2421, %r2414, %r2388;
	not.b32 	%r2422, %r2414;
	and.b32  	%r2423, %r2362, %r2422;
	or.b32  	%r2424, %r2421, %r2423;
	add.s32 	%r2425, %r2424, %r2336;
	add.s32 	%r2426, %r2425, %r2420;
	ld.const.u32 	%r2427, [K256+248];
	add.s32 	%r2428, %r2426, %r2427;
	add.s32 	%r2429, %r2428, %r820;
	shf.l.wrap.b32 	%r2430, %r2415, %r2415, 30;
	shf.l.wrap.b32 	%r2431, %r2415, %r2415, 19;
	xor.b32  	%r2432, %r2430, %r2431;
	shf.l.wrap.b32 	%r2433, %r2415, %r2415, 10;
	xor.b32  	%r2434, %r2432, %r2433;
	xor.b32  	%r2435, %r2389, %r2363;
	and.b32  	%r2436, %r2415, %r2435;
	and.b32  	%r2437, %r2389, %r2363;
	xor.b32  	%r2438, %r2436, %r2437;
	add.s32 	%r2439, %r2434, %r2438;
	add.s32 	%r2440, %r2429, %r2337;
	add.s32 	%r2441, %r2439, %r2429;
	shf.l.wrap.b32 	%r2442, %r2440, %r2440, 26;
	shf.l.wrap.b32 	%r2443, %r2440, %r2440, 21;
	xor.b32  	%r2444, %r2442, %r2443;
	shf.l.wrap.b32 	%r2445, %r2440, %r2440, 7;
	xor.b32  	%r2446, %r2444, %r2445;
	and.b32  	%r2447, %r2440, %r2414;
	not.b32 	%r2448, %r2440;
	and.b32  	%r2449, %r2388, %r2448;
	or.b32  	%r2450, %r2447, %r2449;
	add.s32 	%r2451, %r2450, %r2362;
	add.s32 	%r2452, %r2451, %r2446;
	ld.const.u32 	%r2453, [K256+252];
	add.s32 	%r2454, %r2452, %r2453;
	add.s32 	%r2455, %r2454, %r833;
	shf.l.wrap.b32 	%r2456, %r2441, %r2441, 30;
	shf.l.wrap.b32 	%r2457, %r2441, %r2441, 19;
	xor.b32  	%r2458, %r2456, %r2457;
	shf.l.wrap.b32 	%r2459, %r2441, %r2441, 10;
	xor.b32  	%r2460, %r2458, %r2459;
	xor.b32  	%r2461, %r2415, %r2389;
	and.b32  	%r2462, %r2441, %r2461;
	and.b32  	%r2463, %r2415, %r2389;
	xor.b32  	%r2464, %r2462, %r2463;
	add.s32 	%r2465, %r2460, %r2464;
	add.s32 	%r2466, %r2465, %r2455;
	add.s32 	%r2467, %r2466, 1779033703;
	shr.u32 	%r2468, %r2467, 28;
	ld.local.u16 	%r2469, [%rd4+22];
	and.b32  	%r2470, %r2469, 15;
	setp.eq.s32 	%p29, %r2468, %r2470;
	@%p29 bra 	$L__BB4_35;
	bra.uni 	$L__BB4_34;

$L__BB4_35:
	ld.local.u32 	%r2472, [%rd4];
	cvt.s64.s32 	%rd28, %r2472;
	mul.wide.s32 	%rd757, %r2472, 10;
	mov.u64 	%rd758, wordlist;
	add.s64 	%rd759, %rd758, %rd757;
	ld.const.u8 	%rs1096, [%rd759];
	setp.eq.s16 	%p30, %rs1096, 0;
	mov.u32 	%r11185, 0;
	@%p30 bra 	$L__BB4_38;

	mul.lo.s64 	%rd763, %rd28, 10;
	add.s64 	%rd765, %rd758, %rd763;

$L__BB4_37:
	cvt.s64.s32 	%rd760, %r11185;
	add.s64 	%rd761, %rd15507, %rd760;
	st.local.u8 	[%rd761], %rs1096;
	add.s32 	%r11185, %r11185, 1;
	cvt.s64.s32 	%rd762, %r11185;
	add.s64 	%rd766, %rd765, %rd762;
	ld.const.u8 	%rs1096, [%rd766];
	setp.ne.s16 	%p31, %rs1096, 0;
	@%p31 bra 	$L__BB4_37;

$L__BB4_38:
	add.s32 	%r11188, %r11185, 1;
	cvt.s64.s32 	%rd767, %r11185;
	add.s64 	%rd768, %rd15507, %rd767;
	mov.u16 	%rs213, 32;
	st.local.u8 	[%rd768], %rs213;
	ld.local.u32 	%r2474, [%rd4+4];
	cvt.s64.s32 	%rd29, %r2474;
	mul.wide.s32 	%rd769, %r2474, 10;
	add.s64 	%rd771, %rd758, %rd769;
	ld.const.u8 	%rs1097, [%rd771];
	setp.eq.s16 	%p32, %rs1097, 0;
	@%p32 bra 	$L__BB4_41;

	mov.u32 	%r11186, 0;
	mul.lo.s64 	%rd775, %rd29, 10;
	add.s64 	%rd777, %rd758, %rd775;
	mov.u32 	%r11187, %r11188;

$L__BB4_40:
	add.s32 	%r11188, %r11187, 1;
	cvt.s64.s32 	%rd772, %r11187;
	add.s64 	%rd773, %rd15507, %rd772;
	st.local.u8 	[%rd773], %rs1097;
	add.s32 	%r11186, %r11186, 1;
	cvt.s64.s32 	%rd774, %r11186;
	add.s64 	%rd778, %rd777, %rd774;
	ld.const.u8 	%rs1097, [%rd778];
	setp.ne.s16 	%p33, %rs1097, 0;
	mov.u32 	%r11187, %r11188;
	@%p33 bra 	$L__BB4_40;

$L__BB4_41:
	add.s32 	%r11191, %r11188, 1;
	cvt.s64.s32 	%rd779, %r11188;
	add.s64 	%rd780, %rd15507, %rd779;
	st.local.u8 	[%rd780], %rs213;
	ld.local.u32 	%r2476, [%rd4+8];
	cvt.s64.s32 	%rd30, %r2476;
	mul.wide.s32 	%rd781, %r2476, 10;
	add.s64 	%rd783, %rd758, %rd781;
	ld.const.u8 	%rs1098, [%rd783];
	setp.eq.s16 	%p34, %rs1098, 0;
	@%p34 bra 	$L__BB4_44;

	mov.u32 	%r11189, 0;
	mul.lo.s64 	%rd787, %rd30, 10;
	add.s64 	%rd789, %rd758, %rd787;
	mov.u32 	%r11190, %r11191;

$L__BB4_43:
	add.s32 	%r11191, %r11190, 1;
	cvt.s64.s32 	%rd784, %r11190;
	add.s64 	%rd785, %rd15507, %rd784;
	st.local.u8 	[%rd785], %rs1098;
	add.s32 	%r11189, %r11189, 1;
	cvt.s64.s32 	%rd786, %r11189;
	add.s64 	%rd790, %rd789, %rd786;
	ld.const.u8 	%rs1098, [%rd790];
	setp.ne.s16 	%p35, %rs1098, 0;
	mov.u32 	%r11190, %r11191;
	@%p35 bra 	$L__BB4_43;

$L__BB4_44:
	add.s32 	%r11194, %r11191, 1;
	cvt.s64.s32 	%rd791, %r11191;
	add.s64 	%rd792, %rd15507, %rd791;
	mov.u16 	%rs215, 32;
	st.local.u8 	[%rd792], %rs215;
	ld.local.u32 	%r2478, [%rd4+12];
	cvt.s64.s32 	%rd31, %r2478;
	mul.wide.s32 	%rd793, %r2478, 10;
	add.s64 	%rd795, %rd758, %rd793;
	ld.const.u8 	%rs1099, [%rd795];
	setp.eq.s16 	%p36, %rs1099, 0;
	@%p36 bra 	$L__BB4_47;

	mov.u32 	%r11192, 0;
	mul.lo.s64 	%rd799, %rd31, 10;
	add.s64 	%rd801, %rd758, %rd799;
	mov.u32 	%r11193, %r11194;

$L__BB4_46:
	add.s32 	%r11194, %r11193, 1;
	cvt.s64.s32 	%rd796, %r11193;
	add.s64 	%rd797, %rd15507, %rd796;
	st.local.u8 	[%rd797], %rs1099;
	add.s32 	%r11192, %r11192, 1;
	cvt.s64.s32 	%rd798, %r11192;
	add.s64 	%rd802, %rd801, %rd798;
	ld.const.u8 	%rs1099, [%rd802];
	setp.ne.s16 	%p37, %rs1099, 0;
	mov.u32 	%r11193, %r11194;
	@%p37 bra 	$L__BB4_46;

$L__BB4_47:
	add.s32 	%r11197, %r11194, 1;
	cvt.s64.s32 	%rd803, %r11194;
	add.s64 	%rd804, %rd15507, %rd803;
	st.local.u8 	[%rd804], %rs215;
	ld.local.u32 	%r2480, [%rd4+16];
	cvt.s64.s32 	%rd32, %r2480;
	mul.wide.s32 	%rd805, %r2480, 10;
	add.s64 	%rd807, %rd758, %rd805;
	ld.const.u8 	%rs1100, [%rd807];
	setp.eq.s16 	%p38, %rs1100, 0;
	@%p38 bra 	$L__BB4_50;

	mov.u32 	%r11195, 0;
	mul.lo.s64 	%rd811, %rd32, 10;
	add.s64 	%rd813, %rd758, %rd811;
	mov.u32 	%r11196, %r11197;

$L__BB4_49:
	add.s32 	%r11197, %r11196, 1;
	cvt.s64.s32 	%rd808, %r11196;
	add.s64 	%rd809, %rd15507, %rd808;
	st.local.u8 	[%rd809], %rs1100;
	add.s32 	%r11195, %r11195, 1;
	cvt.s64.s32 	%rd810, %r11195;
	add.s64 	%rd814, %rd813, %rd810;
	ld.const.u8 	%rs1100, [%rd814];
	setp.ne.s16 	%p39, %rs1100, 0;
	mov.u32 	%r11196, %r11197;
	@%p39 bra 	$L__BB4_49;

$L__BB4_50:
	add.s32 	%r11200, %r11197, 1;
	cvt.s64.s32 	%rd815, %r11197;
	add.s64 	%rd816, %rd15507, %rd815;
	mov.u16 	%rs217, 32;
	st.local.u8 	[%rd816], %rs217;
	ld.local.u32 	%r2482, [%rd4+20];
	cvt.s64.s32 	%rd33, %r2482;
	mul.wide.s32 	%rd817, %r2482, 10;
	add.s64 	%rd819, %rd758, %rd817;
	ld.const.u8 	%rs1101, [%rd819];
	setp.eq.s16 	%p40, %rs1101, 0;
	@%p40 bra 	$L__BB4_53;

	mov.u32 	%r11198, 0;
	mul.lo.s64 	%rd823, %rd33, 10;
	add.s64 	%rd825, %rd758, %rd823;
	mov.u32 	%r11199, %r11200;

$L__BB4_52:
	add.s32 	%r11200, %r11199, 1;
	cvt.s64.s32 	%rd820, %r11199;
	add.s64 	%rd821, %rd15507, %rd820;
	st.local.u8 	[%rd821], %rs1101;
	add.s32 	%r11198, %r11198, 1;
	cvt.s64.s32 	%rd822, %r11198;
	add.s64 	%rd826, %rd825, %rd822;
	ld.const.u8 	%rs1101, [%rd826];
	setp.ne.s16 	%p41, %rs1101, 0;
	mov.u32 	%r11199, %r11200;
	@%p41 bra 	$L__BB4_52;

$L__BB4_53:
	add.s32 	%r11203, %r11200, 1;
	cvt.s64.s32 	%rd827, %r11200;
	add.s64 	%rd828, %rd15507, %rd827;
	st.local.u8 	[%rd828], %rs217;
	ld.local.u32 	%r2484, [%rd4+24];
	cvt.s64.s32 	%rd34, %r2484;
	mul.wide.s32 	%rd829, %r2484, 10;
	add.s64 	%rd831, %rd758, %rd829;
	ld.const.u8 	%rs1102, [%rd831];
	setp.eq.s16 	%p42, %rs1102, 0;
	@%p42 bra 	$L__BB4_56;

	mov.u32 	%r11201, 0;
	mul.lo.s64 	%rd835, %rd34, 10;
	add.s64 	%rd837, %rd758, %rd835;
	mov.u32 	%r11202, %r11203;

$L__BB4_55:
	add.s32 	%r11203, %r11202, 1;
	cvt.s64.s32 	%rd832, %r11202;
	add.s64 	%rd833, %rd15507, %rd832;
	st.local.u8 	[%rd833], %rs1102;
	add.s32 	%r11201, %r11201, 1;
	cvt.s64.s32 	%rd834, %r11201;
	add.s64 	%rd838, %rd837, %rd834;
	ld.const.u8 	%rs1102, [%rd838];
	setp.ne.s16 	%p43, %rs1102, 0;
	mov.u32 	%r11202, %r11203;
	@%p43 bra 	$L__BB4_55;

$L__BB4_56:
	add.s32 	%r11206, %r11203, 1;
	cvt.s64.s32 	%rd839, %r11203;
	add.s64 	%rd840, %rd15507, %rd839;
	mov.u16 	%rs219, 32;
	st.local.u8 	[%rd840], %rs219;
	ld.local.u32 	%r2486, [%rd4+28];
	cvt.s64.s32 	%rd35, %r2486;
	mul.wide.s32 	%rd841, %r2486, 10;
	add.s64 	%rd843, %rd758, %rd841;
	ld.const.u8 	%rs1103, [%rd843];
	setp.eq.s16 	%p44, %rs1103, 0;
	@%p44 bra 	$L__BB4_59;

	mov.u32 	%r11204, 0;
	mul.lo.s64 	%rd847, %rd35, 10;
	add.s64 	%rd849, %rd758, %rd847;
	mov.u32 	%r11205, %r11206;

$L__BB4_58:
	add.s32 	%r11206, %r11205, 1;
	cvt.s64.s32 	%rd844, %r11205;
	add.s64 	%rd845, %rd15507, %rd844;
	st.local.u8 	[%rd845], %rs1103;
	add.s32 	%r11204, %r11204, 1;
	cvt.s64.s32 	%rd846, %r11204;
	add.s64 	%rd850, %rd849, %rd846;
	ld.const.u8 	%rs1103, [%rd850];
	setp.ne.s16 	%p45, %rs1103, 0;
	mov.u32 	%r11205, %r11206;
	@%p45 bra 	$L__BB4_58;

$L__BB4_59:
	add.s32 	%r11209, %r11206, 1;
	cvt.s64.s32 	%rd851, %r11206;
	add.s64 	%rd852, %rd15507, %rd851;
	st.local.u8 	[%rd852], %rs219;
	ld.local.u32 	%r2488, [%rd4+32];
	cvt.s64.s32 	%rd36, %r2488;
	mul.wide.s32 	%rd853, %r2488, 10;
	add.s64 	%rd855, %rd758, %rd853;
	ld.const.u8 	%rs1104, [%rd855];
	setp.eq.s16 	%p46, %rs1104, 0;
	@%p46 bra 	$L__BB4_62;

	mov.u32 	%r11207, 0;
	mul.lo.s64 	%rd859, %rd36, 10;
	add.s64 	%rd861, %rd758, %rd859;
	mov.u32 	%r11208, %r11209;

$L__BB4_61:
	add.s32 	%r11209, %r11208, 1;
	cvt.s64.s32 	%rd856, %r11208;
	add.s64 	%rd857, %rd15507, %rd856;
	st.local.u8 	[%rd857], %rs1104;
	add.s32 	%r11207, %r11207, 1;
	cvt.s64.s32 	%rd858, %r11207;
	add.s64 	%rd862, %rd861, %rd858;
	ld.const.u8 	%rs1104, [%rd862];
	setp.ne.s16 	%p47, %rs1104, 0;
	mov.u32 	%r11208, %r11209;
	@%p47 bra 	$L__BB4_61;

$L__BB4_62:
	add.s32 	%r11212, %r11209, 1;
	cvt.s64.s32 	%rd863, %r11209;
	add.s64 	%rd864, %rd15507, %rd863;
	mov.u16 	%rs221, 32;
	st.local.u8 	[%rd864], %rs221;
	ld.local.u32 	%r2490, [%rd4+36];
	cvt.s64.s32 	%rd37, %r2490;
	mul.wide.s32 	%rd865, %r2490, 10;
	add.s64 	%rd867, %rd758, %rd865;
	ld.const.u8 	%rs1105, [%rd867];
	setp.eq.s16 	%p48, %rs1105, 0;
	@%p48 bra 	$L__BB4_65;

	mov.u32 	%r11210, 0;
	mul.lo.s64 	%rd871, %rd37, 10;
	add.s64 	%rd873, %rd758, %rd871;
	mov.u32 	%r11211, %r11212;

$L__BB4_64:
	add.s32 	%r11212, %r11211, 1;
	cvt.s64.s32 	%rd868, %r11211;
	add.s64 	%rd869, %rd15507, %rd868;
	st.local.u8 	[%rd869], %rs1105;
	add.s32 	%r11210, %r11210, 1;
	cvt.s64.s32 	%rd870, %r11210;
	add.s64 	%rd874, %rd873, %rd870;
	ld.const.u8 	%rs1105, [%rd874];
	setp.ne.s16 	%p49, %rs1105, 0;
	mov.u32 	%r11211, %r11212;
	@%p49 bra 	$L__BB4_64;

$L__BB4_65:
	add.s32 	%r11215, %r11212, 1;
	cvt.s64.s32 	%rd875, %r11212;
	add.s64 	%rd876, %rd15507, %rd875;
	st.local.u8 	[%rd876], %rs221;
	ld.local.u32 	%r2492, [%rd4+40];
	cvt.s64.s32 	%rd38, %r2492;
	mul.wide.s32 	%rd877, %r2492, 10;
	add.s64 	%rd879, %rd758, %rd877;
	ld.const.u8 	%rs1106, [%rd879];
	setp.eq.s16 	%p50, %rs1106, 0;
	@%p50 bra 	$L__BB4_68;

	mov.u32 	%r11213, 0;
	mul.lo.s64 	%rd883, %rd38, 10;
	add.s64 	%rd885, %rd758, %rd883;
	mov.u32 	%r11214, %r11215;

$L__BB4_67:
	add.s32 	%r11215, %r11214, 1;
	cvt.s64.s32 	%rd880, %r11214;
	add.s64 	%rd881, %rd15507, %rd880;
	st.local.u8 	[%rd881], %rs1106;
	add.s32 	%r11213, %r11213, 1;
	cvt.s64.s32 	%rd882, %r11213;
	add.s64 	%rd886, %rd885, %rd882;
	ld.const.u8 	%rs1106, [%rd886];
	setp.ne.s16 	%p51, %rs1106, 0;
	mov.u32 	%r11214, %r11215;
	@%p51 bra 	$L__BB4_67;

$L__BB4_68:
	add.s32 	%r11218, %r11215, 1;
	cvt.s64.s32 	%rd887, %r11215;
	add.s64 	%rd888, %rd15507, %rd887;
	mov.u16 	%rs223, 32;
	st.local.u8 	[%rd888], %rs223;
	ld.local.u32 	%r2494, [%rd4+44];
	cvt.s64.s32 	%rd39, %r2494;
	mul.wide.s32 	%rd889, %r2494, 10;
	add.s64 	%rd891, %rd758, %rd889;
	ld.const.u8 	%rs1107, [%rd891];
	setp.eq.s16 	%p52, %rs1107, 0;
	@%p52 bra 	$L__BB4_71;

	mov.u32 	%r11216, 0;
	mul.lo.s64 	%rd895, %rd39, 10;
	add.s64 	%rd897, %rd758, %rd895;
	mov.u32 	%r11217, %r11218;

$L__BB4_70:
	add.s32 	%r11218, %r11217, 1;
	cvt.s64.s32 	%rd892, %r11217;
	add.s64 	%rd893, %rd15507, %rd892;
	st.local.u8 	[%rd893], %rs1107;
	add.s32 	%r11216, %r11216, 1;
	cvt.s64.s32 	%rd894, %r11216;
	add.s64 	%rd898, %rd897, %rd894;
	ld.const.u8 	%rs1107, [%rd898];
	setp.ne.s16 	%p53, %rs1107, 0;
	mov.u32 	%r11217, %r11218;
	@%p53 bra 	$L__BB4_70;

$L__BB4_71:
	cvt.s64.s32 	%rd900, %r11218;
	add.s64 	%rd901, %rd15507, %rd900;
	mov.u64 	%rd15505, 0;
	mov.u16 	%rs224, 0;
	st.local.u8 	[%rd901], %rs224;
	mov.u64 	%rd902, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2497}, %rd902;
	}
	shf.r.wrap.b32 	%r2498, %r2497, %r2496, 18;
	shf.r.wrap.b32 	%r2499, %r2496, %r2497, 18;
	mov.b64 	%rd903, {%r2499, %r2498};
	shf.r.wrap.b32 	%r2500, %r2497, %r2496, 14;
	shf.r.wrap.b32 	%r2501, %r2496, %r2497, 14;
	mov.b64 	%rd904, {%r2501, %r2500};
	xor.b64  	%rd905, %rd904, %rd903;
	shf.l.wrap.b32 	%r2502, %r2496, %r2497, 23;
	shf.l.wrap.b32 	%r2503, %r2497, %r2496, 23;
	mov.b64 	%rd906, {%r2503, %r2502};
	xor.b64  	%rd907, %rd905, %rd906;
	ld.const.u64 	%rd908, [K];
	add.s64 	%rd909, %rd907, %rd908;
	add.s64 	%rd40, %rd909, 8891960152096595636;
	mov.u64 	%rd910, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2504}, %rd910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2505,%dummy}, %rd910;
	}
	shf.l.wrap.b32 	%r2506, %r2505, %r2504, 30;
	shf.l.wrap.b32 	%r2507, %r2504, %r2505, 30;
	mov.b64 	%rd911, {%r2507, %r2506};
	shf.r.wrap.b32 	%r2508, %r2504, %r2505, 28;
	shf.r.wrap.b32 	%r2509, %r2505, %r2504, 28;
	mov.b64 	%rd912, {%r2509, %r2508};
	xor.b64  	%rd913, %rd912, %rd911;
	shf.l.wrap.b32 	%r2510, %r2505, %r2504, 25;
	shf.l.wrap.b32 	%r2511, %r2504, %r2505, 25;
	mov.b64 	%rd914, {%r2511, %r2510};
	xor.b64  	%rd915, %rd913, %rd914;
	ld.const.u64 	%rd41, [K+8];
	ld.const.u64 	%rd42, [K+16];
	ld.const.u64 	%rd43, [K+24];
	ld.const.u64 	%rd44, [K+32];
	ld.const.u64 	%rd45, [K+40];
	ld.const.u64 	%rd46, [K+48];
	ld.const.u64 	%rd47, [K+56];
	ld.const.u64 	%rd48, [K+64];
	ld.const.u64 	%rd49, [K+72];
	ld.const.u64 	%rd50, [K+80];
	ld.const.u64 	%rd51, [K+88];
	ld.const.u64 	%rd52, [K+96];
	ld.const.u64 	%rd53, [K+104];
	ld.const.u64 	%rd54, [K+112];
	ld.const.u64 	%rd55, [K+120];
	ld.const.u64 	%rd56, [K+128];
	ld.const.u64 	%rd57, [K+136];
	ld.const.u64 	%rd58, [K+144];
	ld.const.u64 	%rd59, [K+152];
	ld.const.u64 	%rd60, [K+160];
	ld.const.u64 	%rd61, [K+168];
	ld.const.u64 	%rd62, [K+176];
	ld.const.u64 	%rd63, [K+184];
	ld.const.u64 	%rd64, [K+192];
	ld.const.u64 	%rd65, [K+200];
	ld.const.u64 	%rd66, [K+208];
	ld.const.u64 	%rd67, [K+216];
	ld.const.u64 	%rd68, [K+224];
	ld.const.u64 	%rd69, [K+232];
	ld.const.u64 	%rd70, [K+240];
	ld.const.u64 	%rd71, [K+248];
	ld.const.u64 	%rd72, [K+256];
	ld.const.u64 	%rd73, [K+264];
	ld.const.u64 	%rd74, [K+272];
	ld.const.u64 	%rd75, [K+280];
	ld.const.u64 	%rd76, [K+288];
	ld.const.u64 	%rd77, [K+296];
	ld.const.u64 	%rd78, [K+304];
	ld.const.u64 	%rd79, [K+312];
	ld.const.u64 	%rd80, [K+320];
	ld.const.u64 	%rd81, [K+328];
	ld.const.u64 	%rd82, [K+336];
	ld.const.u64 	%rd83, [K+344];
	ld.const.u64 	%rd84, [K+352];
	ld.const.u64 	%rd85, [K+360];
	ld.const.u64 	%rd86, [K+368];
	ld.const.u64 	%rd87, [K+376];
	ld.const.u64 	%rd88, [K+384];
	ld.const.u64 	%rd89, [K+392];
	ld.const.u64 	%rd90, [K+400];
	ld.const.u64 	%rd91, [K+408];
	ld.const.u64 	%rd92, [K+416];
	ld.const.u64 	%rd93, [K+424];
	ld.const.u64 	%rd94, [K+432];
	ld.const.u64 	%rd95, [K+440];
	ld.const.u64 	%rd96, [K+448];
	ld.const.u64 	%rd97, [K+456];
	ld.const.u64 	%rd98, [K+464];
	ld.const.u64 	%rd99, [K+472];
	ld.const.u64 	%rd100, [K+480];
	ld.const.u64 	%rd101, [K+488];
	ld.const.u64 	%rd102, [K+496];
	ld.const.u64 	%rd103, [K+504];
	ld.const.u64 	%rd104, [K+512];
	ld.const.u64 	%rd105, [K+520];
	ld.const.u64 	%rd106, [K+528];
	ld.const.u64 	%rd107, [K+536];
	ld.const.u64 	%rd108, [K+544];
	ld.const.u64 	%rd109, [K+552];
	ld.const.u64 	%rd110, [K+560];
	ld.const.u64 	%rd15510, [K+568];
	ld.const.u64 	%rd15509, [K+576];
	ld.const.u64 	%rd15508, [K+584];
	ld.const.u64 	%rd114, [K+592];
	ld.const.u64 	%rd115, [K+600];
	ld.const.u64 	%rd116, [K+608];
	ld.const.u64 	%rd117, [K+616];
	ld.const.u64 	%rd118, [K+624];
	ld.const.u64 	%rd119, [K+632];
	add.s64 	%rd120, %rd915, 4210837510808201515;

$L__BB4_72:
	add.s64 	%rd916, %rd2, %rd15505;
	st.local.u8 	[%rd916], %rs224;
	add.s64 	%rd15505, %rd15505, 1;
	setp.lt.u64 	%p54, %rd15505, 128;
	@%p54 bra 	$L__BB4_72;

	mov.u64 	%rd15506, 0;

$L__BB4_74:
	add.s64 	%rd918, %rd3, %rd15506;
	mov.u16 	%rs226, 0;
	st.local.u8 	[%rd918], %rs226;
	add.s64 	%rd15506, %rd15506, 1;
	setp.lt.u64 	%p55, %rd15506, 128;
	@%p55 bra 	$L__BB4_74;

	setp.lt.s32 	%p56, %r11218, 129;
	mov.u32 	%r11219, %r11218;
	@%p56 bra 	$L__BB4_77;

	ld.local.v4.u32 	{%r2513, %r2514, %r2515, %r2516}, [%rd15507];
	mov.b32 	{%rs227, %rs228}, %r2513;
	shr.u16 	%rs229, %rs227, 8;
	shr.u16 	%rs230, %rs228, 8;
	mov.b32 	{%rs231, %rs232}, %r2514;
	shr.u16 	%rs233, %rs231, 8;
	shr.u16 	%rs234, %rs232, 8;
	mov.b32 	{%rs235, %rs236}, %r2515;
	shr.u16 	%rs237, %rs235, 8;
	shr.u16 	%rs238, %rs236, 8;
	mov.b32 	{%rs239, %rs240}, %r2516;
	shr.u16 	%rs241, %rs239, 8;
	shr.u16 	%rs242, %rs240, 8;
	cvt.u64.u16 	%rd919, %rs227;
	shl.b64 	%rd920, %rd919, 56;
	cvt.u64.u16 	%rd921, %rs229;
	shl.b64 	%rd922, %rd921, 48;
	or.b64  	%rd923, %rd922, %rd920;
	cvt.u64.u16 	%rd924, %rs228;
	shl.b64 	%rd925, %rd924, 40;
	and.b64  	%rd926, %rd925, 280375465082880;
	or.b64  	%rd927, %rd923, %rd926;
	cvt.u64.u16 	%rd928, %rs230;
	shl.b64 	%rd929, %rd928, 32;
	or.b64  	%rd930, %rd927, %rd929;
	cvt.u32.u16 	%r2521, %rs231;
	and.b32  	%r2522, %r2521, 255;
	mul.wide.u32 	%rd931, %r2522, 16777216;
	or.b64  	%rd932, %rd930, %rd931;
	cvt.u32.u16 	%r2523, %rs233;
	mul.wide.u32 	%rd933, %r2523, 65536;
	or.b64  	%rd934, %rd932, %rd933;
	cvt.u32.u16 	%r2524, %rs232;
	and.b32  	%r2525, %r2524, 255;
	mul.wide.u32 	%rd935, %r2525, 256;
	or.b64  	%rd936, %rd934, %rd935;
	cvt.u64.u16 	%rd937, %rs234;
	or.b64  	%rd938, %rd936, %rd937;
	cvt.u64.u16 	%rd939, %rs235;
	shl.b64 	%rd940, %rd939, 56;
	cvt.u64.u16 	%rd941, %rs237;
	shl.b64 	%rd942, %rd941, 48;
	or.b64  	%rd943, %rd942, %rd940;
	cvt.u64.u16 	%rd944, %rs236;
	shl.b64 	%rd945, %rd944, 40;
	and.b64  	%rd946, %rd945, 280375465082880;
	or.b64  	%rd947, %rd943, %rd946;
	cvt.u64.u16 	%rd948, %rs238;
	shl.b64 	%rd949, %rd948, 32;
	or.b64  	%rd950, %rd947, %rd949;
	cvt.u32.u16 	%r2526, %rs239;
	and.b32  	%r2527, %r2526, 255;
	mul.wide.u32 	%rd951, %r2527, 16777216;
	or.b64  	%rd952, %rd950, %rd951;
	cvt.u32.u16 	%r2528, %rs241;
	mul.wide.u32 	%rd953, %r2528, 65536;
	or.b64  	%rd954, %rd952, %rd953;
	cvt.u32.u16 	%r2529, %rs240;
	and.b32  	%r2530, %r2529, 255;
	mul.wide.u32 	%rd955, %r2530, 256;
	or.b64  	%rd956, %rd954, %rd955;
	cvt.u64.u16 	%rd957, %rs242;
	or.b64  	%rd958, %rd956, %rd957;
	ld.local.v4.u32 	{%r2531, %r2532, %r2533, %r2534}, [%rd15507+16];
	mov.b32 	{%rs243, %rs244}, %r2531;
	shr.u16 	%rs245, %rs243, 8;
	shr.u16 	%rs246, %rs244, 8;
	mov.b32 	{%rs247, %rs248}, %r2532;
	shr.u16 	%rs249, %rs247, 8;
	shr.u16 	%rs250, %rs248, 8;
	mov.b32 	{%rs251, %rs252}, %r2533;
	shr.u16 	%rs253, %rs251, 8;
	shr.u16 	%rs254, %rs252, 8;
	mov.b32 	{%rs255, %rs256}, %r2534;
	shr.u16 	%rs257, %rs255, 8;
	shr.u16 	%rs258, %rs256, 8;
	cvt.u64.u16 	%rd959, %rs243;
	shl.b64 	%rd960, %rd959, 56;
	cvt.u64.u16 	%rd961, %rs245;
	shl.b64 	%rd962, %rd961, 48;
	or.b64  	%rd963, %rd962, %rd960;
	cvt.u64.u16 	%rd964, %rs244;
	shl.b64 	%rd965, %rd964, 40;
	and.b64  	%rd966, %rd965, 280375465082880;
	or.b64  	%rd967, %rd963, %rd966;
	cvt.u64.u16 	%rd968, %rs246;
	shl.b64 	%rd969, %rd968, 32;
	or.b64  	%rd970, %rd967, %rd969;
	cvt.u32.u16 	%r2539, %rs247;
	and.b32  	%r2540, %r2539, 255;
	mul.wide.u32 	%rd971, %r2540, 16777216;
	or.b64  	%rd972, %rd970, %rd971;
	cvt.u32.u16 	%r2541, %rs249;
	mul.wide.u32 	%rd973, %r2541, 65536;
	or.b64  	%rd974, %rd972, %rd973;
	cvt.u32.u16 	%r2542, %rs248;
	and.b32  	%r2543, %r2542, 255;
	mul.wide.u32 	%rd975, %r2543, 256;
	or.b64  	%rd976, %rd974, %rd975;
	cvt.u64.u16 	%rd977, %rs250;
	or.b64  	%rd978, %rd976, %rd977;
	cvt.u64.u16 	%rd979, %rs251;
	shl.b64 	%rd980, %rd979, 56;
	cvt.u64.u16 	%rd981, %rs253;
	shl.b64 	%rd982, %rd981, 48;
	or.b64  	%rd983, %rd982, %rd980;
	cvt.u64.u16 	%rd984, %rs252;
	shl.b64 	%rd985, %rd984, 40;
	and.b64  	%rd986, %rd985, 280375465082880;
	or.b64  	%rd987, %rd983, %rd986;
	cvt.u64.u16 	%rd988, %rs254;
	shl.b64 	%rd989, %rd988, 32;
	or.b64  	%rd990, %rd987, %rd989;
	cvt.u32.u16 	%r2544, %rs255;
	and.b32  	%r2545, %r2544, 255;
	mul.wide.u32 	%rd991, %r2545, 16777216;
	or.b64  	%rd992, %rd990, %rd991;
	cvt.u32.u16 	%r2546, %rs257;
	mul.wide.u32 	%rd993, %r2546, 65536;
	or.b64  	%rd994, %rd992, %rd993;
	cvt.u32.u16 	%r2547, %rs256;
	and.b32  	%r2548, %r2547, 255;
	mul.wide.u32 	%rd995, %r2548, 256;
	or.b64  	%rd996, %rd994, %rd995;
	cvt.u64.u16 	%rd997, %rs258;
	or.b64  	%rd998, %rd996, %rd997;
	ld.local.v4.u32 	{%r2549, %r2550, %r2551, %r2552}, [%rd15507+32];
	mov.b32 	{%rs259, %rs260}, %r2549;
	shr.u16 	%rs261, %rs259, 8;
	shr.u16 	%rs262, %rs260, 8;
	mov.b32 	{%rs263, %rs264}, %r2550;
	shr.u16 	%rs265, %rs263, 8;
	shr.u16 	%rs266, %rs264, 8;
	mov.b32 	{%rs267, %rs268}, %r2551;
	shr.u16 	%rs269, %rs267, 8;
	shr.u16 	%rs270, %rs268, 8;
	mov.b32 	{%rs271, %rs272}, %r2552;
	shr.u16 	%rs273, %rs271, 8;
	shr.u16 	%rs274, %rs272, 8;
	cvt.u64.u16 	%rd999, %rs259;
	shl.b64 	%rd1000, %rd999, 56;
	cvt.u64.u16 	%rd1001, %rs261;
	shl.b64 	%rd1002, %rd1001, 48;
	or.b64  	%rd1003, %rd1002, %rd1000;
	cvt.u64.u16 	%rd1004, %rs260;
	shl.b64 	%rd1005, %rd1004, 40;
	and.b64  	%rd1006, %rd1005, 280375465082880;
	or.b64  	%rd1007, %rd1003, %rd1006;
	cvt.u64.u16 	%rd1008, %rs262;
	shl.b64 	%rd1009, %rd1008, 32;
	or.b64  	%rd1010, %rd1007, %rd1009;
	cvt.u32.u16 	%r2557, %rs263;
	and.b32  	%r2558, %r2557, 255;
	mul.wide.u32 	%rd1011, %r2558, 16777216;
	or.b64  	%rd1012, %rd1010, %rd1011;
	cvt.u32.u16 	%r2559, %rs265;
	mul.wide.u32 	%rd1013, %r2559, 65536;
	or.b64  	%rd1014, %rd1012, %rd1013;
	cvt.u32.u16 	%r2560, %rs264;
	and.b32  	%r2561, %r2560, 255;
	mul.wide.u32 	%rd1015, %r2561, 256;
	or.b64  	%rd1016, %rd1014, %rd1015;
	cvt.u64.u16 	%rd1017, %rs266;
	or.b64  	%rd1018, %rd1016, %rd1017;
	cvt.u64.u16 	%rd1019, %rs267;
	shl.b64 	%rd1020, %rd1019, 56;
	cvt.u64.u16 	%rd1021, %rs269;
	shl.b64 	%rd1022, %rd1021, 48;
	or.b64  	%rd1023, %rd1022, %rd1020;
	cvt.u64.u16 	%rd1024, %rs268;
	shl.b64 	%rd1025, %rd1024, 40;
	and.b64  	%rd1026, %rd1025, 280375465082880;
	or.b64  	%rd1027, %rd1023, %rd1026;
	cvt.u64.u16 	%rd1028, %rs270;
	shl.b64 	%rd1029, %rd1028, 32;
	or.b64  	%rd1030, %rd1027, %rd1029;
	cvt.u32.u16 	%r2562, %rs271;
	and.b32  	%r2563, %r2562, 255;
	mul.wide.u32 	%rd1031, %r2563, 16777216;
	or.b64  	%rd1032, %rd1030, %rd1031;
	cvt.u32.u16 	%r2564, %rs273;
	mul.wide.u32 	%rd1033, %r2564, 65536;
	or.b64  	%rd1034, %rd1032, %rd1033;
	cvt.u32.u16 	%r2565, %rs272;
	and.b32  	%r2566, %r2565, 255;
	mul.wide.u32 	%rd1035, %r2566, 256;
	or.b64  	%rd1036, %rd1034, %rd1035;
	cvt.u64.u16 	%rd1037, %rs274;
	or.b64  	%rd1038, %rd1036, %rd1037;
	ld.local.v4.u32 	{%r2567, %r2568, %r2569, %r2570}, [%rd15507+48];
	mov.b32 	{%rs275, %rs276}, %r2567;
	shr.u16 	%rs277, %rs275, 8;
	shr.u16 	%rs278, %rs276, 8;
	mov.b32 	{%rs279, %rs280}, %r2568;
	shr.u16 	%rs281, %rs279, 8;
	shr.u16 	%rs282, %rs280, 8;
	mov.b32 	{%rs283, %rs284}, %r2569;
	shr.u16 	%rs285, %rs283, 8;
	shr.u16 	%rs286, %rs284, 8;
	mov.b32 	{%rs287, %rs288}, %r2570;
	shr.u16 	%rs289, %rs287, 8;
	shr.u16 	%rs290, %rs288, 8;
	cvt.u64.u16 	%rd1039, %rs275;
	shl.b64 	%rd1040, %rd1039, 56;
	cvt.u64.u16 	%rd1041, %rs277;
	shl.b64 	%rd1042, %rd1041, 48;
	or.b64  	%rd1043, %rd1042, %rd1040;
	cvt.u64.u16 	%rd1044, %rs276;
	shl.b64 	%rd1045, %rd1044, 40;
	and.b64  	%rd1046, %rd1045, 280375465082880;
	or.b64  	%rd1047, %rd1043, %rd1046;
	cvt.u64.u16 	%rd1048, %rs278;
	shl.b64 	%rd1049, %rd1048, 32;
	or.b64  	%rd1050, %rd1047, %rd1049;
	cvt.u32.u16 	%r2575, %rs279;
	and.b32  	%r2576, %r2575, 255;
	mul.wide.u32 	%rd1051, %r2576, 16777216;
	or.b64  	%rd1052, %rd1050, %rd1051;
	cvt.u32.u16 	%r2577, %rs281;
	mul.wide.u32 	%rd1053, %r2577, 65536;
	or.b64  	%rd1054, %rd1052, %rd1053;
	cvt.u32.u16 	%r2578, %rs280;
	and.b32  	%r2579, %r2578, 255;
	mul.wide.u32 	%rd1055, %r2579, 256;
	or.b64  	%rd1056, %rd1054, %rd1055;
	cvt.u64.u16 	%rd1057, %rs282;
	or.b64  	%rd1058, %rd1056, %rd1057;
	cvt.u64.u16 	%rd1059, %rs283;
	shl.b64 	%rd1060, %rd1059, 56;
	cvt.u64.u16 	%rd1061, %rs285;
	shl.b64 	%rd1062, %rd1061, 48;
	or.b64  	%rd1063, %rd1062, %rd1060;
	cvt.u64.u16 	%rd1064, %rs284;
	shl.b64 	%rd1065, %rd1064, 40;
	and.b64  	%rd1066, %rd1065, 280375465082880;
	or.b64  	%rd1067, %rd1063, %rd1066;
	cvt.u64.u16 	%rd1068, %rs286;
	shl.b64 	%rd1069, %rd1068, 32;
	or.b64  	%rd1070, %rd1067, %rd1069;
	cvt.u32.u16 	%r2580, %rs287;
	and.b32  	%r2581, %r2580, 255;
	mul.wide.u32 	%rd1071, %r2581, 16777216;
	or.b64  	%rd1072, %rd1070, %rd1071;
	cvt.u32.u16 	%r2582, %rs289;
	mul.wide.u32 	%rd1073, %r2582, 65536;
	or.b64  	%rd1074, %rd1072, %rd1073;
	cvt.u32.u16 	%r2583, %rs288;
	and.b32  	%r2584, %r2583, 255;
	mul.wide.u32 	%rd1075, %r2584, 256;
	or.b64  	%rd1076, %rd1074, %rd1075;
	cvt.u64.u16 	%rd1077, %rs290;
	or.b64  	%rd1078, %rd1076, %rd1077;
	ld.local.v4.u32 	{%r2585, %r2586, %r2587, %r2588}, [%rd15507+64];
	mov.b32 	{%rs291, %rs292}, %r2585;
	shr.u16 	%rs293, %rs291, 8;
	shr.u16 	%rs294, %rs292, 8;
	mov.b32 	{%rs295, %rs296}, %r2586;
	shr.u16 	%rs297, %rs295, 8;
	shr.u16 	%rs298, %rs296, 8;
	mov.b32 	{%rs299, %rs300}, %r2587;
	shr.u16 	%rs301, %rs299, 8;
	shr.u16 	%rs302, %rs300, 8;
	mov.b32 	{%rs303, %rs304}, %r2588;
	shr.u16 	%rs305, %rs303, 8;
	shr.u16 	%rs306, %rs304, 8;
	cvt.u64.u16 	%rd1079, %rs291;
	shl.b64 	%rd1080, %rd1079, 56;
	cvt.u64.u16 	%rd1081, %rs293;
	shl.b64 	%rd1082, %rd1081, 48;
	or.b64  	%rd1083, %rd1082, %rd1080;
	cvt.u64.u16 	%rd1084, %rs292;
	shl.b64 	%rd1085, %rd1084, 40;
	and.b64  	%rd1086, %rd1085, 280375465082880;
	or.b64  	%rd1087, %rd1083, %rd1086;
	cvt.u64.u16 	%rd1088, %rs294;
	shl.b64 	%rd1089, %rd1088, 32;
	or.b64  	%rd1090, %rd1087, %rd1089;
	cvt.u32.u16 	%r2593, %rs295;
	and.b32  	%r2594, %r2593, 255;
	mul.wide.u32 	%rd1091, %r2594, 16777216;
	or.b64  	%rd1092, %rd1090, %rd1091;
	cvt.u32.u16 	%r2595, %rs297;
	mul.wide.u32 	%rd1093, %r2595, 65536;
	or.b64  	%rd1094, %rd1092, %rd1093;
	cvt.u32.u16 	%r2596, %rs296;
	and.b32  	%r2597, %r2596, 255;
	mul.wide.u32 	%rd1095, %r2597, 256;
	or.b64  	%rd1096, %rd1094, %rd1095;
	cvt.u64.u16 	%rd1097, %rs298;
	or.b64  	%rd1098, %rd1096, %rd1097;
	cvt.u64.u16 	%rd1099, %rs299;
	shl.b64 	%rd1100, %rd1099, 56;
	cvt.u64.u16 	%rd1101, %rs301;
	shl.b64 	%rd1102, %rd1101, 48;
	or.b64  	%rd1103, %rd1102, %rd1100;
	cvt.u64.u16 	%rd1104, %rs300;
	shl.b64 	%rd1105, %rd1104, 40;
	and.b64  	%rd1106, %rd1105, 280375465082880;
	or.b64  	%rd1107, %rd1103, %rd1106;
	cvt.u64.u16 	%rd1108, %rs302;
	shl.b64 	%rd1109, %rd1108, 32;
	or.b64  	%rd1110, %rd1107, %rd1109;
	cvt.u32.u16 	%r2598, %rs303;
	and.b32  	%r2599, %r2598, 255;
	mul.wide.u32 	%rd1111, %r2599, 16777216;
	or.b64  	%rd1112, %rd1110, %rd1111;
	cvt.u32.u16 	%r2600, %rs305;
	mul.wide.u32 	%rd1113, %r2600, 65536;
	or.b64  	%rd1114, %rd1112, %rd1113;
	cvt.u32.u16 	%r2601, %rs304;
	and.b32  	%r2602, %r2601, 255;
	mul.wide.u32 	%rd1115, %r2602, 256;
	or.b64  	%rd1116, %rd1114, %rd1115;
	cvt.u64.u16 	%rd1117, %rs306;
	or.b64  	%rd1118, %rd1116, %rd1117;
	ld.local.v4.u32 	{%r2603, %r2604, %r2605, %r2606}, [%rd15507+80];
	mov.b32 	{%rs307, %rs308}, %r2603;
	shr.u16 	%rs309, %rs307, 8;
	shr.u16 	%rs310, %rs308, 8;
	mov.b32 	{%rs311, %rs312}, %r2604;
	shr.u16 	%rs313, %rs311, 8;
	shr.u16 	%rs314, %rs312, 8;
	mov.b32 	{%rs315, %rs316}, %r2605;
	shr.u16 	%rs317, %rs315, 8;
	shr.u16 	%rs318, %rs316, 8;
	mov.b32 	{%rs319, %rs320}, %r2606;
	shr.u16 	%rs321, %rs319, 8;
	shr.u16 	%rs322, %rs320, 8;
	cvt.u64.u16 	%rd1119, %rs307;
	shl.b64 	%rd1120, %rd1119, 56;
	cvt.u64.u16 	%rd1121, %rs309;
	shl.b64 	%rd1122, %rd1121, 48;
	or.b64  	%rd1123, %rd1122, %rd1120;
	cvt.u64.u16 	%rd1124, %rs308;
	shl.b64 	%rd1125, %rd1124, 40;
	and.b64  	%rd1126, %rd1125, 280375465082880;
	or.b64  	%rd1127, %rd1123, %rd1126;
	cvt.u64.u16 	%rd1128, %rs310;
	shl.b64 	%rd1129, %rd1128, 32;
	or.b64  	%rd1130, %rd1127, %rd1129;
	cvt.u32.u16 	%r2611, %rs311;
	and.b32  	%r2612, %r2611, 255;
	mul.wide.u32 	%rd1131, %r2612, 16777216;
	or.b64  	%rd1132, %rd1130, %rd1131;
	cvt.u32.u16 	%r2613, %rs313;
	mul.wide.u32 	%rd1133, %r2613, 65536;
	or.b64  	%rd1134, %rd1132, %rd1133;
	cvt.u32.u16 	%r2614, %rs312;
	and.b32  	%r2615, %r2614, 255;
	mul.wide.u32 	%rd1135, %r2615, 256;
	or.b64  	%rd1136, %rd1134, %rd1135;
	cvt.u64.u16 	%rd1137, %rs314;
	or.b64  	%rd1138, %rd1136, %rd1137;
	cvt.u64.u16 	%rd1139, %rs315;
	shl.b64 	%rd1140, %rd1139, 56;
	cvt.u64.u16 	%rd1141, %rs317;
	shl.b64 	%rd1142, %rd1141, 48;
	or.b64  	%rd1143, %rd1142, %rd1140;
	cvt.u64.u16 	%rd1144, %rs316;
	shl.b64 	%rd1145, %rd1144, 40;
	and.b64  	%rd1146, %rd1145, 280375465082880;
	or.b64  	%rd1147, %rd1143, %rd1146;
	cvt.u64.u16 	%rd1148, %rs318;
	shl.b64 	%rd1149, %rd1148, 32;
	or.b64  	%rd1150, %rd1147, %rd1149;
	cvt.u32.u16 	%r2616, %rs319;
	and.b32  	%r2617, %r2616, 255;
	mul.wide.u32 	%rd1151, %r2617, 16777216;
	or.b64  	%rd1152, %rd1150, %rd1151;
	cvt.u32.u16 	%r2618, %rs321;
	mul.wide.u32 	%rd1153, %r2618, 65536;
	or.b64  	%rd1154, %rd1152, %rd1153;
	cvt.u32.u16 	%r2619, %rs320;
	and.b32  	%r2620, %r2619, 255;
	mul.wide.u32 	%rd1155, %r2620, 256;
	or.b64  	%rd1156, %rd1154, %rd1155;
	cvt.u64.u16 	%rd1157, %rs322;
	or.b64  	%rd1158, %rd1156, %rd1157;
	ld.local.v4.u32 	{%r2621, %r2622, %r2623, %r2624}, [%rd15507+96];
	mov.b32 	{%rs323, %rs324}, %r2621;
	shr.u16 	%rs325, %rs323, 8;
	shr.u16 	%rs326, %rs324, 8;
	mov.b32 	{%rs327, %rs328}, %r2622;
	shr.u16 	%rs329, %rs327, 8;
	shr.u16 	%rs330, %rs328, 8;
	mov.b32 	{%rs331, %rs332}, %r2623;
	shr.u16 	%rs333, %rs331, 8;
	shr.u16 	%rs334, %rs332, 8;
	mov.b32 	{%rs335, %rs336}, %r2624;
	shr.u16 	%rs337, %rs335, 8;
	shr.u16 	%rs338, %rs336, 8;
	cvt.u64.u16 	%rd1159, %rs323;
	shl.b64 	%rd1160, %rd1159, 56;
	cvt.u64.u16 	%rd1161, %rs325;
	shl.b64 	%rd1162, %rd1161, 48;
	or.b64  	%rd1163, %rd1162, %rd1160;
	cvt.u64.u16 	%rd1164, %rs324;
	shl.b64 	%rd1165, %rd1164, 40;
	and.b64  	%rd1166, %rd1165, 280375465082880;
	or.b64  	%rd1167, %rd1163, %rd1166;
	cvt.u64.u16 	%rd1168, %rs326;
	shl.b64 	%rd1169, %rd1168, 32;
	or.b64  	%rd1170, %rd1167, %rd1169;
	cvt.u32.u16 	%r2629, %rs327;
	and.b32  	%r2630, %r2629, 255;
	mul.wide.u32 	%rd1171, %r2630, 16777216;
	or.b64  	%rd1172, %rd1170, %rd1171;
	cvt.u32.u16 	%r2631, %rs329;
	mul.wide.u32 	%rd1173, %r2631, 65536;
	or.b64  	%rd1174, %rd1172, %rd1173;
	cvt.u32.u16 	%r2632, %rs328;
	and.b32  	%r2633, %r2632, 255;
	mul.wide.u32 	%rd1175, %r2633, 256;
	or.b64  	%rd1176, %rd1174, %rd1175;
	cvt.u64.u16 	%rd1177, %rs330;
	or.b64  	%rd1178, %rd1176, %rd1177;
	cvt.u64.u16 	%rd1179, %rs331;
	shl.b64 	%rd1180, %rd1179, 56;
	cvt.u64.u16 	%rd1181, %rs333;
	shl.b64 	%rd1182, %rd1181, 48;
	or.b64  	%rd1183, %rd1182, %rd1180;
	cvt.u64.u16 	%rd1184, %rs332;
	shl.b64 	%rd1185, %rd1184, 40;
	and.b64  	%rd1186, %rd1185, 280375465082880;
	or.b64  	%rd1187, %rd1183, %rd1186;
	cvt.u64.u16 	%rd1188, %rs334;
	shl.b64 	%rd1189, %rd1188, 32;
	or.b64  	%rd1190, %rd1187, %rd1189;
	cvt.u32.u16 	%r2634, %rs335;
	and.b32  	%r2635, %r2634, 255;
	mul.wide.u32 	%rd1191, %r2635, 16777216;
	or.b64  	%rd1192, %rd1190, %rd1191;
	cvt.u32.u16 	%r2636, %rs337;
	mul.wide.u32 	%rd1193, %r2636, 65536;
	or.b64  	%rd1194, %rd1192, %rd1193;
	cvt.u32.u16 	%r2637, %rs336;
	and.b32  	%r2638, %r2637, 255;
	mul.wide.u32 	%rd1195, %r2638, 256;
	or.b64  	%rd1196, %rd1194, %rd1195;
	cvt.u64.u16 	%rd1197, %rs338;
	or.b64  	%rd1198, %rd1196, %rd1197;
	ld.local.v4.u32 	{%r2639, %r2640, %r2641, %r2642}, [%rd15507+112];
	mov.b32 	{%rs339, %rs340}, %r2639;
	shr.u16 	%rs341, %rs339, 8;
	shr.u16 	%rs342, %rs340, 8;
	mov.b32 	{%rs343, %rs344}, %r2640;
	shr.u16 	%rs345, %rs343, 8;
	shr.u16 	%rs346, %rs344, 8;
	mov.b32 	{%rs347, %rs348}, %r2641;
	shr.u16 	%rs349, %rs347, 8;
	shr.u16 	%rs350, %rs348, 8;
	mov.b32 	{%rs351, %rs352}, %r2642;
	shr.u16 	%rs353, %rs351, 8;
	shr.u16 	%rs354, %rs352, 8;
	cvt.u64.u16 	%rd1199, %rs339;
	shl.b64 	%rd1200, %rd1199, 56;
	cvt.u64.u16 	%rd1201, %rs341;
	shl.b64 	%rd1202, %rd1201, 48;
	or.b64  	%rd1203, %rd1202, %rd1200;
	cvt.u64.u16 	%rd1204, %rs340;
	shl.b64 	%rd1205, %rd1204, 40;
	and.b64  	%rd1206, %rd1205, 280375465082880;
	or.b64  	%rd1207, %rd1203, %rd1206;
	cvt.u64.u16 	%rd1208, %rs342;
	shl.b64 	%rd1209, %rd1208, 32;
	or.b64  	%rd1210, %rd1207, %rd1209;
	cvt.u32.u16 	%r2647, %rs343;
	and.b32  	%r2648, %r2647, 255;
	mul.wide.u32 	%rd1211, %r2648, 16777216;
	or.b64  	%rd1212, %rd1210, %rd1211;
	cvt.u32.u16 	%r2649, %rs345;
	mul.wide.u32 	%rd1213, %r2649, 65536;
	or.b64  	%rd1214, %rd1212, %rd1213;
	cvt.u32.u16 	%r2650, %rs344;
	and.b32  	%r2651, %r2650, 255;
	mul.wide.u32 	%rd1215, %r2651, 256;
	or.b64  	%rd1216, %rd1214, %rd1215;
	cvt.u64.u16 	%rd1217, %rs346;
	or.b64  	%rd1218, %rd1216, %rd1217;
	cvt.u64.u16 	%rd1219, %rs347;
	shl.b64 	%rd1220, %rd1219, 56;
	cvt.u64.u16 	%rd1221, %rs349;
	shl.b64 	%rd1222, %rd1221, 48;
	or.b64  	%rd1223, %rd1222, %rd1220;
	cvt.u64.u16 	%rd1224, %rs348;
	shl.b64 	%rd1225, %rd1224, 40;
	and.b64  	%rd1226, %rd1225, 280375465082880;
	or.b64  	%rd1227, %rd1223, %rd1226;
	cvt.u64.u16 	%rd1228, %rs350;
	shl.b64 	%rd1229, %rd1228, 32;
	or.b64  	%rd1230, %rd1227, %rd1229;
	cvt.u32.u16 	%r2652, %rs351;
	and.b32  	%r2653, %r2652, 255;
	mul.wide.u32 	%rd1231, %r2653, 16777216;
	or.b64  	%rd1232, %rd1230, %rd1231;
	cvt.u32.u16 	%r2654, %rs353;
	mul.wide.u32 	%rd1233, %r2654, 65536;
	or.b64  	%rd1234, %rd1232, %rd1233;
	cvt.u32.u16 	%r2655, %rs352;
	and.b32  	%r2656, %r2655, 255;
	mul.wide.u32 	%rd1235, %r2656, 256;
	or.b64  	%rd1236, %rd1234, %rd1235;
	cvt.u64.u16 	%rd1237, %rs354;
	or.b64  	%rd1238, %rd1236, %rd1237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2657,%dummy}, %rd958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2658}, %rd958;
	}
	shf.r.wrap.b32 	%r2659, %r2658, %r2657, 1;
	shf.r.wrap.b32 	%r2660, %r2657, %r2658, 1;
	mov.b64 	%rd1239, {%r2660, %r2659};
	shf.r.wrap.b32 	%r2661, %r2658, %r2657, 8;
	shf.r.wrap.b32 	%r2662, %r2657, %r2658, 8;
	mov.b64 	%rd1240, {%r2662, %r2661};
	xor.b64  	%rd1241, %rd1239, %rd1240;
	shr.u64 	%rd1242, %rd958, 7;
	xor.b64  	%rd1243, %rd1241, %rd1242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2663,%dummy}, %rd1218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2664}, %rd1218;
	}
	shf.r.wrap.b32 	%r2665, %r2664, %r2663, 19;
	shf.r.wrap.b32 	%r2666, %r2663, %r2664, 19;
	mov.b64 	%rd1244, {%r2666, %r2665};
	shf.l.wrap.b32 	%r2667, %r2663, %r2664, 3;
	shf.l.wrap.b32 	%r2668, %r2664, %r2663, 3;
	mov.b64 	%rd1245, {%r2668, %r2667};
	xor.b64  	%rd1246, %rd1244, %rd1245;
	shr.u64 	%rd1247, %rd1218, 6;
	xor.b64  	%rd1248, %rd1246, %rd1247;
	add.s64 	%rd1249, %rd1243, %rd938;
	add.s64 	%rd1250, %rd1249, %rd1118;
	add.s64 	%rd1251, %rd1250, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2669,%dummy}, %rd978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2670}, %rd978;
	}
	shf.r.wrap.b32 	%r2671, %r2670, %r2669, 1;
	shf.r.wrap.b32 	%r2672, %r2669, %r2670, 1;
	mov.b64 	%rd1252, {%r2672, %r2671};
	shf.r.wrap.b32 	%r2673, %r2670, %r2669, 8;
	shf.r.wrap.b32 	%r2674, %r2669, %r2670, 8;
	mov.b64 	%rd1253, {%r2674, %r2673};
	xor.b64  	%rd1254, %rd1252, %rd1253;
	shr.u64 	%rd1255, %rd978, 7;
	xor.b64  	%rd1256, %rd1254, %rd1255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2675,%dummy}, %rd1238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2676}, %rd1238;
	}
	shf.r.wrap.b32 	%r2677, %r2676, %r2675, 19;
	shf.r.wrap.b32 	%r2678, %r2675, %r2676, 19;
	mov.b64 	%rd1257, {%r2678, %r2677};
	shf.l.wrap.b32 	%r2679, %r2675, %r2676, 3;
	shf.l.wrap.b32 	%r2680, %r2676, %r2675, 3;
	mov.b64 	%rd1258, {%r2680, %r2679};
	xor.b64  	%rd1259, %rd1257, %rd1258;
	shr.u64 	%rd1260, %rd1238, 6;
	xor.b64  	%rd1261, %rd1259, %rd1260;
	add.s64 	%rd1262, %rd1256, %rd958;
	add.s64 	%rd1263, %rd1262, %rd1138;
	add.s64 	%rd1264, %rd1263, %rd1261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2681,%dummy}, %rd998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2682}, %rd998;
	}
	shf.r.wrap.b32 	%r2683, %r2682, %r2681, 1;
	shf.r.wrap.b32 	%r2684, %r2681, %r2682, 1;
	mov.b64 	%rd1265, {%r2684, %r2683};
	shf.r.wrap.b32 	%r2685, %r2682, %r2681, 8;
	shf.r.wrap.b32 	%r2686, %r2681, %r2682, 8;
	mov.b64 	%rd1266, {%r2686, %r2685};
	xor.b64  	%rd1267, %rd1265, %rd1266;
	shr.u64 	%rd1268, %rd998, 7;
	xor.b64  	%rd1269, %rd1267, %rd1268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2687,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2688}, %rd1251;
	}
	shf.r.wrap.b32 	%r2689, %r2688, %r2687, 19;
	shf.r.wrap.b32 	%r2690, %r2687, %r2688, 19;
	mov.b64 	%rd1270, {%r2690, %r2689};
	shf.l.wrap.b32 	%r2691, %r2687, %r2688, 3;
	shf.l.wrap.b32 	%r2692, %r2688, %r2687, 3;
	mov.b64 	%rd1271, {%r2692, %r2691};
	xor.b64  	%rd1272, %rd1270, %rd1271;
	shr.u64 	%rd1273, %rd1251, 6;
	xor.b64  	%rd1274, %rd1272, %rd1273;
	add.s64 	%rd1275, %rd1269, %rd978;
	add.s64 	%rd1276, %rd1275, %rd1158;
	add.s64 	%rd1277, %rd1276, %rd1274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2693,%dummy}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2694}, %rd1018;
	}
	shf.r.wrap.b32 	%r2695, %r2694, %r2693, 1;
	shf.r.wrap.b32 	%r2696, %r2693, %r2694, 1;
	mov.b64 	%rd1278, {%r2696, %r2695};
	shf.r.wrap.b32 	%r2697, %r2694, %r2693, 8;
	shf.r.wrap.b32 	%r2698, %r2693, %r2694, 8;
	mov.b64 	%rd1279, {%r2698, %r2697};
	xor.b64  	%rd1280, %rd1278, %rd1279;
	shr.u64 	%rd1281, %rd1018, 7;
	xor.b64  	%rd1282, %rd1280, %rd1281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2699,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2700}, %rd1264;
	}
	shf.r.wrap.b32 	%r2701, %r2700, %r2699, 19;
	shf.r.wrap.b32 	%r2702, %r2699, %r2700, 19;
	mov.b64 	%rd1283, {%r2702, %r2701};
	shf.l.wrap.b32 	%r2703, %r2699, %r2700, 3;
	shf.l.wrap.b32 	%r2704, %r2700, %r2699, 3;
	mov.b64 	%rd1284, {%r2704, %r2703};
	xor.b64  	%rd1285, %rd1283, %rd1284;
	shr.u64 	%rd1286, %rd1264, 6;
	xor.b64  	%rd1287, %rd1285, %rd1286;
	add.s64 	%rd1288, %rd1282, %rd998;
	add.s64 	%rd1289, %rd1288, %rd1178;
	add.s64 	%rd1290, %rd1289, %rd1287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2705,%dummy}, %rd1038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2706}, %rd1038;
	}
	shf.r.wrap.b32 	%r2707, %r2706, %r2705, 1;
	shf.r.wrap.b32 	%r2708, %r2705, %r2706, 1;
	mov.b64 	%rd1291, {%r2708, %r2707};
	shf.r.wrap.b32 	%r2709, %r2706, %r2705, 8;
	shf.r.wrap.b32 	%r2710, %r2705, %r2706, 8;
	mov.b64 	%rd1292, {%r2710, %r2709};
	xor.b64  	%rd1293, %rd1291, %rd1292;
	shr.u64 	%rd1294, %rd1038, 7;
	xor.b64  	%rd1295, %rd1293, %rd1294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2711,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2712}, %rd1277;
	}
	shf.r.wrap.b32 	%r2713, %r2712, %r2711, 19;
	shf.r.wrap.b32 	%r2714, %r2711, %r2712, 19;
	mov.b64 	%rd1296, {%r2714, %r2713};
	shf.l.wrap.b32 	%r2715, %r2711, %r2712, 3;
	shf.l.wrap.b32 	%r2716, %r2712, %r2711, 3;
	mov.b64 	%rd1297, {%r2716, %r2715};
	xor.b64  	%rd1298, %rd1296, %rd1297;
	shr.u64 	%rd1299, %rd1277, 6;
	xor.b64  	%rd1300, %rd1298, %rd1299;
	add.s64 	%rd1301, %rd1295, %rd1018;
	add.s64 	%rd1302, %rd1301, %rd1198;
	add.s64 	%rd1303, %rd1302, %rd1300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2717,%dummy}, %rd1058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2718}, %rd1058;
	}
	shf.r.wrap.b32 	%r2719, %r2718, %r2717, 1;
	shf.r.wrap.b32 	%r2720, %r2717, %r2718, 1;
	mov.b64 	%rd1304, {%r2720, %r2719};
	shf.r.wrap.b32 	%r2721, %r2718, %r2717, 8;
	shf.r.wrap.b32 	%r2722, %r2717, %r2718, 8;
	mov.b64 	%rd1305, {%r2722, %r2721};
	xor.b64  	%rd1306, %rd1304, %rd1305;
	shr.u64 	%rd1307, %rd1058, 7;
	xor.b64  	%rd1308, %rd1306, %rd1307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2723,%dummy}, %rd1290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2724}, %rd1290;
	}
	shf.r.wrap.b32 	%r2725, %r2724, %r2723, 19;
	shf.r.wrap.b32 	%r2726, %r2723, %r2724, 19;
	mov.b64 	%rd1309, {%r2726, %r2725};
	shf.l.wrap.b32 	%r2727, %r2723, %r2724, 3;
	shf.l.wrap.b32 	%r2728, %r2724, %r2723, 3;
	mov.b64 	%rd1310, {%r2728, %r2727};
	xor.b64  	%rd1311, %rd1309, %rd1310;
	shr.u64 	%rd1312, %rd1290, 6;
	xor.b64  	%rd1313, %rd1311, %rd1312;
	add.s64 	%rd1314, %rd1308, %rd1038;
	add.s64 	%rd1315, %rd1314, %rd1218;
	add.s64 	%rd1316, %rd1315, %rd1313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2729,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2730}, %rd1078;
	}
	shf.r.wrap.b32 	%r2731, %r2730, %r2729, 1;
	shf.r.wrap.b32 	%r2732, %r2729, %r2730, 1;
	mov.b64 	%rd1317, {%r2732, %r2731};
	shf.r.wrap.b32 	%r2733, %r2730, %r2729, 8;
	shf.r.wrap.b32 	%r2734, %r2729, %r2730, 8;
	mov.b64 	%rd1318, {%r2734, %r2733};
	xor.b64  	%rd1319, %rd1317, %rd1318;
	shr.u64 	%rd1320, %rd1078, 7;
	xor.b64  	%rd1321, %rd1319, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2735,%dummy}, %rd1303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2736}, %rd1303;
	}
	shf.r.wrap.b32 	%r2737, %r2736, %r2735, 19;
	shf.r.wrap.b32 	%r2738, %r2735, %r2736, 19;
	mov.b64 	%rd1322, {%r2738, %r2737};
	shf.l.wrap.b32 	%r2739, %r2735, %r2736, 3;
	shf.l.wrap.b32 	%r2740, %r2736, %r2735, 3;
	mov.b64 	%rd1323, {%r2740, %r2739};
	xor.b64  	%rd1324, %rd1322, %rd1323;
	shr.u64 	%rd1325, %rd1303, 6;
	xor.b64  	%rd1326, %rd1324, %rd1325;
	add.s64 	%rd1327, %rd1321, %rd1058;
	add.s64 	%rd1328, %rd1327, %rd1238;
	add.s64 	%rd1329, %rd1328, %rd1326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2741,%dummy}, %rd1098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2742}, %rd1098;
	}
	shf.r.wrap.b32 	%r2743, %r2742, %r2741, 1;
	shf.r.wrap.b32 	%r2744, %r2741, %r2742, 1;
	mov.b64 	%rd1330, {%r2744, %r2743};
	shf.r.wrap.b32 	%r2745, %r2742, %r2741, 8;
	shf.r.wrap.b32 	%r2746, %r2741, %r2742, 8;
	mov.b64 	%rd1331, {%r2746, %r2745};
	xor.b64  	%rd1332, %rd1330, %rd1331;
	shr.u64 	%rd1333, %rd1098, 7;
	xor.b64  	%rd1334, %rd1332, %rd1333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2747,%dummy}, %rd1316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2748}, %rd1316;
	}
	shf.r.wrap.b32 	%r2749, %r2748, %r2747, 19;
	shf.r.wrap.b32 	%r2750, %r2747, %r2748, 19;
	mov.b64 	%rd1335, {%r2750, %r2749};
	shf.l.wrap.b32 	%r2751, %r2747, %r2748, 3;
	shf.l.wrap.b32 	%r2752, %r2748, %r2747, 3;
	mov.b64 	%rd1336, {%r2752, %r2751};
	xor.b64  	%rd1337, %rd1335, %rd1336;
	shr.u64 	%rd1338, %rd1316, 6;
	xor.b64  	%rd1339, %rd1337, %rd1338;
	add.s64 	%rd1340, %rd1334, %rd1078;
	add.s64 	%rd1341, %rd1340, %rd1251;
	add.s64 	%rd1342, %rd1341, %rd1339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2753,%dummy}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2754}, %rd1118;
	}
	shf.r.wrap.b32 	%r2755, %r2754, %r2753, 1;
	shf.r.wrap.b32 	%r2756, %r2753, %r2754, 1;
	mov.b64 	%rd1343, {%r2756, %r2755};
	shf.r.wrap.b32 	%r2757, %r2754, %r2753, 8;
	shf.r.wrap.b32 	%r2758, %r2753, %r2754, 8;
	mov.b64 	%rd1344, {%r2758, %r2757};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	shr.u64 	%rd1346, %rd1118, 7;
	xor.b64  	%rd1347, %rd1345, %rd1346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2759,%dummy}, %rd1329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2760}, %rd1329;
	}
	shf.r.wrap.b32 	%r2761, %r2760, %r2759, 19;
	shf.r.wrap.b32 	%r2762, %r2759, %r2760, 19;
	mov.b64 	%rd1348, {%r2762, %r2761};
	shf.l.wrap.b32 	%r2763, %r2759, %r2760, 3;
	shf.l.wrap.b32 	%r2764, %r2760, %r2759, 3;
	mov.b64 	%rd1349, {%r2764, %r2763};
	xor.b64  	%rd1350, %rd1348, %rd1349;
	shr.u64 	%rd1351, %rd1329, 6;
	xor.b64  	%rd1352, %rd1350, %rd1351;
	add.s64 	%rd1353, %rd1347, %rd1098;
	add.s64 	%rd1354, %rd1353, %rd1264;
	add.s64 	%rd1355, %rd1354, %rd1352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2765,%dummy}, %rd1138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2766}, %rd1138;
	}
	shf.r.wrap.b32 	%r2767, %r2766, %r2765, 1;
	shf.r.wrap.b32 	%r2768, %r2765, %r2766, 1;
	mov.b64 	%rd1356, {%r2768, %r2767};
	shf.r.wrap.b32 	%r2769, %r2766, %r2765, 8;
	shf.r.wrap.b32 	%r2770, %r2765, %r2766, 8;
	mov.b64 	%rd1357, {%r2770, %r2769};
	xor.b64  	%rd1358, %rd1356, %rd1357;
	shr.u64 	%rd1359, %rd1138, 7;
	xor.b64  	%rd1360, %rd1358, %rd1359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2771,%dummy}, %rd1342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2772}, %rd1342;
	}
	shf.r.wrap.b32 	%r2773, %r2772, %r2771, 19;
	shf.r.wrap.b32 	%r2774, %r2771, %r2772, 19;
	mov.b64 	%rd1361, {%r2774, %r2773};
	shf.l.wrap.b32 	%r2775, %r2771, %r2772, 3;
	shf.l.wrap.b32 	%r2776, %r2772, %r2771, 3;
	mov.b64 	%rd1362, {%r2776, %r2775};
	xor.b64  	%rd1363, %rd1361, %rd1362;
	shr.u64 	%rd1364, %rd1342, 6;
	xor.b64  	%rd1365, %rd1363, %rd1364;
	add.s64 	%rd1366, %rd1360, %rd1118;
	add.s64 	%rd1367, %rd1366, %rd1277;
	add.s64 	%rd1368, %rd1367, %rd1365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2777,%dummy}, %rd1158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2778}, %rd1158;
	}
	shf.r.wrap.b32 	%r2779, %r2778, %r2777, 1;
	shf.r.wrap.b32 	%r2780, %r2777, %r2778, 1;
	mov.b64 	%rd1369, {%r2780, %r2779};
	shf.r.wrap.b32 	%r2781, %r2778, %r2777, 8;
	shf.r.wrap.b32 	%r2782, %r2777, %r2778, 8;
	mov.b64 	%rd1370, {%r2782, %r2781};
	xor.b64  	%rd1371, %rd1369, %rd1370;
	shr.u64 	%rd1372, %rd1158, 7;
	xor.b64  	%rd1373, %rd1371, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2783,%dummy}, %rd1355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2784}, %rd1355;
	}
	shf.r.wrap.b32 	%r2785, %r2784, %r2783, 19;
	shf.r.wrap.b32 	%r2786, %r2783, %r2784, 19;
	mov.b64 	%rd1374, {%r2786, %r2785};
	shf.l.wrap.b32 	%r2787, %r2783, %r2784, 3;
	shf.l.wrap.b32 	%r2788, %r2784, %r2783, 3;
	mov.b64 	%rd1375, {%r2788, %r2787};
	xor.b64  	%rd1376, %rd1374, %rd1375;
	shr.u64 	%rd1377, %rd1355, 6;
	xor.b64  	%rd1378, %rd1376, %rd1377;
	add.s64 	%rd1379, %rd1373, %rd1138;
	add.s64 	%rd1380, %rd1379, %rd1290;
	add.s64 	%rd1381, %rd1380, %rd1378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2789,%dummy}, %rd1178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2790}, %rd1178;
	}
	shf.r.wrap.b32 	%r2791, %r2790, %r2789, 1;
	shf.r.wrap.b32 	%r2792, %r2789, %r2790, 1;
	mov.b64 	%rd1382, {%r2792, %r2791};
	shf.r.wrap.b32 	%r2793, %r2790, %r2789, 8;
	shf.r.wrap.b32 	%r2794, %r2789, %r2790, 8;
	mov.b64 	%rd1383, {%r2794, %r2793};
	xor.b64  	%rd1384, %rd1382, %rd1383;
	shr.u64 	%rd1385, %rd1178, 7;
	xor.b64  	%rd1386, %rd1384, %rd1385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2795,%dummy}, %rd1368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2796}, %rd1368;
	}
	shf.r.wrap.b32 	%r2797, %r2796, %r2795, 19;
	shf.r.wrap.b32 	%r2798, %r2795, %r2796, 19;
	mov.b64 	%rd1387, {%r2798, %r2797};
	shf.l.wrap.b32 	%r2799, %r2795, %r2796, 3;
	shf.l.wrap.b32 	%r2800, %r2796, %r2795, 3;
	mov.b64 	%rd1388, {%r2800, %r2799};
	xor.b64  	%rd1389, %rd1387, %rd1388;
	shr.u64 	%rd1390, %rd1368, 6;
	xor.b64  	%rd1391, %rd1389, %rd1390;
	add.s64 	%rd1392, %rd1386, %rd1158;
	add.s64 	%rd1393, %rd1392, %rd1303;
	add.s64 	%rd1394, %rd1393, %rd1391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2801,%dummy}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2802}, %rd1198;
	}
	shf.r.wrap.b32 	%r2803, %r2802, %r2801, 1;
	shf.r.wrap.b32 	%r2804, %r2801, %r2802, 1;
	mov.b64 	%rd1395, {%r2804, %r2803};
	shf.r.wrap.b32 	%r2805, %r2802, %r2801, 8;
	shf.r.wrap.b32 	%r2806, %r2801, %r2802, 8;
	mov.b64 	%rd1396, {%r2806, %r2805};
	xor.b64  	%rd1397, %rd1395, %rd1396;
	shr.u64 	%rd1398, %rd1198, 7;
	xor.b64  	%rd1399, %rd1397, %rd1398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2807,%dummy}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2808}, %rd1381;
	}
	shf.r.wrap.b32 	%r2809, %r2808, %r2807, 19;
	shf.r.wrap.b32 	%r2810, %r2807, %r2808, 19;
	mov.b64 	%rd1400, {%r2810, %r2809};
	shf.l.wrap.b32 	%r2811, %r2807, %r2808, 3;
	shf.l.wrap.b32 	%r2812, %r2808, %r2807, 3;
	mov.b64 	%rd1401, {%r2812, %r2811};
	xor.b64  	%rd1402, %rd1400, %rd1401;
	shr.u64 	%rd1403, %rd1381, 6;
	xor.b64  	%rd1404, %rd1402, %rd1403;
	add.s64 	%rd1405, %rd1399, %rd1178;
	add.s64 	%rd1406, %rd1405, %rd1316;
	add.s64 	%rd1407, %rd1406, %rd1404;
	shf.r.wrap.b32 	%r2813, %r2664, %r2663, 1;
	shf.r.wrap.b32 	%r2814, %r2663, %r2664, 1;
	mov.b64 	%rd1408, {%r2814, %r2813};
	shf.r.wrap.b32 	%r2815, %r2664, %r2663, 8;
	shf.r.wrap.b32 	%r2816, %r2663, %r2664, 8;
	mov.b64 	%rd1409, {%r2816, %r2815};
	xor.b64  	%rd1410, %rd1408, %rd1409;
	shr.u64 	%rd1411, %rd1218, 7;
	xor.b64  	%rd1412, %rd1410, %rd1411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2817,%dummy}, %rd1394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2818}, %rd1394;
	}
	shf.r.wrap.b32 	%r2819, %r2818, %r2817, 19;
	shf.r.wrap.b32 	%r2820, %r2817, %r2818, 19;
	mov.b64 	%rd1413, {%r2820, %r2819};
	shf.l.wrap.b32 	%r2821, %r2817, %r2818, 3;
	shf.l.wrap.b32 	%r2822, %r2818, %r2817, 3;
	mov.b64 	%rd1414, {%r2822, %r2821};
	xor.b64  	%rd1415, %rd1413, %rd1414;
	shr.u64 	%rd1416, %rd1394, 6;
	xor.b64  	%rd1417, %rd1415, %rd1416;
	add.s64 	%rd1418, %rd1412, %rd1198;
	add.s64 	%rd1419, %rd1418, %rd1329;
	add.s64 	%rd1420, %rd1419, %rd1417;
	shf.r.wrap.b32 	%r2823, %r2676, %r2675, 1;
	shf.r.wrap.b32 	%r2824, %r2675, %r2676, 1;
	mov.b64 	%rd1421, {%r2824, %r2823};
	shf.r.wrap.b32 	%r2825, %r2676, %r2675, 8;
	shf.r.wrap.b32 	%r2826, %r2675, %r2676, 8;
	mov.b64 	%rd1422, {%r2826, %r2825};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	shr.u64 	%rd1424, %rd1238, 7;
	xor.b64  	%rd1425, %rd1423, %rd1424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2827,%dummy}, %rd1407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2828}, %rd1407;
	}
	shf.r.wrap.b32 	%r2829, %r2828, %r2827, 19;
	shf.r.wrap.b32 	%r2830, %r2827, %r2828, 19;
	mov.b64 	%rd1426, {%r2830, %r2829};
	shf.l.wrap.b32 	%r2831, %r2827, %r2828, 3;
	shf.l.wrap.b32 	%r2832, %r2828, %r2827, 3;
	mov.b64 	%rd1427, {%r2832, %r2831};
	xor.b64  	%rd1428, %rd1426, %rd1427;
	shr.u64 	%rd1429, %rd1407, 6;
	xor.b64  	%rd1430, %rd1428, %rd1429;
	add.s64 	%rd1431, %rd1425, %rd1218;
	add.s64 	%rd1432, %rd1431, %rd1342;
	add.s64 	%rd1433, %rd1432, %rd1430;
	shf.r.wrap.b32 	%r2833, %r2688, %r2687, 1;
	shf.r.wrap.b32 	%r2834, %r2687, %r2688, 1;
	mov.b64 	%rd1434, {%r2834, %r2833};
	shf.r.wrap.b32 	%r2835, %r2688, %r2687, 8;
	shf.r.wrap.b32 	%r2836, %r2687, %r2688, 8;
	mov.b64 	%rd1435, {%r2836, %r2835};
	xor.b64  	%rd1436, %rd1434, %rd1435;
	shr.u64 	%rd1437, %rd1251, 7;
	xor.b64  	%rd1438, %rd1436, %rd1437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2837,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2838}, %rd1420;
	}
	shf.r.wrap.b32 	%r2839, %r2838, %r2837, 19;
	shf.r.wrap.b32 	%r2840, %r2837, %r2838, 19;
	mov.b64 	%rd1439, {%r2840, %r2839};
	shf.l.wrap.b32 	%r2841, %r2837, %r2838, 3;
	shf.l.wrap.b32 	%r2842, %r2838, %r2837, 3;
	mov.b64 	%rd1440, {%r2842, %r2841};
	xor.b64  	%rd1441, %rd1439, %rd1440;
	shr.u64 	%rd1442, %rd1420, 6;
	xor.b64  	%rd1443, %rd1441, %rd1442;
	add.s64 	%rd1444, %rd1438, %rd1238;
	add.s64 	%rd1445, %rd1444, %rd1355;
	add.s64 	%rd1446, %rd1445, %rd1443;
	shf.r.wrap.b32 	%r2843, %r2700, %r2699, 1;
	shf.r.wrap.b32 	%r2844, %r2699, %r2700, 1;
	mov.b64 	%rd1447, {%r2844, %r2843};
	shf.r.wrap.b32 	%r2845, %r2700, %r2699, 8;
	shf.r.wrap.b32 	%r2846, %r2699, %r2700, 8;
	mov.b64 	%rd1448, {%r2846, %r2845};
	xor.b64  	%rd1449, %rd1447, %rd1448;
	shr.u64 	%rd1450, %rd1264, 7;
	xor.b64  	%rd1451, %rd1449, %rd1450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2847,%dummy}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2848}, %rd1433;
	}
	shf.r.wrap.b32 	%r2849, %r2848, %r2847, 19;
	shf.r.wrap.b32 	%r2850, %r2847, %r2848, 19;
	mov.b64 	%rd1452, {%r2850, %r2849};
	shf.l.wrap.b32 	%r2851, %r2847, %r2848, 3;
	shf.l.wrap.b32 	%r2852, %r2848, %r2847, 3;
	mov.b64 	%rd1453, {%r2852, %r2851};
	xor.b64  	%rd1454, %rd1452, %rd1453;
	shr.u64 	%rd1455, %rd1433, 6;
	xor.b64  	%rd1456, %rd1454, %rd1455;
	add.s64 	%rd1457, %rd1451, %rd1251;
	add.s64 	%rd1458, %rd1457, %rd1368;
	add.s64 	%rd1459, %rd1458, %rd1456;
	shf.r.wrap.b32 	%r2853, %r2712, %r2711, 1;
	shf.r.wrap.b32 	%r2854, %r2711, %r2712, 1;
	mov.b64 	%rd1460, {%r2854, %r2853};
	shf.r.wrap.b32 	%r2855, %r2712, %r2711, 8;
	shf.r.wrap.b32 	%r2856, %r2711, %r2712, 8;
	mov.b64 	%rd1461, {%r2856, %r2855};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	shr.u64 	%rd1463, %rd1277, 7;
	xor.b64  	%rd1464, %rd1462, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2857,%dummy}, %rd1446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2858}, %rd1446;
	}
	shf.r.wrap.b32 	%r2859, %r2858, %r2857, 19;
	shf.r.wrap.b32 	%r2860, %r2857, %r2858, 19;
	mov.b64 	%rd1465, {%r2860, %r2859};
	shf.l.wrap.b32 	%r2861, %r2857, %r2858, 3;
	shf.l.wrap.b32 	%r2862, %r2858, %r2857, 3;
	mov.b64 	%rd1466, {%r2862, %r2861};
	xor.b64  	%rd1467, %rd1465, %rd1466;
	shr.u64 	%rd1468, %rd1446, 6;
	xor.b64  	%rd1469, %rd1467, %rd1468;
	add.s64 	%rd1470, %rd1464, %rd1264;
	add.s64 	%rd1471, %rd1470, %rd1381;
	add.s64 	%rd1472, %rd1471, %rd1469;
	shf.r.wrap.b32 	%r2863, %r2724, %r2723, 1;
	shf.r.wrap.b32 	%r2864, %r2723, %r2724, 1;
	mov.b64 	%rd1473, {%r2864, %r2863};
	shf.r.wrap.b32 	%r2865, %r2724, %r2723, 8;
	shf.r.wrap.b32 	%r2866, %r2723, %r2724, 8;
	mov.b64 	%rd1474, {%r2866, %r2865};
	xor.b64  	%rd1475, %rd1473, %rd1474;
	shr.u64 	%rd1476, %rd1290, 7;
	xor.b64  	%rd1477, %rd1475, %rd1476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2867,%dummy}, %rd1459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2868}, %rd1459;
	}
	shf.r.wrap.b32 	%r2869, %r2868, %r2867, 19;
	shf.r.wrap.b32 	%r2870, %r2867, %r2868, 19;
	mov.b64 	%rd1478, {%r2870, %r2869};
	shf.l.wrap.b32 	%r2871, %r2867, %r2868, 3;
	shf.l.wrap.b32 	%r2872, %r2868, %r2867, 3;
	mov.b64 	%rd1479, {%r2872, %r2871};
	xor.b64  	%rd1480, %rd1478, %rd1479;
	shr.u64 	%rd1481, %rd1459, 6;
	xor.b64  	%rd1482, %rd1480, %rd1481;
	add.s64 	%rd1483, %rd1477, %rd1277;
	add.s64 	%rd1484, %rd1483, %rd1394;
	add.s64 	%rd1485, %rd1484, %rd1482;
	shf.r.wrap.b32 	%r2873, %r2736, %r2735, 1;
	shf.r.wrap.b32 	%r2874, %r2735, %r2736, 1;
	mov.b64 	%rd1486, {%r2874, %r2873};
	shf.r.wrap.b32 	%r2875, %r2736, %r2735, 8;
	shf.r.wrap.b32 	%r2876, %r2735, %r2736, 8;
	mov.b64 	%rd1487, {%r2876, %r2875};
	xor.b64  	%rd1488, %rd1486, %rd1487;
	shr.u64 	%rd1489, %rd1303, 7;
	xor.b64  	%rd1490, %rd1488, %rd1489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2877,%dummy}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2878}, %rd1472;
	}
	shf.r.wrap.b32 	%r2879, %r2878, %r2877, 19;
	shf.r.wrap.b32 	%r2880, %r2877, %r2878, 19;
	mov.b64 	%rd1491, {%r2880, %r2879};
	shf.l.wrap.b32 	%r2881, %r2877, %r2878, 3;
	shf.l.wrap.b32 	%r2882, %r2878, %r2877, 3;
	mov.b64 	%rd1492, {%r2882, %r2881};
	xor.b64  	%rd1493, %rd1491, %rd1492;
	shr.u64 	%rd1494, %rd1472, 6;
	xor.b64  	%rd1495, %rd1493, %rd1494;
	add.s64 	%rd1496, %rd1490, %rd1290;
	add.s64 	%rd1497, %rd1496, %rd1407;
	add.s64 	%rd1498, %rd1497, %rd1495;
	shf.r.wrap.b32 	%r2883, %r2748, %r2747, 1;
	shf.r.wrap.b32 	%r2884, %r2747, %r2748, 1;
	mov.b64 	%rd1499, {%r2884, %r2883};
	shf.r.wrap.b32 	%r2885, %r2748, %r2747, 8;
	shf.r.wrap.b32 	%r2886, %r2747, %r2748, 8;
	mov.b64 	%rd1500, {%r2886, %r2885};
	xor.b64  	%rd1501, %rd1499, %rd1500;
	shr.u64 	%rd1502, %rd1316, 7;
	xor.b64  	%rd1503, %rd1501, %rd1502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2887,%dummy}, %rd1485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2888}, %rd1485;
	}
	shf.r.wrap.b32 	%r2889, %r2888, %r2887, 19;
	shf.r.wrap.b32 	%r2890, %r2887, %r2888, 19;
	mov.b64 	%rd1504, {%r2890, %r2889};
	shf.l.wrap.b32 	%r2891, %r2887, %r2888, 3;
	shf.l.wrap.b32 	%r2892, %r2888, %r2887, 3;
	mov.b64 	%rd1505, {%r2892, %r2891};
	xor.b64  	%rd1506, %rd1504, %rd1505;
	shr.u64 	%rd1507, %rd1485, 6;
	xor.b64  	%rd1508, %rd1506, %rd1507;
	add.s64 	%rd1509, %rd1503, %rd1303;
	add.s64 	%rd1510, %rd1509, %rd1420;
	add.s64 	%rd1511, %rd1510, %rd1508;
	shf.r.wrap.b32 	%r2893, %r2760, %r2759, 1;
	shf.r.wrap.b32 	%r2894, %r2759, %r2760, 1;
	mov.b64 	%rd1512, {%r2894, %r2893};
	shf.r.wrap.b32 	%r2895, %r2760, %r2759, 8;
	shf.r.wrap.b32 	%r2896, %r2759, %r2760, 8;
	mov.b64 	%rd1513, {%r2896, %r2895};
	xor.b64  	%rd1514, %rd1512, %rd1513;
	shr.u64 	%rd1515, %rd1329, 7;
	xor.b64  	%rd1516, %rd1514, %rd1515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2897,%dummy}, %rd1498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2898}, %rd1498;
	}
	shf.r.wrap.b32 	%r2899, %r2898, %r2897, 19;
	shf.r.wrap.b32 	%r2900, %r2897, %r2898, 19;
	mov.b64 	%rd1517, {%r2900, %r2899};
	shf.l.wrap.b32 	%r2901, %r2897, %r2898, 3;
	shf.l.wrap.b32 	%r2902, %r2898, %r2897, 3;
	mov.b64 	%rd1518, {%r2902, %r2901};
	xor.b64  	%rd1519, %rd1517, %rd1518;
	shr.u64 	%rd1520, %rd1498, 6;
	xor.b64  	%rd1521, %rd1519, %rd1520;
	add.s64 	%rd1522, %rd1516, %rd1316;
	add.s64 	%rd1523, %rd1522, %rd1433;
	add.s64 	%rd1524, %rd1523, %rd1521;
	shf.r.wrap.b32 	%r2903, %r2772, %r2771, 1;
	shf.r.wrap.b32 	%r2904, %r2771, %r2772, 1;
	mov.b64 	%rd1525, {%r2904, %r2903};
	shf.r.wrap.b32 	%r2905, %r2772, %r2771, 8;
	shf.r.wrap.b32 	%r2906, %r2771, %r2772, 8;
	mov.b64 	%rd1526, {%r2906, %r2905};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	shr.u64 	%rd1528, %rd1342, 7;
	xor.b64  	%rd1529, %rd1527, %rd1528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2907,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2908}, %rd1511;
	}
	shf.r.wrap.b32 	%r2909, %r2908, %r2907, 19;
	shf.r.wrap.b32 	%r2910, %r2907, %r2908, 19;
	mov.b64 	%rd1530, {%r2910, %r2909};
	shf.l.wrap.b32 	%r2911, %r2907, %r2908, 3;
	shf.l.wrap.b32 	%r2912, %r2908, %r2907, 3;
	mov.b64 	%rd1531, {%r2912, %r2911};
	xor.b64  	%rd1532, %rd1530, %rd1531;
	shr.u64 	%rd1533, %rd1511, 6;
	xor.b64  	%rd1534, %rd1532, %rd1533;
	add.s64 	%rd1535, %rd1529, %rd1329;
	add.s64 	%rd1536, %rd1535, %rd1446;
	add.s64 	%rd1537, %rd1536, %rd1534;
	shf.r.wrap.b32 	%r2913, %r2784, %r2783, 1;
	shf.r.wrap.b32 	%r2914, %r2783, %r2784, 1;
	mov.b64 	%rd1538, {%r2914, %r2913};
	shf.r.wrap.b32 	%r2915, %r2784, %r2783, 8;
	shf.r.wrap.b32 	%r2916, %r2783, %r2784, 8;
	mov.b64 	%rd1539, {%r2916, %r2915};
	xor.b64  	%rd1540, %rd1538, %rd1539;
	shr.u64 	%rd1541, %rd1355, 7;
	xor.b64  	%rd1542, %rd1540, %rd1541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2917,%dummy}, %rd1524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2918}, %rd1524;
	}
	shf.r.wrap.b32 	%r2919, %r2918, %r2917, 19;
	shf.r.wrap.b32 	%r2920, %r2917, %r2918, 19;
	mov.b64 	%rd1543, {%r2920, %r2919};
	shf.l.wrap.b32 	%r2921, %r2917, %r2918, 3;
	shf.l.wrap.b32 	%r2922, %r2918, %r2917, 3;
	mov.b64 	%rd1544, {%r2922, %r2921};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	shr.u64 	%rd1546, %rd1524, 6;
	xor.b64  	%rd1547, %rd1545, %rd1546;
	add.s64 	%rd1548, %rd1542, %rd1342;
	add.s64 	%rd1549, %rd1548, %rd1459;
	add.s64 	%rd1550, %rd1549, %rd1547;
	shf.r.wrap.b32 	%r2923, %r2796, %r2795, 1;
	shf.r.wrap.b32 	%r2924, %r2795, %r2796, 1;
	mov.b64 	%rd1551, {%r2924, %r2923};
	shf.r.wrap.b32 	%r2925, %r2796, %r2795, 8;
	shf.r.wrap.b32 	%r2926, %r2795, %r2796, 8;
	mov.b64 	%rd1552, {%r2926, %r2925};
	xor.b64  	%rd1553, %rd1551, %rd1552;
	shr.u64 	%rd1554, %rd1368, 7;
	xor.b64  	%rd1555, %rd1553, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2927,%dummy}, %rd1537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2928}, %rd1537;
	}
	shf.r.wrap.b32 	%r2929, %r2928, %r2927, 19;
	shf.r.wrap.b32 	%r2930, %r2927, %r2928, 19;
	mov.b64 	%rd1556, {%r2930, %r2929};
	shf.l.wrap.b32 	%r2931, %r2927, %r2928, 3;
	shf.l.wrap.b32 	%r2932, %r2928, %r2927, 3;
	mov.b64 	%rd1557, {%r2932, %r2931};
	xor.b64  	%rd1558, %rd1556, %rd1557;
	shr.u64 	%rd1559, %rd1537, 6;
	xor.b64  	%rd1560, %rd1558, %rd1559;
	add.s64 	%rd1561, %rd1555, %rd1355;
	add.s64 	%rd1562, %rd1561, %rd1472;
	add.s64 	%rd1563, %rd1562, %rd1560;
	shf.r.wrap.b32 	%r2933, %r2808, %r2807, 1;
	shf.r.wrap.b32 	%r2934, %r2807, %r2808, 1;
	mov.b64 	%rd1564, {%r2934, %r2933};
	shf.r.wrap.b32 	%r2935, %r2808, %r2807, 8;
	shf.r.wrap.b32 	%r2936, %r2807, %r2808, 8;
	mov.b64 	%rd1565, {%r2936, %r2935};
	xor.b64  	%rd1566, %rd1564, %rd1565;
	shr.u64 	%rd1567, %rd1381, 7;
	xor.b64  	%rd1568, %rd1566, %rd1567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2937,%dummy}, %rd1550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2938}, %rd1550;
	}
	shf.r.wrap.b32 	%r2939, %r2938, %r2937, 19;
	shf.r.wrap.b32 	%r2940, %r2937, %r2938, 19;
	mov.b64 	%rd1569, {%r2940, %r2939};
	shf.l.wrap.b32 	%r2941, %r2937, %r2938, 3;
	shf.l.wrap.b32 	%r2942, %r2938, %r2937, 3;
	mov.b64 	%rd1570, {%r2942, %r2941};
	xor.b64  	%rd1571, %rd1569, %rd1570;
	shr.u64 	%rd1572, %rd1550, 6;
	xor.b64  	%rd1573, %rd1571, %rd1572;
	add.s64 	%rd1574, %rd1568, %rd1368;
	add.s64 	%rd1575, %rd1574, %rd1485;
	add.s64 	%rd1576, %rd1575, %rd1573;
	shf.r.wrap.b32 	%r2943, %r2818, %r2817, 1;
	shf.r.wrap.b32 	%r2944, %r2817, %r2818, 1;
	mov.b64 	%rd1577, {%r2944, %r2943};
	shf.r.wrap.b32 	%r2945, %r2818, %r2817, 8;
	shf.r.wrap.b32 	%r2946, %r2817, %r2818, 8;
	mov.b64 	%rd1578, {%r2946, %r2945};
	xor.b64  	%rd1579, %rd1577, %rd1578;
	shr.u64 	%rd1580, %rd1394, 7;
	xor.b64  	%rd1581, %rd1579, %rd1580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2947,%dummy}, %rd1563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2948}, %rd1563;
	}
	shf.r.wrap.b32 	%r2949, %r2948, %r2947, 19;
	shf.r.wrap.b32 	%r2950, %r2947, %r2948, 19;
	mov.b64 	%rd1582, {%r2950, %r2949};
	shf.l.wrap.b32 	%r2951, %r2947, %r2948, 3;
	shf.l.wrap.b32 	%r2952, %r2948, %r2947, 3;
	mov.b64 	%rd1583, {%r2952, %r2951};
	xor.b64  	%rd1584, %rd1582, %rd1583;
	shr.u64 	%rd1585, %rd1563, 6;
	xor.b64  	%rd1586, %rd1584, %rd1585;
	add.s64 	%rd1587, %rd1581, %rd1381;
	add.s64 	%rd1588, %rd1587, %rd1498;
	add.s64 	%rd1589, %rd1588, %rd1586;
	shf.r.wrap.b32 	%r2953, %r2828, %r2827, 1;
	shf.r.wrap.b32 	%r2954, %r2827, %r2828, 1;
	mov.b64 	%rd1590, {%r2954, %r2953};
	shf.r.wrap.b32 	%r2955, %r2828, %r2827, 8;
	shf.r.wrap.b32 	%r2956, %r2827, %r2828, 8;
	mov.b64 	%rd1591, {%r2956, %r2955};
	xor.b64  	%rd1592, %rd1590, %rd1591;
	shr.u64 	%rd1593, %rd1407, 7;
	xor.b64  	%rd1594, %rd1592, %rd1593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2957,%dummy}, %rd1576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2958}, %rd1576;
	}
	shf.r.wrap.b32 	%r2959, %r2958, %r2957, 19;
	shf.r.wrap.b32 	%r2960, %r2957, %r2958, 19;
	mov.b64 	%rd1595, {%r2960, %r2959};
	shf.l.wrap.b32 	%r2961, %r2957, %r2958, 3;
	shf.l.wrap.b32 	%r2962, %r2958, %r2957, 3;
	mov.b64 	%rd1596, {%r2962, %r2961};
	xor.b64  	%rd1597, %rd1595, %rd1596;
	shr.u64 	%rd1598, %rd1576, 6;
	xor.b64  	%rd1599, %rd1597, %rd1598;
	add.s64 	%rd1600, %rd1594, %rd1394;
	add.s64 	%rd1601, %rd1600, %rd1511;
	add.s64 	%rd1602, %rd1601, %rd1599;
	shf.r.wrap.b32 	%r2963, %r2838, %r2837, 1;
	shf.r.wrap.b32 	%r2964, %r2837, %r2838, 1;
	mov.b64 	%rd1603, {%r2964, %r2963};
	shf.r.wrap.b32 	%r2965, %r2838, %r2837, 8;
	shf.r.wrap.b32 	%r2966, %r2837, %r2838, 8;
	mov.b64 	%rd1604, {%r2966, %r2965};
	xor.b64  	%rd1605, %rd1603, %rd1604;
	shr.u64 	%rd1606, %rd1420, 7;
	xor.b64  	%rd1607, %rd1605, %rd1606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2967,%dummy}, %rd1589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2968}, %rd1589;
	}
	shf.r.wrap.b32 	%r2969, %r2968, %r2967, 19;
	shf.r.wrap.b32 	%r2970, %r2967, %r2968, 19;
	mov.b64 	%rd1608, {%r2970, %r2969};
	shf.l.wrap.b32 	%r2971, %r2967, %r2968, 3;
	shf.l.wrap.b32 	%r2972, %r2968, %r2967, 3;
	mov.b64 	%rd1609, {%r2972, %r2971};
	xor.b64  	%rd1610, %rd1608, %rd1609;
	shr.u64 	%rd1611, %rd1589, 6;
	xor.b64  	%rd1612, %rd1610, %rd1611;
	add.s64 	%rd1613, %rd1607, %rd1407;
	add.s64 	%rd1614, %rd1613, %rd1524;
	add.s64 	%rd1615, %rd1614, %rd1612;
	shf.r.wrap.b32 	%r2973, %r2848, %r2847, 1;
	shf.r.wrap.b32 	%r2974, %r2847, %r2848, 1;
	mov.b64 	%rd1616, {%r2974, %r2973};
	shf.r.wrap.b32 	%r2975, %r2848, %r2847, 8;
	shf.r.wrap.b32 	%r2976, %r2847, %r2848, 8;
	mov.b64 	%rd1617, {%r2976, %r2975};
	xor.b64  	%rd1618, %rd1616, %rd1617;
	shr.u64 	%rd1619, %rd1433, 7;
	xor.b64  	%rd1620, %rd1618, %rd1619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2977,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2978}, %rd1602;
	}
	shf.r.wrap.b32 	%r2979, %r2978, %r2977, 19;
	shf.r.wrap.b32 	%r2980, %r2977, %r2978, 19;
	mov.b64 	%rd1621, {%r2980, %r2979};
	shf.l.wrap.b32 	%r2981, %r2977, %r2978, 3;
	shf.l.wrap.b32 	%r2982, %r2978, %r2977, 3;
	mov.b64 	%rd1622, {%r2982, %r2981};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	shr.u64 	%rd1624, %rd1602, 6;
	xor.b64  	%rd1625, %rd1623, %rd1624;
	add.s64 	%rd1626, %rd1620, %rd1420;
	add.s64 	%rd1627, %rd1626, %rd1537;
	add.s64 	%rd1628, %rd1627, %rd1625;
	shf.r.wrap.b32 	%r2983, %r2858, %r2857, 1;
	shf.r.wrap.b32 	%r2984, %r2857, %r2858, 1;
	mov.b64 	%rd1629, {%r2984, %r2983};
	shf.r.wrap.b32 	%r2985, %r2858, %r2857, 8;
	shf.r.wrap.b32 	%r2986, %r2857, %r2858, 8;
	mov.b64 	%rd1630, {%r2986, %r2985};
	xor.b64  	%rd1631, %rd1629, %rd1630;
	shr.u64 	%rd1632, %rd1446, 7;
	xor.b64  	%rd1633, %rd1631, %rd1632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2987,%dummy}, %rd1615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2988}, %rd1615;
	}
	shf.r.wrap.b32 	%r2989, %r2988, %r2987, 19;
	shf.r.wrap.b32 	%r2990, %r2987, %r2988, 19;
	mov.b64 	%rd1634, {%r2990, %r2989};
	shf.l.wrap.b32 	%r2991, %r2987, %r2988, 3;
	shf.l.wrap.b32 	%r2992, %r2988, %r2987, 3;
	mov.b64 	%rd1635, {%r2992, %r2991};
	xor.b64  	%rd1636, %rd1634, %rd1635;
	shr.u64 	%rd1637, %rd1615, 6;
	xor.b64  	%rd1638, %rd1636, %rd1637;
	add.s64 	%rd1639, %rd1633, %rd1433;
	add.s64 	%rd1640, %rd1639, %rd1550;
	add.s64 	%rd1641, %rd1640, %rd1638;
	shf.r.wrap.b32 	%r2993, %r2868, %r2867, 1;
	shf.r.wrap.b32 	%r2994, %r2867, %r2868, 1;
	mov.b64 	%rd1642, {%r2994, %r2993};
	shf.r.wrap.b32 	%r2995, %r2868, %r2867, 8;
	shf.r.wrap.b32 	%r2996, %r2867, %r2868, 8;
	mov.b64 	%rd1643, {%r2996, %r2995};
	xor.b64  	%rd1644, %rd1642, %rd1643;
	shr.u64 	%rd1645, %rd1459, 7;
	xor.b64  	%rd1646, %rd1644, %rd1645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2997,%dummy}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2998}, %rd1628;
	}
	shf.r.wrap.b32 	%r2999, %r2998, %r2997, 19;
	shf.r.wrap.b32 	%r3000, %r2997, %r2998, 19;
	mov.b64 	%rd1647, {%r3000, %r2999};
	shf.l.wrap.b32 	%r3001, %r2997, %r2998, 3;
	shf.l.wrap.b32 	%r3002, %r2998, %r2997, 3;
	mov.b64 	%rd1648, {%r3002, %r3001};
	xor.b64  	%rd1649, %rd1647, %rd1648;
	shr.u64 	%rd1650, %rd1628, 6;
	xor.b64  	%rd1651, %rd1649, %rd1650;
	add.s64 	%rd1652, %rd1646, %rd1446;
	add.s64 	%rd1653, %rd1652, %rd1563;
	add.s64 	%rd1654, %rd1653, %rd1651;
	shf.r.wrap.b32 	%r3003, %r2878, %r2877, 1;
	shf.r.wrap.b32 	%r3004, %r2877, %r2878, 1;
	mov.b64 	%rd1655, {%r3004, %r3003};
	shf.r.wrap.b32 	%r3005, %r2878, %r2877, 8;
	shf.r.wrap.b32 	%r3006, %r2877, %r2878, 8;
	mov.b64 	%rd1656, {%r3006, %r3005};
	xor.b64  	%rd1657, %rd1655, %rd1656;
	shr.u64 	%rd1658, %rd1472, 7;
	xor.b64  	%rd1659, %rd1657, %rd1658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3007,%dummy}, %rd1641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3008}, %rd1641;
	}
	shf.r.wrap.b32 	%r3009, %r3008, %r3007, 19;
	shf.r.wrap.b32 	%r3010, %r3007, %r3008, 19;
	mov.b64 	%rd1660, {%r3010, %r3009};
	shf.l.wrap.b32 	%r3011, %r3007, %r3008, 3;
	shf.l.wrap.b32 	%r3012, %r3008, %r3007, 3;
	mov.b64 	%rd1661, {%r3012, %r3011};
	xor.b64  	%rd1662, %rd1660, %rd1661;
	shr.u64 	%rd1663, %rd1641, 6;
	xor.b64  	%rd1664, %rd1662, %rd1663;
	add.s64 	%rd1665, %rd1659, %rd1459;
	add.s64 	%rd1666, %rd1665, %rd1576;
	add.s64 	%rd1667, %rd1666, %rd1664;
	shf.r.wrap.b32 	%r3013, %r2888, %r2887, 1;
	shf.r.wrap.b32 	%r3014, %r2887, %r2888, 1;
	mov.b64 	%rd1668, {%r3014, %r3013};
	shf.r.wrap.b32 	%r3015, %r2888, %r2887, 8;
	shf.r.wrap.b32 	%r3016, %r2887, %r2888, 8;
	mov.b64 	%rd1669, {%r3016, %r3015};
	xor.b64  	%rd1670, %rd1668, %rd1669;
	shr.u64 	%rd1671, %rd1485, 7;
	xor.b64  	%rd1672, %rd1670, %rd1671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3017,%dummy}, %rd1654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3018}, %rd1654;
	}
	shf.r.wrap.b32 	%r3019, %r3018, %r3017, 19;
	shf.r.wrap.b32 	%r3020, %r3017, %r3018, 19;
	mov.b64 	%rd1673, {%r3020, %r3019};
	shf.l.wrap.b32 	%r3021, %r3017, %r3018, 3;
	shf.l.wrap.b32 	%r3022, %r3018, %r3017, 3;
	mov.b64 	%rd1674, {%r3022, %r3021};
	xor.b64  	%rd1675, %rd1673, %rd1674;
	shr.u64 	%rd1676, %rd1654, 6;
	xor.b64  	%rd1677, %rd1675, %rd1676;
	add.s64 	%rd1678, %rd1672, %rd1472;
	add.s64 	%rd1679, %rd1678, %rd1589;
	add.s64 	%rd1680, %rd1679, %rd1677;
	shf.r.wrap.b32 	%r3023, %r2898, %r2897, 1;
	shf.r.wrap.b32 	%r3024, %r2897, %r2898, 1;
	mov.b64 	%rd1681, {%r3024, %r3023};
	shf.r.wrap.b32 	%r3025, %r2898, %r2897, 8;
	shf.r.wrap.b32 	%r3026, %r2897, %r2898, 8;
	mov.b64 	%rd1682, {%r3026, %r3025};
	xor.b64  	%rd1683, %rd1681, %rd1682;
	shr.u64 	%rd1684, %rd1498, 7;
	xor.b64  	%rd1685, %rd1683, %rd1684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3027,%dummy}, %rd1667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3028}, %rd1667;
	}
	shf.r.wrap.b32 	%r3029, %r3028, %r3027, 19;
	shf.r.wrap.b32 	%r3030, %r3027, %r3028, 19;
	mov.b64 	%rd1686, {%r3030, %r3029};
	shf.l.wrap.b32 	%r3031, %r3027, %r3028, 3;
	shf.l.wrap.b32 	%r3032, %r3028, %r3027, 3;
	mov.b64 	%rd1687, {%r3032, %r3031};
	xor.b64  	%rd1688, %rd1686, %rd1687;
	shr.u64 	%rd1689, %rd1667, 6;
	xor.b64  	%rd1690, %rd1688, %rd1689;
	add.s64 	%rd1691, %rd1685, %rd1485;
	add.s64 	%rd1692, %rd1691, %rd1602;
	add.s64 	%rd1693, %rd1692, %rd1690;
	shf.r.wrap.b32 	%r3033, %r2908, %r2907, 1;
	shf.r.wrap.b32 	%r3034, %r2907, %r2908, 1;
	mov.b64 	%rd1694, {%r3034, %r3033};
	shf.r.wrap.b32 	%r3035, %r2908, %r2907, 8;
	shf.r.wrap.b32 	%r3036, %r2907, %r2908, 8;
	mov.b64 	%rd1695, {%r3036, %r3035};
	xor.b64  	%rd1696, %rd1694, %rd1695;
	shr.u64 	%rd1697, %rd1511, 7;
	xor.b64  	%rd1698, %rd1696, %rd1697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3037,%dummy}, %rd1680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3038}, %rd1680;
	}
	shf.r.wrap.b32 	%r3039, %r3038, %r3037, 19;
	shf.r.wrap.b32 	%r3040, %r3037, %r3038, 19;
	mov.b64 	%rd1699, {%r3040, %r3039};
	shf.l.wrap.b32 	%r3041, %r3037, %r3038, 3;
	shf.l.wrap.b32 	%r3042, %r3038, %r3037, 3;
	mov.b64 	%rd1700, {%r3042, %r3041};
	xor.b64  	%rd1701, %rd1699, %rd1700;
	shr.u64 	%rd1702, %rd1680, 6;
	xor.b64  	%rd1703, %rd1701, %rd1702;
	add.s64 	%rd1704, %rd1698, %rd1498;
	add.s64 	%rd1705, %rd1704, %rd1615;
	add.s64 	%rd1706, %rd1705, %rd1703;
	shf.r.wrap.b32 	%r3043, %r2918, %r2917, 1;
	shf.r.wrap.b32 	%r3044, %r2917, %r2918, 1;
	mov.b64 	%rd1707, {%r3044, %r3043};
	shf.r.wrap.b32 	%r3045, %r2918, %r2917, 8;
	shf.r.wrap.b32 	%r3046, %r2917, %r2918, 8;
	mov.b64 	%rd1708, {%r3046, %r3045};
	xor.b64  	%rd1709, %rd1707, %rd1708;
	shr.u64 	%rd1710, %rd1524, 7;
	xor.b64  	%rd1711, %rd1709, %rd1710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3047,%dummy}, %rd1693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3048}, %rd1693;
	}
	shf.r.wrap.b32 	%r3049, %r3048, %r3047, 19;
	shf.r.wrap.b32 	%r3050, %r3047, %r3048, 19;
	mov.b64 	%rd1712, {%r3050, %r3049};
	shf.l.wrap.b32 	%r3051, %r3047, %r3048, 3;
	shf.l.wrap.b32 	%r3052, %r3048, %r3047, 3;
	mov.b64 	%rd1713, {%r3052, %r3051};
	xor.b64  	%rd1714, %rd1712, %rd1713;
	shr.u64 	%rd1715, %rd1693, 6;
	xor.b64  	%rd1716, %rd1714, %rd1715;
	add.s64 	%rd1717, %rd1711, %rd1511;
	add.s64 	%rd1718, %rd1717, %rd1628;
	add.s64 	%rd1719, %rd1718, %rd1716;
	shf.r.wrap.b32 	%r3053, %r2928, %r2927, 1;
	shf.r.wrap.b32 	%r3054, %r2927, %r2928, 1;
	mov.b64 	%rd1720, {%r3054, %r3053};
	shf.r.wrap.b32 	%r3055, %r2928, %r2927, 8;
	shf.r.wrap.b32 	%r3056, %r2927, %r2928, 8;
	mov.b64 	%rd1721, {%r3056, %r3055};
	xor.b64  	%rd1722, %rd1720, %rd1721;
	shr.u64 	%rd1723, %rd1537, 7;
	xor.b64  	%rd1724, %rd1722, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3057,%dummy}, %rd1706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3058}, %rd1706;
	}
	shf.r.wrap.b32 	%r3059, %r3058, %r3057, 19;
	shf.r.wrap.b32 	%r3060, %r3057, %r3058, 19;
	mov.b64 	%rd1725, {%r3060, %r3059};
	shf.l.wrap.b32 	%r3061, %r3057, %r3058, 3;
	shf.l.wrap.b32 	%r3062, %r3058, %r3057, 3;
	mov.b64 	%rd1726, {%r3062, %r3061};
	xor.b64  	%rd1727, %rd1725, %rd1726;
	shr.u64 	%rd1728, %rd1706, 6;
	xor.b64  	%rd1729, %rd1727, %rd1728;
	add.s64 	%rd1730, %rd1724, %rd1524;
	add.s64 	%rd1731, %rd1730, %rd1641;
	add.s64 	%rd1732, %rd1731, %rd1729;
	shf.r.wrap.b32 	%r3063, %r2938, %r2937, 1;
	shf.r.wrap.b32 	%r3064, %r2937, %r2938, 1;
	mov.b64 	%rd1733, {%r3064, %r3063};
	shf.r.wrap.b32 	%r3065, %r2938, %r2937, 8;
	shf.r.wrap.b32 	%r3066, %r2937, %r2938, 8;
	mov.b64 	%rd1734, {%r3066, %r3065};
	xor.b64  	%rd1735, %rd1733, %rd1734;
	shr.u64 	%rd1736, %rd1550, 7;
	xor.b64  	%rd1737, %rd1735, %rd1736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3067,%dummy}, %rd1719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3068}, %rd1719;
	}
	shf.r.wrap.b32 	%r3069, %r3068, %r3067, 19;
	shf.r.wrap.b32 	%r3070, %r3067, %r3068, 19;
	mov.b64 	%rd1738, {%r3070, %r3069};
	shf.l.wrap.b32 	%r3071, %r3067, %r3068, 3;
	shf.l.wrap.b32 	%r3072, %r3068, %r3067, 3;
	mov.b64 	%rd1739, {%r3072, %r3071};
	xor.b64  	%rd1740, %rd1738, %rd1739;
	shr.u64 	%rd1741, %rd1719, 6;
	xor.b64  	%rd1742, %rd1740, %rd1741;
	add.s64 	%rd1743, %rd1737, %rd1537;
	add.s64 	%rd1744, %rd1743, %rd1654;
	add.s64 	%rd1745, %rd1744, %rd1742;
	shf.r.wrap.b32 	%r3073, %r2948, %r2947, 1;
	shf.r.wrap.b32 	%r3074, %r2947, %r2948, 1;
	mov.b64 	%rd1746, {%r3074, %r3073};
	shf.r.wrap.b32 	%r3075, %r2948, %r2947, 8;
	shf.r.wrap.b32 	%r3076, %r2947, %r2948, 8;
	mov.b64 	%rd1747, {%r3076, %r3075};
	xor.b64  	%rd1748, %rd1746, %rd1747;
	shr.u64 	%rd1749, %rd1563, 7;
	xor.b64  	%rd1750, %rd1748, %rd1749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3077,%dummy}, %rd1732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3078}, %rd1732;
	}
	shf.r.wrap.b32 	%r3079, %r3078, %r3077, 19;
	shf.r.wrap.b32 	%r3080, %r3077, %r3078, 19;
	mov.b64 	%rd1751, {%r3080, %r3079};
	shf.l.wrap.b32 	%r3081, %r3077, %r3078, 3;
	shf.l.wrap.b32 	%r3082, %r3078, %r3077, 3;
	mov.b64 	%rd1752, {%r3082, %r3081};
	xor.b64  	%rd1753, %rd1751, %rd1752;
	shr.u64 	%rd1754, %rd1732, 6;
	xor.b64  	%rd1755, %rd1753, %rd1754;
	add.s64 	%rd1756, %rd1750, %rd1550;
	add.s64 	%rd1757, %rd1756, %rd1667;
	add.s64 	%rd1758, %rd1757, %rd1755;
	shf.r.wrap.b32 	%r3083, %r2958, %r2957, 1;
	shf.r.wrap.b32 	%r3084, %r2957, %r2958, 1;
	mov.b64 	%rd1759, {%r3084, %r3083};
	shf.r.wrap.b32 	%r3085, %r2958, %r2957, 8;
	shf.r.wrap.b32 	%r3086, %r2957, %r2958, 8;
	mov.b64 	%rd1760, {%r3086, %r3085};
	xor.b64  	%rd1761, %rd1759, %rd1760;
	shr.u64 	%rd1762, %rd1576, 7;
	xor.b64  	%rd1763, %rd1761, %rd1762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3087,%dummy}, %rd1745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3088}, %rd1745;
	}
	shf.r.wrap.b32 	%r3089, %r3088, %r3087, 19;
	shf.r.wrap.b32 	%r3090, %r3087, %r3088, 19;
	mov.b64 	%rd1764, {%r3090, %r3089};
	shf.l.wrap.b32 	%r3091, %r3087, %r3088, 3;
	shf.l.wrap.b32 	%r3092, %r3088, %r3087, 3;
	mov.b64 	%rd1765, {%r3092, %r3091};
	xor.b64  	%rd1766, %rd1764, %rd1765;
	shr.u64 	%rd1767, %rd1745, 6;
	xor.b64  	%rd1768, %rd1766, %rd1767;
	add.s64 	%rd1769, %rd1763, %rd1563;
	add.s64 	%rd1770, %rd1769, %rd1680;
	add.s64 	%rd1771, %rd1770, %rd1768;
	shf.r.wrap.b32 	%r3093, %r2968, %r2967, 1;
	shf.r.wrap.b32 	%r3094, %r2967, %r2968, 1;
	mov.b64 	%rd1772, {%r3094, %r3093};
	shf.r.wrap.b32 	%r3095, %r2968, %r2967, 8;
	shf.r.wrap.b32 	%r3096, %r2967, %r2968, 8;
	mov.b64 	%rd1773, {%r3096, %r3095};
	xor.b64  	%rd1774, %rd1772, %rd1773;
	shr.u64 	%rd1775, %rd1589, 7;
	xor.b64  	%rd1776, %rd1774, %rd1775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3097,%dummy}, %rd1758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3098}, %rd1758;
	}
	shf.r.wrap.b32 	%r3099, %r3098, %r3097, 19;
	shf.r.wrap.b32 	%r3100, %r3097, %r3098, 19;
	mov.b64 	%rd1777, {%r3100, %r3099};
	shf.l.wrap.b32 	%r3101, %r3097, %r3098, 3;
	shf.l.wrap.b32 	%r3102, %r3098, %r3097, 3;
	mov.b64 	%rd1778, {%r3102, %r3101};
	xor.b64  	%rd1779, %rd1777, %rd1778;
	shr.u64 	%rd1780, %rd1758, 6;
	xor.b64  	%rd1781, %rd1779, %rd1780;
	add.s64 	%rd1782, %rd1776, %rd1576;
	add.s64 	%rd1783, %rd1782, %rd1693;
	add.s64 	%rd1784, %rd1783, %rd1781;
	shf.r.wrap.b32 	%r3103, %r2978, %r2977, 1;
	shf.r.wrap.b32 	%r3104, %r2977, %r2978, 1;
	mov.b64 	%rd1785, {%r3104, %r3103};
	shf.r.wrap.b32 	%r3105, %r2978, %r2977, 8;
	shf.r.wrap.b32 	%r3106, %r2977, %r2978, 8;
	mov.b64 	%rd1786, {%r3106, %r3105};
	xor.b64  	%rd1787, %rd1785, %rd1786;
	shr.u64 	%rd1788, %rd1602, 7;
	xor.b64  	%rd1789, %rd1787, %rd1788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3107,%dummy}, %rd1771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3108}, %rd1771;
	}
	shf.r.wrap.b32 	%r3109, %r3108, %r3107, 19;
	shf.r.wrap.b32 	%r3110, %r3107, %r3108, 19;
	mov.b64 	%rd1790, {%r3110, %r3109};
	shf.l.wrap.b32 	%r3111, %r3107, %r3108, 3;
	shf.l.wrap.b32 	%r3112, %r3108, %r3107, 3;
	mov.b64 	%rd1791, {%r3112, %r3111};
	xor.b64  	%rd1792, %rd1790, %rd1791;
	shr.u64 	%rd1793, %rd1771, 6;
	xor.b64  	%rd1794, %rd1792, %rd1793;
	add.s64 	%rd1795, %rd1789, %rd1589;
	add.s64 	%rd1796, %rd1795, %rd1706;
	add.s64 	%rd1797, %rd1796, %rd1794;
	shf.r.wrap.b32 	%r3113, %r2988, %r2987, 1;
	shf.r.wrap.b32 	%r3114, %r2987, %r2988, 1;
	mov.b64 	%rd1798, {%r3114, %r3113};
	shf.r.wrap.b32 	%r3115, %r2988, %r2987, 8;
	shf.r.wrap.b32 	%r3116, %r2987, %r2988, 8;
	mov.b64 	%rd1799, {%r3116, %r3115};
	xor.b64  	%rd1800, %rd1798, %rd1799;
	shr.u64 	%rd1801, %rd1615, 7;
	xor.b64  	%rd1802, %rd1800, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3117,%dummy}, %rd1784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3118}, %rd1784;
	}
	shf.r.wrap.b32 	%r3119, %r3118, %r3117, 19;
	shf.r.wrap.b32 	%r3120, %r3117, %r3118, 19;
	mov.b64 	%rd1803, {%r3120, %r3119};
	shf.l.wrap.b32 	%r3121, %r3117, %r3118, 3;
	shf.l.wrap.b32 	%r3122, %r3118, %r3117, 3;
	mov.b64 	%rd1804, {%r3122, %r3121};
	xor.b64  	%rd1805, %rd1803, %rd1804;
	shr.u64 	%rd1806, %rd1784, 6;
	xor.b64  	%rd1807, %rd1805, %rd1806;
	add.s64 	%rd1808, %rd1802, %rd1602;
	add.s64 	%rd1809, %rd1808, %rd1719;
	add.s64 	%rd1810, %rd1809, %rd1807;
	shf.r.wrap.b32 	%r3123, %r2998, %r2997, 1;
	shf.r.wrap.b32 	%r3124, %r2997, %r2998, 1;
	mov.b64 	%rd1811, {%r3124, %r3123};
	shf.r.wrap.b32 	%r3125, %r2998, %r2997, 8;
	shf.r.wrap.b32 	%r3126, %r2997, %r2998, 8;
	mov.b64 	%rd1812, {%r3126, %r3125};
	xor.b64  	%rd1813, %rd1811, %rd1812;
	shr.u64 	%rd1814, %rd1628, 7;
	xor.b64  	%rd1815, %rd1813, %rd1814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3127,%dummy}, %rd1797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3128}, %rd1797;
	}
	shf.r.wrap.b32 	%r3129, %r3128, %r3127, 19;
	shf.r.wrap.b32 	%r3130, %r3127, %r3128, 19;
	mov.b64 	%rd1816, {%r3130, %r3129};
	shf.l.wrap.b32 	%r3131, %r3127, %r3128, 3;
	shf.l.wrap.b32 	%r3132, %r3128, %r3127, 3;
	mov.b64 	%rd1817, {%r3132, %r3131};
	xor.b64  	%rd1818, %rd1816, %rd1817;
	shr.u64 	%rd1819, %rd1797, 6;
	xor.b64  	%rd1820, %rd1818, %rd1819;
	add.s64 	%rd1821, %rd1815, %rd1615;
	add.s64 	%rd1822, %rd1821, %rd1732;
	add.s64 	%rd1823, %rd1822, %rd1820;
	shf.r.wrap.b32 	%r3133, %r3008, %r3007, 1;
	shf.r.wrap.b32 	%r3134, %r3007, %r3008, 1;
	mov.b64 	%rd1824, {%r3134, %r3133};
	shf.r.wrap.b32 	%r3135, %r3008, %r3007, 8;
	shf.r.wrap.b32 	%r3136, %r3007, %r3008, 8;
	mov.b64 	%rd1825, {%r3136, %r3135};
	xor.b64  	%rd1826, %rd1824, %rd1825;
	shr.u64 	%rd1827, %rd1641, 7;
	xor.b64  	%rd1828, %rd1826, %rd1827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3137,%dummy}, %rd1810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3138}, %rd1810;
	}
	shf.r.wrap.b32 	%r3139, %r3138, %r3137, 19;
	shf.r.wrap.b32 	%r3140, %r3137, %r3138, 19;
	mov.b64 	%rd1829, {%r3140, %r3139};
	shf.l.wrap.b32 	%r3141, %r3137, %r3138, 3;
	shf.l.wrap.b32 	%r3142, %r3138, %r3137, 3;
	mov.b64 	%rd1830, {%r3142, %r3141};
	xor.b64  	%rd1831, %rd1829, %rd1830;
	shr.u64 	%rd1832, %rd1810, 6;
	xor.b64  	%rd1833, %rd1831, %rd1832;
	add.s64 	%rd1834, %rd1828, %rd1628;
	add.s64 	%rd1835, %rd1834, %rd1745;
	add.s64 	%rd1836, %rd1835, %rd1833;
	shf.r.wrap.b32 	%r3143, %r3018, %r3017, 1;
	shf.r.wrap.b32 	%r3144, %r3017, %r3018, 1;
	mov.b64 	%rd1837, {%r3144, %r3143};
	shf.r.wrap.b32 	%r3145, %r3018, %r3017, 8;
	shf.r.wrap.b32 	%r3146, %r3017, %r3018, 8;
	mov.b64 	%rd1838, {%r3146, %r3145};
	xor.b64  	%rd1839, %rd1837, %rd1838;
	shr.u64 	%rd1840, %rd1654, 7;
	xor.b64  	%rd1841, %rd1839, %rd1840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3147,%dummy}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3148}, %rd1823;
	}
	shf.r.wrap.b32 	%r3149, %r3148, %r3147, 19;
	shf.r.wrap.b32 	%r3150, %r3147, %r3148, 19;
	mov.b64 	%rd1842, {%r3150, %r3149};
	shf.l.wrap.b32 	%r3151, %r3147, %r3148, 3;
	shf.l.wrap.b32 	%r3152, %r3148, %r3147, 3;
	mov.b64 	%rd1843, {%r3152, %r3151};
	xor.b64  	%rd1844, %rd1842, %rd1843;
	shr.u64 	%rd1845, %rd1823, 6;
	xor.b64  	%rd1846, %rd1844, %rd1845;
	add.s64 	%rd1847, %rd1841, %rd1641;
	add.s64 	%rd1848, %rd1847, %rd1758;
	add.s64 	%rd1849, %rd1848, %rd1846;
	shf.r.wrap.b32 	%r3153, %r3028, %r3027, 1;
	shf.r.wrap.b32 	%r3154, %r3027, %r3028, 1;
	mov.b64 	%rd1850, {%r3154, %r3153};
	shf.r.wrap.b32 	%r3155, %r3028, %r3027, 8;
	shf.r.wrap.b32 	%r3156, %r3027, %r3028, 8;
	mov.b64 	%rd1851, {%r3156, %r3155};
	xor.b64  	%rd1852, %rd1850, %rd1851;
	shr.u64 	%rd1853, %rd1667, 7;
	xor.b64  	%rd1854, %rd1852, %rd1853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3157,%dummy}, %rd1836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3158}, %rd1836;
	}
	shf.r.wrap.b32 	%r3159, %r3158, %r3157, 19;
	shf.r.wrap.b32 	%r3160, %r3157, %r3158, 19;
	mov.b64 	%rd1855, {%r3160, %r3159};
	shf.l.wrap.b32 	%r3161, %r3157, %r3158, 3;
	shf.l.wrap.b32 	%r3162, %r3158, %r3157, 3;
	mov.b64 	%rd1856, {%r3162, %r3161};
	xor.b64  	%rd1857, %rd1855, %rd1856;
	shr.u64 	%rd1858, %rd1836, 6;
	xor.b64  	%rd1859, %rd1857, %rd1858;
	add.s64 	%rd1860, %rd1854, %rd1654;
	add.s64 	%rd1861, %rd1860, %rd1771;
	add.s64 	%rd1862, %rd1861, %rd1859;
	shf.r.wrap.b32 	%r3163, %r3038, %r3037, 1;
	shf.r.wrap.b32 	%r3164, %r3037, %r3038, 1;
	mov.b64 	%rd1863, {%r3164, %r3163};
	shf.r.wrap.b32 	%r3165, %r3038, %r3037, 8;
	shf.r.wrap.b32 	%r3166, %r3037, %r3038, 8;
	mov.b64 	%rd1864, {%r3166, %r3165};
	xor.b64  	%rd1865, %rd1863, %rd1864;
	shr.u64 	%rd1866, %rd1680, 7;
	xor.b64  	%rd1867, %rd1865, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3167,%dummy}, %rd1849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3168}, %rd1849;
	}
	shf.r.wrap.b32 	%r3169, %r3168, %r3167, 19;
	shf.r.wrap.b32 	%r3170, %r3167, %r3168, 19;
	mov.b64 	%rd1868, {%r3170, %r3169};
	shf.l.wrap.b32 	%r3171, %r3167, %r3168, 3;
	shf.l.wrap.b32 	%r3172, %r3168, %r3167, 3;
	mov.b64 	%rd1869, {%r3172, %r3171};
	xor.b64  	%rd1870, %rd1868, %rd1869;
	shr.u64 	%rd1871, %rd1849, 6;
	xor.b64  	%rd1872, %rd1870, %rd1871;
	add.s64 	%rd1873, %rd1867, %rd1667;
	add.s64 	%rd1874, %rd1873, %rd1784;
	add.s64 	%rd1875, %rd1874, %rd1872;
	shf.r.wrap.b32 	%r3173, %r3048, %r3047, 1;
	shf.r.wrap.b32 	%r3174, %r3047, %r3048, 1;
	mov.b64 	%rd1876, {%r3174, %r3173};
	shf.r.wrap.b32 	%r3175, %r3048, %r3047, 8;
	shf.r.wrap.b32 	%r3176, %r3047, %r3048, 8;
	mov.b64 	%rd1877, {%r3176, %r3175};
	xor.b64  	%rd1878, %rd1876, %rd1877;
	shr.u64 	%rd1879, %rd1693, 7;
	xor.b64  	%rd1880, %rd1878, %rd1879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3177,%dummy}, %rd1862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3178}, %rd1862;
	}
	shf.r.wrap.b32 	%r3179, %r3178, %r3177, 19;
	shf.r.wrap.b32 	%r3180, %r3177, %r3178, 19;
	mov.b64 	%rd1881, {%r3180, %r3179};
	shf.l.wrap.b32 	%r3181, %r3177, %r3178, 3;
	shf.l.wrap.b32 	%r3182, %r3178, %r3177, 3;
	mov.b64 	%rd1882, {%r3182, %r3181};
	xor.b64  	%rd1883, %rd1881, %rd1882;
	shr.u64 	%rd1884, %rd1862, 6;
	xor.b64  	%rd1885, %rd1883, %rd1884;
	add.s64 	%rd1886, %rd1880, %rd1680;
	add.s64 	%rd1887, %rd1886, %rd1797;
	add.s64 	%rd1888, %rd1887, %rd1885;
	shf.r.wrap.b32 	%r3183, %r3058, %r3057, 1;
	shf.r.wrap.b32 	%r3184, %r3057, %r3058, 1;
	mov.b64 	%rd1889, {%r3184, %r3183};
	shf.r.wrap.b32 	%r3185, %r3058, %r3057, 8;
	shf.r.wrap.b32 	%r3186, %r3057, %r3058, 8;
	mov.b64 	%rd1890, {%r3186, %r3185};
	xor.b64  	%rd1891, %rd1889, %rd1890;
	shr.u64 	%rd1892, %rd1706, 7;
	xor.b64  	%rd1893, %rd1891, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3187,%dummy}, %rd1875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3188}, %rd1875;
	}
	shf.r.wrap.b32 	%r3189, %r3188, %r3187, 19;
	shf.r.wrap.b32 	%r3190, %r3187, %r3188, 19;
	mov.b64 	%rd1894, {%r3190, %r3189};
	shf.l.wrap.b32 	%r3191, %r3187, %r3188, 3;
	shf.l.wrap.b32 	%r3192, %r3188, %r3187, 3;
	mov.b64 	%rd1895, {%r3192, %r3191};
	xor.b64  	%rd1896, %rd1894, %rd1895;
	shr.u64 	%rd1897, %rd1875, 6;
	xor.b64  	%rd1898, %rd1896, %rd1897;
	add.s64 	%rd1899, %rd1893, %rd1693;
	add.s64 	%rd1900, %rd1899, %rd1810;
	add.s64 	%rd1901, %rd1900, %rd1898;
	shf.r.wrap.b32 	%r3193, %r3068, %r3067, 1;
	shf.r.wrap.b32 	%r3194, %r3067, %r3068, 1;
	mov.b64 	%rd1902, {%r3194, %r3193};
	shf.r.wrap.b32 	%r3195, %r3068, %r3067, 8;
	shf.r.wrap.b32 	%r3196, %r3067, %r3068, 8;
	mov.b64 	%rd1903, {%r3196, %r3195};
	xor.b64  	%rd1904, %rd1902, %rd1903;
	shr.u64 	%rd1905, %rd1719, 7;
	xor.b64  	%rd1906, %rd1904, %rd1905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3197,%dummy}, %rd1888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3198}, %rd1888;
	}
	shf.r.wrap.b32 	%r3199, %r3198, %r3197, 19;
	shf.r.wrap.b32 	%r3200, %r3197, %r3198, 19;
	mov.b64 	%rd1907, {%r3200, %r3199};
	shf.l.wrap.b32 	%r3201, %r3197, %r3198, 3;
	shf.l.wrap.b32 	%r3202, %r3198, %r3197, 3;
	mov.b64 	%rd1908, {%r3202, %r3201};
	xor.b64  	%rd1909, %rd1907, %rd1908;
	shr.u64 	%rd1910, %rd1888, 6;
	xor.b64  	%rd1911, %rd1909, %rd1910;
	add.s64 	%rd1912, %rd1906, %rd1706;
	add.s64 	%rd1913, %rd1912, %rd1823;
	add.s64 	%rd1914, %rd1913, %rd1911;
	shf.r.wrap.b32 	%r3203, %r3078, %r3077, 1;
	shf.r.wrap.b32 	%r3204, %r3077, %r3078, 1;
	mov.b64 	%rd1915, {%r3204, %r3203};
	shf.r.wrap.b32 	%r3205, %r3078, %r3077, 8;
	shf.r.wrap.b32 	%r3206, %r3077, %r3078, 8;
	mov.b64 	%rd1916, {%r3206, %r3205};
	xor.b64  	%rd1917, %rd1915, %rd1916;
	shr.u64 	%rd1918, %rd1732, 7;
	xor.b64  	%rd1919, %rd1917, %rd1918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3207,%dummy}, %rd1901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3208}, %rd1901;
	}
	shf.r.wrap.b32 	%r3209, %r3208, %r3207, 19;
	shf.r.wrap.b32 	%r3210, %r3207, %r3208, 19;
	mov.b64 	%rd1920, {%r3210, %r3209};
	shf.l.wrap.b32 	%r3211, %r3207, %r3208, 3;
	shf.l.wrap.b32 	%r3212, %r3208, %r3207, 3;
	mov.b64 	%rd1921, {%r3212, %r3211};
	xor.b64  	%rd1922, %rd1920, %rd1921;
	shr.u64 	%rd1923, %rd1901, 6;
	xor.b64  	%rd1924, %rd1922, %rd1923;
	add.s64 	%rd1925, %rd1919, %rd1719;
	add.s64 	%rd1926, %rd1925, %rd1836;
	add.s64 	%rd1927, %rd1926, %rd1924;
	shf.r.wrap.b32 	%r3213, %r3088, %r3087, 1;
	shf.r.wrap.b32 	%r3214, %r3087, %r3088, 1;
	mov.b64 	%rd1928, {%r3214, %r3213};
	shf.r.wrap.b32 	%r3215, %r3088, %r3087, 8;
	shf.r.wrap.b32 	%r3216, %r3087, %r3088, 8;
	mov.b64 	%rd1929, {%r3216, %r3215};
	xor.b64  	%rd1930, %rd1928, %rd1929;
	shr.u64 	%rd1931, %rd1745, 7;
	xor.b64  	%rd1932, %rd1930, %rd1931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3217,%dummy}, %rd1914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3218}, %rd1914;
	}
	shf.r.wrap.b32 	%r3219, %r3218, %r3217, 19;
	shf.r.wrap.b32 	%r3220, %r3217, %r3218, 19;
	mov.b64 	%rd1933, {%r3220, %r3219};
	shf.l.wrap.b32 	%r3221, %r3217, %r3218, 3;
	shf.l.wrap.b32 	%r3222, %r3218, %r3217, 3;
	mov.b64 	%rd1934, {%r3222, %r3221};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	shr.u64 	%rd1936, %rd1914, 6;
	xor.b64  	%rd1937, %rd1935, %rd1936;
	add.s64 	%rd1938, %rd1932, %rd1732;
	add.s64 	%rd1939, %rd1938, %rd1849;
	add.s64 	%rd1940, %rd1939, %rd1937;
	shf.r.wrap.b32 	%r3223, %r3098, %r3097, 1;
	shf.r.wrap.b32 	%r3224, %r3097, %r3098, 1;
	mov.b64 	%rd1941, {%r3224, %r3223};
	shf.r.wrap.b32 	%r3225, %r3098, %r3097, 8;
	shf.r.wrap.b32 	%r3226, %r3097, %r3098, 8;
	mov.b64 	%rd1942, {%r3226, %r3225};
	xor.b64  	%rd1943, %rd1941, %rd1942;
	shr.u64 	%rd1944, %rd1758, 7;
	xor.b64  	%rd1945, %rd1943, %rd1944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3227,%dummy}, %rd1927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3228}, %rd1927;
	}
	shf.r.wrap.b32 	%r3229, %r3228, %r3227, 19;
	shf.r.wrap.b32 	%r3230, %r3227, %r3228, 19;
	mov.b64 	%rd1946, {%r3230, %r3229};
	shf.l.wrap.b32 	%r3231, %r3227, %r3228, 3;
	shf.l.wrap.b32 	%r3232, %r3228, %r3227, 3;
	mov.b64 	%rd1947, {%r3232, %r3231};
	xor.b64  	%rd1948, %rd1946, %rd1947;
	shr.u64 	%rd1949, %rd1927, 6;
	xor.b64  	%rd1950, %rd1948, %rd1949;
	add.s64 	%rd1951, %rd1945, %rd1745;
	add.s64 	%rd1952, %rd1951, %rd1862;
	add.s64 	%rd1953, %rd1952, %rd1950;
	shf.r.wrap.b32 	%r3233, %r3108, %r3107, 1;
	shf.r.wrap.b32 	%r3234, %r3107, %r3108, 1;
	mov.b64 	%rd1954, {%r3234, %r3233};
	shf.r.wrap.b32 	%r3235, %r3108, %r3107, 8;
	shf.r.wrap.b32 	%r3236, %r3107, %r3108, 8;
	mov.b64 	%rd1955, {%r3236, %r3235};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	shr.u64 	%rd1957, %rd1771, 7;
	xor.b64  	%rd1958, %rd1956, %rd1957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3237,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3238}, %rd1940;
	}
	shf.r.wrap.b32 	%r3239, %r3238, %r3237, 19;
	shf.r.wrap.b32 	%r3240, %r3237, %r3238, 19;
	mov.b64 	%rd1959, {%r3240, %r3239};
	shf.l.wrap.b32 	%r3241, %r3237, %r3238, 3;
	shf.l.wrap.b32 	%r3242, %r3238, %r3237, 3;
	mov.b64 	%rd1960, {%r3242, %r3241};
	xor.b64  	%rd1961, %rd1959, %rd1960;
	shr.u64 	%rd1962, %rd1940, 6;
	xor.b64  	%rd1963, %rd1961, %rd1962;
	add.s64 	%rd1964, %rd1958, %rd1758;
	add.s64 	%rd1965, %rd1964, %rd1875;
	add.s64 	%rd1966, %rd1965, %rd1963;
	shf.r.wrap.b32 	%r3243, %r3118, %r3117, 1;
	shf.r.wrap.b32 	%r3244, %r3117, %r3118, 1;
	mov.b64 	%rd1967, {%r3244, %r3243};
	shf.r.wrap.b32 	%r3245, %r3118, %r3117, 8;
	shf.r.wrap.b32 	%r3246, %r3117, %r3118, 8;
	mov.b64 	%rd1968, {%r3246, %r3245};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	shr.u64 	%rd1970, %rd1784, 7;
	xor.b64  	%rd1971, %rd1969, %rd1970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3247,%dummy}, %rd1953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3248}, %rd1953;
	}
	shf.r.wrap.b32 	%r3249, %r3248, %r3247, 19;
	shf.r.wrap.b32 	%r3250, %r3247, %r3248, 19;
	mov.b64 	%rd1972, {%r3250, %r3249};
	shf.l.wrap.b32 	%r3251, %r3247, %r3248, 3;
	shf.l.wrap.b32 	%r3252, %r3248, %r3247, 3;
	mov.b64 	%rd1973, {%r3252, %r3251};
	xor.b64  	%rd1974, %rd1972, %rd1973;
	shr.u64 	%rd1975, %rd1953, 6;
	xor.b64  	%rd1976, %rd1974, %rd1975;
	add.s64 	%rd1977, %rd1971, %rd1771;
	add.s64 	%rd1978, %rd1977, %rd1888;
	add.s64 	%rd1979, %rd1978, %rd1976;
	shf.r.wrap.b32 	%r3253, %r3128, %r3127, 1;
	shf.r.wrap.b32 	%r3254, %r3127, %r3128, 1;
	mov.b64 	%rd1980, {%r3254, %r3253};
	shf.r.wrap.b32 	%r3255, %r3128, %r3127, 8;
	shf.r.wrap.b32 	%r3256, %r3127, %r3128, 8;
	mov.b64 	%rd1981, {%r3256, %r3255};
	xor.b64  	%rd1982, %rd1980, %rd1981;
	shr.u64 	%rd1983, %rd1797, 7;
	xor.b64  	%rd1984, %rd1982, %rd1983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3257,%dummy}, %rd1966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3258}, %rd1966;
	}
	shf.r.wrap.b32 	%r3259, %r3258, %r3257, 19;
	shf.r.wrap.b32 	%r3260, %r3257, %r3258, 19;
	mov.b64 	%rd1985, {%r3260, %r3259};
	shf.l.wrap.b32 	%r3261, %r3257, %r3258, 3;
	shf.l.wrap.b32 	%r3262, %r3258, %r3257, 3;
	mov.b64 	%rd1986, {%r3262, %r3261};
	xor.b64  	%rd1987, %rd1985, %rd1986;
	shr.u64 	%rd1988, %rd1966, 6;
	xor.b64  	%rd1989, %rd1987, %rd1988;
	add.s64 	%rd1990, %rd1984, %rd1784;
	add.s64 	%rd1991, %rd1990, %rd1901;
	add.s64 	%rd1992, %rd1991, %rd1989;
	shf.r.wrap.b32 	%r3263, %r3138, %r3137, 1;
	shf.r.wrap.b32 	%r3264, %r3137, %r3138, 1;
	mov.b64 	%rd1993, {%r3264, %r3263};
	shf.r.wrap.b32 	%r3265, %r3138, %r3137, 8;
	shf.r.wrap.b32 	%r3266, %r3137, %r3138, 8;
	mov.b64 	%rd1994, {%r3266, %r3265};
	xor.b64  	%rd1995, %rd1993, %rd1994;
	shr.u64 	%rd1996, %rd1810, 7;
	xor.b64  	%rd1997, %rd1995, %rd1996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3267,%dummy}, %rd1979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3268}, %rd1979;
	}
	shf.r.wrap.b32 	%r3269, %r3268, %r3267, 19;
	shf.r.wrap.b32 	%r3270, %r3267, %r3268, 19;
	mov.b64 	%rd1998, {%r3270, %r3269};
	shf.l.wrap.b32 	%r3271, %r3267, %r3268, 3;
	shf.l.wrap.b32 	%r3272, %r3268, %r3267, 3;
	mov.b64 	%rd1999, {%r3272, %r3271};
	xor.b64  	%rd2000, %rd1998, %rd1999;
	shr.u64 	%rd2001, %rd1979, 6;
	xor.b64  	%rd2002, %rd2000, %rd2001;
	add.s64 	%rd2003, %rd1997, %rd1797;
	add.s64 	%rd2004, %rd2003, %rd1914;
	add.s64 	%rd2005, %rd2004, %rd2002;
	shf.r.wrap.b32 	%r3273, %r3148, %r3147, 1;
	shf.r.wrap.b32 	%r3274, %r3147, %r3148, 1;
	mov.b64 	%rd2006, {%r3274, %r3273};
	shf.r.wrap.b32 	%r3275, %r3148, %r3147, 8;
	shf.r.wrap.b32 	%r3276, %r3147, %r3148, 8;
	mov.b64 	%rd2007, {%r3276, %r3275};
	xor.b64  	%rd2008, %rd2006, %rd2007;
	shr.u64 	%rd2009, %rd1823, 7;
	xor.b64  	%rd2010, %rd2008, %rd2009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3277,%dummy}, %rd1992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3278}, %rd1992;
	}
	shf.r.wrap.b32 	%r3279, %r3278, %r3277, 19;
	shf.r.wrap.b32 	%r3280, %r3277, %r3278, 19;
	mov.b64 	%rd2011, {%r3280, %r3279};
	shf.l.wrap.b32 	%r3281, %r3277, %r3278, 3;
	shf.l.wrap.b32 	%r3282, %r3278, %r3277, 3;
	mov.b64 	%rd2012, {%r3282, %r3281};
	xor.b64  	%rd2013, %rd2011, %rd2012;
	shr.u64 	%rd2014, %rd1992, 6;
	xor.b64  	%rd2015, %rd2013, %rd2014;
	add.s64 	%rd2016, %rd2010, %rd1810;
	add.s64 	%rd2017, %rd2016, %rd1927;
	add.s64 	%rd2018, %rd2017, %rd2015;
	shf.r.wrap.b32 	%r3283, %r3158, %r3157, 1;
	shf.r.wrap.b32 	%r3284, %r3157, %r3158, 1;
	mov.b64 	%rd2019, {%r3284, %r3283};
	shf.r.wrap.b32 	%r3285, %r3158, %r3157, 8;
	shf.r.wrap.b32 	%r3286, %r3157, %r3158, 8;
	mov.b64 	%rd2020, {%r3286, %r3285};
	xor.b64  	%rd2021, %rd2019, %rd2020;
	shr.u64 	%rd2022, %rd1836, 7;
	xor.b64  	%rd2023, %rd2021, %rd2022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3287,%dummy}, %rd2005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3288}, %rd2005;
	}
	shf.r.wrap.b32 	%r3289, %r3288, %r3287, 19;
	shf.r.wrap.b32 	%r3290, %r3287, %r3288, 19;
	mov.b64 	%rd2024, {%r3290, %r3289};
	shf.l.wrap.b32 	%r3291, %r3287, %r3288, 3;
	shf.l.wrap.b32 	%r3292, %r3288, %r3287, 3;
	mov.b64 	%rd2025, {%r3292, %r3291};
	xor.b64  	%rd2026, %rd2024, %rd2025;
	shr.u64 	%rd2027, %rd2005, 6;
	xor.b64  	%rd2028, %rd2026, %rd2027;
	add.s64 	%rd2029, %rd2023, %rd1823;
	add.s64 	%rd2030, %rd2029, %rd1940;
	add.s64 	%rd2031, %rd2030, %rd2028;
	shf.r.wrap.b32 	%r3293, %r3168, %r3167, 1;
	shf.r.wrap.b32 	%r3294, %r3167, %r3168, 1;
	mov.b64 	%rd2032, {%r3294, %r3293};
	shf.r.wrap.b32 	%r3295, %r3168, %r3167, 8;
	shf.r.wrap.b32 	%r3296, %r3167, %r3168, 8;
	mov.b64 	%rd2033, {%r3296, %r3295};
	xor.b64  	%rd2034, %rd2032, %rd2033;
	shr.u64 	%rd2035, %rd1849, 7;
	xor.b64  	%rd2036, %rd2034, %rd2035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3297,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3298}, %rd2018;
	}
	shf.r.wrap.b32 	%r3299, %r3298, %r3297, 19;
	shf.r.wrap.b32 	%r3300, %r3297, %r3298, 19;
	mov.b64 	%rd2037, {%r3300, %r3299};
	shf.l.wrap.b32 	%r3301, %r3297, %r3298, 3;
	shf.l.wrap.b32 	%r3302, %r3298, %r3297, 3;
	mov.b64 	%rd2038, {%r3302, %r3301};
	xor.b64  	%rd2039, %rd2037, %rd2038;
	shr.u64 	%rd2040, %rd2018, 6;
	xor.b64  	%rd2041, %rd2039, %rd2040;
	add.s64 	%rd2042, %rd2036, %rd1836;
	add.s64 	%rd2043, %rd2042, %rd1953;
	add.s64 	%rd2044, %rd2043, %rd2041;
	shf.r.wrap.b32 	%r3303, %r3178, %r3177, 1;
	shf.r.wrap.b32 	%r3304, %r3177, %r3178, 1;
	mov.b64 	%rd2045, {%r3304, %r3303};
	shf.r.wrap.b32 	%r3305, %r3178, %r3177, 8;
	shf.r.wrap.b32 	%r3306, %r3177, %r3178, 8;
	mov.b64 	%rd2046, {%r3306, %r3305};
	xor.b64  	%rd2047, %rd2045, %rd2046;
	shr.u64 	%rd2048, %rd1862, 7;
	xor.b64  	%rd2049, %rd2047, %rd2048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3307,%dummy}, %rd2031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3308}, %rd2031;
	}
	shf.r.wrap.b32 	%r3309, %r3308, %r3307, 19;
	shf.r.wrap.b32 	%r3310, %r3307, %r3308, 19;
	mov.b64 	%rd2050, {%r3310, %r3309};
	shf.l.wrap.b32 	%r3311, %r3307, %r3308, 3;
	shf.l.wrap.b32 	%r3312, %r3308, %r3307, 3;
	mov.b64 	%rd2051, {%r3312, %r3311};
	xor.b64  	%rd2052, %rd2050, %rd2051;
	shr.u64 	%rd2053, %rd2031, 6;
	xor.b64  	%rd2054, %rd2052, %rd2053;
	add.s64 	%rd2055, %rd2049, %rd1849;
	add.s64 	%rd2056, %rd2055, %rd1966;
	add.s64 	%rd2057, %rd2056, %rd2054;
	shf.r.wrap.b32 	%r3313, %r3188, %r3187, 1;
	shf.r.wrap.b32 	%r3314, %r3187, %r3188, 1;
	mov.b64 	%rd2058, {%r3314, %r3313};
	shf.r.wrap.b32 	%r3315, %r3188, %r3187, 8;
	shf.r.wrap.b32 	%r3316, %r3187, %r3188, 8;
	mov.b64 	%rd2059, {%r3316, %r3315};
	xor.b64  	%rd2060, %rd2058, %rd2059;
	shr.u64 	%rd2061, %rd1875, 7;
	xor.b64  	%rd2062, %rd2060, %rd2061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3317,%dummy}, %rd2044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3318}, %rd2044;
	}
	shf.r.wrap.b32 	%r3319, %r3318, %r3317, 19;
	shf.r.wrap.b32 	%r3320, %r3317, %r3318, 19;
	mov.b64 	%rd2063, {%r3320, %r3319};
	shf.l.wrap.b32 	%r3321, %r3317, %r3318, 3;
	shf.l.wrap.b32 	%r3322, %r3318, %r3317, 3;
	mov.b64 	%rd2064, {%r3322, %r3321};
	xor.b64  	%rd2065, %rd2063, %rd2064;
	shr.u64 	%rd2066, %rd2044, 6;
	xor.b64  	%rd2067, %rd2065, %rd2066;
	add.s64 	%rd2068, %rd2062, %rd1862;
	add.s64 	%rd2069, %rd2068, %rd1979;
	add.s64 	%rd2070, %rd2069, %rd2067;
	add.s64 	%rd2071, %rd40, %rd938;
	add.s64 	%rd2072, %rd2071, -6534734903238641935;
	add.s64 	%rd2073, %rd120, %rd2071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3323,%dummy}, %rd2072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3324}, %rd2072;
	}
	shf.r.wrap.b32 	%r3325, %r3324, %r3323, 14;
	shf.r.wrap.b32 	%r3326, %r3323, %r3324, 14;
	mov.b64 	%rd2074, {%r3326, %r3325};
	shf.r.wrap.b32 	%r3327, %r3324, %r3323, 18;
	shf.r.wrap.b32 	%r3328, %r3323, %r3324, 18;
	mov.b64 	%rd2075, {%r3328, %r3327};
	xor.b64  	%rd2076, %rd2074, %rd2075;
	shf.l.wrap.b32 	%r3329, %r3323, %r3324, 23;
	shf.l.wrap.b32 	%r3330, %r3324, %r3323, 23;
	mov.b64 	%rd2077, {%r3330, %r3329};
	xor.b64  	%rd2078, %rd2076, %rd2077;
	and.b64  	%rd2079, %rd2072, 5840696475078001361;
	mov.u64 	%rd2080, 6534734903238641934;
	sub.s64 	%rd2081, %rd2080, %rd2071;
	and.b64  	%rd2082, %rd2081, -7276294671716946913;
	or.b64  	%rd2083, %rd2079, %rd2082;
	add.s64 	%rd2084, %rd2083, %rd2078;
	add.s64 	%rd2085, %rd2084, %rd41;
	add.s64 	%rd2086, %rd2085, %rd958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3331,%dummy}, %rd2073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3332}, %rd2073;
	}
	shf.r.wrap.b32 	%r3333, %r3332, %r3331, 28;
	shf.r.wrap.b32 	%r3334, %r3331, %r3332, 28;
	mov.b64 	%rd2087, {%r3334, %r3333};
	shf.l.wrap.b32 	%r3335, %r3331, %r3332, 30;
	shf.l.wrap.b32 	%r3336, %r3332, %r3331, 30;
	mov.b64 	%rd2088, {%r3336, %r3335};
	xor.b64  	%rd2089, %rd2087, %rd2088;
	shf.l.wrap.b32 	%r3337, %r3331, %r3332, 25;
	shf.l.wrap.b32 	%r3338, %r3332, %r3331, 25;
	mov.b64 	%rd2090, {%r3338, %r3337};
	xor.b64  	%rd2091, %rd2089, %rd2090;
	and.b64  	%rd2092, %rd2073, -3355664534840381901;
	or.b64  	%rd2093, %rd2092, 3026882967131160840;
	add.s64 	%rd2094, %rd2091, %rd2093;
	add.s64 	%rd2095, %rd2094, %rd2086;
	add.s64 	%rd2096, %rd2086, 6625583534739731862;
	add.s64 	%rd2097, %rd2095, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3339,%dummy}, %rd2096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3340}, %rd2096;
	}
	shf.r.wrap.b32 	%r3341, %r3340, %r3339, 14;
	shf.r.wrap.b32 	%r3342, %r3339, %r3340, 14;
	mov.b64 	%rd2098, {%r3342, %r3341};
	shf.r.wrap.b32 	%r3343, %r3340, %r3339, 18;
	shf.r.wrap.b32 	%r3344, %r3339, %r3340, 18;
	mov.b64 	%rd2099, {%r3344, %r3343};
	xor.b64  	%rd2100, %rd2098, %rd2099;
	shf.l.wrap.b32 	%r3345, %r3339, %r3340, 23;
	shf.l.wrap.b32 	%r3346, %r3340, %r3339, 23;
	mov.b64 	%rd2101, {%r3346, %r3345};
	xor.b64  	%rd2102, %rd2100, %rd2101;
	and.b64  	%rd2103, %rd2096, %rd2072;
	mov.u64 	%rd2104, 2597788502115043945;
	sub.s64 	%rd2105, %rd2104, %rd2086;
	and.b64  	%rd2106, %rd2105, 5840696475078001361;
	or.b64  	%rd2107, %rd2103, %rd2106;
	add.s64 	%rd2108, %rd2107, %rd2102;
	add.s64 	%rd2109, %rd2108, %rd42;
	add.s64 	%rd2110, %rd2109, %rd978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3347,%dummy}, %rd2097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3348}, %rd2097;
	}
	shf.r.wrap.b32 	%r3349, %r3348, %r3347, 28;
	shf.r.wrap.b32 	%r3350, %r3347, %r3348, 28;
	mov.b64 	%rd2111, {%r3350, %r3349};
	shf.l.wrap.b32 	%r3351, %r3347, %r3348, 30;
	shf.l.wrap.b32 	%r3352, %r3348, %r3347, 30;
	mov.b64 	%rd2112, {%r3352, %r3351};
	xor.b64  	%rd2113, %rd2111, %rd2112;
	shf.l.wrap.b32 	%r3353, %r3347, %r3348, 25;
	shf.l.wrap.b32 	%r3354, %r3348, %r3347, 25;
	mov.b64 	%rd2114, {%r3354, %r3353};
	xor.b64  	%rd2115, %rd2113, %rd2114;
	xor.b64  	%rd2116, %rd2073, 7640891576956012808;
	and.b64  	%rd2117, %rd2097, %rd2116;
	and.b64  	%rd2118, %rd2073, 7640891576956012808;
	xor.b64  	%rd2119, %rd2117, %rd2118;
	add.s64 	%rd2120, %rd2115, %rd2119;
	add.s64 	%rd2121, %rd2120, %rd2110;
	add.s64 	%rd2122, %rd2110, 6227659224458531674;
	add.s64 	%rd2123, %rd2121, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3355,%dummy}, %rd2122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3356}, %rd2122;
	}
	shf.r.wrap.b32 	%r3357, %r3356, %r3355, 14;
	shf.r.wrap.b32 	%r3358, %r3355, %r3356, 14;
	mov.b64 	%rd2124, {%r3358, %r3357};
	shf.r.wrap.b32 	%r3359, %r3356, %r3355, 18;
	shf.r.wrap.b32 	%r3360, %r3355, %r3356, 18;
	mov.b64 	%rd2125, {%r3360, %r3359};
	xor.b64  	%rd2126, %rd2124, %rd2125;
	shf.l.wrap.b32 	%r3361, %r3355, %r3356, 23;
	shf.l.wrap.b32 	%r3362, %r3356, %r3355, 23;
	mov.b64 	%rd2127, {%r3362, %r3361};
	xor.b64  	%rd2128, %rd2126, %rd2127;
	and.b64  	%rd2129, %rd2122, %rd2096;
	mov.u64 	%rd2130, -6227659224458531675;
	sub.s64 	%rd2131, %rd2130, %rd2110;
	and.b64  	%rd2132, %rd2072, %rd2131;
	or.b64  	%rd2133, %rd2129, %rd2132;
	add.s64 	%rd2134, %rd2133, %rd2128;
	add.s64 	%rd2135, %rd2134, %rd43;
	add.s64 	%rd2136, %rd2135, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3363,%dummy}, %rd2123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3364}, %rd2123;
	}
	shf.r.wrap.b32 	%r3365, %r3364, %r3363, 28;
	shf.r.wrap.b32 	%r3366, %r3363, %r3364, 28;
	mov.b64 	%rd2137, {%r3366, %r3365};
	shf.l.wrap.b32 	%r3367, %r3363, %r3364, 30;
	shf.l.wrap.b32 	%r3368, %r3364, %r3363, 30;
	mov.b64 	%rd2138, {%r3368, %r3367};
	xor.b64  	%rd2139, %rd2137, %rd2138;
	shf.l.wrap.b32 	%r3369, %r3363, %r3364, 25;
	shf.l.wrap.b32 	%r3370, %r3364, %r3363, 25;
	mov.b64 	%rd2140, {%r3370, %r3369};
	xor.b64  	%rd2141, %rd2139, %rd2140;
	xor.b64  	%rd2142, %rd2097, %rd2073;
	and.b64  	%rd2143, %rd2123, %rd2142;
	and.b64  	%rd2144, %rd2097, %rd2073;
	xor.b64  	%rd2145, %rd2143, %rd2144;
	add.s64 	%rd2146, %rd2141, %rd2145;
	add.s64 	%rd2147, %rd2146, %rd2136;
	add.s64 	%rd2148, %rd2136, -4965156021675537447;
	add.s64 	%rd2149, %rd2147, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3371,%dummy}, %rd2148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3372}, %rd2148;
	}
	shf.r.wrap.b32 	%r3373, %r3372, %r3371, 14;
	shf.r.wrap.b32 	%r3374, %r3371, %r3372, 14;
	mov.b64 	%rd2150, {%r3374, %r3373};
	shf.r.wrap.b32 	%r3375, %r3372, %r3371, 18;
	shf.r.wrap.b32 	%r3376, %r3371, %r3372, 18;
	mov.b64 	%rd2151, {%r3376, %r3375};
	xor.b64  	%rd2152, %rd2150, %rd2151;
	shf.l.wrap.b32 	%r3377, %r3371, %r3372, 23;
	shf.l.wrap.b32 	%r3378, %r3372, %r3371, 23;
	mov.b64 	%rd2153, {%r3378, %r3377};
	xor.b64  	%rd2154, %rd2152, %rd2153;
	and.b64  	%rd2155, %rd2148, %rd2122;
	mov.u64 	%rd2156, 4965156021675537446;
	sub.s64 	%rd2157, %rd2156, %rd2136;
	and.b64  	%rd2158, %rd2096, %rd2157;
	or.b64  	%rd2159, %rd2155, %rd2158;
	add.s64 	%rd2160, %rd2159, %rd2072;
	add.s64 	%rd2161, %rd2160, %rd2154;
	add.s64 	%rd2162, %rd2161, %rd44;
	add.s64 	%rd2163, %rd2162, %rd1018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3379,%dummy}, %rd2149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3380}, %rd2149;
	}
	shf.r.wrap.b32 	%r3381, %r3380, %r3379, 28;
	shf.r.wrap.b32 	%r3382, %r3379, %r3380, 28;
	mov.b64 	%rd2164, {%r3382, %r3381};
	shf.l.wrap.b32 	%r3383, %r3379, %r3380, 30;
	shf.l.wrap.b32 	%r3384, %r3380, %r3379, 30;
	mov.b64 	%rd2165, {%r3384, %r3383};
	xor.b64  	%rd2166, %rd2164, %rd2165;
	shf.l.wrap.b32 	%r3385, %r3379, %r3380, 25;
	shf.l.wrap.b32 	%r3386, %r3380, %r3379, 25;
	mov.b64 	%rd2167, {%r3386, %r3385};
	xor.b64  	%rd2168, %rd2166, %rd2167;
	xor.b64  	%rd2169, %rd2123, %rd2097;
	and.b64  	%rd2170, %rd2149, %rd2169;
	and.b64  	%rd2171, %rd2123, %rd2097;
	xor.b64  	%rd2172, %rd2170, %rd2171;
	add.s64 	%rd2173, %rd2168, %rd2172;
	add.s64 	%rd2174, %rd2163, %rd2073;
	add.s64 	%rd2175, %rd2173, %rd2163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3387,%dummy}, %rd2174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3388}, %rd2174;
	}
	shf.r.wrap.b32 	%r3389, %r3388, %r3387, 14;
	shf.r.wrap.b32 	%r3390, %r3387, %r3388, 14;
	mov.b64 	%rd2176, {%r3390, %r3389};
	shf.r.wrap.b32 	%r3391, %r3388, %r3387, 18;
	shf.r.wrap.b32 	%r3392, %r3387, %r3388, 18;
	mov.b64 	%rd2177, {%r3392, %r3391};
	xor.b64  	%rd2178, %rd2176, %rd2177;
	shf.l.wrap.b32 	%r3393, %r3387, %r3388, 23;
	shf.l.wrap.b32 	%r3394, %r3388, %r3387, 23;
	mov.b64 	%rd2179, {%r3394, %r3393};
	xor.b64  	%rd2180, %rd2178, %rd2179;
	and.b64  	%rd2181, %rd2174, %rd2148;
	not.b64 	%rd2182, %rd2174;
	and.b64  	%rd2183, %rd2122, %rd2182;
	or.b64  	%rd2184, %rd2181, %rd2183;
	add.s64 	%rd2185, %rd2184, %rd2096;
	add.s64 	%rd2186, %rd2185, %rd2180;
	add.s64 	%rd2187, %rd2186, %rd45;
	add.s64 	%rd2188, %rd2187, %rd1038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3395,%dummy}, %rd2175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3396}, %rd2175;
	}
	shf.r.wrap.b32 	%r3397, %r3396, %r3395, 28;
	shf.r.wrap.b32 	%r3398, %r3395, %r3396, 28;
	mov.b64 	%rd2189, {%r3398, %r3397};
	shf.l.wrap.b32 	%r3399, %r3395, %r3396, 30;
	shf.l.wrap.b32 	%r3400, %r3396, %r3395, 30;
	mov.b64 	%rd2190, {%r3400, %r3399};
	xor.b64  	%rd2191, %rd2189, %rd2190;
	shf.l.wrap.b32 	%r3401, %r3395, %r3396, 25;
	shf.l.wrap.b32 	%r3402, %r3396, %r3395, 25;
	mov.b64 	%rd2192, {%r3402, %r3401};
	xor.b64  	%rd2193, %rd2191, %rd2192;
	xor.b64  	%rd2194, %rd2149, %rd2123;
	and.b64  	%rd2195, %rd2175, %rd2194;
	and.b64  	%rd2196, %rd2149, %rd2123;
	xor.b64  	%rd2197, %rd2195, %rd2196;
	add.s64 	%rd2198, %rd2193, %rd2197;
	add.s64 	%rd2199, %rd2188, %rd2097;
	add.s64 	%rd2200, %rd2198, %rd2188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3403,%dummy}, %rd2199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3404}, %rd2199;
	}
	shf.r.wrap.b32 	%r3405, %r3404, %r3403, 14;
	shf.r.wrap.b32 	%r3406, %r3403, %r3404, 14;
	mov.b64 	%rd2201, {%r3406, %r3405};
	shf.r.wrap.b32 	%r3407, %r3404, %r3403, 18;
	shf.r.wrap.b32 	%r3408, %r3403, %r3404, 18;
	mov.b64 	%rd2202, {%r3408, %r3407};
	xor.b64  	%rd2203, %rd2201, %rd2202;
	shf.l.wrap.b32 	%r3409, %r3403, %r3404, 23;
	shf.l.wrap.b32 	%r3410, %r3404, %r3403, 23;
	mov.b64 	%rd2204, {%r3410, %r3409};
	xor.b64  	%rd2205, %rd2203, %rd2204;
	and.b64  	%rd2206, %rd2199, %rd2174;
	not.b64 	%rd2207, %rd2199;
	and.b64  	%rd2208, %rd2148, %rd2207;
	or.b64  	%rd2209, %rd2206, %rd2208;
	add.s64 	%rd2210, %rd2209, %rd2122;
	add.s64 	%rd2211, %rd2210, %rd2205;
	add.s64 	%rd2212, %rd2211, %rd46;
	add.s64 	%rd2213, %rd2212, %rd1058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3411,%dummy}, %rd2200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3412}, %rd2200;
	}
	shf.r.wrap.b32 	%r3413, %r3412, %r3411, 28;
	shf.r.wrap.b32 	%r3414, %r3411, %r3412, 28;
	mov.b64 	%rd2214, {%r3414, %r3413};
	shf.l.wrap.b32 	%r3415, %r3411, %r3412, 30;
	shf.l.wrap.b32 	%r3416, %r3412, %r3411, 30;
	mov.b64 	%rd2215, {%r3416, %r3415};
	xor.b64  	%rd2216, %rd2214, %rd2215;
	shf.l.wrap.b32 	%r3417, %r3411, %r3412, 25;
	shf.l.wrap.b32 	%r3418, %r3412, %r3411, 25;
	mov.b64 	%rd2217, {%r3418, %r3417};
	xor.b64  	%rd2218, %rd2216, %rd2217;
	xor.b64  	%rd2219, %rd2175, %rd2149;
	and.b64  	%rd2220, %rd2200, %rd2219;
	and.b64  	%rd2221, %rd2175, %rd2149;
	xor.b64  	%rd2222, %rd2220, %rd2221;
	add.s64 	%rd2223, %rd2218, %rd2222;
	add.s64 	%rd2224, %rd2213, %rd2123;
	add.s64 	%rd2225, %rd2223, %rd2213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3419,%dummy}, %rd2224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3420}, %rd2224;
	}
	shf.r.wrap.b32 	%r3421, %r3420, %r3419, 14;
	shf.r.wrap.b32 	%r3422, %r3419, %r3420, 14;
	mov.b64 	%rd2226, {%r3422, %r3421};
	shf.r.wrap.b32 	%r3423, %r3420, %r3419, 18;
	shf.r.wrap.b32 	%r3424, %r3419, %r3420, 18;
	mov.b64 	%rd2227, {%r3424, %r3423};
	xor.b64  	%rd2228, %rd2226, %rd2227;
	shf.l.wrap.b32 	%r3425, %r3419, %r3420, 23;
	shf.l.wrap.b32 	%r3426, %r3420, %r3419, 23;
	mov.b64 	%rd2229, {%r3426, %r3425};
	xor.b64  	%rd2230, %rd2228, %rd2229;
	and.b64  	%rd2231, %rd2224, %rd2199;
	not.b64 	%rd2232, %rd2224;
	and.b64  	%rd2233, %rd2174, %rd2232;
	or.b64  	%rd2234, %rd2231, %rd2233;
	add.s64 	%rd2235, %rd2234, %rd2148;
	add.s64 	%rd2236, %rd2235, %rd2230;
	add.s64 	%rd2237, %rd2236, %rd47;
	add.s64 	%rd2238, %rd2237, %rd1078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3427,%dummy}, %rd2225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3428}, %rd2225;
	}
	shf.r.wrap.b32 	%r3429, %r3428, %r3427, 28;
	shf.r.wrap.b32 	%r3430, %r3427, %r3428, 28;
	mov.b64 	%rd2239, {%r3430, %r3429};
	shf.l.wrap.b32 	%r3431, %r3427, %r3428, 30;
	shf.l.wrap.b32 	%r3432, %r3428, %r3427, 30;
	mov.b64 	%rd2240, {%r3432, %r3431};
	xor.b64  	%rd2241, %rd2239, %rd2240;
	shf.l.wrap.b32 	%r3433, %r3427, %r3428, 25;
	shf.l.wrap.b32 	%r3434, %r3428, %r3427, 25;
	mov.b64 	%rd2242, {%r3434, %r3433};
	xor.b64  	%rd2243, %rd2241, %rd2242;
	xor.b64  	%rd2244, %rd2200, %rd2175;
	and.b64  	%rd2245, %rd2225, %rd2244;
	and.b64  	%rd2246, %rd2200, %rd2175;
	xor.b64  	%rd2247, %rd2245, %rd2246;
	add.s64 	%rd2248, %rd2243, %rd2247;
	add.s64 	%rd2249, %rd2238, %rd2149;
	add.s64 	%rd2250, %rd2248, %rd2238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3435,%dummy}, %rd2249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3436}, %rd2249;
	}
	shf.r.wrap.b32 	%r3437, %r3436, %r3435, 14;
	shf.r.wrap.b32 	%r3438, %r3435, %r3436, 14;
	mov.b64 	%rd2251, {%r3438, %r3437};
	shf.r.wrap.b32 	%r3439, %r3436, %r3435, 18;
	shf.r.wrap.b32 	%r3440, %r3435, %r3436, 18;
	mov.b64 	%rd2252, {%r3440, %r3439};
	xor.b64  	%rd2253, %rd2251, %rd2252;
	shf.l.wrap.b32 	%r3441, %r3435, %r3436, 23;
	shf.l.wrap.b32 	%r3442, %r3436, %r3435, 23;
	mov.b64 	%rd2254, {%r3442, %r3441};
	xor.b64  	%rd2255, %rd2253, %rd2254;
	and.b64  	%rd2256, %rd2249, %rd2224;
	not.b64 	%rd2257, %rd2249;
	and.b64  	%rd2258, %rd2199, %rd2257;
	or.b64  	%rd2259, %rd2256, %rd2258;
	add.s64 	%rd2260, %rd2259, %rd2174;
	add.s64 	%rd2261, %rd2260, %rd2255;
	add.s64 	%rd2262, %rd2261, %rd48;
	add.s64 	%rd2263, %rd2262, %rd1098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3443,%dummy}, %rd2250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3444}, %rd2250;
	}
	shf.r.wrap.b32 	%r3445, %r3444, %r3443, 28;
	shf.r.wrap.b32 	%r3446, %r3443, %r3444, 28;
	mov.b64 	%rd2264, {%r3446, %r3445};
	shf.l.wrap.b32 	%r3447, %r3443, %r3444, 30;
	shf.l.wrap.b32 	%r3448, %r3444, %r3443, 30;
	mov.b64 	%rd2265, {%r3448, %r3447};
	xor.b64  	%rd2266, %rd2264, %rd2265;
	shf.l.wrap.b32 	%r3449, %r3443, %r3444, 25;
	shf.l.wrap.b32 	%r3450, %r3444, %r3443, 25;
	mov.b64 	%rd2267, {%r3450, %r3449};
	xor.b64  	%rd2268, %rd2266, %rd2267;
	xor.b64  	%rd2269, %rd2225, %rd2200;
	and.b64  	%rd2270, %rd2250, %rd2269;
	and.b64  	%rd2271, %rd2225, %rd2200;
	xor.b64  	%rd2272, %rd2270, %rd2271;
	add.s64 	%rd2273, %rd2268, %rd2272;
	add.s64 	%rd2274, %rd2263, %rd2175;
	add.s64 	%rd2275, %rd2273, %rd2263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3451,%dummy}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3452}, %rd2274;
	}
	shf.r.wrap.b32 	%r3453, %r3452, %r3451, 14;
	shf.r.wrap.b32 	%r3454, %r3451, %r3452, 14;
	mov.b64 	%rd2276, {%r3454, %r3453};
	shf.r.wrap.b32 	%r3455, %r3452, %r3451, 18;
	shf.r.wrap.b32 	%r3456, %r3451, %r3452, 18;
	mov.b64 	%rd2277, {%r3456, %r3455};
	xor.b64  	%rd2278, %rd2276, %rd2277;
	shf.l.wrap.b32 	%r3457, %r3451, %r3452, 23;
	shf.l.wrap.b32 	%r3458, %r3452, %r3451, 23;
	mov.b64 	%rd2279, {%r3458, %r3457};
	xor.b64  	%rd2280, %rd2278, %rd2279;
	and.b64  	%rd2281, %rd2274, %rd2249;
	not.b64 	%rd2282, %rd2274;
	and.b64  	%rd2283, %rd2224, %rd2282;
	or.b64  	%rd2284, %rd2281, %rd2283;
	add.s64 	%rd2285, %rd2284, %rd2199;
	add.s64 	%rd2286, %rd2285, %rd2280;
	add.s64 	%rd2287, %rd2286, %rd49;
	add.s64 	%rd2288, %rd2287, %rd1118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3459,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3460}, %rd2275;
	}
	shf.r.wrap.b32 	%r3461, %r3460, %r3459, 28;
	shf.r.wrap.b32 	%r3462, %r3459, %r3460, 28;
	mov.b64 	%rd2289, {%r3462, %r3461};
	shf.l.wrap.b32 	%r3463, %r3459, %r3460, 30;
	shf.l.wrap.b32 	%r3464, %r3460, %r3459, 30;
	mov.b64 	%rd2290, {%r3464, %r3463};
	xor.b64  	%rd2291, %rd2289, %rd2290;
	shf.l.wrap.b32 	%r3465, %r3459, %r3460, 25;
	shf.l.wrap.b32 	%r3466, %r3460, %r3459, 25;
	mov.b64 	%rd2292, {%r3466, %r3465};
	xor.b64  	%rd2293, %rd2291, %rd2292;
	xor.b64  	%rd2294, %rd2250, %rd2225;
	and.b64  	%rd2295, %rd2275, %rd2294;
	and.b64  	%rd2296, %rd2250, %rd2225;
	xor.b64  	%rd2297, %rd2295, %rd2296;
	add.s64 	%rd2298, %rd2293, %rd2297;
	add.s64 	%rd2299, %rd2288, %rd2200;
	add.s64 	%rd2300, %rd2298, %rd2288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3467,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3468}, %rd2299;
	}
	shf.r.wrap.b32 	%r3469, %r3468, %r3467, 14;
	shf.r.wrap.b32 	%r3470, %r3467, %r3468, 14;
	mov.b64 	%rd2301, {%r3470, %r3469};
	shf.r.wrap.b32 	%r3471, %r3468, %r3467, 18;
	shf.r.wrap.b32 	%r3472, %r3467, %r3468, 18;
	mov.b64 	%rd2302, {%r3472, %r3471};
	xor.b64  	%rd2303, %rd2301, %rd2302;
	shf.l.wrap.b32 	%r3473, %r3467, %r3468, 23;
	shf.l.wrap.b32 	%r3474, %r3468, %r3467, 23;
	mov.b64 	%rd2304, {%r3474, %r3473};
	xor.b64  	%rd2305, %rd2303, %rd2304;
	and.b64  	%rd2306, %rd2299, %rd2274;
	not.b64 	%rd2307, %rd2299;
	and.b64  	%rd2308, %rd2249, %rd2307;
	or.b64  	%rd2309, %rd2306, %rd2308;
	add.s64 	%rd2310, %rd2309, %rd2224;
	add.s64 	%rd2311, %rd2310, %rd2305;
	add.s64 	%rd2312, %rd2311, %rd50;
	add.s64 	%rd2313, %rd2312, %rd1138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3475,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3476}, %rd2300;
	}
	shf.r.wrap.b32 	%r3477, %r3476, %r3475, 28;
	shf.r.wrap.b32 	%r3478, %r3475, %r3476, 28;
	mov.b64 	%rd2314, {%r3478, %r3477};
	shf.l.wrap.b32 	%r3479, %r3475, %r3476, 30;
	shf.l.wrap.b32 	%r3480, %r3476, %r3475, 30;
	mov.b64 	%rd2315, {%r3480, %r3479};
	xor.b64  	%rd2316, %rd2314, %rd2315;
	shf.l.wrap.b32 	%r3481, %r3475, %r3476, 25;
	shf.l.wrap.b32 	%r3482, %r3476, %r3475, 25;
	mov.b64 	%rd2317, {%r3482, %r3481};
	xor.b64  	%rd2318, %rd2316, %rd2317;
	xor.b64  	%rd2319, %rd2275, %rd2250;
	and.b64  	%rd2320, %rd2300, %rd2319;
	and.b64  	%rd2321, %rd2275, %rd2250;
	xor.b64  	%rd2322, %rd2320, %rd2321;
	add.s64 	%rd2323, %rd2318, %rd2322;
	add.s64 	%rd2324, %rd2313, %rd2225;
	add.s64 	%rd2325, %rd2323, %rd2313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3483,%dummy}, %rd2324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3484}, %rd2324;
	}
	shf.r.wrap.b32 	%r3485, %r3484, %r3483, 14;
	shf.r.wrap.b32 	%r3486, %r3483, %r3484, 14;
	mov.b64 	%rd2326, {%r3486, %r3485};
	shf.r.wrap.b32 	%r3487, %r3484, %r3483, 18;
	shf.r.wrap.b32 	%r3488, %r3483, %r3484, 18;
	mov.b64 	%rd2327, {%r3488, %r3487};
	xor.b64  	%rd2328, %rd2326, %rd2327;
	shf.l.wrap.b32 	%r3489, %r3483, %r3484, 23;
	shf.l.wrap.b32 	%r3490, %r3484, %r3483, 23;
	mov.b64 	%rd2329, {%r3490, %r3489};
	xor.b64  	%rd2330, %rd2328, %rd2329;
	and.b64  	%rd2331, %rd2324, %rd2299;
	not.b64 	%rd2332, %rd2324;
	and.b64  	%rd2333, %rd2274, %rd2332;
	or.b64  	%rd2334, %rd2331, %rd2333;
	add.s64 	%rd2335, %rd2334, %rd2249;
	add.s64 	%rd2336, %rd2335, %rd2330;
	add.s64 	%rd2337, %rd2336, %rd51;
	add.s64 	%rd2338, %rd2337, %rd1158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3491,%dummy}, %rd2325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3492}, %rd2325;
	}
	shf.r.wrap.b32 	%r3493, %r3492, %r3491, 28;
	shf.r.wrap.b32 	%r3494, %r3491, %r3492, 28;
	mov.b64 	%rd2339, {%r3494, %r3493};
	shf.l.wrap.b32 	%r3495, %r3491, %r3492, 30;
	shf.l.wrap.b32 	%r3496, %r3492, %r3491, 30;
	mov.b64 	%rd2340, {%r3496, %r3495};
	xor.b64  	%rd2341, %rd2339, %rd2340;
	shf.l.wrap.b32 	%r3497, %r3491, %r3492, 25;
	shf.l.wrap.b32 	%r3498, %r3492, %r3491, 25;
	mov.b64 	%rd2342, {%r3498, %r3497};
	xor.b64  	%rd2343, %rd2341, %rd2342;
	xor.b64  	%rd2344, %rd2300, %rd2275;
	and.b64  	%rd2345, %rd2325, %rd2344;
	and.b64  	%rd2346, %rd2300, %rd2275;
	xor.b64  	%rd2347, %rd2345, %rd2346;
	add.s64 	%rd2348, %rd2343, %rd2347;
	add.s64 	%rd2349, %rd2338, %rd2250;
	add.s64 	%rd2350, %rd2348, %rd2338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3499,%dummy}, %rd2349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3500}, %rd2349;
	}
	shf.r.wrap.b32 	%r3501, %r3500, %r3499, 14;
	shf.r.wrap.b32 	%r3502, %r3499, %r3500, 14;
	mov.b64 	%rd2351, {%r3502, %r3501};
	shf.r.wrap.b32 	%r3503, %r3500, %r3499, 18;
	shf.r.wrap.b32 	%r3504, %r3499, %r3500, 18;
	mov.b64 	%rd2352, {%r3504, %r3503};
	xor.b64  	%rd2353, %rd2351, %rd2352;
	shf.l.wrap.b32 	%r3505, %r3499, %r3500, 23;
	shf.l.wrap.b32 	%r3506, %r3500, %r3499, 23;
	mov.b64 	%rd2354, {%r3506, %r3505};
	xor.b64  	%rd2355, %rd2353, %rd2354;
	and.b64  	%rd2356, %rd2349, %rd2324;
	not.b64 	%rd2357, %rd2349;
	and.b64  	%rd2358, %rd2299, %rd2357;
	or.b64  	%rd2359, %rd2356, %rd2358;
	add.s64 	%rd2360, %rd2359, %rd2274;
	add.s64 	%rd2361, %rd2360, %rd2355;
	add.s64 	%rd2362, %rd2361, %rd52;
	add.s64 	%rd2363, %rd2362, %rd1178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3507,%dummy}, %rd2350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3508}, %rd2350;
	}
	shf.r.wrap.b32 	%r3509, %r3508, %r3507, 28;
	shf.r.wrap.b32 	%r3510, %r3507, %r3508, 28;
	mov.b64 	%rd2364, {%r3510, %r3509};
	shf.l.wrap.b32 	%r3511, %r3507, %r3508, 30;
	shf.l.wrap.b32 	%r3512, %r3508, %r3507, 30;
	mov.b64 	%rd2365, {%r3512, %r3511};
	xor.b64  	%rd2366, %rd2364, %rd2365;
	shf.l.wrap.b32 	%r3513, %r3507, %r3508, 25;
	shf.l.wrap.b32 	%r3514, %r3508, %r3507, 25;
	mov.b64 	%rd2367, {%r3514, %r3513};
	xor.b64  	%rd2368, %rd2366, %rd2367;
	xor.b64  	%rd2369, %rd2325, %rd2300;
	and.b64  	%rd2370, %rd2350, %rd2369;
	and.b64  	%rd2371, %rd2325, %rd2300;
	xor.b64  	%rd2372, %rd2370, %rd2371;
	add.s64 	%rd2373, %rd2368, %rd2372;
	add.s64 	%rd2374, %rd2363, %rd2275;
	add.s64 	%rd2375, %rd2373, %rd2363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3515,%dummy}, %rd2374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3516}, %rd2374;
	}
	shf.r.wrap.b32 	%r3517, %r3516, %r3515, 14;
	shf.r.wrap.b32 	%r3518, %r3515, %r3516, 14;
	mov.b64 	%rd2376, {%r3518, %r3517};
	shf.r.wrap.b32 	%r3519, %r3516, %r3515, 18;
	shf.r.wrap.b32 	%r3520, %r3515, %r3516, 18;
	mov.b64 	%rd2377, {%r3520, %r3519};
	xor.b64  	%rd2378, %rd2376, %rd2377;
	shf.l.wrap.b32 	%r3521, %r3515, %r3516, 23;
	shf.l.wrap.b32 	%r3522, %r3516, %r3515, 23;
	mov.b64 	%rd2379, {%r3522, %r3521};
	xor.b64  	%rd2380, %rd2378, %rd2379;
	and.b64  	%rd2381, %rd2374, %rd2349;
	not.b64 	%rd2382, %rd2374;
	and.b64  	%rd2383, %rd2324, %rd2382;
	or.b64  	%rd2384, %rd2381, %rd2383;
	add.s64 	%rd2385, %rd2384, %rd2299;
	add.s64 	%rd2386, %rd2385, %rd2380;
	add.s64 	%rd2387, %rd2386, %rd53;
	add.s64 	%rd2388, %rd2387, %rd1198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3523,%dummy}, %rd2375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3524}, %rd2375;
	}
	shf.r.wrap.b32 	%r3525, %r3524, %r3523, 28;
	shf.r.wrap.b32 	%r3526, %r3523, %r3524, 28;
	mov.b64 	%rd2389, {%r3526, %r3525};
	shf.l.wrap.b32 	%r3527, %r3523, %r3524, 30;
	shf.l.wrap.b32 	%r3528, %r3524, %r3523, 30;
	mov.b64 	%rd2390, {%r3528, %r3527};
	xor.b64  	%rd2391, %rd2389, %rd2390;
	shf.l.wrap.b32 	%r3529, %r3523, %r3524, 25;
	shf.l.wrap.b32 	%r3530, %r3524, %r3523, 25;
	mov.b64 	%rd2392, {%r3530, %r3529};
	xor.b64  	%rd2393, %rd2391, %rd2392;
	xor.b64  	%rd2394, %rd2350, %rd2325;
	and.b64  	%rd2395, %rd2375, %rd2394;
	and.b64  	%rd2396, %rd2350, %rd2325;
	xor.b64  	%rd2397, %rd2395, %rd2396;
	add.s64 	%rd2398, %rd2393, %rd2397;
	add.s64 	%rd2399, %rd2388, %rd2300;
	add.s64 	%rd2400, %rd2398, %rd2388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3531,%dummy}, %rd2399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3532}, %rd2399;
	}
	shf.r.wrap.b32 	%r3533, %r3532, %r3531, 14;
	shf.r.wrap.b32 	%r3534, %r3531, %r3532, 14;
	mov.b64 	%rd2401, {%r3534, %r3533};
	shf.r.wrap.b32 	%r3535, %r3532, %r3531, 18;
	shf.r.wrap.b32 	%r3536, %r3531, %r3532, 18;
	mov.b64 	%rd2402, {%r3536, %r3535};
	xor.b64  	%rd2403, %rd2401, %rd2402;
	shf.l.wrap.b32 	%r3537, %r3531, %r3532, 23;
	shf.l.wrap.b32 	%r3538, %r3532, %r3531, 23;
	mov.b64 	%rd2404, {%r3538, %r3537};
	xor.b64  	%rd2405, %rd2403, %rd2404;
	and.b64  	%rd2406, %rd2399, %rd2374;
	not.b64 	%rd2407, %rd2399;
	and.b64  	%rd2408, %rd2349, %rd2407;
	or.b64  	%rd2409, %rd2406, %rd2408;
	add.s64 	%rd2410, %rd2409, %rd2324;
	add.s64 	%rd2411, %rd2410, %rd2405;
	add.s64 	%rd2412, %rd2411, %rd54;
	add.s64 	%rd2413, %rd2412, %rd1218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3539,%dummy}, %rd2400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3540}, %rd2400;
	}
	shf.r.wrap.b32 	%r3541, %r3540, %r3539, 28;
	shf.r.wrap.b32 	%r3542, %r3539, %r3540, 28;
	mov.b64 	%rd2414, {%r3542, %r3541};
	shf.l.wrap.b32 	%r3543, %r3539, %r3540, 30;
	shf.l.wrap.b32 	%r3544, %r3540, %r3539, 30;
	mov.b64 	%rd2415, {%r3544, %r3543};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	shf.l.wrap.b32 	%r3545, %r3539, %r3540, 25;
	shf.l.wrap.b32 	%r3546, %r3540, %r3539, 25;
	mov.b64 	%rd2417, {%r3546, %r3545};
	xor.b64  	%rd2418, %rd2416, %rd2417;
	xor.b64  	%rd2419, %rd2375, %rd2350;
	and.b64  	%rd2420, %rd2400, %rd2419;
	and.b64  	%rd2421, %rd2375, %rd2350;
	xor.b64  	%rd2422, %rd2420, %rd2421;
	add.s64 	%rd2423, %rd2418, %rd2422;
	add.s64 	%rd2424, %rd2413, %rd2325;
	add.s64 	%rd2425, %rd2423, %rd2413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3547,%dummy}, %rd2424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3548}, %rd2424;
	}
	shf.r.wrap.b32 	%r3549, %r3548, %r3547, 14;
	shf.r.wrap.b32 	%r3550, %r3547, %r3548, 14;
	mov.b64 	%rd2426, {%r3550, %r3549};
	shf.r.wrap.b32 	%r3551, %r3548, %r3547, 18;
	shf.r.wrap.b32 	%r3552, %r3547, %r3548, 18;
	mov.b64 	%rd2427, {%r3552, %r3551};
	xor.b64  	%rd2428, %rd2426, %rd2427;
	shf.l.wrap.b32 	%r3553, %r3547, %r3548, 23;
	shf.l.wrap.b32 	%r3554, %r3548, %r3547, 23;
	mov.b64 	%rd2429, {%r3554, %r3553};
	xor.b64  	%rd2430, %rd2428, %rd2429;
	and.b64  	%rd2431, %rd2424, %rd2399;
	not.b64 	%rd2432, %rd2424;
	and.b64  	%rd2433, %rd2374, %rd2432;
	or.b64  	%rd2434, %rd2431, %rd2433;
	add.s64 	%rd2435, %rd2434, %rd2349;
	add.s64 	%rd2436, %rd2435, %rd2430;
	add.s64 	%rd2437, %rd2436, %rd55;
	add.s64 	%rd2438, %rd2437, %rd1238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3555,%dummy}, %rd2425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3556}, %rd2425;
	}
	shf.r.wrap.b32 	%r3557, %r3556, %r3555, 28;
	shf.r.wrap.b32 	%r3558, %r3555, %r3556, 28;
	mov.b64 	%rd2439, {%r3558, %r3557};
	shf.l.wrap.b32 	%r3559, %r3555, %r3556, 30;
	shf.l.wrap.b32 	%r3560, %r3556, %r3555, 30;
	mov.b64 	%rd2440, {%r3560, %r3559};
	xor.b64  	%rd2441, %rd2439, %rd2440;
	shf.l.wrap.b32 	%r3561, %r3555, %r3556, 25;
	shf.l.wrap.b32 	%r3562, %r3556, %r3555, 25;
	mov.b64 	%rd2442, {%r3562, %r3561};
	xor.b64  	%rd2443, %rd2441, %rd2442;
	xor.b64  	%rd2444, %rd2400, %rd2375;
	and.b64  	%rd2445, %rd2425, %rd2444;
	and.b64  	%rd2446, %rd2400, %rd2375;
	xor.b64  	%rd2447, %rd2445, %rd2446;
	add.s64 	%rd2448, %rd2443, %rd2447;
	add.s64 	%rd2449, %rd2438, %rd2350;
	add.s64 	%rd2450, %rd2448, %rd2438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3563,%dummy}, %rd2449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3564}, %rd2449;
	}
	shf.r.wrap.b32 	%r3565, %r3564, %r3563, 14;
	shf.r.wrap.b32 	%r3566, %r3563, %r3564, 14;
	mov.b64 	%rd2451, {%r3566, %r3565};
	shf.r.wrap.b32 	%r3567, %r3564, %r3563, 18;
	shf.r.wrap.b32 	%r3568, %r3563, %r3564, 18;
	mov.b64 	%rd2452, {%r3568, %r3567};
	xor.b64  	%rd2453, %rd2451, %rd2452;
	shf.l.wrap.b32 	%r3569, %r3563, %r3564, 23;
	shf.l.wrap.b32 	%r3570, %r3564, %r3563, 23;
	mov.b64 	%rd2454, {%r3570, %r3569};
	xor.b64  	%rd2455, %rd2453, %rd2454;
	and.b64  	%rd2456, %rd2449, %rd2424;
	not.b64 	%rd2457, %rd2449;
	and.b64  	%rd2458, %rd2399, %rd2457;
	or.b64  	%rd2459, %rd2456, %rd2458;
	add.s64 	%rd2460, %rd2459, %rd2374;
	add.s64 	%rd2461, %rd2460, %rd2455;
	add.s64 	%rd2462, %rd2461, %rd56;
	add.s64 	%rd2463, %rd2462, %rd1251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3571,%dummy}, %rd2450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3572}, %rd2450;
	}
	shf.r.wrap.b32 	%r3573, %r3572, %r3571, 28;
	shf.r.wrap.b32 	%r3574, %r3571, %r3572, 28;
	mov.b64 	%rd2464, {%r3574, %r3573};
	shf.l.wrap.b32 	%r3575, %r3571, %r3572, 30;
	shf.l.wrap.b32 	%r3576, %r3572, %r3571, 30;
	mov.b64 	%rd2465, {%r3576, %r3575};
	xor.b64  	%rd2466, %rd2464, %rd2465;
	shf.l.wrap.b32 	%r3577, %r3571, %r3572, 25;
	shf.l.wrap.b32 	%r3578, %r3572, %r3571, 25;
	mov.b64 	%rd2467, {%r3578, %r3577};
	xor.b64  	%rd2468, %rd2466, %rd2467;
	xor.b64  	%rd2469, %rd2425, %rd2400;
	and.b64  	%rd2470, %rd2450, %rd2469;
	and.b64  	%rd2471, %rd2425, %rd2400;
	xor.b64  	%rd2472, %rd2470, %rd2471;
	add.s64 	%rd2473, %rd2468, %rd2472;
	add.s64 	%rd2474, %rd2463, %rd2375;
	add.s64 	%rd2475, %rd2473, %rd2463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3579,%dummy}, %rd2474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3580}, %rd2474;
	}
	shf.r.wrap.b32 	%r3581, %r3580, %r3579, 14;
	shf.r.wrap.b32 	%r3582, %r3579, %r3580, 14;
	mov.b64 	%rd2476, {%r3582, %r3581};
	shf.r.wrap.b32 	%r3583, %r3580, %r3579, 18;
	shf.r.wrap.b32 	%r3584, %r3579, %r3580, 18;
	mov.b64 	%rd2477, {%r3584, %r3583};
	xor.b64  	%rd2478, %rd2476, %rd2477;
	shf.l.wrap.b32 	%r3585, %r3579, %r3580, 23;
	shf.l.wrap.b32 	%r3586, %r3580, %r3579, 23;
	mov.b64 	%rd2479, {%r3586, %r3585};
	xor.b64  	%rd2480, %rd2478, %rd2479;
	and.b64  	%rd2481, %rd2474, %rd2449;
	not.b64 	%rd2482, %rd2474;
	and.b64  	%rd2483, %rd2424, %rd2482;
	or.b64  	%rd2484, %rd2481, %rd2483;
	add.s64 	%rd2485, %rd2484, %rd2399;
	add.s64 	%rd2486, %rd2485, %rd2480;
	add.s64 	%rd2487, %rd2486, %rd57;
	add.s64 	%rd2488, %rd2487, %rd1264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3587,%dummy}, %rd2475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3588}, %rd2475;
	}
	shf.r.wrap.b32 	%r3589, %r3588, %r3587, 28;
	shf.r.wrap.b32 	%r3590, %r3587, %r3588, 28;
	mov.b64 	%rd2489, {%r3590, %r3589};
	shf.l.wrap.b32 	%r3591, %r3587, %r3588, 30;
	shf.l.wrap.b32 	%r3592, %r3588, %r3587, 30;
	mov.b64 	%rd2490, {%r3592, %r3591};
	xor.b64  	%rd2491, %rd2489, %rd2490;
	shf.l.wrap.b32 	%r3593, %r3587, %r3588, 25;
	shf.l.wrap.b32 	%r3594, %r3588, %r3587, 25;
	mov.b64 	%rd2492, {%r3594, %r3593};
	xor.b64  	%rd2493, %rd2491, %rd2492;
	xor.b64  	%rd2494, %rd2450, %rd2425;
	and.b64  	%rd2495, %rd2475, %rd2494;
	and.b64  	%rd2496, %rd2450, %rd2425;
	xor.b64  	%rd2497, %rd2495, %rd2496;
	add.s64 	%rd2498, %rd2493, %rd2497;
	add.s64 	%rd2499, %rd2488, %rd2400;
	add.s64 	%rd2500, %rd2498, %rd2488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3595,%dummy}, %rd2499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3596}, %rd2499;
	}
	shf.r.wrap.b32 	%r3597, %r3596, %r3595, 14;
	shf.r.wrap.b32 	%r3598, %r3595, %r3596, 14;
	mov.b64 	%rd2501, {%r3598, %r3597};
	shf.r.wrap.b32 	%r3599, %r3596, %r3595, 18;
	shf.r.wrap.b32 	%r3600, %r3595, %r3596, 18;
	mov.b64 	%rd2502, {%r3600, %r3599};
	xor.b64  	%rd2503, %rd2501, %rd2502;
	shf.l.wrap.b32 	%r3601, %r3595, %r3596, 23;
	shf.l.wrap.b32 	%r3602, %r3596, %r3595, 23;
	mov.b64 	%rd2504, {%r3602, %r3601};
	xor.b64  	%rd2505, %rd2503, %rd2504;
	and.b64  	%rd2506, %rd2499, %rd2474;
	not.b64 	%rd2507, %rd2499;
	and.b64  	%rd2508, %rd2449, %rd2507;
	or.b64  	%rd2509, %rd2506, %rd2508;
	add.s64 	%rd2510, %rd2509, %rd2424;
	add.s64 	%rd2511, %rd2510, %rd2505;
	add.s64 	%rd2512, %rd2511, %rd58;
	add.s64 	%rd2513, %rd2512, %rd1277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3603,%dummy}, %rd2500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3604}, %rd2500;
	}
	shf.r.wrap.b32 	%r3605, %r3604, %r3603, 28;
	shf.r.wrap.b32 	%r3606, %r3603, %r3604, 28;
	mov.b64 	%rd2514, {%r3606, %r3605};
	shf.l.wrap.b32 	%r3607, %r3603, %r3604, 30;
	shf.l.wrap.b32 	%r3608, %r3604, %r3603, 30;
	mov.b64 	%rd2515, {%r3608, %r3607};
	xor.b64  	%rd2516, %rd2514, %rd2515;
	shf.l.wrap.b32 	%r3609, %r3603, %r3604, 25;
	shf.l.wrap.b32 	%r3610, %r3604, %r3603, 25;
	mov.b64 	%rd2517, {%r3610, %r3609};
	xor.b64  	%rd2518, %rd2516, %rd2517;
	xor.b64  	%rd2519, %rd2475, %rd2450;
	and.b64  	%rd2520, %rd2500, %rd2519;
	and.b64  	%rd2521, %rd2475, %rd2450;
	xor.b64  	%rd2522, %rd2520, %rd2521;
	add.s64 	%rd2523, %rd2518, %rd2522;
	add.s64 	%rd2524, %rd2513, %rd2425;
	add.s64 	%rd2525, %rd2523, %rd2513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3611,%dummy}, %rd2524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3612}, %rd2524;
	}
	shf.r.wrap.b32 	%r3613, %r3612, %r3611, 14;
	shf.r.wrap.b32 	%r3614, %r3611, %r3612, 14;
	mov.b64 	%rd2526, {%r3614, %r3613};
	shf.r.wrap.b32 	%r3615, %r3612, %r3611, 18;
	shf.r.wrap.b32 	%r3616, %r3611, %r3612, 18;
	mov.b64 	%rd2527, {%r3616, %r3615};
	xor.b64  	%rd2528, %rd2526, %rd2527;
	shf.l.wrap.b32 	%r3617, %r3611, %r3612, 23;
	shf.l.wrap.b32 	%r3618, %r3612, %r3611, 23;
	mov.b64 	%rd2529, {%r3618, %r3617};
	xor.b64  	%rd2530, %rd2528, %rd2529;
	and.b64  	%rd2531, %rd2524, %rd2499;
	not.b64 	%rd2532, %rd2524;
	and.b64  	%rd2533, %rd2474, %rd2532;
	or.b64  	%rd2534, %rd2531, %rd2533;
	add.s64 	%rd2535, %rd2534, %rd2449;
	add.s64 	%rd2536, %rd2535, %rd2530;
	add.s64 	%rd2537, %rd2536, %rd59;
	add.s64 	%rd2538, %rd2537, %rd1290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3619,%dummy}, %rd2525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3620}, %rd2525;
	}
	shf.r.wrap.b32 	%r3621, %r3620, %r3619, 28;
	shf.r.wrap.b32 	%r3622, %r3619, %r3620, 28;
	mov.b64 	%rd2539, {%r3622, %r3621};
	shf.l.wrap.b32 	%r3623, %r3619, %r3620, 30;
	shf.l.wrap.b32 	%r3624, %r3620, %r3619, 30;
	mov.b64 	%rd2540, {%r3624, %r3623};
	xor.b64  	%rd2541, %rd2539, %rd2540;
	shf.l.wrap.b32 	%r3625, %r3619, %r3620, 25;
	shf.l.wrap.b32 	%r3626, %r3620, %r3619, 25;
	mov.b64 	%rd2542, {%r3626, %r3625};
	xor.b64  	%rd2543, %rd2541, %rd2542;
	xor.b64  	%rd2544, %rd2500, %rd2475;
	and.b64  	%rd2545, %rd2525, %rd2544;
	and.b64  	%rd2546, %rd2500, %rd2475;
	xor.b64  	%rd2547, %rd2545, %rd2546;
	add.s64 	%rd2548, %rd2543, %rd2547;
	add.s64 	%rd2549, %rd2538, %rd2450;
	add.s64 	%rd2550, %rd2548, %rd2538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3627,%dummy}, %rd2549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3628}, %rd2549;
	}
	shf.r.wrap.b32 	%r3629, %r3628, %r3627, 14;
	shf.r.wrap.b32 	%r3630, %r3627, %r3628, 14;
	mov.b64 	%rd2551, {%r3630, %r3629};
	shf.r.wrap.b32 	%r3631, %r3628, %r3627, 18;
	shf.r.wrap.b32 	%r3632, %r3627, %r3628, 18;
	mov.b64 	%rd2552, {%r3632, %r3631};
	xor.b64  	%rd2553, %rd2551, %rd2552;
	shf.l.wrap.b32 	%r3633, %r3627, %r3628, 23;
	shf.l.wrap.b32 	%r3634, %r3628, %r3627, 23;
	mov.b64 	%rd2554, {%r3634, %r3633};
	xor.b64  	%rd2555, %rd2553, %rd2554;
	and.b64  	%rd2556, %rd2549, %rd2524;
	not.b64 	%rd2557, %rd2549;
	and.b64  	%rd2558, %rd2499, %rd2557;
	or.b64  	%rd2559, %rd2556, %rd2558;
	add.s64 	%rd2560, %rd2559, %rd2474;
	add.s64 	%rd2561, %rd2560, %rd2555;
	add.s64 	%rd2562, %rd2561, %rd60;
	add.s64 	%rd2563, %rd2562, %rd1303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3635,%dummy}, %rd2550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3636}, %rd2550;
	}
	shf.r.wrap.b32 	%r3637, %r3636, %r3635, 28;
	shf.r.wrap.b32 	%r3638, %r3635, %r3636, 28;
	mov.b64 	%rd2564, {%r3638, %r3637};
	shf.l.wrap.b32 	%r3639, %r3635, %r3636, 30;
	shf.l.wrap.b32 	%r3640, %r3636, %r3635, 30;
	mov.b64 	%rd2565, {%r3640, %r3639};
	xor.b64  	%rd2566, %rd2564, %rd2565;
	shf.l.wrap.b32 	%r3641, %r3635, %r3636, 25;
	shf.l.wrap.b32 	%r3642, %r3636, %r3635, 25;
	mov.b64 	%rd2567, {%r3642, %r3641};
	xor.b64  	%rd2568, %rd2566, %rd2567;
	xor.b64  	%rd2569, %rd2525, %rd2500;
	and.b64  	%rd2570, %rd2550, %rd2569;
	and.b64  	%rd2571, %rd2525, %rd2500;
	xor.b64  	%rd2572, %rd2570, %rd2571;
	add.s64 	%rd2573, %rd2568, %rd2572;
	add.s64 	%rd2574, %rd2563, %rd2475;
	add.s64 	%rd2575, %rd2573, %rd2563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3643,%dummy}, %rd2574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3644}, %rd2574;
	}
	shf.r.wrap.b32 	%r3645, %r3644, %r3643, 14;
	shf.r.wrap.b32 	%r3646, %r3643, %r3644, 14;
	mov.b64 	%rd2576, {%r3646, %r3645};
	shf.r.wrap.b32 	%r3647, %r3644, %r3643, 18;
	shf.r.wrap.b32 	%r3648, %r3643, %r3644, 18;
	mov.b64 	%rd2577, {%r3648, %r3647};
	xor.b64  	%rd2578, %rd2576, %rd2577;
	shf.l.wrap.b32 	%r3649, %r3643, %r3644, 23;
	shf.l.wrap.b32 	%r3650, %r3644, %r3643, 23;
	mov.b64 	%rd2579, {%r3650, %r3649};
	xor.b64  	%rd2580, %rd2578, %rd2579;
	and.b64  	%rd2581, %rd2574, %rd2549;
	not.b64 	%rd2582, %rd2574;
	and.b64  	%rd2583, %rd2524, %rd2582;
	or.b64  	%rd2584, %rd2581, %rd2583;
	add.s64 	%rd2585, %rd2584, %rd2499;
	add.s64 	%rd2586, %rd2585, %rd2580;
	add.s64 	%rd2587, %rd2586, %rd61;
	add.s64 	%rd2588, %rd2587, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3651,%dummy}, %rd2575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3652}, %rd2575;
	}
	shf.r.wrap.b32 	%r3653, %r3652, %r3651, 28;
	shf.r.wrap.b32 	%r3654, %r3651, %r3652, 28;
	mov.b64 	%rd2589, {%r3654, %r3653};
	shf.l.wrap.b32 	%r3655, %r3651, %r3652, 30;
	shf.l.wrap.b32 	%r3656, %r3652, %r3651, 30;
	mov.b64 	%rd2590, {%r3656, %r3655};
	xor.b64  	%rd2591, %rd2589, %rd2590;
	shf.l.wrap.b32 	%r3657, %r3651, %r3652, 25;
	shf.l.wrap.b32 	%r3658, %r3652, %r3651, 25;
	mov.b64 	%rd2592, {%r3658, %r3657};
	xor.b64  	%rd2593, %rd2591, %rd2592;
	xor.b64  	%rd2594, %rd2550, %rd2525;
	and.b64  	%rd2595, %rd2575, %rd2594;
	and.b64  	%rd2596, %rd2550, %rd2525;
	xor.b64  	%rd2597, %rd2595, %rd2596;
	add.s64 	%rd2598, %rd2593, %rd2597;
	add.s64 	%rd2599, %rd2588, %rd2500;
	add.s64 	%rd2600, %rd2598, %rd2588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3659,%dummy}, %rd2599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3660}, %rd2599;
	}
	shf.r.wrap.b32 	%r3661, %r3660, %r3659, 14;
	shf.r.wrap.b32 	%r3662, %r3659, %r3660, 14;
	mov.b64 	%rd2601, {%r3662, %r3661};
	shf.r.wrap.b32 	%r3663, %r3660, %r3659, 18;
	shf.r.wrap.b32 	%r3664, %r3659, %r3660, 18;
	mov.b64 	%rd2602, {%r3664, %r3663};
	xor.b64  	%rd2603, %rd2601, %rd2602;
	shf.l.wrap.b32 	%r3665, %r3659, %r3660, 23;
	shf.l.wrap.b32 	%r3666, %r3660, %r3659, 23;
	mov.b64 	%rd2604, {%r3666, %r3665};
	xor.b64  	%rd2605, %rd2603, %rd2604;
	and.b64  	%rd2606, %rd2599, %rd2574;
	not.b64 	%rd2607, %rd2599;
	and.b64  	%rd2608, %rd2549, %rd2607;
	or.b64  	%rd2609, %rd2606, %rd2608;
	add.s64 	%rd2610, %rd2609, %rd2524;
	add.s64 	%rd2611, %rd2610, %rd2605;
	add.s64 	%rd2612, %rd2611, %rd62;
	add.s64 	%rd2613, %rd2612, %rd1329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3667,%dummy}, %rd2600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3668}, %rd2600;
	}
	shf.r.wrap.b32 	%r3669, %r3668, %r3667, 28;
	shf.r.wrap.b32 	%r3670, %r3667, %r3668, 28;
	mov.b64 	%rd2614, {%r3670, %r3669};
	shf.l.wrap.b32 	%r3671, %r3667, %r3668, 30;
	shf.l.wrap.b32 	%r3672, %r3668, %r3667, 30;
	mov.b64 	%rd2615, {%r3672, %r3671};
	xor.b64  	%rd2616, %rd2614, %rd2615;
	shf.l.wrap.b32 	%r3673, %r3667, %r3668, 25;
	shf.l.wrap.b32 	%r3674, %r3668, %r3667, 25;
	mov.b64 	%rd2617, {%r3674, %r3673};
	xor.b64  	%rd2618, %rd2616, %rd2617;
	xor.b64  	%rd2619, %rd2575, %rd2550;
	and.b64  	%rd2620, %rd2600, %rd2619;
	and.b64  	%rd2621, %rd2575, %rd2550;
	xor.b64  	%rd2622, %rd2620, %rd2621;
	add.s64 	%rd2623, %rd2618, %rd2622;
	add.s64 	%rd2624, %rd2613, %rd2525;
	add.s64 	%rd2625, %rd2623, %rd2613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3675,%dummy}, %rd2624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3676}, %rd2624;
	}
	shf.r.wrap.b32 	%r3677, %r3676, %r3675, 14;
	shf.r.wrap.b32 	%r3678, %r3675, %r3676, 14;
	mov.b64 	%rd2626, {%r3678, %r3677};
	shf.r.wrap.b32 	%r3679, %r3676, %r3675, 18;
	shf.r.wrap.b32 	%r3680, %r3675, %r3676, 18;
	mov.b64 	%rd2627, {%r3680, %r3679};
	xor.b64  	%rd2628, %rd2626, %rd2627;
	shf.l.wrap.b32 	%r3681, %r3675, %r3676, 23;
	shf.l.wrap.b32 	%r3682, %r3676, %r3675, 23;
	mov.b64 	%rd2629, {%r3682, %r3681};
	xor.b64  	%rd2630, %rd2628, %rd2629;
	and.b64  	%rd2631, %rd2624, %rd2599;
	not.b64 	%rd2632, %rd2624;
	and.b64  	%rd2633, %rd2574, %rd2632;
	or.b64  	%rd2634, %rd2631, %rd2633;
	add.s64 	%rd2635, %rd2634, %rd2549;
	add.s64 	%rd2636, %rd2635, %rd2630;
	add.s64 	%rd2637, %rd2636, %rd63;
	add.s64 	%rd2638, %rd2637, %rd1342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3683,%dummy}, %rd2625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3684}, %rd2625;
	}
	shf.r.wrap.b32 	%r3685, %r3684, %r3683, 28;
	shf.r.wrap.b32 	%r3686, %r3683, %r3684, 28;
	mov.b64 	%rd2639, {%r3686, %r3685};
	shf.l.wrap.b32 	%r3687, %r3683, %r3684, 30;
	shf.l.wrap.b32 	%r3688, %r3684, %r3683, 30;
	mov.b64 	%rd2640, {%r3688, %r3687};
	xor.b64  	%rd2641, %rd2639, %rd2640;
	shf.l.wrap.b32 	%r3689, %r3683, %r3684, 25;
	shf.l.wrap.b32 	%r3690, %r3684, %r3683, 25;
	mov.b64 	%rd2642, {%r3690, %r3689};
	xor.b64  	%rd2643, %rd2641, %rd2642;
	xor.b64  	%rd2644, %rd2600, %rd2575;
	and.b64  	%rd2645, %rd2625, %rd2644;
	and.b64  	%rd2646, %rd2600, %rd2575;
	xor.b64  	%rd2647, %rd2645, %rd2646;
	add.s64 	%rd2648, %rd2643, %rd2647;
	add.s64 	%rd2649, %rd2638, %rd2550;
	add.s64 	%rd2650, %rd2648, %rd2638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3691,%dummy}, %rd2649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3692}, %rd2649;
	}
	shf.r.wrap.b32 	%r3693, %r3692, %r3691, 14;
	shf.r.wrap.b32 	%r3694, %r3691, %r3692, 14;
	mov.b64 	%rd2651, {%r3694, %r3693};
	shf.r.wrap.b32 	%r3695, %r3692, %r3691, 18;
	shf.r.wrap.b32 	%r3696, %r3691, %r3692, 18;
	mov.b64 	%rd2652, {%r3696, %r3695};
	xor.b64  	%rd2653, %rd2651, %rd2652;
	shf.l.wrap.b32 	%r3697, %r3691, %r3692, 23;
	shf.l.wrap.b32 	%r3698, %r3692, %r3691, 23;
	mov.b64 	%rd2654, {%r3698, %r3697};
	xor.b64  	%rd2655, %rd2653, %rd2654;
	and.b64  	%rd2656, %rd2649, %rd2624;
	not.b64 	%rd2657, %rd2649;
	and.b64  	%rd2658, %rd2599, %rd2657;
	or.b64  	%rd2659, %rd2656, %rd2658;
	add.s64 	%rd2660, %rd2659, %rd2574;
	add.s64 	%rd2661, %rd2660, %rd2655;
	add.s64 	%rd2662, %rd2661, %rd64;
	add.s64 	%rd2663, %rd2662, %rd1355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3699,%dummy}, %rd2650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3700}, %rd2650;
	}
	shf.r.wrap.b32 	%r3701, %r3700, %r3699, 28;
	shf.r.wrap.b32 	%r3702, %r3699, %r3700, 28;
	mov.b64 	%rd2664, {%r3702, %r3701};
	shf.l.wrap.b32 	%r3703, %r3699, %r3700, 30;
	shf.l.wrap.b32 	%r3704, %r3700, %r3699, 30;
	mov.b64 	%rd2665, {%r3704, %r3703};
	xor.b64  	%rd2666, %rd2664, %rd2665;
	shf.l.wrap.b32 	%r3705, %r3699, %r3700, 25;
	shf.l.wrap.b32 	%r3706, %r3700, %r3699, 25;
	mov.b64 	%rd2667, {%r3706, %r3705};
	xor.b64  	%rd2668, %rd2666, %rd2667;
	xor.b64  	%rd2669, %rd2625, %rd2600;
	and.b64  	%rd2670, %rd2650, %rd2669;
	and.b64  	%rd2671, %rd2625, %rd2600;
	xor.b64  	%rd2672, %rd2670, %rd2671;
	add.s64 	%rd2673, %rd2668, %rd2672;
	add.s64 	%rd2674, %rd2663, %rd2575;
	add.s64 	%rd2675, %rd2673, %rd2663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3707,%dummy}, %rd2674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3708}, %rd2674;
	}
	shf.r.wrap.b32 	%r3709, %r3708, %r3707, 14;
	shf.r.wrap.b32 	%r3710, %r3707, %r3708, 14;
	mov.b64 	%rd2676, {%r3710, %r3709};
	shf.r.wrap.b32 	%r3711, %r3708, %r3707, 18;
	shf.r.wrap.b32 	%r3712, %r3707, %r3708, 18;
	mov.b64 	%rd2677, {%r3712, %r3711};
	xor.b64  	%rd2678, %rd2676, %rd2677;
	shf.l.wrap.b32 	%r3713, %r3707, %r3708, 23;
	shf.l.wrap.b32 	%r3714, %r3708, %r3707, 23;
	mov.b64 	%rd2679, {%r3714, %r3713};
	xor.b64  	%rd2680, %rd2678, %rd2679;
	and.b64  	%rd2681, %rd2674, %rd2649;
	not.b64 	%rd2682, %rd2674;
	and.b64  	%rd2683, %rd2624, %rd2682;
	or.b64  	%rd2684, %rd2681, %rd2683;
	add.s64 	%rd2685, %rd2684, %rd2599;
	add.s64 	%rd2686, %rd2685, %rd2680;
	add.s64 	%rd2687, %rd2686, %rd65;
	add.s64 	%rd2688, %rd2687, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3715,%dummy}, %rd2675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3716}, %rd2675;
	}
	shf.r.wrap.b32 	%r3717, %r3716, %r3715, 28;
	shf.r.wrap.b32 	%r3718, %r3715, %r3716, 28;
	mov.b64 	%rd2689, {%r3718, %r3717};
	shf.l.wrap.b32 	%r3719, %r3715, %r3716, 30;
	shf.l.wrap.b32 	%r3720, %r3716, %r3715, 30;
	mov.b64 	%rd2690, {%r3720, %r3719};
	xor.b64  	%rd2691, %rd2689, %rd2690;
	shf.l.wrap.b32 	%r3721, %r3715, %r3716, 25;
	shf.l.wrap.b32 	%r3722, %r3716, %r3715, 25;
	mov.b64 	%rd2692, {%r3722, %r3721};
	xor.b64  	%rd2693, %rd2691, %rd2692;
	xor.b64  	%rd2694, %rd2650, %rd2625;
	and.b64  	%rd2695, %rd2675, %rd2694;
	and.b64  	%rd2696, %rd2650, %rd2625;
	xor.b64  	%rd2697, %rd2695, %rd2696;
	add.s64 	%rd2698, %rd2693, %rd2697;
	add.s64 	%rd2699, %rd2688, %rd2600;
	add.s64 	%rd2700, %rd2698, %rd2688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3723,%dummy}, %rd2699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3724}, %rd2699;
	}
	shf.r.wrap.b32 	%r3725, %r3724, %r3723, 14;
	shf.r.wrap.b32 	%r3726, %r3723, %r3724, 14;
	mov.b64 	%rd2701, {%r3726, %r3725};
	shf.r.wrap.b32 	%r3727, %r3724, %r3723, 18;
	shf.r.wrap.b32 	%r3728, %r3723, %r3724, 18;
	mov.b64 	%rd2702, {%r3728, %r3727};
	xor.b64  	%rd2703, %rd2701, %rd2702;
	shf.l.wrap.b32 	%r3729, %r3723, %r3724, 23;
	shf.l.wrap.b32 	%r3730, %r3724, %r3723, 23;
	mov.b64 	%rd2704, {%r3730, %r3729};
	xor.b64  	%rd2705, %rd2703, %rd2704;
	and.b64  	%rd2706, %rd2699, %rd2674;
	not.b64 	%rd2707, %rd2699;
	and.b64  	%rd2708, %rd2649, %rd2707;
	or.b64  	%rd2709, %rd2706, %rd2708;
	add.s64 	%rd2710, %rd2709, %rd2624;
	add.s64 	%rd2711, %rd2710, %rd2705;
	add.s64 	%rd2712, %rd2711, %rd66;
	add.s64 	%rd2713, %rd2712, %rd1381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3731,%dummy}, %rd2700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3732}, %rd2700;
	}
	shf.r.wrap.b32 	%r3733, %r3732, %r3731, 28;
	shf.r.wrap.b32 	%r3734, %r3731, %r3732, 28;
	mov.b64 	%rd2714, {%r3734, %r3733};
	shf.l.wrap.b32 	%r3735, %r3731, %r3732, 30;
	shf.l.wrap.b32 	%r3736, %r3732, %r3731, 30;
	mov.b64 	%rd2715, {%r3736, %r3735};
	xor.b64  	%rd2716, %rd2714, %rd2715;
	shf.l.wrap.b32 	%r3737, %r3731, %r3732, 25;
	shf.l.wrap.b32 	%r3738, %r3732, %r3731, 25;
	mov.b64 	%rd2717, {%r3738, %r3737};
	xor.b64  	%rd2718, %rd2716, %rd2717;
	xor.b64  	%rd2719, %rd2675, %rd2650;
	and.b64  	%rd2720, %rd2700, %rd2719;
	and.b64  	%rd2721, %rd2675, %rd2650;
	xor.b64  	%rd2722, %rd2720, %rd2721;
	add.s64 	%rd2723, %rd2718, %rd2722;
	add.s64 	%rd2724, %rd2713, %rd2625;
	add.s64 	%rd2725, %rd2723, %rd2713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3739,%dummy}, %rd2724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3740}, %rd2724;
	}
	shf.r.wrap.b32 	%r3741, %r3740, %r3739, 14;
	shf.r.wrap.b32 	%r3742, %r3739, %r3740, 14;
	mov.b64 	%rd2726, {%r3742, %r3741};
	shf.r.wrap.b32 	%r3743, %r3740, %r3739, 18;
	shf.r.wrap.b32 	%r3744, %r3739, %r3740, 18;
	mov.b64 	%rd2727, {%r3744, %r3743};
	xor.b64  	%rd2728, %rd2726, %rd2727;
	shf.l.wrap.b32 	%r3745, %r3739, %r3740, 23;
	shf.l.wrap.b32 	%r3746, %r3740, %r3739, 23;
	mov.b64 	%rd2729, {%r3746, %r3745};
	xor.b64  	%rd2730, %rd2728, %rd2729;
	and.b64  	%rd2731, %rd2724, %rd2699;
	not.b64 	%rd2732, %rd2724;
	and.b64  	%rd2733, %rd2674, %rd2732;
	or.b64  	%rd2734, %rd2731, %rd2733;
	add.s64 	%rd2735, %rd2734, %rd2649;
	add.s64 	%rd2736, %rd2735, %rd2730;
	add.s64 	%rd2737, %rd2736, %rd67;
	add.s64 	%rd2738, %rd2737, %rd1394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3747,%dummy}, %rd2725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3748}, %rd2725;
	}
	shf.r.wrap.b32 	%r3749, %r3748, %r3747, 28;
	shf.r.wrap.b32 	%r3750, %r3747, %r3748, 28;
	mov.b64 	%rd2739, {%r3750, %r3749};
	shf.l.wrap.b32 	%r3751, %r3747, %r3748, 30;
	shf.l.wrap.b32 	%r3752, %r3748, %r3747, 30;
	mov.b64 	%rd2740, {%r3752, %r3751};
	xor.b64  	%rd2741, %rd2739, %rd2740;
	shf.l.wrap.b32 	%r3753, %r3747, %r3748, 25;
	shf.l.wrap.b32 	%r3754, %r3748, %r3747, 25;
	mov.b64 	%rd2742, {%r3754, %r3753};
	xor.b64  	%rd2743, %rd2741, %rd2742;
	xor.b64  	%rd2744, %rd2700, %rd2675;
	and.b64  	%rd2745, %rd2725, %rd2744;
	and.b64  	%rd2746, %rd2700, %rd2675;
	xor.b64  	%rd2747, %rd2745, %rd2746;
	add.s64 	%rd2748, %rd2743, %rd2747;
	add.s64 	%rd2749, %rd2738, %rd2650;
	add.s64 	%rd2750, %rd2748, %rd2738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3755,%dummy}, %rd2749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3756}, %rd2749;
	}
	shf.r.wrap.b32 	%r3757, %r3756, %r3755, 14;
	shf.r.wrap.b32 	%r3758, %r3755, %r3756, 14;
	mov.b64 	%rd2751, {%r3758, %r3757};
	shf.r.wrap.b32 	%r3759, %r3756, %r3755, 18;
	shf.r.wrap.b32 	%r3760, %r3755, %r3756, 18;
	mov.b64 	%rd2752, {%r3760, %r3759};
	xor.b64  	%rd2753, %rd2751, %rd2752;
	shf.l.wrap.b32 	%r3761, %r3755, %r3756, 23;
	shf.l.wrap.b32 	%r3762, %r3756, %r3755, 23;
	mov.b64 	%rd2754, {%r3762, %r3761};
	xor.b64  	%rd2755, %rd2753, %rd2754;
	and.b64  	%rd2756, %rd2749, %rd2724;
	not.b64 	%rd2757, %rd2749;
	and.b64  	%rd2758, %rd2699, %rd2757;
	or.b64  	%rd2759, %rd2756, %rd2758;
	add.s64 	%rd2760, %rd2759, %rd2674;
	add.s64 	%rd2761, %rd2760, %rd2755;
	add.s64 	%rd2762, %rd2761, %rd68;
	add.s64 	%rd2763, %rd2762, %rd1407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3763,%dummy}, %rd2750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3764}, %rd2750;
	}
	shf.r.wrap.b32 	%r3765, %r3764, %r3763, 28;
	shf.r.wrap.b32 	%r3766, %r3763, %r3764, 28;
	mov.b64 	%rd2764, {%r3766, %r3765};
	shf.l.wrap.b32 	%r3767, %r3763, %r3764, 30;
	shf.l.wrap.b32 	%r3768, %r3764, %r3763, 30;
	mov.b64 	%rd2765, {%r3768, %r3767};
	xor.b64  	%rd2766, %rd2764, %rd2765;
	shf.l.wrap.b32 	%r3769, %r3763, %r3764, 25;
	shf.l.wrap.b32 	%r3770, %r3764, %r3763, 25;
	mov.b64 	%rd2767, {%r3770, %r3769};
	xor.b64  	%rd2768, %rd2766, %rd2767;
	xor.b64  	%rd2769, %rd2725, %rd2700;
	and.b64  	%rd2770, %rd2750, %rd2769;
	and.b64  	%rd2771, %rd2725, %rd2700;
	xor.b64  	%rd2772, %rd2770, %rd2771;
	add.s64 	%rd2773, %rd2768, %rd2772;
	add.s64 	%rd2774, %rd2763, %rd2675;
	add.s64 	%rd2775, %rd2773, %rd2763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3771,%dummy}, %rd2774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3772}, %rd2774;
	}
	shf.r.wrap.b32 	%r3773, %r3772, %r3771, 14;
	shf.r.wrap.b32 	%r3774, %r3771, %r3772, 14;
	mov.b64 	%rd2776, {%r3774, %r3773};
	shf.r.wrap.b32 	%r3775, %r3772, %r3771, 18;
	shf.r.wrap.b32 	%r3776, %r3771, %r3772, 18;
	mov.b64 	%rd2777, {%r3776, %r3775};
	xor.b64  	%rd2778, %rd2776, %rd2777;
	shf.l.wrap.b32 	%r3777, %r3771, %r3772, 23;
	shf.l.wrap.b32 	%r3778, %r3772, %r3771, 23;
	mov.b64 	%rd2779, {%r3778, %r3777};
	xor.b64  	%rd2780, %rd2778, %rd2779;
	and.b64  	%rd2781, %rd2774, %rd2749;
	not.b64 	%rd2782, %rd2774;
	and.b64  	%rd2783, %rd2724, %rd2782;
	or.b64  	%rd2784, %rd2781, %rd2783;
	add.s64 	%rd2785, %rd2784, %rd2699;
	add.s64 	%rd2786, %rd2785, %rd2780;
	add.s64 	%rd2787, %rd2786, %rd69;
	add.s64 	%rd2788, %rd2787, %rd1420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3779,%dummy}, %rd2775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3780}, %rd2775;
	}
	shf.r.wrap.b32 	%r3781, %r3780, %r3779, 28;
	shf.r.wrap.b32 	%r3782, %r3779, %r3780, 28;
	mov.b64 	%rd2789, {%r3782, %r3781};
	shf.l.wrap.b32 	%r3783, %r3779, %r3780, 30;
	shf.l.wrap.b32 	%r3784, %r3780, %r3779, 30;
	mov.b64 	%rd2790, {%r3784, %r3783};
	xor.b64  	%rd2791, %rd2789, %rd2790;
	shf.l.wrap.b32 	%r3785, %r3779, %r3780, 25;
	shf.l.wrap.b32 	%r3786, %r3780, %r3779, 25;
	mov.b64 	%rd2792, {%r3786, %r3785};
	xor.b64  	%rd2793, %rd2791, %rd2792;
	xor.b64  	%rd2794, %rd2750, %rd2725;
	and.b64  	%rd2795, %rd2775, %rd2794;
	and.b64  	%rd2796, %rd2750, %rd2725;
	xor.b64  	%rd2797, %rd2795, %rd2796;
	add.s64 	%rd2798, %rd2793, %rd2797;
	add.s64 	%rd2799, %rd2788, %rd2700;
	add.s64 	%rd2800, %rd2798, %rd2788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3787,%dummy}, %rd2799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3788}, %rd2799;
	}
	shf.r.wrap.b32 	%r3789, %r3788, %r3787, 14;
	shf.r.wrap.b32 	%r3790, %r3787, %r3788, 14;
	mov.b64 	%rd2801, {%r3790, %r3789};
	shf.r.wrap.b32 	%r3791, %r3788, %r3787, 18;
	shf.r.wrap.b32 	%r3792, %r3787, %r3788, 18;
	mov.b64 	%rd2802, {%r3792, %r3791};
	xor.b64  	%rd2803, %rd2801, %rd2802;
	shf.l.wrap.b32 	%r3793, %r3787, %r3788, 23;
	shf.l.wrap.b32 	%r3794, %r3788, %r3787, 23;
	mov.b64 	%rd2804, {%r3794, %r3793};
	xor.b64  	%rd2805, %rd2803, %rd2804;
	and.b64  	%rd2806, %rd2799, %rd2774;
	not.b64 	%rd2807, %rd2799;
	and.b64  	%rd2808, %rd2749, %rd2807;
	or.b64  	%rd2809, %rd2806, %rd2808;
	add.s64 	%rd2810, %rd2809, %rd2724;
	add.s64 	%rd2811, %rd2810, %rd2805;
	add.s64 	%rd2812, %rd2811, %rd70;
	add.s64 	%rd2813, %rd2812, %rd1433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3795,%dummy}, %rd2800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3796}, %rd2800;
	}
	shf.r.wrap.b32 	%r3797, %r3796, %r3795, 28;
	shf.r.wrap.b32 	%r3798, %r3795, %r3796, 28;
	mov.b64 	%rd2814, {%r3798, %r3797};
	shf.l.wrap.b32 	%r3799, %r3795, %r3796, 30;
	shf.l.wrap.b32 	%r3800, %r3796, %r3795, 30;
	mov.b64 	%rd2815, {%r3800, %r3799};
	xor.b64  	%rd2816, %rd2814, %rd2815;
	shf.l.wrap.b32 	%r3801, %r3795, %r3796, 25;
	shf.l.wrap.b32 	%r3802, %r3796, %r3795, 25;
	mov.b64 	%rd2817, {%r3802, %r3801};
	xor.b64  	%rd2818, %rd2816, %rd2817;
	xor.b64  	%rd2819, %rd2775, %rd2750;
	and.b64  	%rd2820, %rd2800, %rd2819;
	and.b64  	%rd2821, %rd2775, %rd2750;
	xor.b64  	%rd2822, %rd2820, %rd2821;
	add.s64 	%rd2823, %rd2818, %rd2822;
	add.s64 	%rd2824, %rd2813, %rd2725;
	add.s64 	%rd2825, %rd2823, %rd2813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3803,%dummy}, %rd2824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3804}, %rd2824;
	}
	shf.r.wrap.b32 	%r3805, %r3804, %r3803, 14;
	shf.r.wrap.b32 	%r3806, %r3803, %r3804, 14;
	mov.b64 	%rd2826, {%r3806, %r3805};
	shf.r.wrap.b32 	%r3807, %r3804, %r3803, 18;
	shf.r.wrap.b32 	%r3808, %r3803, %r3804, 18;
	mov.b64 	%rd2827, {%r3808, %r3807};
	xor.b64  	%rd2828, %rd2826, %rd2827;
	shf.l.wrap.b32 	%r3809, %r3803, %r3804, 23;
	shf.l.wrap.b32 	%r3810, %r3804, %r3803, 23;
	mov.b64 	%rd2829, {%r3810, %r3809};
	xor.b64  	%rd2830, %rd2828, %rd2829;
	and.b64  	%rd2831, %rd2824, %rd2799;
	not.b64 	%rd2832, %rd2824;
	and.b64  	%rd2833, %rd2774, %rd2832;
	or.b64  	%rd2834, %rd2831, %rd2833;
	add.s64 	%rd2835, %rd2834, %rd2749;
	add.s64 	%rd2836, %rd2835, %rd2830;
	add.s64 	%rd2837, %rd2836, %rd71;
	add.s64 	%rd2838, %rd2837, %rd1446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3811,%dummy}, %rd2825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3812}, %rd2825;
	}
	shf.r.wrap.b32 	%r3813, %r3812, %r3811, 28;
	shf.r.wrap.b32 	%r3814, %r3811, %r3812, 28;
	mov.b64 	%rd2839, {%r3814, %r3813};
	shf.l.wrap.b32 	%r3815, %r3811, %r3812, 30;
	shf.l.wrap.b32 	%r3816, %r3812, %r3811, 30;
	mov.b64 	%rd2840, {%r3816, %r3815};
	xor.b64  	%rd2841, %rd2839, %rd2840;
	shf.l.wrap.b32 	%r3817, %r3811, %r3812, 25;
	shf.l.wrap.b32 	%r3818, %r3812, %r3811, 25;
	mov.b64 	%rd2842, {%r3818, %r3817};
	xor.b64  	%rd2843, %rd2841, %rd2842;
	xor.b64  	%rd2844, %rd2800, %rd2775;
	and.b64  	%rd2845, %rd2825, %rd2844;
	and.b64  	%rd2846, %rd2800, %rd2775;
	xor.b64  	%rd2847, %rd2845, %rd2846;
	add.s64 	%rd2848, %rd2843, %rd2847;
	add.s64 	%rd2849, %rd2838, %rd2750;
	add.s64 	%rd2850, %rd2848, %rd2838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3819,%dummy}, %rd2849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3820}, %rd2849;
	}
	shf.r.wrap.b32 	%r3821, %r3820, %r3819, 14;
	shf.r.wrap.b32 	%r3822, %r3819, %r3820, 14;
	mov.b64 	%rd2851, {%r3822, %r3821};
	shf.r.wrap.b32 	%r3823, %r3820, %r3819, 18;
	shf.r.wrap.b32 	%r3824, %r3819, %r3820, 18;
	mov.b64 	%rd2852, {%r3824, %r3823};
	xor.b64  	%rd2853, %rd2851, %rd2852;
	shf.l.wrap.b32 	%r3825, %r3819, %r3820, 23;
	shf.l.wrap.b32 	%r3826, %r3820, %r3819, 23;
	mov.b64 	%rd2854, {%r3826, %r3825};
	xor.b64  	%rd2855, %rd2853, %rd2854;
	and.b64  	%rd2856, %rd2849, %rd2824;
	not.b64 	%rd2857, %rd2849;
	and.b64  	%rd2858, %rd2799, %rd2857;
	or.b64  	%rd2859, %rd2856, %rd2858;
	add.s64 	%rd2860, %rd2859, %rd2774;
	add.s64 	%rd2861, %rd2860, %rd2855;
	add.s64 	%rd2862, %rd2861, %rd72;
	add.s64 	%rd2863, %rd2862, %rd1459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3827,%dummy}, %rd2850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3828}, %rd2850;
	}
	shf.r.wrap.b32 	%r3829, %r3828, %r3827, 28;
	shf.r.wrap.b32 	%r3830, %r3827, %r3828, 28;
	mov.b64 	%rd2864, {%r3830, %r3829};
	shf.l.wrap.b32 	%r3831, %r3827, %r3828, 30;
	shf.l.wrap.b32 	%r3832, %r3828, %r3827, 30;
	mov.b64 	%rd2865, {%r3832, %r3831};
	xor.b64  	%rd2866, %rd2864, %rd2865;
	shf.l.wrap.b32 	%r3833, %r3827, %r3828, 25;
	shf.l.wrap.b32 	%r3834, %r3828, %r3827, 25;
	mov.b64 	%rd2867, {%r3834, %r3833};
	xor.b64  	%rd2868, %rd2866, %rd2867;
	xor.b64  	%rd2869, %rd2825, %rd2800;
	and.b64  	%rd2870, %rd2850, %rd2869;
	and.b64  	%rd2871, %rd2825, %rd2800;
	xor.b64  	%rd2872, %rd2870, %rd2871;
	add.s64 	%rd2873, %rd2868, %rd2872;
	add.s64 	%rd2874, %rd2863, %rd2775;
	add.s64 	%rd2875, %rd2873, %rd2863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3835,%dummy}, %rd2874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3836}, %rd2874;
	}
	shf.r.wrap.b32 	%r3837, %r3836, %r3835, 14;
	shf.r.wrap.b32 	%r3838, %r3835, %r3836, 14;
	mov.b64 	%rd2876, {%r3838, %r3837};
	shf.r.wrap.b32 	%r3839, %r3836, %r3835, 18;
	shf.r.wrap.b32 	%r3840, %r3835, %r3836, 18;
	mov.b64 	%rd2877, {%r3840, %r3839};
	xor.b64  	%rd2878, %rd2876, %rd2877;
	shf.l.wrap.b32 	%r3841, %r3835, %r3836, 23;
	shf.l.wrap.b32 	%r3842, %r3836, %r3835, 23;
	mov.b64 	%rd2879, {%r3842, %r3841};
	xor.b64  	%rd2880, %rd2878, %rd2879;
	and.b64  	%rd2881, %rd2874, %rd2849;
	not.b64 	%rd2882, %rd2874;
	and.b64  	%rd2883, %rd2824, %rd2882;
	or.b64  	%rd2884, %rd2881, %rd2883;
	add.s64 	%rd2885, %rd2884, %rd2799;
	add.s64 	%rd2886, %rd2885, %rd2880;
	add.s64 	%rd2887, %rd2886, %rd73;
	add.s64 	%rd2888, %rd2887, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3843,%dummy}, %rd2875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3844}, %rd2875;
	}
	shf.r.wrap.b32 	%r3845, %r3844, %r3843, 28;
	shf.r.wrap.b32 	%r3846, %r3843, %r3844, 28;
	mov.b64 	%rd2889, {%r3846, %r3845};
	shf.l.wrap.b32 	%r3847, %r3843, %r3844, 30;
	shf.l.wrap.b32 	%r3848, %r3844, %r3843, 30;
	mov.b64 	%rd2890, {%r3848, %r3847};
	xor.b64  	%rd2891, %rd2889, %rd2890;
	shf.l.wrap.b32 	%r3849, %r3843, %r3844, 25;
	shf.l.wrap.b32 	%r3850, %r3844, %r3843, 25;
	mov.b64 	%rd2892, {%r3850, %r3849};
	xor.b64  	%rd2893, %rd2891, %rd2892;
	xor.b64  	%rd2894, %rd2850, %rd2825;
	and.b64  	%rd2895, %rd2875, %rd2894;
	and.b64  	%rd2896, %rd2850, %rd2825;
	xor.b64  	%rd2897, %rd2895, %rd2896;
	add.s64 	%rd2898, %rd2893, %rd2897;
	add.s64 	%rd2899, %rd2888, %rd2800;
	add.s64 	%rd2900, %rd2898, %rd2888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3851,%dummy}, %rd2899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3852}, %rd2899;
	}
	shf.r.wrap.b32 	%r3853, %r3852, %r3851, 14;
	shf.r.wrap.b32 	%r3854, %r3851, %r3852, 14;
	mov.b64 	%rd2901, {%r3854, %r3853};
	shf.r.wrap.b32 	%r3855, %r3852, %r3851, 18;
	shf.r.wrap.b32 	%r3856, %r3851, %r3852, 18;
	mov.b64 	%rd2902, {%r3856, %r3855};
	xor.b64  	%rd2903, %rd2901, %rd2902;
	shf.l.wrap.b32 	%r3857, %r3851, %r3852, 23;
	shf.l.wrap.b32 	%r3858, %r3852, %r3851, 23;
	mov.b64 	%rd2904, {%r3858, %r3857};
	xor.b64  	%rd2905, %rd2903, %rd2904;
	and.b64  	%rd2906, %rd2899, %rd2874;
	not.b64 	%rd2907, %rd2899;
	and.b64  	%rd2908, %rd2849, %rd2907;
	or.b64  	%rd2909, %rd2906, %rd2908;
	add.s64 	%rd2910, %rd2909, %rd2824;
	add.s64 	%rd2911, %rd2910, %rd2905;
	add.s64 	%rd2912, %rd2911, %rd74;
	add.s64 	%rd2913, %rd2912, %rd1485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3859,%dummy}, %rd2900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3860}, %rd2900;
	}
	shf.r.wrap.b32 	%r3861, %r3860, %r3859, 28;
	shf.r.wrap.b32 	%r3862, %r3859, %r3860, 28;
	mov.b64 	%rd2914, {%r3862, %r3861};
	shf.l.wrap.b32 	%r3863, %r3859, %r3860, 30;
	shf.l.wrap.b32 	%r3864, %r3860, %r3859, 30;
	mov.b64 	%rd2915, {%r3864, %r3863};
	xor.b64  	%rd2916, %rd2914, %rd2915;
	shf.l.wrap.b32 	%r3865, %r3859, %r3860, 25;
	shf.l.wrap.b32 	%r3866, %r3860, %r3859, 25;
	mov.b64 	%rd2917, {%r3866, %r3865};
	xor.b64  	%rd2918, %rd2916, %rd2917;
	xor.b64  	%rd2919, %rd2875, %rd2850;
	and.b64  	%rd2920, %rd2900, %rd2919;
	and.b64  	%rd2921, %rd2875, %rd2850;
	xor.b64  	%rd2922, %rd2920, %rd2921;
	add.s64 	%rd2923, %rd2918, %rd2922;
	add.s64 	%rd2924, %rd2913, %rd2825;
	add.s64 	%rd2925, %rd2923, %rd2913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3867,%dummy}, %rd2924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3868}, %rd2924;
	}
	shf.r.wrap.b32 	%r3869, %r3868, %r3867, 14;
	shf.r.wrap.b32 	%r3870, %r3867, %r3868, 14;
	mov.b64 	%rd2926, {%r3870, %r3869};
	shf.r.wrap.b32 	%r3871, %r3868, %r3867, 18;
	shf.r.wrap.b32 	%r3872, %r3867, %r3868, 18;
	mov.b64 	%rd2927, {%r3872, %r3871};
	xor.b64  	%rd2928, %rd2926, %rd2927;
	shf.l.wrap.b32 	%r3873, %r3867, %r3868, 23;
	shf.l.wrap.b32 	%r3874, %r3868, %r3867, 23;
	mov.b64 	%rd2929, {%r3874, %r3873};
	xor.b64  	%rd2930, %rd2928, %rd2929;
	and.b64  	%rd2931, %rd2924, %rd2899;
	not.b64 	%rd2932, %rd2924;
	and.b64  	%rd2933, %rd2874, %rd2932;
	or.b64  	%rd2934, %rd2931, %rd2933;
	add.s64 	%rd2935, %rd2934, %rd2849;
	add.s64 	%rd2936, %rd2935, %rd2930;
	add.s64 	%rd2937, %rd2936, %rd75;
	add.s64 	%rd2938, %rd2937, %rd1498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3875,%dummy}, %rd2925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3876}, %rd2925;
	}
	shf.r.wrap.b32 	%r3877, %r3876, %r3875, 28;
	shf.r.wrap.b32 	%r3878, %r3875, %r3876, 28;
	mov.b64 	%rd2939, {%r3878, %r3877};
	shf.l.wrap.b32 	%r3879, %r3875, %r3876, 30;
	shf.l.wrap.b32 	%r3880, %r3876, %r3875, 30;
	mov.b64 	%rd2940, {%r3880, %r3879};
	xor.b64  	%rd2941, %rd2939, %rd2940;
	shf.l.wrap.b32 	%r3881, %r3875, %r3876, 25;
	shf.l.wrap.b32 	%r3882, %r3876, %r3875, 25;
	mov.b64 	%rd2942, {%r3882, %r3881};
	xor.b64  	%rd2943, %rd2941, %rd2942;
	xor.b64  	%rd2944, %rd2900, %rd2875;
	and.b64  	%rd2945, %rd2925, %rd2944;
	and.b64  	%rd2946, %rd2900, %rd2875;
	xor.b64  	%rd2947, %rd2945, %rd2946;
	add.s64 	%rd2948, %rd2943, %rd2947;
	add.s64 	%rd2949, %rd2938, %rd2850;
	add.s64 	%rd2950, %rd2948, %rd2938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3883,%dummy}, %rd2949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3884}, %rd2949;
	}
	shf.r.wrap.b32 	%r3885, %r3884, %r3883, 14;
	shf.r.wrap.b32 	%r3886, %r3883, %r3884, 14;
	mov.b64 	%rd2951, {%r3886, %r3885};
	shf.r.wrap.b32 	%r3887, %r3884, %r3883, 18;
	shf.r.wrap.b32 	%r3888, %r3883, %r3884, 18;
	mov.b64 	%rd2952, {%r3888, %r3887};
	xor.b64  	%rd2953, %rd2951, %rd2952;
	shf.l.wrap.b32 	%r3889, %r3883, %r3884, 23;
	shf.l.wrap.b32 	%r3890, %r3884, %r3883, 23;
	mov.b64 	%rd2954, {%r3890, %r3889};
	xor.b64  	%rd2955, %rd2953, %rd2954;
	and.b64  	%rd2956, %rd2949, %rd2924;
	not.b64 	%rd2957, %rd2949;
	and.b64  	%rd2958, %rd2899, %rd2957;
	or.b64  	%rd2959, %rd2956, %rd2958;
	add.s64 	%rd2960, %rd2959, %rd2874;
	add.s64 	%rd2961, %rd2960, %rd2955;
	add.s64 	%rd2962, %rd2961, %rd76;
	add.s64 	%rd2963, %rd2962, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3891,%dummy}, %rd2950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3892}, %rd2950;
	}
	shf.r.wrap.b32 	%r3893, %r3892, %r3891, 28;
	shf.r.wrap.b32 	%r3894, %r3891, %r3892, 28;
	mov.b64 	%rd2964, {%r3894, %r3893};
	shf.l.wrap.b32 	%r3895, %r3891, %r3892, 30;
	shf.l.wrap.b32 	%r3896, %r3892, %r3891, 30;
	mov.b64 	%rd2965, {%r3896, %r3895};
	xor.b64  	%rd2966, %rd2964, %rd2965;
	shf.l.wrap.b32 	%r3897, %r3891, %r3892, 25;
	shf.l.wrap.b32 	%r3898, %r3892, %r3891, 25;
	mov.b64 	%rd2967, {%r3898, %r3897};
	xor.b64  	%rd2968, %rd2966, %rd2967;
	xor.b64  	%rd2969, %rd2925, %rd2900;
	and.b64  	%rd2970, %rd2950, %rd2969;
	and.b64  	%rd2971, %rd2925, %rd2900;
	xor.b64  	%rd2972, %rd2970, %rd2971;
	add.s64 	%rd2973, %rd2968, %rd2972;
	add.s64 	%rd2974, %rd2963, %rd2875;
	add.s64 	%rd2975, %rd2973, %rd2963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3899,%dummy}, %rd2974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3900}, %rd2974;
	}
	shf.r.wrap.b32 	%r3901, %r3900, %r3899, 14;
	shf.r.wrap.b32 	%r3902, %r3899, %r3900, 14;
	mov.b64 	%rd2976, {%r3902, %r3901};
	shf.r.wrap.b32 	%r3903, %r3900, %r3899, 18;
	shf.r.wrap.b32 	%r3904, %r3899, %r3900, 18;
	mov.b64 	%rd2977, {%r3904, %r3903};
	xor.b64  	%rd2978, %rd2976, %rd2977;
	shf.l.wrap.b32 	%r3905, %r3899, %r3900, 23;
	shf.l.wrap.b32 	%r3906, %r3900, %r3899, 23;
	mov.b64 	%rd2979, {%r3906, %r3905};
	xor.b64  	%rd2980, %rd2978, %rd2979;
	and.b64  	%rd2981, %rd2974, %rd2949;
	not.b64 	%rd2982, %rd2974;
	and.b64  	%rd2983, %rd2924, %rd2982;
	or.b64  	%rd2984, %rd2981, %rd2983;
	add.s64 	%rd2985, %rd2984, %rd2899;
	add.s64 	%rd2986, %rd2985, %rd2980;
	add.s64 	%rd2987, %rd2986, %rd77;
	add.s64 	%rd2988, %rd2987, %rd1524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3907,%dummy}, %rd2975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3908}, %rd2975;
	}
	shf.r.wrap.b32 	%r3909, %r3908, %r3907, 28;
	shf.r.wrap.b32 	%r3910, %r3907, %r3908, 28;
	mov.b64 	%rd2989, {%r3910, %r3909};
	shf.l.wrap.b32 	%r3911, %r3907, %r3908, 30;
	shf.l.wrap.b32 	%r3912, %r3908, %r3907, 30;
	mov.b64 	%rd2990, {%r3912, %r3911};
	xor.b64  	%rd2991, %rd2989, %rd2990;
	shf.l.wrap.b32 	%r3913, %r3907, %r3908, 25;
	shf.l.wrap.b32 	%r3914, %r3908, %r3907, 25;
	mov.b64 	%rd2992, {%r3914, %r3913};
	xor.b64  	%rd2993, %rd2991, %rd2992;
	xor.b64  	%rd2994, %rd2950, %rd2925;
	and.b64  	%rd2995, %rd2975, %rd2994;
	and.b64  	%rd2996, %rd2950, %rd2925;
	xor.b64  	%rd2997, %rd2995, %rd2996;
	add.s64 	%rd2998, %rd2993, %rd2997;
	add.s64 	%rd2999, %rd2988, %rd2900;
	add.s64 	%rd3000, %rd2998, %rd2988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3915,%dummy}, %rd2999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3916}, %rd2999;
	}
	shf.r.wrap.b32 	%r3917, %r3916, %r3915, 14;
	shf.r.wrap.b32 	%r3918, %r3915, %r3916, 14;
	mov.b64 	%rd3001, {%r3918, %r3917};
	shf.r.wrap.b32 	%r3919, %r3916, %r3915, 18;
	shf.r.wrap.b32 	%r3920, %r3915, %r3916, 18;
	mov.b64 	%rd3002, {%r3920, %r3919};
	xor.b64  	%rd3003, %rd3001, %rd3002;
	shf.l.wrap.b32 	%r3921, %r3915, %r3916, 23;
	shf.l.wrap.b32 	%r3922, %r3916, %r3915, 23;
	mov.b64 	%rd3004, {%r3922, %r3921};
	xor.b64  	%rd3005, %rd3003, %rd3004;
	and.b64  	%rd3006, %rd2999, %rd2974;
	not.b64 	%rd3007, %rd2999;
	and.b64  	%rd3008, %rd2949, %rd3007;
	or.b64  	%rd3009, %rd3006, %rd3008;
	add.s64 	%rd3010, %rd3009, %rd2924;
	add.s64 	%rd3011, %rd3010, %rd3005;
	add.s64 	%rd3012, %rd3011, %rd78;
	add.s64 	%rd3013, %rd3012, %rd1537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3923,%dummy}, %rd3000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3924}, %rd3000;
	}
	shf.r.wrap.b32 	%r3925, %r3924, %r3923, 28;
	shf.r.wrap.b32 	%r3926, %r3923, %r3924, 28;
	mov.b64 	%rd3014, {%r3926, %r3925};
	shf.l.wrap.b32 	%r3927, %r3923, %r3924, 30;
	shf.l.wrap.b32 	%r3928, %r3924, %r3923, 30;
	mov.b64 	%rd3015, {%r3928, %r3927};
	xor.b64  	%rd3016, %rd3014, %rd3015;
	shf.l.wrap.b32 	%r3929, %r3923, %r3924, 25;
	shf.l.wrap.b32 	%r3930, %r3924, %r3923, 25;
	mov.b64 	%rd3017, {%r3930, %r3929};
	xor.b64  	%rd3018, %rd3016, %rd3017;
	xor.b64  	%rd3019, %rd2975, %rd2950;
	and.b64  	%rd3020, %rd3000, %rd3019;
	and.b64  	%rd3021, %rd2975, %rd2950;
	xor.b64  	%rd3022, %rd3020, %rd3021;
	add.s64 	%rd3023, %rd3018, %rd3022;
	add.s64 	%rd3024, %rd3013, %rd2925;
	add.s64 	%rd3025, %rd3023, %rd3013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3931,%dummy}, %rd3024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3932}, %rd3024;
	}
	shf.r.wrap.b32 	%r3933, %r3932, %r3931, 14;
	shf.r.wrap.b32 	%r3934, %r3931, %r3932, 14;
	mov.b64 	%rd3026, {%r3934, %r3933};
	shf.r.wrap.b32 	%r3935, %r3932, %r3931, 18;
	shf.r.wrap.b32 	%r3936, %r3931, %r3932, 18;
	mov.b64 	%rd3027, {%r3936, %r3935};
	xor.b64  	%rd3028, %rd3026, %rd3027;
	shf.l.wrap.b32 	%r3937, %r3931, %r3932, 23;
	shf.l.wrap.b32 	%r3938, %r3932, %r3931, 23;
	mov.b64 	%rd3029, {%r3938, %r3937};
	xor.b64  	%rd3030, %rd3028, %rd3029;
	and.b64  	%rd3031, %rd3024, %rd2999;
	not.b64 	%rd3032, %rd3024;
	and.b64  	%rd3033, %rd2974, %rd3032;
	or.b64  	%rd3034, %rd3031, %rd3033;
	add.s64 	%rd3035, %rd3034, %rd2949;
	add.s64 	%rd3036, %rd3035, %rd3030;
	add.s64 	%rd3037, %rd3036, %rd79;
	add.s64 	%rd3038, %rd3037, %rd1550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3939,%dummy}, %rd3025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3940}, %rd3025;
	}
	shf.r.wrap.b32 	%r3941, %r3940, %r3939, 28;
	shf.r.wrap.b32 	%r3942, %r3939, %r3940, 28;
	mov.b64 	%rd3039, {%r3942, %r3941};
	shf.l.wrap.b32 	%r3943, %r3939, %r3940, 30;
	shf.l.wrap.b32 	%r3944, %r3940, %r3939, 30;
	mov.b64 	%rd3040, {%r3944, %r3943};
	xor.b64  	%rd3041, %rd3039, %rd3040;
	shf.l.wrap.b32 	%r3945, %r3939, %r3940, 25;
	shf.l.wrap.b32 	%r3946, %r3940, %r3939, 25;
	mov.b64 	%rd3042, {%r3946, %r3945};
	xor.b64  	%rd3043, %rd3041, %rd3042;
	xor.b64  	%rd3044, %rd3000, %rd2975;
	and.b64  	%rd3045, %rd3025, %rd3044;
	and.b64  	%rd3046, %rd3000, %rd2975;
	xor.b64  	%rd3047, %rd3045, %rd3046;
	add.s64 	%rd3048, %rd3043, %rd3047;
	add.s64 	%rd3049, %rd3038, %rd2950;
	add.s64 	%rd3050, %rd3048, %rd3038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3947,%dummy}, %rd3049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3948}, %rd3049;
	}
	shf.r.wrap.b32 	%r3949, %r3948, %r3947, 14;
	shf.r.wrap.b32 	%r3950, %r3947, %r3948, 14;
	mov.b64 	%rd3051, {%r3950, %r3949};
	shf.r.wrap.b32 	%r3951, %r3948, %r3947, 18;
	shf.r.wrap.b32 	%r3952, %r3947, %r3948, 18;
	mov.b64 	%rd3052, {%r3952, %r3951};
	xor.b64  	%rd3053, %rd3051, %rd3052;
	shf.l.wrap.b32 	%r3953, %r3947, %r3948, 23;
	shf.l.wrap.b32 	%r3954, %r3948, %r3947, 23;
	mov.b64 	%rd3054, {%r3954, %r3953};
	xor.b64  	%rd3055, %rd3053, %rd3054;
	and.b64  	%rd3056, %rd3049, %rd3024;
	not.b64 	%rd3057, %rd3049;
	and.b64  	%rd3058, %rd2999, %rd3057;
	or.b64  	%rd3059, %rd3056, %rd3058;
	add.s64 	%rd3060, %rd3059, %rd2974;
	add.s64 	%rd3061, %rd3060, %rd3055;
	add.s64 	%rd3062, %rd3061, %rd80;
	add.s64 	%rd3063, %rd3062, %rd1563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3955,%dummy}, %rd3050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3956}, %rd3050;
	}
	shf.r.wrap.b32 	%r3957, %r3956, %r3955, 28;
	shf.r.wrap.b32 	%r3958, %r3955, %r3956, 28;
	mov.b64 	%rd3064, {%r3958, %r3957};
	shf.l.wrap.b32 	%r3959, %r3955, %r3956, 30;
	shf.l.wrap.b32 	%r3960, %r3956, %r3955, 30;
	mov.b64 	%rd3065, {%r3960, %r3959};
	xor.b64  	%rd3066, %rd3064, %rd3065;
	shf.l.wrap.b32 	%r3961, %r3955, %r3956, 25;
	shf.l.wrap.b32 	%r3962, %r3956, %r3955, 25;
	mov.b64 	%rd3067, {%r3962, %r3961};
	xor.b64  	%rd3068, %rd3066, %rd3067;
	xor.b64  	%rd3069, %rd3025, %rd3000;
	and.b64  	%rd3070, %rd3050, %rd3069;
	and.b64  	%rd3071, %rd3025, %rd3000;
	xor.b64  	%rd3072, %rd3070, %rd3071;
	add.s64 	%rd3073, %rd3068, %rd3072;
	add.s64 	%rd3074, %rd3063, %rd2975;
	add.s64 	%rd3075, %rd3073, %rd3063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3963,%dummy}, %rd3074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3964}, %rd3074;
	}
	shf.r.wrap.b32 	%r3965, %r3964, %r3963, 14;
	shf.r.wrap.b32 	%r3966, %r3963, %r3964, 14;
	mov.b64 	%rd3076, {%r3966, %r3965};
	shf.r.wrap.b32 	%r3967, %r3964, %r3963, 18;
	shf.r.wrap.b32 	%r3968, %r3963, %r3964, 18;
	mov.b64 	%rd3077, {%r3968, %r3967};
	xor.b64  	%rd3078, %rd3076, %rd3077;
	shf.l.wrap.b32 	%r3969, %r3963, %r3964, 23;
	shf.l.wrap.b32 	%r3970, %r3964, %r3963, 23;
	mov.b64 	%rd3079, {%r3970, %r3969};
	xor.b64  	%rd3080, %rd3078, %rd3079;
	and.b64  	%rd3081, %rd3074, %rd3049;
	not.b64 	%rd3082, %rd3074;
	and.b64  	%rd3083, %rd3024, %rd3082;
	or.b64  	%rd3084, %rd3081, %rd3083;
	add.s64 	%rd3085, %rd3084, %rd2999;
	add.s64 	%rd3086, %rd3085, %rd3080;
	add.s64 	%rd3087, %rd3086, %rd81;
	add.s64 	%rd3088, %rd3087, %rd1576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3971,%dummy}, %rd3075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3972}, %rd3075;
	}
	shf.r.wrap.b32 	%r3973, %r3972, %r3971, 28;
	shf.r.wrap.b32 	%r3974, %r3971, %r3972, 28;
	mov.b64 	%rd3089, {%r3974, %r3973};
	shf.l.wrap.b32 	%r3975, %r3971, %r3972, 30;
	shf.l.wrap.b32 	%r3976, %r3972, %r3971, 30;
	mov.b64 	%rd3090, {%r3976, %r3975};
	xor.b64  	%rd3091, %rd3089, %rd3090;
	shf.l.wrap.b32 	%r3977, %r3971, %r3972, 25;
	shf.l.wrap.b32 	%r3978, %r3972, %r3971, 25;
	mov.b64 	%rd3092, {%r3978, %r3977};
	xor.b64  	%rd3093, %rd3091, %rd3092;
	xor.b64  	%rd3094, %rd3050, %rd3025;
	and.b64  	%rd3095, %rd3075, %rd3094;
	and.b64  	%rd3096, %rd3050, %rd3025;
	xor.b64  	%rd3097, %rd3095, %rd3096;
	add.s64 	%rd3098, %rd3093, %rd3097;
	add.s64 	%rd3099, %rd3088, %rd3000;
	add.s64 	%rd3100, %rd3098, %rd3088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3979,%dummy}, %rd3099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3980}, %rd3099;
	}
	shf.r.wrap.b32 	%r3981, %r3980, %r3979, 14;
	shf.r.wrap.b32 	%r3982, %r3979, %r3980, 14;
	mov.b64 	%rd3101, {%r3982, %r3981};
	shf.r.wrap.b32 	%r3983, %r3980, %r3979, 18;
	shf.r.wrap.b32 	%r3984, %r3979, %r3980, 18;
	mov.b64 	%rd3102, {%r3984, %r3983};
	xor.b64  	%rd3103, %rd3101, %rd3102;
	shf.l.wrap.b32 	%r3985, %r3979, %r3980, 23;
	shf.l.wrap.b32 	%r3986, %r3980, %r3979, 23;
	mov.b64 	%rd3104, {%r3986, %r3985};
	xor.b64  	%rd3105, %rd3103, %rd3104;
	and.b64  	%rd3106, %rd3099, %rd3074;
	not.b64 	%rd3107, %rd3099;
	and.b64  	%rd3108, %rd3049, %rd3107;
	or.b64  	%rd3109, %rd3106, %rd3108;
	add.s64 	%rd3110, %rd3109, %rd3024;
	add.s64 	%rd3111, %rd3110, %rd3105;
	add.s64 	%rd3112, %rd3111, %rd82;
	add.s64 	%rd3113, %rd3112, %rd1589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3987,%dummy}, %rd3100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3988}, %rd3100;
	}
	shf.r.wrap.b32 	%r3989, %r3988, %r3987, 28;
	shf.r.wrap.b32 	%r3990, %r3987, %r3988, 28;
	mov.b64 	%rd3114, {%r3990, %r3989};
	shf.l.wrap.b32 	%r3991, %r3987, %r3988, 30;
	shf.l.wrap.b32 	%r3992, %r3988, %r3987, 30;
	mov.b64 	%rd3115, {%r3992, %r3991};
	xor.b64  	%rd3116, %rd3114, %rd3115;
	shf.l.wrap.b32 	%r3993, %r3987, %r3988, 25;
	shf.l.wrap.b32 	%r3994, %r3988, %r3987, 25;
	mov.b64 	%rd3117, {%r3994, %r3993};
	xor.b64  	%rd3118, %rd3116, %rd3117;
	xor.b64  	%rd3119, %rd3075, %rd3050;
	and.b64  	%rd3120, %rd3100, %rd3119;
	and.b64  	%rd3121, %rd3075, %rd3050;
	xor.b64  	%rd3122, %rd3120, %rd3121;
	add.s64 	%rd3123, %rd3118, %rd3122;
	add.s64 	%rd3124, %rd3113, %rd3025;
	add.s64 	%rd3125, %rd3123, %rd3113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3995,%dummy}, %rd3124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3996}, %rd3124;
	}
	shf.r.wrap.b32 	%r3997, %r3996, %r3995, 14;
	shf.r.wrap.b32 	%r3998, %r3995, %r3996, 14;
	mov.b64 	%rd3126, {%r3998, %r3997};
	shf.r.wrap.b32 	%r3999, %r3996, %r3995, 18;
	shf.r.wrap.b32 	%r4000, %r3995, %r3996, 18;
	mov.b64 	%rd3127, {%r4000, %r3999};
	xor.b64  	%rd3128, %rd3126, %rd3127;
	shf.l.wrap.b32 	%r4001, %r3995, %r3996, 23;
	shf.l.wrap.b32 	%r4002, %r3996, %r3995, 23;
	mov.b64 	%rd3129, {%r4002, %r4001};
	xor.b64  	%rd3130, %rd3128, %rd3129;
	and.b64  	%rd3131, %rd3124, %rd3099;
	not.b64 	%rd3132, %rd3124;
	and.b64  	%rd3133, %rd3074, %rd3132;
	or.b64  	%rd3134, %rd3131, %rd3133;
	add.s64 	%rd3135, %rd3134, %rd3049;
	add.s64 	%rd3136, %rd3135, %rd3130;
	add.s64 	%rd3137, %rd3136, %rd83;
	add.s64 	%rd3138, %rd3137, %rd1602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4003,%dummy}, %rd3125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4004}, %rd3125;
	}
	shf.r.wrap.b32 	%r4005, %r4004, %r4003, 28;
	shf.r.wrap.b32 	%r4006, %r4003, %r4004, 28;
	mov.b64 	%rd3139, {%r4006, %r4005};
	shf.l.wrap.b32 	%r4007, %r4003, %r4004, 30;
	shf.l.wrap.b32 	%r4008, %r4004, %r4003, 30;
	mov.b64 	%rd3140, {%r4008, %r4007};
	xor.b64  	%rd3141, %rd3139, %rd3140;
	shf.l.wrap.b32 	%r4009, %r4003, %r4004, 25;
	shf.l.wrap.b32 	%r4010, %r4004, %r4003, 25;
	mov.b64 	%rd3142, {%r4010, %r4009};
	xor.b64  	%rd3143, %rd3141, %rd3142;
	xor.b64  	%rd3144, %rd3100, %rd3075;
	and.b64  	%rd3145, %rd3125, %rd3144;
	and.b64  	%rd3146, %rd3100, %rd3075;
	xor.b64  	%rd3147, %rd3145, %rd3146;
	add.s64 	%rd3148, %rd3143, %rd3147;
	add.s64 	%rd3149, %rd3138, %rd3050;
	add.s64 	%rd3150, %rd3148, %rd3138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4011,%dummy}, %rd3149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4012}, %rd3149;
	}
	shf.r.wrap.b32 	%r4013, %r4012, %r4011, 14;
	shf.r.wrap.b32 	%r4014, %r4011, %r4012, 14;
	mov.b64 	%rd3151, {%r4014, %r4013};
	shf.r.wrap.b32 	%r4015, %r4012, %r4011, 18;
	shf.r.wrap.b32 	%r4016, %r4011, %r4012, 18;
	mov.b64 	%rd3152, {%r4016, %r4015};
	xor.b64  	%rd3153, %rd3151, %rd3152;
	shf.l.wrap.b32 	%r4017, %r4011, %r4012, 23;
	shf.l.wrap.b32 	%r4018, %r4012, %r4011, 23;
	mov.b64 	%rd3154, {%r4018, %r4017};
	xor.b64  	%rd3155, %rd3153, %rd3154;
	and.b64  	%rd3156, %rd3149, %rd3124;
	not.b64 	%rd3157, %rd3149;
	and.b64  	%rd3158, %rd3099, %rd3157;
	or.b64  	%rd3159, %rd3156, %rd3158;
	add.s64 	%rd3160, %rd3159, %rd3074;
	add.s64 	%rd3161, %rd3160, %rd3155;
	add.s64 	%rd3162, %rd3161, %rd84;
	add.s64 	%rd3163, %rd3162, %rd1615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4019,%dummy}, %rd3150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4020}, %rd3150;
	}
	shf.r.wrap.b32 	%r4021, %r4020, %r4019, 28;
	shf.r.wrap.b32 	%r4022, %r4019, %r4020, 28;
	mov.b64 	%rd3164, {%r4022, %r4021};
	shf.l.wrap.b32 	%r4023, %r4019, %r4020, 30;
	shf.l.wrap.b32 	%r4024, %r4020, %r4019, 30;
	mov.b64 	%rd3165, {%r4024, %r4023};
	xor.b64  	%rd3166, %rd3164, %rd3165;
	shf.l.wrap.b32 	%r4025, %r4019, %r4020, 25;
	shf.l.wrap.b32 	%r4026, %r4020, %r4019, 25;
	mov.b64 	%rd3167, {%r4026, %r4025};
	xor.b64  	%rd3168, %rd3166, %rd3167;
	xor.b64  	%rd3169, %rd3125, %rd3100;
	and.b64  	%rd3170, %rd3150, %rd3169;
	and.b64  	%rd3171, %rd3125, %rd3100;
	xor.b64  	%rd3172, %rd3170, %rd3171;
	add.s64 	%rd3173, %rd3168, %rd3172;
	add.s64 	%rd3174, %rd3163, %rd3075;
	add.s64 	%rd3175, %rd3173, %rd3163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4027,%dummy}, %rd3174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4028}, %rd3174;
	}
	shf.r.wrap.b32 	%r4029, %r4028, %r4027, 14;
	shf.r.wrap.b32 	%r4030, %r4027, %r4028, 14;
	mov.b64 	%rd3176, {%r4030, %r4029};
	shf.r.wrap.b32 	%r4031, %r4028, %r4027, 18;
	shf.r.wrap.b32 	%r4032, %r4027, %r4028, 18;
	mov.b64 	%rd3177, {%r4032, %r4031};
	xor.b64  	%rd3178, %rd3176, %rd3177;
	shf.l.wrap.b32 	%r4033, %r4027, %r4028, 23;
	shf.l.wrap.b32 	%r4034, %r4028, %r4027, 23;
	mov.b64 	%rd3179, {%r4034, %r4033};
	xor.b64  	%rd3180, %rd3178, %rd3179;
	and.b64  	%rd3181, %rd3174, %rd3149;
	not.b64 	%rd3182, %rd3174;
	and.b64  	%rd3183, %rd3124, %rd3182;
	or.b64  	%rd3184, %rd3181, %rd3183;
	add.s64 	%rd3185, %rd3184, %rd3099;
	add.s64 	%rd3186, %rd3185, %rd3180;
	add.s64 	%rd3187, %rd3186, %rd85;
	add.s64 	%rd3188, %rd3187, %rd1628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4035,%dummy}, %rd3175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4036}, %rd3175;
	}
	shf.r.wrap.b32 	%r4037, %r4036, %r4035, 28;
	shf.r.wrap.b32 	%r4038, %r4035, %r4036, 28;
	mov.b64 	%rd3189, {%r4038, %r4037};
	shf.l.wrap.b32 	%r4039, %r4035, %r4036, 30;
	shf.l.wrap.b32 	%r4040, %r4036, %r4035, 30;
	mov.b64 	%rd3190, {%r4040, %r4039};
	xor.b64  	%rd3191, %rd3189, %rd3190;
	shf.l.wrap.b32 	%r4041, %r4035, %r4036, 25;
	shf.l.wrap.b32 	%r4042, %r4036, %r4035, 25;
	mov.b64 	%rd3192, {%r4042, %r4041};
	xor.b64  	%rd3193, %rd3191, %rd3192;
	xor.b64  	%rd3194, %rd3150, %rd3125;
	and.b64  	%rd3195, %rd3175, %rd3194;
	and.b64  	%rd3196, %rd3150, %rd3125;
	xor.b64  	%rd3197, %rd3195, %rd3196;
	add.s64 	%rd3198, %rd3193, %rd3197;
	add.s64 	%rd3199, %rd3188, %rd3100;
	add.s64 	%rd3200, %rd3198, %rd3188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4043,%dummy}, %rd3199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4044}, %rd3199;
	}
	shf.r.wrap.b32 	%r4045, %r4044, %r4043, 14;
	shf.r.wrap.b32 	%r4046, %r4043, %r4044, 14;
	mov.b64 	%rd3201, {%r4046, %r4045};
	shf.r.wrap.b32 	%r4047, %r4044, %r4043, 18;
	shf.r.wrap.b32 	%r4048, %r4043, %r4044, 18;
	mov.b64 	%rd3202, {%r4048, %r4047};
	xor.b64  	%rd3203, %rd3201, %rd3202;
	shf.l.wrap.b32 	%r4049, %r4043, %r4044, 23;
	shf.l.wrap.b32 	%r4050, %r4044, %r4043, 23;
	mov.b64 	%rd3204, {%r4050, %r4049};
	xor.b64  	%rd3205, %rd3203, %rd3204;
	and.b64  	%rd3206, %rd3199, %rd3174;
	not.b64 	%rd3207, %rd3199;
	and.b64  	%rd3208, %rd3149, %rd3207;
	or.b64  	%rd3209, %rd3206, %rd3208;
	add.s64 	%rd3210, %rd3209, %rd3124;
	add.s64 	%rd3211, %rd3210, %rd3205;
	add.s64 	%rd3212, %rd3211, %rd86;
	add.s64 	%rd3213, %rd3212, %rd1641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4051,%dummy}, %rd3200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4052}, %rd3200;
	}
	shf.r.wrap.b32 	%r4053, %r4052, %r4051, 28;
	shf.r.wrap.b32 	%r4054, %r4051, %r4052, 28;
	mov.b64 	%rd3214, {%r4054, %r4053};
	shf.l.wrap.b32 	%r4055, %r4051, %r4052, 30;
	shf.l.wrap.b32 	%r4056, %r4052, %r4051, 30;
	mov.b64 	%rd3215, {%r4056, %r4055};
	xor.b64  	%rd3216, %rd3214, %rd3215;
	shf.l.wrap.b32 	%r4057, %r4051, %r4052, 25;
	shf.l.wrap.b32 	%r4058, %r4052, %r4051, 25;
	mov.b64 	%rd3217, {%r4058, %r4057};
	xor.b64  	%rd3218, %rd3216, %rd3217;
	xor.b64  	%rd3219, %rd3175, %rd3150;
	and.b64  	%rd3220, %rd3200, %rd3219;
	and.b64  	%rd3221, %rd3175, %rd3150;
	xor.b64  	%rd3222, %rd3220, %rd3221;
	add.s64 	%rd3223, %rd3218, %rd3222;
	add.s64 	%rd3224, %rd3213, %rd3125;
	add.s64 	%rd3225, %rd3223, %rd3213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4059,%dummy}, %rd3224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4060}, %rd3224;
	}
	shf.r.wrap.b32 	%r4061, %r4060, %r4059, 14;
	shf.r.wrap.b32 	%r4062, %r4059, %r4060, 14;
	mov.b64 	%rd3226, {%r4062, %r4061};
	shf.r.wrap.b32 	%r4063, %r4060, %r4059, 18;
	shf.r.wrap.b32 	%r4064, %r4059, %r4060, 18;
	mov.b64 	%rd3227, {%r4064, %r4063};
	xor.b64  	%rd3228, %rd3226, %rd3227;
	shf.l.wrap.b32 	%r4065, %r4059, %r4060, 23;
	shf.l.wrap.b32 	%r4066, %r4060, %r4059, 23;
	mov.b64 	%rd3229, {%r4066, %r4065};
	xor.b64  	%rd3230, %rd3228, %rd3229;
	and.b64  	%rd3231, %rd3224, %rd3199;
	not.b64 	%rd3232, %rd3224;
	and.b64  	%rd3233, %rd3174, %rd3232;
	or.b64  	%rd3234, %rd3231, %rd3233;
	add.s64 	%rd3235, %rd3234, %rd3149;
	add.s64 	%rd3236, %rd3235, %rd3230;
	add.s64 	%rd3237, %rd3236, %rd87;
	add.s64 	%rd3238, %rd3237, %rd1654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4067,%dummy}, %rd3225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4068}, %rd3225;
	}
	shf.r.wrap.b32 	%r4069, %r4068, %r4067, 28;
	shf.r.wrap.b32 	%r4070, %r4067, %r4068, 28;
	mov.b64 	%rd3239, {%r4070, %r4069};
	shf.l.wrap.b32 	%r4071, %r4067, %r4068, 30;
	shf.l.wrap.b32 	%r4072, %r4068, %r4067, 30;
	mov.b64 	%rd3240, {%r4072, %r4071};
	xor.b64  	%rd3241, %rd3239, %rd3240;
	shf.l.wrap.b32 	%r4073, %r4067, %r4068, 25;
	shf.l.wrap.b32 	%r4074, %r4068, %r4067, 25;
	mov.b64 	%rd3242, {%r4074, %r4073};
	xor.b64  	%rd3243, %rd3241, %rd3242;
	xor.b64  	%rd3244, %rd3200, %rd3175;
	and.b64  	%rd3245, %rd3225, %rd3244;
	and.b64  	%rd3246, %rd3200, %rd3175;
	xor.b64  	%rd3247, %rd3245, %rd3246;
	add.s64 	%rd3248, %rd3243, %rd3247;
	add.s64 	%rd3249, %rd3238, %rd3150;
	add.s64 	%rd3250, %rd3248, %rd3238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4075,%dummy}, %rd3249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4076}, %rd3249;
	}
	shf.r.wrap.b32 	%r4077, %r4076, %r4075, 14;
	shf.r.wrap.b32 	%r4078, %r4075, %r4076, 14;
	mov.b64 	%rd3251, {%r4078, %r4077};
	shf.r.wrap.b32 	%r4079, %r4076, %r4075, 18;
	shf.r.wrap.b32 	%r4080, %r4075, %r4076, 18;
	mov.b64 	%rd3252, {%r4080, %r4079};
	xor.b64  	%rd3253, %rd3251, %rd3252;
	shf.l.wrap.b32 	%r4081, %r4075, %r4076, 23;
	shf.l.wrap.b32 	%r4082, %r4076, %r4075, 23;
	mov.b64 	%rd3254, {%r4082, %r4081};
	xor.b64  	%rd3255, %rd3253, %rd3254;
	and.b64  	%rd3256, %rd3249, %rd3224;
	not.b64 	%rd3257, %rd3249;
	and.b64  	%rd3258, %rd3199, %rd3257;
	or.b64  	%rd3259, %rd3256, %rd3258;
	add.s64 	%rd3260, %rd3259, %rd3174;
	add.s64 	%rd3261, %rd3260, %rd3255;
	add.s64 	%rd3262, %rd3261, %rd88;
	add.s64 	%rd3263, %rd3262, %rd1667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4083,%dummy}, %rd3250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4084}, %rd3250;
	}
	shf.r.wrap.b32 	%r4085, %r4084, %r4083, 28;
	shf.r.wrap.b32 	%r4086, %r4083, %r4084, 28;
	mov.b64 	%rd3264, {%r4086, %r4085};
	shf.l.wrap.b32 	%r4087, %r4083, %r4084, 30;
	shf.l.wrap.b32 	%r4088, %r4084, %r4083, 30;
	mov.b64 	%rd3265, {%r4088, %r4087};
	xor.b64  	%rd3266, %rd3264, %rd3265;
	shf.l.wrap.b32 	%r4089, %r4083, %r4084, 25;
	shf.l.wrap.b32 	%r4090, %r4084, %r4083, 25;
	mov.b64 	%rd3267, {%r4090, %r4089};
	xor.b64  	%rd3268, %rd3266, %rd3267;
	xor.b64  	%rd3269, %rd3225, %rd3200;
	and.b64  	%rd3270, %rd3250, %rd3269;
	and.b64  	%rd3271, %rd3225, %rd3200;
	xor.b64  	%rd3272, %rd3270, %rd3271;
	add.s64 	%rd3273, %rd3268, %rd3272;
	add.s64 	%rd3274, %rd3263, %rd3175;
	add.s64 	%rd3275, %rd3273, %rd3263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4091,%dummy}, %rd3274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4092}, %rd3274;
	}
	shf.r.wrap.b32 	%r4093, %r4092, %r4091, 14;
	shf.r.wrap.b32 	%r4094, %r4091, %r4092, 14;
	mov.b64 	%rd3276, {%r4094, %r4093};
	shf.r.wrap.b32 	%r4095, %r4092, %r4091, 18;
	shf.r.wrap.b32 	%r4096, %r4091, %r4092, 18;
	mov.b64 	%rd3277, {%r4096, %r4095};
	xor.b64  	%rd3278, %rd3276, %rd3277;
	shf.l.wrap.b32 	%r4097, %r4091, %r4092, 23;
	shf.l.wrap.b32 	%r4098, %r4092, %r4091, 23;
	mov.b64 	%rd3279, {%r4098, %r4097};
	xor.b64  	%rd3280, %rd3278, %rd3279;
	and.b64  	%rd3281, %rd3274, %rd3249;
	not.b64 	%rd3282, %rd3274;
	and.b64  	%rd3283, %rd3224, %rd3282;
	or.b64  	%rd3284, %rd3281, %rd3283;
	add.s64 	%rd3285, %rd3284, %rd3199;
	add.s64 	%rd3286, %rd3285, %rd3280;
	add.s64 	%rd3287, %rd3286, %rd89;
	add.s64 	%rd3288, %rd3287, %rd1680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4099,%dummy}, %rd3275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4100}, %rd3275;
	}
	shf.r.wrap.b32 	%r4101, %r4100, %r4099, 28;
	shf.r.wrap.b32 	%r4102, %r4099, %r4100, 28;
	mov.b64 	%rd3289, {%r4102, %r4101};
	shf.l.wrap.b32 	%r4103, %r4099, %r4100, 30;
	shf.l.wrap.b32 	%r4104, %r4100, %r4099, 30;
	mov.b64 	%rd3290, {%r4104, %r4103};
	xor.b64  	%rd3291, %rd3289, %rd3290;
	shf.l.wrap.b32 	%r4105, %r4099, %r4100, 25;
	shf.l.wrap.b32 	%r4106, %r4100, %r4099, 25;
	mov.b64 	%rd3292, {%r4106, %r4105};
	xor.b64  	%rd3293, %rd3291, %rd3292;
	xor.b64  	%rd3294, %rd3250, %rd3225;
	and.b64  	%rd3295, %rd3275, %rd3294;
	and.b64  	%rd3296, %rd3250, %rd3225;
	xor.b64  	%rd3297, %rd3295, %rd3296;
	add.s64 	%rd3298, %rd3293, %rd3297;
	add.s64 	%rd3299, %rd3288, %rd3200;
	add.s64 	%rd3300, %rd3298, %rd3288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4107,%dummy}, %rd3299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4108}, %rd3299;
	}
	shf.r.wrap.b32 	%r4109, %r4108, %r4107, 14;
	shf.r.wrap.b32 	%r4110, %r4107, %r4108, 14;
	mov.b64 	%rd3301, {%r4110, %r4109};
	shf.r.wrap.b32 	%r4111, %r4108, %r4107, 18;
	shf.r.wrap.b32 	%r4112, %r4107, %r4108, 18;
	mov.b64 	%rd3302, {%r4112, %r4111};
	xor.b64  	%rd3303, %rd3301, %rd3302;
	shf.l.wrap.b32 	%r4113, %r4107, %r4108, 23;
	shf.l.wrap.b32 	%r4114, %r4108, %r4107, 23;
	mov.b64 	%rd3304, {%r4114, %r4113};
	xor.b64  	%rd3305, %rd3303, %rd3304;
	and.b64  	%rd3306, %rd3299, %rd3274;
	not.b64 	%rd3307, %rd3299;
	and.b64  	%rd3308, %rd3249, %rd3307;
	or.b64  	%rd3309, %rd3306, %rd3308;
	add.s64 	%rd3310, %rd3309, %rd3224;
	add.s64 	%rd3311, %rd3310, %rd3305;
	add.s64 	%rd3312, %rd3311, %rd90;
	add.s64 	%rd3313, %rd3312, %rd1693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4115,%dummy}, %rd3300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4116}, %rd3300;
	}
	shf.r.wrap.b32 	%r4117, %r4116, %r4115, 28;
	shf.r.wrap.b32 	%r4118, %r4115, %r4116, 28;
	mov.b64 	%rd3314, {%r4118, %r4117};
	shf.l.wrap.b32 	%r4119, %r4115, %r4116, 30;
	shf.l.wrap.b32 	%r4120, %r4116, %r4115, 30;
	mov.b64 	%rd3315, {%r4120, %r4119};
	xor.b64  	%rd3316, %rd3314, %rd3315;
	shf.l.wrap.b32 	%r4121, %r4115, %r4116, 25;
	shf.l.wrap.b32 	%r4122, %r4116, %r4115, 25;
	mov.b64 	%rd3317, {%r4122, %r4121};
	xor.b64  	%rd3318, %rd3316, %rd3317;
	xor.b64  	%rd3319, %rd3275, %rd3250;
	and.b64  	%rd3320, %rd3300, %rd3319;
	and.b64  	%rd3321, %rd3275, %rd3250;
	xor.b64  	%rd3322, %rd3320, %rd3321;
	add.s64 	%rd3323, %rd3318, %rd3322;
	add.s64 	%rd3324, %rd3313, %rd3225;
	add.s64 	%rd3325, %rd3323, %rd3313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4123,%dummy}, %rd3324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4124}, %rd3324;
	}
	shf.r.wrap.b32 	%r4125, %r4124, %r4123, 14;
	shf.r.wrap.b32 	%r4126, %r4123, %r4124, 14;
	mov.b64 	%rd3326, {%r4126, %r4125};
	shf.r.wrap.b32 	%r4127, %r4124, %r4123, 18;
	shf.r.wrap.b32 	%r4128, %r4123, %r4124, 18;
	mov.b64 	%rd3327, {%r4128, %r4127};
	xor.b64  	%rd3328, %rd3326, %rd3327;
	shf.l.wrap.b32 	%r4129, %r4123, %r4124, 23;
	shf.l.wrap.b32 	%r4130, %r4124, %r4123, 23;
	mov.b64 	%rd3329, {%r4130, %r4129};
	xor.b64  	%rd3330, %rd3328, %rd3329;
	and.b64  	%rd3331, %rd3324, %rd3299;
	not.b64 	%rd3332, %rd3324;
	and.b64  	%rd3333, %rd3274, %rd3332;
	or.b64  	%rd3334, %rd3331, %rd3333;
	add.s64 	%rd3335, %rd3334, %rd3249;
	add.s64 	%rd3336, %rd3335, %rd3330;
	add.s64 	%rd3337, %rd3336, %rd91;
	add.s64 	%rd3338, %rd3337, %rd1706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4131,%dummy}, %rd3325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4132}, %rd3325;
	}
	shf.r.wrap.b32 	%r4133, %r4132, %r4131, 28;
	shf.r.wrap.b32 	%r4134, %r4131, %r4132, 28;
	mov.b64 	%rd3339, {%r4134, %r4133};
	shf.l.wrap.b32 	%r4135, %r4131, %r4132, 30;
	shf.l.wrap.b32 	%r4136, %r4132, %r4131, 30;
	mov.b64 	%rd3340, {%r4136, %r4135};
	xor.b64  	%rd3341, %rd3339, %rd3340;
	shf.l.wrap.b32 	%r4137, %r4131, %r4132, 25;
	shf.l.wrap.b32 	%r4138, %r4132, %r4131, 25;
	mov.b64 	%rd3342, {%r4138, %r4137};
	xor.b64  	%rd3343, %rd3341, %rd3342;
	xor.b64  	%rd3344, %rd3300, %rd3275;
	and.b64  	%rd3345, %rd3325, %rd3344;
	and.b64  	%rd3346, %rd3300, %rd3275;
	xor.b64  	%rd3347, %rd3345, %rd3346;
	add.s64 	%rd3348, %rd3343, %rd3347;
	add.s64 	%rd3349, %rd3338, %rd3250;
	add.s64 	%rd3350, %rd3348, %rd3338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4139,%dummy}, %rd3349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4140}, %rd3349;
	}
	shf.r.wrap.b32 	%r4141, %r4140, %r4139, 14;
	shf.r.wrap.b32 	%r4142, %r4139, %r4140, 14;
	mov.b64 	%rd3351, {%r4142, %r4141};
	shf.r.wrap.b32 	%r4143, %r4140, %r4139, 18;
	shf.r.wrap.b32 	%r4144, %r4139, %r4140, 18;
	mov.b64 	%rd3352, {%r4144, %r4143};
	xor.b64  	%rd3353, %rd3351, %rd3352;
	shf.l.wrap.b32 	%r4145, %r4139, %r4140, 23;
	shf.l.wrap.b32 	%r4146, %r4140, %r4139, 23;
	mov.b64 	%rd3354, {%r4146, %r4145};
	xor.b64  	%rd3355, %rd3353, %rd3354;
	and.b64  	%rd3356, %rd3349, %rd3324;
	not.b64 	%rd3357, %rd3349;
	and.b64  	%rd3358, %rd3299, %rd3357;
	or.b64  	%rd3359, %rd3356, %rd3358;
	add.s64 	%rd3360, %rd3359, %rd3274;
	add.s64 	%rd3361, %rd3360, %rd3355;
	add.s64 	%rd3362, %rd3361, %rd92;
	add.s64 	%rd3363, %rd3362, %rd1719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4147,%dummy}, %rd3350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4148}, %rd3350;
	}
	shf.r.wrap.b32 	%r4149, %r4148, %r4147, 28;
	shf.r.wrap.b32 	%r4150, %r4147, %r4148, 28;
	mov.b64 	%rd3364, {%r4150, %r4149};
	shf.l.wrap.b32 	%r4151, %r4147, %r4148, 30;
	shf.l.wrap.b32 	%r4152, %r4148, %r4147, 30;
	mov.b64 	%rd3365, {%r4152, %r4151};
	xor.b64  	%rd3366, %rd3364, %rd3365;
	shf.l.wrap.b32 	%r4153, %r4147, %r4148, 25;
	shf.l.wrap.b32 	%r4154, %r4148, %r4147, 25;
	mov.b64 	%rd3367, {%r4154, %r4153};
	xor.b64  	%rd3368, %rd3366, %rd3367;
	xor.b64  	%rd3369, %rd3325, %rd3300;
	and.b64  	%rd3370, %rd3350, %rd3369;
	and.b64  	%rd3371, %rd3325, %rd3300;
	xor.b64  	%rd3372, %rd3370, %rd3371;
	add.s64 	%rd3373, %rd3368, %rd3372;
	add.s64 	%rd3374, %rd3363, %rd3275;
	add.s64 	%rd3375, %rd3373, %rd3363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4155,%dummy}, %rd3374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4156}, %rd3374;
	}
	shf.r.wrap.b32 	%r4157, %r4156, %r4155, 14;
	shf.r.wrap.b32 	%r4158, %r4155, %r4156, 14;
	mov.b64 	%rd3376, {%r4158, %r4157};
	shf.r.wrap.b32 	%r4159, %r4156, %r4155, 18;
	shf.r.wrap.b32 	%r4160, %r4155, %r4156, 18;
	mov.b64 	%rd3377, {%r4160, %r4159};
	xor.b64  	%rd3378, %rd3376, %rd3377;
	shf.l.wrap.b32 	%r4161, %r4155, %r4156, 23;
	shf.l.wrap.b32 	%r4162, %r4156, %r4155, 23;
	mov.b64 	%rd3379, {%r4162, %r4161};
	xor.b64  	%rd3380, %rd3378, %rd3379;
	and.b64  	%rd3381, %rd3374, %rd3349;
	not.b64 	%rd3382, %rd3374;
	and.b64  	%rd3383, %rd3324, %rd3382;
	or.b64  	%rd3384, %rd3381, %rd3383;
	add.s64 	%rd3385, %rd3384, %rd3299;
	add.s64 	%rd3386, %rd3385, %rd3380;
	add.s64 	%rd3387, %rd3386, %rd93;
	add.s64 	%rd3388, %rd3387, %rd1732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4163,%dummy}, %rd3375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4164}, %rd3375;
	}
	shf.r.wrap.b32 	%r4165, %r4164, %r4163, 28;
	shf.r.wrap.b32 	%r4166, %r4163, %r4164, 28;
	mov.b64 	%rd3389, {%r4166, %r4165};
	shf.l.wrap.b32 	%r4167, %r4163, %r4164, 30;
	shf.l.wrap.b32 	%r4168, %r4164, %r4163, 30;
	mov.b64 	%rd3390, {%r4168, %r4167};
	xor.b64  	%rd3391, %rd3389, %rd3390;
	shf.l.wrap.b32 	%r4169, %r4163, %r4164, 25;
	shf.l.wrap.b32 	%r4170, %r4164, %r4163, 25;
	mov.b64 	%rd3392, {%r4170, %r4169};
	xor.b64  	%rd3393, %rd3391, %rd3392;
	xor.b64  	%rd3394, %rd3350, %rd3325;
	and.b64  	%rd3395, %rd3375, %rd3394;
	and.b64  	%rd3396, %rd3350, %rd3325;
	xor.b64  	%rd3397, %rd3395, %rd3396;
	add.s64 	%rd3398, %rd3393, %rd3397;
	add.s64 	%rd3399, %rd3388, %rd3300;
	add.s64 	%rd3400, %rd3398, %rd3388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4171,%dummy}, %rd3399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4172}, %rd3399;
	}
	shf.r.wrap.b32 	%r4173, %r4172, %r4171, 14;
	shf.r.wrap.b32 	%r4174, %r4171, %r4172, 14;
	mov.b64 	%rd3401, {%r4174, %r4173};
	shf.r.wrap.b32 	%r4175, %r4172, %r4171, 18;
	shf.r.wrap.b32 	%r4176, %r4171, %r4172, 18;
	mov.b64 	%rd3402, {%r4176, %r4175};
	xor.b64  	%rd3403, %rd3401, %rd3402;
	shf.l.wrap.b32 	%r4177, %r4171, %r4172, 23;
	shf.l.wrap.b32 	%r4178, %r4172, %r4171, 23;
	mov.b64 	%rd3404, {%r4178, %r4177};
	xor.b64  	%rd3405, %rd3403, %rd3404;
	and.b64  	%rd3406, %rd3399, %rd3374;
	not.b64 	%rd3407, %rd3399;
	and.b64  	%rd3408, %rd3349, %rd3407;
	or.b64  	%rd3409, %rd3406, %rd3408;
	add.s64 	%rd3410, %rd3409, %rd3324;
	add.s64 	%rd3411, %rd3410, %rd3405;
	add.s64 	%rd3412, %rd3411, %rd94;
	add.s64 	%rd3413, %rd3412, %rd1745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4179,%dummy}, %rd3400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4180}, %rd3400;
	}
	shf.r.wrap.b32 	%r4181, %r4180, %r4179, 28;
	shf.r.wrap.b32 	%r4182, %r4179, %r4180, 28;
	mov.b64 	%rd3414, {%r4182, %r4181};
	shf.l.wrap.b32 	%r4183, %r4179, %r4180, 30;
	shf.l.wrap.b32 	%r4184, %r4180, %r4179, 30;
	mov.b64 	%rd3415, {%r4184, %r4183};
	xor.b64  	%rd3416, %rd3414, %rd3415;
	shf.l.wrap.b32 	%r4185, %r4179, %r4180, 25;
	shf.l.wrap.b32 	%r4186, %r4180, %r4179, 25;
	mov.b64 	%rd3417, {%r4186, %r4185};
	xor.b64  	%rd3418, %rd3416, %rd3417;
	xor.b64  	%rd3419, %rd3375, %rd3350;
	and.b64  	%rd3420, %rd3400, %rd3419;
	and.b64  	%rd3421, %rd3375, %rd3350;
	xor.b64  	%rd3422, %rd3420, %rd3421;
	add.s64 	%rd3423, %rd3418, %rd3422;
	add.s64 	%rd3424, %rd3413, %rd3325;
	add.s64 	%rd3425, %rd3423, %rd3413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4187,%dummy}, %rd3424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4188}, %rd3424;
	}
	shf.r.wrap.b32 	%r4189, %r4188, %r4187, 14;
	shf.r.wrap.b32 	%r4190, %r4187, %r4188, 14;
	mov.b64 	%rd3426, {%r4190, %r4189};
	shf.r.wrap.b32 	%r4191, %r4188, %r4187, 18;
	shf.r.wrap.b32 	%r4192, %r4187, %r4188, 18;
	mov.b64 	%rd3427, {%r4192, %r4191};
	xor.b64  	%rd3428, %rd3426, %rd3427;
	shf.l.wrap.b32 	%r4193, %r4187, %r4188, 23;
	shf.l.wrap.b32 	%r4194, %r4188, %r4187, 23;
	mov.b64 	%rd3429, {%r4194, %r4193};
	xor.b64  	%rd3430, %rd3428, %rd3429;
	and.b64  	%rd3431, %rd3424, %rd3399;
	not.b64 	%rd3432, %rd3424;
	and.b64  	%rd3433, %rd3374, %rd3432;
	or.b64  	%rd3434, %rd3431, %rd3433;
	add.s64 	%rd3435, %rd3434, %rd3349;
	add.s64 	%rd3436, %rd3435, %rd3430;
	add.s64 	%rd3437, %rd3436, %rd95;
	add.s64 	%rd3438, %rd3437, %rd1758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4195,%dummy}, %rd3425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4196}, %rd3425;
	}
	shf.r.wrap.b32 	%r4197, %r4196, %r4195, 28;
	shf.r.wrap.b32 	%r4198, %r4195, %r4196, 28;
	mov.b64 	%rd3439, {%r4198, %r4197};
	shf.l.wrap.b32 	%r4199, %r4195, %r4196, 30;
	shf.l.wrap.b32 	%r4200, %r4196, %r4195, 30;
	mov.b64 	%rd3440, {%r4200, %r4199};
	xor.b64  	%rd3441, %rd3439, %rd3440;
	shf.l.wrap.b32 	%r4201, %r4195, %r4196, 25;
	shf.l.wrap.b32 	%r4202, %r4196, %r4195, 25;
	mov.b64 	%rd3442, {%r4202, %r4201};
	xor.b64  	%rd3443, %rd3441, %rd3442;
	xor.b64  	%rd3444, %rd3400, %rd3375;
	and.b64  	%rd3445, %rd3425, %rd3444;
	and.b64  	%rd3446, %rd3400, %rd3375;
	xor.b64  	%rd3447, %rd3445, %rd3446;
	add.s64 	%rd3448, %rd3443, %rd3447;
	add.s64 	%rd3449, %rd3438, %rd3350;
	add.s64 	%rd3450, %rd3448, %rd3438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4203,%dummy}, %rd3449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4204}, %rd3449;
	}
	shf.r.wrap.b32 	%r4205, %r4204, %r4203, 14;
	shf.r.wrap.b32 	%r4206, %r4203, %r4204, 14;
	mov.b64 	%rd3451, {%r4206, %r4205};
	shf.r.wrap.b32 	%r4207, %r4204, %r4203, 18;
	shf.r.wrap.b32 	%r4208, %r4203, %r4204, 18;
	mov.b64 	%rd3452, {%r4208, %r4207};
	xor.b64  	%rd3453, %rd3451, %rd3452;
	shf.l.wrap.b32 	%r4209, %r4203, %r4204, 23;
	shf.l.wrap.b32 	%r4210, %r4204, %r4203, 23;
	mov.b64 	%rd3454, {%r4210, %r4209};
	xor.b64  	%rd3455, %rd3453, %rd3454;
	and.b64  	%rd3456, %rd3449, %rd3424;
	not.b64 	%rd3457, %rd3449;
	and.b64  	%rd3458, %rd3399, %rd3457;
	or.b64  	%rd3459, %rd3456, %rd3458;
	add.s64 	%rd3460, %rd3459, %rd3374;
	add.s64 	%rd3461, %rd3460, %rd3455;
	add.s64 	%rd3462, %rd3461, %rd96;
	add.s64 	%rd3463, %rd3462, %rd1771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4211,%dummy}, %rd3450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4212}, %rd3450;
	}
	shf.r.wrap.b32 	%r4213, %r4212, %r4211, 28;
	shf.r.wrap.b32 	%r4214, %r4211, %r4212, 28;
	mov.b64 	%rd3464, {%r4214, %r4213};
	shf.l.wrap.b32 	%r4215, %r4211, %r4212, 30;
	shf.l.wrap.b32 	%r4216, %r4212, %r4211, 30;
	mov.b64 	%rd3465, {%r4216, %r4215};
	xor.b64  	%rd3466, %rd3464, %rd3465;
	shf.l.wrap.b32 	%r4217, %r4211, %r4212, 25;
	shf.l.wrap.b32 	%r4218, %r4212, %r4211, 25;
	mov.b64 	%rd3467, {%r4218, %r4217};
	xor.b64  	%rd3468, %rd3466, %rd3467;
	xor.b64  	%rd3469, %rd3425, %rd3400;
	and.b64  	%rd3470, %rd3450, %rd3469;
	and.b64  	%rd3471, %rd3425, %rd3400;
	xor.b64  	%rd3472, %rd3470, %rd3471;
	add.s64 	%rd3473, %rd3468, %rd3472;
	add.s64 	%rd3474, %rd3463, %rd3375;
	add.s64 	%rd3475, %rd3473, %rd3463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4219,%dummy}, %rd3474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4220}, %rd3474;
	}
	shf.r.wrap.b32 	%r4221, %r4220, %r4219, 14;
	shf.r.wrap.b32 	%r4222, %r4219, %r4220, 14;
	mov.b64 	%rd3476, {%r4222, %r4221};
	shf.r.wrap.b32 	%r4223, %r4220, %r4219, 18;
	shf.r.wrap.b32 	%r4224, %r4219, %r4220, 18;
	mov.b64 	%rd3477, {%r4224, %r4223};
	xor.b64  	%rd3478, %rd3476, %rd3477;
	shf.l.wrap.b32 	%r4225, %r4219, %r4220, 23;
	shf.l.wrap.b32 	%r4226, %r4220, %r4219, 23;
	mov.b64 	%rd3479, {%r4226, %r4225};
	xor.b64  	%rd3480, %rd3478, %rd3479;
	and.b64  	%rd3481, %rd3474, %rd3449;
	not.b64 	%rd3482, %rd3474;
	and.b64  	%rd3483, %rd3424, %rd3482;
	or.b64  	%rd3484, %rd3481, %rd3483;
	add.s64 	%rd3485, %rd3484, %rd3399;
	add.s64 	%rd3486, %rd3485, %rd3480;
	add.s64 	%rd3487, %rd3486, %rd97;
	add.s64 	%rd3488, %rd3487, %rd1784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4227,%dummy}, %rd3475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4228}, %rd3475;
	}
	shf.r.wrap.b32 	%r4229, %r4228, %r4227, 28;
	shf.r.wrap.b32 	%r4230, %r4227, %r4228, 28;
	mov.b64 	%rd3489, {%r4230, %r4229};
	shf.l.wrap.b32 	%r4231, %r4227, %r4228, 30;
	shf.l.wrap.b32 	%r4232, %r4228, %r4227, 30;
	mov.b64 	%rd3490, {%r4232, %r4231};
	xor.b64  	%rd3491, %rd3489, %rd3490;
	shf.l.wrap.b32 	%r4233, %r4227, %r4228, 25;
	shf.l.wrap.b32 	%r4234, %r4228, %r4227, 25;
	mov.b64 	%rd3492, {%r4234, %r4233};
	xor.b64  	%rd3493, %rd3491, %rd3492;
	xor.b64  	%rd3494, %rd3450, %rd3425;
	and.b64  	%rd3495, %rd3475, %rd3494;
	and.b64  	%rd3496, %rd3450, %rd3425;
	xor.b64  	%rd3497, %rd3495, %rd3496;
	add.s64 	%rd3498, %rd3493, %rd3497;
	add.s64 	%rd3499, %rd3488, %rd3400;
	add.s64 	%rd3500, %rd3498, %rd3488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4235,%dummy}, %rd3499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4236}, %rd3499;
	}
	shf.r.wrap.b32 	%r4237, %r4236, %r4235, 14;
	shf.r.wrap.b32 	%r4238, %r4235, %r4236, 14;
	mov.b64 	%rd3501, {%r4238, %r4237};
	shf.r.wrap.b32 	%r4239, %r4236, %r4235, 18;
	shf.r.wrap.b32 	%r4240, %r4235, %r4236, 18;
	mov.b64 	%rd3502, {%r4240, %r4239};
	xor.b64  	%rd3503, %rd3501, %rd3502;
	shf.l.wrap.b32 	%r4241, %r4235, %r4236, 23;
	shf.l.wrap.b32 	%r4242, %r4236, %r4235, 23;
	mov.b64 	%rd3504, {%r4242, %r4241};
	xor.b64  	%rd3505, %rd3503, %rd3504;
	and.b64  	%rd3506, %rd3499, %rd3474;
	not.b64 	%rd3507, %rd3499;
	and.b64  	%rd3508, %rd3449, %rd3507;
	or.b64  	%rd3509, %rd3506, %rd3508;
	add.s64 	%rd3510, %rd3509, %rd3424;
	add.s64 	%rd3511, %rd3510, %rd3505;
	add.s64 	%rd3512, %rd3511, %rd98;
	add.s64 	%rd3513, %rd3512, %rd1797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4243,%dummy}, %rd3500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4244}, %rd3500;
	}
	shf.r.wrap.b32 	%r4245, %r4244, %r4243, 28;
	shf.r.wrap.b32 	%r4246, %r4243, %r4244, 28;
	mov.b64 	%rd3514, {%r4246, %r4245};
	shf.l.wrap.b32 	%r4247, %r4243, %r4244, 30;
	shf.l.wrap.b32 	%r4248, %r4244, %r4243, 30;
	mov.b64 	%rd3515, {%r4248, %r4247};
	xor.b64  	%rd3516, %rd3514, %rd3515;
	shf.l.wrap.b32 	%r4249, %r4243, %r4244, 25;
	shf.l.wrap.b32 	%r4250, %r4244, %r4243, 25;
	mov.b64 	%rd3517, {%r4250, %r4249};
	xor.b64  	%rd3518, %rd3516, %rd3517;
	xor.b64  	%rd3519, %rd3475, %rd3450;
	and.b64  	%rd3520, %rd3500, %rd3519;
	and.b64  	%rd3521, %rd3475, %rd3450;
	xor.b64  	%rd3522, %rd3520, %rd3521;
	add.s64 	%rd3523, %rd3518, %rd3522;
	add.s64 	%rd3524, %rd3513, %rd3425;
	add.s64 	%rd3525, %rd3523, %rd3513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4251,%dummy}, %rd3524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4252}, %rd3524;
	}
	shf.r.wrap.b32 	%r4253, %r4252, %r4251, 14;
	shf.r.wrap.b32 	%r4254, %r4251, %r4252, 14;
	mov.b64 	%rd3526, {%r4254, %r4253};
	shf.r.wrap.b32 	%r4255, %r4252, %r4251, 18;
	shf.r.wrap.b32 	%r4256, %r4251, %r4252, 18;
	mov.b64 	%rd3527, {%r4256, %r4255};
	xor.b64  	%rd3528, %rd3526, %rd3527;
	shf.l.wrap.b32 	%r4257, %r4251, %r4252, 23;
	shf.l.wrap.b32 	%r4258, %r4252, %r4251, 23;
	mov.b64 	%rd3529, {%r4258, %r4257};
	xor.b64  	%rd3530, %rd3528, %rd3529;
	and.b64  	%rd3531, %rd3524, %rd3499;
	not.b64 	%rd3532, %rd3524;
	and.b64  	%rd3533, %rd3474, %rd3532;
	or.b64  	%rd3534, %rd3531, %rd3533;
	add.s64 	%rd3535, %rd3534, %rd3449;
	add.s64 	%rd3536, %rd3535, %rd3530;
	add.s64 	%rd3537, %rd3536, %rd99;
	add.s64 	%rd3538, %rd3537, %rd1810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4259,%dummy}, %rd3525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4260}, %rd3525;
	}
	shf.r.wrap.b32 	%r4261, %r4260, %r4259, 28;
	shf.r.wrap.b32 	%r4262, %r4259, %r4260, 28;
	mov.b64 	%rd3539, {%r4262, %r4261};
	shf.l.wrap.b32 	%r4263, %r4259, %r4260, 30;
	shf.l.wrap.b32 	%r4264, %r4260, %r4259, 30;
	mov.b64 	%rd3540, {%r4264, %r4263};
	xor.b64  	%rd3541, %rd3539, %rd3540;
	shf.l.wrap.b32 	%r4265, %r4259, %r4260, 25;
	shf.l.wrap.b32 	%r4266, %r4260, %r4259, 25;
	mov.b64 	%rd3542, {%r4266, %r4265};
	xor.b64  	%rd3543, %rd3541, %rd3542;
	xor.b64  	%rd3544, %rd3500, %rd3475;
	and.b64  	%rd3545, %rd3525, %rd3544;
	and.b64  	%rd3546, %rd3500, %rd3475;
	xor.b64  	%rd3547, %rd3545, %rd3546;
	add.s64 	%rd3548, %rd3543, %rd3547;
	add.s64 	%rd3549, %rd3538, %rd3450;
	add.s64 	%rd3550, %rd3548, %rd3538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4267,%dummy}, %rd3549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4268}, %rd3549;
	}
	shf.r.wrap.b32 	%r4269, %r4268, %r4267, 14;
	shf.r.wrap.b32 	%r4270, %r4267, %r4268, 14;
	mov.b64 	%rd3551, {%r4270, %r4269};
	shf.r.wrap.b32 	%r4271, %r4268, %r4267, 18;
	shf.r.wrap.b32 	%r4272, %r4267, %r4268, 18;
	mov.b64 	%rd3552, {%r4272, %r4271};
	xor.b64  	%rd3553, %rd3551, %rd3552;
	shf.l.wrap.b32 	%r4273, %r4267, %r4268, 23;
	shf.l.wrap.b32 	%r4274, %r4268, %r4267, 23;
	mov.b64 	%rd3554, {%r4274, %r4273};
	xor.b64  	%rd3555, %rd3553, %rd3554;
	and.b64  	%rd3556, %rd3549, %rd3524;
	not.b64 	%rd3557, %rd3549;
	and.b64  	%rd3558, %rd3499, %rd3557;
	or.b64  	%rd3559, %rd3556, %rd3558;
	add.s64 	%rd3560, %rd3559, %rd3474;
	add.s64 	%rd3561, %rd3560, %rd3555;
	add.s64 	%rd3562, %rd3561, %rd100;
	add.s64 	%rd3563, %rd3562, %rd1823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4275,%dummy}, %rd3550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4276}, %rd3550;
	}
	shf.r.wrap.b32 	%r4277, %r4276, %r4275, 28;
	shf.r.wrap.b32 	%r4278, %r4275, %r4276, 28;
	mov.b64 	%rd3564, {%r4278, %r4277};
	shf.l.wrap.b32 	%r4279, %r4275, %r4276, 30;
	shf.l.wrap.b32 	%r4280, %r4276, %r4275, 30;
	mov.b64 	%rd3565, {%r4280, %r4279};
	xor.b64  	%rd3566, %rd3564, %rd3565;
	shf.l.wrap.b32 	%r4281, %r4275, %r4276, 25;
	shf.l.wrap.b32 	%r4282, %r4276, %r4275, 25;
	mov.b64 	%rd3567, {%r4282, %r4281};
	xor.b64  	%rd3568, %rd3566, %rd3567;
	xor.b64  	%rd3569, %rd3525, %rd3500;
	and.b64  	%rd3570, %rd3550, %rd3569;
	and.b64  	%rd3571, %rd3525, %rd3500;
	xor.b64  	%rd3572, %rd3570, %rd3571;
	add.s64 	%rd3573, %rd3568, %rd3572;
	add.s64 	%rd3574, %rd3563, %rd3475;
	add.s64 	%rd3575, %rd3573, %rd3563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4283,%dummy}, %rd3574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4284}, %rd3574;
	}
	shf.r.wrap.b32 	%r4285, %r4284, %r4283, 14;
	shf.r.wrap.b32 	%r4286, %r4283, %r4284, 14;
	mov.b64 	%rd3576, {%r4286, %r4285};
	shf.r.wrap.b32 	%r4287, %r4284, %r4283, 18;
	shf.r.wrap.b32 	%r4288, %r4283, %r4284, 18;
	mov.b64 	%rd3577, {%r4288, %r4287};
	xor.b64  	%rd3578, %rd3576, %rd3577;
	shf.l.wrap.b32 	%r4289, %r4283, %r4284, 23;
	shf.l.wrap.b32 	%r4290, %r4284, %r4283, 23;
	mov.b64 	%rd3579, {%r4290, %r4289};
	xor.b64  	%rd3580, %rd3578, %rd3579;
	and.b64  	%rd3581, %rd3574, %rd3549;
	not.b64 	%rd3582, %rd3574;
	and.b64  	%rd3583, %rd3524, %rd3582;
	or.b64  	%rd3584, %rd3581, %rd3583;
	add.s64 	%rd3585, %rd3584, %rd3499;
	add.s64 	%rd3586, %rd3585, %rd3580;
	add.s64 	%rd3587, %rd3586, %rd101;
	add.s64 	%rd3588, %rd3587, %rd1836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4291,%dummy}, %rd3575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4292}, %rd3575;
	}
	shf.r.wrap.b32 	%r4293, %r4292, %r4291, 28;
	shf.r.wrap.b32 	%r4294, %r4291, %r4292, 28;
	mov.b64 	%rd3589, {%r4294, %r4293};
	shf.l.wrap.b32 	%r4295, %r4291, %r4292, 30;
	shf.l.wrap.b32 	%r4296, %r4292, %r4291, 30;
	mov.b64 	%rd3590, {%r4296, %r4295};
	xor.b64  	%rd3591, %rd3589, %rd3590;
	shf.l.wrap.b32 	%r4297, %r4291, %r4292, 25;
	shf.l.wrap.b32 	%r4298, %r4292, %r4291, 25;
	mov.b64 	%rd3592, {%r4298, %r4297};
	xor.b64  	%rd3593, %rd3591, %rd3592;
	xor.b64  	%rd3594, %rd3550, %rd3525;
	and.b64  	%rd3595, %rd3575, %rd3594;
	and.b64  	%rd3596, %rd3550, %rd3525;
	xor.b64  	%rd3597, %rd3595, %rd3596;
	add.s64 	%rd3598, %rd3593, %rd3597;
	add.s64 	%rd3599, %rd3588, %rd3500;
	add.s64 	%rd3600, %rd3598, %rd3588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4299,%dummy}, %rd3599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4300}, %rd3599;
	}
	shf.r.wrap.b32 	%r4301, %r4300, %r4299, 14;
	shf.r.wrap.b32 	%r4302, %r4299, %r4300, 14;
	mov.b64 	%rd3601, {%r4302, %r4301};
	shf.r.wrap.b32 	%r4303, %r4300, %r4299, 18;
	shf.r.wrap.b32 	%r4304, %r4299, %r4300, 18;
	mov.b64 	%rd3602, {%r4304, %r4303};
	xor.b64  	%rd3603, %rd3601, %rd3602;
	shf.l.wrap.b32 	%r4305, %r4299, %r4300, 23;
	shf.l.wrap.b32 	%r4306, %r4300, %r4299, 23;
	mov.b64 	%rd3604, {%r4306, %r4305};
	xor.b64  	%rd3605, %rd3603, %rd3604;
	and.b64  	%rd3606, %rd3599, %rd3574;
	not.b64 	%rd3607, %rd3599;
	and.b64  	%rd3608, %rd3549, %rd3607;
	or.b64  	%rd3609, %rd3606, %rd3608;
	add.s64 	%rd3610, %rd3609, %rd3524;
	add.s64 	%rd3611, %rd3610, %rd3605;
	add.s64 	%rd3612, %rd3611, %rd102;
	add.s64 	%rd3613, %rd3612, %rd1849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4307,%dummy}, %rd3600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4308}, %rd3600;
	}
	shf.r.wrap.b32 	%r4309, %r4308, %r4307, 28;
	shf.r.wrap.b32 	%r4310, %r4307, %r4308, 28;
	mov.b64 	%rd3614, {%r4310, %r4309};
	shf.l.wrap.b32 	%r4311, %r4307, %r4308, 30;
	shf.l.wrap.b32 	%r4312, %r4308, %r4307, 30;
	mov.b64 	%rd3615, {%r4312, %r4311};
	xor.b64  	%rd3616, %rd3614, %rd3615;
	shf.l.wrap.b32 	%r4313, %r4307, %r4308, 25;
	shf.l.wrap.b32 	%r4314, %r4308, %r4307, 25;
	mov.b64 	%rd3617, {%r4314, %r4313};
	xor.b64  	%rd3618, %rd3616, %rd3617;
	xor.b64  	%rd3619, %rd3575, %rd3550;
	and.b64  	%rd3620, %rd3600, %rd3619;
	and.b64  	%rd3621, %rd3575, %rd3550;
	xor.b64  	%rd3622, %rd3620, %rd3621;
	add.s64 	%rd3623, %rd3618, %rd3622;
	add.s64 	%rd3624, %rd3613, %rd3525;
	add.s64 	%rd3625, %rd3623, %rd3613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4315,%dummy}, %rd3624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4316}, %rd3624;
	}
	shf.r.wrap.b32 	%r4317, %r4316, %r4315, 14;
	shf.r.wrap.b32 	%r4318, %r4315, %r4316, 14;
	mov.b64 	%rd3626, {%r4318, %r4317};
	shf.r.wrap.b32 	%r4319, %r4316, %r4315, 18;
	shf.r.wrap.b32 	%r4320, %r4315, %r4316, 18;
	mov.b64 	%rd3627, {%r4320, %r4319};
	xor.b64  	%rd3628, %rd3626, %rd3627;
	shf.l.wrap.b32 	%r4321, %r4315, %r4316, 23;
	shf.l.wrap.b32 	%r4322, %r4316, %r4315, 23;
	mov.b64 	%rd3629, {%r4322, %r4321};
	xor.b64  	%rd3630, %rd3628, %rd3629;
	and.b64  	%rd3631, %rd3624, %rd3599;
	not.b64 	%rd3632, %rd3624;
	and.b64  	%rd3633, %rd3574, %rd3632;
	or.b64  	%rd3634, %rd3631, %rd3633;
	add.s64 	%rd3635, %rd3634, %rd3549;
	add.s64 	%rd3636, %rd3635, %rd3630;
	add.s64 	%rd3637, %rd3636, %rd103;
	add.s64 	%rd3638, %rd3637, %rd1862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4323,%dummy}, %rd3625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4324}, %rd3625;
	}
	shf.r.wrap.b32 	%r4325, %r4324, %r4323, 28;
	shf.r.wrap.b32 	%r4326, %r4323, %r4324, 28;
	mov.b64 	%rd3639, {%r4326, %r4325};
	shf.l.wrap.b32 	%r4327, %r4323, %r4324, 30;
	shf.l.wrap.b32 	%r4328, %r4324, %r4323, 30;
	mov.b64 	%rd3640, {%r4328, %r4327};
	xor.b64  	%rd3641, %rd3639, %rd3640;
	shf.l.wrap.b32 	%r4329, %r4323, %r4324, 25;
	shf.l.wrap.b32 	%r4330, %r4324, %r4323, 25;
	mov.b64 	%rd3642, {%r4330, %r4329};
	xor.b64  	%rd3643, %rd3641, %rd3642;
	xor.b64  	%rd3644, %rd3600, %rd3575;
	and.b64  	%rd3645, %rd3625, %rd3644;
	and.b64  	%rd3646, %rd3600, %rd3575;
	xor.b64  	%rd3647, %rd3645, %rd3646;
	add.s64 	%rd3648, %rd3643, %rd3647;
	add.s64 	%rd3649, %rd3638, %rd3550;
	add.s64 	%rd3650, %rd3648, %rd3638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4331,%dummy}, %rd3649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4332}, %rd3649;
	}
	shf.r.wrap.b32 	%r4333, %r4332, %r4331, 14;
	shf.r.wrap.b32 	%r4334, %r4331, %r4332, 14;
	mov.b64 	%rd3651, {%r4334, %r4333};
	shf.r.wrap.b32 	%r4335, %r4332, %r4331, 18;
	shf.r.wrap.b32 	%r4336, %r4331, %r4332, 18;
	mov.b64 	%rd3652, {%r4336, %r4335};
	xor.b64  	%rd3653, %rd3651, %rd3652;
	shf.l.wrap.b32 	%r4337, %r4331, %r4332, 23;
	shf.l.wrap.b32 	%r4338, %r4332, %r4331, 23;
	mov.b64 	%rd3654, {%r4338, %r4337};
	xor.b64  	%rd3655, %rd3653, %rd3654;
	and.b64  	%rd3656, %rd3649, %rd3624;
	not.b64 	%rd3657, %rd3649;
	and.b64  	%rd3658, %rd3599, %rd3657;
	or.b64  	%rd3659, %rd3656, %rd3658;
	add.s64 	%rd3660, %rd3659, %rd3574;
	add.s64 	%rd3661, %rd3660, %rd3655;
	add.s64 	%rd3662, %rd3661, %rd104;
	add.s64 	%rd3663, %rd3662, %rd1875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4339,%dummy}, %rd3650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4340}, %rd3650;
	}
	shf.r.wrap.b32 	%r4341, %r4340, %r4339, 28;
	shf.r.wrap.b32 	%r4342, %r4339, %r4340, 28;
	mov.b64 	%rd3664, {%r4342, %r4341};
	shf.l.wrap.b32 	%r4343, %r4339, %r4340, 30;
	shf.l.wrap.b32 	%r4344, %r4340, %r4339, 30;
	mov.b64 	%rd3665, {%r4344, %r4343};
	xor.b64  	%rd3666, %rd3664, %rd3665;
	shf.l.wrap.b32 	%r4345, %r4339, %r4340, 25;
	shf.l.wrap.b32 	%r4346, %r4340, %r4339, 25;
	mov.b64 	%rd3667, {%r4346, %r4345};
	xor.b64  	%rd3668, %rd3666, %rd3667;
	xor.b64  	%rd3669, %rd3625, %rd3600;
	and.b64  	%rd3670, %rd3650, %rd3669;
	and.b64  	%rd3671, %rd3625, %rd3600;
	xor.b64  	%rd3672, %rd3670, %rd3671;
	add.s64 	%rd3673, %rd3668, %rd3672;
	add.s64 	%rd3674, %rd3663, %rd3575;
	add.s64 	%rd3675, %rd3673, %rd3663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4347,%dummy}, %rd3674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4348}, %rd3674;
	}
	shf.r.wrap.b32 	%r4349, %r4348, %r4347, 14;
	shf.r.wrap.b32 	%r4350, %r4347, %r4348, 14;
	mov.b64 	%rd3676, {%r4350, %r4349};
	shf.r.wrap.b32 	%r4351, %r4348, %r4347, 18;
	shf.r.wrap.b32 	%r4352, %r4347, %r4348, 18;
	mov.b64 	%rd3677, {%r4352, %r4351};
	xor.b64  	%rd3678, %rd3676, %rd3677;
	shf.l.wrap.b32 	%r4353, %r4347, %r4348, 23;
	shf.l.wrap.b32 	%r4354, %r4348, %r4347, 23;
	mov.b64 	%rd3679, {%r4354, %r4353};
	xor.b64  	%rd3680, %rd3678, %rd3679;
	and.b64  	%rd3681, %rd3674, %rd3649;
	not.b64 	%rd3682, %rd3674;
	and.b64  	%rd3683, %rd3624, %rd3682;
	or.b64  	%rd3684, %rd3681, %rd3683;
	add.s64 	%rd3685, %rd3684, %rd3599;
	add.s64 	%rd3686, %rd3685, %rd3680;
	add.s64 	%rd3687, %rd3686, %rd105;
	add.s64 	%rd3688, %rd3687, %rd1888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4355,%dummy}, %rd3675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4356}, %rd3675;
	}
	shf.r.wrap.b32 	%r4357, %r4356, %r4355, 28;
	shf.r.wrap.b32 	%r4358, %r4355, %r4356, 28;
	mov.b64 	%rd3689, {%r4358, %r4357};
	shf.l.wrap.b32 	%r4359, %r4355, %r4356, 30;
	shf.l.wrap.b32 	%r4360, %r4356, %r4355, 30;
	mov.b64 	%rd3690, {%r4360, %r4359};
	xor.b64  	%rd3691, %rd3689, %rd3690;
	shf.l.wrap.b32 	%r4361, %r4355, %r4356, 25;
	shf.l.wrap.b32 	%r4362, %r4356, %r4355, 25;
	mov.b64 	%rd3692, {%r4362, %r4361};
	xor.b64  	%rd3693, %rd3691, %rd3692;
	xor.b64  	%rd3694, %rd3650, %rd3625;
	and.b64  	%rd3695, %rd3675, %rd3694;
	and.b64  	%rd3696, %rd3650, %rd3625;
	xor.b64  	%rd3697, %rd3695, %rd3696;
	add.s64 	%rd3698, %rd3693, %rd3697;
	add.s64 	%rd3699, %rd3688, %rd3600;
	add.s64 	%rd3700, %rd3698, %rd3688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4363,%dummy}, %rd3699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4364}, %rd3699;
	}
	shf.r.wrap.b32 	%r4365, %r4364, %r4363, 14;
	shf.r.wrap.b32 	%r4366, %r4363, %r4364, 14;
	mov.b64 	%rd3701, {%r4366, %r4365};
	shf.r.wrap.b32 	%r4367, %r4364, %r4363, 18;
	shf.r.wrap.b32 	%r4368, %r4363, %r4364, 18;
	mov.b64 	%rd3702, {%r4368, %r4367};
	xor.b64  	%rd3703, %rd3701, %rd3702;
	shf.l.wrap.b32 	%r4369, %r4363, %r4364, 23;
	shf.l.wrap.b32 	%r4370, %r4364, %r4363, 23;
	mov.b64 	%rd3704, {%r4370, %r4369};
	xor.b64  	%rd3705, %rd3703, %rd3704;
	and.b64  	%rd3706, %rd3699, %rd3674;
	not.b64 	%rd3707, %rd3699;
	and.b64  	%rd3708, %rd3649, %rd3707;
	or.b64  	%rd3709, %rd3706, %rd3708;
	add.s64 	%rd3710, %rd3709, %rd3624;
	add.s64 	%rd3711, %rd3710, %rd3705;
	add.s64 	%rd3712, %rd3711, %rd106;
	add.s64 	%rd3713, %rd3712, %rd1901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4371,%dummy}, %rd3700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4372}, %rd3700;
	}
	shf.r.wrap.b32 	%r4373, %r4372, %r4371, 28;
	shf.r.wrap.b32 	%r4374, %r4371, %r4372, 28;
	mov.b64 	%rd3714, {%r4374, %r4373};
	shf.l.wrap.b32 	%r4375, %r4371, %r4372, 30;
	shf.l.wrap.b32 	%r4376, %r4372, %r4371, 30;
	mov.b64 	%rd3715, {%r4376, %r4375};
	xor.b64  	%rd3716, %rd3714, %rd3715;
	shf.l.wrap.b32 	%r4377, %r4371, %r4372, 25;
	shf.l.wrap.b32 	%r4378, %r4372, %r4371, 25;
	mov.b64 	%rd3717, {%r4378, %r4377};
	xor.b64  	%rd3718, %rd3716, %rd3717;
	xor.b64  	%rd3719, %rd3675, %rd3650;
	and.b64  	%rd3720, %rd3700, %rd3719;
	and.b64  	%rd3721, %rd3675, %rd3650;
	xor.b64  	%rd3722, %rd3720, %rd3721;
	add.s64 	%rd3723, %rd3718, %rd3722;
	add.s64 	%rd3724, %rd3713, %rd3625;
	add.s64 	%rd3725, %rd3723, %rd3713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4379,%dummy}, %rd3724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4380}, %rd3724;
	}
	shf.r.wrap.b32 	%r4381, %r4380, %r4379, 14;
	shf.r.wrap.b32 	%r4382, %r4379, %r4380, 14;
	mov.b64 	%rd3726, {%r4382, %r4381};
	shf.r.wrap.b32 	%r4383, %r4380, %r4379, 18;
	shf.r.wrap.b32 	%r4384, %r4379, %r4380, 18;
	mov.b64 	%rd3727, {%r4384, %r4383};
	xor.b64  	%rd3728, %rd3726, %rd3727;
	shf.l.wrap.b32 	%r4385, %r4379, %r4380, 23;
	shf.l.wrap.b32 	%r4386, %r4380, %r4379, 23;
	mov.b64 	%rd3729, {%r4386, %r4385};
	xor.b64  	%rd3730, %rd3728, %rd3729;
	and.b64  	%rd3731, %rd3724, %rd3699;
	not.b64 	%rd3732, %rd3724;
	and.b64  	%rd3733, %rd3674, %rd3732;
	or.b64  	%rd3734, %rd3731, %rd3733;
	add.s64 	%rd3735, %rd3734, %rd3649;
	add.s64 	%rd3736, %rd3735, %rd3730;
	add.s64 	%rd3737, %rd3736, %rd107;
	add.s64 	%rd3738, %rd3737, %rd1914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4387,%dummy}, %rd3725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4388}, %rd3725;
	}
	shf.r.wrap.b32 	%r4389, %r4388, %r4387, 28;
	shf.r.wrap.b32 	%r4390, %r4387, %r4388, 28;
	mov.b64 	%rd3739, {%r4390, %r4389};
	shf.l.wrap.b32 	%r4391, %r4387, %r4388, 30;
	shf.l.wrap.b32 	%r4392, %r4388, %r4387, 30;
	mov.b64 	%rd3740, {%r4392, %r4391};
	xor.b64  	%rd3741, %rd3739, %rd3740;
	shf.l.wrap.b32 	%r4393, %r4387, %r4388, 25;
	shf.l.wrap.b32 	%r4394, %r4388, %r4387, 25;
	mov.b64 	%rd3742, {%r4394, %r4393};
	xor.b64  	%rd3743, %rd3741, %rd3742;
	xor.b64  	%rd3744, %rd3700, %rd3675;
	and.b64  	%rd3745, %rd3725, %rd3744;
	and.b64  	%rd3746, %rd3700, %rd3675;
	xor.b64  	%rd3747, %rd3745, %rd3746;
	add.s64 	%rd3748, %rd3743, %rd3747;
	add.s64 	%rd3749, %rd3738, %rd3650;
	add.s64 	%rd3750, %rd3748, %rd3738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4395,%dummy}, %rd3749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4396}, %rd3749;
	}
	shf.r.wrap.b32 	%r4397, %r4396, %r4395, 14;
	shf.r.wrap.b32 	%r4398, %r4395, %r4396, 14;
	mov.b64 	%rd3751, {%r4398, %r4397};
	shf.r.wrap.b32 	%r4399, %r4396, %r4395, 18;
	shf.r.wrap.b32 	%r4400, %r4395, %r4396, 18;
	mov.b64 	%rd3752, {%r4400, %r4399};
	xor.b64  	%rd3753, %rd3751, %rd3752;
	shf.l.wrap.b32 	%r4401, %r4395, %r4396, 23;
	shf.l.wrap.b32 	%r4402, %r4396, %r4395, 23;
	mov.b64 	%rd3754, {%r4402, %r4401};
	xor.b64  	%rd3755, %rd3753, %rd3754;
	and.b64  	%rd3756, %rd3749, %rd3724;
	not.b64 	%rd3757, %rd3749;
	and.b64  	%rd3758, %rd3699, %rd3757;
	or.b64  	%rd3759, %rd3756, %rd3758;
	add.s64 	%rd3760, %rd3759, %rd3674;
	add.s64 	%rd3761, %rd3760, %rd3755;
	add.s64 	%rd3762, %rd3761, %rd108;
	add.s64 	%rd3763, %rd3762, %rd1927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4403,%dummy}, %rd3750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4404}, %rd3750;
	}
	shf.r.wrap.b32 	%r4405, %r4404, %r4403, 28;
	shf.r.wrap.b32 	%r4406, %r4403, %r4404, 28;
	mov.b64 	%rd3764, {%r4406, %r4405};
	shf.l.wrap.b32 	%r4407, %r4403, %r4404, 30;
	shf.l.wrap.b32 	%r4408, %r4404, %r4403, 30;
	mov.b64 	%rd3765, {%r4408, %r4407};
	xor.b64  	%rd3766, %rd3764, %rd3765;
	shf.l.wrap.b32 	%r4409, %r4403, %r4404, 25;
	shf.l.wrap.b32 	%r4410, %r4404, %r4403, 25;
	mov.b64 	%rd3767, {%r4410, %r4409};
	xor.b64  	%rd3768, %rd3766, %rd3767;
	xor.b64  	%rd3769, %rd3725, %rd3700;
	and.b64  	%rd3770, %rd3750, %rd3769;
	and.b64  	%rd3771, %rd3725, %rd3700;
	xor.b64  	%rd3772, %rd3770, %rd3771;
	add.s64 	%rd3773, %rd3768, %rd3772;
	add.s64 	%rd3774, %rd3763, %rd3675;
	add.s64 	%rd3775, %rd3773, %rd3763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4411,%dummy}, %rd3774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4412}, %rd3774;
	}
	shf.r.wrap.b32 	%r4413, %r4412, %r4411, 14;
	shf.r.wrap.b32 	%r4414, %r4411, %r4412, 14;
	mov.b64 	%rd3776, {%r4414, %r4413};
	shf.r.wrap.b32 	%r4415, %r4412, %r4411, 18;
	shf.r.wrap.b32 	%r4416, %r4411, %r4412, 18;
	mov.b64 	%rd3777, {%r4416, %r4415};
	xor.b64  	%rd3778, %rd3776, %rd3777;
	shf.l.wrap.b32 	%r4417, %r4411, %r4412, 23;
	shf.l.wrap.b32 	%r4418, %r4412, %r4411, 23;
	mov.b64 	%rd3779, {%r4418, %r4417};
	xor.b64  	%rd3780, %rd3778, %rd3779;
	and.b64  	%rd3781, %rd3774, %rd3749;
	not.b64 	%rd3782, %rd3774;
	and.b64  	%rd3783, %rd3724, %rd3782;
	or.b64  	%rd3784, %rd3781, %rd3783;
	add.s64 	%rd3785, %rd3784, %rd3699;
	add.s64 	%rd3786, %rd3785, %rd3780;
	add.s64 	%rd3787, %rd3786, %rd109;
	add.s64 	%rd3788, %rd3787, %rd1940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4419,%dummy}, %rd3775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4420}, %rd3775;
	}
	shf.r.wrap.b32 	%r4421, %r4420, %r4419, 28;
	shf.r.wrap.b32 	%r4422, %r4419, %r4420, 28;
	mov.b64 	%rd3789, {%r4422, %r4421};
	shf.l.wrap.b32 	%r4423, %r4419, %r4420, 30;
	shf.l.wrap.b32 	%r4424, %r4420, %r4419, 30;
	mov.b64 	%rd3790, {%r4424, %r4423};
	xor.b64  	%rd3791, %rd3789, %rd3790;
	shf.l.wrap.b32 	%r4425, %r4419, %r4420, 25;
	shf.l.wrap.b32 	%r4426, %r4420, %r4419, 25;
	mov.b64 	%rd3792, {%r4426, %r4425};
	xor.b64  	%rd3793, %rd3791, %rd3792;
	xor.b64  	%rd3794, %rd3750, %rd3725;
	and.b64  	%rd3795, %rd3775, %rd3794;
	and.b64  	%rd3796, %rd3750, %rd3725;
	xor.b64  	%rd3797, %rd3795, %rd3796;
	add.s64 	%rd3798, %rd3793, %rd3797;
	add.s64 	%rd3799, %rd3788, %rd3700;
	add.s64 	%rd3800, %rd3798, %rd3788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4427,%dummy}, %rd3799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4428}, %rd3799;
	}
	shf.r.wrap.b32 	%r4429, %r4428, %r4427, 14;
	shf.r.wrap.b32 	%r4430, %r4427, %r4428, 14;
	mov.b64 	%rd3801, {%r4430, %r4429};
	shf.r.wrap.b32 	%r4431, %r4428, %r4427, 18;
	shf.r.wrap.b32 	%r4432, %r4427, %r4428, 18;
	mov.b64 	%rd3802, {%r4432, %r4431};
	xor.b64  	%rd3803, %rd3801, %rd3802;
	shf.l.wrap.b32 	%r4433, %r4427, %r4428, 23;
	shf.l.wrap.b32 	%r4434, %r4428, %r4427, 23;
	mov.b64 	%rd3804, {%r4434, %r4433};
	xor.b64  	%rd3805, %rd3803, %rd3804;
	and.b64  	%rd3806, %rd3799, %rd3774;
	not.b64 	%rd3807, %rd3799;
	and.b64  	%rd3808, %rd3749, %rd3807;
	or.b64  	%rd3809, %rd3806, %rd3808;
	add.s64 	%rd3810, %rd3809, %rd3724;
	add.s64 	%rd3811, %rd3810, %rd3805;
	add.s64 	%rd3812, %rd3811, %rd110;
	add.s64 	%rd3813, %rd3812, %rd1953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4435,%dummy}, %rd3800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4436}, %rd3800;
	}
	shf.r.wrap.b32 	%r4437, %r4436, %r4435, 28;
	shf.r.wrap.b32 	%r4438, %r4435, %r4436, 28;
	mov.b64 	%rd3814, {%r4438, %r4437};
	shf.l.wrap.b32 	%r4439, %r4435, %r4436, 30;
	shf.l.wrap.b32 	%r4440, %r4436, %r4435, 30;
	mov.b64 	%rd3815, {%r4440, %r4439};
	xor.b64  	%rd3816, %rd3814, %rd3815;
	shf.l.wrap.b32 	%r4441, %r4435, %r4436, 25;
	shf.l.wrap.b32 	%r4442, %r4436, %r4435, 25;
	mov.b64 	%rd3817, {%r4442, %r4441};
	xor.b64  	%rd3818, %rd3816, %rd3817;
	xor.b64  	%rd3819, %rd3775, %rd3750;
	and.b64  	%rd3820, %rd3800, %rd3819;
	and.b64  	%rd3821, %rd3775, %rd3750;
	xor.b64  	%rd3822, %rd3820, %rd3821;
	add.s64 	%rd3823, %rd3818, %rd3822;
	add.s64 	%rd3824, %rd3813, %rd3725;
	add.s64 	%rd3825, %rd3823, %rd3813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4443,%dummy}, %rd3824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4444}, %rd3824;
	}
	shf.r.wrap.b32 	%r4445, %r4444, %r4443, 14;
	shf.r.wrap.b32 	%r4446, %r4443, %r4444, 14;
	mov.b64 	%rd3826, {%r4446, %r4445};
	shf.r.wrap.b32 	%r4447, %r4444, %r4443, 18;
	shf.r.wrap.b32 	%r4448, %r4443, %r4444, 18;
	mov.b64 	%rd3827, {%r4448, %r4447};
	xor.b64  	%rd3828, %rd3826, %rd3827;
	shf.l.wrap.b32 	%r4449, %r4443, %r4444, 23;
	shf.l.wrap.b32 	%r4450, %r4444, %r4443, 23;
	mov.b64 	%rd3829, {%r4450, %r4449};
	xor.b64  	%rd3830, %rd3828, %rd3829;
	and.b64  	%rd3831, %rd3824, %rd3799;
	not.b64 	%rd3832, %rd3824;
	and.b64  	%rd3833, %rd3774, %rd3832;
	or.b64  	%rd3834, %rd3831, %rd3833;
	add.s64 	%rd3835, %rd3834, %rd3749;
	add.s64 	%rd3836, %rd3835, %rd3830;
	add.s64 	%rd3837, %rd3836, %rd15510;
	add.s64 	%rd3838, %rd3837, %rd1966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4451,%dummy}, %rd3825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4452}, %rd3825;
	}
	shf.r.wrap.b32 	%r4453, %r4452, %r4451, 28;
	shf.r.wrap.b32 	%r4454, %r4451, %r4452, 28;
	mov.b64 	%rd3839, {%r4454, %r4453};
	shf.l.wrap.b32 	%r4455, %r4451, %r4452, 30;
	shf.l.wrap.b32 	%r4456, %r4452, %r4451, 30;
	mov.b64 	%rd3840, {%r4456, %r4455};
	xor.b64  	%rd3841, %rd3839, %rd3840;
	shf.l.wrap.b32 	%r4457, %r4451, %r4452, 25;
	shf.l.wrap.b32 	%r4458, %r4452, %r4451, 25;
	mov.b64 	%rd3842, {%r4458, %r4457};
	xor.b64  	%rd3843, %rd3841, %rd3842;
	xor.b64  	%rd3844, %rd3800, %rd3775;
	and.b64  	%rd3845, %rd3825, %rd3844;
	and.b64  	%rd3846, %rd3800, %rd3775;
	xor.b64  	%rd3847, %rd3845, %rd3846;
	add.s64 	%rd3848, %rd3843, %rd3847;
	add.s64 	%rd3849, %rd3838, %rd3750;
	add.s64 	%rd3850, %rd3848, %rd3838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4459,%dummy}, %rd3849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4460}, %rd3849;
	}
	shf.r.wrap.b32 	%r4461, %r4460, %r4459, 14;
	shf.r.wrap.b32 	%r4462, %r4459, %r4460, 14;
	mov.b64 	%rd3851, {%r4462, %r4461};
	shf.r.wrap.b32 	%r4463, %r4460, %r4459, 18;
	shf.r.wrap.b32 	%r4464, %r4459, %r4460, 18;
	mov.b64 	%rd3852, {%r4464, %r4463};
	xor.b64  	%rd3853, %rd3851, %rd3852;
	shf.l.wrap.b32 	%r4465, %r4459, %r4460, 23;
	shf.l.wrap.b32 	%r4466, %r4460, %r4459, 23;
	mov.b64 	%rd3854, {%r4466, %r4465};
	xor.b64  	%rd3855, %rd3853, %rd3854;
	and.b64  	%rd3856, %rd3849, %rd3824;
	not.b64 	%rd3857, %rd3849;
	and.b64  	%rd3858, %rd3799, %rd3857;
	or.b64  	%rd3859, %rd3856, %rd3858;
	add.s64 	%rd3860, %rd3859, %rd3774;
	add.s64 	%rd3861, %rd3860, %rd3855;
	add.s64 	%rd3862, %rd3861, %rd15509;
	add.s64 	%rd3863, %rd3862, %rd1979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4467,%dummy}, %rd3850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4468}, %rd3850;
	}
	shf.r.wrap.b32 	%r4469, %r4468, %r4467, 28;
	shf.r.wrap.b32 	%r4470, %r4467, %r4468, 28;
	mov.b64 	%rd3864, {%r4470, %r4469};
	shf.l.wrap.b32 	%r4471, %r4467, %r4468, 30;
	shf.l.wrap.b32 	%r4472, %r4468, %r4467, 30;
	mov.b64 	%rd3865, {%r4472, %r4471};
	xor.b64  	%rd3866, %rd3864, %rd3865;
	shf.l.wrap.b32 	%r4473, %r4467, %r4468, 25;
	shf.l.wrap.b32 	%r4474, %r4468, %r4467, 25;
	mov.b64 	%rd3867, {%r4474, %r4473};
	xor.b64  	%rd3868, %rd3866, %rd3867;
	xor.b64  	%rd3869, %rd3825, %rd3800;
	and.b64  	%rd3870, %rd3850, %rd3869;
	and.b64  	%rd3871, %rd3825, %rd3800;
	xor.b64  	%rd3872, %rd3870, %rd3871;
	add.s64 	%rd3873, %rd3868, %rd3872;
	add.s64 	%rd3874, %rd3863, %rd3775;
	add.s64 	%rd3875, %rd3873, %rd3863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4475,%dummy}, %rd3874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4476}, %rd3874;
	}
	shf.r.wrap.b32 	%r4477, %r4476, %r4475, 14;
	shf.r.wrap.b32 	%r4478, %r4475, %r4476, 14;
	mov.b64 	%rd3876, {%r4478, %r4477};
	shf.r.wrap.b32 	%r4479, %r4476, %r4475, 18;
	shf.r.wrap.b32 	%r4480, %r4475, %r4476, 18;
	mov.b64 	%rd3877, {%r4480, %r4479};
	xor.b64  	%rd3878, %rd3876, %rd3877;
	shf.l.wrap.b32 	%r4481, %r4475, %r4476, 23;
	shf.l.wrap.b32 	%r4482, %r4476, %r4475, 23;
	mov.b64 	%rd3879, {%r4482, %r4481};
	xor.b64  	%rd3880, %rd3878, %rd3879;
	and.b64  	%rd3881, %rd3874, %rd3849;
	not.b64 	%rd3882, %rd3874;
	and.b64  	%rd3883, %rd3824, %rd3882;
	or.b64  	%rd3884, %rd3881, %rd3883;
	add.s64 	%rd3885, %rd3884, %rd3799;
	add.s64 	%rd3886, %rd3885, %rd3880;
	add.s64 	%rd3887, %rd3886, %rd15508;
	add.s64 	%rd3888, %rd3887, %rd1992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4483,%dummy}, %rd3875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4484}, %rd3875;
	}
	shf.r.wrap.b32 	%r4485, %r4484, %r4483, 28;
	shf.r.wrap.b32 	%r4486, %r4483, %r4484, 28;
	mov.b64 	%rd3889, {%r4486, %r4485};
	shf.l.wrap.b32 	%r4487, %r4483, %r4484, 30;
	shf.l.wrap.b32 	%r4488, %r4484, %r4483, 30;
	mov.b64 	%rd3890, {%r4488, %r4487};
	xor.b64  	%rd3891, %rd3889, %rd3890;
	shf.l.wrap.b32 	%r4489, %r4483, %r4484, 25;
	shf.l.wrap.b32 	%r4490, %r4484, %r4483, 25;
	mov.b64 	%rd3892, {%r4490, %r4489};
	xor.b64  	%rd3893, %rd3891, %rd3892;
	xor.b64  	%rd3894, %rd3850, %rd3825;
	and.b64  	%rd3895, %rd3875, %rd3894;
	and.b64  	%rd3896, %rd3850, %rd3825;
	xor.b64  	%rd3897, %rd3895, %rd3896;
	add.s64 	%rd3898, %rd3893, %rd3897;
	add.s64 	%rd3899, %rd3888, %rd3800;
	add.s64 	%rd3900, %rd3898, %rd3888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4491,%dummy}, %rd3899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4492}, %rd3899;
	}
	shf.r.wrap.b32 	%r4493, %r4492, %r4491, 14;
	shf.r.wrap.b32 	%r4494, %r4491, %r4492, 14;
	mov.b64 	%rd3901, {%r4494, %r4493};
	shf.r.wrap.b32 	%r4495, %r4492, %r4491, 18;
	shf.r.wrap.b32 	%r4496, %r4491, %r4492, 18;
	mov.b64 	%rd3902, {%r4496, %r4495};
	xor.b64  	%rd3903, %rd3901, %rd3902;
	shf.l.wrap.b32 	%r4497, %r4491, %r4492, 23;
	shf.l.wrap.b32 	%r4498, %r4492, %r4491, 23;
	mov.b64 	%rd3904, {%r4498, %r4497};
	xor.b64  	%rd3905, %rd3903, %rd3904;
	and.b64  	%rd3906, %rd3899, %rd3874;
	not.b64 	%rd3907, %rd3899;
	and.b64  	%rd3908, %rd3849, %rd3907;
	or.b64  	%rd3909, %rd3906, %rd3908;
	add.s64 	%rd3910, %rd3909, %rd3824;
	add.s64 	%rd3911, %rd3910, %rd3905;
	add.s64 	%rd3912, %rd3911, %rd114;
	add.s64 	%rd3913, %rd3912, %rd2005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4499,%dummy}, %rd3900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4500}, %rd3900;
	}
	shf.r.wrap.b32 	%r4501, %r4500, %r4499, 28;
	shf.r.wrap.b32 	%r4502, %r4499, %r4500, 28;
	mov.b64 	%rd3914, {%r4502, %r4501};
	shf.l.wrap.b32 	%r4503, %r4499, %r4500, 30;
	shf.l.wrap.b32 	%r4504, %r4500, %r4499, 30;
	mov.b64 	%rd3915, {%r4504, %r4503};
	xor.b64  	%rd3916, %rd3914, %rd3915;
	shf.l.wrap.b32 	%r4505, %r4499, %r4500, 25;
	shf.l.wrap.b32 	%r4506, %r4500, %r4499, 25;
	mov.b64 	%rd3917, {%r4506, %r4505};
	xor.b64  	%rd3918, %rd3916, %rd3917;
	xor.b64  	%rd3919, %rd3875, %rd3850;
	and.b64  	%rd3920, %rd3900, %rd3919;
	and.b64  	%rd3921, %rd3875, %rd3850;
	xor.b64  	%rd3922, %rd3920, %rd3921;
	add.s64 	%rd3923, %rd3918, %rd3922;
	add.s64 	%rd3924, %rd3913, %rd3825;
	add.s64 	%rd3925, %rd3923, %rd3913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4507,%dummy}, %rd3924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4508}, %rd3924;
	}
	shf.r.wrap.b32 	%r4509, %r4508, %r4507, 14;
	shf.r.wrap.b32 	%r4510, %r4507, %r4508, 14;
	mov.b64 	%rd3926, {%r4510, %r4509};
	shf.r.wrap.b32 	%r4511, %r4508, %r4507, 18;
	shf.r.wrap.b32 	%r4512, %r4507, %r4508, 18;
	mov.b64 	%rd3927, {%r4512, %r4511};
	xor.b64  	%rd3928, %rd3926, %rd3927;
	shf.l.wrap.b32 	%r4513, %r4507, %r4508, 23;
	shf.l.wrap.b32 	%r4514, %r4508, %r4507, 23;
	mov.b64 	%rd3929, {%r4514, %r4513};
	xor.b64  	%rd3930, %rd3928, %rd3929;
	and.b64  	%rd3931, %rd3924, %rd3899;
	not.b64 	%rd3932, %rd3924;
	and.b64  	%rd3933, %rd3874, %rd3932;
	or.b64  	%rd3934, %rd3931, %rd3933;
	add.s64 	%rd3935, %rd3934, %rd3849;
	add.s64 	%rd3936, %rd3935, %rd3930;
	add.s64 	%rd3937, %rd3936, %rd115;
	add.s64 	%rd3938, %rd3937, %rd2018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4515,%dummy}, %rd3925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4516}, %rd3925;
	}
	shf.r.wrap.b32 	%r4517, %r4516, %r4515, 28;
	shf.r.wrap.b32 	%r4518, %r4515, %r4516, 28;
	mov.b64 	%rd3939, {%r4518, %r4517};
	shf.l.wrap.b32 	%r4519, %r4515, %r4516, 30;
	shf.l.wrap.b32 	%r4520, %r4516, %r4515, 30;
	mov.b64 	%rd3940, {%r4520, %r4519};
	xor.b64  	%rd3941, %rd3939, %rd3940;
	shf.l.wrap.b32 	%r4521, %r4515, %r4516, 25;
	shf.l.wrap.b32 	%r4522, %r4516, %r4515, 25;
	mov.b64 	%rd3942, {%r4522, %r4521};
	xor.b64  	%rd3943, %rd3941, %rd3942;
	xor.b64  	%rd3944, %rd3900, %rd3875;
	and.b64  	%rd3945, %rd3925, %rd3944;
	and.b64  	%rd3946, %rd3900, %rd3875;
	xor.b64  	%rd3947, %rd3945, %rd3946;
	add.s64 	%rd3948, %rd3943, %rd3947;
	add.s64 	%rd3949, %rd3938, %rd3850;
	add.s64 	%rd3950, %rd3948, %rd3938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4523,%dummy}, %rd3949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4524}, %rd3949;
	}
	shf.r.wrap.b32 	%r4525, %r4524, %r4523, 14;
	shf.r.wrap.b32 	%r4526, %r4523, %r4524, 14;
	mov.b64 	%rd3951, {%r4526, %r4525};
	shf.r.wrap.b32 	%r4527, %r4524, %r4523, 18;
	shf.r.wrap.b32 	%r4528, %r4523, %r4524, 18;
	mov.b64 	%rd3952, {%r4528, %r4527};
	xor.b64  	%rd3953, %rd3951, %rd3952;
	shf.l.wrap.b32 	%r4529, %r4523, %r4524, 23;
	shf.l.wrap.b32 	%r4530, %r4524, %r4523, 23;
	mov.b64 	%rd3954, {%r4530, %r4529};
	xor.b64  	%rd3955, %rd3953, %rd3954;
	and.b64  	%rd3956, %rd3949, %rd3924;
	not.b64 	%rd3957, %rd3949;
	and.b64  	%rd3958, %rd3899, %rd3957;
	or.b64  	%rd3959, %rd3956, %rd3958;
	add.s64 	%rd3960, %rd3959, %rd3874;
	add.s64 	%rd3961, %rd3960, %rd3955;
	add.s64 	%rd3962, %rd3961, %rd116;
	add.s64 	%rd3963, %rd3962, %rd2031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4531,%dummy}, %rd3950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4532}, %rd3950;
	}
	shf.r.wrap.b32 	%r4533, %r4532, %r4531, 28;
	shf.r.wrap.b32 	%r4534, %r4531, %r4532, 28;
	mov.b64 	%rd3964, {%r4534, %r4533};
	shf.l.wrap.b32 	%r4535, %r4531, %r4532, 30;
	shf.l.wrap.b32 	%r4536, %r4532, %r4531, 30;
	mov.b64 	%rd3965, {%r4536, %r4535};
	xor.b64  	%rd3966, %rd3964, %rd3965;
	shf.l.wrap.b32 	%r4537, %r4531, %r4532, 25;
	shf.l.wrap.b32 	%r4538, %r4532, %r4531, 25;
	mov.b64 	%rd3967, {%r4538, %r4537};
	xor.b64  	%rd3968, %rd3966, %rd3967;
	xor.b64  	%rd3969, %rd3925, %rd3900;
	and.b64  	%rd3970, %rd3950, %rd3969;
	and.b64  	%rd3971, %rd3925, %rd3900;
	xor.b64  	%rd3972, %rd3970, %rd3971;
	add.s64 	%rd3973, %rd3968, %rd3972;
	add.s64 	%rd3974, %rd3963, %rd3875;
	add.s64 	%rd3975, %rd3973, %rd3963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4539,%dummy}, %rd3974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4540}, %rd3974;
	}
	shf.r.wrap.b32 	%r4541, %r4540, %r4539, 14;
	shf.r.wrap.b32 	%r4542, %r4539, %r4540, 14;
	mov.b64 	%rd3976, {%r4542, %r4541};
	shf.r.wrap.b32 	%r4543, %r4540, %r4539, 18;
	shf.r.wrap.b32 	%r4544, %r4539, %r4540, 18;
	mov.b64 	%rd3977, {%r4544, %r4543};
	xor.b64  	%rd3978, %rd3976, %rd3977;
	shf.l.wrap.b32 	%r4545, %r4539, %r4540, 23;
	shf.l.wrap.b32 	%r4546, %r4540, %r4539, 23;
	mov.b64 	%rd3979, {%r4546, %r4545};
	xor.b64  	%rd3980, %rd3978, %rd3979;
	and.b64  	%rd3981, %rd3974, %rd3949;
	not.b64 	%rd3982, %rd3974;
	and.b64  	%rd3983, %rd3924, %rd3982;
	or.b64  	%rd3984, %rd3981, %rd3983;
	add.s64 	%rd3985, %rd3984, %rd3899;
	add.s64 	%rd3986, %rd3985, %rd3980;
	add.s64 	%rd3987, %rd3986, %rd117;
	add.s64 	%rd3988, %rd3987, %rd2044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4547,%dummy}, %rd3975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4548}, %rd3975;
	}
	shf.r.wrap.b32 	%r4549, %r4548, %r4547, 28;
	shf.r.wrap.b32 	%r4550, %r4547, %r4548, 28;
	mov.b64 	%rd3989, {%r4550, %r4549};
	shf.l.wrap.b32 	%r4551, %r4547, %r4548, 30;
	shf.l.wrap.b32 	%r4552, %r4548, %r4547, 30;
	mov.b64 	%rd3990, {%r4552, %r4551};
	xor.b64  	%rd3991, %rd3989, %rd3990;
	shf.l.wrap.b32 	%r4553, %r4547, %r4548, 25;
	shf.l.wrap.b32 	%r4554, %r4548, %r4547, 25;
	mov.b64 	%rd3992, {%r4554, %r4553};
	xor.b64  	%rd3993, %rd3991, %rd3992;
	xor.b64  	%rd3994, %rd3950, %rd3925;
	and.b64  	%rd3995, %rd3975, %rd3994;
	and.b64  	%rd3996, %rd3950, %rd3925;
	xor.b64  	%rd3997, %rd3995, %rd3996;
	add.s64 	%rd3998, %rd3993, %rd3997;
	add.s64 	%rd3999, %rd3988, %rd3900;
	add.s64 	%rd4000, %rd3998, %rd3988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4555,%dummy}, %rd3999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4556}, %rd3999;
	}
	shf.r.wrap.b32 	%r4557, %r4556, %r4555, 14;
	shf.r.wrap.b32 	%r4558, %r4555, %r4556, 14;
	mov.b64 	%rd4001, {%r4558, %r4557};
	shf.r.wrap.b32 	%r4559, %r4556, %r4555, 18;
	shf.r.wrap.b32 	%r4560, %r4555, %r4556, 18;
	mov.b64 	%rd4002, {%r4560, %r4559};
	xor.b64  	%rd4003, %rd4001, %rd4002;
	shf.l.wrap.b32 	%r4561, %r4555, %r4556, 23;
	shf.l.wrap.b32 	%r4562, %r4556, %r4555, 23;
	mov.b64 	%rd4004, {%r4562, %r4561};
	xor.b64  	%rd4005, %rd4003, %rd4004;
	and.b64  	%rd4006, %rd3999, %rd3974;
	not.b64 	%rd4007, %rd3999;
	and.b64  	%rd4008, %rd3949, %rd4007;
	or.b64  	%rd4009, %rd4006, %rd4008;
	add.s64 	%rd4010, %rd4009, %rd3924;
	add.s64 	%rd4011, %rd4010, %rd4005;
	add.s64 	%rd4012, %rd4011, %rd118;
	add.s64 	%rd4013, %rd4012, %rd2057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4563,%dummy}, %rd4000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4564}, %rd4000;
	}
	shf.r.wrap.b32 	%r4565, %r4564, %r4563, 28;
	shf.r.wrap.b32 	%r4566, %r4563, %r4564, 28;
	mov.b64 	%rd4014, {%r4566, %r4565};
	shf.l.wrap.b32 	%r4567, %r4563, %r4564, 30;
	shf.l.wrap.b32 	%r4568, %r4564, %r4563, 30;
	mov.b64 	%rd4015, {%r4568, %r4567};
	xor.b64  	%rd4016, %rd4014, %rd4015;
	shf.l.wrap.b32 	%r4569, %r4563, %r4564, 25;
	shf.l.wrap.b32 	%r4570, %r4564, %r4563, 25;
	mov.b64 	%rd4017, {%r4570, %r4569};
	xor.b64  	%rd4018, %rd4016, %rd4017;
	xor.b64  	%rd4019, %rd3975, %rd3950;
	and.b64  	%rd4020, %rd4000, %rd4019;
	and.b64  	%rd4021, %rd3975, %rd3950;
	xor.b64  	%rd4022, %rd4020, %rd4021;
	add.s64 	%rd4023, %rd4018, %rd4022;
	add.s64 	%rd4024, %rd4013, %rd3925;
	add.s64 	%rd4025, %rd4023, %rd4013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4571,%dummy}, %rd4024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4572}, %rd4024;
	}
	shf.r.wrap.b32 	%r4573, %r4572, %r4571, 14;
	shf.r.wrap.b32 	%r4574, %r4571, %r4572, 14;
	mov.b64 	%rd4026, {%r4574, %r4573};
	shf.r.wrap.b32 	%r4575, %r4572, %r4571, 18;
	shf.r.wrap.b32 	%r4576, %r4571, %r4572, 18;
	mov.b64 	%rd4027, {%r4576, %r4575};
	xor.b64  	%rd4028, %rd4026, %rd4027;
	shf.l.wrap.b32 	%r4577, %r4571, %r4572, 23;
	shf.l.wrap.b32 	%r4578, %r4572, %r4571, 23;
	mov.b64 	%rd4029, {%r4578, %r4577};
	xor.b64  	%rd4030, %rd4028, %rd4029;
	and.b64  	%rd4031, %rd4024, %rd3999;
	not.b64 	%rd4032, %rd4024;
	and.b64  	%rd4033, %rd3974, %rd4032;
	or.b64  	%rd4034, %rd4031, %rd4033;
	add.s64 	%rd4035, %rd4034, %rd3949;
	add.s64 	%rd4036, %rd4035, %rd4030;
	add.s64 	%rd4037, %rd4036, %rd119;
	add.s64 	%rd4038, %rd4037, %rd2070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4579,%dummy}, %rd4025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4580}, %rd4025;
	}
	shf.r.wrap.b32 	%r4581, %r4580, %r4579, 28;
	shf.r.wrap.b32 	%r4582, %r4579, %r4580, 28;
	mov.b64 	%rd4039, {%r4582, %r4581};
	shf.l.wrap.b32 	%r4583, %r4579, %r4580, 30;
	shf.l.wrap.b32 	%r4584, %r4580, %r4579, 30;
	mov.b64 	%rd4040, {%r4584, %r4583};
	xor.b64  	%rd4041, %rd4039, %rd4040;
	shf.l.wrap.b32 	%r4585, %r4579, %r4580, 25;
	shf.l.wrap.b32 	%r4586, %r4580, %r4579, 25;
	mov.b64 	%rd4042, {%r4586, %r4585};
	xor.b64  	%rd4043, %rd4041, %rd4042;
	xor.b64  	%rd4044, %rd4000, %rd3975;
	and.b64  	%rd4045, %rd4025, %rd4044;
	and.b64  	%rd4046, %rd4000, %rd3975;
	xor.b64  	%rd4047, %rd4045, %rd4046;
	add.s64 	%rd4048, %rd4043, %rd4047;
	add.s64 	%rd4049, %rd4038, %rd3950;
	add.s64 	%rd4050, %rd4048, %rd4038;
	add.s64 	%rd4051, %rd4050, 7640891576956012808;
	add.s64 	%rd4052, %rd4025, -4942790177534073029;
	add.s64 	%rd4053, %rd4000, 4354685564936845355;
	add.s64 	%rd4054, %rd3975, -6534734903238641935;
	add.s64 	%rd4055, %rd4049, 5840696475078001361;
	add.s64 	%rd4056, %rd4024, -7276294671716946913;
	add.s64 	%rd4057, %rd3999, 2270897969802886507;
	add.s64 	%rd4058, %rd3974, 6620516959819538809;
	shr.u64 	%rd4059, %rd4051, 56;
	shr.u64 	%rd4060, %rd4051, 48;
	shr.u64 	%rd4061, %rd4051, 40;
	cvt.u32.u64 	%r4587, %rd4061;
	shr.u64 	%rd4062, %rd4051, 32;
	cvt.u32.u64 	%r4588, %rd4051;
	shr.u64 	%rd4063, %rd4051, 16;
	shr.u64 	%rd4064, %rd4052, 56;
	shr.u64 	%rd4065, %rd4052, 48;
	shr.u64 	%rd4066, %rd4052, 40;
	cvt.u32.u64 	%r4589, %rd4066;
	shr.u64 	%rd4067, %rd4052, 32;
	cvt.u32.u64 	%r4590, %rd4052;
	shr.u64 	%rd4068, %rd4052, 16;
	cvt.u16.u64 	%rs355, %rd4059;
	cvt.u16.u64 	%rs356, %rd4060;
	shl.b16 	%rs357, %rs356, 8;
	or.b16  	%rs358, %rs355, %rs357;
	cvt.u32.u64 	%r4591, %rd4062;
	and.b32  	%r4592, %r4587, 255;
	prmt.b32 	%r4593, %r4591, %r4592, 30212;
	cvt.u16.u32 	%rs359, %r4593;
	cvt.u16.u64 	%rs360, %rd4051;
	shl.b16 	%rs361, %rs360, 8;
	shr.u16 	%rs362, %rs360, 8;
	or.b16  	%rs363, %rs362, %rs361;
	shr.u32 	%r4594, %r4588, 24;
	cvt.u32.u64 	%r4595, %rd4063;
	prmt.b32 	%r4596, %r4595, %r4594, 30212;
	cvt.u16.u32 	%rs364, %r4596;
	cvt.u16.u64 	%rs365, %rd4064;
	cvt.u16.u64 	%rs366, %rd4065;
	shl.b16 	%rs367, %rs366, 8;
	or.b16  	%rs368, %rs365, %rs367;
	cvt.u32.u64 	%r4597, %rd4067;
	and.b32  	%r4598, %r4589, 255;
	prmt.b32 	%r4599, %r4597, %r4598, 30212;
	cvt.u16.u32 	%rs369, %r4599;
	cvt.u16.u64 	%rs370, %rd4052;
	shl.b16 	%rs371, %rs370, 8;
	shr.u16 	%rs372, %rs370, 8;
	or.b16  	%rs373, %rs372, %rs371;
	shr.u32 	%r4600, %r4590, 24;
	cvt.u32.u64 	%r4601, %rd4068;
	prmt.b32 	%r4602, %r4601, %r4600, 30212;
	cvt.u16.u32 	%rs374, %r4602;
	mov.b32 	%r4603, {%rs364, %rs363};
	mov.b32 	%r4604, {%rs358, %rs359};
	mov.b32 	%r4605, {%rs374, %rs373};
	mov.b32 	%r4606, {%rs368, %rs369};
	st.local.v4.u32 	[%rd2], {%r4604, %r4603, %r4606, %r4605};
	shr.u64 	%rd4069, %rd4053, 56;
	shr.u64 	%rd4070, %rd4053, 48;
	shr.u64 	%rd4071, %rd4053, 40;
	cvt.u32.u64 	%r4607, %rd4071;
	shr.u64 	%rd4072, %rd4053, 32;
	cvt.u32.u64 	%r4608, %rd4053;
	shr.u64 	%rd4073, %rd4053, 16;
	shr.u64 	%rd4074, %rd4054, 56;
	shr.u64 	%rd4075, %rd4054, 48;
	shr.u64 	%rd4076, %rd4054, 40;
	cvt.u32.u64 	%r4609, %rd4076;
	shr.u64 	%rd4077, %rd4054, 32;
	cvt.u32.u64 	%r4610, %rd4054;
	shr.u64 	%rd4078, %rd4054, 16;
	cvt.u16.u64 	%rs375, %rd4069;
	cvt.u16.u64 	%rs376, %rd4070;
	shl.b16 	%rs377, %rs376, 8;
	or.b16  	%rs378, %rs375, %rs377;
	cvt.u32.u64 	%r4611, %rd4072;
	and.b32  	%r4612, %r4607, 255;
	prmt.b32 	%r4613, %r4611, %r4612, 30212;
	cvt.u16.u32 	%rs379, %r4613;
	cvt.u16.u64 	%rs380, %rd4053;
	shl.b16 	%rs381, %rs380, 8;
	shr.u16 	%rs382, %rs380, 8;
	or.b16  	%rs383, %rs382, %rs381;
	shr.u32 	%r4614, %r4608, 24;
	cvt.u32.u64 	%r4615, %rd4073;
	prmt.b32 	%r4616, %r4615, %r4614, 30212;
	cvt.u16.u32 	%rs384, %r4616;
	cvt.u16.u64 	%rs385, %rd4074;
	cvt.u16.u64 	%rs386, %rd4075;
	shl.b16 	%rs387, %rs386, 8;
	or.b16  	%rs388, %rs385, %rs387;
	cvt.u32.u64 	%r4617, %rd4077;
	and.b32  	%r4618, %r4609, 255;
	prmt.b32 	%r4619, %r4617, %r4618, 30212;
	cvt.u16.u32 	%rs389, %r4619;
	cvt.u16.u64 	%rs390, %rd4054;
	shl.b16 	%rs391, %rs390, 8;
	shr.u16 	%rs392, %rs390, 8;
	or.b16  	%rs393, %rs392, %rs391;
	shr.u32 	%r4620, %r4610, 24;
	cvt.u32.u64 	%r4621, %rd4078;
	prmt.b32 	%r4622, %r4621, %r4620, 30212;
	cvt.u16.u32 	%rs394, %r4622;
	mov.b32 	%r4623, {%rs384, %rs383};
	mov.b32 	%r4624, {%rs378, %rs379};
	mov.b32 	%r4625, {%rs394, %rs393};
	mov.b32 	%r4626, {%rs388, %rs389};
	st.local.v4.u32 	[%rd2+16], {%r4624, %r4623, %r4626, %r4625};
	shr.u64 	%rd4079, %rd4055, 56;
	shr.u64 	%rd4080, %rd4055, 48;
	shr.u64 	%rd4081, %rd4055, 40;
	cvt.u32.u64 	%r4627, %rd4081;
	shr.u64 	%rd4082, %rd4055, 32;
	cvt.u32.u64 	%r4628, %rd4055;
	shr.u64 	%rd4083, %rd4055, 16;
	shr.u64 	%rd4084, %rd4056, 56;
	shr.u64 	%rd4085, %rd4056, 48;
	shr.u64 	%rd4086, %rd4056, 40;
	cvt.u32.u64 	%r4629, %rd4086;
	shr.u64 	%rd4087, %rd4056, 32;
	cvt.u32.u64 	%r4630, %rd4056;
	shr.u64 	%rd4088, %rd4056, 16;
	cvt.u16.u64 	%rs395, %rd4079;
	cvt.u16.u64 	%rs396, %rd4080;
	shl.b16 	%rs397, %rs396, 8;
	or.b16  	%rs398, %rs395, %rs397;
	cvt.u32.u64 	%r4631, %rd4082;
	and.b32  	%r4632, %r4627, 255;
	prmt.b32 	%r4633, %r4631, %r4632, 30212;
	cvt.u16.u32 	%rs399, %r4633;
	cvt.u16.u64 	%rs400, %rd4055;
	shl.b16 	%rs401, %rs400, 8;
	shr.u16 	%rs402, %rs400, 8;
	or.b16  	%rs403, %rs402, %rs401;
	shr.u32 	%r4634, %r4628, 24;
	cvt.u32.u64 	%r4635, %rd4083;
	prmt.b32 	%r4636, %r4635, %r4634, 30212;
	cvt.u16.u32 	%rs404, %r4636;
	cvt.u16.u64 	%rs405, %rd4084;
	cvt.u16.u64 	%rs406, %rd4085;
	shl.b16 	%rs407, %rs406, 8;
	or.b16  	%rs408, %rs405, %rs407;
	cvt.u32.u64 	%r4637, %rd4087;
	and.b32  	%r4638, %r4629, 255;
	prmt.b32 	%r4639, %r4637, %r4638, 30212;
	cvt.u16.u32 	%rs409, %r4639;
	cvt.u16.u64 	%rs410, %rd4056;
	shl.b16 	%rs411, %rs410, 8;
	shr.u16 	%rs412, %rs410, 8;
	or.b16  	%rs413, %rs412, %rs411;
	shr.u32 	%r4640, %r4630, 24;
	cvt.u32.u64 	%r4641, %rd4088;
	prmt.b32 	%r4642, %r4641, %r4640, 30212;
	cvt.u16.u32 	%rs414, %r4642;
	mov.b32 	%r4643, {%rs404, %rs403};
	mov.b32 	%r4644, {%rs398, %rs399};
	mov.b32 	%r4645, {%rs414, %rs413};
	mov.b32 	%r4646, {%rs408, %rs409};
	st.local.v4.u32 	[%rd2+32], {%r4644, %r4643, %r4646, %r4645};
	shr.u64 	%rd4089, %rd4057, 56;
	shr.u64 	%rd4090, %rd4057, 48;
	shr.u64 	%rd4091, %rd4057, 40;
	cvt.u32.u64 	%r4647, %rd4091;
	shr.u64 	%rd4092, %rd4057, 32;
	cvt.u32.u64 	%r4648, %rd4057;
	shr.u64 	%rd4093, %rd4057, 16;
	shr.u64 	%rd4094, %rd4058, 56;
	shr.u64 	%rd4095, %rd4058, 48;
	shr.u64 	%rd4096, %rd4058, 40;
	cvt.u32.u64 	%r4649, %rd4096;
	shr.u64 	%rd4097, %rd4058, 32;
	cvt.u32.u64 	%r4650, %rd4058;
	shr.u64 	%rd4098, %rd4058, 16;
	cvt.u16.u64 	%rs415, %rd4089;
	cvt.u16.u64 	%rs416, %rd4090;
	shl.b16 	%rs417, %rs416, 8;
	or.b16  	%rs418, %rs415, %rs417;
	cvt.u32.u64 	%r4651, %rd4092;
	and.b32  	%r4652, %r4647, 255;
	prmt.b32 	%r4653, %r4651, %r4652, 30212;
	cvt.u16.u32 	%rs419, %r4653;
	cvt.u16.u64 	%rs420, %rd4057;
	shl.b16 	%rs421, %rs420, 8;
	shr.u16 	%rs422, %rs420, 8;
	or.b16  	%rs423, %rs422, %rs421;
	shr.u32 	%r4654, %r4648, 24;
	cvt.u32.u64 	%r4655, %rd4093;
	prmt.b32 	%r4656, %r4655, %r4654, 30212;
	cvt.u16.u32 	%rs424, %r4656;
	cvt.u16.u64 	%rs425, %rd4094;
	cvt.u16.u64 	%rs426, %rd4095;
	shl.b16 	%rs427, %rs426, 8;
	or.b16  	%rs428, %rs425, %rs427;
	cvt.u32.u64 	%r4657, %rd4097;
	and.b32  	%r4658, %r4649, 255;
	prmt.b32 	%r4659, %r4657, %r4658, 30212;
	cvt.u16.u32 	%rs429, %r4659;
	cvt.u16.u64 	%rs430, %rd4058;
	shl.b16 	%rs431, %rs430, 8;
	shr.u16 	%rs432, %rs430, 8;
	or.b16  	%rs433, %rs432, %rs431;
	shr.u32 	%r4660, %r4650, 24;
	cvt.u32.u64 	%r4661, %rd4098;
	prmt.b32 	%r4662, %r4661, %r4660, 30212;
	cvt.u16.u32 	%rs434, %r4662;
	mov.b32 	%r4663, {%rs424, %rs423};
	mov.b32 	%r4664, {%rs418, %rs419};
	mov.b32 	%r4665, {%rs434, %rs433};
	mov.b32 	%r4666, {%rs428, %rs429};
	st.local.v4.u32 	[%rd2+48], {%r4664, %r4663, %r4666, %r4665};
	mov.u32 	%r11219, 64;
	mov.u64 	%rd15507, %rd2;

$L__BB4_77:
	setp.lt.s32 	%p57, %r11219, 1;
	@%p57 bra 	$L__BB4_85;

	add.s32 	%r4668, %r11219, -1;
	and.b32  	%r91, %r11219, 3;
	setp.lt.u32 	%p58, %r4668, 3;
	mov.u32 	%r11222, 0;
	@%p58 bra 	$L__BB4_81;

	sub.s32 	%r11221, %r11219, %r91;

$L__BB4_80:
	cvt.s64.s32 	%rd4099, %r11222;
	add.s64 	%rd4100, %rd15507, %rd4099;
	ld.local.u8 	%rs435, [%rd4100];
	xor.b16  	%rs436, %rs435, 54;
	add.s64 	%rd4101, %rd2, %rd4099;
	st.local.u8 	[%rd4101], %rs436;
	ld.local.u8 	%rs437, [%rd4100];
	add.s64 	%rd4102, %rd3, %rd4099;
	ld.local.u8 	%rs438, [%rd4100+1];
	xor.b16  	%rs439, %rs438, 54;
	st.local.u8 	[%rd4101+1], %rs439;
	ld.local.u8 	%rs440, [%rd4100+1];
	ld.local.u8 	%rs441, [%rd4100+2];
	xor.b16  	%rs442, %rs441, 54;
	st.local.u8 	[%rd4101+2], %rs442;
	ld.local.u8 	%rs443, [%rd4100+2];
	ld.local.u8 	%rs444, [%rd4100+3];
	xor.b16  	%rs445, %rs444, 54;
	st.local.u8 	[%rd4101+3], %rs445;
	ld.local.u8 	%rs446, [%rd4100+3];
	xor.b16  	%rs447, %rs437, 92;
	xor.b16  	%rs448, %rs440, 92;
	xor.b16  	%rs449, %rs443, 92;
	xor.b16  	%rs450, %rs446, 92;
	st.local.v4.u8 	[%rd4102], {%rs447, %rs448, %rs449, %rs450};
	add.s32 	%r11222, %r11222, 4;
	add.s32 	%r11221, %r11221, -4;
	setp.ne.s32 	%p59, %r11221, 0;
	@%p59 bra 	$L__BB4_80;

$L__BB4_81:
	setp.eq.s32 	%p60, %r91, 0;
	@%p60 bra 	$L__BB4_85;

	cvt.s64.s32 	%rd4103, %r11222;
	add.s64 	%rd128, %rd15507, %rd4103;
	ld.local.u8 	%rs451, [%rd128];
	xor.b16  	%rs452, %rs451, 54;
	add.s64 	%rd129, %rd2, %rd4103;
	st.local.u8 	[%rd129], %rs452;
	ld.local.u8 	%rs453, [%rd128];
	xor.b16  	%rs454, %rs453, 92;
	add.s64 	%rd130, %rd3, %rd4103;
	st.local.u8 	[%rd130], %rs454;
	setp.eq.s32 	%p61, %r91, 1;
	@%p61 bra 	$L__BB4_85;

	ld.local.u8 	%rs455, [%rd128+1];
	xor.b16  	%rs456, %rs455, 54;
	st.local.u8 	[%rd129+1], %rs456;
	ld.local.u8 	%rs457, [%rd128+1];
	xor.b16  	%rs458, %rs457, 92;
	st.local.u8 	[%rd130+1], %rs458;
	setp.eq.s32 	%p62, %r91, 2;
	@%p62 bra 	$L__BB4_85;

	ld.local.u8 	%rs459, [%rd128+2];
	xor.b16  	%rs460, %rs459, 54;
	st.local.u8 	[%rd129+2], %rs460;
	ld.local.u8 	%rs461, [%rd128+2];
	xor.b16  	%rs462, %rs461, 92;
	st.local.u8 	[%rd130+2], %rs462;

$L__BB4_85:
	setp.gt.s32 	%p63, %r11219, 127;
	@%p63 bra 	$L__BB4_93;

	neg.s32 	%r4670, %r11219;
	and.b32  	%r98, %r4670, 3;
	setp.eq.s32 	%p64, %r98, 0;
	mov.u32 	%r11223, %r11219;
	@%p64 bra 	$L__BB4_90;

	cvt.s64.s32 	%rd4104, %r11219;
	add.s64 	%rd131, %rd2, %rd4104;
	mov.u16 	%rs463, 54;
	st.local.u8 	[%rd131], %rs463;
	add.s64 	%rd132, %rd3, %rd4104;
	mov.u16 	%rs464, 92;
	st.local.u8 	[%rd132], %rs464;
	add.s32 	%r11223, %r11219, 1;
	setp.eq.s32 	%p65, %r98, 1;
	@%p65 bra 	$L__BB4_90;

	st.local.u8 	[%rd131+1], %rs463;
	st.local.u8 	[%rd132+1], %rs464;
	add.s32 	%r11223, %r11219, 2;
	setp.eq.s32 	%p66, %r98, 2;
	@%p66 bra 	$L__BB4_90;

	mov.u16 	%rs467, 54;
	st.local.u8 	[%rd131+2], %rs467;
	mov.u16 	%rs468, 92;
	st.local.u8 	[%rd132+2], %rs468;
	add.s32 	%r11223, %r11219, 3;

$L__BB4_90:
	mov.u32 	%r4671, 127;
	sub.s32 	%r4672, %r4671, %r11219;
	setp.lt.u32 	%p67, %r4672, 3;
	@%p67 bra 	$L__BB4_93;

$L__BB4_92:
	cvt.s64.s32 	%rd4105, %r11223;
	add.s64 	%rd4106, %rd2, %rd4105;
	mov.u16 	%rs469, 54;
	st.local.u8 	[%rd4106], %rs469;
	add.s64 	%rd4107, %rd3, %rd4105;
	mov.u16 	%rs470, 92;
	st.local.u8 	[%rd4107], %rs470;
	st.local.u8 	[%rd4106+1], %rs469;
	st.local.u8 	[%rd4107+1], %rs470;
	st.local.u8 	[%rd4106+2], %rs469;
	st.local.u8 	[%rd4107+2], %rs470;
	st.local.u8 	[%rd4106+3], %rs469;
	st.local.u8 	[%rd4107+3], %rs470;
	add.s32 	%r104, %r11223, 4;
	setp.lt.s32 	%p68, %r11223, 124;
	mov.u32 	%r11223, %r104;
	@%p68 bra 	$L__BB4_92;

$L__BB4_93:
	ld.local.v4.u32 	{%r4674, %r4675, %r4676, %r4677}, [%rd3];
	mov.b32 	{%rs471, %rs472}, %r4674;
	shr.u16 	%rs473, %rs471, 8;
	mov.u32 	%r11225, 1;
	shr.u16 	%rs474, %rs472, 8;
	mov.b32 	{%rs475, %rs476}, %r4675;
	shr.u16 	%rs477, %rs475, 8;
	shr.u16 	%rs478, %rs476, 8;
	mov.b32 	{%rs479, %rs480}, %r4676;
	shr.u16 	%rs481, %rs479, 8;
	shr.u16 	%rs482, %rs480, 8;
	mov.b32 	{%rs483, %rs484}, %r4677;
	shr.u16 	%rs485, %rs483, 8;
	shr.u16 	%rs486, %rs484, 8;
	ld.local.v4.u32 	{%r4682, %r4683, %r4684, %r4685}, [%rd3+16];
	mov.b32 	{%rs487, %rs488}, %r4682;
	shr.u16 	%rs489, %rs487, 8;
	shr.u16 	%rs490, %rs488, 8;
	mov.b32 	{%rs491, %rs492}, %r4683;
	shr.u16 	%rs493, %rs491, 8;
	shr.u16 	%rs494, %rs492, 8;
	mov.b32 	{%rs495, %rs496}, %r4684;
	shr.u16 	%rs497, %rs495, 8;
	shr.u16 	%rs498, %rs496, 8;
	mov.b32 	{%rs499, %rs500}, %r4685;
	shr.u16 	%rs501, %rs499, 8;
	shr.u16 	%rs502, %rs500, 8;
	ld.local.v4.u32 	{%r4690, %r4691, %r4692, %r4693}, [%rd3+32];
	mov.b32 	{%rs503, %rs504}, %r4690;
	shr.u16 	%rs505, %rs503, 8;
	shr.u16 	%rs506, %rs504, 8;
	mov.b32 	{%rs507, %rs508}, %r4691;
	shr.u16 	%rs509, %rs507, 8;
	shr.u16 	%rs510, %rs508, 8;
	mov.b32 	{%rs511, %rs512}, %r4692;
	shr.u16 	%rs513, %rs511, 8;
	shr.u16 	%rs514, %rs512, 8;
	mov.b32 	{%rs515, %rs516}, %r4693;
	shr.u16 	%rs517, %rs515, 8;
	shr.u16 	%rs518, %rs516, 8;
	ld.local.v4.u32 	{%r4698, %r4699, %r4700, %r4701}, [%rd3+48];
	mov.b32 	{%rs519, %rs520}, %r4698;
	shr.u16 	%rs521, %rs519, 8;
	shr.u16 	%rs522, %rs520, 8;
	mov.b32 	{%rs523, %rs524}, %r4699;
	shr.u16 	%rs525, %rs523, 8;
	shr.u16 	%rs526, %rs524, 8;
	mov.b32 	{%rs527, %rs528}, %r4700;
	shr.u16 	%rs529, %rs527, 8;
	shr.u16 	%rs530, %rs528, 8;
	mov.b32 	{%rs531, %rs532}, %r4701;
	shr.u16 	%rs533, %rs531, 8;
	shr.u16 	%rs534, %rs532, 8;
	ld.local.v4.u32 	{%r4706, %r4707, %r4708, %r4709}, [%rd3+64];
	mov.b32 	{%rs535, %rs536}, %r4706;
	shr.u16 	%rs537, %rs535, 8;
	shr.u16 	%rs538, %rs536, 8;
	mov.b32 	{%rs539, %rs540}, %r4707;
	shr.u16 	%rs541, %rs539, 8;
	shr.u16 	%rs542, %rs540, 8;
	mov.b32 	{%rs543, %rs544}, %r4708;
	shr.u16 	%rs545, %rs543, 8;
	shr.u16 	%rs546, %rs544, 8;
	mov.b32 	{%rs547, %rs548}, %r4709;
	shr.u16 	%rs549, %rs547, 8;
	shr.u16 	%rs550, %rs548, 8;
	ld.local.v4.u32 	{%r4714, %r4715, %r4716, %r4717}, [%rd3+80];
	mov.b32 	{%rs551, %rs552}, %r4714;
	shr.u16 	%rs553, %rs551, 8;
	shr.u16 	%rs554, %rs552, 8;
	mov.b32 	{%rs555, %rs556}, %r4715;
	shr.u16 	%rs557, %rs555, 8;
	shr.u16 	%rs558, %rs556, 8;
	mov.b32 	{%rs559, %rs560}, %r4716;
	shr.u16 	%rs561, %rs559, 8;
	shr.u16 	%rs562, %rs560, 8;
	mov.b32 	{%rs563, %rs564}, %r4717;
	shr.u16 	%rs565, %rs563, 8;
	shr.u16 	%rs566, %rs564, 8;
	ld.local.v4.u32 	{%r4722, %r4723, %r4724, %r4725}, [%rd3+96];
	mov.b32 	{%rs567, %rs568}, %r4722;
	shr.u16 	%rs569, %rs567, 8;
	shr.u16 	%rs570, %rs568, 8;
	mov.b32 	{%rs571, %rs572}, %r4723;
	shr.u16 	%rs573, %rs571, 8;
	shr.u16 	%rs574, %rs572, 8;
	mov.b32 	{%rs575, %rs576}, %r4724;
	shr.u16 	%rs577, %rs575, 8;
	shr.u16 	%rs578, %rs576, 8;
	mov.b32 	{%rs579, %rs580}, %r4725;
	shr.u16 	%rs581, %rs579, 8;
	shr.u16 	%rs582, %rs580, 8;
	ld.local.v4.u32 	{%r4730, %r4731, %r4732, %r4733}, [%rd3+112];
	mov.b32 	{%rs583, %rs584}, %r4730;
	shr.u16 	%rs585, %rs583, 8;
	shr.u16 	%rs586, %rs584, 8;
	mov.b32 	{%rs587, %rs588}, %r4731;
	shr.u16 	%rs589, %rs587, 8;
	shr.u16 	%rs590, %rs588, 8;
	mov.b32 	{%rs591, %rs592}, %r4732;
	shr.u16 	%rs593, %rs591, 8;
	shr.u16 	%rs594, %rs592, 8;
	mov.b32 	{%rs595, %rs596}, %r4733;
	shr.u16 	%rs597, %rs595, 8;
	shr.u16 	%rs598, %rs596, 8;
	cvt.u64.u16 	%rd4108, %rs471;
	shl.b64 	%rd4109, %rd4108, 56;
	cvt.u64.u16 	%rd4110, %rs473;
	shl.b64 	%rd4111, %rd4110, 48;
	or.b64  	%rd4112, %rd4111, %rd4109;
	cvt.u64.u16 	%rd4113, %rs472;
	shl.b64 	%rd4114, %rd4113, 40;
	and.b64  	%rd4115, %rd4114, 280375465082880;
	or.b64  	%rd4116, %rd4112, %rd4115;
	cvt.u64.u16 	%rd4117, %rs474;
	shl.b64 	%rd4118, %rd4117, 32;
	or.b64  	%rd4119, %rd4116, %rd4118;
	cvt.u32.u16 	%r4738, %rs475;
	and.b32  	%r4739, %r4738, 255;
	mul.wide.u32 	%rd4120, %r4739, 16777216;
	or.b64  	%rd4121, %rd4119, %rd4120;
	cvt.u32.u16 	%r4740, %rs477;
	mul.wide.u32 	%rd4122, %r4740, 65536;
	or.b64  	%rd4123, %rd4121, %rd4122;
	cvt.u32.u16 	%r4741, %rs476;
	and.b32  	%r4742, %r4741, 255;
	mul.wide.u32 	%rd4124, %r4742, 256;
	or.b64  	%rd4125, %rd4123, %rd4124;
	cvt.u64.u16 	%rd4126, %rs478;
	or.b64  	%rd4127, %rd4125, %rd4126;
	cvt.u64.u16 	%rd4128, %rs479;
	shl.b64 	%rd4129, %rd4128, 56;
	cvt.u64.u16 	%rd4130, %rs481;
	shl.b64 	%rd4131, %rd4130, 48;
	or.b64  	%rd4132, %rd4131, %rd4129;
	cvt.u64.u16 	%rd4133, %rs480;
	shl.b64 	%rd4134, %rd4133, 40;
	and.b64  	%rd4135, %rd4134, 280375465082880;
	or.b64  	%rd4136, %rd4132, %rd4135;
	cvt.u64.u16 	%rd4137, %rs482;
	shl.b64 	%rd4138, %rd4137, 32;
	or.b64  	%rd4139, %rd4136, %rd4138;
	cvt.u32.u16 	%r4743, %rs483;
	and.b32  	%r4744, %r4743, 255;
	mul.wide.u32 	%rd4140, %r4744, 16777216;
	or.b64  	%rd4141, %rd4139, %rd4140;
	cvt.u32.u16 	%r4745, %rs485;
	mul.wide.u32 	%rd4142, %r4745, 65536;
	or.b64  	%rd4143, %rd4141, %rd4142;
	cvt.u32.u16 	%r4746, %rs484;
	and.b32  	%r4747, %r4746, 255;
	mul.wide.u32 	%rd4144, %r4747, 256;
	or.b64  	%rd4145, %rd4143, %rd4144;
	cvt.u64.u16 	%rd4146, %rs486;
	or.b64  	%rd4147, %rd4145, %rd4146;
	cvt.u64.u16 	%rd4148, %rs487;
	shl.b64 	%rd4149, %rd4148, 56;
	cvt.u64.u16 	%rd4150, %rs489;
	shl.b64 	%rd4151, %rd4150, 48;
	or.b64  	%rd4152, %rd4151, %rd4149;
	cvt.u64.u16 	%rd4153, %rs488;
	shl.b64 	%rd4154, %rd4153, 40;
	and.b64  	%rd4155, %rd4154, 280375465082880;
	or.b64  	%rd4156, %rd4152, %rd4155;
	cvt.u64.u16 	%rd4157, %rs490;
	shl.b64 	%rd4158, %rd4157, 32;
	or.b64  	%rd4159, %rd4156, %rd4158;
	cvt.u32.u16 	%r4748, %rs491;
	and.b32  	%r4749, %r4748, 255;
	mul.wide.u32 	%rd4160, %r4749, 16777216;
	or.b64  	%rd4161, %rd4159, %rd4160;
	cvt.u32.u16 	%r4750, %rs493;
	mul.wide.u32 	%rd4162, %r4750, 65536;
	or.b64  	%rd4163, %rd4161, %rd4162;
	cvt.u32.u16 	%r4751, %rs492;
	and.b32  	%r4752, %r4751, 255;
	mul.wide.u32 	%rd4164, %r4752, 256;
	or.b64  	%rd4165, %rd4163, %rd4164;
	cvt.u64.u16 	%rd4166, %rs494;
	or.b64  	%rd4167, %rd4165, %rd4166;
	cvt.u64.u16 	%rd4168, %rs495;
	shl.b64 	%rd4169, %rd4168, 56;
	cvt.u64.u16 	%rd4170, %rs497;
	shl.b64 	%rd4171, %rd4170, 48;
	or.b64  	%rd4172, %rd4171, %rd4169;
	cvt.u64.u16 	%rd4173, %rs496;
	shl.b64 	%rd4174, %rd4173, 40;
	and.b64  	%rd4175, %rd4174, 280375465082880;
	or.b64  	%rd4176, %rd4172, %rd4175;
	cvt.u64.u16 	%rd4177, %rs498;
	shl.b64 	%rd4178, %rd4177, 32;
	or.b64  	%rd4179, %rd4176, %rd4178;
	cvt.u32.u16 	%r4753, %rs499;
	and.b32  	%r4754, %r4753, 255;
	mul.wide.u32 	%rd4180, %r4754, 16777216;
	or.b64  	%rd4181, %rd4179, %rd4180;
	cvt.u32.u16 	%r4755, %rs501;
	mul.wide.u32 	%rd4182, %r4755, 65536;
	or.b64  	%rd4183, %rd4181, %rd4182;
	cvt.u32.u16 	%r4756, %rs500;
	and.b32  	%r4757, %r4756, 255;
	mul.wide.u32 	%rd4184, %r4757, 256;
	or.b64  	%rd4185, %rd4183, %rd4184;
	cvt.u64.u16 	%rd4186, %rs502;
	or.b64  	%rd4187, %rd4185, %rd4186;
	cvt.u64.u16 	%rd4188, %rs503;
	shl.b64 	%rd4189, %rd4188, 56;
	cvt.u64.u16 	%rd4190, %rs505;
	shl.b64 	%rd4191, %rd4190, 48;
	or.b64  	%rd4192, %rd4191, %rd4189;
	cvt.u64.u16 	%rd4193, %rs504;
	shl.b64 	%rd4194, %rd4193, 40;
	and.b64  	%rd4195, %rd4194, 280375465082880;
	or.b64  	%rd4196, %rd4192, %rd4195;
	cvt.u64.u16 	%rd4197, %rs506;
	shl.b64 	%rd4198, %rd4197, 32;
	or.b64  	%rd4199, %rd4196, %rd4198;
	cvt.u32.u16 	%r4758, %rs507;
	and.b32  	%r4759, %r4758, 255;
	mul.wide.u32 	%rd4200, %r4759, 16777216;
	or.b64  	%rd4201, %rd4199, %rd4200;
	cvt.u32.u16 	%r4760, %rs509;
	mul.wide.u32 	%rd4202, %r4760, 65536;
	or.b64  	%rd4203, %rd4201, %rd4202;
	cvt.u32.u16 	%r4761, %rs508;
	and.b32  	%r4762, %r4761, 255;
	mul.wide.u32 	%rd4204, %r4762, 256;
	or.b64  	%rd4205, %rd4203, %rd4204;
	cvt.u64.u16 	%rd4206, %rs510;
	or.b64  	%rd4207, %rd4205, %rd4206;
	cvt.u64.u16 	%rd4208, %rs511;
	shl.b64 	%rd4209, %rd4208, 56;
	cvt.u64.u16 	%rd4210, %rs513;
	shl.b64 	%rd4211, %rd4210, 48;
	or.b64  	%rd4212, %rd4211, %rd4209;
	cvt.u64.u16 	%rd4213, %rs512;
	shl.b64 	%rd4214, %rd4213, 40;
	and.b64  	%rd4215, %rd4214, 280375465082880;
	or.b64  	%rd4216, %rd4212, %rd4215;
	cvt.u64.u16 	%rd4217, %rs514;
	shl.b64 	%rd4218, %rd4217, 32;
	or.b64  	%rd4219, %rd4216, %rd4218;
	cvt.u32.u16 	%r4763, %rs515;
	and.b32  	%r4764, %r4763, 255;
	mul.wide.u32 	%rd4220, %r4764, 16777216;
	or.b64  	%rd4221, %rd4219, %rd4220;
	cvt.u32.u16 	%r4765, %rs517;
	mul.wide.u32 	%rd4222, %r4765, 65536;
	or.b64  	%rd4223, %rd4221, %rd4222;
	cvt.u32.u16 	%r4766, %rs516;
	and.b32  	%r4767, %r4766, 255;
	mul.wide.u32 	%rd4224, %r4767, 256;
	or.b64  	%rd4225, %rd4223, %rd4224;
	cvt.u64.u16 	%rd4226, %rs518;
	or.b64  	%rd4227, %rd4225, %rd4226;
	cvt.u64.u16 	%rd4228, %rs519;
	shl.b64 	%rd4229, %rd4228, 56;
	cvt.u64.u16 	%rd4230, %rs521;
	shl.b64 	%rd4231, %rd4230, 48;
	or.b64  	%rd4232, %rd4231, %rd4229;
	cvt.u64.u16 	%rd4233, %rs520;
	shl.b64 	%rd4234, %rd4233, 40;
	and.b64  	%rd4235, %rd4234, 280375465082880;
	or.b64  	%rd4236, %rd4232, %rd4235;
	cvt.u64.u16 	%rd4237, %rs522;
	shl.b64 	%rd4238, %rd4237, 32;
	or.b64  	%rd4239, %rd4236, %rd4238;
	cvt.u32.u16 	%r4768, %rs523;
	and.b32  	%r4769, %r4768, 255;
	mul.wide.u32 	%rd4240, %r4769, 16777216;
	or.b64  	%rd4241, %rd4239, %rd4240;
	cvt.u32.u16 	%r4770, %rs525;
	mul.wide.u32 	%rd4242, %r4770, 65536;
	or.b64  	%rd4243, %rd4241, %rd4242;
	cvt.u32.u16 	%r4771, %rs524;
	and.b32  	%r4772, %r4771, 255;
	mul.wide.u32 	%rd4244, %r4772, 256;
	or.b64  	%rd4245, %rd4243, %rd4244;
	cvt.u64.u16 	%rd4246, %rs526;
	or.b64  	%rd4247, %rd4245, %rd4246;
	cvt.u64.u16 	%rd4248, %rs527;
	shl.b64 	%rd4249, %rd4248, 56;
	cvt.u64.u16 	%rd4250, %rs529;
	shl.b64 	%rd4251, %rd4250, 48;
	or.b64  	%rd4252, %rd4251, %rd4249;
	cvt.u64.u16 	%rd4253, %rs528;
	shl.b64 	%rd4254, %rd4253, 40;
	and.b64  	%rd4255, %rd4254, 280375465082880;
	or.b64  	%rd4256, %rd4252, %rd4255;
	cvt.u64.u16 	%rd4257, %rs530;
	shl.b64 	%rd4258, %rd4257, 32;
	or.b64  	%rd4259, %rd4256, %rd4258;
	cvt.u32.u16 	%r4773, %rs531;
	and.b32  	%r4774, %r4773, 255;
	mul.wide.u32 	%rd4260, %r4774, 16777216;
	or.b64  	%rd4261, %rd4259, %rd4260;
	cvt.u32.u16 	%r4775, %rs533;
	mul.wide.u32 	%rd4262, %r4775, 65536;
	or.b64  	%rd4263, %rd4261, %rd4262;
	cvt.u32.u16 	%r4776, %rs532;
	and.b32  	%r4777, %r4776, 255;
	mul.wide.u32 	%rd4264, %r4777, 256;
	or.b64  	%rd4265, %rd4263, %rd4264;
	cvt.u64.u16 	%rd4266, %rs534;
	or.b64  	%rd4267, %rd4265, %rd4266;
	cvt.u64.u16 	%rd4268, %rs535;
	shl.b64 	%rd4269, %rd4268, 56;
	cvt.u64.u16 	%rd4270, %rs537;
	shl.b64 	%rd4271, %rd4270, 48;
	or.b64  	%rd4272, %rd4271, %rd4269;
	cvt.u64.u16 	%rd4273, %rs536;
	shl.b64 	%rd4274, %rd4273, 40;
	and.b64  	%rd4275, %rd4274, 280375465082880;
	or.b64  	%rd4276, %rd4272, %rd4275;
	cvt.u64.u16 	%rd4277, %rs538;
	shl.b64 	%rd4278, %rd4277, 32;
	or.b64  	%rd4279, %rd4276, %rd4278;
	cvt.u32.u16 	%r4778, %rs539;
	and.b32  	%r4779, %r4778, 255;
	mul.wide.u32 	%rd4280, %r4779, 16777216;
	or.b64  	%rd4281, %rd4279, %rd4280;
	cvt.u32.u16 	%r4780, %rs541;
	mul.wide.u32 	%rd4282, %r4780, 65536;
	or.b64  	%rd4283, %rd4281, %rd4282;
	cvt.u32.u16 	%r4781, %rs540;
	and.b32  	%r4782, %r4781, 255;
	mul.wide.u32 	%rd4284, %r4782, 256;
	or.b64  	%rd4285, %rd4283, %rd4284;
	cvt.u64.u16 	%rd4286, %rs542;
	or.b64  	%rd4287, %rd4285, %rd4286;
	cvt.u64.u16 	%rd4288, %rs543;
	shl.b64 	%rd4289, %rd4288, 56;
	cvt.u64.u16 	%rd4290, %rs545;
	shl.b64 	%rd4291, %rd4290, 48;
	or.b64  	%rd4292, %rd4291, %rd4289;
	cvt.u64.u16 	%rd4293, %rs544;
	shl.b64 	%rd4294, %rd4293, 40;
	and.b64  	%rd4295, %rd4294, 280375465082880;
	or.b64  	%rd4296, %rd4292, %rd4295;
	cvt.u64.u16 	%rd4297, %rs546;
	shl.b64 	%rd4298, %rd4297, 32;
	or.b64  	%rd4299, %rd4296, %rd4298;
	cvt.u32.u16 	%r4783, %rs547;
	and.b32  	%r4784, %r4783, 255;
	mul.wide.u32 	%rd4300, %r4784, 16777216;
	or.b64  	%rd4301, %rd4299, %rd4300;
	cvt.u32.u16 	%r4785, %rs549;
	mul.wide.u32 	%rd4302, %r4785, 65536;
	or.b64  	%rd4303, %rd4301, %rd4302;
	cvt.u32.u16 	%r4786, %rs548;
	and.b32  	%r4787, %r4786, 255;
	mul.wide.u32 	%rd4304, %r4787, 256;
	or.b64  	%rd4305, %rd4303, %rd4304;
	cvt.u64.u16 	%rd4306, %rs550;
	or.b64  	%rd4307, %rd4305, %rd4306;
	cvt.u64.u16 	%rd4308, %rs551;
	shl.b64 	%rd4309, %rd4308, 56;
	cvt.u64.u16 	%rd4310, %rs553;
	shl.b64 	%rd4311, %rd4310, 48;
	or.b64  	%rd4312, %rd4311, %rd4309;
	cvt.u64.u16 	%rd4313, %rs552;
	shl.b64 	%rd4314, %rd4313, 40;
	and.b64  	%rd4315, %rd4314, 280375465082880;
	or.b64  	%rd4316, %rd4312, %rd4315;
	cvt.u64.u16 	%rd4317, %rs554;
	shl.b64 	%rd4318, %rd4317, 32;
	or.b64  	%rd4319, %rd4316, %rd4318;
	cvt.u32.u16 	%r4788, %rs555;
	and.b32  	%r4789, %r4788, 255;
	mul.wide.u32 	%rd4320, %r4789, 16777216;
	or.b64  	%rd4321, %rd4319, %rd4320;
	cvt.u32.u16 	%r4790, %rs557;
	mul.wide.u32 	%rd4322, %r4790, 65536;
	or.b64  	%rd4323, %rd4321, %rd4322;
	cvt.u32.u16 	%r4791, %rs556;
	and.b32  	%r4792, %r4791, 255;
	mul.wide.u32 	%rd4324, %r4792, 256;
	or.b64  	%rd4325, %rd4323, %rd4324;
	cvt.u64.u16 	%rd4326, %rs558;
	or.b64  	%rd4327, %rd4325, %rd4326;
	cvt.u64.u16 	%rd4328, %rs559;
	shl.b64 	%rd4329, %rd4328, 56;
	cvt.u64.u16 	%rd4330, %rs561;
	shl.b64 	%rd4331, %rd4330, 48;
	or.b64  	%rd4332, %rd4331, %rd4329;
	cvt.u64.u16 	%rd4333, %rs560;
	shl.b64 	%rd4334, %rd4333, 40;
	and.b64  	%rd4335, %rd4334, 280375465082880;
	or.b64  	%rd4336, %rd4332, %rd4335;
	cvt.u64.u16 	%rd4337, %rs562;
	shl.b64 	%rd4338, %rd4337, 32;
	or.b64  	%rd4339, %rd4336, %rd4338;
	cvt.u32.u16 	%r4793, %rs563;
	and.b32  	%r4794, %r4793, 255;
	mul.wide.u32 	%rd4340, %r4794, 16777216;
	or.b64  	%rd4341, %rd4339, %rd4340;
	cvt.u32.u16 	%r4795, %rs565;
	mul.wide.u32 	%rd4342, %r4795, 65536;
	or.b64  	%rd4343, %rd4341, %rd4342;
	cvt.u32.u16 	%r4796, %rs564;
	and.b32  	%r4797, %r4796, 255;
	mul.wide.u32 	%rd4344, %r4797, 256;
	or.b64  	%rd4345, %rd4343, %rd4344;
	cvt.u64.u16 	%rd4346, %rs566;
	or.b64  	%rd4347, %rd4345, %rd4346;
	cvt.u64.u16 	%rd4348, %rs567;
	shl.b64 	%rd4349, %rd4348, 56;
	cvt.u64.u16 	%rd4350, %rs569;
	shl.b64 	%rd4351, %rd4350, 48;
	or.b64  	%rd4352, %rd4351, %rd4349;
	cvt.u64.u16 	%rd4353, %rs568;
	shl.b64 	%rd4354, %rd4353, 40;
	and.b64  	%rd4355, %rd4354, 280375465082880;
	or.b64  	%rd4356, %rd4352, %rd4355;
	cvt.u64.u16 	%rd4357, %rs570;
	shl.b64 	%rd4358, %rd4357, 32;
	or.b64  	%rd4359, %rd4356, %rd4358;
	cvt.u32.u16 	%r4798, %rs571;
	and.b32  	%r4799, %r4798, 255;
	mul.wide.u32 	%rd4360, %r4799, 16777216;
	or.b64  	%rd4361, %rd4359, %rd4360;
	cvt.u32.u16 	%r4800, %rs573;
	mul.wide.u32 	%rd4362, %r4800, 65536;
	or.b64  	%rd4363, %rd4361, %rd4362;
	cvt.u32.u16 	%r4801, %rs572;
	and.b32  	%r4802, %r4801, 255;
	mul.wide.u32 	%rd4364, %r4802, 256;
	or.b64  	%rd4365, %rd4363, %rd4364;
	cvt.u64.u16 	%rd4366, %rs574;
	or.b64  	%rd4367, %rd4365, %rd4366;
	cvt.u64.u16 	%rd4368, %rs575;
	shl.b64 	%rd4369, %rd4368, 56;
	cvt.u64.u16 	%rd4370, %rs577;
	shl.b64 	%rd4371, %rd4370, 48;
	or.b64  	%rd4372, %rd4371, %rd4369;
	cvt.u64.u16 	%rd4373, %rs576;
	shl.b64 	%rd4374, %rd4373, 40;
	and.b64  	%rd4375, %rd4374, 280375465082880;
	or.b64  	%rd4376, %rd4372, %rd4375;
	cvt.u64.u16 	%rd4377, %rs578;
	shl.b64 	%rd4378, %rd4377, 32;
	or.b64  	%rd4379, %rd4376, %rd4378;
	cvt.u32.u16 	%r4803, %rs579;
	and.b32  	%r4804, %r4803, 255;
	mul.wide.u32 	%rd4380, %r4804, 16777216;
	or.b64  	%rd4381, %rd4379, %rd4380;
	cvt.u32.u16 	%r4805, %rs581;
	mul.wide.u32 	%rd4382, %r4805, 65536;
	or.b64  	%rd4383, %rd4381, %rd4382;
	cvt.u32.u16 	%r4806, %rs580;
	and.b32  	%r4807, %r4806, 255;
	mul.wide.u32 	%rd4384, %r4807, 256;
	or.b64  	%rd4385, %rd4383, %rd4384;
	cvt.u64.u16 	%rd4386, %rs582;
	or.b64  	%rd4387, %rd4385, %rd4386;
	cvt.u64.u16 	%rd4388, %rs583;
	shl.b64 	%rd4389, %rd4388, 56;
	cvt.u64.u16 	%rd4390, %rs585;
	shl.b64 	%rd4391, %rd4390, 48;
	or.b64  	%rd4392, %rd4391, %rd4389;
	cvt.u64.u16 	%rd4393, %rs584;
	shl.b64 	%rd4394, %rd4393, 40;
	and.b64  	%rd4395, %rd4394, 280375465082880;
	or.b64  	%rd4396, %rd4392, %rd4395;
	cvt.u64.u16 	%rd4397, %rs586;
	shl.b64 	%rd4398, %rd4397, 32;
	or.b64  	%rd4399, %rd4396, %rd4398;
	cvt.u32.u16 	%r4808, %rs587;
	and.b32  	%r4809, %r4808, 255;
	mul.wide.u32 	%rd4400, %r4809, 16777216;
	or.b64  	%rd4401, %rd4399, %rd4400;
	cvt.u32.u16 	%r4810, %rs589;
	mul.wide.u32 	%rd4402, %r4810, 65536;
	or.b64  	%rd4403, %rd4401, %rd4402;
	cvt.u32.u16 	%r4811, %rs588;
	and.b32  	%r4812, %r4811, 255;
	mul.wide.u32 	%rd4404, %r4812, 256;
	or.b64  	%rd4405, %rd4403, %rd4404;
	cvt.u64.u16 	%rd4406, %rs590;
	or.b64  	%rd4407, %rd4405, %rd4406;
	cvt.u64.u16 	%rd4408, %rs591;
	shl.b64 	%rd4409, %rd4408, 56;
	cvt.u64.u16 	%rd4410, %rs593;
	shl.b64 	%rd4411, %rd4410, 48;
	or.b64  	%rd4412, %rd4411, %rd4409;
	cvt.u64.u16 	%rd4413, %rs592;
	shl.b64 	%rd4414, %rd4413, 40;
	and.b64  	%rd4415, %rd4414, 280375465082880;
	or.b64  	%rd4416, %rd4412, %rd4415;
	cvt.u64.u16 	%rd4417, %rs594;
	shl.b64 	%rd4418, %rd4417, 32;
	or.b64  	%rd4419, %rd4416, %rd4418;
	cvt.u32.u16 	%r4813, %rs595;
	and.b32  	%r4814, %r4813, 255;
	mul.wide.u32 	%rd4420, %r4814, 16777216;
	or.b64  	%rd4421, %rd4419, %rd4420;
	cvt.u32.u16 	%r4815, %rs597;
	mul.wide.u32 	%rd4422, %r4815, 65536;
	or.b64  	%rd4423, %rd4421, %rd4422;
	cvt.u32.u16 	%r4816, %rs596;
	and.b32  	%r4817, %r4816, 255;
	mul.wide.u32 	%rd4424, %r4817, 256;
	or.b64  	%rd4425, %rd4423, %rd4424;
	cvt.u64.u16 	%rd4426, %rs598;
	or.b64  	%rd4427, %rd4425, %rd4426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4818,%dummy}, %rd4147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4819}, %rd4147;
	}
	shf.r.wrap.b32 	%r4820, %r4819, %r4818, 1;
	shf.r.wrap.b32 	%r4821, %r4818, %r4819, 1;
	mov.b64 	%rd4428, {%r4821, %r4820};
	shf.r.wrap.b32 	%r4822, %r4819, %r4818, 8;
	shf.r.wrap.b32 	%r4823, %r4818, %r4819, 8;
	mov.b64 	%rd4429, {%r4823, %r4822};
	xor.b64  	%rd4430, %rd4428, %rd4429;
	shr.u64 	%rd4431, %rd4147, 7;
	xor.b64  	%rd4432, %rd4430, %rd4431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4824,%dummy}, %rd4407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4825}, %rd4407;
	}
	shf.r.wrap.b32 	%r4826, %r4825, %r4824, 19;
	shf.r.wrap.b32 	%r4827, %r4824, %r4825, 19;
	mov.b64 	%rd4433, {%r4827, %r4826};
	shf.l.wrap.b32 	%r4828, %r4824, %r4825, 3;
	shf.l.wrap.b32 	%r4829, %r4825, %r4824, 3;
	mov.b64 	%rd4434, {%r4829, %r4828};
	xor.b64  	%rd4435, %rd4433, %rd4434;
	shr.u64 	%rd4436, %rd4407, 6;
	xor.b64  	%rd4437, %rd4435, %rd4436;
	add.s64 	%rd4438, %rd4432, %rd4127;
	add.s64 	%rd4439, %rd4438, %rd4307;
	add.s64 	%rd4440, %rd4439, %rd4437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4830,%dummy}, %rd4167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4831}, %rd4167;
	}
	shf.r.wrap.b32 	%r4832, %r4831, %r4830, 1;
	shf.r.wrap.b32 	%r4833, %r4830, %r4831, 1;
	mov.b64 	%rd4441, {%r4833, %r4832};
	shf.r.wrap.b32 	%r4834, %r4831, %r4830, 8;
	shf.r.wrap.b32 	%r4835, %r4830, %r4831, 8;
	mov.b64 	%rd4442, {%r4835, %r4834};
	xor.b64  	%rd4443, %rd4441, %rd4442;
	shr.u64 	%rd4444, %rd4167, 7;
	xor.b64  	%rd4445, %rd4443, %rd4444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4836,%dummy}, %rd4427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4837}, %rd4427;
	}
	shf.r.wrap.b32 	%r4838, %r4837, %r4836, 19;
	shf.r.wrap.b32 	%r4839, %r4836, %r4837, 19;
	mov.b64 	%rd4446, {%r4839, %r4838};
	shf.l.wrap.b32 	%r4840, %r4836, %r4837, 3;
	shf.l.wrap.b32 	%r4841, %r4837, %r4836, 3;
	mov.b64 	%rd4447, {%r4841, %r4840};
	xor.b64  	%rd4448, %rd4446, %rd4447;
	shr.u64 	%rd4449, %rd4427, 6;
	xor.b64  	%rd4450, %rd4448, %rd4449;
	add.s64 	%rd4451, %rd4445, %rd4147;
	add.s64 	%rd4452, %rd4451, %rd4327;
	add.s64 	%rd4453, %rd4452, %rd4450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4842,%dummy}, %rd4187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4843}, %rd4187;
	}
	shf.r.wrap.b32 	%r4844, %r4843, %r4842, 1;
	shf.r.wrap.b32 	%r4845, %r4842, %r4843, 1;
	mov.b64 	%rd4454, {%r4845, %r4844};
	shf.r.wrap.b32 	%r4846, %r4843, %r4842, 8;
	shf.r.wrap.b32 	%r4847, %r4842, %r4843, 8;
	mov.b64 	%rd4455, {%r4847, %r4846};
	xor.b64  	%rd4456, %rd4454, %rd4455;
	shr.u64 	%rd4457, %rd4187, 7;
	xor.b64  	%rd4458, %rd4456, %rd4457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4848,%dummy}, %rd4440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4849}, %rd4440;
	}
	shf.r.wrap.b32 	%r4850, %r4849, %r4848, 19;
	shf.r.wrap.b32 	%r4851, %r4848, %r4849, 19;
	mov.b64 	%rd4459, {%r4851, %r4850};
	shf.l.wrap.b32 	%r4852, %r4848, %r4849, 3;
	shf.l.wrap.b32 	%r4853, %r4849, %r4848, 3;
	mov.b64 	%rd4460, {%r4853, %r4852};
	xor.b64  	%rd4461, %rd4459, %rd4460;
	shr.u64 	%rd4462, %rd4440, 6;
	xor.b64  	%rd4463, %rd4461, %rd4462;
	add.s64 	%rd4464, %rd4458, %rd4167;
	add.s64 	%rd4465, %rd4464, %rd4347;
	add.s64 	%rd4466, %rd4465, %rd4463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4854,%dummy}, %rd4207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4855}, %rd4207;
	}
	shf.r.wrap.b32 	%r4856, %r4855, %r4854, 1;
	shf.r.wrap.b32 	%r4857, %r4854, %r4855, 1;
	mov.b64 	%rd4467, {%r4857, %r4856};
	shf.r.wrap.b32 	%r4858, %r4855, %r4854, 8;
	shf.r.wrap.b32 	%r4859, %r4854, %r4855, 8;
	mov.b64 	%rd4468, {%r4859, %r4858};
	xor.b64  	%rd4469, %rd4467, %rd4468;
	shr.u64 	%rd4470, %rd4207, 7;
	xor.b64  	%rd4471, %rd4469, %rd4470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4860,%dummy}, %rd4453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4861}, %rd4453;
	}
	shf.r.wrap.b32 	%r4862, %r4861, %r4860, 19;
	shf.r.wrap.b32 	%r4863, %r4860, %r4861, 19;
	mov.b64 	%rd4472, {%r4863, %r4862};
	shf.l.wrap.b32 	%r4864, %r4860, %r4861, 3;
	shf.l.wrap.b32 	%r4865, %r4861, %r4860, 3;
	mov.b64 	%rd4473, {%r4865, %r4864};
	xor.b64  	%rd4474, %rd4472, %rd4473;
	shr.u64 	%rd4475, %rd4453, 6;
	xor.b64  	%rd4476, %rd4474, %rd4475;
	add.s64 	%rd4477, %rd4471, %rd4187;
	add.s64 	%rd4478, %rd4477, %rd4367;
	add.s64 	%rd4479, %rd4478, %rd4476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4866,%dummy}, %rd4227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4867}, %rd4227;
	}
	shf.r.wrap.b32 	%r4868, %r4867, %r4866, 1;
	shf.r.wrap.b32 	%r4869, %r4866, %r4867, 1;
	mov.b64 	%rd4480, {%r4869, %r4868};
	shf.r.wrap.b32 	%r4870, %r4867, %r4866, 8;
	shf.r.wrap.b32 	%r4871, %r4866, %r4867, 8;
	mov.b64 	%rd4481, {%r4871, %r4870};
	xor.b64  	%rd4482, %rd4480, %rd4481;
	shr.u64 	%rd4483, %rd4227, 7;
	xor.b64  	%rd4484, %rd4482, %rd4483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4872,%dummy}, %rd4466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4873}, %rd4466;
	}
	shf.r.wrap.b32 	%r4874, %r4873, %r4872, 19;
	shf.r.wrap.b32 	%r4875, %r4872, %r4873, 19;
	mov.b64 	%rd4485, {%r4875, %r4874};
	shf.l.wrap.b32 	%r4876, %r4872, %r4873, 3;
	shf.l.wrap.b32 	%r4877, %r4873, %r4872, 3;
	mov.b64 	%rd4486, {%r4877, %r4876};
	xor.b64  	%rd4487, %rd4485, %rd4486;
	shr.u64 	%rd4488, %rd4466, 6;
	xor.b64  	%rd4489, %rd4487, %rd4488;
	add.s64 	%rd4490, %rd4484, %rd4207;
	add.s64 	%rd4491, %rd4490, %rd4387;
	add.s64 	%rd4492, %rd4491, %rd4489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4878,%dummy}, %rd4247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4879}, %rd4247;
	}
	shf.r.wrap.b32 	%r4880, %r4879, %r4878, 1;
	shf.r.wrap.b32 	%r4881, %r4878, %r4879, 1;
	mov.b64 	%rd4493, {%r4881, %r4880};
	shf.r.wrap.b32 	%r4882, %r4879, %r4878, 8;
	shf.r.wrap.b32 	%r4883, %r4878, %r4879, 8;
	mov.b64 	%rd4494, {%r4883, %r4882};
	xor.b64  	%rd4495, %rd4493, %rd4494;
	shr.u64 	%rd4496, %rd4247, 7;
	xor.b64  	%rd4497, %rd4495, %rd4496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4884,%dummy}, %rd4479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4885}, %rd4479;
	}
	shf.r.wrap.b32 	%r4886, %r4885, %r4884, 19;
	shf.r.wrap.b32 	%r4887, %r4884, %r4885, 19;
	mov.b64 	%rd4498, {%r4887, %r4886};
	shf.l.wrap.b32 	%r4888, %r4884, %r4885, 3;
	shf.l.wrap.b32 	%r4889, %r4885, %r4884, 3;
	mov.b64 	%rd4499, {%r4889, %r4888};
	xor.b64  	%rd4500, %rd4498, %rd4499;
	shr.u64 	%rd4501, %rd4479, 6;
	xor.b64  	%rd4502, %rd4500, %rd4501;
	add.s64 	%rd4503, %rd4497, %rd4227;
	add.s64 	%rd4504, %rd4503, %rd4407;
	add.s64 	%rd4505, %rd4504, %rd4502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4890,%dummy}, %rd4267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4891}, %rd4267;
	}
	shf.r.wrap.b32 	%r4892, %r4891, %r4890, 1;
	shf.r.wrap.b32 	%r4893, %r4890, %r4891, 1;
	mov.b64 	%rd4506, {%r4893, %r4892};
	shf.r.wrap.b32 	%r4894, %r4891, %r4890, 8;
	shf.r.wrap.b32 	%r4895, %r4890, %r4891, 8;
	mov.b64 	%rd4507, {%r4895, %r4894};
	xor.b64  	%rd4508, %rd4506, %rd4507;
	shr.u64 	%rd4509, %rd4267, 7;
	xor.b64  	%rd4510, %rd4508, %rd4509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4896,%dummy}, %rd4492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4897}, %rd4492;
	}
	shf.r.wrap.b32 	%r4898, %r4897, %r4896, 19;
	shf.r.wrap.b32 	%r4899, %r4896, %r4897, 19;
	mov.b64 	%rd4511, {%r4899, %r4898};
	shf.l.wrap.b32 	%r4900, %r4896, %r4897, 3;
	shf.l.wrap.b32 	%r4901, %r4897, %r4896, 3;
	mov.b64 	%rd4512, {%r4901, %r4900};
	xor.b64  	%rd4513, %rd4511, %rd4512;
	shr.u64 	%rd4514, %rd4492, 6;
	xor.b64  	%rd4515, %rd4513, %rd4514;
	add.s64 	%rd4516, %rd4510, %rd4247;
	add.s64 	%rd4517, %rd4516, %rd4427;
	add.s64 	%rd4518, %rd4517, %rd4515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4902,%dummy}, %rd4287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4903}, %rd4287;
	}
	shf.r.wrap.b32 	%r4904, %r4903, %r4902, 1;
	shf.r.wrap.b32 	%r4905, %r4902, %r4903, 1;
	mov.b64 	%rd4519, {%r4905, %r4904};
	shf.r.wrap.b32 	%r4906, %r4903, %r4902, 8;
	shf.r.wrap.b32 	%r4907, %r4902, %r4903, 8;
	mov.b64 	%rd4520, {%r4907, %r4906};
	xor.b64  	%rd4521, %rd4519, %rd4520;
	shr.u64 	%rd4522, %rd4287, 7;
	xor.b64  	%rd4523, %rd4521, %rd4522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4908,%dummy}, %rd4505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4909}, %rd4505;
	}
	shf.r.wrap.b32 	%r4910, %r4909, %r4908, 19;
	shf.r.wrap.b32 	%r4911, %r4908, %r4909, 19;
	mov.b64 	%rd4524, {%r4911, %r4910};
	shf.l.wrap.b32 	%r4912, %r4908, %r4909, 3;
	shf.l.wrap.b32 	%r4913, %r4909, %r4908, 3;
	mov.b64 	%rd4525, {%r4913, %r4912};
	xor.b64  	%rd4526, %rd4524, %rd4525;
	shr.u64 	%rd4527, %rd4505, 6;
	xor.b64  	%rd4528, %rd4526, %rd4527;
	add.s64 	%rd4529, %rd4523, %rd4267;
	add.s64 	%rd4530, %rd4529, %rd4440;
	add.s64 	%rd4531, %rd4530, %rd4528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4914,%dummy}, %rd4307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4915}, %rd4307;
	}
	shf.r.wrap.b32 	%r4916, %r4915, %r4914, 1;
	shf.r.wrap.b32 	%r4917, %r4914, %r4915, 1;
	mov.b64 	%rd4532, {%r4917, %r4916};
	shf.r.wrap.b32 	%r4918, %r4915, %r4914, 8;
	shf.r.wrap.b32 	%r4919, %r4914, %r4915, 8;
	mov.b64 	%rd4533, {%r4919, %r4918};
	xor.b64  	%rd4534, %rd4532, %rd4533;
	shr.u64 	%rd4535, %rd4307, 7;
	xor.b64  	%rd4536, %rd4534, %rd4535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4920,%dummy}, %rd4518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4921}, %rd4518;
	}
	shf.r.wrap.b32 	%r4922, %r4921, %r4920, 19;
	shf.r.wrap.b32 	%r4923, %r4920, %r4921, 19;
	mov.b64 	%rd4537, {%r4923, %r4922};
	shf.l.wrap.b32 	%r4924, %r4920, %r4921, 3;
	shf.l.wrap.b32 	%r4925, %r4921, %r4920, 3;
	mov.b64 	%rd4538, {%r4925, %r4924};
	xor.b64  	%rd4539, %rd4537, %rd4538;
	shr.u64 	%rd4540, %rd4518, 6;
	xor.b64  	%rd4541, %rd4539, %rd4540;
	add.s64 	%rd4542, %rd4536, %rd4287;
	add.s64 	%rd4543, %rd4542, %rd4453;
	add.s64 	%rd4544, %rd4543, %rd4541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4926,%dummy}, %rd4327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4927}, %rd4327;
	}
	shf.r.wrap.b32 	%r4928, %r4927, %r4926, 1;
	shf.r.wrap.b32 	%r4929, %r4926, %r4927, 1;
	mov.b64 	%rd4545, {%r4929, %r4928};
	shf.r.wrap.b32 	%r4930, %r4927, %r4926, 8;
	shf.r.wrap.b32 	%r4931, %r4926, %r4927, 8;
	mov.b64 	%rd4546, {%r4931, %r4930};
	xor.b64  	%rd4547, %rd4545, %rd4546;
	shr.u64 	%rd4548, %rd4327, 7;
	xor.b64  	%rd4549, %rd4547, %rd4548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4932,%dummy}, %rd4531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4933}, %rd4531;
	}
	shf.r.wrap.b32 	%r4934, %r4933, %r4932, 19;
	shf.r.wrap.b32 	%r4935, %r4932, %r4933, 19;
	mov.b64 	%rd4550, {%r4935, %r4934};
	shf.l.wrap.b32 	%r4936, %r4932, %r4933, 3;
	shf.l.wrap.b32 	%r4937, %r4933, %r4932, 3;
	mov.b64 	%rd4551, {%r4937, %r4936};
	xor.b64  	%rd4552, %rd4550, %rd4551;
	shr.u64 	%rd4553, %rd4531, 6;
	xor.b64  	%rd4554, %rd4552, %rd4553;
	add.s64 	%rd4555, %rd4549, %rd4307;
	add.s64 	%rd4556, %rd4555, %rd4466;
	add.s64 	%rd4557, %rd4556, %rd4554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4938,%dummy}, %rd4347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4939}, %rd4347;
	}
	shf.r.wrap.b32 	%r4940, %r4939, %r4938, 1;
	shf.r.wrap.b32 	%r4941, %r4938, %r4939, 1;
	mov.b64 	%rd4558, {%r4941, %r4940};
	shf.r.wrap.b32 	%r4942, %r4939, %r4938, 8;
	shf.r.wrap.b32 	%r4943, %r4938, %r4939, 8;
	mov.b64 	%rd4559, {%r4943, %r4942};
	xor.b64  	%rd4560, %rd4558, %rd4559;
	shr.u64 	%rd4561, %rd4347, 7;
	xor.b64  	%rd4562, %rd4560, %rd4561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4944,%dummy}, %rd4544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4945}, %rd4544;
	}
	shf.r.wrap.b32 	%r4946, %r4945, %r4944, 19;
	shf.r.wrap.b32 	%r4947, %r4944, %r4945, 19;
	mov.b64 	%rd4563, {%r4947, %r4946};
	shf.l.wrap.b32 	%r4948, %r4944, %r4945, 3;
	shf.l.wrap.b32 	%r4949, %r4945, %r4944, 3;
	mov.b64 	%rd4564, {%r4949, %r4948};
	xor.b64  	%rd4565, %rd4563, %rd4564;
	shr.u64 	%rd4566, %rd4544, 6;
	xor.b64  	%rd4567, %rd4565, %rd4566;
	add.s64 	%rd4568, %rd4562, %rd4327;
	add.s64 	%rd4569, %rd4568, %rd4479;
	add.s64 	%rd4570, %rd4569, %rd4567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4950,%dummy}, %rd4367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4951}, %rd4367;
	}
	shf.r.wrap.b32 	%r4952, %r4951, %r4950, 1;
	shf.r.wrap.b32 	%r4953, %r4950, %r4951, 1;
	mov.b64 	%rd4571, {%r4953, %r4952};
	shf.r.wrap.b32 	%r4954, %r4951, %r4950, 8;
	shf.r.wrap.b32 	%r4955, %r4950, %r4951, 8;
	mov.b64 	%rd4572, {%r4955, %r4954};
	xor.b64  	%rd4573, %rd4571, %rd4572;
	shr.u64 	%rd4574, %rd4367, 7;
	xor.b64  	%rd4575, %rd4573, %rd4574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4956,%dummy}, %rd4557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4957}, %rd4557;
	}
	shf.r.wrap.b32 	%r4958, %r4957, %r4956, 19;
	shf.r.wrap.b32 	%r4959, %r4956, %r4957, 19;
	mov.b64 	%rd4576, {%r4959, %r4958};
	shf.l.wrap.b32 	%r4960, %r4956, %r4957, 3;
	shf.l.wrap.b32 	%r4961, %r4957, %r4956, 3;
	mov.b64 	%rd4577, {%r4961, %r4960};
	xor.b64  	%rd4578, %rd4576, %rd4577;
	shr.u64 	%rd4579, %rd4557, 6;
	xor.b64  	%rd4580, %rd4578, %rd4579;
	add.s64 	%rd4581, %rd4575, %rd4347;
	add.s64 	%rd4582, %rd4581, %rd4492;
	add.s64 	%rd4583, %rd4582, %rd4580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4962,%dummy}, %rd4387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4963}, %rd4387;
	}
	shf.r.wrap.b32 	%r4964, %r4963, %r4962, 1;
	shf.r.wrap.b32 	%r4965, %r4962, %r4963, 1;
	mov.b64 	%rd4584, {%r4965, %r4964};
	shf.r.wrap.b32 	%r4966, %r4963, %r4962, 8;
	shf.r.wrap.b32 	%r4967, %r4962, %r4963, 8;
	mov.b64 	%rd4585, {%r4967, %r4966};
	xor.b64  	%rd4586, %rd4584, %rd4585;
	shr.u64 	%rd4587, %rd4387, 7;
	xor.b64  	%rd4588, %rd4586, %rd4587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4968,%dummy}, %rd4570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4969}, %rd4570;
	}
	shf.r.wrap.b32 	%r4970, %r4969, %r4968, 19;
	shf.r.wrap.b32 	%r4971, %r4968, %r4969, 19;
	mov.b64 	%rd4589, {%r4971, %r4970};
	shf.l.wrap.b32 	%r4972, %r4968, %r4969, 3;
	shf.l.wrap.b32 	%r4973, %r4969, %r4968, 3;
	mov.b64 	%rd4590, {%r4973, %r4972};
	xor.b64  	%rd4591, %rd4589, %rd4590;
	shr.u64 	%rd4592, %rd4570, 6;
	xor.b64  	%rd4593, %rd4591, %rd4592;
	add.s64 	%rd4594, %rd4588, %rd4367;
	add.s64 	%rd4595, %rd4594, %rd4505;
	add.s64 	%rd4596, %rd4595, %rd4593;
	shf.r.wrap.b32 	%r4974, %r4825, %r4824, 1;
	shf.r.wrap.b32 	%r4975, %r4824, %r4825, 1;
	mov.b64 	%rd4597, {%r4975, %r4974};
	shf.r.wrap.b32 	%r4976, %r4825, %r4824, 8;
	shf.r.wrap.b32 	%r4977, %r4824, %r4825, 8;
	mov.b64 	%rd4598, {%r4977, %r4976};
	xor.b64  	%rd4599, %rd4597, %rd4598;
	shr.u64 	%rd4600, %rd4407, 7;
	xor.b64  	%rd4601, %rd4599, %rd4600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4978,%dummy}, %rd4583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4979}, %rd4583;
	}
	shf.r.wrap.b32 	%r4980, %r4979, %r4978, 19;
	shf.r.wrap.b32 	%r4981, %r4978, %r4979, 19;
	mov.b64 	%rd4602, {%r4981, %r4980};
	shf.l.wrap.b32 	%r4982, %r4978, %r4979, 3;
	shf.l.wrap.b32 	%r4983, %r4979, %r4978, 3;
	mov.b64 	%rd4603, {%r4983, %r4982};
	xor.b64  	%rd4604, %rd4602, %rd4603;
	shr.u64 	%rd4605, %rd4583, 6;
	xor.b64  	%rd4606, %rd4604, %rd4605;
	add.s64 	%rd4607, %rd4601, %rd4387;
	add.s64 	%rd4608, %rd4607, %rd4518;
	add.s64 	%rd4609, %rd4608, %rd4606;
	shf.r.wrap.b32 	%r4984, %r4837, %r4836, 1;
	shf.r.wrap.b32 	%r4985, %r4836, %r4837, 1;
	mov.b64 	%rd4610, {%r4985, %r4984};
	shf.r.wrap.b32 	%r4986, %r4837, %r4836, 8;
	shf.r.wrap.b32 	%r4987, %r4836, %r4837, 8;
	mov.b64 	%rd4611, {%r4987, %r4986};
	xor.b64  	%rd4612, %rd4610, %rd4611;
	shr.u64 	%rd4613, %rd4427, 7;
	xor.b64  	%rd4614, %rd4612, %rd4613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4988,%dummy}, %rd4596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4989}, %rd4596;
	}
	shf.r.wrap.b32 	%r4990, %r4989, %r4988, 19;
	shf.r.wrap.b32 	%r4991, %r4988, %r4989, 19;
	mov.b64 	%rd4615, {%r4991, %r4990};
	shf.l.wrap.b32 	%r4992, %r4988, %r4989, 3;
	shf.l.wrap.b32 	%r4993, %r4989, %r4988, 3;
	mov.b64 	%rd4616, {%r4993, %r4992};
	xor.b64  	%rd4617, %rd4615, %rd4616;
	shr.u64 	%rd4618, %rd4596, 6;
	xor.b64  	%rd4619, %rd4617, %rd4618;
	add.s64 	%rd4620, %rd4614, %rd4407;
	add.s64 	%rd4621, %rd4620, %rd4531;
	add.s64 	%rd4622, %rd4621, %rd4619;
	shf.r.wrap.b32 	%r4994, %r4849, %r4848, 1;
	shf.r.wrap.b32 	%r4995, %r4848, %r4849, 1;
	mov.b64 	%rd4623, {%r4995, %r4994};
	shf.r.wrap.b32 	%r4996, %r4849, %r4848, 8;
	shf.r.wrap.b32 	%r4997, %r4848, %r4849, 8;
	mov.b64 	%rd4624, {%r4997, %r4996};
	xor.b64  	%rd4625, %rd4623, %rd4624;
	shr.u64 	%rd4626, %rd4440, 7;
	xor.b64  	%rd4627, %rd4625, %rd4626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4998,%dummy}, %rd4609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4999}, %rd4609;
	}
	shf.r.wrap.b32 	%r5000, %r4999, %r4998, 19;
	shf.r.wrap.b32 	%r5001, %r4998, %r4999, 19;
	mov.b64 	%rd4628, {%r5001, %r5000};
	shf.l.wrap.b32 	%r5002, %r4998, %r4999, 3;
	shf.l.wrap.b32 	%r5003, %r4999, %r4998, 3;
	mov.b64 	%rd4629, {%r5003, %r5002};
	xor.b64  	%rd4630, %rd4628, %rd4629;
	shr.u64 	%rd4631, %rd4609, 6;
	xor.b64  	%rd4632, %rd4630, %rd4631;
	add.s64 	%rd4633, %rd4627, %rd4427;
	add.s64 	%rd4634, %rd4633, %rd4544;
	add.s64 	%rd4635, %rd4634, %rd4632;
	shf.r.wrap.b32 	%r5004, %r4861, %r4860, 1;
	shf.r.wrap.b32 	%r5005, %r4860, %r4861, 1;
	mov.b64 	%rd4636, {%r5005, %r5004};
	shf.r.wrap.b32 	%r5006, %r4861, %r4860, 8;
	shf.r.wrap.b32 	%r5007, %r4860, %r4861, 8;
	mov.b64 	%rd4637, {%r5007, %r5006};
	xor.b64  	%rd4638, %rd4636, %rd4637;
	shr.u64 	%rd4639, %rd4453, 7;
	xor.b64  	%rd4640, %rd4638, %rd4639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5008,%dummy}, %rd4622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5009}, %rd4622;
	}
	shf.r.wrap.b32 	%r5010, %r5009, %r5008, 19;
	shf.r.wrap.b32 	%r5011, %r5008, %r5009, 19;
	mov.b64 	%rd4641, {%r5011, %r5010};
	shf.l.wrap.b32 	%r5012, %r5008, %r5009, 3;
	shf.l.wrap.b32 	%r5013, %r5009, %r5008, 3;
	mov.b64 	%rd4642, {%r5013, %r5012};
	xor.b64  	%rd4643, %rd4641, %rd4642;
	shr.u64 	%rd4644, %rd4622, 6;
	xor.b64  	%rd4645, %rd4643, %rd4644;
	add.s64 	%rd4646, %rd4640, %rd4440;
	add.s64 	%rd4647, %rd4646, %rd4557;
	add.s64 	%rd4648, %rd4647, %rd4645;
	shf.r.wrap.b32 	%r5014, %r4873, %r4872, 1;
	shf.r.wrap.b32 	%r5015, %r4872, %r4873, 1;
	mov.b64 	%rd4649, {%r5015, %r5014};
	shf.r.wrap.b32 	%r5016, %r4873, %r4872, 8;
	shf.r.wrap.b32 	%r5017, %r4872, %r4873, 8;
	mov.b64 	%rd4650, {%r5017, %r5016};
	xor.b64  	%rd4651, %rd4649, %rd4650;
	shr.u64 	%rd4652, %rd4466, 7;
	xor.b64  	%rd4653, %rd4651, %rd4652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5018,%dummy}, %rd4635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5019}, %rd4635;
	}
	shf.r.wrap.b32 	%r5020, %r5019, %r5018, 19;
	shf.r.wrap.b32 	%r5021, %r5018, %r5019, 19;
	mov.b64 	%rd4654, {%r5021, %r5020};
	shf.l.wrap.b32 	%r5022, %r5018, %r5019, 3;
	shf.l.wrap.b32 	%r5023, %r5019, %r5018, 3;
	mov.b64 	%rd4655, {%r5023, %r5022};
	xor.b64  	%rd4656, %rd4654, %rd4655;
	shr.u64 	%rd4657, %rd4635, 6;
	xor.b64  	%rd4658, %rd4656, %rd4657;
	add.s64 	%rd4659, %rd4653, %rd4453;
	add.s64 	%rd4660, %rd4659, %rd4570;
	add.s64 	%rd4661, %rd4660, %rd4658;
	shf.r.wrap.b32 	%r5024, %r4885, %r4884, 1;
	shf.r.wrap.b32 	%r5025, %r4884, %r4885, 1;
	mov.b64 	%rd4662, {%r5025, %r5024};
	shf.r.wrap.b32 	%r5026, %r4885, %r4884, 8;
	shf.r.wrap.b32 	%r5027, %r4884, %r4885, 8;
	mov.b64 	%rd4663, {%r5027, %r5026};
	xor.b64  	%rd4664, %rd4662, %rd4663;
	shr.u64 	%rd4665, %rd4479, 7;
	xor.b64  	%rd4666, %rd4664, %rd4665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5028,%dummy}, %rd4648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5029}, %rd4648;
	}
	shf.r.wrap.b32 	%r5030, %r5029, %r5028, 19;
	shf.r.wrap.b32 	%r5031, %r5028, %r5029, 19;
	mov.b64 	%rd4667, {%r5031, %r5030};
	shf.l.wrap.b32 	%r5032, %r5028, %r5029, 3;
	shf.l.wrap.b32 	%r5033, %r5029, %r5028, 3;
	mov.b64 	%rd4668, {%r5033, %r5032};
	xor.b64  	%rd4669, %rd4667, %rd4668;
	shr.u64 	%rd4670, %rd4648, 6;
	xor.b64  	%rd4671, %rd4669, %rd4670;
	add.s64 	%rd4672, %rd4666, %rd4466;
	add.s64 	%rd4673, %rd4672, %rd4583;
	add.s64 	%rd4674, %rd4673, %rd4671;
	shf.r.wrap.b32 	%r5034, %r4897, %r4896, 1;
	shf.r.wrap.b32 	%r5035, %r4896, %r4897, 1;
	mov.b64 	%rd4675, {%r5035, %r5034};
	shf.r.wrap.b32 	%r5036, %r4897, %r4896, 8;
	shf.r.wrap.b32 	%r5037, %r4896, %r4897, 8;
	mov.b64 	%rd4676, {%r5037, %r5036};
	xor.b64  	%rd4677, %rd4675, %rd4676;
	shr.u64 	%rd4678, %rd4492, 7;
	xor.b64  	%rd4679, %rd4677, %rd4678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5038,%dummy}, %rd4661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5039}, %rd4661;
	}
	shf.r.wrap.b32 	%r5040, %r5039, %r5038, 19;
	shf.r.wrap.b32 	%r5041, %r5038, %r5039, 19;
	mov.b64 	%rd4680, {%r5041, %r5040};
	shf.l.wrap.b32 	%r5042, %r5038, %r5039, 3;
	shf.l.wrap.b32 	%r5043, %r5039, %r5038, 3;
	mov.b64 	%rd4681, {%r5043, %r5042};
	xor.b64  	%rd4682, %rd4680, %rd4681;
	shr.u64 	%rd4683, %rd4661, 6;
	xor.b64  	%rd4684, %rd4682, %rd4683;
	add.s64 	%rd4685, %rd4679, %rd4479;
	add.s64 	%rd4686, %rd4685, %rd4596;
	add.s64 	%rd4687, %rd4686, %rd4684;
	shf.r.wrap.b32 	%r5044, %r4909, %r4908, 1;
	shf.r.wrap.b32 	%r5045, %r4908, %r4909, 1;
	mov.b64 	%rd4688, {%r5045, %r5044};
	shf.r.wrap.b32 	%r5046, %r4909, %r4908, 8;
	shf.r.wrap.b32 	%r5047, %r4908, %r4909, 8;
	mov.b64 	%rd4689, {%r5047, %r5046};
	xor.b64  	%rd4690, %rd4688, %rd4689;
	shr.u64 	%rd4691, %rd4505, 7;
	xor.b64  	%rd4692, %rd4690, %rd4691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5048,%dummy}, %rd4674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5049}, %rd4674;
	}
	shf.r.wrap.b32 	%r5050, %r5049, %r5048, 19;
	shf.r.wrap.b32 	%r5051, %r5048, %r5049, 19;
	mov.b64 	%rd4693, {%r5051, %r5050};
	shf.l.wrap.b32 	%r5052, %r5048, %r5049, 3;
	shf.l.wrap.b32 	%r5053, %r5049, %r5048, 3;
	mov.b64 	%rd4694, {%r5053, %r5052};
	xor.b64  	%rd4695, %rd4693, %rd4694;
	shr.u64 	%rd4696, %rd4674, 6;
	xor.b64  	%rd4697, %rd4695, %rd4696;
	add.s64 	%rd4698, %rd4692, %rd4492;
	add.s64 	%rd4699, %rd4698, %rd4609;
	add.s64 	%rd4700, %rd4699, %rd4697;
	shf.r.wrap.b32 	%r5054, %r4921, %r4920, 1;
	shf.r.wrap.b32 	%r5055, %r4920, %r4921, 1;
	mov.b64 	%rd4701, {%r5055, %r5054};
	shf.r.wrap.b32 	%r5056, %r4921, %r4920, 8;
	shf.r.wrap.b32 	%r5057, %r4920, %r4921, 8;
	mov.b64 	%rd4702, {%r5057, %r5056};
	xor.b64  	%rd4703, %rd4701, %rd4702;
	shr.u64 	%rd4704, %rd4518, 7;
	xor.b64  	%rd4705, %rd4703, %rd4704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5058,%dummy}, %rd4687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5059}, %rd4687;
	}
	shf.r.wrap.b32 	%r5060, %r5059, %r5058, 19;
	shf.r.wrap.b32 	%r5061, %r5058, %r5059, 19;
	mov.b64 	%rd4706, {%r5061, %r5060};
	shf.l.wrap.b32 	%r5062, %r5058, %r5059, 3;
	shf.l.wrap.b32 	%r5063, %r5059, %r5058, 3;
	mov.b64 	%rd4707, {%r5063, %r5062};
	xor.b64  	%rd4708, %rd4706, %rd4707;
	shr.u64 	%rd4709, %rd4687, 6;
	xor.b64  	%rd4710, %rd4708, %rd4709;
	add.s64 	%rd4711, %rd4705, %rd4505;
	add.s64 	%rd4712, %rd4711, %rd4622;
	add.s64 	%rd4713, %rd4712, %rd4710;
	shf.r.wrap.b32 	%r5064, %r4933, %r4932, 1;
	shf.r.wrap.b32 	%r5065, %r4932, %r4933, 1;
	mov.b64 	%rd4714, {%r5065, %r5064};
	shf.r.wrap.b32 	%r5066, %r4933, %r4932, 8;
	shf.r.wrap.b32 	%r5067, %r4932, %r4933, 8;
	mov.b64 	%rd4715, {%r5067, %r5066};
	xor.b64  	%rd4716, %rd4714, %rd4715;
	shr.u64 	%rd4717, %rd4531, 7;
	xor.b64  	%rd4718, %rd4716, %rd4717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5068,%dummy}, %rd4700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5069}, %rd4700;
	}
	shf.r.wrap.b32 	%r5070, %r5069, %r5068, 19;
	shf.r.wrap.b32 	%r5071, %r5068, %r5069, 19;
	mov.b64 	%rd4719, {%r5071, %r5070};
	shf.l.wrap.b32 	%r5072, %r5068, %r5069, 3;
	shf.l.wrap.b32 	%r5073, %r5069, %r5068, 3;
	mov.b64 	%rd4720, {%r5073, %r5072};
	xor.b64  	%rd4721, %rd4719, %rd4720;
	shr.u64 	%rd4722, %rd4700, 6;
	xor.b64  	%rd4723, %rd4721, %rd4722;
	add.s64 	%rd4724, %rd4718, %rd4518;
	add.s64 	%rd4725, %rd4724, %rd4635;
	add.s64 	%rd4726, %rd4725, %rd4723;
	shf.r.wrap.b32 	%r5074, %r4945, %r4944, 1;
	shf.r.wrap.b32 	%r5075, %r4944, %r4945, 1;
	mov.b64 	%rd4727, {%r5075, %r5074};
	shf.r.wrap.b32 	%r5076, %r4945, %r4944, 8;
	shf.r.wrap.b32 	%r5077, %r4944, %r4945, 8;
	mov.b64 	%rd4728, {%r5077, %r5076};
	xor.b64  	%rd4729, %rd4727, %rd4728;
	shr.u64 	%rd4730, %rd4544, 7;
	xor.b64  	%rd4731, %rd4729, %rd4730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5078,%dummy}, %rd4713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5079}, %rd4713;
	}
	shf.r.wrap.b32 	%r5080, %r5079, %r5078, 19;
	shf.r.wrap.b32 	%r5081, %r5078, %r5079, 19;
	mov.b64 	%rd4732, {%r5081, %r5080};
	shf.l.wrap.b32 	%r5082, %r5078, %r5079, 3;
	shf.l.wrap.b32 	%r5083, %r5079, %r5078, 3;
	mov.b64 	%rd4733, {%r5083, %r5082};
	xor.b64  	%rd4734, %rd4732, %rd4733;
	shr.u64 	%rd4735, %rd4713, 6;
	xor.b64  	%rd4736, %rd4734, %rd4735;
	add.s64 	%rd4737, %rd4731, %rd4531;
	add.s64 	%rd4738, %rd4737, %rd4648;
	add.s64 	%rd4739, %rd4738, %rd4736;
	shf.r.wrap.b32 	%r5084, %r4957, %r4956, 1;
	shf.r.wrap.b32 	%r5085, %r4956, %r4957, 1;
	mov.b64 	%rd4740, {%r5085, %r5084};
	shf.r.wrap.b32 	%r5086, %r4957, %r4956, 8;
	shf.r.wrap.b32 	%r5087, %r4956, %r4957, 8;
	mov.b64 	%rd4741, {%r5087, %r5086};
	xor.b64  	%rd4742, %rd4740, %rd4741;
	shr.u64 	%rd4743, %rd4557, 7;
	xor.b64  	%rd4744, %rd4742, %rd4743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5088,%dummy}, %rd4726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5089}, %rd4726;
	}
	shf.r.wrap.b32 	%r5090, %r5089, %r5088, 19;
	shf.r.wrap.b32 	%r5091, %r5088, %r5089, 19;
	mov.b64 	%rd4745, {%r5091, %r5090};
	shf.l.wrap.b32 	%r5092, %r5088, %r5089, 3;
	shf.l.wrap.b32 	%r5093, %r5089, %r5088, 3;
	mov.b64 	%rd4746, {%r5093, %r5092};
	xor.b64  	%rd4747, %rd4745, %rd4746;
	shr.u64 	%rd4748, %rd4726, 6;
	xor.b64  	%rd4749, %rd4747, %rd4748;
	add.s64 	%rd4750, %rd4744, %rd4544;
	add.s64 	%rd4751, %rd4750, %rd4661;
	add.s64 	%rd4752, %rd4751, %rd4749;
	shf.r.wrap.b32 	%r5094, %r4969, %r4968, 1;
	shf.r.wrap.b32 	%r5095, %r4968, %r4969, 1;
	mov.b64 	%rd4753, {%r5095, %r5094};
	shf.r.wrap.b32 	%r5096, %r4969, %r4968, 8;
	shf.r.wrap.b32 	%r5097, %r4968, %r4969, 8;
	mov.b64 	%rd4754, {%r5097, %r5096};
	xor.b64  	%rd4755, %rd4753, %rd4754;
	shr.u64 	%rd4756, %rd4570, 7;
	xor.b64  	%rd4757, %rd4755, %rd4756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5098,%dummy}, %rd4739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5099}, %rd4739;
	}
	shf.r.wrap.b32 	%r5100, %r5099, %r5098, 19;
	shf.r.wrap.b32 	%r5101, %r5098, %r5099, 19;
	mov.b64 	%rd4758, {%r5101, %r5100};
	shf.l.wrap.b32 	%r5102, %r5098, %r5099, 3;
	shf.l.wrap.b32 	%r5103, %r5099, %r5098, 3;
	mov.b64 	%rd4759, {%r5103, %r5102};
	xor.b64  	%rd4760, %rd4758, %rd4759;
	shr.u64 	%rd4761, %rd4739, 6;
	xor.b64  	%rd4762, %rd4760, %rd4761;
	add.s64 	%rd4763, %rd4757, %rd4557;
	add.s64 	%rd4764, %rd4763, %rd4674;
	add.s64 	%rd4765, %rd4764, %rd4762;
	shf.r.wrap.b32 	%r5104, %r4979, %r4978, 1;
	shf.r.wrap.b32 	%r5105, %r4978, %r4979, 1;
	mov.b64 	%rd4766, {%r5105, %r5104};
	shf.r.wrap.b32 	%r5106, %r4979, %r4978, 8;
	shf.r.wrap.b32 	%r5107, %r4978, %r4979, 8;
	mov.b64 	%rd4767, {%r5107, %r5106};
	xor.b64  	%rd4768, %rd4766, %rd4767;
	shr.u64 	%rd4769, %rd4583, 7;
	xor.b64  	%rd4770, %rd4768, %rd4769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5108,%dummy}, %rd4752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5109}, %rd4752;
	}
	shf.r.wrap.b32 	%r5110, %r5109, %r5108, 19;
	shf.r.wrap.b32 	%r5111, %r5108, %r5109, 19;
	mov.b64 	%rd4771, {%r5111, %r5110};
	shf.l.wrap.b32 	%r5112, %r5108, %r5109, 3;
	shf.l.wrap.b32 	%r5113, %r5109, %r5108, 3;
	mov.b64 	%rd4772, {%r5113, %r5112};
	xor.b64  	%rd4773, %rd4771, %rd4772;
	shr.u64 	%rd4774, %rd4752, 6;
	xor.b64  	%rd4775, %rd4773, %rd4774;
	add.s64 	%rd4776, %rd4770, %rd4570;
	add.s64 	%rd4777, %rd4776, %rd4687;
	add.s64 	%rd4778, %rd4777, %rd4775;
	shf.r.wrap.b32 	%r5114, %r4989, %r4988, 1;
	shf.r.wrap.b32 	%r5115, %r4988, %r4989, 1;
	mov.b64 	%rd4779, {%r5115, %r5114};
	shf.r.wrap.b32 	%r5116, %r4989, %r4988, 8;
	shf.r.wrap.b32 	%r5117, %r4988, %r4989, 8;
	mov.b64 	%rd4780, {%r5117, %r5116};
	xor.b64  	%rd4781, %rd4779, %rd4780;
	shr.u64 	%rd4782, %rd4596, 7;
	xor.b64  	%rd4783, %rd4781, %rd4782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5118,%dummy}, %rd4765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5119}, %rd4765;
	}
	shf.r.wrap.b32 	%r5120, %r5119, %r5118, 19;
	shf.r.wrap.b32 	%r5121, %r5118, %r5119, 19;
	mov.b64 	%rd4784, {%r5121, %r5120};
	shf.l.wrap.b32 	%r5122, %r5118, %r5119, 3;
	shf.l.wrap.b32 	%r5123, %r5119, %r5118, 3;
	mov.b64 	%rd4785, {%r5123, %r5122};
	xor.b64  	%rd4786, %rd4784, %rd4785;
	shr.u64 	%rd4787, %rd4765, 6;
	xor.b64  	%rd4788, %rd4786, %rd4787;
	add.s64 	%rd4789, %rd4783, %rd4583;
	add.s64 	%rd4790, %rd4789, %rd4700;
	add.s64 	%rd4791, %rd4790, %rd4788;
	shf.r.wrap.b32 	%r5124, %r4999, %r4998, 1;
	shf.r.wrap.b32 	%r5125, %r4998, %r4999, 1;
	mov.b64 	%rd4792, {%r5125, %r5124};
	shf.r.wrap.b32 	%r5126, %r4999, %r4998, 8;
	shf.r.wrap.b32 	%r5127, %r4998, %r4999, 8;
	mov.b64 	%rd4793, {%r5127, %r5126};
	xor.b64  	%rd4794, %rd4792, %rd4793;
	shr.u64 	%rd4795, %rd4609, 7;
	xor.b64  	%rd4796, %rd4794, %rd4795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5128,%dummy}, %rd4778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5129}, %rd4778;
	}
	shf.r.wrap.b32 	%r5130, %r5129, %r5128, 19;
	shf.r.wrap.b32 	%r5131, %r5128, %r5129, 19;
	mov.b64 	%rd4797, {%r5131, %r5130};
	shf.l.wrap.b32 	%r5132, %r5128, %r5129, 3;
	shf.l.wrap.b32 	%r5133, %r5129, %r5128, 3;
	mov.b64 	%rd4798, {%r5133, %r5132};
	xor.b64  	%rd4799, %rd4797, %rd4798;
	shr.u64 	%rd4800, %rd4778, 6;
	xor.b64  	%rd4801, %rd4799, %rd4800;
	add.s64 	%rd4802, %rd4796, %rd4596;
	add.s64 	%rd4803, %rd4802, %rd4713;
	add.s64 	%rd4804, %rd4803, %rd4801;
	shf.r.wrap.b32 	%r5134, %r5009, %r5008, 1;
	shf.r.wrap.b32 	%r5135, %r5008, %r5009, 1;
	mov.b64 	%rd4805, {%r5135, %r5134};
	shf.r.wrap.b32 	%r5136, %r5009, %r5008, 8;
	shf.r.wrap.b32 	%r5137, %r5008, %r5009, 8;
	mov.b64 	%rd4806, {%r5137, %r5136};
	xor.b64  	%rd4807, %rd4805, %rd4806;
	shr.u64 	%rd4808, %rd4622, 7;
	xor.b64  	%rd4809, %rd4807, %rd4808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5138,%dummy}, %rd4791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5139}, %rd4791;
	}
	shf.r.wrap.b32 	%r5140, %r5139, %r5138, 19;
	shf.r.wrap.b32 	%r5141, %r5138, %r5139, 19;
	mov.b64 	%rd4810, {%r5141, %r5140};
	shf.l.wrap.b32 	%r5142, %r5138, %r5139, 3;
	shf.l.wrap.b32 	%r5143, %r5139, %r5138, 3;
	mov.b64 	%rd4811, {%r5143, %r5142};
	xor.b64  	%rd4812, %rd4810, %rd4811;
	shr.u64 	%rd4813, %rd4791, 6;
	xor.b64  	%rd4814, %rd4812, %rd4813;
	add.s64 	%rd4815, %rd4809, %rd4609;
	add.s64 	%rd4816, %rd4815, %rd4726;
	add.s64 	%rd4817, %rd4816, %rd4814;
	shf.r.wrap.b32 	%r5144, %r5019, %r5018, 1;
	shf.r.wrap.b32 	%r5145, %r5018, %r5019, 1;
	mov.b64 	%rd4818, {%r5145, %r5144};
	shf.r.wrap.b32 	%r5146, %r5019, %r5018, 8;
	shf.r.wrap.b32 	%r5147, %r5018, %r5019, 8;
	mov.b64 	%rd4819, {%r5147, %r5146};
	xor.b64  	%rd4820, %rd4818, %rd4819;
	shr.u64 	%rd4821, %rd4635, 7;
	xor.b64  	%rd4822, %rd4820, %rd4821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5148,%dummy}, %rd4804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5149}, %rd4804;
	}
	shf.r.wrap.b32 	%r5150, %r5149, %r5148, 19;
	shf.r.wrap.b32 	%r5151, %r5148, %r5149, 19;
	mov.b64 	%rd4823, {%r5151, %r5150};
	shf.l.wrap.b32 	%r5152, %r5148, %r5149, 3;
	shf.l.wrap.b32 	%r5153, %r5149, %r5148, 3;
	mov.b64 	%rd4824, {%r5153, %r5152};
	xor.b64  	%rd4825, %rd4823, %rd4824;
	shr.u64 	%rd4826, %rd4804, 6;
	xor.b64  	%rd4827, %rd4825, %rd4826;
	add.s64 	%rd4828, %rd4822, %rd4622;
	add.s64 	%rd4829, %rd4828, %rd4739;
	add.s64 	%rd4830, %rd4829, %rd4827;
	shf.r.wrap.b32 	%r5154, %r5029, %r5028, 1;
	shf.r.wrap.b32 	%r5155, %r5028, %r5029, 1;
	mov.b64 	%rd4831, {%r5155, %r5154};
	shf.r.wrap.b32 	%r5156, %r5029, %r5028, 8;
	shf.r.wrap.b32 	%r5157, %r5028, %r5029, 8;
	mov.b64 	%rd4832, {%r5157, %r5156};
	xor.b64  	%rd4833, %rd4831, %rd4832;
	shr.u64 	%rd4834, %rd4648, 7;
	xor.b64  	%rd4835, %rd4833, %rd4834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5158,%dummy}, %rd4817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5159}, %rd4817;
	}
	shf.r.wrap.b32 	%r5160, %r5159, %r5158, 19;
	shf.r.wrap.b32 	%r5161, %r5158, %r5159, 19;
	mov.b64 	%rd4836, {%r5161, %r5160};
	shf.l.wrap.b32 	%r5162, %r5158, %r5159, 3;
	shf.l.wrap.b32 	%r5163, %r5159, %r5158, 3;
	mov.b64 	%rd4837, {%r5163, %r5162};
	xor.b64  	%rd4838, %rd4836, %rd4837;
	shr.u64 	%rd4839, %rd4817, 6;
	xor.b64  	%rd4840, %rd4838, %rd4839;
	add.s64 	%rd4841, %rd4835, %rd4635;
	add.s64 	%rd4842, %rd4841, %rd4752;
	add.s64 	%rd4843, %rd4842, %rd4840;
	shf.r.wrap.b32 	%r5164, %r5039, %r5038, 1;
	shf.r.wrap.b32 	%r5165, %r5038, %r5039, 1;
	mov.b64 	%rd4844, {%r5165, %r5164};
	shf.r.wrap.b32 	%r5166, %r5039, %r5038, 8;
	shf.r.wrap.b32 	%r5167, %r5038, %r5039, 8;
	mov.b64 	%rd4845, {%r5167, %r5166};
	xor.b64  	%rd4846, %rd4844, %rd4845;
	shr.u64 	%rd4847, %rd4661, 7;
	xor.b64  	%rd4848, %rd4846, %rd4847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5168,%dummy}, %rd4830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5169}, %rd4830;
	}
	shf.r.wrap.b32 	%r5170, %r5169, %r5168, 19;
	shf.r.wrap.b32 	%r5171, %r5168, %r5169, 19;
	mov.b64 	%rd4849, {%r5171, %r5170};
	shf.l.wrap.b32 	%r5172, %r5168, %r5169, 3;
	shf.l.wrap.b32 	%r5173, %r5169, %r5168, 3;
	mov.b64 	%rd4850, {%r5173, %r5172};
	xor.b64  	%rd4851, %rd4849, %rd4850;
	shr.u64 	%rd4852, %rd4830, 6;
	xor.b64  	%rd4853, %rd4851, %rd4852;
	add.s64 	%rd4854, %rd4848, %rd4648;
	add.s64 	%rd4855, %rd4854, %rd4765;
	add.s64 	%rd4856, %rd4855, %rd4853;
	shf.r.wrap.b32 	%r5174, %r5049, %r5048, 1;
	shf.r.wrap.b32 	%r5175, %r5048, %r5049, 1;
	mov.b64 	%rd4857, {%r5175, %r5174};
	shf.r.wrap.b32 	%r5176, %r5049, %r5048, 8;
	shf.r.wrap.b32 	%r5177, %r5048, %r5049, 8;
	mov.b64 	%rd4858, {%r5177, %r5176};
	xor.b64  	%rd4859, %rd4857, %rd4858;
	shr.u64 	%rd4860, %rd4674, 7;
	xor.b64  	%rd4861, %rd4859, %rd4860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5178,%dummy}, %rd4843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5179}, %rd4843;
	}
	shf.r.wrap.b32 	%r5180, %r5179, %r5178, 19;
	shf.r.wrap.b32 	%r5181, %r5178, %r5179, 19;
	mov.b64 	%rd4862, {%r5181, %r5180};
	shf.l.wrap.b32 	%r5182, %r5178, %r5179, 3;
	shf.l.wrap.b32 	%r5183, %r5179, %r5178, 3;
	mov.b64 	%rd4863, {%r5183, %r5182};
	xor.b64  	%rd4864, %rd4862, %rd4863;
	shr.u64 	%rd4865, %rd4843, 6;
	xor.b64  	%rd4866, %rd4864, %rd4865;
	add.s64 	%rd4867, %rd4861, %rd4661;
	add.s64 	%rd4868, %rd4867, %rd4778;
	add.s64 	%rd4869, %rd4868, %rd4866;
	shf.r.wrap.b32 	%r5184, %r5059, %r5058, 1;
	shf.r.wrap.b32 	%r5185, %r5058, %r5059, 1;
	mov.b64 	%rd4870, {%r5185, %r5184};
	shf.r.wrap.b32 	%r5186, %r5059, %r5058, 8;
	shf.r.wrap.b32 	%r5187, %r5058, %r5059, 8;
	mov.b64 	%rd4871, {%r5187, %r5186};
	xor.b64  	%rd4872, %rd4870, %rd4871;
	shr.u64 	%rd4873, %rd4687, 7;
	xor.b64  	%rd4874, %rd4872, %rd4873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5188,%dummy}, %rd4856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5189}, %rd4856;
	}
	shf.r.wrap.b32 	%r5190, %r5189, %r5188, 19;
	shf.r.wrap.b32 	%r5191, %r5188, %r5189, 19;
	mov.b64 	%rd4875, {%r5191, %r5190};
	shf.l.wrap.b32 	%r5192, %r5188, %r5189, 3;
	shf.l.wrap.b32 	%r5193, %r5189, %r5188, 3;
	mov.b64 	%rd4876, {%r5193, %r5192};
	xor.b64  	%rd4877, %rd4875, %rd4876;
	shr.u64 	%rd4878, %rd4856, 6;
	xor.b64  	%rd4879, %rd4877, %rd4878;
	add.s64 	%rd4880, %rd4874, %rd4674;
	add.s64 	%rd4881, %rd4880, %rd4791;
	add.s64 	%rd4882, %rd4881, %rd4879;
	shf.r.wrap.b32 	%r5194, %r5069, %r5068, 1;
	shf.r.wrap.b32 	%r5195, %r5068, %r5069, 1;
	mov.b64 	%rd4883, {%r5195, %r5194};
	shf.r.wrap.b32 	%r5196, %r5069, %r5068, 8;
	shf.r.wrap.b32 	%r5197, %r5068, %r5069, 8;
	mov.b64 	%rd4884, {%r5197, %r5196};
	xor.b64  	%rd4885, %rd4883, %rd4884;
	shr.u64 	%rd4886, %rd4700, 7;
	xor.b64  	%rd4887, %rd4885, %rd4886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5198,%dummy}, %rd4869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5199}, %rd4869;
	}
	shf.r.wrap.b32 	%r5200, %r5199, %r5198, 19;
	shf.r.wrap.b32 	%r5201, %r5198, %r5199, 19;
	mov.b64 	%rd4888, {%r5201, %r5200};
	shf.l.wrap.b32 	%r5202, %r5198, %r5199, 3;
	shf.l.wrap.b32 	%r5203, %r5199, %r5198, 3;
	mov.b64 	%rd4889, {%r5203, %r5202};
	xor.b64  	%rd4890, %rd4888, %rd4889;
	shr.u64 	%rd4891, %rd4869, 6;
	xor.b64  	%rd4892, %rd4890, %rd4891;
	add.s64 	%rd4893, %rd4887, %rd4687;
	add.s64 	%rd4894, %rd4893, %rd4804;
	add.s64 	%rd4895, %rd4894, %rd4892;
	shf.r.wrap.b32 	%r5204, %r5079, %r5078, 1;
	shf.r.wrap.b32 	%r5205, %r5078, %r5079, 1;
	mov.b64 	%rd4896, {%r5205, %r5204};
	shf.r.wrap.b32 	%r5206, %r5079, %r5078, 8;
	shf.r.wrap.b32 	%r5207, %r5078, %r5079, 8;
	mov.b64 	%rd4897, {%r5207, %r5206};
	xor.b64  	%rd4898, %rd4896, %rd4897;
	shr.u64 	%rd4899, %rd4713, 7;
	xor.b64  	%rd4900, %rd4898, %rd4899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5208,%dummy}, %rd4882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5209}, %rd4882;
	}
	shf.r.wrap.b32 	%r5210, %r5209, %r5208, 19;
	shf.r.wrap.b32 	%r5211, %r5208, %r5209, 19;
	mov.b64 	%rd4901, {%r5211, %r5210};
	shf.l.wrap.b32 	%r5212, %r5208, %r5209, 3;
	shf.l.wrap.b32 	%r5213, %r5209, %r5208, 3;
	mov.b64 	%rd4902, {%r5213, %r5212};
	xor.b64  	%rd4903, %rd4901, %rd4902;
	shr.u64 	%rd4904, %rd4882, 6;
	xor.b64  	%rd4905, %rd4903, %rd4904;
	add.s64 	%rd4906, %rd4900, %rd4700;
	add.s64 	%rd4907, %rd4906, %rd4817;
	add.s64 	%rd4908, %rd4907, %rd4905;
	shf.r.wrap.b32 	%r5214, %r5089, %r5088, 1;
	shf.r.wrap.b32 	%r5215, %r5088, %r5089, 1;
	mov.b64 	%rd4909, {%r5215, %r5214};
	shf.r.wrap.b32 	%r5216, %r5089, %r5088, 8;
	shf.r.wrap.b32 	%r5217, %r5088, %r5089, 8;
	mov.b64 	%rd4910, {%r5217, %r5216};
	xor.b64  	%rd4911, %rd4909, %rd4910;
	shr.u64 	%rd4912, %rd4726, 7;
	xor.b64  	%rd4913, %rd4911, %rd4912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5218,%dummy}, %rd4895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5219}, %rd4895;
	}
	shf.r.wrap.b32 	%r5220, %r5219, %r5218, 19;
	shf.r.wrap.b32 	%r5221, %r5218, %r5219, 19;
	mov.b64 	%rd4914, {%r5221, %r5220};
	shf.l.wrap.b32 	%r5222, %r5218, %r5219, 3;
	shf.l.wrap.b32 	%r5223, %r5219, %r5218, 3;
	mov.b64 	%rd4915, {%r5223, %r5222};
	xor.b64  	%rd4916, %rd4914, %rd4915;
	shr.u64 	%rd4917, %rd4895, 6;
	xor.b64  	%rd4918, %rd4916, %rd4917;
	add.s64 	%rd4919, %rd4913, %rd4713;
	add.s64 	%rd4920, %rd4919, %rd4830;
	add.s64 	%rd4921, %rd4920, %rd4918;
	shf.r.wrap.b32 	%r5224, %r5099, %r5098, 1;
	shf.r.wrap.b32 	%r5225, %r5098, %r5099, 1;
	mov.b64 	%rd4922, {%r5225, %r5224};
	shf.r.wrap.b32 	%r5226, %r5099, %r5098, 8;
	shf.r.wrap.b32 	%r5227, %r5098, %r5099, 8;
	mov.b64 	%rd4923, {%r5227, %r5226};
	xor.b64  	%rd4924, %rd4922, %rd4923;
	shr.u64 	%rd4925, %rd4739, 7;
	xor.b64  	%rd4926, %rd4924, %rd4925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5228,%dummy}, %rd4908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5229}, %rd4908;
	}
	shf.r.wrap.b32 	%r5230, %r5229, %r5228, 19;
	shf.r.wrap.b32 	%r5231, %r5228, %r5229, 19;
	mov.b64 	%rd4927, {%r5231, %r5230};
	shf.l.wrap.b32 	%r5232, %r5228, %r5229, 3;
	shf.l.wrap.b32 	%r5233, %r5229, %r5228, 3;
	mov.b64 	%rd4928, {%r5233, %r5232};
	xor.b64  	%rd4929, %rd4927, %rd4928;
	shr.u64 	%rd4930, %rd4908, 6;
	xor.b64  	%rd4931, %rd4929, %rd4930;
	add.s64 	%rd4932, %rd4926, %rd4726;
	add.s64 	%rd4933, %rd4932, %rd4843;
	add.s64 	%rd4934, %rd4933, %rd4931;
	shf.r.wrap.b32 	%r5234, %r5109, %r5108, 1;
	shf.r.wrap.b32 	%r5235, %r5108, %r5109, 1;
	mov.b64 	%rd4935, {%r5235, %r5234};
	shf.r.wrap.b32 	%r5236, %r5109, %r5108, 8;
	shf.r.wrap.b32 	%r5237, %r5108, %r5109, 8;
	mov.b64 	%rd4936, {%r5237, %r5236};
	xor.b64  	%rd4937, %rd4935, %rd4936;
	shr.u64 	%rd4938, %rd4752, 7;
	xor.b64  	%rd4939, %rd4937, %rd4938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5238,%dummy}, %rd4921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5239}, %rd4921;
	}
	shf.r.wrap.b32 	%r5240, %r5239, %r5238, 19;
	shf.r.wrap.b32 	%r5241, %r5238, %r5239, 19;
	mov.b64 	%rd4940, {%r5241, %r5240};
	shf.l.wrap.b32 	%r5242, %r5238, %r5239, 3;
	shf.l.wrap.b32 	%r5243, %r5239, %r5238, 3;
	mov.b64 	%rd4941, {%r5243, %r5242};
	xor.b64  	%rd4942, %rd4940, %rd4941;
	shr.u64 	%rd4943, %rd4921, 6;
	xor.b64  	%rd4944, %rd4942, %rd4943;
	add.s64 	%rd4945, %rd4939, %rd4739;
	add.s64 	%rd4946, %rd4945, %rd4856;
	add.s64 	%rd4947, %rd4946, %rd4944;
	shf.r.wrap.b32 	%r5244, %r5119, %r5118, 1;
	shf.r.wrap.b32 	%r5245, %r5118, %r5119, 1;
	mov.b64 	%rd4948, {%r5245, %r5244};
	shf.r.wrap.b32 	%r5246, %r5119, %r5118, 8;
	shf.r.wrap.b32 	%r5247, %r5118, %r5119, 8;
	mov.b64 	%rd4949, {%r5247, %r5246};
	xor.b64  	%rd4950, %rd4948, %rd4949;
	shr.u64 	%rd4951, %rd4765, 7;
	xor.b64  	%rd4952, %rd4950, %rd4951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5248,%dummy}, %rd4934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5249}, %rd4934;
	}
	shf.r.wrap.b32 	%r5250, %r5249, %r5248, 19;
	shf.r.wrap.b32 	%r5251, %r5248, %r5249, 19;
	mov.b64 	%rd4953, {%r5251, %r5250};
	shf.l.wrap.b32 	%r5252, %r5248, %r5249, 3;
	shf.l.wrap.b32 	%r5253, %r5249, %r5248, 3;
	mov.b64 	%rd4954, {%r5253, %r5252};
	xor.b64  	%rd4955, %rd4953, %rd4954;
	shr.u64 	%rd4956, %rd4934, 6;
	xor.b64  	%rd4957, %rd4955, %rd4956;
	add.s64 	%rd4958, %rd4952, %rd4752;
	add.s64 	%rd4959, %rd4958, %rd4869;
	add.s64 	%rd4960, %rd4959, %rd4957;
	shf.r.wrap.b32 	%r5254, %r5129, %r5128, 1;
	shf.r.wrap.b32 	%r5255, %r5128, %r5129, 1;
	mov.b64 	%rd4961, {%r5255, %r5254};
	shf.r.wrap.b32 	%r5256, %r5129, %r5128, 8;
	shf.r.wrap.b32 	%r5257, %r5128, %r5129, 8;
	mov.b64 	%rd4962, {%r5257, %r5256};
	xor.b64  	%rd4963, %rd4961, %rd4962;
	shr.u64 	%rd4964, %rd4778, 7;
	xor.b64  	%rd4965, %rd4963, %rd4964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5258,%dummy}, %rd4947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5259}, %rd4947;
	}
	shf.r.wrap.b32 	%r5260, %r5259, %r5258, 19;
	shf.r.wrap.b32 	%r5261, %r5258, %r5259, 19;
	mov.b64 	%rd4966, {%r5261, %r5260};
	shf.l.wrap.b32 	%r5262, %r5258, %r5259, 3;
	shf.l.wrap.b32 	%r5263, %r5259, %r5258, 3;
	mov.b64 	%rd4967, {%r5263, %r5262};
	xor.b64  	%rd4968, %rd4966, %rd4967;
	shr.u64 	%rd4969, %rd4947, 6;
	xor.b64  	%rd4970, %rd4968, %rd4969;
	add.s64 	%rd4971, %rd4965, %rd4765;
	add.s64 	%rd4972, %rd4971, %rd4882;
	add.s64 	%rd4973, %rd4972, %rd4970;
	shf.r.wrap.b32 	%r5264, %r5139, %r5138, 1;
	shf.r.wrap.b32 	%r5265, %r5138, %r5139, 1;
	mov.b64 	%rd4974, {%r5265, %r5264};
	shf.r.wrap.b32 	%r5266, %r5139, %r5138, 8;
	shf.r.wrap.b32 	%r5267, %r5138, %r5139, 8;
	mov.b64 	%rd4975, {%r5267, %r5266};
	xor.b64  	%rd4976, %rd4974, %rd4975;
	shr.u64 	%rd4977, %rd4791, 7;
	xor.b64  	%rd4978, %rd4976, %rd4977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5268,%dummy}, %rd4960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5269}, %rd4960;
	}
	shf.r.wrap.b32 	%r5270, %r5269, %r5268, 19;
	shf.r.wrap.b32 	%r5271, %r5268, %r5269, 19;
	mov.b64 	%rd4979, {%r5271, %r5270};
	shf.l.wrap.b32 	%r5272, %r5268, %r5269, 3;
	shf.l.wrap.b32 	%r5273, %r5269, %r5268, 3;
	mov.b64 	%rd4980, {%r5273, %r5272};
	xor.b64  	%rd4981, %rd4979, %rd4980;
	shr.u64 	%rd4982, %rd4960, 6;
	xor.b64  	%rd4983, %rd4981, %rd4982;
	add.s64 	%rd4984, %rd4978, %rd4778;
	add.s64 	%rd4985, %rd4984, %rd4895;
	add.s64 	%rd4986, %rd4985, %rd4983;
	shf.r.wrap.b32 	%r5274, %r5149, %r5148, 1;
	shf.r.wrap.b32 	%r5275, %r5148, %r5149, 1;
	mov.b64 	%rd4987, {%r5275, %r5274};
	shf.r.wrap.b32 	%r5276, %r5149, %r5148, 8;
	shf.r.wrap.b32 	%r5277, %r5148, %r5149, 8;
	mov.b64 	%rd4988, {%r5277, %r5276};
	xor.b64  	%rd4989, %rd4987, %rd4988;
	shr.u64 	%rd4990, %rd4804, 7;
	xor.b64  	%rd4991, %rd4989, %rd4990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5278,%dummy}, %rd4973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5279}, %rd4973;
	}
	shf.r.wrap.b32 	%r5280, %r5279, %r5278, 19;
	shf.r.wrap.b32 	%r5281, %r5278, %r5279, 19;
	mov.b64 	%rd4992, {%r5281, %r5280};
	shf.l.wrap.b32 	%r5282, %r5278, %r5279, 3;
	shf.l.wrap.b32 	%r5283, %r5279, %r5278, 3;
	mov.b64 	%rd4993, {%r5283, %r5282};
	xor.b64  	%rd4994, %rd4992, %rd4993;
	shr.u64 	%rd4995, %rd4973, 6;
	xor.b64  	%rd4996, %rd4994, %rd4995;
	add.s64 	%rd4997, %rd4991, %rd4791;
	add.s64 	%rd4998, %rd4997, %rd4908;
	add.s64 	%rd4999, %rd4998, %rd4996;
	shf.r.wrap.b32 	%r5284, %r5159, %r5158, 1;
	shf.r.wrap.b32 	%r5285, %r5158, %r5159, 1;
	mov.b64 	%rd5000, {%r5285, %r5284};
	shf.r.wrap.b32 	%r5286, %r5159, %r5158, 8;
	shf.r.wrap.b32 	%r5287, %r5158, %r5159, 8;
	mov.b64 	%rd5001, {%r5287, %r5286};
	xor.b64  	%rd5002, %rd5000, %rd5001;
	shr.u64 	%rd5003, %rd4817, 7;
	xor.b64  	%rd5004, %rd5002, %rd5003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5288,%dummy}, %rd4986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5289}, %rd4986;
	}
	shf.r.wrap.b32 	%r5290, %r5289, %r5288, 19;
	shf.r.wrap.b32 	%r5291, %r5288, %r5289, 19;
	mov.b64 	%rd5005, {%r5291, %r5290};
	shf.l.wrap.b32 	%r5292, %r5288, %r5289, 3;
	shf.l.wrap.b32 	%r5293, %r5289, %r5288, 3;
	mov.b64 	%rd5006, {%r5293, %r5292};
	xor.b64  	%rd5007, %rd5005, %rd5006;
	shr.u64 	%rd5008, %rd4986, 6;
	xor.b64  	%rd5009, %rd5007, %rd5008;
	add.s64 	%rd5010, %rd5004, %rd4804;
	add.s64 	%rd5011, %rd5010, %rd4921;
	add.s64 	%rd5012, %rd5011, %rd5009;
	shf.r.wrap.b32 	%r5294, %r5169, %r5168, 1;
	shf.r.wrap.b32 	%r5295, %r5168, %r5169, 1;
	mov.b64 	%rd5013, {%r5295, %r5294};
	shf.r.wrap.b32 	%r5296, %r5169, %r5168, 8;
	shf.r.wrap.b32 	%r5297, %r5168, %r5169, 8;
	mov.b64 	%rd5014, {%r5297, %r5296};
	xor.b64  	%rd5015, %rd5013, %rd5014;
	shr.u64 	%rd5016, %rd4830, 7;
	xor.b64  	%rd5017, %rd5015, %rd5016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5298,%dummy}, %rd4999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5299}, %rd4999;
	}
	shf.r.wrap.b32 	%r5300, %r5299, %r5298, 19;
	shf.r.wrap.b32 	%r5301, %r5298, %r5299, 19;
	mov.b64 	%rd5018, {%r5301, %r5300};
	shf.l.wrap.b32 	%r5302, %r5298, %r5299, 3;
	shf.l.wrap.b32 	%r5303, %r5299, %r5298, 3;
	mov.b64 	%rd5019, {%r5303, %r5302};
	xor.b64  	%rd5020, %rd5018, %rd5019;
	shr.u64 	%rd5021, %rd4999, 6;
	xor.b64  	%rd5022, %rd5020, %rd5021;
	add.s64 	%rd5023, %rd5017, %rd4817;
	add.s64 	%rd5024, %rd5023, %rd4934;
	add.s64 	%rd5025, %rd5024, %rd5022;
	shf.r.wrap.b32 	%r5304, %r5179, %r5178, 1;
	shf.r.wrap.b32 	%r5305, %r5178, %r5179, 1;
	mov.b64 	%rd5026, {%r5305, %r5304};
	shf.r.wrap.b32 	%r5306, %r5179, %r5178, 8;
	shf.r.wrap.b32 	%r5307, %r5178, %r5179, 8;
	mov.b64 	%rd5027, {%r5307, %r5306};
	xor.b64  	%rd5028, %rd5026, %rd5027;
	shr.u64 	%rd5029, %rd4843, 7;
	xor.b64  	%rd5030, %rd5028, %rd5029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5308,%dummy}, %rd5012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5309}, %rd5012;
	}
	shf.r.wrap.b32 	%r5310, %r5309, %r5308, 19;
	shf.r.wrap.b32 	%r5311, %r5308, %r5309, 19;
	mov.b64 	%rd5031, {%r5311, %r5310};
	shf.l.wrap.b32 	%r5312, %r5308, %r5309, 3;
	shf.l.wrap.b32 	%r5313, %r5309, %r5308, 3;
	mov.b64 	%rd5032, {%r5313, %r5312};
	xor.b64  	%rd5033, %rd5031, %rd5032;
	shr.u64 	%rd5034, %rd5012, 6;
	xor.b64  	%rd5035, %rd5033, %rd5034;
	add.s64 	%rd5036, %rd5030, %rd4830;
	add.s64 	%rd5037, %rd5036, %rd4947;
	add.s64 	%rd5038, %rd5037, %rd5035;
	shf.r.wrap.b32 	%r5314, %r5189, %r5188, 1;
	shf.r.wrap.b32 	%r5315, %r5188, %r5189, 1;
	mov.b64 	%rd5039, {%r5315, %r5314};
	shf.r.wrap.b32 	%r5316, %r5189, %r5188, 8;
	shf.r.wrap.b32 	%r5317, %r5188, %r5189, 8;
	mov.b64 	%rd5040, {%r5317, %r5316};
	xor.b64  	%rd5041, %rd5039, %rd5040;
	shr.u64 	%rd5042, %rd4856, 7;
	xor.b64  	%rd5043, %rd5041, %rd5042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5318,%dummy}, %rd5025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5319}, %rd5025;
	}
	shf.r.wrap.b32 	%r5320, %r5319, %r5318, 19;
	shf.r.wrap.b32 	%r5321, %r5318, %r5319, 19;
	mov.b64 	%rd5044, {%r5321, %r5320};
	shf.l.wrap.b32 	%r5322, %r5318, %r5319, 3;
	shf.l.wrap.b32 	%r5323, %r5319, %r5318, 3;
	mov.b64 	%rd5045, {%r5323, %r5322};
	xor.b64  	%rd5046, %rd5044, %rd5045;
	shr.u64 	%rd5047, %rd5025, 6;
	xor.b64  	%rd5048, %rd5046, %rd5047;
	add.s64 	%rd5049, %rd5043, %rd4843;
	add.s64 	%rd5050, %rd5049, %rd4960;
	add.s64 	%rd5051, %rd5050, %rd5048;
	shf.r.wrap.b32 	%r5324, %r5199, %r5198, 1;
	shf.r.wrap.b32 	%r5325, %r5198, %r5199, 1;
	mov.b64 	%rd5052, {%r5325, %r5324};
	shf.r.wrap.b32 	%r5326, %r5199, %r5198, 8;
	shf.r.wrap.b32 	%r5327, %r5198, %r5199, 8;
	mov.b64 	%rd5053, {%r5327, %r5326};
	xor.b64  	%rd5054, %rd5052, %rd5053;
	shr.u64 	%rd5055, %rd4869, 7;
	xor.b64  	%rd5056, %rd5054, %rd5055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5328,%dummy}, %rd5038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5329}, %rd5038;
	}
	shf.r.wrap.b32 	%r5330, %r5329, %r5328, 19;
	shf.r.wrap.b32 	%r5331, %r5328, %r5329, 19;
	mov.b64 	%rd5057, {%r5331, %r5330};
	shf.l.wrap.b32 	%r5332, %r5328, %r5329, 3;
	shf.l.wrap.b32 	%r5333, %r5329, %r5328, 3;
	mov.b64 	%rd5058, {%r5333, %r5332};
	xor.b64  	%rd5059, %rd5057, %rd5058;
	shr.u64 	%rd5060, %rd5038, 6;
	xor.b64  	%rd5061, %rd5059, %rd5060;
	add.s64 	%rd5062, %rd5056, %rd4856;
	add.s64 	%rd5063, %rd5062, %rd4973;
	add.s64 	%rd5064, %rd5063, %rd5061;
	shf.r.wrap.b32 	%r5334, %r5209, %r5208, 1;
	shf.r.wrap.b32 	%r5335, %r5208, %r5209, 1;
	mov.b64 	%rd5065, {%r5335, %r5334};
	shf.r.wrap.b32 	%r5336, %r5209, %r5208, 8;
	shf.r.wrap.b32 	%r5337, %r5208, %r5209, 8;
	mov.b64 	%rd5066, {%r5337, %r5336};
	xor.b64  	%rd5067, %rd5065, %rd5066;
	shr.u64 	%rd5068, %rd4882, 7;
	xor.b64  	%rd5069, %rd5067, %rd5068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5338,%dummy}, %rd5051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5339}, %rd5051;
	}
	shf.r.wrap.b32 	%r5340, %r5339, %r5338, 19;
	shf.r.wrap.b32 	%r5341, %r5338, %r5339, 19;
	mov.b64 	%rd5070, {%r5341, %r5340};
	shf.l.wrap.b32 	%r5342, %r5338, %r5339, 3;
	shf.l.wrap.b32 	%r5343, %r5339, %r5338, 3;
	mov.b64 	%rd5071, {%r5343, %r5342};
	xor.b64  	%rd5072, %rd5070, %rd5071;
	shr.u64 	%rd5073, %rd5051, 6;
	xor.b64  	%rd5074, %rd5072, %rd5073;
	add.s64 	%rd5075, %rd5069, %rd4869;
	add.s64 	%rd5076, %rd5075, %rd4986;
	add.s64 	%rd5077, %rd5076, %rd5074;
	shf.r.wrap.b32 	%r5344, %r5219, %r5218, 1;
	shf.r.wrap.b32 	%r5345, %r5218, %r5219, 1;
	mov.b64 	%rd5078, {%r5345, %r5344};
	shf.r.wrap.b32 	%r5346, %r5219, %r5218, 8;
	shf.r.wrap.b32 	%r5347, %r5218, %r5219, 8;
	mov.b64 	%rd5079, {%r5347, %r5346};
	xor.b64  	%rd5080, %rd5078, %rd5079;
	shr.u64 	%rd5081, %rd4895, 7;
	xor.b64  	%rd5082, %rd5080, %rd5081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5348,%dummy}, %rd5064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5349}, %rd5064;
	}
	shf.r.wrap.b32 	%r5350, %r5349, %r5348, 19;
	shf.r.wrap.b32 	%r5351, %r5348, %r5349, 19;
	mov.b64 	%rd5083, {%r5351, %r5350};
	shf.l.wrap.b32 	%r5352, %r5348, %r5349, 3;
	shf.l.wrap.b32 	%r5353, %r5349, %r5348, 3;
	mov.b64 	%rd5084, {%r5353, %r5352};
	xor.b64  	%rd5085, %rd5083, %rd5084;
	shr.u64 	%rd5086, %rd5064, 6;
	xor.b64  	%rd5087, %rd5085, %rd5086;
	add.s64 	%rd5088, %rd5082, %rd4882;
	add.s64 	%rd5089, %rd5088, %rd4999;
	add.s64 	%rd5090, %rd5089, %rd5087;
	shf.r.wrap.b32 	%r5354, %r5229, %r5228, 1;
	shf.r.wrap.b32 	%r5355, %r5228, %r5229, 1;
	mov.b64 	%rd5091, {%r5355, %r5354};
	shf.r.wrap.b32 	%r5356, %r5229, %r5228, 8;
	shf.r.wrap.b32 	%r5357, %r5228, %r5229, 8;
	mov.b64 	%rd5092, {%r5357, %r5356};
	xor.b64  	%rd5093, %rd5091, %rd5092;
	shr.u64 	%rd5094, %rd4908, 7;
	xor.b64  	%rd5095, %rd5093, %rd5094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5358,%dummy}, %rd5077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5359}, %rd5077;
	}
	shf.r.wrap.b32 	%r5360, %r5359, %r5358, 19;
	shf.r.wrap.b32 	%r5361, %r5358, %r5359, 19;
	mov.b64 	%rd5096, {%r5361, %r5360};
	shf.l.wrap.b32 	%r5362, %r5358, %r5359, 3;
	shf.l.wrap.b32 	%r5363, %r5359, %r5358, 3;
	mov.b64 	%rd5097, {%r5363, %r5362};
	xor.b64  	%rd5098, %rd5096, %rd5097;
	shr.u64 	%rd5099, %rd5077, 6;
	xor.b64  	%rd5100, %rd5098, %rd5099;
	add.s64 	%rd5101, %rd5095, %rd4895;
	add.s64 	%rd5102, %rd5101, %rd5012;
	add.s64 	%rd5103, %rd5102, %rd5100;
	shf.r.wrap.b32 	%r5364, %r5239, %r5238, 1;
	shf.r.wrap.b32 	%r5365, %r5238, %r5239, 1;
	mov.b64 	%rd5104, {%r5365, %r5364};
	shf.r.wrap.b32 	%r5366, %r5239, %r5238, 8;
	shf.r.wrap.b32 	%r5367, %r5238, %r5239, 8;
	mov.b64 	%rd5105, {%r5367, %r5366};
	xor.b64  	%rd5106, %rd5104, %rd5105;
	shr.u64 	%rd5107, %rd4921, 7;
	xor.b64  	%rd5108, %rd5106, %rd5107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5368,%dummy}, %rd5090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5369}, %rd5090;
	}
	shf.r.wrap.b32 	%r5370, %r5369, %r5368, 19;
	shf.r.wrap.b32 	%r5371, %r5368, %r5369, 19;
	mov.b64 	%rd5109, {%r5371, %r5370};
	shf.l.wrap.b32 	%r5372, %r5368, %r5369, 3;
	shf.l.wrap.b32 	%r5373, %r5369, %r5368, 3;
	mov.b64 	%rd5110, {%r5373, %r5372};
	xor.b64  	%rd5111, %rd5109, %rd5110;
	shr.u64 	%rd5112, %rd5090, 6;
	xor.b64  	%rd5113, %rd5111, %rd5112;
	add.s64 	%rd5114, %rd5108, %rd4908;
	add.s64 	%rd5115, %rd5114, %rd5025;
	add.s64 	%rd5116, %rd5115, %rd5113;
	shf.r.wrap.b32 	%r5374, %r5249, %r5248, 1;
	shf.r.wrap.b32 	%r5375, %r5248, %r5249, 1;
	mov.b64 	%rd5117, {%r5375, %r5374};
	shf.r.wrap.b32 	%r5376, %r5249, %r5248, 8;
	shf.r.wrap.b32 	%r5377, %r5248, %r5249, 8;
	mov.b64 	%rd5118, {%r5377, %r5376};
	xor.b64  	%rd5119, %rd5117, %rd5118;
	shr.u64 	%rd5120, %rd4934, 7;
	xor.b64  	%rd5121, %rd5119, %rd5120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5378,%dummy}, %rd5103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5379}, %rd5103;
	}
	shf.r.wrap.b32 	%r5380, %r5379, %r5378, 19;
	shf.r.wrap.b32 	%r5381, %r5378, %r5379, 19;
	mov.b64 	%rd5122, {%r5381, %r5380};
	shf.l.wrap.b32 	%r5382, %r5378, %r5379, 3;
	shf.l.wrap.b32 	%r5383, %r5379, %r5378, 3;
	mov.b64 	%rd5123, {%r5383, %r5382};
	xor.b64  	%rd5124, %rd5122, %rd5123;
	shr.u64 	%rd5125, %rd5103, 6;
	xor.b64  	%rd5126, %rd5124, %rd5125;
	add.s64 	%rd5127, %rd5121, %rd4921;
	add.s64 	%rd5128, %rd5127, %rd5038;
	add.s64 	%rd5129, %rd5128, %rd5126;
	shf.r.wrap.b32 	%r5384, %r5259, %r5258, 1;
	shf.r.wrap.b32 	%r5385, %r5258, %r5259, 1;
	mov.b64 	%rd5130, {%r5385, %r5384};
	shf.r.wrap.b32 	%r5386, %r5259, %r5258, 8;
	shf.r.wrap.b32 	%r5387, %r5258, %r5259, 8;
	mov.b64 	%rd5131, {%r5387, %r5386};
	xor.b64  	%rd5132, %rd5130, %rd5131;
	shr.u64 	%rd5133, %rd4947, 7;
	xor.b64  	%rd5134, %rd5132, %rd5133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5388,%dummy}, %rd5116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5389}, %rd5116;
	}
	shf.r.wrap.b32 	%r5390, %r5389, %r5388, 19;
	shf.r.wrap.b32 	%r5391, %r5388, %r5389, 19;
	mov.b64 	%rd5135, {%r5391, %r5390};
	shf.l.wrap.b32 	%r5392, %r5388, %r5389, 3;
	shf.l.wrap.b32 	%r5393, %r5389, %r5388, 3;
	mov.b64 	%rd5136, {%r5393, %r5392};
	xor.b64  	%rd5137, %rd5135, %rd5136;
	shr.u64 	%rd5138, %rd5116, 6;
	xor.b64  	%rd5139, %rd5137, %rd5138;
	add.s64 	%rd5140, %rd5134, %rd4934;
	add.s64 	%rd5141, %rd5140, %rd5051;
	add.s64 	%rd5142, %rd5141, %rd5139;
	shf.r.wrap.b32 	%r5394, %r5269, %r5268, 1;
	shf.r.wrap.b32 	%r5395, %r5268, %r5269, 1;
	mov.b64 	%rd5143, {%r5395, %r5394};
	shf.r.wrap.b32 	%r5396, %r5269, %r5268, 8;
	shf.r.wrap.b32 	%r5397, %r5268, %r5269, 8;
	mov.b64 	%rd5144, {%r5397, %r5396};
	xor.b64  	%rd5145, %rd5143, %rd5144;
	shr.u64 	%rd5146, %rd4960, 7;
	xor.b64  	%rd5147, %rd5145, %rd5146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5398,%dummy}, %rd5129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5399}, %rd5129;
	}
	shf.r.wrap.b32 	%r5400, %r5399, %r5398, 19;
	shf.r.wrap.b32 	%r5401, %r5398, %r5399, 19;
	mov.b64 	%rd5148, {%r5401, %r5400};
	shf.l.wrap.b32 	%r5402, %r5398, %r5399, 3;
	shf.l.wrap.b32 	%r5403, %r5399, %r5398, 3;
	mov.b64 	%rd5149, {%r5403, %r5402};
	xor.b64  	%rd5150, %rd5148, %rd5149;
	shr.u64 	%rd5151, %rd5129, 6;
	xor.b64  	%rd5152, %rd5150, %rd5151;
	add.s64 	%rd5153, %rd5147, %rd4947;
	add.s64 	%rd5154, %rd5153, %rd5064;
	add.s64 	%rd5155, %rd5154, %rd5152;
	shf.r.wrap.b32 	%r5404, %r5279, %r5278, 1;
	shf.r.wrap.b32 	%r5405, %r5278, %r5279, 1;
	mov.b64 	%rd5156, {%r5405, %r5404};
	shf.r.wrap.b32 	%r5406, %r5279, %r5278, 8;
	shf.r.wrap.b32 	%r5407, %r5278, %r5279, 8;
	mov.b64 	%rd5157, {%r5407, %r5406};
	xor.b64  	%rd5158, %rd5156, %rd5157;
	shr.u64 	%rd5159, %rd4973, 7;
	xor.b64  	%rd5160, %rd5158, %rd5159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5408,%dummy}, %rd5142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5409}, %rd5142;
	}
	shf.r.wrap.b32 	%r5410, %r5409, %r5408, 19;
	shf.r.wrap.b32 	%r5411, %r5408, %r5409, 19;
	mov.b64 	%rd5161, {%r5411, %r5410};
	shf.l.wrap.b32 	%r5412, %r5408, %r5409, 3;
	shf.l.wrap.b32 	%r5413, %r5409, %r5408, 3;
	mov.b64 	%rd5162, {%r5413, %r5412};
	xor.b64  	%rd5163, %rd5161, %rd5162;
	shr.u64 	%rd5164, %rd5142, 6;
	xor.b64  	%rd5165, %rd5163, %rd5164;
	add.s64 	%rd5166, %rd5160, %rd4960;
	add.s64 	%rd5167, %rd5166, %rd5077;
	add.s64 	%rd5168, %rd5167, %rd5165;
	shf.r.wrap.b32 	%r5414, %r5289, %r5288, 1;
	shf.r.wrap.b32 	%r5415, %r5288, %r5289, 1;
	mov.b64 	%rd5169, {%r5415, %r5414};
	shf.r.wrap.b32 	%r5416, %r5289, %r5288, 8;
	shf.r.wrap.b32 	%r5417, %r5288, %r5289, 8;
	mov.b64 	%rd5170, {%r5417, %r5416};
	xor.b64  	%rd5171, %rd5169, %rd5170;
	shr.u64 	%rd5172, %rd4986, 7;
	xor.b64  	%rd5173, %rd5171, %rd5172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5418,%dummy}, %rd5155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5419}, %rd5155;
	}
	shf.r.wrap.b32 	%r5420, %r5419, %r5418, 19;
	shf.r.wrap.b32 	%r5421, %r5418, %r5419, 19;
	mov.b64 	%rd5174, {%r5421, %r5420};
	shf.l.wrap.b32 	%r5422, %r5418, %r5419, 3;
	shf.l.wrap.b32 	%r5423, %r5419, %r5418, 3;
	mov.b64 	%rd5175, {%r5423, %r5422};
	xor.b64  	%rd5176, %rd5174, %rd5175;
	shr.u64 	%rd5177, %rd5155, 6;
	xor.b64  	%rd5178, %rd5176, %rd5177;
	add.s64 	%rd5179, %rd5173, %rd4973;
	add.s64 	%rd5180, %rd5179, %rd5090;
	add.s64 	%rd5181, %rd5180, %rd5178;
	shf.r.wrap.b32 	%r5424, %r5299, %r5298, 1;
	shf.r.wrap.b32 	%r5425, %r5298, %r5299, 1;
	mov.b64 	%rd5182, {%r5425, %r5424};
	shf.r.wrap.b32 	%r5426, %r5299, %r5298, 8;
	shf.r.wrap.b32 	%r5427, %r5298, %r5299, 8;
	mov.b64 	%rd5183, {%r5427, %r5426};
	xor.b64  	%rd5184, %rd5182, %rd5183;
	shr.u64 	%rd5185, %rd4999, 7;
	xor.b64  	%rd5186, %rd5184, %rd5185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5428,%dummy}, %rd5168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5429}, %rd5168;
	}
	shf.r.wrap.b32 	%r5430, %r5429, %r5428, 19;
	shf.r.wrap.b32 	%r5431, %r5428, %r5429, 19;
	mov.b64 	%rd5187, {%r5431, %r5430};
	shf.l.wrap.b32 	%r5432, %r5428, %r5429, 3;
	shf.l.wrap.b32 	%r5433, %r5429, %r5428, 3;
	mov.b64 	%rd5188, {%r5433, %r5432};
	xor.b64  	%rd5189, %rd5187, %rd5188;
	shr.u64 	%rd5190, %rd5168, 6;
	xor.b64  	%rd5191, %rd5189, %rd5190;
	add.s64 	%rd5192, %rd5186, %rd4986;
	add.s64 	%rd5193, %rd5192, %rd5103;
	add.s64 	%rd5194, %rd5193, %rd5191;
	shf.r.wrap.b32 	%r5434, %r5309, %r5308, 1;
	shf.r.wrap.b32 	%r5435, %r5308, %r5309, 1;
	mov.b64 	%rd5195, {%r5435, %r5434};
	shf.r.wrap.b32 	%r5436, %r5309, %r5308, 8;
	shf.r.wrap.b32 	%r5437, %r5308, %r5309, 8;
	mov.b64 	%rd5196, {%r5437, %r5436};
	xor.b64  	%rd5197, %rd5195, %rd5196;
	shr.u64 	%rd5198, %rd5012, 7;
	xor.b64  	%rd5199, %rd5197, %rd5198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5438,%dummy}, %rd5181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5439}, %rd5181;
	}
	shf.r.wrap.b32 	%r5440, %r5439, %r5438, 19;
	shf.r.wrap.b32 	%r5441, %r5438, %r5439, 19;
	mov.b64 	%rd5200, {%r5441, %r5440};
	shf.l.wrap.b32 	%r5442, %r5438, %r5439, 3;
	shf.l.wrap.b32 	%r5443, %r5439, %r5438, 3;
	mov.b64 	%rd5201, {%r5443, %r5442};
	xor.b64  	%rd5202, %rd5200, %rd5201;
	shr.u64 	%rd5203, %rd5181, 6;
	xor.b64  	%rd5204, %rd5202, %rd5203;
	add.s64 	%rd5205, %rd5199, %rd4999;
	add.s64 	%rd5206, %rd5205, %rd5116;
	add.s64 	%rd5207, %rd5206, %rd5204;
	shf.r.wrap.b32 	%r5444, %r5319, %r5318, 1;
	shf.r.wrap.b32 	%r5445, %r5318, %r5319, 1;
	mov.b64 	%rd5208, {%r5445, %r5444};
	shf.r.wrap.b32 	%r5446, %r5319, %r5318, 8;
	shf.r.wrap.b32 	%r5447, %r5318, %r5319, 8;
	mov.b64 	%rd5209, {%r5447, %r5446};
	xor.b64  	%rd5210, %rd5208, %rd5209;
	shr.u64 	%rd5211, %rd5025, 7;
	xor.b64  	%rd5212, %rd5210, %rd5211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5448,%dummy}, %rd5194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5449}, %rd5194;
	}
	shf.r.wrap.b32 	%r5450, %r5449, %r5448, 19;
	shf.r.wrap.b32 	%r5451, %r5448, %r5449, 19;
	mov.b64 	%rd5213, {%r5451, %r5450};
	shf.l.wrap.b32 	%r5452, %r5448, %r5449, 3;
	shf.l.wrap.b32 	%r5453, %r5449, %r5448, 3;
	mov.b64 	%rd5214, {%r5453, %r5452};
	xor.b64  	%rd5215, %rd5213, %rd5214;
	shr.u64 	%rd5216, %rd5194, 6;
	xor.b64  	%rd5217, %rd5215, %rd5216;
	add.s64 	%rd5218, %rd5212, %rd5012;
	add.s64 	%rd5219, %rd5218, %rd5129;
	add.s64 	%rd5220, %rd5219, %rd5217;
	shf.r.wrap.b32 	%r5454, %r5329, %r5328, 1;
	shf.r.wrap.b32 	%r5455, %r5328, %r5329, 1;
	mov.b64 	%rd5221, {%r5455, %r5454};
	shf.r.wrap.b32 	%r5456, %r5329, %r5328, 8;
	shf.r.wrap.b32 	%r5457, %r5328, %r5329, 8;
	mov.b64 	%rd5222, {%r5457, %r5456};
	xor.b64  	%rd5223, %rd5221, %rd5222;
	shr.u64 	%rd5224, %rd5038, 7;
	xor.b64  	%rd5225, %rd5223, %rd5224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5458,%dummy}, %rd5207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5459}, %rd5207;
	}
	shf.r.wrap.b32 	%r5460, %r5459, %r5458, 19;
	shf.r.wrap.b32 	%r5461, %r5458, %r5459, 19;
	mov.b64 	%rd5226, {%r5461, %r5460};
	shf.l.wrap.b32 	%r5462, %r5458, %r5459, 3;
	shf.l.wrap.b32 	%r5463, %r5459, %r5458, 3;
	mov.b64 	%rd5227, {%r5463, %r5462};
	xor.b64  	%rd5228, %rd5226, %rd5227;
	shr.u64 	%rd5229, %rd5207, 6;
	xor.b64  	%rd5230, %rd5228, %rd5229;
	add.s64 	%rd5231, %rd5225, %rd5025;
	add.s64 	%rd5232, %rd5231, %rd5142;
	add.s64 	%rd5233, %rd5232, %rd5230;
	shf.r.wrap.b32 	%r5464, %r5339, %r5338, 1;
	shf.r.wrap.b32 	%r5465, %r5338, %r5339, 1;
	mov.b64 	%rd5234, {%r5465, %r5464};
	shf.r.wrap.b32 	%r5466, %r5339, %r5338, 8;
	shf.r.wrap.b32 	%r5467, %r5338, %r5339, 8;
	mov.b64 	%rd5235, {%r5467, %r5466};
	xor.b64  	%rd5236, %rd5234, %rd5235;
	shr.u64 	%rd5237, %rd5051, 7;
	xor.b64  	%rd5238, %rd5236, %rd5237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5468,%dummy}, %rd5220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5469}, %rd5220;
	}
	shf.r.wrap.b32 	%r5470, %r5469, %r5468, 19;
	shf.r.wrap.b32 	%r5471, %r5468, %r5469, 19;
	mov.b64 	%rd5239, {%r5471, %r5470};
	shf.l.wrap.b32 	%r5472, %r5468, %r5469, 3;
	shf.l.wrap.b32 	%r5473, %r5469, %r5468, 3;
	mov.b64 	%rd5240, {%r5473, %r5472};
	xor.b64  	%rd5241, %rd5239, %rd5240;
	shr.u64 	%rd5242, %rd5220, 6;
	xor.b64  	%rd5243, %rd5241, %rd5242;
	add.s64 	%rd5244, %rd5238, %rd5038;
	add.s64 	%rd5245, %rd5244, %rd5155;
	add.s64 	%rd5246, %rd5245, %rd5243;
	shf.r.wrap.b32 	%r5474, %r5349, %r5348, 1;
	shf.r.wrap.b32 	%r5475, %r5348, %r5349, 1;
	mov.b64 	%rd5247, {%r5475, %r5474};
	shf.r.wrap.b32 	%r5476, %r5349, %r5348, 8;
	shf.r.wrap.b32 	%r5477, %r5348, %r5349, 8;
	mov.b64 	%rd5248, {%r5477, %r5476};
	xor.b64  	%rd5249, %rd5247, %rd5248;
	shr.u64 	%rd5250, %rd5064, 7;
	xor.b64  	%rd5251, %rd5249, %rd5250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5478,%dummy}, %rd5233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5479}, %rd5233;
	}
	shf.r.wrap.b32 	%r5480, %r5479, %r5478, 19;
	shf.r.wrap.b32 	%r5481, %r5478, %r5479, 19;
	mov.b64 	%rd5252, {%r5481, %r5480};
	shf.l.wrap.b32 	%r5482, %r5478, %r5479, 3;
	shf.l.wrap.b32 	%r5483, %r5479, %r5478, 3;
	mov.b64 	%rd5253, {%r5483, %r5482};
	xor.b64  	%rd5254, %rd5252, %rd5253;
	shr.u64 	%rd5255, %rd5233, 6;
	xor.b64  	%rd5256, %rd5254, %rd5255;
	add.s64 	%rd5257, %rd5251, %rd5051;
	add.s64 	%rd5258, %rd5257, %rd5168;
	add.s64 	%rd5259, %rd5258, %rd5256;
	add.s64 	%rd5260, %rd40, %rd4127;
	add.s64 	%rd5261, %rd5260, -6534734903238641935;
	add.s64 	%rd5262, %rd120, %rd5260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5484,%dummy}, %rd5261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5485}, %rd5261;
	}
	shf.r.wrap.b32 	%r5486, %r5485, %r5484, 14;
	shf.r.wrap.b32 	%r5487, %r5484, %r5485, 14;
	mov.b64 	%rd5263, {%r5487, %r5486};
	shf.r.wrap.b32 	%r5488, %r5485, %r5484, 18;
	shf.r.wrap.b32 	%r5489, %r5484, %r5485, 18;
	mov.b64 	%rd5264, {%r5489, %r5488};
	xor.b64  	%rd5265, %rd5263, %rd5264;
	shf.l.wrap.b32 	%r5490, %r5484, %r5485, 23;
	shf.l.wrap.b32 	%r5491, %r5485, %r5484, 23;
	mov.b64 	%rd5266, {%r5491, %r5490};
	xor.b64  	%rd5267, %rd5265, %rd5266;
	and.b64  	%rd5268, %rd5261, 5840696475078001361;
	mov.u64 	%rd5269, 6534734903238641934;
	sub.s64 	%rd5270, %rd5269, %rd5260;
	and.b64  	%rd5271, %rd5270, -7276294671716946913;
	or.b64  	%rd5272, %rd5268, %rd5271;
	add.s64 	%rd5273, %rd5272, %rd5267;
	add.s64 	%rd5274, %rd5273, %rd41;
	add.s64 	%rd5275, %rd5274, %rd4147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5492,%dummy}, %rd5262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5493}, %rd5262;
	}
	shf.r.wrap.b32 	%r5494, %r5493, %r5492, 28;
	shf.r.wrap.b32 	%r5495, %r5492, %r5493, 28;
	mov.b64 	%rd5276, {%r5495, %r5494};
	shf.l.wrap.b32 	%r5496, %r5492, %r5493, 30;
	shf.l.wrap.b32 	%r5497, %r5493, %r5492, 30;
	mov.b64 	%rd5277, {%r5497, %r5496};
	xor.b64  	%rd5278, %rd5276, %rd5277;
	shf.l.wrap.b32 	%r5498, %r5492, %r5493, 25;
	shf.l.wrap.b32 	%r5499, %r5493, %r5492, 25;
	mov.b64 	%rd5279, {%r5499, %r5498};
	xor.b64  	%rd5280, %rd5278, %rd5279;
	and.b64  	%rd5281, %rd5262, -3355664534840381901;
	or.b64  	%rd5282, %rd5281, 3026882967131160840;
	add.s64 	%rd5283, %rd5280, %rd5282;
	add.s64 	%rd5284, %rd5283, %rd5275;
	add.s64 	%rd5285, %rd5275, 6625583534739731862;
	add.s64 	%rd5286, %rd5284, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5500,%dummy}, %rd5285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5501}, %rd5285;
	}
	shf.r.wrap.b32 	%r5502, %r5501, %r5500, 14;
	shf.r.wrap.b32 	%r5503, %r5500, %r5501, 14;
	mov.b64 	%rd5287, {%r5503, %r5502};
	shf.r.wrap.b32 	%r5504, %r5501, %r5500, 18;
	shf.r.wrap.b32 	%r5505, %r5500, %r5501, 18;
	mov.b64 	%rd5288, {%r5505, %r5504};
	xor.b64  	%rd5289, %rd5287, %rd5288;
	shf.l.wrap.b32 	%r5506, %r5500, %r5501, 23;
	shf.l.wrap.b32 	%r5507, %r5501, %r5500, 23;
	mov.b64 	%rd5290, {%r5507, %r5506};
	xor.b64  	%rd5291, %rd5289, %rd5290;
	and.b64  	%rd5292, %rd5285, %rd5261;
	mov.u64 	%rd5293, 2597788502115043945;
	sub.s64 	%rd5294, %rd5293, %rd5275;
	and.b64  	%rd5295, %rd5294, 5840696475078001361;
	or.b64  	%rd5296, %rd5292, %rd5295;
	add.s64 	%rd5297, %rd5296, %rd5291;
	add.s64 	%rd5298, %rd5297, %rd42;
	add.s64 	%rd5299, %rd5298, %rd4167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5508,%dummy}, %rd5286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5509}, %rd5286;
	}
	shf.r.wrap.b32 	%r5510, %r5509, %r5508, 28;
	shf.r.wrap.b32 	%r5511, %r5508, %r5509, 28;
	mov.b64 	%rd5300, {%r5511, %r5510};
	shf.l.wrap.b32 	%r5512, %r5508, %r5509, 30;
	shf.l.wrap.b32 	%r5513, %r5509, %r5508, 30;
	mov.b64 	%rd5301, {%r5513, %r5512};
	xor.b64  	%rd5302, %rd5300, %rd5301;
	shf.l.wrap.b32 	%r5514, %r5508, %r5509, 25;
	shf.l.wrap.b32 	%r5515, %r5509, %r5508, 25;
	mov.b64 	%rd5303, {%r5515, %r5514};
	xor.b64  	%rd5304, %rd5302, %rd5303;
	xor.b64  	%rd5305, %rd5262, 7640891576956012808;
	and.b64  	%rd5306, %rd5286, %rd5305;
	and.b64  	%rd5307, %rd5262, 7640891576956012808;
	xor.b64  	%rd5308, %rd5306, %rd5307;
	add.s64 	%rd5309, %rd5304, %rd5308;
	add.s64 	%rd5310, %rd5309, %rd5299;
	add.s64 	%rd5311, %rd5299, 6227659224458531674;
	add.s64 	%rd5312, %rd5310, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5516,%dummy}, %rd5311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5517}, %rd5311;
	}
	shf.r.wrap.b32 	%r5518, %r5517, %r5516, 14;
	shf.r.wrap.b32 	%r5519, %r5516, %r5517, 14;
	mov.b64 	%rd5313, {%r5519, %r5518};
	shf.r.wrap.b32 	%r5520, %r5517, %r5516, 18;
	shf.r.wrap.b32 	%r5521, %r5516, %r5517, 18;
	mov.b64 	%rd5314, {%r5521, %r5520};
	xor.b64  	%rd5315, %rd5313, %rd5314;
	shf.l.wrap.b32 	%r5522, %r5516, %r5517, 23;
	shf.l.wrap.b32 	%r5523, %r5517, %r5516, 23;
	mov.b64 	%rd5316, {%r5523, %r5522};
	xor.b64  	%rd5317, %rd5315, %rd5316;
	and.b64  	%rd5318, %rd5311, %rd5285;
	mov.u64 	%rd5319, -6227659224458531675;
	sub.s64 	%rd5320, %rd5319, %rd5299;
	and.b64  	%rd5321, %rd5261, %rd5320;
	or.b64  	%rd5322, %rd5318, %rd5321;
	add.s64 	%rd5323, %rd5322, %rd5317;
	add.s64 	%rd5324, %rd5323, %rd43;
	add.s64 	%rd5325, %rd5324, %rd4187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5524,%dummy}, %rd5312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5525}, %rd5312;
	}
	shf.r.wrap.b32 	%r5526, %r5525, %r5524, 28;
	shf.r.wrap.b32 	%r5527, %r5524, %r5525, 28;
	mov.b64 	%rd5326, {%r5527, %r5526};
	shf.l.wrap.b32 	%r5528, %r5524, %r5525, 30;
	shf.l.wrap.b32 	%r5529, %r5525, %r5524, 30;
	mov.b64 	%rd5327, {%r5529, %r5528};
	xor.b64  	%rd5328, %rd5326, %rd5327;
	shf.l.wrap.b32 	%r5530, %r5524, %r5525, 25;
	shf.l.wrap.b32 	%r5531, %r5525, %r5524, 25;
	mov.b64 	%rd5329, {%r5531, %r5530};
	xor.b64  	%rd5330, %rd5328, %rd5329;
	xor.b64  	%rd5331, %rd5286, %rd5262;
	and.b64  	%rd5332, %rd5312, %rd5331;
	and.b64  	%rd5333, %rd5286, %rd5262;
	xor.b64  	%rd5334, %rd5332, %rd5333;
	add.s64 	%rd5335, %rd5330, %rd5334;
	add.s64 	%rd5336, %rd5335, %rd5325;
	add.s64 	%rd5337, %rd5325, -4965156021675537447;
	add.s64 	%rd5338, %rd5336, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5532,%dummy}, %rd5337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5533}, %rd5337;
	}
	shf.r.wrap.b32 	%r5534, %r5533, %r5532, 14;
	shf.r.wrap.b32 	%r5535, %r5532, %r5533, 14;
	mov.b64 	%rd5339, {%r5535, %r5534};
	shf.r.wrap.b32 	%r5536, %r5533, %r5532, 18;
	shf.r.wrap.b32 	%r5537, %r5532, %r5533, 18;
	mov.b64 	%rd5340, {%r5537, %r5536};
	xor.b64  	%rd5341, %rd5339, %rd5340;
	shf.l.wrap.b32 	%r5538, %r5532, %r5533, 23;
	shf.l.wrap.b32 	%r5539, %r5533, %r5532, 23;
	mov.b64 	%rd5342, {%r5539, %r5538};
	xor.b64  	%rd5343, %rd5341, %rd5342;
	and.b64  	%rd5344, %rd5337, %rd5311;
	mov.u64 	%rd5345, 4965156021675537446;
	sub.s64 	%rd5346, %rd5345, %rd5325;
	and.b64  	%rd5347, %rd5285, %rd5346;
	or.b64  	%rd5348, %rd5344, %rd5347;
	add.s64 	%rd5349, %rd5348, %rd5261;
	add.s64 	%rd5350, %rd5349, %rd5343;
	add.s64 	%rd5351, %rd5350, %rd44;
	add.s64 	%rd5352, %rd5351, %rd4207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5540,%dummy}, %rd5338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5541}, %rd5338;
	}
	shf.r.wrap.b32 	%r5542, %r5541, %r5540, 28;
	shf.r.wrap.b32 	%r5543, %r5540, %r5541, 28;
	mov.b64 	%rd5353, {%r5543, %r5542};
	shf.l.wrap.b32 	%r5544, %r5540, %r5541, 30;
	shf.l.wrap.b32 	%r5545, %r5541, %r5540, 30;
	mov.b64 	%rd5354, {%r5545, %r5544};
	xor.b64  	%rd5355, %rd5353, %rd5354;
	shf.l.wrap.b32 	%r5546, %r5540, %r5541, 25;
	shf.l.wrap.b32 	%r5547, %r5541, %r5540, 25;
	mov.b64 	%rd5356, {%r5547, %r5546};
	xor.b64  	%rd5357, %rd5355, %rd5356;
	xor.b64  	%rd5358, %rd5312, %rd5286;
	and.b64  	%rd5359, %rd5338, %rd5358;
	and.b64  	%rd5360, %rd5312, %rd5286;
	xor.b64  	%rd5361, %rd5359, %rd5360;
	add.s64 	%rd5362, %rd5357, %rd5361;
	add.s64 	%rd5363, %rd5352, %rd5262;
	add.s64 	%rd5364, %rd5362, %rd5352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5548,%dummy}, %rd5363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5549}, %rd5363;
	}
	shf.r.wrap.b32 	%r5550, %r5549, %r5548, 14;
	shf.r.wrap.b32 	%r5551, %r5548, %r5549, 14;
	mov.b64 	%rd5365, {%r5551, %r5550};
	shf.r.wrap.b32 	%r5552, %r5549, %r5548, 18;
	shf.r.wrap.b32 	%r5553, %r5548, %r5549, 18;
	mov.b64 	%rd5366, {%r5553, %r5552};
	xor.b64  	%rd5367, %rd5365, %rd5366;
	shf.l.wrap.b32 	%r5554, %r5548, %r5549, 23;
	shf.l.wrap.b32 	%r5555, %r5549, %r5548, 23;
	mov.b64 	%rd5368, {%r5555, %r5554};
	xor.b64  	%rd5369, %rd5367, %rd5368;
	and.b64  	%rd5370, %rd5363, %rd5337;
	not.b64 	%rd5371, %rd5363;
	and.b64  	%rd5372, %rd5311, %rd5371;
	or.b64  	%rd5373, %rd5370, %rd5372;
	add.s64 	%rd5374, %rd5373, %rd5285;
	add.s64 	%rd5375, %rd5374, %rd5369;
	add.s64 	%rd5376, %rd5375, %rd45;
	add.s64 	%rd5377, %rd5376, %rd4227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5556,%dummy}, %rd5364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5557}, %rd5364;
	}
	shf.r.wrap.b32 	%r5558, %r5557, %r5556, 28;
	shf.r.wrap.b32 	%r5559, %r5556, %r5557, 28;
	mov.b64 	%rd5378, {%r5559, %r5558};
	shf.l.wrap.b32 	%r5560, %r5556, %r5557, 30;
	shf.l.wrap.b32 	%r5561, %r5557, %r5556, 30;
	mov.b64 	%rd5379, {%r5561, %r5560};
	xor.b64  	%rd5380, %rd5378, %rd5379;
	shf.l.wrap.b32 	%r5562, %r5556, %r5557, 25;
	shf.l.wrap.b32 	%r5563, %r5557, %r5556, 25;
	mov.b64 	%rd5381, {%r5563, %r5562};
	xor.b64  	%rd5382, %rd5380, %rd5381;
	xor.b64  	%rd5383, %rd5338, %rd5312;
	and.b64  	%rd5384, %rd5364, %rd5383;
	and.b64  	%rd5385, %rd5338, %rd5312;
	xor.b64  	%rd5386, %rd5384, %rd5385;
	add.s64 	%rd5387, %rd5382, %rd5386;
	add.s64 	%rd5388, %rd5377, %rd5286;
	add.s64 	%rd5389, %rd5387, %rd5377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5564,%dummy}, %rd5388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5565}, %rd5388;
	}
	shf.r.wrap.b32 	%r5566, %r5565, %r5564, 14;
	shf.r.wrap.b32 	%r5567, %r5564, %r5565, 14;
	mov.b64 	%rd5390, {%r5567, %r5566};
	shf.r.wrap.b32 	%r5568, %r5565, %r5564, 18;
	shf.r.wrap.b32 	%r5569, %r5564, %r5565, 18;
	mov.b64 	%rd5391, {%r5569, %r5568};
	xor.b64  	%rd5392, %rd5390, %rd5391;
	shf.l.wrap.b32 	%r5570, %r5564, %r5565, 23;
	shf.l.wrap.b32 	%r5571, %r5565, %r5564, 23;
	mov.b64 	%rd5393, {%r5571, %r5570};
	xor.b64  	%rd5394, %rd5392, %rd5393;
	and.b64  	%rd5395, %rd5388, %rd5363;
	not.b64 	%rd5396, %rd5388;
	and.b64  	%rd5397, %rd5337, %rd5396;
	or.b64  	%rd5398, %rd5395, %rd5397;
	add.s64 	%rd5399, %rd5398, %rd5311;
	add.s64 	%rd5400, %rd5399, %rd5394;
	add.s64 	%rd5401, %rd5400, %rd46;
	add.s64 	%rd5402, %rd5401, %rd4247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5572,%dummy}, %rd5389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5573}, %rd5389;
	}
	shf.r.wrap.b32 	%r5574, %r5573, %r5572, 28;
	shf.r.wrap.b32 	%r5575, %r5572, %r5573, 28;
	mov.b64 	%rd5403, {%r5575, %r5574};
	shf.l.wrap.b32 	%r5576, %r5572, %r5573, 30;
	shf.l.wrap.b32 	%r5577, %r5573, %r5572, 30;
	mov.b64 	%rd5404, {%r5577, %r5576};
	xor.b64  	%rd5405, %rd5403, %rd5404;
	shf.l.wrap.b32 	%r5578, %r5572, %r5573, 25;
	shf.l.wrap.b32 	%r5579, %r5573, %r5572, 25;
	mov.b64 	%rd5406, {%r5579, %r5578};
	xor.b64  	%rd5407, %rd5405, %rd5406;
	xor.b64  	%rd5408, %rd5364, %rd5338;
	and.b64  	%rd5409, %rd5389, %rd5408;
	and.b64  	%rd5410, %rd5364, %rd5338;
	xor.b64  	%rd5411, %rd5409, %rd5410;
	add.s64 	%rd5412, %rd5407, %rd5411;
	add.s64 	%rd5413, %rd5402, %rd5312;
	add.s64 	%rd5414, %rd5412, %rd5402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5580,%dummy}, %rd5413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5581}, %rd5413;
	}
	shf.r.wrap.b32 	%r5582, %r5581, %r5580, 14;
	shf.r.wrap.b32 	%r5583, %r5580, %r5581, 14;
	mov.b64 	%rd5415, {%r5583, %r5582};
	shf.r.wrap.b32 	%r5584, %r5581, %r5580, 18;
	shf.r.wrap.b32 	%r5585, %r5580, %r5581, 18;
	mov.b64 	%rd5416, {%r5585, %r5584};
	xor.b64  	%rd5417, %rd5415, %rd5416;
	shf.l.wrap.b32 	%r5586, %r5580, %r5581, 23;
	shf.l.wrap.b32 	%r5587, %r5581, %r5580, 23;
	mov.b64 	%rd5418, {%r5587, %r5586};
	xor.b64  	%rd5419, %rd5417, %rd5418;
	and.b64  	%rd5420, %rd5413, %rd5388;
	not.b64 	%rd5421, %rd5413;
	and.b64  	%rd5422, %rd5363, %rd5421;
	or.b64  	%rd5423, %rd5420, %rd5422;
	add.s64 	%rd5424, %rd5423, %rd5337;
	add.s64 	%rd5425, %rd5424, %rd5419;
	add.s64 	%rd5426, %rd5425, %rd47;
	add.s64 	%rd5427, %rd5426, %rd4267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5588,%dummy}, %rd5414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5589}, %rd5414;
	}
	shf.r.wrap.b32 	%r5590, %r5589, %r5588, 28;
	shf.r.wrap.b32 	%r5591, %r5588, %r5589, 28;
	mov.b64 	%rd5428, {%r5591, %r5590};
	shf.l.wrap.b32 	%r5592, %r5588, %r5589, 30;
	shf.l.wrap.b32 	%r5593, %r5589, %r5588, 30;
	mov.b64 	%rd5429, {%r5593, %r5592};
	xor.b64  	%rd5430, %rd5428, %rd5429;
	shf.l.wrap.b32 	%r5594, %r5588, %r5589, 25;
	shf.l.wrap.b32 	%r5595, %r5589, %r5588, 25;
	mov.b64 	%rd5431, {%r5595, %r5594};
	xor.b64  	%rd5432, %rd5430, %rd5431;
	xor.b64  	%rd5433, %rd5389, %rd5364;
	and.b64  	%rd5434, %rd5414, %rd5433;
	and.b64  	%rd5435, %rd5389, %rd5364;
	xor.b64  	%rd5436, %rd5434, %rd5435;
	add.s64 	%rd5437, %rd5432, %rd5436;
	add.s64 	%rd5438, %rd5427, %rd5338;
	add.s64 	%rd5439, %rd5437, %rd5427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5596,%dummy}, %rd5438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5597}, %rd5438;
	}
	shf.r.wrap.b32 	%r5598, %r5597, %r5596, 14;
	shf.r.wrap.b32 	%r5599, %r5596, %r5597, 14;
	mov.b64 	%rd5440, {%r5599, %r5598};
	shf.r.wrap.b32 	%r5600, %r5597, %r5596, 18;
	shf.r.wrap.b32 	%r5601, %r5596, %r5597, 18;
	mov.b64 	%rd5441, {%r5601, %r5600};
	xor.b64  	%rd5442, %rd5440, %rd5441;
	shf.l.wrap.b32 	%r5602, %r5596, %r5597, 23;
	shf.l.wrap.b32 	%r5603, %r5597, %r5596, 23;
	mov.b64 	%rd5443, {%r5603, %r5602};
	xor.b64  	%rd5444, %rd5442, %rd5443;
	and.b64  	%rd5445, %rd5438, %rd5413;
	not.b64 	%rd5446, %rd5438;
	and.b64  	%rd5447, %rd5388, %rd5446;
	or.b64  	%rd5448, %rd5445, %rd5447;
	add.s64 	%rd5449, %rd5448, %rd5363;
	add.s64 	%rd5450, %rd5449, %rd5444;
	add.s64 	%rd5451, %rd5450, %rd48;
	add.s64 	%rd5452, %rd5451, %rd4287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5604,%dummy}, %rd5439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5605}, %rd5439;
	}
	shf.r.wrap.b32 	%r5606, %r5605, %r5604, 28;
	shf.r.wrap.b32 	%r5607, %r5604, %r5605, 28;
	mov.b64 	%rd5453, {%r5607, %r5606};
	shf.l.wrap.b32 	%r5608, %r5604, %r5605, 30;
	shf.l.wrap.b32 	%r5609, %r5605, %r5604, 30;
	mov.b64 	%rd5454, {%r5609, %r5608};
	xor.b64  	%rd5455, %rd5453, %rd5454;
	shf.l.wrap.b32 	%r5610, %r5604, %r5605, 25;
	shf.l.wrap.b32 	%r5611, %r5605, %r5604, 25;
	mov.b64 	%rd5456, {%r5611, %r5610};
	xor.b64  	%rd5457, %rd5455, %rd5456;
	xor.b64  	%rd5458, %rd5414, %rd5389;
	and.b64  	%rd5459, %rd5439, %rd5458;
	and.b64  	%rd5460, %rd5414, %rd5389;
	xor.b64  	%rd5461, %rd5459, %rd5460;
	add.s64 	%rd5462, %rd5457, %rd5461;
	add.s64 	%rd5463, %rd5452, %rd5364;
	add.s64 	%rd5464, %rd5462, %rd5452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5612,%dummy}, %rd5463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5613}, %rd5463;
	}
	shf.r.wrap.b32 	%r5614, %r5613, %r5612, 14;
	shf.r.wrap.b32 	%r5615, %r5612, %r5613, 14;
	mov.b64 	%rd5465, {%r5615, %r5614};
	shf.r.wrap.b32 	%r5616, %r5613, %r5612, 18;
	shf.r.wrap.b32 	%r5617, %r5612, %r5613, 18;
	mov.b64 	%rd5466, {%r5617, %r5616};
	xor.b64  	%rd5467, %rd5465, %rd5466;
	shf.l.wrap.b32 	%r5618, %r5612, %r5613, 23;
	shf.l.wrap.b32 	%r5619, %r5613, %r5612, 23;
	mov.b64 	%rd5468, {%r5619, %r5618};
	xor.b64  	%rd5469, %rd5467, %rd5468;
	and.b64  	%rd5470, %rd5463, %rd5438;
	not.b64 	%rd5471, %rd5463;
	and.b64  	%rd5472, %rd5413, %rd5471;
	or.b64  	%rd5473, %rd5470, %rd5472;
	add.s64 	%rd5474, %rd5473, %rd5388;
	add.s64 	%rd5475, %rd5474, %rd5469;
	add.s64 	%rd5476, %rd5475, %rd49;
	add.s64 	%rd5477, %rd5476, %rd4307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5620,%dummy}, %rd5464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5621}, %rd5464;
	}
	shf.r.wrap.b32 	%r5622, %r5621, %r5620, 28;
	shf.r.wrap.b32 	%r5623, %r5620, %r5621, 28;
	mov.b64 	%rd5478, {%r5623, %r5622};
	shf.l.wrap.b32 	%r5624, %r5620, %r5621, 30;
	shf.l.wrap.b32 	%r5625, %r5621, %r5620, 30;
	mov.b64 	%rd5479, {%r5625, %r5624};
	xor.b64  	%rd5480, %rd5478, %rd5479;
	shf.l.wrap.b32 	%r5626, %r5620, %r5621, 25;
	shf.l.wrap.b32 	%r5627, %r5621, %r5620, 25;
	mov.b64 	%rd5481, {%r5627, %r5626};
	xor.b64  	%rd5482, %rd5480, %rd5481;
	xor.b64  	%rd5483, %rd5439, %rd5414;
	and.b64  	%rd5484, %rd5464, %rd5483;
	and.b64  	%rd5485, %rd5439, %rd5414;
	xor.b64  	%rd5486, %rd5484, %rd5485;
	add.s64 	%rd5487, %rd5482, %rd5486;
	add.s64 	%rd5488, %rd5477, %rd5389;
	add.s64 	%rd5489, %rd5487, %rd5477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5628,%dummy}, %rd5488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5629}, %rd5488;
	}
	shf.r.wrap.b32 	%r5630, %r5629, %r5628, 14;
	shf.r.wrap.b32 	%r5631, %r5628, %r5629, 14;
	mov.b64 	%rd5490, {%r5631, %r5630};
	shf.r.wrap.b32 	%r5632, %r5629, %r5628, 18;
	shf.r.wrap.b32 	%r5633, %r5628, %r5629, 18;
	mov.b64 	%rd5491, {%r5633, %r5632};
	xor.b64  	%rd5492, %rd5490, %rd5491;
	shf.l.wrap.b32 	%r5634, %r5628, %r5629, 23;
	shf.l.wrap.b32 	%r5635, %r5629, %r5628, 23;
	mov.b64 	%rd5493, {%r5635, %r5634};
	xor.b64  	%rd5494, %rd5492, %rd5493;
	and.b64  	%rd5495, %rd5488, %rd5463;
	not.b64 	%rd5496, %rd5488;
	and.b64  	%rd5497, %rd5438, %rd5496;
	or.b64  	%rd5498, %rd5495, %rd5497;
	add.s64 	%rd5499, %rd5498, %rd5413;
	add.s64 	%rd5500, %rd5499, %rd5494;
	add.s64 	%rd5501, %rd5500, %rd50;
	add.s64 	%rd5502, %rd5501, %rd4327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5636,%dummy}, %rd5489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5637}, %rd5489;
	}
	shf.r.wrap.b32 	%r5638, %r5637, %r5636, 28;
	shf.r.wrap.b32 	%r5639, %r5636, %r5637, 28;
	mov.b64 	%rd5503, {%r5639, %r5638};
	shf.l.wrap.b32 	%r5640, %r5636, %r5637, 30;
	shf.l.wrap.b32 	%r5641, %r5637, %r5636, 30;
	mov.b64 	%rd5504, {%r5641, %r5640};
	xor.b64  	%rd5505, %rd5503, %rd5504;
	shf.l.wrap.b32 	%r5642, %r5636, %r5637, 25;
	shf.l.wrap.b32 	%r5643, %r5637, %r5636, 25;
	mov.b64 	%rd5506, {%r5643, %r5642};
	xor.b64  	%rd5507, %rd5505, %rd5506;
	xor.b64  	%rd5508, %rd5464, %rd5439;
	and.b64  	%rd5509, %rd5489, %rd5508;
	and.b64  	%rd5510, %rd5464, %rd5439;
	xor.b64  	%rd5511, %rd5509, %rd5510;
	add.s64 	%rd5512, %rd5507, %rd5511;
	add.s64 	%rd5513, %rd5502, %rd5414;
	add.s64 	%rd5514, %rd5512, %rd5502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5644,%dummy}, %rd5513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5645}, %rd5513;
	}
	shf.r.wrap.b32 	%r5646, %r5645, %r5644, 14;
	shf.r.wrap.b32 	%r5647, %r5644, %r5645, 14;
	mov.b64 	%rd5515, {%r5647, %r5646};
	shf.r.wrap.b32 	%r5648, %r5645, %r5644, 18;
	shf.r.wrap.b32 	%r5649, %r5644, %r5645, 18;
	mov.b64 	%rd5516, {%r5649, %r5648};
	xor.b64  	%rd5517, %rd5515, %rd5516;
	shf.l.wrap.b32 	%r5650, %r5644, %r5645, 23;
	shf.l.wrap.b32 	%r5651, %r5645, %r5644, 23;
	mov.b64 	%rd5518, {%r5651, %r5650};
	xor.b64  	%rd5519, %rd5517, %rd5518;
	and.b64  	%rd5520, %rd5513, %rd5488;
	not.b64 	%rd5521, %rd5513;
	and.b64  	%rd5522, %rd5463, %rd5521;
	or.b64  	%rd5523, %rd5520, %rd5522;
	add.s64 	%rd5524, %rd5523, %rd5438;
	add.s64 	%rd5525, %rd5524, %rd5519;
	add.s64 	%rd5526, %rd5525, %rd51;
	add.s64 	%rd5527, %rd5526, %rd4347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5652,%dummy}, %rd5514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5653}, %rd5514;
	}
	shf.r.wrap.b32 	%r5654, %r5653, %r5652, 28;
	shf.r.wrap.b32 	%r5655, %r5652, %r5653, 28;
	mov.b64 	%rd5528, {%r5655, %r5654};
	shf.l.wrap.b32 	%r5656, %r5652, %r5653, 30;
	shf.l.wrap.b32 	%r5657, %r5653, %r5652, 30;
	mov.b64 	%rd5529, {%r5657, %r5656};
	xor.b64  	%rd5530, %rd5528, %rd5529;
	shf.l.wrap.b32 	%r5658, %r5652, %r5653, 25;
	shf.l.wrap.b32 	%r5659, %r5653, %r5652, 25;
	mov.b64 	%rd5531, {%r5659, %r5658};
	xor.b64  	%rd5532, %rd5530, %rd5531;
	xor.b64  	%rd5533, %rd5489, %rd5464;
	and.b64  	%rd5534, %rd5514, %rd5533;
	and.b64  	%rd5535, %rd5489, %rd5464;
	xor.b64  	%rd5536, %rd5534, %rd5535;
	add.s64 	%rd5537, %rd5532, %rd5536;
	add.s64 	%rd5538, %rd5527, %rd5439;
	add.s64 	%rd5539, %rd5537, %rd5527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5660,%dummy}, %rd5538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5661}, %rd5538;
	}
	shf.r.wrap.b32 	%r5662, %r5661, %r5660, 14;
	shf.r.wrap.b32 	%r5663, %r5660, %r5661, 14;
	mov.b64 	%rd5540, {%r5663, %r5662};
	shf.r.wrap.b32 	%r5664, %r5661, %r5660, 18;
	shf.r.wrap.b32 	%r5665, %r5660, %r5661, 18;
	mov.b64 	%rd5541, {%r5665, %r5664};
	xor.b64  	%rd5542, %rd5540, %rd5541;
	shf.l.wrap.b32 	%r5666, %r5660, %r5661, 23;
	shf.l.wrap.b32 	%r5667, %r5661, %r5660, 23;
	mov.b64 	%rd5543, {%r5667, %r5666};
	xor.b64  	%rd5544, %rd5542, %rd5543;
	and.b64  	%rd5545, %rd5538, %rd5513;
	not.b64 	%rd5546, %rd5538;
	and.b64  	%rd5547, %rd5488, %rd5546;
	or.b64  	%rd5548, %rd5545, %rd5547;
	add.s64 	%rd5549, %rd5548, %rd5463;
	add.s64 	%rd5550, %rd5549, %rd5544;
	add.s64 	%rd5551, %rd5550, %rd52;
	add.s64 	%rd5552, %rd5551, %rd4367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5668,%dummy}, %rd5539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5669}, %rd5539;
	}
	shf.r.wrap.b32 	%r5670, %r5669, %r5668, 28;
	shf.r.wrap.b32 	%r5671, %r5668, %r5669, 28;
	mov.b64 	%rd5553, {%r5671, %r5670};
	shf.l.wrap.b32 	%r5672, %r5668, %r5669, 30;
	shf.l.wrap.b32 	%r5673, %r5669, %r5668, 30;
	mov.b64 	%rd5554, {%r5673, %r5672};
	xor.b64  	%rd5555, %rd5553, %rd5554;
	shf.l.wrap.b32 	%r5674, %r5668, %r5669, 25;
	shf.l.wrap.b32 	%r5675, %r5669, %r5668, 25;
	mov.b64 	%rd5556, {%r5675, %r5674};
	xor.b64  	%rd5557, %rd5555, %rd5556;
	xor.b64  	%rd5558, %rd5514, %rd5489;
	and.b64  	%rd5559, %rd5539, %rd5558;
	and.b64  	%rd5560, %rd5514, %rd5489;
	xor.b64  	%rd5561, %rd5559, %rd5560;
	add.s64 	%rd5562, %rd5557, %rd5561;
	add.s64 	%rd5563, %rd5552, %rd5464;
	add.s64 	%rd5564, %rd5562, %rd5552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5676,%dummy}, %rd5563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5677}, %rd5563;
	}
	shf.r.wrap.b32 	%r5678, %r5677, %r5676, 14;
	shf.r.wrap.b32 	%r5679, %r5676, %r5677, 14;
	mov.b64 	%rd5565, {%r5679, %r5678};
	shf.r.wrap.b32 	%r5680, %r5677, %r5676, 18;
	shf.r.wrap.b32 	%r5681, %r5676, %r5677, 18;
	mov.b64 	%rd5566, {%r5681, %r5680};
	xor.b64  	%rd5567, %rd5565, %rd5566;
	shf.l.wrap.b32 	%r5682, %r5676, %r5677, 23;
	shf.l.wrap.b32 	%r5683, %r5677, %r5676, 23;
	mov.b64 	%rd5568, {%r5683, %r5682};
	xor.b64  	%rd5569, %rd5567, %rd5568;
	and.b64  	%rd5570, %rd5563, %rd5538;
	not.b64 	%rd5571, %rd5563;
	and.b64  	%rd5572, %rd5513, %rd5571;
	or.b64  	%rd5573, %rd5570, %rd5572;
	add.s64 	%rd5574, %rd5573, %rd5488;
	add.s64 	%rd5575, %rd5574, %rd5569;
	add.s64 	%rd5576, %rd5575, %rd53;
	add.s64 	%rd5577, %rd5576, %rd4387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5684,%dummy}, %rd5564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5685}, %rd5564;
	}
	shf.r.wrap.b32 	%r5686, %r5685, %r5684, 28;
	shf.r.wrap.b32 	%r5687, %r5684, %r5685, 28;
	mov.b64 	%rd5578, {%r5687, %r5686};
	shf.l.wrap.b32 	%r5688, %r5684, %r5685, 30;
	shf.l.wrap.b32 	%r5689, %r5685, %r5684, 30;
	mov.b64 	%rd5579, {%r5689, %r5688};
	xor.b64  	%rd5580, %rd5578, %rd5579;
	shf.l.wrap.b32 	%r5690, %r5684, %r5685, 25;
	shf.l.wrap.b32 	%r5691, %r5685, %r5684, 25;
	mov.b64 	%rd5581, {%r5691, %r5690};
	xor.b64  	%rd5582, %rd5580, %rd5581;
	xor.b64  	%rd5583, %rd5539, %rd5514;
	and.b64  	%rd5584, %rd5564, %rd5583;
	and.b64  	%rd5585, %rd5539, %rd5514;
	xor.b64  	%rd5586, %rd5584, %rd5585;
	add.s64 	%rd5587, %rd5582, %rd5586;
	add.s64 	%rd5588, %rd5577, %rd5489;
	add.s64 	%rd5589, %rd5587, %rd5577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5692,%dummy}, %rd5588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5693}, %rd5588;
	}
	shf.r.wrap.b32 	%r5694, %r5693, %r5692, 14;
	shf.r.wrap.b32 	%r5695, %r5692, %r5693, 14;
	mov.b64 	%rd5590, {%r5695, %r5694};
	shf.r.wrap.b32 	%r5696, %r5693, %r5692, 18;
	shf.r.wrap.b32 	%r5697, %r5692, %r5693, 18;
	mov.b64 	%rd5591, {%r5697, %r5696};
	xor.b64  	%rd5592, %rd5590, %rd5591;
	shf.l.wrap.b32 	%r5698, %r5692, %r5693, 23;
	shf.l.wrap.b32 	%r5699, %r5693, %r5692, 23;
	mov.b64 	%rd5593, {%r5699, %r5698};
	xor.b64  	%rd5594, %rd5592, %rd5593;
	and.b64  	%rd5595, %rd5588, %rd5563;
	not.b64 	%rd5596, %rd5588;
	and.b64  	%rd5597, %rd5538, %rd5596;
	or.b64  	%rd5598, %rd5595, %rd5597;
	add.s64 	%rd5599, %rd5598, %rd5513;
	add.s64 	%rd5600, %rd5599, %rd5594;
	add.s64 	%rd5601, %rd5600, %rd54;
	add.s64 	%rd5602, %rd5601, %rd4407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5700,%dummy}, %rd5589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5701}, %rd5589;
	}
	shf.r.wrap.b32 	%r5702, %r5701, %r5700, 28;
	shf.r.wrap.b32 	%r5703, %r5700, %r5701, 28;
	mov.b64 	%rd5603, {%r5703, %r5702};
	shf.l.wrap.b32 	%r5704, %r5700, %r5701, 30;
	shf.l.wrap.b32 	%r5705, %r5701, %r5700, 30;
	mov.b64 	%rd5604, {%r5705, %r5704};
	xor.b64  	%rd5605, %rd5603, %rd5604;
	shf.l.wrap.b32 	%r5706, %r5700, %r5701, 25;
	shf.l.wrap.b32 	%r5707, %r5701, %r5700, 25;
	mov.b64 	%rd5606, {%r5707, %r5706};
	xor.b64  	%rd5607, %rd5605, %rd5606;
	xor.b64  	%rd5608, %rd5564, %rd5539;
	and.b64  	%rd5609, %rd5589, %rd5608;
	and.b64  	%rd5610, %rd5564, %rd5539;
	xor.b64  	%rd5611, %rd5609, %rd5610;
	add.s64 	%rd5612, %rd5607, %rd5611;
	add.s64 	%rd5613, %rd5602, %rd5514;
	add.s64 	%rd5614, %rd5612, %rd5602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5708,%dummy}, %rd5613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5709}, %rd5613;
	}
	shf.r.wrap.b32 	%r5710, %r5709, %r5708, 14;
	shf.r.wrap.b32 	%r5711, %r5708, %r5709, 14;
	mov.b64 	%rd5615, {%r5711, %r5710};
	shf.r.wrap.b32 	%r5712, %r5709, %r5708, 18;
	shf.r.wrap.b32 	%r5713, %r5708, %r5709, 18;
	mov.b64 	%rd5616, {%r5713, %r5712};
	xor.b64  	%rd5617, %rd5615, %rd5616;
	shf.l.wrap.b32 	%r5714, %r5708, %r5709, 23;
	shf.l.wrap.b32 	%r5715, %r5709, %r5708, 23;
	mov.b64 	%rd5618, {%r5715, %r5714};
	xor.b64  	%rd5619, %rd5617, %rd5618;
	and.b64  	%rd5620, %rd5613, %rd5588;
	not.b64 	%rd5621, %rd5613;
	and.b64  	%rd5622, %rd5563, %rd5621;
	or.b64  	%rd5623, %rd5620, %rd5622;
	add.s64 	%rd5624, %rd5623, %rd5538;
	add.s64 	%rd5625, %rd5624, %rd5619;
	add.s64 	%rd5626, %rd5625, %rd55;
	add.s64 	%rd5627, %rd5626, %rd4427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5716,%dummy}, %rd5614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5717}, %rd5614;
	}
	shf.r.wrap.b32 	%r5718, %r5717, %r5716, 28;
	shf.r.wrap.b32 	%r5719, %r5716, %r5717, 28;
	mov.b64 	%rd5628, {%r5719, %r5718};
	shf.l.wrap.b32 	%r5720, %r5716, %r5717, 30;
	shf.l.wrap.b32 	%r5721, %r5717, %r5716, 30;
	mov.b64 	%rd5629, {%r5721, %r5720};
	xor.b64  	%rd5630, %rd5628, %rd5629;
	shf.l.wrap.b32 	%r5722, %r5716, %r5717, 25;
	shf.l.wrap.b32 	%r5723, %r5717, %r5716, 25;
	mov.b64 	%rd5631, {%r5723, %r5722};
	xor.b64  	%rd5632, %rd5630, %rd5631;
	xor.b64  	%rd5633, %rd5589, %rd5564;
	and.b64  	%rd5634, %rd5614, %rd5633;
	and.b64  	%rd5635, %rd5589, %rd5564;
	xor.b64  	%rd5636, %rd5634, %rd5635;
	add.s64 	%rd5637, %rd5632, %rd5636;
	add.s64 	%rd5638, %rd5627, %rd5539;
	add.s64 	%rd5639, %rd5637, %rd5627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5724,%dummy}, %rd5638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5725}, %rd5638;
	}
	shf.r.wrap.b32 	%r5726, %r5725, %r5724, 14;
	shf.r.wrap.b32 	%r5727, %r5724, %r5725, 14;
	mov.b64 	%rd5640, {%r5727, %r5726};
	shf.r.wrap.b32 	%r5728, %r5725, %r5724, 18;
	shf.r.wrap.b32 	%r5729, %r5724, %r5725, 18;
	mov.b64 	%rd5641, {%r5729, %r5728};
	xor.b64  	%rd5642, %rd5640, %rd5641;
	shf.l.wrap.b32 	%r5730, %r5724, %r5725, 23;
	shf.l.wrap.b32 	%r5731, %r5725, %r5724, 23;
	mov.b64 	%rd5643, {%r5731, %r5730};
	xor.b64  	%rd5644, %rd5642, %rd5643;
	and.b64  	%rd5645, %rd5638, %rd5613;
	not.b64 	%rd5646, %rd5638;
	and.b64  	%rd5647, %rd5588, %rd5646;
	or.b64  	%rd5648, %rd5645, %rd5647;
	add.s64 	%rd5649, %rd5648, %rd5563;
	add.s64 	%rd5650, %rd5649, %rd5644;
	add.s64 	%rd5651, %rd5650, %rd56;
	add.s64 	%rd5652, %rd5651, %rd4440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5732,%dummy}, %rd5639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5733}, %rd5639;
	}
	shf.r.wrap.b32 	%r5734, %r5733, %r5732, 28;
	shf.r.wrap.b32 	%r5735, %r5732, %r5733, 28;
	mov.b64 	%rd5653, {%r5735, %r5734};
	shf.l.wrap.b32 	%r5736, %r5732, %r5733, 30;
	shf.l.wrap.b32 	%r5737, %r5733, %r5732, 30;
	mov.b64 	%rd5654, {%r5737, %r5736};
	xor.b64  	%rd5655, %rd5653, %rd5654;
	shf.l.wrap.b32 	%r5738, %r5732, %r5733, 25;
	shf.l.wrap.b32 	%r5739, %r5733, %r5732, 25;
	mov.b64 	%rd5656, {%r5739, %r5738};
	xor.b64  	%rd5657, %rd5655, %rd5656;
	xor.b64  	%rd5658, %rd5614, %rd5589;
	and.b64  	%rd5659, %rd5639, %rd5658;
	and.b64  	%rd5660, %rd5614, %rd5589;
	xor.b64  	%rd5661, %rd5659, %rd5660;
	add.s64 	%rd5662, %rd5657, %rd5661;
	add.s64 	%rd5663, %rd5652, %rd5564;
	add.s64 	%rd5664, %rd5662, %rd5652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5740,%dummy}, %rd5663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5741}, %rd5663;
	}
	shf.r.wrap.b32 	%r5742, %r5741, %r5740, 14;
	shf.r.wrap.b32 	%r5743, %r5740, %r5741, 14;
	mov.b64 	%rd5665, {%r5743, %r5742};
	shf.r.wrap.b32 	%r5744, %r5741, %r5740, 18;
	shf.r.wrap.b32 	%r5745, %r5740, %r5741, 18;
	mov.b64 	%rd5666, {%r5745, %r5744};
	xor.b64  	%rd5667, %rd5665, %rd5666;
	shf.l.wrap.b32 	%r5746, %r5740, %r5741, 23;
	shf.l.wrap.b32 	%r5747, %r5741, %r5740, 23;
	mov.b64 	%rd5668, {%r5747, %r5746};
	xor.b64  	%rd5669, %rd5667, %rd5668;
	and.b64  	%rd5670, %rd5663, %rd5638;
	not.b64 	%rd5671, %rd5663;
	and.b64  	%rd5672, %rd5613, %rd5671;
	or.b64  	%rd5673, %rd5670, %rd5672;
	add.s64 	%rd5674, %rd5673, %rd5588;
	add.s64 	%rd5675, %rd5674, %rd5669;
	add.s64 	%rd5676, %rd5675, %rd57;
	add.s64 	%rd5677, %rd5676, %rd4453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5748,%dummy}, %rd5664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5749}, %rd5664;
	}
	shf.r.wrap.b32 	%r5750, %r5749, %r5748, 28;
	shf.r.wrap.b32 	%r5751, %r5748, %r5749, 28;
	mov.b64 	%rd5678, {%r5751, %r5750};
	shf.l.wrap.b32 	%r5752, %r5748, %r5749, 30;
	shf.l.wrap.b32 	%r5753, %r5749, %r5748, 30;
	mov.b64 	%rd5679, {%r5753, %r5752};
	xor.b64  	%rd5680, %rd5678, %rd5679;
	shf.l.wrap.b32 	%r5754, %r5748, %r5749, 25;
	shf.l.wrap.b32 	%r5755, %r5749, %r5748, 25;
	mov.b64 	%rd5681, {%r5755, %r5754};
	xor.b64  	%rd5682, %rd5680, %rd5681;
	xor.b64  	%rd5683, %rd5639, %rd5614;
	and.b64  	%rd5684, %rd5664, %rd5683;
	and.b64  	%rd5685, %rd5639, %rd5614;
	xor.b64  	%rd5686, %rd5684, %rd5685;
	add.s64 	%rd5687, %rd5682, %rd5686;
	add.s64 	%rd5688, %rd5677, %rd5589;
	add.s64 	%rd5689, %rd5687, %rd5677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5756,%dummy}, %rd5688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5757}, %rd5688;
	}
	shf.r.wrap.b32 	%r5758, %r5757, %r5756, 14;
	shf.r.wrap.b32 	%r5759, %r5756, %r5757, 14;
	mov.b64 	%rd5690, {%r5759, %r5758};
	shf.r.wrap.b32 	%r5760, %r5757, %r5756, 18;
	shf.r.wrap.b32 	%r5761, %r5756, %r5757, 18;
	mov.b64 	%rd5691, {%r5761, %r5760};
	xor.b64  	%rd5692, %rd5690, %rd5691;
	shf.l.wrap.b32 	%r5762, %r5756, %r5757, 23;
	shf.l.wrap.b32 	%r5763, %r5757, %r5756, 23;
	mov.b64 	%rd5693, {%r5763, %r5762};
	xor.b64  	%rd5694, %rd5692, %rd5693;
	and.b64  	%rd5695, %rd5688, %rd5663;
	not.b64 	%rd5696, %rd5688;
	and.b64  	%rd5697, %rd5638, %rd5696;
	or.b64  	%rd5698, %rd5695, %rd5697;
	add.s64 	%rd5699, %rd5698, %rd5613;
	add.s64 	%rd5700, %rd5699, %rd5694;
	add.s64 	%rd5701, %rd5700, %rd58;
	add.s64 	%rd5702, %rd5701, %rd4466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5764,%dummy}, %rd5689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5765}, %rd5689;
	}
	shf.r.wrap.b32 	%r5766, %r5765, %r5764, 28;
	shf.r.wrap.b32 	%r5767, %r5764, %r5765, 28;
	mov.b64 	%rd5703, {%r5767, %r5766};
	shf.l.wrap.b32 	%r5768, %r5764, %r5765, 30;
	shf.l.wrap.b32 	%r5769, %r5765, %r5764, 30;
	mov.b64 	%rd5704, {%r5769, %r5768};
	xor.b64  	%rd5705, %rd5703, %rd5704;
	shf.l.wrap.b32 	%r5770, %r5764, %r5765, 25;
	shf.l.wrap.b32 	%r5771, %r5765, %r5764, 25;
	mov.b64 	%rd5706, {%r5771, %r5770};
	xor.b64  	%rd5707, %rd5705, %rd5706;
	xor.b64  	%rd5708, %rd5664, %rd5639;
	and.b64  	%rd5709, %rd5689, %rd5708;
	and.b64  	%rd5710, %rd5664, %rd5639;
	xor.b64  	%rd5711, %rd5709, %rd5710;
	add.s64 	%rd5712, %rd5707, %rd5711;
	add.s64 	%rd5713, %rd5702, %rd5614;
	add.s64 	%rd5714, %rd5712, %rd5702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5772,%dummy}, %rd5713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5773}, %rd5713;
	}
	shf.r.wrap.b32 	%r5774, %r5773, %r5772, 14;
	shf.r.wrap.b32 	%r5775, %r5772, %r5773, 14;
	mov.b64 	%rd5715, {%r5775, %r5774};
	shf.r.wrap.b32 	%r5776, %r5773, %r5772, 18;
	shf.r.wrap.b32 	%r5777, %r5772, %r5773, 18;
	mov.b64 	%rd5716, {%r5777, %r5776};
	xor.b64  	%rd5717, %rd5715, %rd5716;
	shf.l.wrap.b32 	%r5778, %r5772, %r5773, 23;
	shf.l.wrap.b32 	%r5779, %r5773, %r5772, 23;
	mov.b64 	%rd5718, {%r5779, %r5778};
	xor.b64  	%rd5719, %rd5717, %rd5718;
	and.b64  	%rd5720, %rd5713, %rd5688;
	not.b64 	%rd5721, %rd5713;
	and.b64  	%rd5722, %rd5663, %rd5721;
	or.b64  	%rd5723, %rd5720, %rd5722;
	add.s64 	%rd5724, %rd5723, %rd5638;
	add.s64 	%rd5725, %rd5724, %rd5719;
	add.s64 	%rd5726, %rd5725, %rd59;
	add.s64 	%rd5727, %rd5726, %rd4479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5780,%dummy}, %rd5714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5781}, %rd5714;
	}
	shf.r.wrap.b32 	%r5782, %r5781, %r5780, 28;
	shf.r.wrap.b32 	%r5783, %r5780, %r5781, 28;
	mov.b64 	%rd5728, {%r5783, %r5782};
	shf.l.wrap.b32 	%r5784, %r5780, %r5781, 30;
	shf.l.wrap.b32 	%r5785, %r5781, %r5780, 30;
	mov.b64 	%rd5729, {%r5785, %r5784};
	xor.b64  	%rd5730, %rd5728, %rd5729;
	shf.l.wrap.b32 	%r5786, %r5780, %r5781, 25;
	shf.l.wrap.b32 	%r5787, %r5781, %r5780, 25;
	mov.b64 	%rd5731, {%r5787, %r5786};
	xor.b64  	%rd5732, %rd5730, %rd5731;
	xor.b64  	%rd5733, %rd5689, %rd5664;
	and.b64  	%rd5734, %rd5714, %rd5733;
	and.b64  	%rd5735, %rd5689, %rd5664;
	xor.b64  	%rd5736, %rd5734, %rd5735;
	add.s64 	%rd5737, %rd5732, %rd5736;
	add.s64 	%rd5738, %rd5727, %rd5639;
	add.s64 	%rd5739, %rd5737, %rd5727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5788,%dummy}, %rd5738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5789}, %rd5738;
	}
	shf.r.wrap.b32 	%r5790, %r5789, %r5788, 14;
	shf.r.wrap.b32 	%r5791, %r5788, %r5789, 14;
	mov.b64 	%rd5740, {%r5791, %r5790};
	shf.r.wrap.b32 	%r5792, %r5789, %r5788, 18;
	shf.r.wrap.b32 	%r5793, %r5788, %r5789, 18;
	mov.b64 	%rd5741, {%r5793, %r5792};
	xor.b64  	%rd5742, %rd5740, %rd5741;
	shf.l.wrap.b32 	%r5794, %r5788, %r5789, 23;
	shf.l.wrap.b32 	%r5795, %r5789, %r5788, 23;
	mov.b64 	%rd5743, {%r5795, %r5794};
	xor.b64  	%rd5744, %rd5742, %rd5743;
	and.b64  	%rd5745, %rd5738, %rd5713;
	not.b64 	%rd5746, %rd5738;
	and.b64  	%rd5747, %rd5688, %rd5746;
	or.b64  	%rd5748, %rd5745, %rd5747;
	add.s64 	%rd5749, %rd5748, %rd5663;
	add.s64 	%rd5750, %rd5749, %rd5744;
	add.s64 	%rd5751, %rd5750, %rd60;
	add.s64 	%rd5752, %rd5751, %rd4492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5796,%dummy}, %rd5739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5797}, %rd5739;
	}
	shf.r.wrap.b32 	%r5798, %r5797, %r5796, 28;
	shf.r.wrap.b32 	%r5799, %r5796, %r5797, 28;
	mov.b64 	%rd5753, {%r5799, %r5798};
	shf.l.wrap.b32 	%r5800, %r5796, %r5797, 30;
	shf.l.wrap.b32 	%r5801, %r5797, %r5796, 30;
	mov.b64 	%rd5754, {%r5801, %r5800};
	xor.b64  	%rd5755, %rd5753, %rd5754;
	shf.l.wrap.b32 	%r5802, %r5796, %r5797, 25;
	shf.l.wrap.b32 	%r5803, %r5797, %r5796, 25;
	mov.b64 	%rd5756, {%r5803, %r5802};
	xor.b64  	%rd5757, %rd5755, %rd5756;
	xor.b64  	%rd5758, %rd5714, %rd5689;
	and.b64  	%rd5759, %rd5739, %rd5758;
	and.b64  	%rd5760, %rd5714, %rd5689;
	xor.b64  	%rd5761, %rd5759, %rd5760;
	add.s64 	%rd5762, %rd5757, %rd5761;
	add.s64 	%rd5763, %rd5752, %rd5664;
	add.s64 	%rd5764, %rd5762, %rd5752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5804,%dummy}, %rd5763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5805}, %rd5763;
	}
	shf.r.wrap.b32 	%r5806, %r5805, %r5804, 14;
	shf.r.wrap.b32 	%r5807, %r5804, %r5805, 14;
	mov.b64 	%rd5765, {%r5807, %r5806};
	shf.r.wrap.b32 	%r5808, %r5805, %r5804, 18;
	shf.r.wrap.b32 	%r5809, %r5804, %r5805, 18;
	mov.b64 	%rd5766, {%r5809, %r5808};
	xor.b64  	%rd5767, %rd5765, %rd5766;
	shf.l.wrap.b32 	%r5810, %r5804, %r5805, 23;
	shf.l.wrap.b32 	%r5811, %r5805, %r5804, 23;
	mov.b64 	%rd5768, {%r5811, %r5810};
	xor.b64  	%rd5769, %rd5767, %rd5768;
	and.b64  	%rd5770, %rd5763, %rd5738;
	not.b64 	%rd5771, %rd5763;
	and.b64  	%rd5772, %rd5713, %rd5771;
	or.b64  	%rd5773, %rd5770, %rd5772;
	add.s64 	%rd5774, %rd5773, %rd5688;
	add.s64 	%rd5775, %rd5774, %rd5769;
	add.s64 	%rd5776, %rd5775, %rd61;
	add.s64 	%rd5777, %rd5776, %rd4505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5812,%dummy}, %rd5764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5813}, %rd5764;
	}
	shf.r.wrap.b32 	%r5814, %r5813, %r5812, 28;
	shf.r.wrap.b32 	%r5815, %r5812, %r5813, 28;
	mov.b64 	%rd5778, {%r5815, %r5814};
	shf.l.wrap.b32 	%r5816, %r5812, %r5813, 30;
	shf.l.wrap.b32 	%r5817, %r5813, %r5812, 30;
	mov.b64 	%rd5779, {%r5817, %r5816};
	xor.b64  	%rd5780, %rd5778, %rd5779;
	shf.l.wrap.b32 	%r5818, %r5812, %r5813, 25;
	shf.l.wrap.b32 	%r5819, %r5813, %r5812, 25;
	mov.b64 	%rd5781, {%r5819, %r5818};
	xor.b64  	%rd5782, %rd5780, %rd5781;
	xor.b64  	%rd5783, %rd5739, %rd5714;
	and.b64  	%rd5784, %rd5764, %rd5783;
	and.b64  	%rd5785, %rd5739, %rd5714;
	xor.b64  	%rd5786, %rd5784, %rd5785;
	add.s64 	%rd5787, %rd5782, %rd5786;
	add.s64 	%rd5788, %rd5777, %rd5689;
	add.s64 	%rd5789, %rd5787, %rd5777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5820,%dummy}, %rd5788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5821}, %rd5788;
	}
	shf.r.wrap.b32 	%r5822, %r5821, %r5820, 14;
	shf.r.wrap.b32 	%r5823, %r5820, %r5821, 14;
	mov.b64 	%rd5790, {%r5823, %r5822};
	shf.r.wrap.b32 	%r5824, %r5821, %r5820, 18;
	shf.r.wrap.b32 	%r5825, %r5820, %r5821, 18;
	mov.b64 	%rd5791, {%r5825, %r5824};
	xor.b64  	%rd5792, %rd5790, %rd5791;
	shf.l.wrap.b32 	%r5826, %r5820, %r5821, 23;
	shf.l.wrap.b32 	%r5827, %r5821, %r5820, 23;
	mov.b64 	%rd5793, {%r5827, %r5826};
	xor.b64  	%rd5794, %rd5792, %rd5793;
	and.b64  	%rd5795, %rd5788, %rd5763;
	not.b64 	%rd5796, %rd5788;
	and.b64  	%rd5797, %rd5738, %rd5796;
	or.b64  	%rd5798, %rd5795, %rd5797;
	add.s64 	%rd5799, %rd5798, %rd5713;
	add.s64 	%rd5800, %rd5799, %rd5794;
	add.s64 	%rd5801, %rd5800, %rd62;
	add.s64 	%rd5802, %rd5801, %rd4518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5828,%dummy}, %rd5789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5829}, %rd5789;
	}
	shf.r.wrap.b32 	%r5830, %r5829, %r5828, 28;
	shf.r.wrap.b32 	%r5831, %r5828, %r5829, 28;
	mov.b64 	%rd5803, {%r5831, %r5830};
	shf.l.wrap.b32 	%r5832, %r5828, %r5829, 30;
	shf.l.wrap.b32 	%r5833, %r5829, %r5828, 30;
	mov.b64 	%rd5804, {%r5833, %r5832};
	xor.b64  	%rd5805, %rd5803, %rd5804;
	shf.l.wrap.b32 	%r5834, %r5828, %r5829, 25;
	shf.l.wrap.b32 	%r5835, %r5829, %r5828, 25;
	mov.b64 	%rd5806, {%r5835, %r5834};
	xor.b64  	%rd5807, %rd5805, %rd5806;
	xor.b64  	%rd5808, %rd5764, %rd5739;
	and.b64  	%rd5809, %rd5789, %rd5808;
	and.b64  	%rd5810, %rd5764, %rd5739;
	xor.b64  	%rd5811, %rd5809, %rd5810;
	add.s64 	%rd5812, %rd5807, %rd5811;
	add.s64 	%rd5813, %rd5802, %rd5714;
	add.s64 	%rd5814, %rd5812, %rd5802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5836,%dummy}, %rd5813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5837}, %rd5813;
	}
	shf.r.wrap.b32 	%r5838, %r5837, %r5836, 14;
	shf.r.wrap.b32 	%r5839, %r5836, %r5837, 14;
	mov.b64 	%rd5815, {%r5839, %r5838};
	shf.r.wrap.b32 	%r5840, %r5837, %r5836, 18;
	shf.r.wrap.b32 	%r5841, %r5836, %r5837, 18;
	mov.b64 	%rd5816, {%r5841, %r5840};
	xor.b64  	%rd5817, %rd5815, %rd5816;
	shf.l.wrap.b32 	%r5842, %r5836, %r5837, 23;
	shf.l.wrap.b32 	%r5843, %r5837, %r5836, 23;
	mov.b64 	%rd5818, {%r5843, %r5842};
	xor.b64  	%rd5819, %rd5817, %rd5818;
	and.b64  	%rd5820, %rd5813, %rd5788;
	not.b64 	%rd5821, %rd5813;
	and.b64  	%rd5822, %rd5763, %rd5821;
	or.b64  	%rd5823, %rd5820, %rd5822;
	add.s64 	%rd5824, %rd5823, %rd5738;
	add.s64 	%rd5825, %rd5824, %rd5819;
	add.s64 	%rd5826, %rd5825, %rd63;
	add.s64 	%rd5827, %rd5826, %rd4531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5844,%dummy}, %rd5814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5845}, %rd5814;
	}
	shf.r.wrap.b32 	%r5846, %r5845, %r5844, 28;
	shf.r.wrap.b32 	%r5847, %r5844, %r5845, 28;
	mov.b64 	%rd5828, {%r5847, %r5846};
	shf.l.wrap.b32 	%r5848, %r5844, %r5845, 30;
	shf.l.wrap.b32 	%r5849, %r5845, %r5844, 30;
	mov.b64 	%rd5829, {%r5849, %r5848};
	xor.b64  	%rd5830, %rd5828, %rd5829;
	shf.l.wrap.b32 	%r5850, %r5844, %r5845, 25;
	shf.l.wrap.b32 	%r5851, %r5845, %r5844, 25;
	mov.b64 	%rd5831, {%r5851, %r5850};
	xor.b64  	%rd5832, %rd5830, %rd5831;
	xor.b64  	%rd5833, %rd5789, %rd5764;
	and.b64  	%rd5834, %rd5814, %rd5833;
	and.b64  	%rd5835, %rd5789, %rd5764;
	xor.b64  	%rd5836, %rd5834, %rd5835;
	add.s64 	%rd5837, %rd5832, %rd5836;
	add.s64 	%rd5838, %rd5827, %rd5739;
	add.s64 	%rd5839, %rd5837, %rd5827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5852,%dummy}, %rd5838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5853}, %rd5838;
	}
	shf.r.wrap.b32 	%r5854, %r5853, %r5852, 14;
	shf.r.wrap.b32 	%r5855, %r5852, %r5853, 14;
	mov.b64 	%rd5840, {%r5855, %r5854};
	shf.r.wrap.b32 	%r5856, %r5853, %r5852, 18;
	shf.r.wrap.b32 	%r5857, %r5852, %r5853, 18;
	mov.b64 	%rd5841, {%r5857, %r5856};
	xor.b64  	%rd5842, %rd5840, %rd5841;
	shf.l.wrap.b32 	%r5858, %r5852, %r5853, 23;
	shf.l.wrap.b32 	%r5859, %r5853, %r5852, 23;
	mov.b64 	%rd5843, {%r5859, %r5858};
	xor.b64  	%rd5844, %rd5842, %rd5843;
	and.b64  	%rd5845, %rd5838, %rd5813;
	not.b64 	%rd5846, %rd5838;
	and.b64  	%rd5847, %rd5788, %rd5846;
	or.b64  	%rd5848, %rd5845, %rd5847;
	add.s64 	%rd5849, %rd5848, %rd5763;
	add.s64 	%rd5850, %rd5849, %rd5844;
	add.s64 	%rd5851, %rd5850, %rd64;
	add.s64 	%rd5852, %rd5851, %rd4544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5860,%dummy}, %rd5839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5861}, %rd5839;
	}
	shf.r.wrap.b32 	%r5862, %r5861, %r5860, 28;
	shf.r.wrap.b32 	%r5863, %r5860, %r5861, 28;
	mov.b64 	%rd5853, {%r5863, %r5862};
	shf.l.wrap.b32 	%r5864, %r5860, %r5861, 30;
	shf.l.wrap.b32 	%r5865, %r5861, %r5860, 30;
	mov.b64 	%rd5854, {%r5865, %r5864};
	xor.b64  	%rd5855, %rd5853, %rd5854;
	shf.l.wrap.b32 	%r5866, %r5860, %r5861, 25;
	shf.l.wrap.b32 	%r5867, %r5861, %r5860, 25;
	mov.b64 	%rd5856, {%r5867, %r5866};
	xor.b64  	%rd5857, %rd5855, %rd5856;
	xor.b64  	%rd5858, %rd5814, %rd5789;
	and.b64  	%rd5859, %rd5839, %rd5858;
	and.b64  	%rd5860, %rd5814, %rd5789;
	xor.b64  	%rd5861, %rd5859, %rd5860;
	add.s64 	%rd5862, %rd5857, %rd5861;
	add.s64 	%rd5863, %rd5852, %rd5764;
	add.s64 	%rd5864, %rd5862, %rd5852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5868,%dummy}, %rd5863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5869}, %rd5863;
	}
	shf.r.wrap.b32 	%r5870, %r5869, %r5868, 14;
	shf.r.wrap.b32 	%r5871, %r5868, %r5869, 14;
	mov.b64 	%rd5865, {%r5871, %r5870};
	shf.r.wrap.b32 	%r5872, %r5869, %r5868, 18;
	shf.r.wrap.b32 	%r5873, %r5868, %r5869, 18;
	mov.b64 	%rd5866, {%r5873, %r5872};
	xor.b64  	%rd5867, %rd5865, %rd5866;
	shf.l.wrap.b32 	%r5874, %r5868, %r5869, 23;
	shf.l.wrap.b32 	%r5875, %r5869, %r5868, 23;
	mov.b64 	%rd5868, {%r5875, %r5874};
	xor.b64  	%rd5869, %rd5867, %rd5868;
	and.b64  	%rd5870, %rd5863, %rd5838;
	not.b64 	%rd5871, %rd5863;
	and.b64  	%rd5872, %rd5813, %rd5871;
	or.b64  	%rd5873, %rd5870, %rd5872;
	add.s64 	%rd5874, %rd5873, %rd5788;
	add.s64 	%rd5875, %rd5874, %rd5869;
	add.s64 	%rd5876, %rd5875, %rd65;
	add.s64 	%rd5877, %rd5876, %rd4557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5876,%dummy}, %rd5864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5877}, %rd5864;
	}
	shf.r.wrap.b32 	%r5878, %r5877, %r5876, 28;
	shf.r.wrap.b32 	%r5879, %r5876, %r5877, 28;
	mov.b64 	%rd5878, {%r5879, %r5878};
	shf.l.wrap.b32 	%r5880, %r5876, %r5877, 30;
	shf.l.wrap.b32 	%r5881, %r5877, %r5876, 30;
	mov.b64 	%rd5879, {%r5881, %r5880};
	xor.b64  	%rd5880, %rd5878, %rd5879;
	shf.l.wrap.b32 	%r5882, %r5876, %r5877, 25;
	shf.l.wrap.b32 	%r5883, %r5877, %r5876, 25;
	mov.b64 	%rd5881, {%r5883, %r5882};
	xor.b64  	%rd5882, %rd5880, %rd5881;
	xor.b64  	%rd5883, %rd5839, %rd5814;
	and.b64  	%rd5884, %rd5864, %rd5883;
	and.b64  	%rd5885, %rd5839, %rd5814;
	xor.b64  	%rd5886, %rd5884, %rd5885;
	add.s64 	%rd5887, %rd5882, %rd5886;
	add.s64 	%rd5888, %rd5877, %rd5789;
	add.s64 	%rd5889, %rd5887, %rd5877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5884,%dummy}, %rd5888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5885}, %rd5888;
	}
	shf.r.wrap.b32 	%r5886, %r5885, %r5884, 14;
	shf.r.wrap.b32 	%r5887, %r5884, %r5885, 14;
	mov.b64 	%rd5890, {%r5887, %r5886};
	shf.r.wrap.b32 	%r5888, %r5885, %r5884, 18;
	shf.r.wrap.b32 	%r5889, %r5884, %r5885, 18;
	mov.b64 	%rd5891, {%r5889, %r5888};
	xor.b64  	%rd5892, %rd5890, %rd5891;
	shf.l.wrap.b32 	%r5890, %r5884, %r5885, 23;
	shf.l.wrap.b32 	%r5891, %r5885, %r5884, 23;
	mov.b64 	%rd5893, {%r5891, %r5890};
	xor.b64  	%rd5894, %rd5892, %rd5893;
	and.b64  	%rd5895, %rd5888, %rd5863;
	not.b64 	%rd5896, %rd5888;
	and.b64  	%rd5897, %rd5838, %rd5896;
	or.b64  	%rd5898, %rd5895, %rd5897;
	add.s64 	%rd5899, %rd5898, %rd5813;
	add.s64 	%rd5900, %rd5899, %rd5894;
	add.s64 	%rd5901, %rd5900, %rd66;
	add.s64 	%rd5902, %rd5901, %rd4570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5892,%dummy}, %rd5889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5893}, %rd5889;
	}
	shf.r.wrap.b32 	%r5894, %r5893, %r5892, 28;
	shf.r.wrap.b32 	%r5895, %r5892, %r5893, 28;
	mov.b64 	%rd5903, {%r5895, %r5894};
	shf.l.wrap.b32 	%r5896, %r5892, %r5893, 30;
	shf.l.wrap.b32 	%r5897, %r5893, %r5892, 30;
	mov.b64 	%rd5904, {%r5897, %r5896};
	xor.b64  	%rd5905, %rd5903, %rd5904;
	shf.l.wrap.b32 	%r5898, %r5892, %r5893, 25;
	shf.l.wrap.b32 	%r5899, %r5893, %r5892, 25;
	mov.b64 	%rd5906, {%r5899, %r5898};
	xor.b64  	%rd5907, %rd5905, %rd5906;
	xor.b64  	%rd5908, %rd5864, %rd5839;
	and.b64  	%rd5909, %rd5889, %rd5908;
	and.b64  	%rd5910, %rd5864, %rd5839;
	xor.b64  	%rd5911, %rd5909, %rd5910;
	add.s64 	%rd5912, %rd5907, %rd5911;
	add.s64 	%rd5913, %rd5902, %rd5814;
	add.s64 	%rd5914, %rd5912, %rd5902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5900,%dummy}, %rd5913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5901}, %rd5913;
	}
	shf.r.wrap.b32 	%r5902, %r5901, %r5900, 14;
	shf.r.wrap.b32 	%r5903, %r5900, %r5901, 14;
	mov.b64 	%rd5915, {%r5903, %r5902};
	shf.r.wrap.b32 	%r5904, %r5901, %r5900, 18;
	shf.r.wrap.b32 	%r5905, %r5900, %r5901, 18;
	mov.b64 	%rd5916, {%r5905, %r5904};
	xor.b64  	%rd5917, %rd5915, %rd5916;
	shf.l.wrap.b32 	%r5906, %r5900, %r5901, 23;
	shf.l.wrap.b32 	%r5907, %r5901, %r5900, 23;
	mov.b64 	%rd5918, {%r5907, %r5906};
	xor.b64  	%rd5919, %rd5917, %rd5918;
	and.b64  	%rd5920, %rd5913, %rd5888;
	not.b64 	%rd5921, %rd5913;
	and.b64  	%rd5922, %rd5863, %rd5921;
	or.b64  	%rd5923, %rd5920, %rd5922;
	add.s64 	%rd5924, %rd5923, %rd5838;
	add.s64 	%rd5925, %rd5924, %rd5919;
	add.s64 	%rd5926, %rd5925, %rd67;
	add.s64 	%rd5927, %rd5926, %rd4583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5908,%dummy}, %rd5914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5909}, %rd5914;
	}
	shf.r.wrap.b32 	%r5910, %r5909, %r5908, 28;
	shf.r.wrap.b32 	%r5911, %r5908, %r5909, 28;
	mov.b64 	%rd5928, {%r5911, %r5910};
	shf.l.wrap.b32 	%r5912, %r5908, %r5909, 30;
	shf.l.wrap.b32 	%r5913, %r5909, %r5908, 30;
	mov.b64 	%rd5929, {%r5913, %r5912};
	xor.b64  	%rd5930, %rd5928, %rd5929;
	shf.l.wrap.b32 	%r5914, %r5908, %r5909, 25;
	shf.l.wrap.b32 	%r5915, %r5909, %r5908, 25;
	mov.b64 	%rd5931, {%r5915, %r5914};
	xor.b64  	%rd5932, %rd5930, %rd5931;
	xor.b64  	%rd5933, %rd5889, %rd5864;
	and.b64  	%rd5934, %rd5914, %rd5933;
	and.b64  	%rd5935, %rd5889, %rd5864;
	xor.b64  	%rd5936, %rd5934, %rd5935;
	add.s64 	%rd5937, %rd5932, %rd5936;
	add.s64 	%rd5938, %rd5927, %rd5839;
	add.s64 	%rd5939, %rd5937, %rd5927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5916,%dummy}, %rd5938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5917}, %rd5938;
	}
	shf.r.wrap.b32 	%r5918, %r5917, %r5916, 14;
	shf.r.wrap.b32 	%r5919, %r5916, %r5917, 14;
	mov.b64 	%rd5940, {%r5919, %r5918};
	shf.r.wrap.b32 	%r5920, %r5917, %r5916, 18;
	shf.r.wrap.b32 	%r5921, %r5916, %r5917, 18;
	mov.b64 	%rd5941, {%r5921, %r5920};
	xor.b64  	%rd5942, %rd5940, %rd5941;
	shf.l.wrap.b32 	%r5922, %r5916, %r5917, 23;
	shf.l.wrap.b32 	%r5923, %r5917, %r5916, 23;
	mov.b64 	%rd5943, {%r5923, %r5922};
	xor.b64  	%rd5944, %rd5942, %rd5943;
	and.b64  	%rd5945, %rd5938, %rd5913;
	not.b64 	%rd5946, %rd5938;
	and.b64  	%rd5947, %rd5888, %rd5946;
	or.b64  	%rd5948, %rd5945, %rd5947;
	add.s64 	%rd5949, %rd5948, %rd5863;
	add.s64 	%rd5950, %rd5949, %rd5944;
	add.s64 	%rd5951, %rd5950, %rd68;
	add.s64 	%rd5952, %rd5951, %rd4596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5924,%dummy}, %rd5939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5925}, %rd5939;
	}
	shf.r.wrap.b32 	%r5926, %r5925, %r5924, 28;
	shf.r.wrap.b32 	%r5927, %r5924, %r5925, 28;
	mov.b64 	%rd5953, {%r5927, %r5926};
	shf.l.wrap.b32 	%r5928, %r5924, %r5925, 30;
	shf.l.wrap.b32 	%r5929, %r5925, %r5924, 30;
	mov.b64 	%rd5954, {%r5929, %r5928};
	xor.b64  	%rd5955, %rd5953, %rd5954;
	shf.l.wrap.b32 	%r5930, %r5924, %r5925, 25;
	shf.l.wrap.b32 	%r5931, %r5925, %r5924, 25;
	mov.b64 	%rd5956, {%r5931, %r5930};
	xor.b64  	%rd5957, %rd5955, %rd5956;
	xor.b64  	%rd5958, %rd5914, %rd5889;
	and.b64  	%rd5959, %rd5939, %rd5958;
	and.b64  	%rd5960, %rd5914, %rd5889;
	xor.b64  	%rd5961, %rd5959, %rd5960;
	add.s64 	%rd5962, %rd5957, %rd5961;
	add.s64 	%rd5963, %rd5952, %rd5864;
	add.s64 	%rd5964, %rd5962, %rd5952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5932,%dummy}, %rd5963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5933}, %rd5963;
	}
	shf.r.wrap.b32 	%r5934, %r5933, %r5932, 14;
	shf.r.wrap.b32 	%r5935, %r5932, %r5933, 14;
	mov.b64 	%rd5965, {%r5935, %r5934};
	shf.r.wrap.b32 	%r5936, %r5933, %r5932, 18;
	shf.r.wrap.b32 	%r5937, %r5932, %r5933, 18;
	mov.b64 	%rd5966, {%r5937, %r5936};
	xor.b64  	%rd5967, %rd5965, %rd5966;
	shf.l.wrap.b32 	%r5938, %r5932, %r5933, 23;
	shf.l.wrap.b32 	%r5939, %r5933, %r5932, 23;
	mov.b64 	%rd5968, {%r5939, %r5938};
	xor.b64  	%rd5969, %rd5967, %rd5968;
	and.b64  	%rd5970, %rd5963, %rd5938;
	not.b64 	%rd5971, %rd5963;
	and.b64  	%rd5972, %rd5913, %rd5971;
	or.b64  	%rd5973, %rd5970, %rd5972;
	add.s64 	%rd5974, %rd5973, %rd5888;
	add.s64 	%rd5975, %rd5974, %rd5969;
	add.s64 	%rd5976, %rd5975, %rd69;
	add.s64 	%rd5977, %rd5976, %rd4609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5940,%dummy}, %rd5964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5941}, %rd5964;
	}
	shf.r.wrap.b32 	%r5942, %r5941, %r5940, 28;
	shf.r.wrap.b32 	%r5943, %r5940, %r5941, 28;
	mov.b64 	%rd5978, {%r5943, %r5942};
	shf.l.wrap.b32 	%r5944, %r5940, %r5941, 30;
	shf.l.wrap.b32 	%r5945, %r5941, %r5940, 30;
	mov.b64 	%rd5979, {%r5945, %r5944};
	xor.b64  	%rd5980, %rd5978, %rd5979;
	shf.l.wrap.b32 	%r5946, %r5940, %r5941, 25;
	shf.l.wrap.b32 	%r5947, %r5941, %r5940, 25;
	mov.b64 	%rd5981, {%r5947, %r5946};
	xor.b64  	%rd5982, %rd5980, %rd5981;
	xor.b64  	%rd5983, %rd5939, %rd5914;
	and.b64  	%rd5984, %rd5964, %rd5983;
	and.b64  	%rd5985, %rd5939, %rd5914;
	xor.b64  	%rd5986, %rd5984, %rd5985;
	add.s64 	%rd5987, %rd5982, %rd5986;
	add.s64 	%rd5988, %rd5977, %rd5889;
	add.s64 	%rd5989, %rd5987, %rd5977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5948,%dummy}, %rd5988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5949}, %rd5988;
	}
	shf.r.wrap.b32 	%r5950, %r5949, %r5948, 14;
	shf.r.wrap.b32 	%r5951, %r5948, %r5949, 14;
	mov.b64 	%rd5990, {%r5951, %r5950};
	shf.r.wrap.b32 	%r5952, %r5949, %r5948, 18;
	shf.r.wrap.b32 	%r5953, %r5948, %r5949, 18;
	mov.b64 	%rd5991, {%r5953, %r5952};
	xor.b64  	%rd5992, %rd5990, %rd5991;
	shf.l.wrap.b32 	%r5954, %r5948, %r5949, 23;
	shf.l.wrap.b32 	%r5955, %r5949, %r5948, 23;
	mov.b64 	%rd5993, {%r5955, %r5954};
	xor.b64  	%rd5994, %rd5992, %rd5993;
	and.b64  	%rd5995, %rd5988, %rd5963;
	not.b64 	%rd5996, %rd5988;
	and.b64  	%rd5997, %rd5938, %rd5996;
	or.b64  	%rd5998, %rd5995, %rd5997;
	add.s64 	%rd5999, %rd5998, %rd5913;
	add.s64 	%rd6000, %rd5999, %rd5994;
	add.s64 	%rd6001, %rd6000, %rd70;
	add.s64 	%rd6002, %rd6001, %rd4622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5956,%dummy}, %rd5989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5957}, %rd5989;
	}
	shf.r.wrap.b32 	%r5958, %r5957, %r5956, 28;
	shf.r.wrap.b32 	%r5959, %r5956, %r5957, 28;
	mov.b64 	%rd6003, {%r5959, %r5958};
	shf.l.wrap.b32 	%r5960, %r5956, %r5957, 30;
	shf.l.wrap.b32 	%r5961, %r5957, %r5956, 30;
	mov.b64 	%rd6004, {%r5961, %r5960};
	xor.b64  	%rd6005, %rd6003, %rd6004;
	shf.l.wrap.b32 	%r5962, %r5956, %r5957, 25;
	shf.l.wrap.b32 	%r5963, %r5957, %r5956, 25;
	mov.b64 	%rd6006, {%r5963, %r5962};
	xor.b64  	%rd6007, %rd6005, %rd6006;
	xor.b64  	%rd6008, %rd5964, %rd5939;
	and.b64  	%rd6009, %rd5989, %rd6008;
	and.b64  	%rd6010, %rd5964, %rd5939;
	xor.b64  	%rd6011, %rd6009, %rd6010;
	add.s64 	%rd6012, %rd6007, %rd6011;
	add.s64 	%rd6013, %rd6002, %rd5914;
	add.s64 	%rd6014, %rd6012, %rd6002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5964,%dummy}, %rd6013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5965}, %rd6013;
	}
	shf.r.wrap.b32 	%r5966, %r5965, %r5964, 14;
	shf.r.wrap.b32 	%r5967, %r5964, %r5965, 14;
	mov.b64 	%rd6015, {%r5967, %r5966};
	shf.r.wrap.b32 	%r5968, %r5965, %r5964, 18;
	shf.r.wrap.b32 	%r5969, %r5964, %r5965, 18;
	mov.b64 	%rd6016, {%r5969, %r5968};
	xor.b64  	%rd6017, %rd6015, %rd6016;
	shf.l.wrap.b32 	%r5970, %r5964, %r5965, 23;
	shf.l.wrap.b32 	%r5971, %r5965, %r5964, 23;
	mov.b64 	%rd6018, {%r5971, %r5970};
	xor.b64  	%rd6019, %rd6017, %rd6018;
	and.b64  	%rd6020, %rd6013, %rd5988;
	not.b64 	%rd6021, %rd6013;
	and.b64  	%rd6022, %rd5963, %rd6021;
	or.b64  	%rd6023, %rd6020, %rd6022;
	add.s64 	%rd6024, %rd6023, %rd5938;
	add.s64 	%rd6025, %rd6024, %rd6019;
	add.s64 	%rd6026, %rd6025, %rd71;
	add.s64 	%rd6027, %rd6026, %rd4635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5972,%dummy}, %rd6014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5973}, %rd6014;
	}
	shf.r.wrap.b32 	%r5974, %r5973, %r5972, 28;
	shf.r.wrap.b32 	%r5975, %r5972, %r5973, 28;
	mov.b64 	%rd6028, {%r5975, %r5974};
	shf.l.wrap.b32 	%r5976, %r5972, %r5973, 30;
	shf.l.wrap.b32 	%r5977, %r5973, %r5972, 30;
	mov.b64 	%rd6029, {%r5977, %r5976};
	xor.b64  	%rd6030, %rd6028, %rd6029;
	shf.l.wrap.b32 	%r5978, %r5972, %r5973, 25;
	shf.l.wrap.b32 	%r5979, %r5973, %r5972, 25;
	mov.b64 	%rd6031, {%r5979, %r5978};
	xor.b64  	%rd6032, %rd6030, %rd6031;
	xor.b64  	%rd6033, %rd5989, %rd5964;
	and.b64  	%rd6034, %rd6014, %rd6033;
	and.b64  	%rd6035, %rd5989, %rd5964;
	xor.b64  	%rd6036, %rd6034, %rd6035;
	add.s64 	%rd6037, %rd6032, %rd6036;
	add.s64 	%rd6038, %rd6027, %rd5939;
	add.s64 	%rd6039, %rd6037, %rd6027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5980,%dummy}, %rd6038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5981}, %rd6038;
	}
	shf.r.wrap.b32 	%r5982, %r5981, %r5980, 14;
	shf.r.wrap.b32 	%r5983, %r5980, %r5981, 14;
	mov.b64 	%rd6040, {%r5983, %r5982};
	shf.r.wrap.b32 	%r5984, %r5981, %r5980, 18;
	shf.r.wrap.b32 	%r5985, %r5980, %r5981, 18;
	mov.b64 	%rd6041, {%r5985, %r5984};
	xor.b64  	%rd6042, %rd6040, %rd6041;
	shf.l.wrap.b32 	%r5986, %r5980, %r5981, 23;
	shf.l.wrap.b32 	%r5987, %r5981, %r5980, 23;
	mov.b64 	%rd6043, {%r5987, %r5986};
	xor.b64  	%rd6044, %rd6042, %rd6043;
	and.b64  	%rd6045, %rd6038, %rd6013;
	not.b64 	%rd6046, %rd6038;
	and.b64  	%rd6047, %rd5988, %rd6046;
	or.b64  	%rd6048, %rd6045, %rd6047;
	add.s64 	%rd6049, %rd6048, %rd5963;
	add.s64 	%rd6050, %rd6049, %rd6044;
	add.s64 	%rd6051, %rd6050, %rd72;
	add.s64 	%rd6052, %rd6051, %rd4648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5988,%dummy}, %rd6039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5989}, %rd6039;
	}
	shf.r.wrap.b32 	%r5990, %r5989, %r5988, 28;
	shf.r.wrap.b32 	%r5991, %r5988, %r5989, 28;
	mov.b64 	%rd6053, {%r5991, %r5990};
	shf.l.wrap.b32 	%r5992, %r5988, %r5989, 30;
	shf.l.wrap.b32 	%r5993, %r5989, %r5988, 30;
	mov.b64 	%rd6054, {%r5993, %r5992};
	xor.b64  	%rd6055, %rd6053, %rd6054;
	shf.l.wrap.b32 	%r5994, %r5988, %r5989, 25;
	shf.l.wrap.b32 	%r5995, %r5989, %r5988, 25;
	mov.b64 	%rd6056, {%r5995, %r5994};
	xor.b64  	%rd6057, %rd6055, %rd6056;
	xor.b64  	%rd6058, %rd6014, %rd5989;
	and.b64  	%rd6059, %rd6039, %rd6058;
	and.b64  	%rd6060, %rd6014, %rd5989;
	xor.b64  	%rd6061, %rd6059, %rd6060;
	add.s64 	%rd6062, %rd6057, %rd6061;
	add.s64 	%rd6063, %rd6052, %rd5964;
	add.s64 	%rd6064, %rd6062, %rd6052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5996,%dummy}, %rd6063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5997}, %rd6063;
	}
	shf.r.wrap.b32 	%r5998, %r5997, %r5996, 14;
	shf.r.wrap.b32 	%r5999, %r5996, %r5997, 14;
	mov.b64 	%rd6065, {%r5999, %r5998};
	shf.r.wrap.b32 	%r6000, %r5997, %r5996, 18;
	shf.r.wrap.b32 	%r6001, %r5996, %r5997, 18;
	mov.b64 	%rd6066, {%r6001, %r6000};
	xor.b64  	%rd6067, %rd6065, %rd6066;
	shf.l.wrap.b32 	%r6002, %r5996, %r5997, 23;
	shf.l.wrap.b32 	%r6003, %r5997, %r5996, 23;
	mov.b64 	%rd6068, {%r6003, %r6002};
	xor.b64  	%rd6069, %rd6067, %rd6068;
	and.b64  	%rd6070, %rd6063, %rd6038;
	not.b64 	%rd6071, %rd6063;
	and.b64  	%rd6072, %rd6013, %rd6071;
	or.b64  	%rd6073, %rd6070, %rd6072;
	add.s64 	%rd6074, %rd6073, %rd5988;
	add.s64 	%rd6075, %rd6074, %rd6069;
	add.s64 	%rd6076, %rd6075, %rd73;
	add.s64 	%rd6077, %rd6076, %rd4661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6004,%dummy}, %rd6064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6005}, %rd6064;
	}
	shf.r.wrap.b32 	%r6006, %r6005, %r6004, 28;
	shf.r.wrap.b32 	%r6007, %r6004, %r6005, 28;
	mov.b64 	%rd6078, {%r6007, %r6006};
	shf.l.wrap.b32 	%r6008, %r6004, %r6005, 30;
	shf.l.wrap.b32 	%r6009, %r6005, %r6004, 30;
	mov.b64 	%rd6079, {%r6009, %r6008};
	xor.b64  	%rd6080, %rd6078, %rd6079;
	shf.l.wrap.b32 	%r6010, %r6004, %r6005, 25;
	shf.l.wrap.b32 	%r6011, %r6005, %r6004, 25;
	mov.b64 	%rd6081, {%r6011, %r6010};
	xor.b64  	%rd6082, %rd6080, %rd6081;
	xor.b64  	%rd6083, %rd6039, %rd6014;
	and.b64  	%rd6084, %rd6064, %rd6083;
	and.b64  	%rd6085, %rd6039, %rd6014;
	xor.b64  	%rd6086, %rd6084, %rd6085;
	add.s64 	%rd6087, %rd6082, %rd6086;
	add.s64 	%rd6088, %rd6077, %rd5989;
	add.s64 	%rd6089, %rd6087, %rd6077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6012,%dummy}, %rd6088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6013}, %rd6088;
	}
	shf.r.wrap.b32 	%r6014, %r6013, %r6012, 14;
	shf.r.wrap.b32 	%r6015, %r6012, %r6013, 14;
	mov.b64 	%rd6090, {%r6015, %r6014};
	shf.r.wrap.b32 	%r6016, %r6013, %r6012, 18;
	shf.r.wrap.b32 	%r6017, %r6012, %r6013, 18;
	mov.b64 	%rd6091, {%r6017, %r6016};
	xor.b64  	%rd6092, %rd6090, %rd6091;
	shf.l.wrap.b32 	%r6018, %r6012, %r6013, 23;
	shf.l.wrap.b32 	%r6019, %r6013, %r6012, 23;
	mov.b64 	%rd6093, {%r6019, %r6018};
	xor.b64  	%rd6094, %rd6092, %rd6093;
	and.b64  	%rd6095, %rd6088, %rd6063;
	not.b64 	%rd6096, %rd6088;
	and.b64  	%rd6097, %rd6038, %rd6096;
	or.b64  	%rd6098, %rd6095, %rd6097;
	add.s64 	%rd6099, %rd6098, %rd6013;
	add.s64 	%rd6100, %rd6099, %rd6094;
	add.s64 	%rd6101, %rd6100, %rd74;
	add.s64 	%rd6102, %rd6101, %rd4674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6020,%dummy}, %rd6089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6021}, %rd6089;
	}
	shf.r.wrap.b32 	%r6022, %r6021, %r6020, 28;
	shf.r.wrap.b32 	%r6023, %r6020, %r6021, 28;
	mov.b64 	%rd6103, {%r6023, %r6022};
	shf.l.wrap.b32 	%r6024, %r6020, %r6021, 30;
	shf.l.wrap.b32 	%r6025, %r6021, %r6020, 30;
	mov.b64 	%rd6104, {%r6025, %r6024};
	xor.b64  	%rd6105, %rd6103, %rd6104;
	shf.l.wrap.b32 	%r6026, %r6020, %r6021, 25;
	shf.l.wrap.b32 	%r6027, %r6021, %r6020, 25;
	mov.b64 	%rd6106, {%r6027, %r6026};
	xor.b64  	%rd6107, %rd6105, %rd6106;
	xor.b64  	%rd6108, %rd6064, %rd6039;
	and.b64  	%rd6109, %rd6089, %rd6108;
	and.b64  	%rd6110, %rd6064, %rd6039;
	xor.b64  	%rd6111, %rd6109, %rd6110;
	add.s64 	%rd6112, %rd6107, %rd6111;
	add.s64 	%rd6113, %rd6102, %rd6014;
	add.s64 	%rd6114, %rd6112, %rd6102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6028,%dummy}, %rd6113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6029}, %rd6113;
	}
	shf.r.wrap.b32 	%r6030, %r6029, %r6028, 14;
	shf.r.wrap.b32 	%r6031, %r6028, %r6029, 14;
	mov.b64 	%rd6115, {%r6031, %r6030};
	shf.r.wrap.b32 	%r6032, %r6029, %r6028, 18;
	shf.r.wrap.b32 	%r6033, %r6028, %r6029, 18;
	mov.b64 	%rd6116, {%r6033, %r6032};
	xor.b64  	%rd6117, %rd6115, %rd6116;
	shf.l.wrap.b32 	%r6034, %r6028, %r6029, 23;
	shf.l.wrap.b32 	%r6035, %r6029, %r6028, 23;
	mov.b64 	%rd6118, {%r6035, %r6034};
	xor.b64  	%rd6119, %rd6117, %rd6118;
	and.b64  	%rd6120, %rd6113, %rd6088;
	not.b64 	%rd6121, %rd6113;
	and.b64  	%rd6122, %rd6063, %rd6121;
	or.b64  	%rd6123, %rd6120, %rd6122;
	add.s64 	%rd6124, %rd6123, %rd6038;
	add.s64 	%rd6125, %rd6124, %rd6119;
	add.s64 	%rd6126, %rd6125, %rd75;
	add.s64 	%rd6127, %rd6126, %rd4687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6036,%dummy}, %rd6114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6037}, %rd6114;
	}
	shf.r.wrap.b32 	%r6038, %r6037, %r6036, 28;
	shf.r.wrap.b32 	%r6039, %r6036, %r6037, 28;
	mov.b64 	%rd6128, {%r6039, %r6038};
	shf.l.wrap.b32 	%r6040, %r6036, %r6037, 30;
	shf.l.wrap.b32 	%r6041, %r6037, %r6036, 30;
	mov.b64 	%rd6129, {%r6041, %r6040};
	xor.b64  	%rd6130, %rd6128, %rd6129;
	shf.l.wrap.b32 	%r6042, %r6036, %r6037, 25;
	shf.l.wrap.b32 	%r6043, %r6037, %r6036, 25;
	mov.b64 	%rd6131, {%r6043, %r6042};
	xor.b64  	%rd6132, %rd6130, %rd6131;
	xor.b64  	%rd6133, %rd6089, %rd6064;
	and.b64  	%rd6134, %rd6114, %rd6133;
	and.b64  	%rd6135, %rd6089, %rd6064;
	xor.b64  	%rd6136, %rd6134, %rd6135;
	add.s64 	%rd6137, %rd6132, %rd6136;
	add.s64 	%rd6138, %rd6127, %rd6039;
	add.s64 	%rd6139, %rd6137, %rd6127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6044,%dummy}, %rd6138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6045}, %rd6138;
	}
	shf.r.wrap.b32 	%r6046, %r6045, %r6044, 14;
	shf.r.wrap.b32 	%r6047, %r6044, %r6045, 14;
	mov.b64 	%rd6140, {%r6047, %r6046};
	shf.r.wrap.b32 	%r6048, %r6045, %r6044, 18;
	shf.r.wrap.b32 	%r6049, %r6044, %r6045, 18;
	mov.b64 	%rd6141, {%r6049, %r6048};
	xor.b64  	%rd6142, %rd6140, %rd6141;
	shf.l.wrap.b32 	%r6050, %r6044, %r6045, 23;
	shf.l.wrap.b32 	%r6051, %r6045, %r6044, 23;
	mov.b64 	%rd6143, {%r6051, %r6050};
	xor.b64  	%rd6144, %rd6142, %rd6143;
	and.b64  	%rd6145, %rd6138, %rd6113;
	not.b64 	%rd6146, %rd6138;
	and.b64  	%rd6147, %rd6088, %rd6146;
	or.b64  	%rd6148, %rd6145, %rd6147;
	add.s64 	%rd6149, %rd6148, %rd6063;
	add.s64 	%rd6150, %rd6149, %rd6144;
	add.s64 	%rd6151, %rd6150, %rd76;
	add.s64 	%rd6152, %rd6151, %rd4700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6052,%dummy}, %rd6139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6053}, %rd6139;
	}
	shf.r.wrap.b32 	%r6054, %r6053, %r6052, 28;
	shf.r.wrap.b32 	%r6055, %r6052, %r6053, 28;
	mov.b64 	%rd6153, {%r6055, %r6054};
	shf.l.wrap.b32 	%r6056, %r6052, %r6053, 30;
	shf.l.wrap.b32 	%r6057, %r6053, %r6052, 30;
	mov.b64 	%rd6154, {%r6057, %r6056};
	xor.b64  	%rd6155, %rd6153, %rd6154;
	shf.l.wrap.b32 	%r6058, %r6052, %r6053, 25;
	shf.l.wrap.b32 	%r6059, %r6053, %r6052, 25;
	mov.b64 	%rd6156, {%r6059, %r6058};
	xor.b64  	%rd6157, %rd6155, %rd6156;
	xor.b64  	%rd6158, %rd6114, %rd6089;
	and.b64  	%rd6159, %rd6139, %rd6158;
	and.b64  	%rd6160, %rd6114, %rd6089;
	xor.b64  	%rd6161, %rd6159, %rd6160;
	add.s64 	%rd6162, %rd6157, %rd6161;
	add.s64 	%rd6163, %rd6152, %rd6064;
	add.s64 	%rd6164, %rd6162, %rd6152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6060,%dummy}, %rd6163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6061}, %rd6163;
	}
	shf.r.wrap.b32 	%r6062, %r6061, %r6060, 14;
	shf.r.wrap.b32 	%r6063, %r6060, %r6061, 14;
	mov.b64 	%rd6165, {%r6063, %r6062};
	shf.r.wrap.b32 	%r6064, %r6061, %r6060, 18;
	shf.r.wrap.b32 	%r6065, %r6060, %r6061, 18;
	mov.b64 	%rd6166, {%r6065, %r6064};
	xor.b64  	%rd6167, %rd6165, %rd6166;
	shf.l.wrap.b32 	%r6066, %r6060, %r6061, 23;
	shf.l.wrap.b32 	%r6067, %r6061, %r6060, 23;
	mov.b64 	%rd6168, {%r6067, %r6066};
	xor.b64  	%rd6169, %rd6167, %rd6168;
	and.b64  	%rd6170, %rd6163, %rd6138;
	not.b64 	%rd6171, %rd6163;
	and.b64  	%rd6172, %rd6113, %rd6171;
	or.b64  	%rd6173, %rd6170, %rd6172;
	add.s64 	%rd6174, %rd6173, %rd6088;
	add.s64 	%rd6175, %rd6174, %rd6169;
	add.s64 	%rd6176, %rd6175, %rd77;
	add.s64 	%rd6177, %rd6176, %rd4713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6068,%dummy}, %rd6164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6069}, %rd6164;
	}
	shf.r.wrap.b32 	%r6070, %r6069, %r6068, 28;
	shf.r.wrap.b32 	%r6071, %r6068, %r6069, 28;
	mov.b64 	%rd6178, {%r6071, %r6070};
	shf.l.wrap.b32 	%r6072, %r6068, %r6069, 30;
	shf.l.wrap.b32 	%r6073, %r6069, %r6068, 30;
	mov.b64 	%rd6179, {%r6073, %r6072};
	xor.b64  	%rd6180, %rd6178, %rd6179;
	shf.l.wrap.b32 	%r6074, %r6068, %r6069, 25;
	shf.l.wrap.b32 	%r6075, %r6069, %r6068, 25;
	mov.b64 	%rd6181, {%r6075, %r6074};
	xor.b64  	%rd6182, %rd6180, %rd6181;
	xor.b64  	%rd6183, %rd6139, %rd6114;
	and.b64  	%rd6184, %rd6164, %rd6183;
	and.b64  	%rd6185, %rd6139, %rd6114;
	xor.b64  	%rd6186, %rd6184, %rd6185;
	add.s64 	%rd6187, %rd6182, %rd6186;
	add.s64 	%rd6188, %rd6177, %rd6089;
	add.s64 	%rd6189, %rd6187, %rd6177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6076,%dummy}, %rd6188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6077}, %rd6188;
	}
	shf.r.wrap.b32 	%r6078, %r6077, %r6076, 14;
	shf.r.wrap.b32 	%r6079, %r6076, %r6077, 14;
	mov.b64 	%rd6190, {%r6079, %r6078};
	shf.r.wrap.b32 	%r6080, %r6077, %r6076, 18;
	shf.r.wrap.b32 	%r6081, %r6076, %r6077, 18;
	mov.b64 	%rd6191, {%r6081, %r6080};
	xor.b64  	%rd6192, %rd6190, %rd6191;
	shf.l.wrap.b32 	%r6082, %r6076, %r6077, 23;
	shf.l.wrap.b32 	%r6083, %r6077, %r6076, 23;
	mov.b64 	%rd6193, {%r6083, %r6082};
	xor.b64  	%rd6194, %rd6192, %rd6193;
	and.b64  	%rd6195, %rd6188, %rd6163;
	not.b64 	%rd6196, %rd6188;
	and.b64  	%rd6197, %rd6138, %rd6196;
	or.b64  	%rd6198, %rd6195, %rd6197;
	add.s64 	%rd6199, %rd6198, %rd6113;
	add.s64 	%rd6200, %rd6199, %rd6194;
	add.s64 	%rd6201, %rd6200, %rd78;
	add.s64 	%rd6202, %rd6201, %rd4726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6084,%dummy}, %rd6189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6085}, %rd6189;
	}
	shf.r.wrap.b32 	%r6086, %r6085, %r6084, 28;
	shf.r.wrap.b32 	%r6087, %r6084, %r6085, 28;
	mov.b64 	%rd6203, {%r6087, %r6086};
	shf.l.wrap.b32 	%r6088, %r6084, %r6085, 30;
	shf.l.wrap.b32 	%r6089, %r6085, %r6084, 30;
	mov.b64 	%rd6204, {%r6089, %r6088};
	xor.b64  	%rd6205, %rd6203, %rd6204;
	shf.l.wrap.b32 	%r6090, %r6084, %r6085, 25;
	shf.l.wrap.b32 	%r6091, %r6085, %r6084, 25;
	mov.b64 	%rd6206, {%r6091, %r6090};
	xor.b64  	%rd6207, %rd6205, %rd6206;
	xor.b64  	%rd6208, %rd6164, %rd6139;
	and.b64  	%rd6209, %rd6189, %rd6208;
	and.b64  	%rd6210, %rd6164, %rd6139;
	xor.b64  	%rd6211, %rd6209, %rd6210;
	add.s64 	%rd6212, %rd6207, %rd6211;
	add.s64 	%rd6213, %rd6202, %rd6114;
	add.s64 	%rd6214, %rd6212, %rd6202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6092,%dummy}, %rd6213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6093}, %rd6213;
	}
	shf.r.wrap.b32 	%r6094, %r6093, %r6092, 14;
	shf.r.wrap.b32 	%r6095, %r6092, %r6093, 14;
	mov.b64 	%rd6215, {%r6095, %r6094};
	shf.r.wrap.b32 	%r6096, %r6093, %r6092, 18;
	shf.r.wrap.b32 	%r6097, %r6092, %r6093, 18;
	mov.b64 	%rd6216, {%r6097, %r6096};
	xor.b64  	%rd6217, %rd6215, %rd6216;
	shf.l.wrap.b32 	%r6098, %r6092, %r6093, 23;
	shf.l.wrap.b32 	%r6099, %r6093, %r6092, 23;
	mov.b64 	%rd6218, {%r6099, %r6098};
	xor.b64  	%rd6219, %rd6217, %rd6218;
	and.b64  	%rd6220, %rd6213, %rd6188;
	not.b64 	%rd6221, %rd6213;
	and.b64  	%rd6222, %rd6163, %rd6221;
	or.b64  	%rd6223, %rd6220, %rd6222;
	add.s64 	%rd6224, %rd6223, %rd6138;
	add.s64 	%rd6225, %rd6224, %rd6219;
	add.s64 	%rd6226, %rd6225, %rd79;
	add.s64 	%rd6227, %rd6226, %rd4739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6100,%dummy}, %rd6214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6101}, %rd6214;
	}
	shf.r.wrap.b32 	%r6102, %r6101, %r6100, 28;
	shf.r.wrap.b32 	%r6103, %r6100, %r6101, 28;
	mov.b64 	%rd6228, {%r6103, %r6102};
	shf.l.wrap.b32 	%r6104, %r6100, %r6101, 30;
	shf.l.wrap.b32 	%r6105, %r6101, %r6100, 30;
	mov.b64 	%rd6229, {%r6105, %r6104};
	xor.b64  	%rd6230, %rd6228, %rd6229;
	shf.l.wrap.b32 	%r6106, %r6100, %r6101, 25;
	shf.l.wrap.b32 	%r6107, %r6101, %r6100, 25;
	mov.b64 	%rd6231, {%r6107, %r6106};
	xor.b64  	%rd6232, %rd6230, %rd6231;
	xor.b64  	%rd6233, %rd6189, %rd6164;
	and.b64  	%rd6234, %rd6214, %rd6233;
	and.b64  	%rd6235, %rd6189, %rd6164;
	xor.b64  	%rd6236, %rd6234, %rd6235;
	add.s64 	%rd6237, %rd6232, %rd6236;
	add.s64 	%rd6238, %rd6227, %rd6139;
	add.s64 	%rd6239, %rd6237, %rd6227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6108,%dummy}, %rd6238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6109}, %rd6238;
	}
	shf.r.wrap.b32 	%r6110, %r6109, %r6108, 14;
	shf.r.wrap.b32 	%r6111, %r6108, %r6109, 14;
	mov.b64 	%rd6240, {%r6111, %r6110};
	shf.r.wrap.b32 	%r6112, %r6109, %r6108, 18;
	shf.r.wrap.b32 	%r6113, %r6108, %r6109, 18;
	mov.b64 	%rd6241, {%r6113, %r6112};
	xor.b64  	%rd6242, %rd6240, %rd6241;
	shf.l.wrap.b32 	%r6114, %r6108, %r6109, 23;
	shf.l.wrap.b32 	%r6115, %r6109, %r6108, 23;
	mov.b64 	%rd6243, {%r6115, %r6114};
	xor.b64  	%rd6244, %rd6242, %rd6243;
	and.b64  	%rd6245, %rd6238, %rd6213;
	not.b64 	%rd6246, %rd6238;
	and.b64  	%rd6247, %rd6188, %rd6246;
	or.b64  	%rd6248, %rd6245, %rd6247;
	add.s64 	%rd6249, %rd6248, %rd6163;
	add.s64 	%rd6250, %rd6249, %rd6244;
	add.s64 	%rd6251, %rd6250, %rd80;
	add.s64 	%rd6252, %rd6251, %rd4752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6116,%dummy}, %rd6239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6117}, %rd6239;
	}
	shf.r.wrap.b32 	%r6118, %r6117, %r6116, 28;
	shf.r.wrap.b32 	%r6119, %r6116, %r6117, 28;
	mov.b64 	%rd6253, {%r6119, %r6118};
	shf.l.wrap.b32 	%r6120, %r6116, %r6117, 30;
	shf.l.wrap.b32 	%r6121, %r6117, %r6116, 30;
	mov.b64 	%rd6254, {%r6121, %r6120};
	xor.b64  	%rd6255, %rd6253, %rd6254;
	shf.l.wrap.b32 	%r6122, %r6116, %r6117, 25;
	shf.l.wrap.b32 	%r6123, %r6117, %r6116, 25;
	mov.b64 	%rd6256, {%r6123, %r6122};
	xor.b64  	%rd6257, %rd6255, %rd6256;
	xor.b64  	%rd6258, %rd6214, %rd6189;
	and.b64  	%rd6259, %rd6239, %rd6258;
	and.b64  	%rd6260, %rd6214, %rd6189;
	xor.b64  	%rd6261, %rd6259, %rd6260;
	add.s64 	%rd6262, %rd6257, %rd6261;
	add.s64 	%rd6263, %rd6252, %rd6164;
	add.s64 	%rd6264, %rd6262, %rd6252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6124,%dummy}, %rd6263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6125}, %rd6263;
	}
	shf.r.wrap.b32 	%r6126, %r6125, %r6124, 14;
	shf.r.wrap.b32 	%r6127, %r6124, %r6125, 14;
	mov.b64 	%rd6265, {%r6127, %r6126};
	shf.r.wrap.b32 	%r6128, %r6125, %r6124, 18;
	shf.r.wrap.b32 	%r6129, %r6124, %r6125, 18;
	mov.b64 	%rd6266, {%r6129, %r6128};
	xor.b64  	%rd6267, %rd6265, %rd6266;
	shf.l.wrap.b32 	%r6130, %r6124, %r6125, 23;
	shf.l.wrap.b32 	%r6131, %r6125, %r6124, 23;
	mov.b64 	%rd6268, {%r6131, %r6130};
	xor.b64  	%rd6269, %rd6267, %rd6268;
	and.b64  	%rd6270, %rd6263, %rd6238;
	not.b64 	%rd6271, %rd6263;
	and.b64  	%rd6272, %rd6213, %rd6271;
	or.b64  	%rd6273, %rd6270, %rd6272;
	add.s64 	%rd6274, %rd6273, %rd6188;
	add.s64 	%rd6275, %rd6274, %rd6269;
	add.s64 	%rd6276, %rd6275, %rd81;
	add.s64 	%rd6277, %rd6276, %rd4765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6132,%dummy}, %rd6264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6133}, %rd6264;
	}
	shf.r.wrap.b32 	%r6134, %r6133, %r6132, 28;
	shf.r.wrap.b32 	%r6135, %r6132, %r6133, 28;
	mov.b64 	%rd6278, {%r6135, %r6134};
	shf.l.wrap.b32 	%r6136, %r6132, %r6133, 30;
	shf.l.wrap.b32 	%r6137, %r6133, %r6132, 30;
	mov.b64 	%rd6279, {%r6137, %r6136};
	xor.b64  	%rd6280, %rd6278, %rd6279;
	shf.l.wrap.b32 	%r6138, %r6132, %r6133, 25;
	shf.l.wrap.b32 	%r6139, %r6133, %r6132, 25;
	mov.b64 	%rd6281, {%r6139, %r6138};
	xor.b64  	%rd6282, %rd6280, %rd6281;
	xor.b64  	%rd6283, %rd6239, %rd6214;
	and.b64  	%rd6284, %rd6264, %rd6283;
	and.b64  	%rd6285, %rd6239, %rd6214;
	xor.b64  	%rd6286, %rd6284, %rd6285;
	add.s64 	%rd6287, %rd6282, %rd6286;
	add.s64 	%rd6288, %rd6277, %rd6189;
	add.s64 	%rd6289, %rd6287, %rd6277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6140,%dummy}, %rd6288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6141}, %rd6288;
	}
	shf.r.wrap.b32 	%r6142, %r6141, %r6140, 14;
	shf.r.wrap.b32 	%r6143, %r6140, %r6141, 14;
	mov.b64 	%rd6290, {%r6143, %r6142};
	shf.r.wrap.b32 	%r6144, %r6141, %r6140, 18;
	shf.r.wrap.b32 	%r6145, %r6140, %r6141, 18;
	mov.b64 	%rd6291, {%r6145, %r6144};
	xor.b64  	%rd6292, %rd6290, %rd6291;
	shf.l.wrap.b32 	%r6146, %r6140, %r6141, 23;
	shf.l.wrap.b32 	%r6147, %r6141, %r6140, 23;
	mov.b64 	%rd6293, {%r6147, %r6146};
	xor.b64  	%rd6294, %rd6292, %rd6293;
	and.b64  	%rd6295, %rd6288, %rd6263;
	not.b64 	%rd6296, %rd6288;
	and.b64  	%rd6297, %rd6238, %rd6296;
	or.b64  	%rd6298, %rd6295, %rd6297;
	add.s64 	%rd6299, %rd6298, %rd6213;
	add.s64 	%rd6300, %rd6299, %rd6294;
	add.s64 	%rd6301, %rd6300, %rd82;
	add.s64 	%rd6302, %rd6301, %rd4778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6148,%dummy}, %rd6289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6149}, %rd6289;
	}
	shf.r.wrap.b32 	%r6150, %r6149, %r6148, 28;
	shf.r.wrap.b32 	%r6151, %r6148, %r6149, 28;
	mov.b64 	%rd6303, {%r6151, %r6150};
	shf.l.wrap.b32 	%r6152, %r6148, %r6149, 30;
	shf.l.wrap.b32 	%r6153, %r6149, %r6148, 30;
	mov.b64 	%rd6304, {%r6153, %r6152};
	xor.b64  	%rd6305, %rd6303, %rd6304;
	shf.l.wrap.b32 	%r6154, %r6148, %r6149, 25;
	shf.l.wrap.b32 	%r6155, %r6149, %r6148, 25;
	mov.b64 	%rd6306, {%r6155, %r6154};
	xor.b64  	%rd6307, %rd6305, %rd6306;
	xor.b64  	%rd6308, %rd6264, %rd6239;
	and.b64  	%rd6309, %rd6289, %rd6308;
	and.b64  	%rd6310, %rd6264, %rd6239;
	xor.b64  	%rd6311, %rd6309, %rd6310;
	add.s64 	%rd6312, %rd6307, %rd6311;
	add.s64 	%rd6313, %rd6302, %rd6214;
	add.s64 	%rd6314, %rd6312, %rd6302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6156,%dummy}, %rd6313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6157}, %rd6313;
	}
	shf.r.wrap.b32 	%r6158, %r6157, %r6156, 14;
	shf.r.wrap.b32 	%r6159, %r6156, %r6157, 14;
	mov.b64 	%rd6315, {%r6159, %r6158};
	shf.r.wrap.b32 	%r6160, %r6157, %r6156, 18;
	shf.r.wrap.b32 	%r6161, %r6156, %r6157, 18;
	mov.b64 	%rd6316, {%r6161, %r6160};
	xor.b64  	%rd6317, %rd6315, %rd6316;
	shf.l.wrap.b32 	%r6162, %r6156, %r6157, 23;
	shf.l.wrap.b32 	%r6163, %r6157, %r6156, 23;
	mov.b64 	%rd6318, {%r6163, %r6162};
	xor.b64  	%rd6319, %rd6317, %rd6318;
	and.b64  	%rd6320, %rd6313, %rd6288;
	not.b64 	%rd6321, %rd6313;
	and.b64  	%rd6322, %rd6263, %rd6321;
	or.b64  	%rd6323, %rd6320, %rd6322;
	add.s64 	%rd6324, %rd6323, %rd6238;
	add.s64 	%rd6325, %rd6324, %rd6319;
	add.s64 	%rd6326, %rd6325, %rd83;
	add.s64 	%rd6327, %rd6326, %rd4791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6164,%dummy}, %rd6314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6165}, %rd6314;
	}
	shf.r.wrap.b32 	%r6166, %r6165, %r6164, 28;
	shf.r.wrap.b32 	%r6167, %r6164, %r6165, 28;
	mov.b64 	%rd6328, {%r6167, %r6166};
	shf.l.wrap.b32 	%r6168, %r6164, %r6165, 30;
	shf.l.wrap.b32 	%r6169, %r6165, %r6164, 30;
	mov.b64 	%rd6329, {%r6169, %r6168};
	xor.b64  	%rd6330, %rd6328, %rd6329;
	shf.l.wrap.b32 	%r6170, %r6164, %r6165, 25;
	shf.l.wrap.b32 	%r6171, %r6165, %r6164, 25;
	mov.b64 	%rd6331, {%r6171, %r6170};
	xor.b64  	%rd6332, %rd6330, %rd6331;
	xor.b64  	%rd6333, %rd6289, %rd6264;
	and.b64  	%rd6334, %rd6314, %rd6333;
	and.b64  	%rd6335, %rd6289, %rd6264;
	xor.b64  	%rd6336, %rd6334, %rd6335;
	add.s64 	%rd6337, %rd6332, %rd6336;
	add.s64 	%rd6338, %rd6327, %rd6239;
	add.s64 	%rd6339, %rd6337, %rd6327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6172,%dummy}, %rd6338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6173}, %rd6338;
	}
	shf.r.wrap.b32 	%r6174, %r6173, %r6172, 14;
	shf.r.wrap.b32 	%r6175, %r6172, %r6173, 14;
	mov.b64 	%rd6340, {%r6175, %r6174};
	shf.r.wrap.b32 	%r6176, %r6173, %r6172, 18;
	shf.r.wrap.b32 	%r6177, %r6172, %r6173, 18;
	mov.b64 	%rd6341, {%r6177, %r6176};
	xor.b64  	%rd6342, %rd6340, %rd6341;
	shf.l.wrap.b32 	%r6178, %r6172, %r6173, 23;
	shf.l.wrap.b32 	%r6179, %r6173, %r6172, 23;
	mov.b64 	%rd6343, {%r6179, %r6178};
	xor.b64  	%rd6344, %rd6342, %rd6343;
	and.b64  	%rd6345, %rd6338, %rd6313;
	not.b64 	%rd6346, %rd6338;
	and.b64  	%rd6347, %rd6288, %rd6346;
	or.b64  	%rd6348, %rd6345, %rd6347;
	add.s64 	%rd6349, %rd6348, %rd6263;
	add.s64 	%rd6350, %rd6349, %rd6344;
	add.s64 	%rd6351, %rd6350, %rd84;
	add.s64 	%rd6352, %rd6351, %rd4804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6180,%dummy}, %rd6339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6181}, %rd6339;
	}
	shf.r.wrap.b32 	%r6182, %r6181, %r6180, 28;
	shf.r.wrap.b32 	%r6183, %r6180, %r6181, 28;
	mov.b64 	%rd6353, {%r6183, %r6182};
	shf.l.wrap.b32 	%r6184, %r6180, %r6181, 30;
	shf.l.wrap.b32 	%r6185, %r6181, %r6180, 30;
	mov.b64 	%rd6354, {%r6185, %r6184};
	xor.b64  	%rd6355, %rd6353, %rd6354;
	shf.l.wrap.b32 	%r6186, %r6180, %r6181, 25;
	shf.l.wrap.b32 	%r6187, %r6181, %r6180, 25;
	mov.b64 	%rd6356, {%r6187, %r6186};
	xor.b64  	%rd6357, %rd6355, %rd6356;
	xor.b64  	%rd6358, %rd6314, %rd6289;
	and.b64  	%rd6359, %rd6339, %rd6358;
	and.b64  	%rd6360, %rd6314, %rd6289;
	xor.b64  	%rd6361, %rd6359, %rd6360;
	add.s64 	%rd6362, %rd6357, %rd6361;
	add.s64 	%rd6363, %rd6352, %rd6264;
	add.s64 	%rd6364, %rd6362, %rd6352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6188,%dummy}, %rd6363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6189}, %rd6363;
	}
	shf.r.wrap.b32 	%r6190, %r6189, %r6188, 14;
	shf.r.wrap.b32 	%r6191, %r6188, %r6189, 14;
	mov.b64 	%rd6365, {%r6191, %r6190};
	shf.r.wrap.b32 	%r6192, %r6189, %r6188, 18;
	shf.r.wrap.b32 	%r6193, %r6188, %r6189, 18;
	mov.b64 	%rd6366, {%r6193, %r6192};
	xor.b64  	%rd6367, %rd6365, %rd6366;
	shf.l.wrap.b32 	%r6194, %r6188, %r6189, 23;
	shf.l.wrap.b32 	%r6195, %r6189, %r6188, 23;
	mov.b64 	%rd6368, {%r6195, %r6194};
	xor.b64  	%rd6369, %rd6367, %rd6368;
	and.b64  	%rd6370, %rd6363, %rd6338;
	not.b64 	%rd6371, %rd6363;
	and.b64  	%rd6372, %rd6313, %rd6371;
	or.b64  	%rd6373, %rd6370, %rd6372;
	add.s64 	%rd6374, %rd6373, %rd6288;
	add.s64 	%rd6375, %rd6374, %rd6369;
	add.s64 	%rd6376, %rd6375, %rd85;
	add.s64 	%rd6377, %rd6376, %rd4817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6196,%dummy}, %rd6364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6197}, %rd6364;
	}
	shf.r.wrap.b32 	%r6198, %r6197, %r6196, 28;
	shf.r.wrap.b32 	%r6199, %r6196, %r6197, 28;
	mov.b64 	%rd6378, {%r6199, %r6198};
	shf.l.wrap.b32 	%r6200, %r6196, %r6197, 30;
	shf.l.wrap.b32 	%r6201, %r6197, %r6196, 30;
	mov.b64 	%rd6379, {%r6201, %r6200};
	xor.b64  	%rd6380, %rd6378, %rd6379;
	shf.l.wrap.b32 	%r6202, %r6196, %r6197, 25;
	shf.l.wrap.b32 	%r6203, %r6197, %r6196, 25;
	mov.b64 	%rd6381, {%r6203, %r6202};
	xor.b64  	%rd6382, %rd6380, %rd6381;
	xor.b64  	%rd6383, %rd6339, %rd6314;
	and.b64  	%rd6384, %rd6364, %rd6383;
	and.b64  	%rd6385, %rd6339, %rd6314;
	xor.b64  	%rd6386, %rd6384, %rd6385;
	add.s64 	%rd6387, %rd6382, %rd6386;
	add.s64 	%rd6388, %rd6377, %rd6289;
	add.s64 	%rd6389, %rd6387, %rd6377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6204,%dummy}, %rd6388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6205}, %rd6388;
	}
	shf.r.wrap.b32 	%r6206, %r6205, %r6204, 14;
	shf.r.wrap.b32 	%r6207, %r6204, %r6205, 14;
	mov.b64 	%rd6390, {%r6207, %r6206};
	shf.r.wrap.b32 	%r6208, %r6205, %r6204, 18;
	shf.r.wrap.b32 	%r6209, %r6204, %r6205, 18;
	mov.b64 	%rd6391, {%r6209, %r6208};
	xor.b64  	%rd6392, %rd6390, %rd6391;
	shf.l.wrap.b32 	%r6210, %r6204, %r6205, 23;
	shf.l.wrap.b32 	%r6211, %r6205, %r6204, 23;
	mov.b64 	%rd6393, {%r6211, %r6210};
	xor.b64  	%rd6394, %rd6392, %rd6393;
	and.b64  	%rd6395, %rd6388, %rd6363;
	not.b64 	%rd6396, %rd6388;
	and.b64  	%rd6397, %rd6338, %rd6396;
	or.b64  	%rd6398, %rd6395, %rd6397;
	add.s64 	%rd6399, %rd6398, %rd6313;
	add.s64 	%rd6400, %rd6399, %rd6394;
	add.s64 	%rd6401, %rd6400, %rd86;
	add.s64 	%rd6402, %rd6401, %rd4830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6212,%dummy}, %rd6389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6213}, %rd6389;
	}
	shf.r.wrap.b32 	%r6214, %r6213, %r6212, 28;
	shf.r.wrap.b32 	%r6215, %r6212, %r6213, 28;
	mov.b64 	%rd6403, {%r6215, %r6214};
	shf.l.wrap.b32 	%r6216, %r6212, %r6213, 30;
	shf.l.wrap.b32 	%r6217, %r6213, %r6212, 30;
	mov.b64 	%rd6404, {%r6217, %r6216};
	xor.b64  	%rd6405, %rd6403, %rd6404;
	shf.l.wrap.b32 	%r6218, %r6212, %r6213, 25;
	shf.l.wrap.b32 	%r6219, %r6213, %r6212, 25;
	mov.b64 	%rd6406, {%r6219, %r6218};
	xor.b64  	%rd6407, %rd6405, %rd6406;
	xor.b64  	%rd6408, %rd6364, %rd6339;
	and.b64  	%rd6409, %rd6389, %rd6408;
	and.b64  	%rd6410, %rd6364, %rd6339;
	xor.b64  	%rd6411, %rd6409, %rd6410;
	add.s64 	%rd6412, %rd6407, %rd6411;
	add.s64 	%rd6413, %rd6402, %rd6314;
	add.s64 	%rd6414, %rd6412, %rd6402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6220,%dummy}, %rd6413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6221}, %rd6413;
	}
	shf.r.wrap.b32 	%r6222, %r6221, %r6220, 14;
	shf.r.wrap.b32 	%r6223, %r6220, %r6221, 14;
	mov.b64 	%rd6415, {%r6223, %r6222};
	shf.r.wrap.b32 	%r6224, %r6221, %r6220, 18;
	shf.r.wrap.b32 	%r6225, %r6220, %r6221, 18;
	mov.b64 	%rd6416, {%r6225, %r6224};
	xor.b64  	%rd6417, %rd6415, %rd6416;
	shf.l.wrap.b32 	%r6226, %r6220, %r6221, 23;
	shf.l.wrap.b32 	%r6227, %r6221, %r6220, 23;
	mov.b64 	%rd6418, {%r6227, %r6226};
	xor.b64  	%rd6419, %rd6417, %rd6418;
	and.b64  	%rd6420, %rd6413, %rd6388;
	not.b64 	%rd6421, %rd6413;
	and.b64  	%rd6422, %rd6363, %rd6421;
	or.b64  	%rd6423, %rd6420, %rd6422;
	add.s64 	%rd6424, %rd6423, %rd6338;
	add.s64 	%rd6425, %rd6424, %rd6419;
	add.s64 	%rd6426, %rd6425, %rd87;
	add.s64 	%rd6427, %rd6426, %rd4843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6228,%dummy}, %rd6414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6229}, %rd6414;
	}
	shf.r.wrap.b32 	%r6230, %r6229, %r6228, 28;
	shf.r.wrap.b32 	%r6231, %r6228, %r6229, 28;
	mov.b64 	%rd6428, {%r6231, %r6230};
	shf.l.wrap.b32 	%r6232, %r6228, %r6229, 30;
	shf.l.wrap.b32 	%r6233, %r6229, %r6228, 30;
	mov.b64 	%rd6429, {%r6233, %r6232};
	xor.b64  	%rd6430, %rd6428, %rd6429;
	shf.l.wrap.b32 	%r6234, %r6228, %r6229, 25;
	shf.l.wrap.b32 	%r6235, %r6229, %r6228, 25;
	mov.b64 	%rd6431, {%r6235, %r6234};
	xor.b64  	%rd6432, %rd6430, %rd6431;
	xor.b64  	%rd6433, %rd6389, %rd6364;
	and.b64  	%rd6434, %rd6414, %rd6433;
	and.b64  	%rd6435, %rd6389, %rd6364;
	xor.b64  	%rd6436, %rd6434, %rd6435;
	add.s64 	%rd6437, %rd6432, %rd6436;
	add.s64 	%rd6438, %rd6427, %rd6339;
	add.s64 	%rd6439, %rd6437, %rd6427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6236,%dummy}, %rd6438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6237}, %rd6438;
	}
	shf.r.wrap.b32 	%r6238, %r6237, %r6236, 14;
	shf.r.wrap.b32 	%r6239, %r6236, %r6237, 14;
	mov.b64 	%rd6440, {%r6239, %r6238};
	shf.r.wrap.b32 	%r6240, %r6237, %r6236, 18;
	shf.r.wrap.b32 	%r6241, %r6236, %r6237, 18;
	mov.b64 	%rd6441, {%r6241, %r6240};
	xor.b64  	%rd6442, %rd6440, %rd6441;
	shf.l.wrap.b32 	%r6242, %r6236, %r6237, 23;
	shf.l.wrap.b32 	%r6243, %r6237, %r6236, 23;
	mov.b64 	%rd6443, {%r6243, %r6242};
	xor.b64  	%rd6444, %rd6442, %rd6443;
	and.b64  	%rd6445, %rd6438, %rd6413;
	not.b64 	%rd6446, %rd6438;
	and.b64  	%rd6447, %rd6388, %rd6446;
	or.b64  	%rd6448, %rd6445, %rd6447;
	add.s64 	%rd6449, %rd6448, %rd6363;
	add.s64 	%rd6450, %rd6449, %rd6444;
	add.s64 	%rd6451, %rd6450, %rd88;
	add.s64 	%rd6452, %rd6451, %rd4856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6244,%dummy}, %rd6439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6245}, %rd6439;
	}
	shf.r.wrap.b32 	%r6246, %r6245, %r6244, 28;
	shf.r.wrap.b32 	%r6247, %r6244, %r6245, 28;
	mov.b64 	%rd6453, {%r6247, %r6246};
	shf.l.wrap.b32 	%r6248, %r6244, %r6245, 30;
	shf.l.wrap.b32 	%r6249, %r6245, %r6244, 30;
	mov.b64 	%rd6454, {%r6249, %r6248};
	xor.b64  	%rd6455, %rd6453, %rd6454;
	shf.l.wrap.b32 	%r6250, %r6244, %r6245, 25;
	shf.l.wrap.b32 	%r6251, %r6245, %r6244, 25;
	mov.b64 	%rd6456, {%r6251, %r6250};
	xor.b64  	%rd6457, %rd6455, %rd6456;
	xor.b64  	%rd6458, %rd6414, %rd6389;
	and.b64  	%rd6459, %rd6439, %rd6458;
	and.b64  	%rd6460, %rd6414, %rd6389;
	xor.b64  	%rd6461, %rd6459, %rd6460;
	add.s64 	%rd6462, %rd6457, %rd6461;
	add.s64 	%rd6463, %rd6452, %rd6364;
	add.s64 	%rd6464, %rd6462, %rd6452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6252,%dummy}, %rd6463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6253}, %rd6463;
	}
	shf.r.wrap.b32 	%r6254, %r6253, %r6252, 14;
	shf.r.wrap.b32 	%r6255, %r6252, %r6253, 14;
	mov.b64 	%rd6465, {%r6255, %r6254};
	shf.r.wrap.b32 	%r6256, %r6253, %r6252, 18;
	shf.r.wrap.b32 	%r6257, %r6252, %r6253, 18;
	mov.b64 	%rd6466, {%r6257, %r6256};
	xor.b64  	%rd6467, %rd6465, %rd6466;
	shf.l.wrap.b32 	%r6258, %r6252, %r6253, 23;
	shf.l.wrap.b32 	%r6259, %r6253, %r6252, 23;
	mov.b64 	%rd6468, {%r6259, %r6258};
	xor.b64  	%rd6469, %rd6467, %rd6468;
	and.b64  	%rd6470, %rd6463, %rd6438;
	not.b64 	%rd6471, %rd6463;
	and.b64  	%rd6472, %rd6413, %rd6471;
	or.b64  	%rd6473, %rd6470, %rd6472;
	add.s64 	%rd6474, %rd6473, %rd6388;
	add.s64 	%rd6475, %rd6474, %rd6469;
	add.s64 	%rd6476, %rd6475, %rd89;
	add.s64 	%rd6477, %rd6476, %rd4869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6260,%dummy}, %rd6464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6261}, %rd6464;
	}
	shf.r.wrap.b32 	%r6262, %r6261, %r6260, 28;
	shf.r.wrap.b32 	%r6263, %r6260, %r6261, 28;
	mov.b64 	%rd6478, {%r6263, %r6262};
	shf.l.wrap.b32 	%r6264, %r6260, %r6261, 30;
	shf.l.wrap.b32 	%r6265, %r6261, %r6260, 30;
	mov.b64 	%rd6479, {%r6265, %r6264};
	xor.b64  	%rd6480, %rd6478, %rd6479;
	shf.l.wrap.b32 	%r6266, %r6260, %r6261, 25;
	shf.l.wrap.b32 	%r6267, %r6261, %r6260, 25;
	mov.b64 	%rd6481, {%r6267, %r6266};
	xor.b64  	%rd6482, %rd6480, %rd6481;
	xor.b64  	%rd6483, %rd6439, %rd6414;
	and.b64  	%rd6484, %rd6464, %rd6483;
	and.b64  	%rd6485, %rd6439, %rd6414;
	xor.b64  	%rd6486, %rd6484, %rd6485;
	add.s64 	%rd6487, %rd6482, %rd6486;
	add.s64 	%rd6488, %rd6477, %rd6389;
	add.s64 	%rd6489, %rd6487, %rd6477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6268,%dummy}, %rd6488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6269}, %rd6488;
	}
	shf.r.wrap.b32 	%r6270, %r6269, %r6268, 14;
	shf.r.wrap.b32 	%r6271, %r6268, %r6269, 14;
	mov.b64 	%rd6490, {%r6271, %r6270};
	shf.r.wrap.b32 	%r6272, %r6269, %r6268, 18;
	shf.r.wrap.b32 	%r6273, %r6268, %r6269, 18;
	mov.b64 	%rd6491, {%r6273, %r6272};
	xor.b64  	%rd6492, %rd6490, %rd6491;
	shf.l.wrap.b32 	%r6274, %r6268, %r6269, 23;
	shf.l.wrap.b32 	%r6275, %r6269, %r6268, 23;
	mov.b64 	%rd6493, {%r6275, %r6274};
	xor.b64  	%rd6494, %rd6492, %rd6493;
	and.b64  	%rd6495, %rd6488, %rd6463;
	not.b64 	%rd6496, %rd6488;
	and.b64  	%rd6497, %rd6438, %rd6496;
	or.b64  	%rd6498, %rd6495, %rd6497;
	add.s64 	%rd6499, %rd6498, %rd6413;
	add.s64 	%rd6500, %rd6499, %rd6494;
	add.s64 	%rd6501, %rd6500, %rd90;
	add.s64 	%rd6502, %rd6501, %rd4882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6276,%dummy}, %rd6489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6277}, %rd6489;
	}
	shf.r.wrap.b32 	%r6278, %r6277, %r6276, 28;
	shf.r.wrap.b32 	%r6279, %r6276, %r6277, 28;
	mov.b64 	%rd6503, {%r6279, %r6278};
	shf.l.wrap.b32 	%r6280, %r6276, %r6277, 30;
	shf.l.wrap.b32 	%r6281, %r6277, %r6276, 30;
	mov.b64 	%rd6504, {%r6281, %r6280};
	xor.b64  	%rd6505, %rd6503, %rd6504;
	shf.l.wrap.b32 	%r6282, %r6276, %r6277, 25;
	shf.l.wrap.b32 	%r6283, %r6277, %r6276, 25;
	mov.b64 	%rd6506, {%r6283, %r6282};
	xor.b64  	%rd6507, %rd6505, %rd6506;
	xor.b64  	%rd6508, %rd6464, %rd6439;
	and.b64  	%rd6509, %rd6489, %rd6508;
	and.b64  	%rd6510, %rd6464, %rd6439;
	xor.b64  	%rd6511, %rd6509, %rd6510;
	add.s64 	%rd6512, %rd6507, %rd6511;
	add.s64 	%rd6513, %rd6502, %rd6414;
	add.s64 	%rd6514, %rd6512, %rd6502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6284,%dummy}, %rd6513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6285}, %rd6513;
	}
	shf.r.wrap.b32 	%r6286, %r6285, %r6284, 14;
	shf.r.wrap.b32 	%r6287, %r6284, %r6285, 14;
	mov.b64 	%rd6515, {%r6287, %r6286};
	shf.r.wrap.b32 	%r6288, %r6285, %r6284, 18;
	shf.r.wrap.b32 	%r6289, %r6284, %r6285, 18;
	mov.b64 	%rd6516, {%r6289, %r6288};
	xor.b64  	%rd6517, %rd6515, %rd6516;
	shf.l.wrap.b32 	%r6290, %r6284, %r6285, 23;
	shf.l.wrap.b32 	%r6291, %r6285, %r6284, 23;
	mov.b64 	%rd6518, {%r6291, %r6290};
	xor.b64  	%rd6519, %rd6517, %rd6518;
	and.b64  	%rd6520, %rd6513, %rd6488;
	not.b64 	%rd6521, %rd6513;
	and.b64  	%rd6522, %rd6463, %rd6521;
	or.b64  	%rd6523, %rd6520, %rd6522;
	add.s64 	%rd6524, %rd6523, %rd6438;
	add.s64 	%rd6525, %rd6524, %rd6519;
	add.s64 	%rd6526, %rd6525, %rd91;
	add.s64 	%rd6527, %rd6526, %rd4895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6292,%dummy}, %rd6514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6293}, %rd6514;
	}
	shf.r.wrap.b32 	%r6294, %r6293, %r6292, 28;
	shf.r.wrap.b32 	%r6295, %r6292, %r6293, 28;
	mov.b64 	%rd6528, {%r6295, %r6294};
	shf.l.wrap.b32 	%r6296, %r6292, %r6293, 30;
	shf.l.wrap.b32 	%r6297, %r6293, %r6292, 30;
	mov.b64 	%rd6529, {%r6297, %r6296};
	xor.b64  	%rd6530, %rd6528, %rd6529;
	shf.l.wrap.b32 	%r6298, %r6292, %r6293, 25;
	shf.l.wrap.b32 	%r6299, %r6293, %r6292, 25;
	mov.b64 	%rd6531, {%r6299, %r6298};
	xor.b64  	%rd6532, %rd6530, %rd6531;
	xor.b64  	%rd6533, %rd6489, %rd6464;
	and.b64  	%rd6534, %rd6514, %rd6533;
	and.b64  	%rd6535, %rd6489, %rd6464;
	xor.b64  	%rd6536, %rd6534, %rd6535;
	add.s64 	%rd6537, %rd6532, %rd6536;
	add.s64 	%rd6538, %rd6527, %rd6439;
	add.s64 	%rd6539, %rd6537, %rd6527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6300,%dummy}, %rd6538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6301}, %rd6538;
	}
	shf.r.wrap.b32 	%r6302, %r6301, %r6300, 14;
	shf.r.wrap.b32 	%r6303, %r6300, %r6301, 14;
	mov.b64 	%rd6540, {%r6303, %r6302};
	shf.r.wrap.b32 	%r6304, %r6301, %r6300, 18;
	shf.r.wrap.b32 	%r6305, %r6300, %r6301, 18;
	mov.b64 	%rd6541, {%r6305, %r6304};
	xor.b64  	%rd6542, %rd6540, %rd6541;
	shf.l.wrap.b32 	%r6306, %r6300, %r6301, 23;
	shf.l.wrap.b32 	%r6307, %r6301, %r6300, 23;
	mov.b64 	%rd6543, {%r6307, %r6306};
	xor.b64  	%rd6544, %rd6542, %rd6543;
	and.b64  	%rd6545, %rd6538, %rd6513;
	not.b64 	%rd6546, %rd6538;
	and.b64  	%rd6547, %rd6488, %rd6546;
	or.b64  	%rd6548, %rd6545, %rd6547;
	add.s64 	%rd6549, %rd6548, %rd6463;
	add.s64 	%rd6550, %rd6549, %rd6544;
	add.s64 	%rd6551, %rd6550, %rd92;
	add.s64 	%rd6552, %rd6551, %rd4908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6308,%dummy}, %rd6539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6309}, %rd6539;
	}
	shf.r.wrap.b32 	%r6310, %r6309, %r6308, 28;
	shf.r.wrap.b32 	%r6311, %r6308, %r6309, 28;
	mov.b64 	%rd6553, {%r6311, %r6310};
	shf.l.wrap.b32 	%r6312, %r6308, %r6309, 30;
	shf.l.wrap.b32 	%r6313, %r6309, %r6308, 30;
	mov.b64 	%rd6554, {%r6313, %r6312};
	xor.b64  	%rd6555, %rd6553, %rd6554;
	shf.l.wrap.b32 	%r6314, %r6308, %r6309, 25;
	shf.l.wrap.b32 	%r6315, %r6309, %r6308, 25;
	mov.b64 	%rd6556, {%r6315, %r6314};
	xor.b64  	%rd6557, %rd6555, %rd6556;
	xor.b64  	%rd6558, %rd6514, %rd6489;
	and.b64  	%rd6559, %rd6539, %rd6558;
	and.b64  	%rd6560, %rd6514, %rd6489;
	xor.b64  	%rd6561, %rd6559, %rd6560;
	add.s64 	%rd6562, %rd6557, %rd6561;
	add.s64 	%rd6563, %rd6552, %rd6464;
	add.s64 	%rd6564, %rd6562, %rd6552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6316,%dummy}, %rd6563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6317}, %rd6563;
	}
	shf.r.wrap.b32 	%r6318, %r6317, %r6316, 14;
	shf.r.wrap.b32 	%r6319, %r6316, %r6317, 14;
	mov.b64 	%rd6565, {%r6319, %r6318};
	shf.r.wrap.b32 	%r6320, %r6317, %r6316, 18;
	shf.r.wrap.b32 	%r6321, %r6316, %r6317, 18;
	mov.b64 	%rd6566, {%r6321, %r6320};
	xor.b64  	%rd6567, %rd6565, %rd6566;
	shf.l.wrap.b32 	%r6322, %r6316, %r6317, 23;
	shf.l.wrap.b32 	%r6323, %r6317, %r6316, 23;
	mov.b64 	%rd6568, {%r6323, %r6322};
	xor.b64  	%rd6569, %rd6567, %rd6568;
	and.b64  	%rd6570, %rd6563, %rd6538;
	not.b64 	%rd6571, %rd6563;
	and.b64  	%rd6572, %rd6513, %rd6571;
	or.b64  	%rd6573, %rd6570, %rd6572;
	add.s64 	%rd6574, %rd6573, %rd6488;
	add.s64 	%rd6575, %rd6574, %rd6569;
	add.s64 	%rd6576, %rd6575, %rd93;
	add.s64 	%rd6577, %rd6576, %rd4921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6324,%dummy}, %rd6564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6325}, %rd6564;
	}
	shf.r.wrap.b32 	%r6326, %r6325, %r6324, 28;
	shf.r.wrap.b32 	%r6327, %r6324, %r6325, 28;
	mov.b64 	%rd6578, {%r6327, %r6326};
	shf.l.wrap.b32 	%r6328, %r6324, %r6325, 30;
	shf.l.wrap.b32 	%r6329, %r6325, %r6324, 30;
	mov.b64 	%rd6579, {%r6329, %r6328};
	xor.b64  	%rd6580, %rd6578, %rd6579;
	shf.l.wrap.b32 	%r6330, %r6324, %r6325, 25;
	shf.l.wrap.b32 	%r6331, %r6325, %r6324, 25;
	mov.b64 	%rd6581, {%r6331, %r6330};
	xor.b64  	%rd6582, %rd6580, %rd6581;
	xor.b64  	%rd6583, %rd6539, %rd6514;
	and.b64  	%rd6584, %rd6564, %rd6583;
	and.b64  	%rd6585, %rd6539, %rd6514;
	xor.b64  	%rd6586, %rd6584, %rd6585;
	add.s64 	%rd6587, %rd6582, %rd6586;
	add.s64 	%rd6588, %rd6577, %rd6489;
	add.s64 	%rd6589, %rd6587, %rd6577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6332,%dummy}, %rd6588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6333}, %rd6588;
	}
	shf.r.wrap.b32 	%r6334, %r6333, %r6332, 14;
	shf.r.wrap.b32 	%r6335, %r6332, %r6333, 14;
	mov.b64 	%rd6590, {%r6335, %r6334};
	shf.r.wrap.b32 	%r6336, %r6333, %r6332, 18;
	shf.r.wrap.b32 	%r6337, %r6332, %r6333, 18;
	mov.b64 	%rd6591, {%r6337, %r6336};
	xor.b64  	%rd6592, %rd6590, %rd6591;
	shf.l.wrap.b32 	%r6338, %r6332, %r6333, 23;
	shf.l.wrap.b32 	%r6339, %r6333, %r6332, 23;
	mov.b64 	%rd6593, {%r6339, %r6338};
	xor.b64  	%rd6594, %rd6592, %rd6593;
	and.b64  	%rd6595, %rd6588, %rd6563;
	not.b64 	%rd6596, %rd6588;
	and.b64  	%rd6597, %rd6538, %rd6596;
	or.b64  	%rd6598, %rd6595, %rd6597;
	add.s64 	%rd6599, %rd6598, %rd6513;
	add.s64 	%rd6600, %rd6599, %rd6594;
	add.s64 	%rd6601, %rd6600, %rd94;
	add.s64 	%rd6602, %rd6601, %rd4934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6340,%dummy}, %rd6589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6341}, %rd6589;
	}
	shf.r.wrap.b32 	%r6342, %r6341, %r6340, 28;
	shf.r.wrap.b32 	%r6343, %r6340, %r6341, 28;
	mov.b64 	%rd6603, {%r6343, %r6342};
	shf.l.wrap.b32 	%r6344, %r6340, %r6341, 30;
	shf.l.wrap.b32 	%r6345, %r6341, %r6340, 30;
	mov.b64 	%rd6604, {%r6345, %r6344};
	xor.b64  	%rd6605, %rd6603, %rd6604;
	shf.l.wrap.b32 	%r6346, %r6340, %r6341, 25;
	shf.l.wrap.b32 	%r6347, %r6341, %r6340, 25;
	mov.b64 	%rd6606, {%r6347, %r6346};
	xor.b64  	%rd6607, %rd6605, %rd6606;
	xor.b64  	%rd6608, %rd6564, %rd6539;
	and.b64  	%rd6609, %rd6589, %rd6608;
	and.b64  	%rd6610, %rd6564, %rd6539;
	xor.b64  	%rd6611, %rd6609, %rd6610;
	add.s64 	%rd6612, %rd6607, %rd6611;
	add.s64 	%rd6613, %rd6602, %rd6514;
	add.s64 	%rd6614, %rd6612, %rd6602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6348,%dummy}, %rd6613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6349}, %rd6613;
	}
	shf.r.wrap.b32 	%r6350, %r6349, %r6348, 14;
	shf.r.wrap.b32 	%r6351, %r6348, %r6349, 14;
	mov.b64 	%rd6615, {%r6351, %r6350};
	shf.r.wrap.b32 	%r6352, %r6349, %r6348, 18;
	shf.r.wrap.b32 	%r6353, %r6348, %r6349, 18;
	mov.b64 	%rd6616, {%r6353, %r6352};
	xor.b64  	%rd6617, %rd6615, %rd6616;
	shf.l.wrap.b32 	%r6354, %r6348, %r6349, 23;
	shf.l.wrap.b32 	%r6355, %r6349, %r6348, 23;
	mov.b64 	%rd6618, {%r6355, %r6354};
	xor.b64  	%rd6619, %rd6617, %rd6618;
	and.b64  	%rd6620, %rd6613, %rd6588;
	not.b64 	%rd6621, %rd6613;
	and.b64  	%rd6622, %rd6563, %rd6621;
	or.b64  	%rd6623, %rd6620, %rd6622;
	add.s64 	%rd6624, %rd6623, %rd6538;
	add.s64 	%rd6625, %rd6624, %rd6619;
	add.s64 	%rd6626, %rd6625, %rd95;
	add.s64 	%rd6627, %rd6626, %rd4947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6356,%dummy}, %rd6614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6357}, %rd6614;
	}
	shf.r.wrap.b32 	%r6358, %r6357, %r6356, 28;
	shf.r.wrap.b32 	%r6359, %r6356, %r6357, 28;
	mov.b64 	%rd6628, {%r6359, %r6358};
	shf.l.wrap.b32 	%r6360, %r6356, %r6357, 30;
	shf.l.wrap.b32 	%r6361, %r6357, %r6356, 30;
	mov.b64 	%rd6629, {%r6361, %r6360};
	xor.b64  	%rd6630, %rd6628, %rd6629;
	shf.l.wrap.b32 	%r6362, %r6356, %r6357, 25;
	shf.l.wrap.b32 	%r6363, %r6357, %r6356, 25;
	mov.b64 	%rd6631, {%r6363, %r6362};
	xor.b64  	%rd6632, %rd6630, %rd6631;
	xor.b64  	%rd6633, %rd6589, %rd6564;
	and.b64  	%rd6634, %rd6614, %rd6633;
	and.b64  	%rd6635, %rd6589, %rd6564;
	xor.b64  	%rd6636, %rd6634, %rd6635;
	add.s64 	%rd6637, %rd6632, %rd6636;
	add.s64 	%rd6638, %rd6627, %rd6539;
	add.s64 	%rd6639, %rd6637, %rd6627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6364,%dummy}, %rd6638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6365}, %rd6638;
	}
	shf.r.wrap.b32 	%r6366, %r6365, %r6364, 14;
	shf.r.wrap.b32 	%r6367, %r6364, %r6365, 14;
	mov.b64 	%rd6640, {%r6367, %r6366};
	shf.r.wrap.b32 	%r6368, %r6365, %r6364, 18;
	shf.r.wrap.b32 	%r6369, %r6364, %r6365, 18;
	mov.b64 	%rd6641, {%r6369, %r6368};
	xor.b64  	%rd6642, %rd6640, %rd6641;
	shf.l.wrap.b32 	%r6370, %r6364, %r6365, 23;
	shf.l.wrap.b32 	%r6371, %r6365, %r6364, 23;
	mov.b64 	%rd6643, {%r6371, %r6370};
	xor.b64  	%rd6644, %rd6642, %rd6643;
	and.b64  	%rd6645, %rd6638, %rd6613;
	not.b64 	%rd6646, %rd6638;
	and.b64  	%rd6647, %rd6588, %rd6646;
	or.b64  	%rd6648, %rd6645, %rd6647;
	add.s64 	%rd6649, %rd6648, %rd6563;
	add.s64 	%rd6650, %rd6649, %rd6644;
	add.s64 	%rd6651, %rd6650, %rd96;
	add.s64 	%rd6652, %rd6651, %rd4960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6372,%dummy}, %rd6639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6373}, %rd6639;
	}
	shf.r.wrap.b32 	%r6374, %r6373, %r6372, 28;
	shf.r.wrap.b32 	%r6375, %r6372, %r6373, 28;
	mov.b64 	%rd6653, {%r6375, %r6374};
	shf.l.wrap.b32 	%r6376, %r6372, %r6373, 30;
	shf.l.wrap.b32 	%r6377, %r6373, %r6372, 30;
	mov.b64 	%rd6654, {%r6377, %r6376};
	xor.b64  	%rd6655, %rd6653, %rd6654;
	shf.l.wrap.b32 	%r6378, %r6372, %r6373, 25;
	shf.l.wrap.b32 	%r6379, %r6373, %r6372, 25;
	mov.b64 	%rd6656, {%r6379, %r6378};
	xor.b64  	%rd6657, %rd6655, %rd6656;
	xor.b64  	%rd6658, %rd6614, %rd6589;
	and.b64  	%rd6659, %rd6639, %rd6658;
	and.b64  	%rd6660, %rd6614, %rd6589;
	xor.b64  	%rd6661, %rd6659, %rd6660;
	add.s64 	%rd6662, %rd6657, %rd6661;
	add.s64 	%rd6663, %rd6652, %rd6564;
	add.s64 	%rd6664, %rd6662, %rd6652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6380,%dummy}, %rd6663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6381}, %rd6663;
	}
	shf.r.wrap.b32 	%r6382, %r6381, %r6380, 14;
	shf.r.wrap.b32 	%r6383, %r6380, %r6381, 14;
	mov.b64 	%rd6665, {%r6383, %r6382};
	shf.r.wrap.b32 	%r6384, %r6381, %r6380, 18;
	shf.r.wrap.b32 	%r6385, %r6380, %r6381, 18;
	mov.b64 	%rd6666, {%r6385, %r6384};
	xor.b64  	%rd6667, %rd6665, %rd6666;
	shf.l.wrap.b32 	%r6386, %r6380, %r6381, 23;
	shf.l.wrap.b32 	%r6387, %r6381, %r6380, 23;
	mov.b64 	%rd6668, {%r6387, %r6386};
	xor.b64  	%rd6669, %rd6667, %rd6668;
	and.b64  	%rd6670, %rd6663, %rd6638;
	not.b64 	%rd6671, %rd6663;
	and.b64  	%rd6672, %rd6613, %rd6671;
	or.b64  	%rd6673, %rd6670, %rd6672;
	add.s64 	%rd6674, %rd6673, %rd6588;
	add.s64 	%rd6675, %rd6674, %rd6669;
	add.s64 	%rd6676, %rd6675, %rd97;
	add.s64 	%rd6677, %rd6676, %rd4973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6388,%dummy}, %rd6664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6389}, %rd6664;
	}
	shf.r.wrap.b32 	%r6390, %r6389, %r6388, 28;
	shf.r.wrap.b32 	%r6391, %r6388, %r6389, 28;
	mov.b64 	%rd6678, {%r6391, %r6390};
	shf.l.wrap.b32 	%r6392, %r6388, %r6389, 30;
	shf.l.wrap.b32 	%r6393, %r6389, %r6388, 30;
	mov.b64 	%rd6679, {%r6393, %r6392};
	xor.b64  	%rd6680, %rd6678, %rd6679;
	shf.l.wrap.b32 	%r6394, %r6388, %r6389, 25;
	shf.l.wrap.b32 	%r6395, %r6389, %r6388, 25;
	mov.b64 	%rd6681, {%r6395, %r6394};
	xor.b64  	%rd6682, %rd6680, %rd6681;
	xor.b64  	%rd6683, %rd6639, %rd6614;
	and.b64  	%rd6684, %rd6664, %rd6683;
	and.b64  	%rd6685, %rd6639, %rd6614;
	xor.b64  	%rd6686, %rd6684, %rd6685;
	add.s64 	%rd6687, %rd6682, %rd6686;
	add.s64 	%rd6688, %rd6677, %rd6589;
	add.s64 	%rd6689, %rd6687, %rd6677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6396,%dummy}, %rd6688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6397}, %rd6688;
	}
	shf.r.wrap.b32 	%r6398, %r6397, %r6396, 14;
	shf.r.wrap.b32 	%r6399, %r6396, %r6397, 14;
	mov.b64 	%rd6690, {%r6399, %r6398};
	shf.r.wrap.b32 	%r6400, %r6397, %r6396, 18;
	shf.r.wrap.b32 	%r6401, %r6396, %r6397, 18;
	mov.b64 	%rd6691, {%r6401, %r6400};
	xor.b64  	%rd6692, %rd6690, %rd6691;
	shf.l.wrap.b32 	%r6402, %r6396, %r6397, 23;
	shf.l.wrap.b32 	%r6403, %r6397, %r6396, 23;
	mov.b64 	%rd6693, {%r6403, %r6402};
	xor.b64  	%rd6694, %rd6692, %rd6693;
	and.b64  	%rd6695, %rd6688, %rd6663;
	not.b64 	%rd6696, %rd6688;
	and.b64  	%rd6697, %rd6638, %rd6696;
	or.b64  	%rd6698, %rd6695, %rd6697;
	add.s64 	%rd6699, %rd6698, %rd6613;
	add.s64 	%rd6700, %rd6699, %rd6694;
	add.s64 	%rd6701, %rd6700, %rd98;
	add.s64 	%rd6702, %rd6701, %rd4986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6404,%dummy}, %rd6689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6405}, %rd6689;
	}
	shf.r.wrap.b32 	%r6406, %r6405, %r6404, 28;
	shf.r.wrap.b32 	%r6407, %r6404, %r6405, 28;
	mov.b64 	%rd6703, {%r6407, %r6406};
	shf.l.wrap.b32 	%r6408, %r6404, %r6405, 30;
	shf.l.wrap.b32 	%r6409, %r6405, %r6404, 30;
	mov.b64 	%rd6704, {%r6409, %r6408};
	xor.b64  	%rd6705, %rd6703, %rd6704;
	shf.l.wrap.b32 	%r6410, %r6404, %r6405, 25;
	shf.l.wrap.b32 	%r6411, %r6405, %r6404, 25;
	mov.b64 	%rd6706, {%r6411, %r6410};
	xor.b64  	%rd6707, %rd6705, %rd6706;
	xor.b64  	%rd6708, %rd6664, %rd6639;
	and.b64  	%rd6709, %rd6689, %rd6708;
	and.b64  	%rd6710, %rd6664, %rd6639;
	xor.b64  	%rd6711, %rd6709, %rd6710;
	add.s64 	%rd6712, %rd6707, %rd6711;
	add.s64 	%rd6713, %rd6702, %rd6614;
	add.s64 	%rd6714, %rd6712, %rd6702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6412,%dummy}, %rd6713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6413}, %rd6713;
	}
	shf.r.wrap.b32 	%r6414, %r6413, %r6412, 14;
	shf.r.wrap.b32 	%r6415, %r6412, %r6413, 14;
	mov.b64 	%rd6715, {%r6415, %r6414};
	shf.r.wrap.b32 	%r6416, %r6413, %r6412, 18;
	shf.r.wrap.b32 	%r6417, %r6412, %r6413, 18;
	mov.b64 	%rd6716, {%r6417, %r6416};
	xor.b64  	%rd6717, %rd6715, %rd6716;
	shf.l.wrap.b32 	%r6418, %r6412, %r6413, 23;
	shf.l.wrap.b32 	%r6419, %r6413, %r6412, 23;
	mov.b64 	%rd6718, {%r6419, %r6418};
	xor.b64  	%rd6719, %rd6717, %rd6718;
	and.b64  	%rd6720, %rd6713, %rd6688;
	not.b64 	%rd6721, %rd6713;
	and.b64  	%rd6722, %rd6663, %rd6721;
	or.b64  	%rd6723, %rd6720, %rd6722;
	add.s64 	%rd6724, %rd6723, %rd6638;
	add.s64 	%rd6725, %rd6724, %rd6719;
	add.s64 	%rd6726, %rd6725, %rd99;
	add.s64 	%rd6727, %rd6726, %rd4999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6420,%dummy}, %rd6714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6421}, %rd6714;
	}
	shf.r.wrap.b32 	%r6422, %r6421, %r6420, 28;
	shf.r.wrap.b32 	%r6423, %r6420, %r6421, 28;
	mov.b64 	%rd6728, {%r6423, %r6422};
	shf.l.wrap.b32 	%r6424, %r6420, %r6421, 30;
	shf.l.wrap.b32 	%r6425, %r6421, %r6420, 30;
	mov.b64 	%rd6729, {%r6425, %r6424};
	xor.b64  	%rd6730, %rd6728, %rd6729;
	shf.l.wrap.b32 	%r6426, %r6420, %r6421, 25;
	shf.l.wrap.b32 	%r6427, %r6421, %r6420, 25;
	mov.b64 	%rd6731, {%r6427, %r6426};
	xor.b64  	%rd6732, %rd6730, %rd6731;
	xor.b64  	%rd6733, %rd6689, %rd6664;
	and.b64  	%rd6734, %rd6714, %rd6733;
	and.b64  	%rd6735, %rd6689, %rd6664;
	xor.b64  	%rd6736, %rd6734, %rd6735;
	add.s64 	%rd6737, %rd6732, %rd6736;
	add.s64 	%rd6738, %rd6727, %rd6639;
	add.s64 	%rd6739, %rd6737, %rd6727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6428,%dummy}, %rd6738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6429}, %rd6738;
	}
	shf.r.wrap.b32 	%r6430, %r6429, %r6428, 14;
	shf.r.wrap.b32 	%r6431, %r6428, %r6429, 14;
	mov.b64 	%rd6740, {%r6431, %r6430};
	shf.r.wrap.b32 	%r6432, %r6429, %r6428, 18;
	shf.r.wrap.b32 	%r6433, %r6428, %r6429, 18;
	mov.b64 	%rd6741, {%r6433, %r6432};
	xor.b64  	%rd6742, %rd6740, %rd6741;
	shf.l.wrap.b32 	%r6434, %r6428, %r6429, 23;
	shf.l.wrap.b32 	%r6435, %r6429, %r6428, 23;
	mov.b64 	%rd6743, {%r6435, %r6434};
	xor.b64  	%rd6744, %rd6742, %rd6743;
	and.b64  	%rd6745, %rd6738, %rd6713;
	not.b64 	%rd6746, %rd6738;
	and.b64  	%rd6747, %rd6688, %rd6746;
	or.b64  	%rd6748, %rd6745, %rd6747;
	add.s64 	%rd6749, %rd6748, %rd6663;
	add.s64 	%rd6750, %rd6749, %rd6744;
	add.s64 	%rd6751, %rd6750, %rd100;
	add.s64 	%rd6752, %rd6751, %rd5012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6436,%dummy}, %rd6739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6437}, %rd6739;
	}
	shf.r.wrap.b32 	%r6438, %r6437, %r6436, 28;
	shf.r.wrap.b32 	%r6439, %r6436, %r6437, 28;
	mov.b64 	%rd6753, {%r6439, %r6438};
	shf.l.wrap.b32 	%r6440, %r6436, %r6437, 30;
	shf.l.wrap.b32 	%r6441, %r6437, %r6436, 30;
	mov.b64 	%rd6754, {%r6441, %r6440};
	xor.b64  	%rd6755, %rd6753, %rd6754;
	shf.l.wrap.b32 	%r6442, %r6436, %r6437, 25;
	shf.l.wrap.b32 	%r6443, %r6437, %r6436, 25;
	mov.b64 	%rd6756, {%r6443, %r6442};
	xor.b64  	%rd6757, %rd6755, %rd6756;
	xor.b64  	%rd6758, %rd6714, %rd6689;
	and.b64  	%rd6759, %rd6739, %rd6758;
	and.b64  	%rd6760, %rd6714, %rd6689;
	xor.b64  	%rd6761, %rd6759, %rd6760;
	add.s64 	%rd6762, %rd6757, %rd6761;
	add.s64 	%rd6763, %rd6752, %rd6664;
	add.s64 	%rd6764, %rd6762, %rd6752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6444,%dummy}, %rd6763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6445}, %rd6763;
	}
	shf.r.wrap.b32 	%r6446, %r6445, %r6444, 14;
	shf.r.wrap.b32 	%r6447, %r6444, %r6445, 14;
	mov.b64 	%rd6765, {%r6447, %r6446};
	shf.r.wrap.b32 	%r6448, %r6445, %r6444, 18;
	shf.r.wrap.b32 	%r6449, %r6444, %r6445, 18;
	mov.b64 	%rd6766, {%r6449, %r6448};
	xor.b64  	%rd6767, %rd6765, %rd6766;
	shf.l.wrap.b32 	%r6450, %r6444, %r6445, 23;
	shf.l.wrap.b32 	%r6451, %r6445, %r6444, 23;
	mov.b64 	%rd6768, {%r6451, %r6450};
	xor.b64  	%rd6769, %rd6767, %rd6768;
	and.b64  	%rd6770, %rd6763, %rd6738;
	not.b64 	%rd6771, %rd6763;
	and.b64  	%rd6772, %rd6713, %rd6771;
	or.b64  	%rd6773, %rd6770, %rd6772;
	add.s64 	%rd6774, %rd6773, %rd6688;
	add.s64 	%rd6775, %rd6774, %rd6769;
	add.s64 	%rd6776, %rd6775, %rd101;
	add.s64 	%rd6777, %rd6776, %rd5025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6452,%dummy}, %rd6764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6453}, %rd6764;
	}
	shf.r.wrap.b32 	%r6454, %r6453, %r6452, 28;
	shf.r.wrap.b32 	%r6455, %r6452, %r6453, 28;
	mov.b64 	%rd6778, {%r6455, %r6454};
	shf.l.wrap.b32 	%r6456, %r6452, %r6453, 30;
	shf.l.wrap.b32 	%r6457, %r6453, %r6452, 30;
	mov.b64 	%rd6779, {%r6457, %r6456};
	xor.b64  	%rd6780, %rd6778, %rd6779;
	shf.l.wrap.b32 	%r6458, %r6452, %r6453, 25;
	shf.l.wrap.b32 	%r6459, %r6453, %r6452, 25;
	mov.b64 	%rd6781, {%r6459, %r6458};
	xor.b64  	%rd6782, %rd6780, %rd6781;
	xor.b64  	%rd6783, %rd6739, %rd6714;
	and.b64  	%rd6784, %rd6764, %rd6783;
	and.b64  	%rd6785, %rd6739, %rd6714;
	xor.b64  	%rd6786, %rd6784, %rd6785;
	add.s64 	%rd6787, %rd6782, %rd6786;
	add.s64 	%rd6788, %rd6777, %rd6689;
	add.s64 	%rd6789, %rd6787, %rd6777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6460,%dummy}, %rd6788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6461}, %rd6788;
	}
	shf.r.wrap.b32 	%r6462, %r6461, %r6460, 14;
	shf.r.wrap.b32 	%r6463, %r6460, %r6461, 14;
	mov.b64 	%rd6790, {%r6463, %r6462};
	shf.r.wrap.b32 	%r6464, %r6461, %r6460, 18;
	shf.r.wrap.b32 	%r6465, %r6460, %r6461, 18;
	mov.b64 	%rd6791, {%r6465, %r6464};
	xor.b64  	%rd6792, %rd6790, %rd6791;
	shf.l.wrap.b32 	%r6466, %r6460, %r6461, 23;
	shf.l.wrap.b32 	%r6467, %r6461, %r6460, 23;
	mov.b64 	%rd6793, {%r6467, %r6466};
	xor.b64  	%rd6794, %rd6792, %rd6793;
	and.b64  	%rd6795, %rd6788, %rd6763;
	not.b64 	%rd6796, %rd6788;
	and.b64  	%rd6797, %rd6738, %rd6796;
	or.b64  	%rd6798, %rd6795, %rd6797;
	add.s64 	%rd6799, %rd6798, %rd6713;
	add.s64 	%rd6800, %rd6799, %rd6794;
	add.s64 	%rd6801, %rd6800, %rd102;
	add.s64 	%rd6802, %rd6801, %rd5038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6468,%dummy}, %rd6789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6469}, %rd6789;
	}
	shf.r.wrap.b32 	%r6470, %r6469, %r6468, 28;
	shf.r.wrap.b32 	%r6471, %r6468, %r6469, 28;
	mov.b64 	%rd6803, {%r6471, %r6470};
	shf.l.wrap.b32 	%r6472, %r6468, %r6469, 30;
	shf.l.wrap.b32 	%r6473, %r6469, %r6468, 30;
	mov.b64 	%rd6804, {%r6473, %r6472};
	xor.b64  	%rd6805, %rd6803, %rd6804;
	shf.l.wrap.b32 	%r6474, %r6468, %r6469, 25;
	shf.l.wrap.b32 	%r6475, %r6469, %r6468, 25;
	mov.b64 	%rd6806, {%r6475, %r6474};
	xor.b64  	%rd6807, %rd6805, %rd6806;
	xor.b64  	%rd6808, %rd6764, %rd6739;
	and.b64  	%rd6809, %rd6789, %rd6808;
	and.b64  	%rd6810, %rd6764, %rd6739;
	xor.b64  	%rd6811, %rd6809, %rd6810;
	add.s64 	%rd6812, %rd6807, %rd6811;
	add.s64 	%rd6813, %rd6802, %rd6714;
	add.s64 	%rd6814, %rd6812, %rd6802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6476,%dummy}, %rd6813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6477}, %rd6813;
	}
	shf.r.wrap.b32 	%r6478, %r6477, %r6476, 14;
	shf.r.wrap.b32 	%r6479, %r6476, %r6477, 14;
	mov.b64 	%rd6815, {%r6479, %r6478};
	shf.r.wrap.b32 	%r6480, %r6477, %r6476, 18;
	shf.r.wrap.b32 	%r6481, %r6476, %r6477, 18;
	mov.b64 	%rd6816, {%r6481, %r6480};
	xor.b64  	%rd6817, %rd6815, %rd6816;
	shf.l.wrap.b32 	%r6482, %r6476, %r6477, 23;
	shf.l.wrap.b32 	%r6483, %r6477, %r6476, 23;
	mov.b64 	%rd6818, {%r6483, %r6482};
	xor.b64  	%rd6819, %rd6817, %rd6818;
	and.b64  	%rd6820, %rd6813, %rd6788;
	not.b64 	%rd6821, %rd6813;
	and.b64  	%rd6822, %rd6763, %rd6821;
	or.b64  	%rd6823, %rd6820, %rd6822;
	add.s64 	%rd6824, %rd6823, %rd6738;
	add.s64 	%rd6825, %rd6824, %rd6819;
	add.s64 	%rd6826, %rd6825, %rd103;
	add.s64 	%rd6827, %rd6826, %rd5051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6484,%dummy}, %rd6814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6485}, %rd6814;
	}
	shf.r.wrap.b32 	%r6486, %r6485, %r6484, 28;
	shf.r.wrap.b32 	%r6487, %r6484, %r6485, 28;
	mov.b64 	%rd6828, {%r6487, %r6486};
	shf.l.wrap.b32 	%r6488, %r6484, %r6485, 30;
	shf.l.wrap.b32 	%r6489, %r6485, %r6484, 30;
	mov.b64 	%rd6829, {%r6489, %r6488};
	xor.b64  	%rd6830, %rd6828, %rd6829;
	shf.l.wrap.b32 	%r6490, %r6484, %r6485, 25;
	shf.l.wrap.b32 	%r6491, %r6485, %r6484, 25;
	mov.b64 	%rd6831, {%r6491, %r6490};
	xor.b64  	%rd6832, %rd6830, %rd6831;
	xor.b64  	%rd6833, %rd6789, %rd6764;
	and.b64  	%rd6834, %rd6814, %rd6833;
	and.b64  	%rd6835, %rd6789, %rd6764;
	xor.b64  	%rd6836, %rd6834, %rd6835;
	add.s64 	%rd6837, %rd6832, %rd6836;
	add.s64 	%rd6838, %rd6827, %rd6739;
	add.s64 	%rd6839, %rd6837, %rd6827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6492,%dummy}, %rd6838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6493}, %rd6838;
	}
	shf.r.wrap.b32 	%r6494, %r6493, %r6492, 14;
	shf.r.wrap.b32 	%r6495, %r6492, %r6493, 14;
	mov.b64 	%rd6840, {%r6495, %r6494};
	shf.r.wrap.b32 	%r6496, %r6493, %r6492, 18;
	shf.r.wrap.b32 	%r6497, %r6492, %r6493, 18;
	mov.b64 	%rd6841, {%r6497, %r6496};
	xor.b64  	%rd6842, %rd6840, %rd6841;
	shf.l.wrap.b32 	%r6498, %r6492, %r6493, 23;
	shf.l.wrap.b32 	%r6499, %r6493, %r6492, 23;
	mov.b64 	%rd6843, {%r6499, %r6498};
	xor.b64  	%rd6844, %rd6842, %rd6843;
	and.b64  	%rd6845, %rd6838, %rd6813;
	not.b64 	%rd6846, %rd6838;
	and.b64  	%rd6847, %rd6788, %rd6846;
	or.b64  	%rd6848, %rd6845, %rd6847;
	add.s64 	%rd6849, %rd6848, %rd6763;
	add.s64 	%rd6850, %rd6849, %rd6844;
	add.s64 	%rd6851, %rd6850, %rd104;
	add.s64 	%rd6852, %rd6851, %rd5064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6500,%dummy}, %rd6839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6501}, %rd6839;
	}
	shf.r.wrap.b32 	%r6502, %r6501, %r6500, 28;
	shf.r.wrap.b32 	%r6503, %r6500, %r6501, 28;
	mov.b64 	%rd6853, {%r6503, %r6502};
	shf.l.wrap.b32 	%r6504, %r6500, %r6501, 30;
	shf.l.wrap.b32 	%r6505, %r6501, %r6500, 30;
	mov.b64 	%rd6854, {%r6505, %r6504};
	xor.b64  	%rd6855, %rd6853, %rd6854;
	shf.l.wrap.b32 	%r6506, %r6500, %r6501, 25;
	shf.l.wrap.b32 	%r6507, %r6501, %r6500, 25;
	mov.b64 	%rd6856, {%r6507, %r6506};
	xor.b64  	%rd6857, %rd6855, %rd6856;
	xor.b64  	%rd6858, %rd6814, %rd6789;
	and.b64  	%rd6859, %rd6839, %rd6858;
	and.b64  	%rd6860, %rd6814, %rd6789;
	xor.b64  	%rd6861, %rd6859, %rd6860;
	add.s64 	%rd6862, %rd6857, %rd6861;
	add.s64 	%rd6863, %rd6852, %rd6764;
	add.s64 	%rd6864, %rd6862, %rd6852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6508,%dummy}, %rd6863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6509}, %rd6863;
	}
	shf.r.wrap.b32 	%r6510, %r6509, %r6508, 14;
	shf.r.wrap.b32 	%r6511, %r6508, %r6509, 14;
	mov.b64 	%rd6865, {%r6511, %r6510};
	shf.r.wrap.b32 	%r6512, %r6509, %r6508, 18;
	shf.r.wrap.b32 	%r6513, %r6508, %r6509, 18;
	mov.b64 	%rd6866, {%r6513, %r6512};
	xor.b64  	%rd6867, %rd6865, %rd6866;
	shf.l.wrap.b32 	%r6514, %r6508, %r6509, 23;
	shf.l.wrap.b32 	%r6515, %r6509, %r6508, 23;
	mov.b64 	%rd6868, {%r6515, %r6514};
	xor.b64  	%rd6869, %rd6867, %rd6868;
	and.b64  	%rd6870, %rd6863, %rd6838;
	not.b64 	%rd6871, %rd6863;
	and.b64  	%rd6872, %rd6813, %rd6871;
	or.b64  	%rd6873, %rd6870, %rd6872;
	add.s64 	%rd6874, %rd6873, %rd6788;
	add.s64 	%rd6875, %rd6874, %rd6869;
	add.s64 	%rd6876, %rd6875, %rd105;
	add.s64 	%rd6877, %rd6876, %rd5077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6516,%dummy}, %rd6864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6517}, %rd6864;
	}
	shf.r.wrap.b32 	%r6518, %r6517, %r6516, 28;
	shf.r.wrap.b32 	%r6519, %r6516, %r6517, 28;
	mov.b64 	%rd6878, {%r6519, %r6518};
	shf.l.wrap.b32 	%r6520, %r6516, %r6517, 30;
	shf.l.wrap.b32 	%r6521, %r6517, %r6516, 30;
	mov.b64 	%rd6879, {%r6521, %r6520};
	xor.b64  	%rd6880, %rd6878, %rd6879;
	shf.l.wrap.b32 	%r6522, %r6516, %r6517, 25;
	shf.l.wrap.b32 	%r6523, %r6517, %r6516, 25;
	mov.b64 	%rd6881, {%r6523, %r6522};
	xor.b64  	%rd6882, %rd6880, %rd6881;
	xor.b64  	%rd6883, %rd6839, %rd6814;
	and.b64  	%rd6884, %rd6864, %rd6883;
	and.b64  	%rd6885, %rd6839, %rd6814;
	xor.b64  	%rd6886, %rd6884, %rd6885;
	add.s64 	%rd6887, %rd6882, %rd6886;
	add.s64 	%rd6888, %rd6877, %rd6789;
	add.s64 	%rd6889, %rd6887, %rd6877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6524,%dummy}, %rd6888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6525}, %rd6888;
	}
	shf.r.wrap.b32 	%r6526, %r6525, %r6524, 14;
	shf.r.wrap.b32 	%r6527, %r6524, %r6525, 14;
	mov.b64 	%rd6890, {%r6527, %r6526};
	shf.r.wrap.b32 	%r6528, %r6525, %r6524, 18;
	shf.r.wrap.b32 	%r6529, %r6524, %r6525, 18;
	mov.b64 	%rd6891, {%r6529, %r6528};
	xor.b64  	%rd6892, %rd6890, %rd6891;
	shf.l.wrap.b32 	%r6530, %r6524, %r6525, 23;
	shf.l.wrap.b32 	%r6531, %r6525, %r6524, 23;
	mov.b64 	%rd6893, {%r6531, %r6530};
	xor.b64  	%rd6894, %rd6892, %rd6893;
	and.b64  	%rd6895, %rd6888, %rd6863;
	not.b64 	%rd6896, %rd6888;
	and.b64  	%rd6897, %rd6838, %rd6896;
	or.b64  	%rd6898, %rd6895, %rd6897;
	add.s64 	%rd6899, %rd6898, %rd6813;
	add.s64 	%rd6900, %rd6899, %rd6894;
	add.s64 	%rd6901, %rd6900, %rd106;
	add.s64 	%rd6902, %rd6901, %rd5090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6532,%dummy}, %rd6889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6533}, %rd6889;
	}
	shf.r.wrap.b32 	%r6534, %r6533, %r6532, 28;
	shf.r.wrap.b32 	%r6535, %r6532, %r6533, 28;
	mov.b64 	%rd6903, {%r6535, %r6534};
	shf.l.wrap.b32 	%r6536, %r6532, %r6533, 30;
	shf.l.wrap.b32 	%r6537, %r6533, %r6532, 30;
	mov.b64 	%rd6904, {%r6537, %r6536};
	xor.b64  	%rd6905, %rd6903, %rd6904;
	shf.l.wrap.b32 	%r6538, %r6532, %r6533, 25;
	shf.l.wrap.b32 	%r6539, %r6533, %r6532, 25;
	mov.b64 	%rd6906, {%r6539, %r6538};
	xor.b64  	%rd6907, %rd6905, %rd6906;
	xor.b64  	%rd6908, %rd6864, %rd6839;
	and.b64  	%rd6909, %rd6889, %rd6908;
	and.b64  	%rd6910, %rd6864, %rd6839;
	xor.b64  	%rd6911, %rd6909, %rd6910;
	add.s64 	%rd6912, %rd6907, %rd6911;
	add.s64 	%rd6913, %rd6902, %rd6814;
	add.s64 	%rd6914, %rd6912, %rd6902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6540,%dummy}, %rd6913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6541}, %rd6913;
	}
	shf.r.wrap.b32 	%r6542, %r6541, %r6540, 14;
	shf.r.wrap.b32 	%r6543, %r6540, %r6541, 14;
	mov.b64 	%rd6915, {%r6543, %r6542};
	shf.r.wrap.b32 	%r6544, %r6541, %r6540, 18;
	shf.r.wrap.b32 	%r6545, %r6540, %r6541, 18;
	mov.b64 	%rd6916, {%r6545, %r6544};
	xor.b64  	%rd6917, %rd6915, %rd6916;
	shf.l.wrap.b32 	%r6546, %r6540, %r6541, 23;
	shf.l.wrap.b32 	%r6547, %r6541, %r6540, 23;
	mov.b64 	%rd6918, {%r6547, %r6546};
	xor.b64  	%rd6919, %rd6917, %rd6918;
	and.b64  	%rd6920, %rd6913, %rd6888;
	not.b64 	%rd6921, %rd6913;
	and.b64  	%rd6922, %rd6863, %rd6921;
	or.b64  	%rd6923, %rd6920, %rd6922;
	add.s64 	%rd6924, %rd6923, %rd6838;
	add.s64 	%rd6925, %rd6924, %rd6919;
	add.s64 	%rd6926, %rd6925, %rd107;
	add.s64 	%rd6927, %rd6926, %rd5103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6548,%dummy}, %rd6914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6549}, %rd6914;
	}
	shf.r.wrap.b32 	%r6550, %r6549, %r6548, 28;
	shf.r.wrap.b32 	%r6551, %r6548, %r6549, 28;
	mov.b64 	%rd6928, {%r6551, %r6550};
	shf.l.wrap.b32 	%r6552, %r6548, %r6549, 30;
	shf.l.wrap.b32 	%r6553, %r6549, %r6548, 30;
	mov.b64 	%rd6929, {%r6553, %r6552};
	xor.b64  	%rd6930, %rd6928, %rd6929;
	shf.l.wrap.b32 	%r6554, %r6548, %r6549, 25;
	shf.l.wrap.b32 	%r6555, %r6549, %r6548, 25;
	mov.b64 	%rd6931, {%r6555, %r6554};
	xor.b64  	%rd6932, %rd6930, %rd6931;
	xor.b64  	%rd6933, %rd6889, %rd6864;
	and.b64  	%rd6934, %rd6914, %rd6933;
	and.b64  	%rd6935, %rd6889, %rd6864;
	xor.b64  	%rd6936, %rd6934, %rd6935;
	add.s64 	%rd6937, %rd6932, %rd6936;
	add.s64 	%rd6938, %rd6927, %rd6839;
	add.s64 	%rd6939, %rd6937, %rd6927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6556,%dummy}, %rd6938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6557}, %rd6938;
	}
	shf.r.wrap.b32 	%r6558, %r6557, %r6556, 14;
	shf.r.wrap.b32 	%r6559, %r6556, %r6557, 14;
	mov.b64 	%rd6940, {%r6559, %r6558};
	shf.r.wrap.b32 	%r6560, %r6557, %r6556, 18;
	shf.r.wrap.b32 	%r6561, %r6556, %r6557, 18;
	mov.b64 	%rd6941, {%r6561, %r6560};
	xor.b64  	%rd6942, %rd6940, %rd6941;
	shf.l.wrap.b32 	%r6562, %r6556, %r6557, 23;
	shf.l.wrap.b32 	%r6563, %r6557, %r6556, 23;
	mov.b64 	%rd6943, {%r6563, %r6562};
	xor.b64  	%rd6944, %rd6942, %rd6943;
	and.b64  	%rd6945, %rd6938, %rd6913;
	not.b64 	%rd6946, %rd6938;
	and.b64  	%rd6947, %rd6888, %rd6946;
	or.b64  	%rd6948, %rd6945, %rd6947;
	add.s64 	%rd6949, %rd6948, %rd6863;
	add.s64 	%rd6950, %rd6949, %rd6944;
	add.s64 	%rd6951, %rd6950, %rd108;
	add.s64 	%rd6952, %rd6951, %rd5116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6564,%dummy}, %rd6939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6565}, %rd6939;
	}
	shf.r.wrap.b32 	%r6566, %r6565, %r6564, 28;
	shf.r.wrap.b32 	%r6567, %r6564, %r6565, 28;
	mov.b64 	%rd6953, {%r6567, %r6566};
	shf.l.wrap.b32 	%r6568, %r6564, %r6565, 30;
	shf.l.wrap.b32 	%r6569, %r6565, %r6564, 30;
	mov.b64 	%rd6954, {%r6569, %r6568};
	xor.b64  	%rd6955, %rd6953, %rd6954;
	shf.l.wrap.b32 	%r6570, %r6564, %r6565, 25;
	shf.l.wrap.b32 	%r6571, %r6565, %r6564, 25;
	mov.b64 	%rd6956, {%r6571, %r6570};
	xor.b64  	%rd6957, %rd6955, %rd6956;
	xor.b64  	%rd6958, %rd6914, %rd6889;
	and.b64  	%rd6959, %rd6939, %rd6958;
	and.b64  	%rd6960, %rd6914, %rd6889;
	xor.b64  	%rd6961, %rd6959, %rd6960;
	add.s64 	%rd6962, %rd6957, %rd6961;
	add.s64 	%rd6963, %rd6952, %rd6864;
	add.s64 	%rd6964, %rd6962, %rd6952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6572,%dummy}, %rd6963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6573}, %rd6963;
	}
	shf.r.wrap.b32 	%r6574, %r6573, %r6572, 14;
	shf.r.wrap.b32 	%r6575, %r6572, %r6573, 14;
	mov.b64 	%rd6965, {%r6575, %r6574};
	shf.r.wrap.b32 	%r6576, %r6573, %r6572, 18;
	shf.r.wrap.b32 	%r6577, %r6572, %r6573, 18;
	mov.b64 	%rd6966, {%r6577, %r6576};
	xor.b64  	%rd6967, %rd6965, %rd6966;
	shf.l.wrap.b32 	%r6578, %r6572, %r6573, 23;
	shf.l.wrap.b32 	%r6579, %r6573, %r6572, 23;
	mov.b64 	%rd6968, {%r6579, %r6578};
	xor.b64  	%rd6969, %rd6967, %rd6968;
	and.b64  	%rd6970, %rd6963, %rd6938;
	not.b64 	%rd6971, %rd6963;
	and.b64  	%rd6972, %rd6913, %rd6971;
	or.b64  	%rd6973, %rd6970, %rd6972;
	add.s64 	%rd6974, %rd6973, %rd6888;
	add.s64 	%rd6975, %rd6974, %rd6969;
	add.s64 	%rd6976, %rd6975, %rd109;
	add.s64 	%rd6977, %rd6976, %rd5129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6580,%dummy}, %rd6964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6581}, %rd6964;
	}
	shf.r.wrap.b32 	%r6582, %r6581, %r6580, 28;
	shf.r.wrap.b32 	%r6583, %r6580, %r6581, 28;
	mov.b64 	%rd6978, {%r6583, %r6582};
	shf.l.wrap.b32 	%r6584, %r6580, %r6581, 30;
	shf.l.wrap.b32 	%r6585, %r6581, %r6580, 30;
	mov.b64 	%rd6979, {%r6585, %r6584};
	xor.b64  	%rd6980, %rd6978, %rd6979;
	shf.l.wrap.b32 	%r6586, %r6580, %r6581, 25;
	shf.l.wrap.b32 	%r6587, %r6581, %r6580, 25;
	mov.b64 	%rd6981, {%r6587, %r6586};
	xor.b64  	%rd6982, %rd6980, %rd6981;
	xor.b64  	%rd6983, %rd6939, %rd6914;
	and.b64  	%rd6984, %rd6964, %rd6983;
	and.b64  	%rd6985, %rd6939, %rd6914;
	xor.b64  	%rd6986, %rd6984, %rd6985;
	add.s64 	%rd6987, %rd6982, %rd6986;
	add.s64 	%rd6988, %rd6977, %rd6889;
	add.s64 	%rd6989, %rd6987, %rd6977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6588,%dummy}, %rd6988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6589}, %rd6988;
	}
	shf.r.wrap.b32 	%r6590, %r6589, %r6588, 14;
	shf.r.wrap.b32 	%r6591, %r6588, %r6589, 14;
	mov.b64 	%rd6990, {%r6591, %r6590};
	shf.r.wrap.b32 	%r6592, %r6589, %r6588, 18;
	shf.r.wrap.b32 	%r6593, %r6588, %r6589, 18;
	mov.b64 	%rd6991, {%r6593, %r6592};
	xor.b64  	%rd6992, %rd6990, %rd6991;
	shf.l.wrap.b32 	%r6594, %r6588, %r6589, 23;
	shf.l.wrap.b32 	%r6595, %r6589, %r6588, 23;
	mov.b64 	%rd6993, {%r6595, %r6594};
	xor.b64  	%rd6994, %rd6992, %rd6993;
	and.b64  	%rd6995, %rd6988, %rd6963;
	not.b64 	%rd6996, %rd6988;
	and.b64  	%rd6997, %rd6938, %rd6996;
	or.b64  	%rd6998, %rd6995, %rd6997;
	add.s64 	%rd6999, %rd6998, %rd6913;
	add.s64 	%rd7000, %rd6999, %rd6994;
	add.s64 	%rd7001, %rd7000, %rd110;
	add.s64 	%rd7002, %rd7001, %rd5142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6596,%dummy}, %rd6989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6597}, %rd6989;
	}
	shf.r.wrap.b32 	%r6598, %r6597, %r6596, 28;
	shf.r.wrap.b32 	%r6599, %r6596, %r6597, 28;
	mov.b64 	%rd7003, {%r6599, %r6598};
	shf.l.wrap.b32 	%r6600, %r6596, %r6597, 30;
	shf.l.wrap.b32 	%r6601, %r6597, %r6596, 30;
	mov.b64 	%rd7004, {%r6601, %r6600};
	xor.b64  	%rd7005, %rd7003, %rd7004;
	shf.l.wrap.b32 	%r6602, %r6596, %r6597, 25;
	shf.l.wrap.b32 	%r6603, %r6597, %r6596, 25;
	mov.b64 	%rd7006, {%r6603, %r6602};
	xor.b64  	%rd7007, %rd7005, %rd7006;
	xor.b64  	%rd7008, %rd6964, %rd6939;
	and.b64  	%rd7009, %rd6989, %rd7008;
	and.b64  	%rd7010, %rd6964, %rd6939;
	xor.b64  	%rd7011, %rd7009, %rd7010;
	add.s64 	%rd7012, %rd7007, %rd7011;
	add.s64 	%rd7013, %rd7002, %rd6914;
	add.s64 	%rd7014, %rd7012, %rd7002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6604,%dummy}, %rd7013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6605}, %rd7013;
	}
	shf.r.wrap.b32 	%r6606, %r6605, %r6604, 14;
	shf.r.wrap.b32 	%r6607, %r6604, %r6605, 14;
	mov.b64 	%rd7015, {%r6607, %r6606};
	shf.r.wrap.b32 	%r6608, %r6605, %r6604, 18;
	shf.r.wrap.b32 	%r6609, %r6604, %r6605, 18;
	mov.b64 	%rd7016, {%r6609, %r6608};
	xor.b64  	%rd7017, %rd7015, %rd7016;
	shf.l.wrap.b32 	%r6610, %r6604, %r6605, 23;
	shf.l.wrap.b32 	%r6611, %r6605, %r6604, 23;
	mov.b64 	%rd7018, {%r6611, %r6610};
	xor.b64  	%rd7019, %rd7017, %rd7018;
	and.b64  	%rd7020, %rd7013, %rd6988;
	not.b64 	%rd7021, %rd7013;
	and.b64  	%rd7022, %rd6963, %rd7021;
	or.b64  	%rd7023, %rd7020, %rd7022;
	add.s64 	%rd7024, %rd7023, %rd6938;
	add.s64 	%rd7025, %rd7024, %rd7019;
	add.s64 	%rd7026, %rd7025, %rd15510;
	add.s64 	%rd7027, %rd7026, %rd5155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6612,%dummy}, %rd7014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6613}, %rd7014;
	}
	shf.r.wrap.b32 	%r6614, %r6613, %r6612, 28;
	shf.r.wrap.b32 	%r6615, %r6612, %r6613, 28;
	mov.b64 	%rd7028, {%r6615, %r6614};
	shf.l.wrap.b32 	%r6616, %r6612, %r6613, 30;
	shf.l.wrap.b32 	%r6617, %r6613, %r6612, 30;
	mov.b64 	%rd7029, {%r6617, %r6616};
	xor.b64  	%rd7030, %rd7028, %rd7029;
	shf.l.wrap.b32 	%r6618, %r6612, %r6613, 25;
	shf.l.wrap.b32 	%r6619, %r6613, %r6612, 25;
	mov.b64 	%rd7031, {%r6619, %r6618};
	xor.b64  	%rd7032, %rd7030, %rd7031;
	xor.b64  	%rd7033, %rd6989, %rd6964;
	and.b64  	%rd7034, %rd7014, %rd7033;
	and.b64  	%rd7035, %rd6989, %rd6964;
	xor.b64  	%rd7036, %rd7034, %rd7035;
	add.s64 	%rd7037, %rd7032, %rd7036;
	add.s64 	%rd7038, %rd7027, %rd6939;
	add.s64 	%rd7039, %rd7037, %rd7027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6620,%dummy}, %rd7038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6621}, %rd7038;
	}
	shf.r.wrap.b32 	%r6622, %r6621, %r6620, 14;
	shf.r.wrap.b32 	%r6623, %r6620, %r6621, 14;
	mov.b64 	%rd7040, {%r6623, %r6622};
	shf.r.wrap.b32 	%r6624, %r6621, %r6620, 18;
	shf.r.wrap.b32 	%r6625, %r6620, %r6621, 18;
	mov.b64 	%rd7041, {%r6625, %r6624};
	xor.b64  	%rd7042, %rd7040, %rd7041;
	shf.l.wrap.b32 	%r6626, %r6620, %r6621, 23;
	shf.l.wrap.b32 	%r6627, %r6621, %r6620, 23;
	mov.b64 	%rd7043, {%r6627, %r6626};
	xor.b64  	%rd7044, %rd7042, %rd7043;
	and.b64  	%rd7045, %rd7038, %rd7013;
	not.b64 	%rd7046, %rd7038;
	and.b64  	%rd7047, %rd6988, %rd7046;
	or.b64  	%rd7048, %rd7045, %rd7047;
	add.s64 	%rd7049, %rd7048, %rd6963;
	add.s64 	%rd7050, %rd7049, %rd7044;
	add.s64 	%rd7051, %rd7050, %rd15509;
	add.s64 	%rd7052, %rd7051, %rd5168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6628,%dummy}, %rd7039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6629}, %rd7039;
	}
	shf.r.wrap.b32 	%r6630, %r6629, %r6628, 28;
	shf.r.wrap.b32 	%r6631, %r6628, %r6629, 28;
	mov.b64 	%rd7053, {%r6631, %r6630};
	shf.l.wrap.b32 	%r6632, %r6628, %r6629, 30;
	shf.l.wrap.b32 	%r6633, %r6629, %r6628, 30;
	mov.b64 	%rd7054, {%r6633, %r6632};
	xor.b64  	%rd7055, %rd7053, %rd7054;
	shf.l.wrap.b32 	%r6634, %r6628, %r6629, 25;
	shf.l.wrap.b32 	%r6635, %r6629, %r6628, 25;
	mov.b64 	%rd7056, {%r6635, %r6634};
	xor.b64  	%rd7057, %rd7055, %rd7056;
	xor.b64  	%rd7058, %rd7014, %rd6989;
	and.b64  	%rd7059, %rd7039, %rd7058;
	and.b64  	%rd7060, %rd7014, %rd6989;
	xor.b64  	%rd7061, %rd7059, %rd7060;
	add.s64 	%rd7062, %rd7057, %rd7061;
	add.s64 	%rd7063, %rd7052, %rd6964;
	add.s64 	%rd7064, %rd7062, %rd7052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6636,%dummy}, %rd7063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6637}, %rd7063;
	}
	shf.r.wrap.b32 	%r6638, %r6637, %r6636, 14;
	shf.r.wrap.b32 	%r6639, %r6636, %r6637, 14;
	mov.b64 	%rd7065, {%r6639, %r6638};
	shf.r.wrap.b32 	%r6640, %r6637, %r6636, 18;
	shf.r.wrap.b32 	%r6641, %r6636, %r6637, 18;
	mov.b64 	%rd7066, {%r6641, %r6640};
	xor.b64  	%rd7067, %rd7065, %rd7066;
	shf.l.wrap.b32 	%r6642, %r6636, %r6637, 23;
	shf.l.wrap.b32 	%r6643, %r6637, %r6636, 23;
	mov.b64 	%rd7068, {%r6643, %r6642};
	xor.b64  	%rd7069, %rd7067, %rd7068;
	and.b64  	%rd7070, %rd7063, %rd7038;
	not.b64 	%rd7071, %rd7063;
	and.b64  	%rd7072, %rd7013, %rd7071;
	or.b64  	%rd7073, %rd7070, %rd7072;
	add.s64 	%rd7074, %rd7073, %rd6988;
	add.s64 	%rd7075, %rd7074, %rd7069;
	add.s64 	%rd7076, %rd7075, %rd15508;
	add.s64 	%rd7077, %rd7076, %rd5181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6644,%dummy}, %rd7064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6645}, %rd7064;
	}
	shf.r.wrap.b32 	%r6646, %r6645, %r6644, 28;
	shf.r.wrap.b32 	%r6647, %r6644, %r6645, 28;
	mov.b64 	%rd7078, {%r6647, %r6646};
	shf.l.wrap.b32 	%r6648, %r6644, %r6645, 30;
	shf.l.wrap.b32 	%r6649, %r6645, %r6644, 30;
	mov.b64 	%rd7079, {%r6649, %r6648};
	xor.b64  	%rd7080, %rd7078, %rd7079;
	shf.l.wrap.b32 	%r6650, %r6644, %r6645, 25;
	shf.l.wrap.b32 	%r6651, %r6645, %r6644, 25;
	mov.b64 	%rd7081, {%r6651, %r6650};
	xor.b64  	%rd7082, %rd7080, %rd7081;
	xor.b64  	%rd7083, %rd7039, %rd7014;
	and.b64  	%rd7084, %rd7064, %rd7083;
	and.b64  	%rd7085, %rd7039, %rd7014;
	xor.b64  	%rd7086, %rd7084, %rd7085;
	add.s64 	%rd7087, %rd7082, %rd7086;
	add.s64 	%rd7088, %rd7077, %rd6989;
	add.s64 	%rd7089, %rd7087, %rd7077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6652,%dummy}, %rd7088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6653}, %rd7088;
	}
	shf.r.wrap.b32 	%r6654, %r6653, %r6652, 14;
	shf.r.wrap.b32 	%r6655, %r6652, %r6653, 14;
	mov.b64 	%rd7090, {%r6655, %r6654};
	shf.r.wrap.b32 	%r6656, %r6653, %r6652, 18;
	shf.r.wrap.b32 	%r6657, %r6652, %r6653, 18;
	mov.b64 	%rd7091, {%r6657, %r6656};
	xor.b64  	%rd7092, %rd7090, %rd7091;
	shf.l.wrap.b32 	%r6658, %r6652, %r6653, 23;
	shf.l.wrap.b32 	%r6659, %r6653, %r6652, 23;
	mov.b64 	%rd7093, {%r6659, %r6658};
	xor.b64  	%rd7094, %rd7092, %rd7093;
	and.b64  	%rd7095, %rd7088, %rd7063;
	not.b64 	%rd7096, %rd7088;
	and.b64  	%rd7097, %rd7038, %rd7096;
	or.b64  	%rd7098, %rd7095, %rd7097;
	add.s64 	%rd7099, %rd7098, %rd7013;
	add.s64 	%rd7100, %rd7099, %rd7094;
	add.s64 	%rd7101, %rd7100, %rd114;
	add.s64 	%rd7102, %rd7101, %rd5194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6660,%dummy}, %rd7089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6661}, %rd7089;
	}
	shf.r.wrap.b32 	%r6662, %r6661, %r6660, 28;
	shf.r.wrap.b32 	%r6663, %r6660, %r6661, 28;
	mov.b64 	%rd7103, {%r6663, %r6662};
	shf.l.wrap.b32 	%r6664, %r6660, %r6661, 30;
	shf.l.wrap.b32 	%r6665, %r6661, %r6660, 30;
	mov.b64 	%rd7104, {%r6665, %r6664};
	xor.b64  	%rd7105, %rd7103, %rd7104;
	shf.l.wrap.b32 	%r6666, %r6660, %r6661, 25;
	shf.l.wrap.b32 	%r6667, %r6661, %r6660, 25;
	mov.b64 	%rd7106, {%r6667, %r6666};
	xor.b64  	%rd7107, %rd7105, %rd7106;
	xor.b64  	%rd7108, %rd7064, %rd7039;
	and.b64  	%rd7109, %rd7089, %rd7108;
	and.b64  	%rd7110, %rd7064, %rd7039;
	xor.b64  	%rd7111, %rd7109, %rd7110;
	add.s64 	%rd7112, %rd7107, %rd7111;
	add.s64 	%rd7113, %rd7102, %rd7014;
	add.s64 	%rd7114, %rd7112, %rd7102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6668,%dummy}, %rd7113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6669}, %rd7113;
	}
	shf.r.wrap.b32 	%r6670, %r6669, %r6668, 14;
	shf.r.wrap.b32 	%r6671, %r6668, %r6669, 14;
	mov.b64 	%rd7115, {%r6671, %r6670};
	shf.r.wrap.b32 	%r6672, %r6669, %r6668, 18;
	shf.r.wrap.b32 	%r6673, %r6668, %r6669, 18;
	mov.b64 	%rd7116, {%r6673, %r6672};
	xor.b64  	%rd7117, %rd7115, %rd7116;
	shf.l.wrap.b32 	%r6674, %r6668, %r6669, 23;
	shf.l.wrap.b32 	%r6675, %r6669, %r6668, 23;
	mov.b64 	%rd7118, {%r6675, %r6674};
	xor.b64  	%rd7119, %rd7117, %rd7118;
	and.b64  	%rd7120, %rd7113, %rd7088;
	not.b64 	%rd7121, %rd7113;
	and.b64  	%rd7122, %rd7063, %rd7121;
	or.b64  	%rd7123, %rd7120, %rd7122;
	add.s64 	%rd7124, %rd7123, %rd7038;
	add.s64 	%rd7125, %rd7124, %rd7119;
	add.s64 	%rd7126, %rd7125, %rd115;
	add.s64 	%rd7127, %rd7126, %rd5207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6676,%dummy}, %rd7114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6677}, %rd7114;
	}
	shf.r.wrap.b32 	%r6678, %r6677, %r6676, 28;
	shf.r.wrap.b32 	%r6679, %r6676, %r6677, 28;
	mov.b64 	%rd7128, {%r6679, %r6678};
	shf.l.wrap.b32 	%r6680, %r6676, %r6677, 30;
	shf.l.wrap.b32 	%r6681, %r6677, %r6676, 30;
	mov.b64 	%rd7129, {%r6681, %r6680};
	xor.b64  	%rd7130, %rd7128, %rd7129;
	shf.l.wrap.b32 	%r6682, %r6676, %r6677, 25;
	shf.l.wrap.b32 	%r6683, %r6677, %r6676, 25;
	mov.b64 	%rd7131, {%r6683, %r6682};
	xor.b64  	%rd7132, %rd7130, %rd7131;
	xor.b64  	%rd7133, %rd7089, %rd7064;
	and.b64  	%rd7134, %rd7114, %rd7133;
	and.b64  	%rd7135, %rd7089, %rd7064;
	xor.b64  	%rd7136, %rd7134, %rd7135;
	add.s64 	%rd7137, %rd7132, %rd7136;
	add.s64 	%rd7138, %rd7127, %rd7039;
	add.s64 	%rd7139, %rd7137, %rd7127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6684,%dummy}, %rd7138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6685}, %rd7138;
	}
	shf.r.wrap.b32 	%r6686, %r6685, %r6684, 14;
	shf.r.wrap.b32 	%r6687, %r6684, %r6685, 14;
	mov.b64 	%rd7140, {%r6687, %r6686};
	shf.r.wrap.b32 	%r6688, %r6685, %r6684, 18;
	shf.r.wrap.b32 	%r6689, %r6684, %r6685, 18;
	mov.b64 	%rd7141, {%r6689, %r6688};
	xor.b64  	%rd7142, %rd7140, %rd7141;
	shf.l.wrap.b32 	%r6690, %r6684, %r6685, 23;
	shf.l.wrap.b32 	%r6691, %r6685, %r6684, 23;
	mov.b64 	%rd7143, {%r6691, %r6690};
	xor.b64  	%rd7144, %rd7142, %rd7143;
	and.b64  	%rd7145, %rd7138, %rd7113;
	not.b64 	%rd7146, %rd7138;
	and.b64  	%rd7147, %rd7088, %rd7146;
	or.b64  	%rd7148, %rd7145, %rd7147;
	add.s64 	%rd7149, %rd7148, %rd7063;
	add.s64 	%rd7150, %rd7149, %rd7144;
	add.s64 	%rd7151, %rd7150, %rd116;
	add.s64 	%rd7152, %rd7151, %rd5220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6692,%dummy}, %rd7139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6693}, %rd7139;
	}
	shf.r.wrap.b32 	%r6694, %r6693, %r6692, 28;
	shf.r.wrap.b32 	%r6695, %r6692, %r6693, 28;
	mov.b64 	%rd7153, {%r6695, %r6694};
	shf.l.wrap.b32 	%r6696, %r6692, %r6693, 30;
	shf.l.wrap.b32 	%r6697, %r6693, %r6692, 30;
	mov.b64 	%rd7154, {%r6697, %r6696};
	xor.b64  	%rd7155, %rd7153, %rd7154;
	shf.l.wrap.b32 	%r6698, %r6692, %r6693, 25;
	shf.l.wrap.b32 	%r6699, %r6693, %r6692, 25;
	mov.b64 	%rd7156, {%r6699, %r6698};
	xor.b64  	%rd7157, %rd7155, %rd7156;
	xor.b64  	%rd7158, %rd7114, %rd7089;
	and.b64  	%rd7159, %rd7139, %rd7158;
	and.b64  	%rd7160, %rd7114, %rd7089;
	xor.b64  	%rd7161, %rd7159, %rd7160;
	add.s64 	%rd7162, %rd7157, %rd7161;
	add.s64 	%rd7163, %rd7152, %rd7064;
	add.s64 	%rd7164, %rd7162, %rd7152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6700,%dummy}, %rd7163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6701}, %rd7163;
	}
	shf.r.wrap.b32 	%r6702, %r6701, %r6700, 14;
	shf.r.wrap.b32 	%r6703, %r6700, %r6701, 14;
	mov.b64 	%rd7165, {%r6703, %r6702};
	shf.r.wrap.b32 	%r6704, %r6701, %r6700, 18;
	shf.r.wrap.b32 	%r6705, %r6700, %r6701, 18;
	mov.b64 	%rd7166, {%r6705, %r6704};
	xor.b64  	%rd7167, %rd7165, %rd7166;
	shf.l.wrap.b32 	%r6706, %r6700, %r6701, 23;
	shf.l.wrap.b32 	%r6707, %r6701, %r6700, 23;
	mov.b64 	%rd7168, {%r6707, %r6706};
	xor.b64  	%rd7169, %rd7167, %rd7168;
	and.b64  	%rd7170, %rd7163, %rd7138;
	not.b64 	%rd7171, %rd7163;
	and.b64  	%rd7172, %rd7113, %rd7171;
	or.b64  	%rd7173, %rd7170, %rd7172;
	add.s64 	%rd7174, %rd7173, %rd7088;
	add.s64 	%rd7175, %rd7174, %rd7169;
	add.s64 	%rd7176, %rd7175, %rd117;
	add.s64 	%rd7177, %rd7176, %rd5233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6708,%dummy}, %rd7164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6709}, %rd7164;
	}
	shf.r.wrap.b32 	%r6710, %r6709, %r6708, 28;
	shf.r.wrap.b32 	%r6711, %r6708, %r6709, 28;
	mov.b64 	%rd7178, {%r6711, %r6710};
	shf.l.wrap.b32 	%r6712, %r6708, %r6709, 30;
	shf.l.wrap.b32 	%r6713, %r6709, %r6708, 30;
	mov.b64 	%rd7179, {%r6713, %r6712};
	xor.b64  	%rd7180, %rd7178, %rd7179;
	shf.l.wrap.b32 	%r6714, %r6708, %r6709, 25;
	shf.l.wrap.b32 	%r6715, %r6709, %r6708, 25;
	mov.b64 	%rd7181, {%r6715, %r6714};
	xor.b64  	%rd7182, %rd7180, %rd7181;
	xor.b64  	%rd7183, %rd7139, %rd7114;
	and.b64  	%rd7184, %rd7164, %rd7183;
	and.b64  	%rd7185, %rd7139, %rd7114;
	xor.b64  	%rd7186, %rd7184, %rd7185;
	add.s64 	%rd7187, %rd7182, %rd7186;
	add.s64 	%rd7188, %rd7177, %rd7089;
	add.s64 	%rd7189, %rd7187, %rd7177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6716,%dummy}, %rd7188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6717}, %rd7188;
	}
	shf.r.wrap.b32 	%r6718, %r6717, %r6716, 14;
	shf.r.wrap.b32 	%r6719, %r6716, %r6717, 14;
	mov.b64 	%rd7190, {%r6719, %r6718};
	shf.r.wrap.b32 	%r6720, %r6717, %r6716, 18;
	shf.r.wrap.b32 	%r6721, %r6716, %r6717, 18;
	mov.b64 	%rd7191, {%r6721, %r6720};
	xor.b64  	%rd7192, %rd7190, %rd7191;
	shf.l.wrap.b32 	%r6722, %r6716, %r6717, 23;
	shf.l.wrap.b32 	%r6723, %r6717, %r6716, 23;
	mov.b64 	%rd7193, {%r6723, %r6722};
	xor.b64  	%rd7194, %rd7192, %rd7193;
	and.b64  	%rd7195, %rd7188, %rd7163;
	not.b64 	%rd7196, %rd7188;
	and.b64  	%rd7197, %rd7138, %rd7196;
	or.b64  	%rd7198, %rd7195, %rd7197;
	add.s64 	%rd7199, %rd7198, %rd7113;
	add.s64 	%rd7200, %rd7199, %rd7194;
	add.s64 	%rd7201, %rd7200, %rd118;
	add.s64 	%rd7202, %rd7201, %rd5246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6724,%dummy}, %rd7189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6725}, %rd7189;
	}
	shf.r.wrap.b32 	%r6726, %r6725, %r6724, 28;
	shf.r.wrap.b32 	%r6727, %r6724, %r6725, 28;
	mov.b64 	%rd7203, {%r6727, %r6726};
	shf.l.wrap.b32 	%r6728, %r6724, %r6725, 30;
	shf.l.wrap.b32 	%r6729, %r6725, %r6724, 30;
	mov.b64 	%rd7204, {%r6729, %r6728};
	xor.b64  	%rd7205, %rd7203, %rd7204;
	shf.l.wrap.b32 	%r6730, %r6724, %r6725, 25;
	shf.l.wrap.b32 	%r6731, %r6725, %r6724, 25;
	mov.b64 	%rd7206, {%r6731, %r6730};
	xor.b64  	%rd7207, %rd7205, %rd7206;
	xor.b64  	%rd7208, %rd7164, %rd7139;
	and.b64  	%rd7209, %rd7189, %rd7208;
	and.b64  	%rd7210, %rd7164, %rd7139;
	xor.b64  	%rd7211, %rd7209, %rd7210;
	add.s64 	%rd7212, %rd7207, %rd7211;
	add.s64 	%rd7213, %rd7202, %rd7114;
	add.s64 	%rd7214, %rd7212, %rd7202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6732,%dummy}, %rd7213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6733}, %rd7213;
	}
	shf.r.wrap.b32 	%r6734, %r6733, %r6732, 14;
	shf.r.wrap.b32 	%r6735, %r6732, %r6733, 14;
	mov.b64 	%rd7215, {%r6735, %r6734};
	shf.r.wrap.b32 	%r6736, %r6733, %r6732, 18;
	shf.r.wrap.b32 	%r6737, %r6732, %r6733, 18;
	mov.b64 	%rd7216, {%r6737, %r6736};
	xor.b64  	%rd7217, %rd7215, %rd7216;
	shf.l.wrap.b32 	%r6738, %r6732, %r6733, 23;
	shf.l.wrap.b32 	%r6739, %r6733, %r6732, 23;
	mov.b64 	%rd7218, {%r6739, %r6738};
	xor.b64  	%rd7219, %rd7217, %rd7218;
	and.b64  	%rd7220, %rd7213, %rd7188;
	not.b64 	%rd7221, %rd7213;
	and.b64  	%rd7222, %rd7163, %rd7221;
	or.b64  	%rd7223, %rd7220, %rd7222;
	add.s64 	%rd7224, %rd7223, %rd7138;
	add.s64 	%rd7225, %rd7224, %rd7219;
	add.s64 	%rd7226, %rd7225, %rd119;
	add.s64 	%rd7227, %rd7226, %rd5259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6740,%dummy}, %rd7214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6741}, %rd7214;
	}
	shf.r.wrap.b32 	%r6742, %r6741, %r6740, 28;
	shf.r.wrap.b32 	%r6743, %r6740, %r6741, 28;
	mov.b64 	%rd7228, {%r6743, %r6742};
	shf.l.wrap.b32 	%r6744, %r6740, %r6741, 30;
	shf.l.wrap.b32 	%r6745, %r6741, %r6740, 30;
	mov.b64 	%rd7229, {%r6745, %r6744};
	xor.b64  	%rd7230, %rd7228, %rd7229;
	shf.l.wrap.b32 	%r6746, %r6740, %r6741, 25;
	shf.l.wrap.b32 	%r6747, %r6741, %r6740, 25;
	mov.b64 	%rd7231, {%r6747, %r6746};
	xor.b64  	%rd7232, %rd7230, %rd7231;
	xor.b64  	%rd7233, %rd7189, %rd7164;
	and.b64  	%rd7234, %rd7214, %rd7233;
	and.b64  	%rd7235, %rd7189, %rd7164;
	xor.b64  	%rd7236, %rd7234, %rd7235;
	add.s64 	%rd7237, %rd7232, %rd7236;
	add.s64 	%rd7238, %rd7237, %rd7227;
	add.s64 	%rd7239, %rd7238, 7640891576956012808;
	add.s64 	%rd7240, %rd7214, -4942790177534073029;
	add.s64 	%rd7241, %rd7189, 4354685564936845355;
	add.s64 	%rd7242, %rd7164, -6534734903238641935;
	shr.u64 	%rd7243, %rd7239, 56;
	cvt.u16.u64 	%rs1139, %rd7243;
	shr.u64 	%rd7244, %rd7239, 48;
	cvt.u16.u64 	%rs1138, %rd7244;
	shr.u64 	%rd7245, %rd7239, 40;
	cvt.u16.u64 	%rs1137, %rd7245;
	shr.u64 	%rd7246, %rd7239, 32;
	cvt.u16.u64 	%rs1136, %rd7246;
	shr.u64 	%rd7247, %rd7239, 24;
	cvt.u16.u64 	%rs1135, %rd7247;
	shr.u64 	%rd7248, %rd7239, 16;
	cvt.u16.u64 	%rs1134, %rd7248;
	shr.u64 	%rd7249, %rd7239, 8;
	cvt.u16.u64 	%rs1133, %rd7249;
	cvt.u16.u64 	%rs1132, %rd7239;
	shr.u64 	%rd7250, %rd7240, 56;
	cvt.u16.u64 	%rs1131, %rd7250;
	shr.u64 	%rd7251, %rd7240, 48;
	cvt.u16.u64 	%rs1130, %rd7251;
	shr.u64 	%rd7252, %rd7240, 40;
	cvt.u16.u64 	%rs1129, %rd7252;
	shr.u64 	%rd7253, %rd7240, 32;
	cvt.u16.u64 	%rs1128, %rd7253;
	shr.u64 	%rd7254, %rd7240, 24;
	cvt.u16.u64 	%rs1127, %rd7254;
	shr.u64 	%rd7255, %rd7240, 16;
	cvt.u16.u64 	%rs1126, %rd7255;
	shr.u64 	%rd7256, %rd7240, 8;
	cvt.u16.u64 	%rs1125, %rd7256;
	cvt.u16.u64 	%rs1124, %rd7240;
	shr.u64 	%rd7257, %rd7241, 56;
	cvt.u16.u64 	%rs1123, %rd7257;
	shr.u64 	%rd7258, %rd7241, 48;
	cvt.u16.u64 	%rs1122, %rd7258;
	shr.u64 	%rd7259, %rd7241, 40;
	cvt.u16.u64 	%rs1121, %rd7259;
	shr.u64 	%rd7260, %rd7241, 32;
	cvt.u16.u64 	%rs1120, %rd7260;
	shr.u64 	%rd7261, %rd7241, 24;
	cvt.u16.u64 	%rs1119, %rd7261;
	shr.u64 	%rd7262, %rd7241, 16;
	cvt.u16.u64 	%rs1118, %rd7262;
	shr.u64 	%rd7263, %rd7241, 8;
	cvt.u16.u64 	%rs1117, %rd7263;
	cvt.u16.u64 	%rs1116, %rd7241;
	shr.u64 	%rd7264, %rd7242, 56;
	cvt.u16.u64 	%rs1115, %rd7264;
	shr.u64 	%rd7265, %rd7242, 48;
	cvt.u16.u64 	%rs1114, %rd7265;
	shr.u64 	%rd7266, %rd7242, 40;
	cvt.u16.u64 	%rs1113, %rd7266;
	shr.u64 	%rd7267, %rd7242, 32;
	cvt.u16.u64 	%rs1112, %rd7267;
	shr.u64 	%rd7268, %rd7242, 24;
	cvt.u16.u64 	%rs1111, %rd7268;
	shr.u64 	%rd7269, %rd7242, 16;
	cvt.u16.u64 	%rs1110, %rd7269;
	shr.u64 	%rd7270, %rd7242, 8;
	cvt.u16.u64 	%rs1109, %rd7270;
	cvt.u16.u64 	%rs1108, %rd7242;

$L__BB4_94:
	mov.u64 	%rd15511, 0;

$L__BB4_95:
	add.s64 	%rd7272, %rd2, %rd15511;
	mov.u16 	%rs599, 0;
	st.local.u8 	[%rd7272], %rs599;
	add.s64 	%rd15511, %rd15511, 1;
	setp.lt.u64 	%p69, %rd15511, 128;
	@%p69 bra 	$L__BB4_95;

	mov.u64 	%rd15512, 0;

$L__BB4_97:
	add.s64 	%rd7276, %rd3, %rd15512;
	mov.u16 	%rs600, 0;
	st.local.u8 	[%rd7276], %rs600;
	add.s64 	%rd15512, %rd15512, 1;
	setp.lt.u64 	%p70, %rd15512, 128;
	@%p70 bra 	$L__BB4_97;

	cvta.to.local.u64 	%rd15516, %rd698;
	mov.u32 	%r11226, %r11218;
	@%p56 bra 	$L__BB4_100;

	cvta.to.local.u64 	%rd7279, %rd698;
	ld.local.v4.u32 	{%r6749, %r6750, %r6751, %r6752}, [%rd7279];
	mov.b32 	{%rs601, %rs602}, %r6749;
	shr.u16 	%rs603, %rs601, 8;
	shr.u16 	%rs604, %rs602, 8;
	mov.b32 	{%rs605, %rs606}, %r6750;
	shr.u16 	%rs607, %rs605, 8;
	shr.u16 	%rs608, %rs606, 8;
	mov.b32 	{%rs609, %rs610}, %r6751;
	shr.u16 	%rs611, %rs609, 8;
	shr.u16 	%rs612, %rs610, 8;
	mov.b32 	{%rs613, %rs614}, %r6752;
	shr.u16 	%rs615, %rs613, 8;
	shr.u16 	%rs616, %rs614, 8;
	cvt.u64.u16 	%rd7280, %rs601;
	shl.b64 	%rd7281, %rd7280, 56;
	cvt.u64.u16 	%rd7282, %rs603;
	shl.b64 	%rd7283, %rd7282, 48;
	or.b64  	%rd7284, %rd7283, %rd7281;
	cvt.u64.u16 	%rd7285, %rs602;
	shl.b64 	%rd7286, %rd7285, 40;
	and.b64  	%rd7287, %rd7286, 280375465082880;
	or.b64  	%rd7288, %rd7284, %rd7287;
	cvt.u64.u16 	%rd7289, %rs604;
	shl.b64 	%rd7290, %rd7289, 32;
	or.b64  	%rd7291, %rd7288, %rd7290;
	cvt.u32.u16 	%r6757, %rs605;
	and.b32  	%r6758, %r6757, 255;
	mul.wide.u32 	%rd7292, %r6758, 16777216;
	or.b64  	%rd7293, %rd7291, %rd7292;
	cvt.u32.u16 	%r6759, %rs607;
	mul.wide.u32 	%rd7294, %r6759, 65536;
	or.b64  	%rd7295, %rd7293, %rd7294;
	cvt.u32.u16 	%r6760, %rs606;
	and.b32  	%r6761, %r6760, 255;
	mul.wide.u32 	%rd7296, %r6761, 256;
	or.b64  	%rd7297, %rd7295, %rd7296;
	cvt.u64.u16 	%rd7298, %rs608;
	or.b64  	%rd7299, %rd7297, %rd7298;
	cvt.u64.u16 	%rd7300, %rs609;
	shl.b64 	%rd7301, %rd7300, 56;
	cvt.u64.u16 	%rd7302, %rs611;
	shl.b64 	%rd7303, %rd7302, 48;
	or.b64  	%rd7304, %rd7303, %rd7301;
	cvt.u64.u16 	%rd7305, %rs610;
	shl.b64 	%rd7306, %rd7305, 40;
	and.b64  	%rd7307, %rd7306, 280375465082880;
	or.b64  	%rd7308, %rd7304, %rd7307;
	cvt.u64.u16 	%rd7309, %rs612;
	shl.b64 	%rd7310, %rd7309, 32;
	or.b64  	%rd7311, %rd7308, %rd7310;
	cvt.u32.u16 	%r6762, %rs613;
	and.b32  	%r6763, %r6762, 255;
	mul.wide.u32 	%rd7312, %r6763, 16777216;
	or.b64  	%rd7313, %rd7311, %rd7312;
	cvt.u32.u16 	%r6764, %rs615;
	mul.wide.u32 	%rd7314, %r6764, 65536;
	or.b64  	%rd7315, %rd7313, %rd7314;
	cvt.u32.u16 	%r6765, %rs614;
	and.b32  	%r6766, %r6765, 255;
	mul.wide.u32 	%rd7316, %r6766, 256;
	or.b64  	%rd7317, %rd7315, %rd7316;
	cvt.u64.u16 	%rd7318, %rs616;
	or.b64  	%rd7319, %rd7317, %rd7318;
	ld.local.v4.u32 	{%r6767, %r6768, %r6769, %r6770}, [%rd7279+16];
	mov.b32 	{%rs617, %rs618}, %r6767;
	shr.u16 	%rs619, %rs617, 8;
	shr.u16 	%rs620, %rs618, 8;
	mov.b32 	{%rs621, %rs622}, %r6768;
	shr.u16 	%rs623, %rs621, 8;
	shr.u16 	%rs624, %rs622, 8;
	mov.b32 	{%rs625, %rs626}, %r6769;
	shr.u16 	%rs627, %rs625, 8;
	shr.u16 	%rs628, %rs626, 8;
	mov.b32 	{%rs629, %rs630}, %r6770;
	shr.u16 	%rs631, %rs629, 8;
	shr.u16 	%rs632, %rs630, 8;
	cvt.u64.u16 	%rd7320, %rs617;
	shl.b64 	%rd7321, %rd7320, 56;
	cvt.u64.u16 	%rd7322, %rs619;
	shl.b64 	%rd7323, %rd7322, 48;
	or.b64  	%rd7324, %rd7323, %rd7321;
	cvt.u64.u16 	%rd7325, %rs618;
	shl.b64 	%rd7326, %rd7325, 40;
	and.b64  	%rd7327, %rd7326, 280375465082880;
	or.b64  	%rd7328, %rd7324, %rd7327;
	cvt.u64.u16 	%rd7329, %rs620;
	shl.b64 	%rd7330, %rd7329, 32;
	or.b64  	%rd7331, %rd7328, %rd7330;
	cvt.u32.u16 	%r6775, %rs621;
	and.b32  	%r6776, %r6775, 255;
	mul.wide.u32 	%rd7332, %r6776, 16777216;
	or.b64  	%rd7333, %rd7331, %rd7332;
	cvt.u32.u16 	%r6777, %rs623;
	mul.wide.u32 	%rd7334, %r6777, 65536;
	or.b64  	%rd7335, %rd7333, %rd7334;
	cvt.u32.u16 	%r6778, %rs622;
	and.b32  	%r6779, %r6778, 255;
	mul.wide.u32 	%rd7336, %r6779, 256;
	or.b64  	%rd7337, %rd7335, %rd7336;
	cvt.u64.u16 	%rd7338, %rs624;
	or.b64  	%rd7339, %rd7337, %rd7338;
	cvt.u64.u16 	%rd7340, %rs625;
	shl.b64 	%rd7341, %rd7340, 56;
	cvt.u64.u16 	%rd7342, %rs627;
	shl.b64 	%rd7343, %rd7342, 48;
	or.b64  	%rd7344, %rd7343, %rd7341;
	cvt.u64.u16 	%rd7345, %rs626;
	shl.b64 	%rd7346, %rd7345, 40;
	and.b64  	%rd7347, %rd7346, 280375465082880;
	or.b64  	%rd7348, %rd7344, %rd7347;
	cvt.u64.u16 	%rd7349, %rs628;
	shl.b64 	%rd7350, %rd7349, 32;
	or.b64  	%rd7351, %rd7348, %rd7350;
	cvt.u32.u16 	%r6780, %rs629;
	and.b32  	%r6781, %r6780, 255;
	mul.wide.u32 	%rd7352, %r6781, 16777216;
	or.b64  	%rd7353, %rd7351, %rd7352;
	cvt.u32.u16 	%r6782, %rs631;
	mul.wide.u32 	%rd7354, %r6782, 65536;
	or.b64  	%rd7355, %rd7353, %rd7354;
	cvt.u32.u16 	%r6783, %rs630;
	and.b32  	%r6784, %r6783, 255;
	mul.wide.u32 	%rd7356, %r6784, 256;
	or.b64  	%rd7357, %rd7355, %rd7356;
	cvt.u64.u16 	%rd7358, %rs632;
	or.b64  	%rd7359, %rd7357, %rd7358;
	ld.local.v4.u32 	{%r6785, %r6786, %r6787, %r6788}, [%rd7279+32];
	mov.b32 	{%rs633, %rs634}, %r6785;
	shr.u16 	%rs635, %rs633, 8;
	shr.u16 	%rs636, %rs634, 8;
	mov.b32 	{%rs637, %rs638}, %r6786;
	shr.u16 	%rs639, %rs637, 8;
	shr.u16 	%rs640, %rs638, 8;
	mov.b32 	{%rs641, %rs642}, %r6787;
	shr.u16 	%rs643, %rs641, 8;
	shr.u16 	%rs644, %rs642, 8;
	mov.b32 	{%rs645, %rs646}, %r6788;
	shr.u16 	%rs647, %rs645, 8;
	shr.u16 	%rs648, %rs646, 8;
	cvt.u64.u16 	%rd7360, %rs633;
	shl.b64 	%rd7361, %rd7360, 56;
	cvt.u64.u16 	%rd7362, %rs635;
	shl.b64 	%rd7363, %rd7362, 48;
	or.b64  	%rd7364, %rd7363, %rd7361;
	cvt.u64.u16 	%rd7365, %rs634;
	shl.b64 	%rd7366, %rd7365, 40;
	and.b64  	%rd7367, %rd7366, 280375465082880;
	or.b64  	%rd7368, %rd7364, %rd7367;
	cvt.u64.u16 	%rd7369, %rs636;
	shl.b64 	%rd7370, %rd7369, 32;
	or.b64  	%rd7371, %rd7368, %rd7370;
	cvt.u32.u16 	%r6793, %rs637;
	and.b32  	%r6794, %r6793, 255;
	mul.wide.u32 	%rd7372, %r6794, 16777216;
	or.b64  	%rd7373, %rd7371, %rd7372;
	cvt.u32.u16 	%r6795, %rs639;
	mul.wide.u32 	%rd7374, %r6795, 65536;
	or.b64  	%rd7375, %rd7373, %rd7374;
	cvt.u32.u16 	%r6796, %rs638;
	and.b32  	%r6797, %r6796, 255;
	mul.wide.u32 	%rd7376, %r6797, 256;
	or.b64  	%rd7377, %rd7375, %rd7376;
	cvt.u64.u16 	%rd7378, %rs640;
	or.b64  	%rd7379, %rd7377, %rd7378;
	cvt.u64.u16 	%rd7380, %rs641;
	shl.b64 	%rd7381, %rd7380, 56;
	cvt.u64.u16 	%rd7382, %rs643;
	shl.b64 	%rd7383, %rd7382, 48;
	or.b64  	%rd7384, %rd7383, %rd7381;
	cvt.u64.u16 	%rd7385, %rs642;
	shl.b64 	%rd7386, %rd7385, 40;
	and.b64  	%rd7387, %rd7386, 280375465082880;
	or.b64  	%rd7388, %rd7384, %rd7387;
	cvt.u64.u16 	%rd7389, %rs644;
	shl.b64 	%rd7390, %rd7389, 32;
	or.b64  	%rd7391, %rd7388, %rd7390;
	cvt.u32.u16 	%r6798, %rs645;
	and.b32  	%r6799, %r6798, 255;
	mul.wide.u32 	%rd7392, %r6799, 16777216;
	or.b64  	%rd7393, %rd7391, %rd7392;
	cvt.u32.u16 	%r6800, %rs647;
	mul.wide.u32 	%rd7394, %r6800, 65536;
	or.b64  	%rd7395, %rd7393, %rd7394;
	cvt.u32.u16 	%r6801, %rs646;
	and.b32  	%r6802, %r6801, 255;
	mul.wide.u32 	%rd7396, %r6802, 256;
	or.b64  	%rd7397, %rd7395, %rd7396;
	cvt.u64.u16 	%rd7398, %rs648;
	or.b64  	%rd7399, %rd7397, %rd7398;
	ld.local.v4.u32 	{%r6803, %r6804, %r6805, %r6806}, [%rd7279+48];
	mov.b32 	{%rs649, %rs650}, %r6803;
	shr.u16 	%rs651, %rs649, 8;
	shr.u16 	%rs652, %rs650, 8;
	mov.b32 	{%rs653, %rs654}, %r6804;
	shr.u16 	%rs655, %rs653, 8;
	shr.u16 	%rs656, %rs654, 8;
	mov.b32 	{%rs657, %rs658}, %r6805;
	shr.u16 	%rs659, %rs657, 8;
	shr.u16 	%rs660, %rs658, 8;
	mov.b32 	{%rs661, %rs662}, %r6806;
	shr.u16 	%rs663, %rs661, 8;
	shr.u16 	%rs664, %rs662, 8;
	cvt.u64.u16 	%rd7400, %rs649;
	shl.b64 	%rd7401, %rd7400, 56;
	cvt.u64.u16 	%rd7402, %rs651;
	shl.b64 	%rd7403, %rd7402, 48;
	or.b64  	%rd7404, %rd7403, %rd7401;
	cvt.u64.u16 	%rd7405, %rs650;
	shl.b64 	%rd7406, %rd7405, 40;
	and.b64  	%rd7407, %rd7406, 280375465082880;
	or.b64  	%rd7408, %rd7404, %rd7407;
	cvt.u64.u16 	%rd7409, %rs652;
	shl.b64 	%rd7410, %rd7409, 32;
	or.b64  	%rd7411, %rd7408, %rd7410;
	cvt.u32.u16 	%r6811, %rs653;
	and.b32  	%r6812, %r6811, 255;
	mul.wide.u32 	%rd7412, %r6812, 16777216;
	or.b64  	%rd7413, %rd7411, %rd7412;
	cvt.u32.u16 	%r6813, %rs655;
	mul.wide.u32 	%rd7414, %r6813, 65536;
	or.b64  	%rd7415, %rd7413, %rd7414;
	cvt.u32.u16 	%r6814, %rs654;
	and.b32  	%r6815, %r6814, 255;
	mul.wide.u32 	%rd7416, %r6815, 256;
	or.b64  	%rd7417, %rd7415, %rd7416;
	cvt.u64.u16 	%rd7418, %rs656;
	or.b64  	%rd7419, %rd7417, %rd7418;
	cvt.u64.u16 	%rd7420, %rs657;
	shl.b64 	%rd7421, %rd7420, 56;
	cvt.u64.u16 	%rd7422, %rs659;
	shl.b64 	%rd7423, %rd7422, 48;
	or.b64  	%rd7424, %rd7423, %rd7421;
	cvt.u64.u16 	%rd7425, %rs658;
	shl.b64 	%rd7426, %rd7425, 40;
	and.b64  	%rd7427, %rd7426, 280375465082880;
	or.b64  	%rd7428, %rd7424, %rd7427;
	cvt.u64.u16 	%rd7429, %rs660;
	shl.b64 	%rd7430, %rd7429, 32;
	or.b64  	%rd7431, %rd7428, %rd7430;
	cvt.u32.u16 	%r6816, %rs661;
	and.b32  	%r6817, %r6816, 255;
	mul.wide.u32 	%rd7432, %r6817, 16777216;
	or.b64  	%rd7433, %rd7431, %rd7432;
	cvt.u32.u16 	%r6818, %rs663;
	mul.wide.u32 	%rd7434, %r6818, 65536;
	or.b64  	%rd7435, %rd7433, %rd7434;
	cvt.u32.u16 	%r6819, %rs662;
	and.b32  	%r6820, %r6819, 255;
	mul.wide.u32 	%rd7436, %r6820, 256;
	or.b64  	%rd7437, %rd7435, %rd7436;
	cvt.u64.u16 	%rd7438, %rs664;
	or.b64  	%rd7439, %rd7437, %rd7438;
	ld.local.v4.u32 	{%r6821, %r6822, %r6823, %r6824}, [%rd7279+64];
	mov.b32 	{%rs665, %rs666}, %r6821;
	shr.u16 	%rs667, %rs665, 8;
	shr.u16 	%rs668, %rs666, 8;
	mov.b32 	{%rs669, %rs670}, %r6822;
	shr.u16 	%rs671, %rs669, 8;
	shr.u16 	%rs672, %rs670, 8;
	mov.b32 	{%rs673, %rs674}, %r6823;
	shr.u16 	%rs675, %rs673, 8;
	shr.u16 	%rs676, %rs674, 8;
	mov.b32 	{%rs677, %rs678}, %r6824;
	shr.u16 	%rs679, %rs677, 8;
	shr.u16 	%rs680, %rs678, 8;
	cvt.u64.u16 	%rd7440, %rs665;
	shl.b64 	%rd7441, %rd7440, 56;
	cvt.u64.u16 	%rd7442, %rs667;
	shl.b64 	%rd7443, %rd7442, 48;
	or.b64  	%rd7444, %rd7443, %rd7441;
	cvt.u64.u16 	%rd7445, %rs666;
	shl.b64 	%rd7446, %rd7445, 40;
	and.b64  	%rd7447, %rd7446, 280375465082880;
	or.b64  	%rd7448, %rd7444, %rd7447;
	cvt.u64.u16 	%rd7449, %rs668;
	shl.b64 	%rd7450, %rd7449, 32;
	or.b64  	%rd7451, %rd7448, %rd7450;
	cvt.u32.u16 	%r6829, %rs669;
	and.b32  	%r6830, %r6829, 255;
	mul.wide.u32 	%rd7452, %r6830, 16777216;
	or.b64  	%rd7453, %rd7451, %rd7452;
	cvt.u32.u16 	%r6831, %rs671;
	mul.wide.u32 	%rd7454, %r6831, 65536;
	or.b64  	%rd7455, %rd7453, %rd7454;
	cvt.u32.u16 	%r6832, %rs670;
	and.b32  	%r6833, %r6832, 255;
	mul.wide.u32 	%rd7456, %r6833, 256;
	or.b64  	%rd7457, %rd7455, %rd7456;
	cvt.u64.u16 	%rd7458, %rs672;
	or.b64  	%rd7459, %rd7457, %rd7458;
	cvt.u64.u16 	%rd7460, %rs673;
	shl.b64 	%rd7461, %rd7460, 56;
	cvt.u64.u16 	%rd7462, %rs675;
	shl.b64 	%rd7463, %rd7462, 48;
	or.b64  	%rd7464, %rd7463, %rd7461;
	cvt.u64.u16 	%rd7465, %rs674;
	shl.b64 	%rd7466, %rd7465, 40;
	and.b64  	%rd7467, %rd7466, 280375465082880;
	or.b64  	%rd7468, %rd7464, %rd7467;
	cvt.u64.u16 	%rd7469, %rs676;
	shl.b64 	%rd7470, %rd7469, 32;
	or.b64  	%rd7471, %rd7468, %rd7470;
	cvt.u32.u16 	%r6834, %rs677;
	and.b32  	%r6835, %r6834, 255;
	mul.wide.u32 	%rd7472, %r6835, 16777216;
	or.b64  	%rd7473, %rd7471, %rd7472;
	cvt.u32.u16 	%r6836, %rs679;
	mul.wide.u32 	%rd7474, %r6836, 65536;
	or.b64  	%rd7475, %rd7473, %rd7474;
	cvt.u32.u16 	%r6837, %rs678;
	and.b32  	%r6838, %r6837, 255;
	mul.wide.u32 	%rd7476, %r6838, 256;
	or.b64  	%rd7477, %rd7475, %rd7476;
	cvt.u64.u16 	%rd7478, %rs680;
	or.b64  	%rd7479, %rd7477, %rd7478;
	ld.local.v4.u32 	{%r6839, %r6840, %r6841, %r6842}, [%rd7279+80];
	mov.b32 	{%rs681, %rs682}, %r6839;
	shr.u16 	%rs683, %rs681, 8;
	shr.u16 	%rs684, %rs682, 8;
	mov.b32 	{%rs685, %rs686}, %r6840;
	shr.u16 	%rs687, %rs685, 8;
	shr.u16 	%rs688, %rs686, 8;
	mov.b32 	{%rs689, %rs690}, %r6841;
	shr.u16 	%rs691, %rs689, 8;
	shr.u16 	%rs692, %rs690, 8;
	mov.b32 	{%rs693, %rs694}, %r6842;
	shr.u16 	%rs695, %rs693, 8;
	shr.u16 	%rs696, %rs694, 8;
	cvt.u64.u16 	%rd7480, %rs681;
	shl.b64 	%rd7481, %rd7480, 56;
	cvt.u64.u16 	%rd7482, %rs683;
	shl.b64 	%rd7483, %rd7482, 48;
	or.b64  	%rd7484, %rd7483, %rd7481;
	cvt.u64.u16 	%rd7485, %rs682;
	shl.b64 	%rd7486, %rd7485, 40;
	and.b64  	%rd7487, %rd7486, 280375465082880;
	or.b64  	%rd7488, %rd7484, %rd7487;
	cvt.u64.u16 	%rd7489, %rs684;
	shl.b64 	%rd7490, %rd7489, 32;
	or.b64  	%rd7491, %rd7488, %rd7490;
	cvt.u32.u16 	%r6847, %rs685;
	and.b32  	%r6848, %r6847, 255;
	mul.wide.u32 	%rd7492, %r6848, 16777216;
	or.b64  	%rd7493, %rd7491, %rd7492;
	cvt.u32.u16 	%r6849, %rs687;
	mul.wide.u32 	%rd7494, %r6849, 65536;
	or.b64  	%rd7495, %rd7493, %rd7494;
	cvt.u32.u16 	%r6850, %rs686;
	and.b32  	%r6851, %r6850, 255;
	mul.wide.u32 	%rd7496, %r6851, 256;
	or.b64  	%rd7497, %rd7495, %rd7496;
	cvt.u64.u16 	%rd7498, %rs688;
	or.b64  	%rd7499, %rd7497, %rd7498;
	cvt.u64.u16 	%rd7500, %rs689;
	shl.b64 	%rd7501, %rd7500, 56;
	cvt.u64.u16 	%rd7502, %rs691;
	shl.b64 	%rd7503, %rd7502, 48;
	or.b64  	%rd7504, %rd7503, %rd7501;
	cvt.u64.u16 	%rd7505, %rs690;
	shl.b64 	%rd7506, %rd7505, 40;
	and.b64  	%rd7507, %rd7506, 280375465082880;
	or.b64  	%rd7508, %rd7504, %rd7507;
	cvt.u64.u16 	%rd7509, %rs692;
	shl.b64 	%rd7510, %rd7509, 32;
	or.b64  	%rd7511, %rd7508, %rd7510;
	cvt.u32.u16 	%r6852, %rs693;
	and.b32  	%r6853, %r6852, 255;
	mul.wide.u32 	%rd7512, %r6853, 16777216;
	or.b64  	%rd7513, %rd7511, %rd7512;
	cvt.u32.u16 	%r6854, %rs695;
	mul.wide.u32 	%rd7514, %r6854, 65536;
	or.b64  	%rd7515, %rd7513, %rd7514;
	cvt.u32.u16 	%r6855, %rs694;
	and.b32  	%r6856, %r6855, 255;
	mul.wide.u32 	%rd7516, %r6856, 256;
	or.b64  	%rd7517, %rd7515, %rd7516;
	cvt.u64.u16 	%rd7518, %rs696;
	or.b64  	%rd7519, %rd7517, %rd7518;
	ld.local.v4.u32 	{%r6857, %r6858, %r6859, %r6860}, [%rd7279+96];
	mov.b32 	{%rs697, %rs698}, %r6857;
	shr.u16 	%rs699, %rs697, 8;
	shr.u16 	%rs700, %rs698, 8;
	mov.b32 	{%rs701, %rs702}, %r6858;
	shr.u16 	%rs703, %rs701, 8;
	shr.u16 	%rs704, %rs702, 8;
	mov.b32 	{%rs705, %rs706}, %r6859;
	shr.u16 	%rs707, %rs705, 8;
	shr.u16 	%rs708, %rs706, 8;
	mov.b32 	{%rs709, %rs710}, %r6860;
	shr.u16 	%rs711, %rs709, 8;
	shr.u16 	%rs712, %rs710, 8;
	cvt.u64.u16 	%rd7520, %rs697;
	shl.b64 	%rd7521, %rd7520, 56;
	cvt.u64.u16 	%rd7522, %rs699;
	shl.b64 	%rd7523, %rd7522, 48;
	or.b64  	%rd7524, %rd7523, %rd7521;
	cvt.u64.u16 	%rd7525, %rs698;
	shl.b64 	%rd7526, %rd7525, 40;
	and.b64  	%rd7527, %rd7526, 280375465082880;
	or.b64  	%rd7528, %rd7524, %rd7527;
	cvt.u64.u16 	%rd7529, %rs700;
	shl.b64 	%rd7530, %rd7529, 32;
	or.b64  	%rd7531, %rd7528, %rd7530;
	cvt.u32.u16 	%r6865, %rs701;
	and.b32  	%r6866, %r6865, 255;
	mul.wide.u32 	%rd7532, %r6866, 16777216;
	or.b64  	%rd7533, %rd7531, %rd7532;
	cvt.u32.u16 	%r6867, %rs703;
	mul.wide.u32 	%rd7534, %r6867, 65536;
	or.b64  	%rd7535, %rd7533, %rd7534;
	cvt.u32.u16 	%r6868, %rs702;
	and.b32  	%r6869, %r6868, 255;
	mul.wide.u32 	%rd7536, %r6869, 256;
	or.b64  	%rd7537, %rd7535, %rd7536;
	cvt.u64.u16 	%rd7538, %rs704;
	or.b64  	%rd7539, %rd7537, %rd7538;
	cvt.u64.u16 	%rd7540, %rs705;
	shl.b64 	%rd7541, %rd7540, 56;
	cvt.u64.u16 	%rd7542, %rs707;
	shl.b64 	%rd7543, %rd7542, 48;
	or.b64  	%rd7544, %rd7543, %rd7541;
	cvt.u64.u16 	%rd7545, %rs706;
	shl.b64 	%rd7546, %rd7545, 40;
	and.b64  	%rd7547, %rd7546, 280375465082880;
	or.b64  	%rd7548, %rd7544, %rd7547;
	cvt.u64.u16 	%rd7549, %rs708;
	shl.b64 	%rd7550, %rd7549, 32;
	or.b64  	%rd7551, %rd7548, %rd7550;
	cvt.u32.u16 	%r6870, %rs709;
	and.b32  	%r6871, %r6870, 255;
	mul.wide.u32 	%rd7552, %r6871, 16777216;
	or.b64  	%rd7553, %rd7551, %rd7552;
	cvt.u32.u16 	%r6872, %rs711;
	mul.wide.u32 	%rd7554, %r6872, 65536;
	or.b64  	%rd7555, %rd7553, %rd7554;
	cvt.u32.u16 	%r6873, %rs710;
	and.b32  	%r6874, %r6873, 255;
	mul.wide.u32 	%rd7556, %r6874, 256;
	or.b64  	%rd7557, %rd7555, %rd7556;
	cvt.u64.u16 	%rd7558, %rs712;
	or.b64  	%rd7559, %rd7557, %rd7558;
	ld.local.v4.u32 	{%r6875, %r6876, %r6877, %r6878}, [%rd7279+112];
	mov.b32 	{%rs713, %rs714}, %r6875;
	shr.u16 	%rs715, %rs713, 8;
	shr.u16 	%rs716, %rs714, 8;
	mov.b32 	{%rs717, %rs718}, %r6876;
	shr.u16 	%rs719, %rs717, 8;
	shr.u16 	%rs720, %rs718, 8;
	mov.b32 	{%rs721, %rs722}, %r6877;
	shr.u16 	%rs723, %rs721, 8;
	shr.u16 	%rs724, %rs722, 8;
	mov.b32 	{%rs725, %rs726}, %r6878;
	shr.u16 	%rs727, %rs725, 8;
	shr.u16 	%rs728, %rs726, 8;
	cvt.u64.u16 	%rd7560, %rs713;
	shl.b64 	%rd7561, %rd7560, 56;
	cvt.u64.u16 	%rd7562, %rs715;
	shl.b64 	%rd7563, %rd7562, 48;
	or.b64  	%rd7564, %rd7563, %rd7561;
	cvt.u64.u16 	%rd7565, %rs714;
	shl.b64 	%rd7566, %rd7565, 40;
	and.b64  	%rd7567, %rd7566, 280375465082880;
	or.b64  	%rd7568, %rd7564, %rd7567;
	cvt.u64.u16 	%rd7569, %rs716;
	shl.b64 	%rd7570, %rd7569, 32;
	or.b64  	%rd7571, %rd7568, %rd7570;
	cvt.u32.u16 	%r6883, %rs717;
	and.b32  	%r6884, %r6883, 255;
	mul.wide.u32 	%rd7572, %r6884, 16777216;
	or.b64  	%rd7573, %rd7571, %rd7572;
	cvt.u32.u16 	%r6885, %rs719;
	mul.wide.u32 	%rd7574, %r6885, 65536;
	or.b64  	%rd7575, %rd7573, %rd7574;
	cvt.u32.u16 	%r6886, %rs718;
	and.b32  	%r6887, %r6886, 255;
	mul.wide.u32 	%rd7576, %r6887, 256;
	or.b64  	%rd7577, %rd7575, %rd7576;
	cvt.u64.u16 	%rd7578, %rs720;
	or.b64  	%rd7579, %rd7577, %rd7578;
	cvt.u64.u16 	%rd7580, %rs721;
	shl.b64 	%rd7581, %rd7580, 56;
	cvt.u64.u16 	%rd7582, %rs723;
	shl.b64 	%rd7583, %rd7582, 48;
	or.b64  	%rd7584, %rd7583, %rd7581;
	cvt.u64.u16 	%rd7585, %rs722;
	shl.b64 	%rd7586, %rd7585, 40;
	and.b64  	%rd7587, %rd7586, 280375465082880;
	or.b64  	%rd7588, %rd7584, %rd7587;
	cvt.u64.u16 	%rd7589, %rs724;
	shl.b64 	%rd7590, %rd7589, 32;
	or.b64  	%rd7591, %rd7588, %rd7590;
	cvt.u32.u16 	%r6888, %rs725;
	and.b32  	%r6889, %r6888, 255;
	mul.wide.u32 	%rd7592, %r6889, 16777216;
	or.b64  	%rd7593, %rd7591, %rd7592;
	cvt.u32.u16 	%r6890, %rs727;
	mul.wide.u32 	%rd7594, %r6890, 65536;
	or.b64  	%rd7595, %rd7593, %rd7594;
	cvt.u32.u16 	%r6891, %rs726;
	and.b32  	%r6892, %r6891, 255;
	mul.wide.u32 	%rd7596, %r6892, 256;
	or.b64  	%rd7597, %rd7595, %rd7596;
	cvt.u64.u16 	%rd7598, %rs728;
	or.b64  	%rd7599, %rd7597, %rd7598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6893,%dummy}, %rd7319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6894}, %rd7319;
	}
	shf.r.wrap.b32 	%r6895, %r6894, %r6893, 1;
	shf.r.wrap.b32 	%r6896, %r6893, %r6894, 1;
	mov.b64 	%rd7600, {%r6896, %r6895};
	shf.r.wrap.b32 	%r6897, %r6894, %r6893, 8;
	shf.r.wrap.b32 	%r6898, %r6893, %r6894, 8;
	mov.b64 	%rd7601, {%r6898, %r6897};
	xor.b64  	%rd7602, %rd7600, %rd7601;
	shr.u64 	%rd7603, %rd7319, 7;
	xor.b64  	%rd7604, %rd7602, %rd7603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6899,%dummy}, %rd7579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6900}, %rd7579;
	}
	shf.r.wrap.b32 	%r6901, %r6900, %r6899, 19;
	shf.r.wrap.b32 	%r6902, %r6899, %r6900, 19;
	mov.b64 	%rd7605, {%r6902, %r6901};
	shf.l.wrap.b32 	%r6903, %r6899, %r6900, 3;
	shf.l.wrap.b32 	%r6904, %r6900, %r6899, 3;
	mov.b64 	%rd7606, {%r6904, %r6903};
	xor.b64  	%rd7607, %rd7605, %rd7606;
	shr.u64 	%rd7608, %rd7579, 6;
	xor.b64  	%rd7609, %rd7607, %rd7608;
	add.s64 	%rd7610, %rd7604, %rd7299;
	add.s64 	%rd7611, %rd7610, %rd7479;
	add.s64 	%rd7612, %rd7611, %rd7609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6905,%dummy}, %rd7339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6906}, %rd7339;
	}
	shf.r.wrap.b32 	%r6907, %r6906, %r6905, 1;
	shf.r.wrap.b32 	%r6908, %r6905, %r6906, 1;
	mov.b64 	%rd7613, {%r6908, %r6907};
	shf.r.wrap.b32 	%r6909, %r6906, %r6905, 8;
	shf.r.wrap.b32 	%r6910, %r6905, %r6906, 8;
	mov.b64 	%rd7614, {%r6910, %r6909};
	xor.b64  	%rd7615, %rd7613, %rd7614;
	shr.u64 	%rd7616, %rd7339, 7;
	xor.b64  	%rd7617, %rd7615, %rd7616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6911,%dummy}, %rd7599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6912}, %rd7599;
	}
	shf.r.wrap.b32 	%r6913, %r6912, %r6911, 19;
	shf.r.wrap.b32 	%r6914, %r6911, %r6912, 19;
	mov.b64 	%rd7618, {%r6914, %r6913};
	shf.l.wrap.b32 	%r6915, %r6911, %r6912, 3;
	shf.l.wrap.b32 	%r6916, %r6912, %r6911, 3;
	mov.b64 	%rd7619, {%r6916, %r6915};
	xor.b64  	%rd7620, %rd7618, %rd7619;
	shr.u64 	%rd7621, %rd7599, 6;
	xor.b64  	%rd7622, %rd7620, %rd7621;
	add.s64 	%rd7623, %rd7617, %rd7319;
	add.s64 	%rd7624, %rd7623, %rd7499;
	add.s64 	%rd7625, %rd7624, %rd7622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6917,%dummy}, %rd7359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6918}, %rd7359;
	}
	shf.r.wrap.b32 	%r6919, %r6918, %r6917, 1;
	shf.r.wrap.b32 	%r6920, %r6917, %r6918, 1;
	mov.b64 	%rd7626, {%r6920, %r6919};
	shf.r.wrap.b32 	%r6921, %r6918, %r6917, 8;
	shf.r.wrap.b32 	%r6922, %r6917, %r6918, 8;
	mov.b64 	%rd7627, {%r6922, %r6921};
	xor.b64  	%rd7628, %rd7626, %rd7627;
	shr.u64 	%rd7629, %rd7359, 7;
	xor.b64  	%rd7630, %rd7628, %rd7629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6923,%dummy}, %rd7612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6924}, %rd7612;
	}
	shf.r.wrap.b32 	%r6925, %r6924, %r6923, 19;
	shf.r.wrap.b32 	%r6926, %r6923, %r6924, 19;
	mov.b64 	%rd7631, {%r6926, %r6925};
	shf.l.wrap.b32 	%r6927, %r6923, %r6924, 3;
	shf.l.wrap.b32 	%r6928, %r6924, %r6923, 3;
	mov.b64 	%rd7632, {%r6928, %r6927};
	xor.b64  	%rd7633, %rd7631, %rd7632;
	shr.u64 	%rd7634, %rd7612, 6;
	xor.b64  	%rd7635, %rd7633, %rd7634;
	add.s64 	%rd7636, %rd7630, %rd7339;
	add.s64 	%rd7637, %rd7636, %rd7519;
	add.s64 	%rd7638, %rd7637, %rd7635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6929,%dummy}, %rd7379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6930}, %rd7379;
	}
	shf.r.wrap.b32 	%r6931, %r6930, %r6929, 1;
	shf.r.wrap.b32 	%r6932, %r6929, %r6930, 1;
	mov.b64 	%rd7639, {%r6932, %r6931};
	shf.r.wrap.b32 	%r6933, %r6930, %r6929, 8;
	shf.r.wrap.b32 	%r6934, %r6929, %r6930, 8;
	mov.b64 	%rd7640, {%r6934, %r6933};
	xor.b64  	%rd7641, %rd7639, %rd7640;
	shr.u64 	%rd7642, %rd7379, 7;
	xor.b64  	%rd7643, %rd7641, %rd7642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6935,%dummy}, %rd7625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6936}, %rd7625;
	}
	shf.r.wrap.b32 	%r6937, %r6936, %r6935, 19;
	shf.r.wrap.b32 	%r6938, %r6935, %r6936, 19;
	mov.b64 	%rd7644, {%r6938, %r6937};
	shf.l.wrap.b32 	%r6939, %r6935, %r6936, 3;
	shf.l.wrap.b32 	%r6940, %r6936, %r6935, 3;
	mov.b64 	%rd7645, {%r6940, %r6939};
	xor.b64  	%rd7646, %rd7644, %rd7645;
	shr.u64 	%rd7647, %rd7625, 6;
	xor.b64  	%rd7648, %rd7646, %rd7647;
	add.s64 	%rd7649, %rd7643, %rd7359;
	add.s64 	%rd7650, %rd7649, %rd7539;
	add.s64 	%rd7651, %rd7650, %rd7648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6941,%dummy}, %rd7399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6942}, %rd7399;
	}
	shf.r.wrap.b32 	%r6943, %r6942, %r6941, 1;
	shf.r.wrap.b32 	%r6944, %r6941, %r6942, 1;
	mov.b64 	%rd7652, {%r6944, %r6943};
	shf.r.wrap.b32 	%r6945, %r6942, %r6941, 8;
	shf.r.wrap.b32 	%r6946, %r6941, %r6942, 8;
	mov.b64 	%rd7653, {%r6946, %r6945};
	xor.b64  	%rd7654, %rd7652, %rd7653;
	shr.u64 	%rd7655, %rd7399, 7;
	xor.b64  	%rd7656, %rd7654, %rd7655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6947,%dummy}, %rd7638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6948}, %rd7638;
	}
	shf.r.wrap.b32 	%r6949, %r6948, %r6947, 19;
	shf.r.wrap.b32 	%r6950, %r6947, %r6948, 19;
	mov.b64 	%rd7657, {%r6950, %r6949};
	shf.l.wrap.b32 	%r6951, %r6947, %r6948, 3;
	shf.l.wrap.b32 	%r6952, %r6948, %r6947, 3;
	mov.b64 	%rd7658, {%r6952, %r6951};
	xor.b64  	%rd7659, %rd7657, %rd7658;
	shr.u64 	%rd7660, %rd7638, 6;
	xor.b64  	%rd7661, %rd7659, %rd7660;
	add.s64 	%rd7662, %rd7656, %rd7379;
	add.s64 	%rd7663, %rd7662, %rd7559;
	add.s64 	%rd7664, %rd7663, %rd7661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6953,%dummy}, %rd7419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6954}, %rd7419;
	}
	shf.r.wrap.b32 	%r6955, %r6954, %r6953, 1;
	shf.r.wrap.b32 	%r6956, %r6953, %r6954, 1;
	mov.b64 	%rd7665, {%r6956, %r6955};
	shf.r.wrap.b32 	%r6957, %r6954, %r6953, 8;
	shf.r.wrap.b32 	%r6958, %r6953, %r6954, 8;
	mov.b64 	%rd7666, {%r6958, %r6957};
	xor.b64  	%rd7667, %rd7665, %rd7666;
	shr.u64 	%rd7668, %rd7419, 7;
	xor.b64  	%rd7669, %rd7667, %rd7668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6959,%dummy}, %rd7651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6960}, %rd7651;
	}
	shf.r.wrap.b32 	%r6961, %r6960, %r6959, 19;
	shf.r.wrap.b32 	%r6962, %r6959, %r6960, 19;
	mov.b64 	%rd7670, {%r6962, %r6961};
	shf.l.wrap.b32 	%r6963, %r6959, %r6960, 3;
	shf.l.wrap.b32 	%r6964, %r6960, %r6959, 3;
	mov.b64 	%rd7671, {%r6964, %r6963};
	xor.b64  	%rd7672, %rd7670, %rd7671;
	shr.u64 	%rd7673, %rd7651, 6;
	xor.b64  	%rd7674, %rd7672, %rd7673;
	add.s64 	%rd7675, %rd7669, %rd7399;
	add.s64 	%rd7676, %rd7675, %rd7579;
	add.s64 	%rd7677, %rd7676, %rd7674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6965,%dummy}, %rd7439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6966}, %rd7439;
	}
	shf.r.wrap.b32 	%r6967, %r6966, %r6965, 1;
	shf.r.wrap.b32 	%r6968, %r6965, %r6966, 1;
	mov.b64 	%rd7678, {%r6968, %r6967};
	shf.r.wrap.b32 	%r6969, %r6966, %r6965, 8;
	shf.r.wrap.b32 	%r6970, %r6965, %r6966, 8;
	mov.b64 	%rd7679, {%r6970, %r6969};
	xor.b64  	%rd7680, %rd7678, %rd7679;
	shr.u64 	%rd7681, %rd7439, 7;
	xor.b64  	%rd7682, %rd7680, %rd7681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6971,%dummy}, %rd7664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6972}, %rd7664;
	}
	shf.r.wrap.b32 	%r6973, %r6972, %r6971, 19;
	shf.r.wrap.b32 	%r6974, %r6971, %r6972, 19;
	mov.b64 	%rd7683, {%r6974, %r6973};
	shf.l.wrap.b32 	%r6975, %r6971, %r6972, 3;
	shf.l.wrap.b32 	%r6976, %r6972, %r6971, 3;
	mov.b64 	%rd7684, {%r6976, %r6975};
	xor.b64  	%rd7685, %rd7683, %rd7684;
	shr.u64 	%rd7686, %rd7664, 6;
	xor.b64  	%rd7687, %rd7685, %rd7686;
	add.s64 	%rd7688, %rd7682, %rd7419;
	add.s64 	%rd7689, %rd7688, %rd7599;
	add.s64 	%rd7690, %rd7689, %rd7687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6977,%dummy}, %rd7459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6978}, %rd7459;
	}
	shf.r.wrap.b32 	%r6979, %r6978, %r6977, 1;
	shf.r.wrap.b32 	%r6980, %r6977, %r6978, 1;
	mov.b64 	%rd7691, {%r6980, %r6979};
	shf.r.wrap.b32 	%r6981, %r6978, %r6977, 8;
	shf.r.wrap.b32 	%r6982, %r6977, %r6978, 8;
	mov.b64 	%rd7692, {%r6982, %r6981};
	xor.b64  	%rd7693, %rd7691, %rd7692;
	shr.u64 	%rd7694, %rd7459, 7;
	xor.b64  	%rd7695, %rd7693, %rd7694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6983,%dummy}, %rd7677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6984}, %rd7677;
	}
	shf.r.wrap.b32 	%r6985, %r6984, %r6983, 19;
	shf.r.wrap.b32 	%r6986, %r6983, %r6984, 19;
	mov.b64 	%rd7696, {%r6986, %r6985};
	shf.l.wrap.b32 	%r6987, %r6983, %r6984, 3;
	shf.l.wrap.b32 	%r6988, %r6984, %r6983, 3;
	mov.b64 	%rd7697, {%r6988, %r6987};
	xor.b64  	%rd7698, %rd7696, %rd7697;
	shr.u64 	%rd7699, %rd7677, 6;
	xor.b64  	%rd7700, %rd7698, %rd7699;
	add.s64 	%rd7701, %rd7695, %rd7439;
	add.s64 	%rd7702, %rd7701, %rd7612;
	add.s64 	%rd7703, %rd7702, %rd7700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6989,%dummy}, %rd7479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6990}, %rd7479;
	}
	shf.r.wrap.b32 	%r6991, %r6990, %r6989, 1;
	shf.r.wrap.b32 	%r6992, %r6989, %r6990, 1;
	mov.b64 	%rd7704, {%r6992, %r6991};
	shf.r.wrap.b32 	%r6993, %r6990, %r6989, 8;
	shf.r.wrap.b32 	%r6994, %r6989, %r6990, 8;
	mov.b64 	%rd7705, {%r6994, %r6993};
	xor.b64  	%rd7706, %rd7704, %rd7705;
	shr.u64 	%rd7707, %rd7479, 7;
	xor.b64  	%rd7708, %rd7706, %rd7707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6995,%dummy}, %rd7690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6996}, %rd7690;
	}
	shf.r.wrap.b32 	%r6997, %r6996, %r6995, 19;
	shf.r.wrap.b32 	%r6998, %r6995, %r6996, 19;
	mov.b64 	%rd7709, {%r6998, %r6997};
	shf.l.wrap.b32 	%r6999, %r6995, %r6996, 3;
	shf.l.wrap.b32 	%r7000, %r6996, %r6995, 3;
	mov.b64 	%rd7710, {%r7000, %r6999};
	xor.b64  	%rd7711, %rd7709, %rd7710;
	shr.u64 	%rd7712, %rd7690, 6;
	xor.b64  	%rd7713, %rd7711, %rd7712;
	add.s64 	%rd7714, %rd7708, %rd7459;
	add.s64 	%rd7715, %rd7714, %rd7625;
	add.s64 	%rd7716, %rd7715, %rd7713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7001,%dummy}, %rd7499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7002}, %rd7499;
	}
	shf.r.wrap.b32 	%r7003, %r7002, %r7001, 1;
	shf.r.wrap.b32 	%r7004, %r7001, %r7002, 1;
	mov.b64 	%rd7717, {%r7004, %r7003};
	shf.r.wrap.b32 	%r7005, %r7002, %r7001, 8;
	shf.r.wrap.b32 	%r7006, %r7001, %r7002, 8;
	mov.b64 	%rd7718, {%r7006, %r7005};
	xor.b64  	%rd7719, %rd7717, %rd7718;
	shr.u64 	%rd7720, %rd7499, 7;
	xor.b64  	%rd7721, %rd7719, %rd7720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7007,%dummy}, %rd7703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7008}, %rd7703;
	}
	shf.r.wrap.b32 	%r7009, %r7008, %r7007, 19;
	shf.r.wrap.b32 	%r7010, %r7007, %r7008, 19;
	mov.b64 	%rd7722, {%r7010, %r7009};
	shf.l.wrap.b32 	%r7011, %r7007, %r7008, 3;
	shf.l.wrap.b32 	%r7012, %r7008, %r7007, 3;
	mov.b64 	%rd7723, {%r7012, %r7011};
	xor.b64  	%rd7724, %rd7722, %rd7723;
	shr.u64 	%rd7725, %rd7703, 6;
	xor.b64  	%rd7726, %rd7724, %rd7725;
	add.s64 	%rd7727, %rd7721, %rd7479;
	add.s64 	%rd7728, %rd7727, %rd7638;
	add.s64 	%rd7729, %rd7728, %rd7726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7013,%dummy}, %rd7519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7014}, %rd7519;
	}
	shf.r.wrap.b32 	%r7015, %r7014, %r7013, 1;
	shf.r.wrap.b32 	%r7016, %r7013, %r7014, 1;
	mov.b64 	%rd7730, {%r7016, %r7015};
	shf.r.wrap.b32 	%r7017, %r7014, %r7013, 8;
	shf.r.wrap.b32 	%r7018, %r7013, %r7014, 8;
	mov.b64 	%rd7731, {%r7018, %r7017};
	xor.b64  	%rd7732, %rd7730, %rd7731;
	shr.u64 	%rd7733, %rd7519, 7;
	xor.b64  	%rd7734, %rd7732, %rd7733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7019,%dummy}, %rd7716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7020}, %rd7716;
	}
	shf.r.wrap.b32 	%r7021, %r7020, %r7019, 19;
	shf.r.wrap.b32 	%r7022, %r7019, %r7020, 19;
	mov.b64 	%rd7735, {%r7022, %r7021};
	shf.l.wrap.b32 	%r7023, %r7019, %r7020, 3;
	shf.l.wrap.b32 	%r7024, %r7020, %r7019, 3;
	mov.b64 	%rd7736, {%r7024, %r7023};
	xor.b64  	%rd7737, %rd7735, %rd7736;
	shr.u64 	%rd7738, %rd7716, 6;
	xor.b64  	%rd7739, %rd7737, %rd7738;
	add.s64 	%rd7740, %rd7734, %rd7499;
	add.s64 	%rd7741, %rd7740, %rd7651;
	add.s64 	%rd7742, %rd7741, %rd7739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7025,%dummy}, %rd7539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7026}, %rd7539;
	}
	shf.r.wrap.b32 	%r7027, %r7026, %r7025, 1;
	shf.r.wrap.b32 	%r7028, %r7025, %r7026, 1;
	mov.b64 	%rd7743, {%r7028, %r7027};
	shf.r.wrap.b32 	%r7029, %r7026, %r7025, 8;
	shf.r.wrap.b32 	%r7030, %r7025, %r7026, 8;
	mov.b64 	%rd7744, {%r7030, %r7029};
	xor.b64  	%rd7745, %rd7743, %rd7744;
	shr.u64 	%rd7746, %rd7539, 7;
	xor.b64  	%rd7747, %rd7745, %rd7746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7031,%dummy}, %rd7729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7032}, %rd7729;
	}
	shf.r.wrap.b32 	%r7033, %r7032, %r7031, 19;
	shf.r.wrap.b32 	%r7034, %r7031, %r7032, 19;
	mov.b64 	%rd7748, {%r7034, %r7033};
	shf.l.wrap.b32 	%r7035, %r7031, %r7032, 3;
	shf.l.wrap.b32 	%r7036, %r7032, %r7031, 3;
	mov.b64 	%rd7749, {%r7036, %r7035};
	xor.b64  	%rd7750, %rd7748, %rd7749;
	shr.u64 	%rd7751, %rd7729, 6;
	xor.b64  	%rd7752, %rd7750, %rd7751;
	add.s64 	%rd7753, %rd7747, %rd7519;
	add.s64 	%rd7754, %rd7753, %rd7664;
	add.s64 	%rd7755, %rd7754, %rd7752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7037,%dummy}, %rd7559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7038}, %rd7559;
	}
	shf.r.wrap.b32 	%r7039, %r7038, %r7037, 1;
	shf.r.wrap.b32 	%r7040, %r7037, %r7038, 1;
	mov.b64 	%rd7756, {%r7040, %r7039};
	shf.r.wrap.b32 	%r7041, %r7038, %r7037, 8;
	shf.r.wrap.b32 	%r7042, %r7037, %r7038, 8;
	mov.b64 	%rd7757, {%r7042, %r7041};
	xor.b64  	%rd7758, %rd7756, %rd7757;
	shr.u64 	%rd7759, %rd7559, 7;
	xor.b64  	%rd7760, %rd7758, %rd7759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7043,%dummy}, %rd7742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7044}, %rd7742;
	}
	shf.r.wrap.b32 	%r7045, %r7044, %r7043, 19;
	shf.r.wrap.b32 	%r7046, %r7043, %r7044, 19;
	mov.b64 	%rd7761, {%r7046, %r7045};
	shf.l.wrap.b32 	%r7047, %r7043, %r7044, 3;
	shf.l.wrap.b32 	%r7048, %r7044, %r7043, 3;
	mov.b64 	%rd7762, {%r7048, %r7047};
	xor.b64  	%rd7763, %rd7761, %rd7762;
	shr.u64 	%rd7764, %rd7742, 6;
	xor.b64  	%rd7765, %rd7763, %rd7764;
	add.s64 	%rd7766, %rd7760, %rd7539;
	add.s64 	%rd7767, %rd7766, %rd7677;
	add.s64 	%rd7768, %rd7767, %rd7765;
	shf.r.wrap.b32 	%r7049, %r6900, %r6899, 1;
	shf.r.wrap.b32 	%r7050, %r6899, %r6900, 1;
	mov.b64 	%rd7769, {%r7050, %r7049};
	shf.r.wrap.b32 	%r7051, %r6900, %r6899, 8;
	shf.r.wrap.b32 	%r7052, %r6899, %r6900, 8;
	mov.b64 	%rd7770, {%r7052, %r7051};
	xor.b64  	%rd7771, %rd7769, %rd7770;
	shr.u64 	%rd7772, %rd7579, 7;
	xor.b64  	%rd7773, %rd7771, %rd7772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7053,%dummy}, %rd7755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7054}, %rd7755;
	}
	shf.r.wrap.b32 	%r7055, %r7054, %r7053, 19;
	shf.r.wrap.b32 	%r7056, %r7053, %r7054, 19;
	mov.b64 	%rd7774, {%r7056, %r7055};
	shf.l.wrap.b32 	%r7057, %r7053, %r7054, 3;
	shf.l.wrap.b32 	%r7058, %r7054, %r7053, 3;
	mov.b64 	%rd7775, {%r7058, %r7057};
	xor.b64  	%rd7776, %rd7774, %rd7775;
	shr.u64 	%rd7777, %rd7755, 6;
	xor.b64  	%rd7778, %rd7776, %rd7777;
	add.s64 	%rd7779, %rd7773, %rd7559;
	add.s64 	%rd7780, %rd7779, %rd7690;
	add.s64 	%rd7781, %rd7780, %rd7778;
	shf.r.wrap.b32 	%r7059, %r6912, %r6911, 1;
	shf.r.wrap.b32 	%r7060, %r6911, %r6912, 1;
	mov.b64 	%rd7782, {%r7060, %r7059};
	shf.r.wrap.b32 	%r7061, %r6912, %r6911, 8;
	shf.r.wrap.b32 	%r7062, %r6911, %r6912, 8;
	mov.b64 	%rd7783, {%r7062, %r7061};
	xor.b64  	%rd7784, %rd7782, %rd7783;
	shr.u64 	%rd7785, %rd7599, 7;
	xor.b64  	%rd7786, %rd7784, %rd7785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7063,%dummy}, %rd7768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7064}, %rd7768;
	}
	shf.r.wrap.b32 	%r7065, %r7064, %r7063, 19;
	shf.r.wrap.b32 	%r7066, %r7063, %r7064, 19;
	mov.b64 	%rd7787, {%r7066, %r7065};
	shf.l.wrap.b32 	%r7067, %r7063, %r7064, 3;
	shf.l.wrap.b32 	%r7068, %r7064, %r7063, 3;
	mov.b64 	%rd7788, {%r7068, %r7067};
	xor.b64  	%rd7789, %rd7787, %rd7788;
	shr.u64 	%rd7790, %rd7768, 6;
	xor.b64  	%rd7791, %rd7789, %rd7790;
	add.s64 	%rd7792, %rd7786, %rd7579;
	add.s64 	%rd7793, %rd7792, %rd7703;
	add.s64 	%rd7794, %rd7793, %rd7791;
	shf.r.wrap.b32 	%r7069, %r6924, %r6923, 1;
	shf.r.wrap.b32 	%r7070, %r6923, %r6924, 1;
	mov.b64 	%rd7795, {%r7070, %r7069};
	shf.r.wrap.b32 	%r7071, %r6924, %r6923, 8;
	shf.r.wrap.b32 	%r7072, %r6923, %r6924, 8;
	mov.b64 	%rd7796, {%r7072, %r7071};
	xor.b64  	%rd7797, %rd7795, %rd7796;
	shr.u64 	%rd7798, %rd7612, 7;
	xor.b64  	%rd7799, %rd7797, %rd7798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7073,%dummy}, %rd7781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7074}, %rd7781;
	}
	shf.r.wrap.b32 	%r7075, %r7074, %r7073, 19;
	shf.r.wrap.b32 	%r7076, %r7073, %r7074, 19;
	mov.b64 	%rd7800, {%r7076, %r7075};
	shf.l.wrap.b32 	%r7077, %r7073, %r7074, 3;
	shf.l.wrap.b32 	%r7078, %r7074, %r7073, 3;
	mov.b64 	%rd7801, {%r7078, %r7077};
	xor.b64  	%rd7802, %rd7800, %rd7801;
	shr.u64 	%rd7803, %rd7781, 6;
	xor.b64  	%rd7804, %rd7802, %rd7803;
	add.s64 	%rd7805, %rd7799, %rd7599;
	add.s64 	%rd7806, %rd7805, %rd7716;
	add.s64 	%rd7807, %rd7806, %rd7804;
	shf.r.wrap.b32 	%r7079, %r6936, %r6935, 1;
	shf.r.wrap.b32 	%r7080, %r6935, %r6936, 1;
	mov.b64 	%rd7808, {%r7080, %r7079};
	shf.r.wrap.b32 	%r7081, %r6936, %r6935, 8;
	shf.r.wrap.b32 	%r7082, %r6935, %r6936, 8;
	mov.b64 	%rd7809, {%r7082, %r7081};
	xor.b64  	%rd7810, %rd7808, %rd7809;
	shr.u64 	%rd7811, %rd7625, 7;
	xor.b64  	%rd7812, %rd7810, %rd7811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7083,%dummy}, %rd7794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7084}, %rd7794;
	}
	shf.r.wrap.b32 	%r7085, %r7084, %r7083, 19;
	shf.r.wrap.b32 	%r7086, %r7083, %r7084, 19;
	mov.b64 	%rd7813, {%r7086, %r7085};
	shf.l.wrap.b32 	%r7087, %r7083, %r7084, 3;
	shf.l.wrap.b32 	%r7088, %r7084, %r7083, 3;
	mov.b64 	%rd7814, {%r7088, %r7087};
	xor.b64  	%rd7815, %rd7813, %rd7814;
	shr.u64 	%rd7816, %rd7794, 6;
	xor.b64  	%rd7817, %rd7815, %rd7816;
	add.s64 	%rd7818, %rd7812, %rd7612;
	add.s64 	%rd7819, %rd7818, %rd7729;
	add.s64 	%rd7820, %rd7819, %rd7817;
	shf.r.wrap.b32 	%r7089, %r6948, %r6947, 1;
	shf.r.wrap.b32 	%r7090, %r6947, %r6948, 1;
	mov.b64 	%rd7821, {%r7090, %r7089};
	shf.r.wrap.b32 	%r7091, %r6948, %r6947, 8;
	shf.r.wrap.b32 	%r7092, %r6947, %r6948, 8;
	mov.b64 	%rd7822, {%r7092, %r7091};
	xor.b64  	%rd7823, %rd7821, %rd7822;
	shr.u64 	%rd7824, %rd7638, 7;
	xor.b64  	%rd7825, %rd7823, %rd7824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7093,%dummy}, %rd7807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7094}, %rd7807;
	}
	shf.r.wrap.b32 	%r7095, %r7094, %r7093, 19;
	shf.r.wrap.b32 	%r7096, %r7093, %r7094, 19;
	mov.b64 	%rd7826, {%r7096, %r7095};
	shf.l.wrap.b32 	%r7097, %r7093, %r7094, 3;
	shf.l.wrap.b32 	%r7098, %r7094, %r7093, 3;
	mov.b64 	%rd7827, {%r7098, %r7097};
	xor.b64  	%rd7828, %rd7826, %rd7827;
	shr.u64 	%rd7829, %rd7807, 6;
	xor.b64  	%rd7830, %rd7828, %rd7829;
	add.s64 	%rd7831, %rd7825, %rd7625;
	add.s64 	%rd7832, %rd7831, %rd7742;
	add.s64 	%rd7833, %rd7832, %rd7830;
	shf.r.wrap.b32 	%r7099, %r6960, %r6959, 1;
	shf.r.wrap.b32 	%r7100, %r6959, %r6960, 1;
	mov.b64 	%rd7834, {%r7100, %r7099};
	shf.r.wrap.b32 	%r7101, %r6960, %r6959, 8;
	shf.r.wrap.b32 	%r7102, %r6959, %r6960, 8;
	mov.b64 	%rd7835, {%r7102, %r7101};
	xor.b64  	%rd7836, %rd7834, %rd7835;
	shr.u64 	%rd7837, %rd7651, 7;
	xor.b64  	%rd7838, %rd7836, %rd7837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7103,%dummy}, %rd7820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7104}, %rd7820;
	}
	shf.r.wrap.b32 	%r7105, %r7104, %r7103, 19;
	shf.r.wrap.b32 	%r7106, %r7103, %r7104, 19;
	mov.b64 	%rd7839, {%r7106, %r7105};
	shf.l.wrap.b32 	%r7107, %r7103, %r7104, 3;
	shf.l.wrap.b32 	%r7108, %r7104, %r7103, 3;
	mov.b64 	%rd7840, {%r7108, %r7107};
	xor.b64  	%rd7841, %rd7839, %rd7840;
	shr.u64 	%rd7842, %rd7820, 6;
	xor.b64  	%rd7843, %rd7841, %rd7842;
	add.s64 	%rd7844, %rd7838, %rd7638;
	add.s64 	%rd7845, %rd7844, %rd7755;
	add.s64 	%rd7846, %rd7845, %rd7843;
	shf.r.wrap.b32 	%r7109, %r6972, %r6971, 1;
	shf.r.wrap.b32 	%r7110, %r6971, %r6972, 1;
	mov.b64 	%rd7847, {%r7110, %r7109};
	shf.r.wrap.b32 	%r7111, %r6972, %r6971, 8;
	shf.r.wrap.b32 	%r7112, %r6971, %r6972, 8;
	mov.b64 	%rd7848, {%r7112, %r7111};
	xor.b64  	%rd7849, %rd7847, %rd7848;
	shr.u64 	%rd7850, %rd7664, 7;
	xor.b64  	%rd7851, %rd7849, %rd7850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7113,%dummy}, %rd7833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7114}, %rd7833;
	}
	shf.r.wrap.b32 	%r7115, %r7114, %r7113, 19;
	shf.r.wrap.b32 	%r7116, %r7113, %r7114, 19;
	mov.b64 	%rd7852, {%r7116, %r7115};
	shf.l.wrap.b32 	%r7117, %r7113, %r7114, 3;
	shf.l.wrap.b32 	%r7118, %r7114, %r7113, 3;
	mov.b64 	%rd7853, {%r7118, %r7117};
	xor.b64  	%rd7854, %rd7852, %rd7853;
	shr.u64 	%rd7855, %rd7833, 6;
	xor.b64  	%rd7856, %rd7854, %rd7855;
	add.s64 	%rd7857, %rd7851, %rd7651;
	add.s64 	%rd7858, %rd7857, %rd7768;
	add.s64 	%rd7859, %rd7858, %rd7856;
	shf.r.wrap.b32 	%r7119, %r6984, %r6983, 1;
	shf.r.wrap.b32 	%r7120, %r6983, %r6984, 1;
	mov.b64 	%rd7860, {%r7120, %r7119};
	shf.r.wrap.b32 	%r7121, %r6984, %r6983, 8;
	shf.r.wrap.b32 	%r7122, %r6983, %r6984, 8;
	mov.b64 	%rd7861, {%r7122, %r7121};
	xor.b64  	%rd7862, %rd7860, %rd7861;
	shr.u64 	%rd7863, %rd7677, 7;
	xor.b64  	%rd7864, %rd7862, %rd7863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7123,%dummy}, %rd7846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7124}, %rd7846;
	}
	shf.r.wrap.b32 	%r7125, %r7124, %r7123, 19;
	shf.r.wrap.b32 	%r7126, %r7123, %r7124, 19;
	mov.b64 	%rd7865, {%r7126, %r7125};
	shf.l.wrap.b32 	%r7127, %r7123, %r7124, 3;
	shf.l.wrap.b32 	%r7128, %r7124, %r7123, 3;
	mov.b64 	%rd7866, {%r7128, %r7127};
	xor.b64  	%rd7867, %rd7865, %rd7866;
	shr.u64 	%rd7868, %rd7846, 6;
	xor.b64  	%rd7869, %rd7867, %rd7868;
	add.s64 	%rd7870, %rd7864, %rd7664;
	add.s64 	%rd7871, %rd7870, %rd7781;
	add.s64 	%rd7872, %rd7871, %rd7869;
	shf.r.wrap.b32 	%r7129, %r6996, %r6995, 1;
	shf.r.wrap.b32 	%r7130, %r6995, %r6996, 1;
	mov.b64 	%rd7873, {%r7130, %r7129};
	shf.r.wrap.b32 	%r7131, %r6996, %r6995, 8;
	shf.r.wrap.b32 	%r7132, %r6995, %r6996, 8;
	mov.b64 	%rd7874, {%r7132, %r7131};
	xor.b64  	%rd7875, %rd7873, %rd7874;
	shr.u64 	%rd7876, %rd7690, 7;
	xor.b64  	%rd7877, %rd7875, %rd7876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7133,%dummy}, %rd7859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7134}, %rd7859;
	}
	shf.r.wrap.b32 	%r7135, %r7134, %r7133, 19;
	shf.r.wrap.b32 	%r7136, %r7133, %r7134, 19;
	mov.b64 	%rd7878, {%r7136, %r7135};
	shf.l.wrap.b32 	%r7137, %r7133, %r7134, 3;
	shf.l.wrap.b32 	%r7138, %r7134, %r7133, 3;
	mov.b64 	%rd7879, {%r7138, %r7137};
	xor.b64  	%rd7880, %rd7878, %rd7879;
	shr.u64 	%rd7881, %rd7859, 6;
	xor.b64  	%rd7882, %rd7880, %rd7881;
	add.s64 	%rd7883, %rd7877, %rd7677;
	add.s64 	%rd7884, %rd7883, %rd7794;
	add.s64 	%rd7885, %rd7884, %rd7882;
	shf.r.wrap.b32 	%r7139, %r7008, %r7007, 1;
	shf.r.wrap.b32 	%r7140, %r7007, %r7008, 1;
	mov.b64 	%rd7886, {%r7140, %r7139};
	shf.r.wrap.b32 	%r7141, %r7008, %r7007, 8;
	shf.r.wrap.b32 	%r7142, %r7007, %r7008, 8;
	mov.b64 	%rd7887, {%r7142, %r7141};
	xor.b64  	%rd7888, %rd7886, %rd7887;
	shr.u64 	%rd7889, %rd7703, 7;
	xor.b64  	%rd7890, %rd7888, %rd7889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7143,%dummy}, %rd7872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7144}, %rd7872;
	}
	shf.r.wrap.b32 	%r7145, %r7144, %r7143, 19;
	shf.r.wrap.b32 	%r7146, %r7143, %r7144, 19;
	mov.b64 	%rd7891, {%r7146, %r7145};
	shf.l.wrap.b32 	%r7147, %r7143, %r7144, 3;
	shf.l.wrap.b32 	%r7148, %r7144, %r7143, 3;
	mov.b64 	%rd7892, {%r7148, %r7147};
	xor.b64  	%rd7893, %rd7891, %rd7892;
	shr.u64 	%rd7894, %rd7872, 6;
	xor.b64  	%rd7895, %rd7893, %rd7894;
	add.s64 	%rd7896, %rd7890, %rd7690;
	add.s64 	%rd7897, %rd7896, %rd7807;
	add.s64 	%rd7898, %rd7897, %rd7895;
	shf.r.wrap.b32 	%r7149, %r7020, %r7019, 1;
	shf.r.wrap.b32 	%r7150, %r7019, %r7020, 1;
	mov.b64 	%rd7899, {%r7150, %r7149};
	shf.r.wrap.b32 	%r7151, %r7020, %r7019, 8;
	shf.r.wrap.b32 	%r7152, %r7019, %r7020, 8;
	mov.b64 	%rd7900, {%r7152, %r7151};
	xor.b64  	%rd7901, %rd7899, %rd7900;
	shr.u64 	%rd7902, %rd7716, 7;
	xor.b64  	%rd7903, %rd7901, %rd7902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7153,%dummy}, %rd7885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7154}, %rd7885;
	}
	shf.r.wrap.b32 	%r7155, %r7154, %r7153, 19;
	shf.r.wrap.b32 	%r7156, %r7153, %r7154, 19;
	mov.b64 	%rd7904, {%r7156, %r7155};
	shf.l.wrap.b32 	%r7157, %r7153, %r7154, 3;
	shf.l.wrap.b32 	%r7158, %r7154, %r7153, 3;
	mov.b64 	%rd7905, {%r7158, %r7157};
	xor.b64  	%rd7906, %rd7904, %rd7905;
	shr.u64 	%rd7907, %rd7885, 6;
	xor.b64  	%rd7908, %rd7906, %rd7907;
	add.s64 	%rd7909, %rd7903, %rd7703;
	add.s64 	%rd7910, %rd7909, %rd7820;
	add.s64 	%rd7911, %rd7910, %rd7908;
	shf.r.wrap.b32 	%r7159, %r7032, %r7031, 1;
	shf.r.wrap.b32 	%r7160, %r7031, %r7032, 1;
	mov.b64 	%rd7912, {%r7160, %r7159};
	shf.r.wrap.b32 	%r7161, %r7032, %r7031, 8;
	shf.r.wrap.b32 	%r7162, %r7031, %r7032, 8;
	mov.b64 	%rd7913, {%r7162, %r7161};
	xor.b64  	%rd7914, %rd7912, %rd7913;
	shr.u64 	%rd7915, %rd7729, 7;
	xor.b64  	%rd7916, %rd7914, %rd7915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7163,%dummy}, %rd7898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7164}, %rd7898;
	}
	shf.r.wrap.b32 	%r7165, %r7164, %r7163, 19;
	shf.r.wrap.b32 	%r7166, %r7163, %r7164, 19;
	mov.b64 	%rd7917, {%r7166, %r7165};
	shf.l.wrap.b32 	%r7167, %r7163, %r7164, 3;
	shf.l.wrap.b32 	%r7168, %r7164, %r7163, 3;
	mov.b64 	%rd7918, {%r7168, %r7167};
	xor.b64  	%rd7919, %rd7917, %rd7918;
	shr.u64 	%rd7920, %rd7898, 6;
	xor.b64  	%rd7921, %rd7919, %rd7920;
	add.s64 	%rd7922, %rd7916, %rd7716;
	add.s64 	%rd7923, %rd7922, %rd7833;
	add.s64 	%rd7924, %rd7923, %rd7921;
	shf.r.wrap.b32 	%r7169, %r7044, %r7043, 1;
	shf.r.wrap.b32 	%r7170, %r7043, %r7044, 1;
	mov.b64 	%rd7925, {%r7170, %r7169};
	shf.r.wrap.b32 	%r7171, %r7044, %r7043, 8;
	shf.r.wrap.b32 	%r7172, %r7043, %r7044, 8;
	mov.b64 	%rd7926, {%r7172, %r7171};
	xor.b64  	%rd7927, %rd7925, %rd7926;
	shr.u64 	%rd7928, %rd7742, 7;
	xor.b64  	%rd7929, %rd7927, %rd7928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7173,%dummy}, %rd7911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7174}, %rd7911;
	}
	shf.r.wrap.b32 	%r7175, %r7174, %r7173, 19;
	shf.r.wrap.b32 	%r7176, %r7173, %r7174, 19;
	mov.b64 	%rd7930, {%r7176, %r7175};
	shf.l.wrap.b32 	%r7177, %r7173, %r7174, 3;
	shf.l.wrap.b32 	%r7178, %r7174, %r7173, 3;
	mov.b64 	%rd7931, {%r7178, %r7177};
	xor.b64  	%rd7932, %rd7930, %rd7931;
	shr.u64 	%rd7933, %rd7911, 6;
	xor.b64  	%rd7934, %rd7932, %rd7933;
	add.s64 	%rd7935, %rd7929, %rd7729;
	add.s64 	%rd7936, %rd7935, %rd7846;
	add.s64 	%rd7937, %rd7936, %rd7934;
	shf.r.wrap.b32 	%r7179, %r7054, %r7053, 1;
	shf.r.wrap.b32 	%r7180, %r7053, %r7054, 1;
	mov.b64 	%rd7938, {%r7180, %r7179};
	shf.r.wrap.b32 	%r7181, %r7054, %r7053, 8;
	shf.r.wrap.b32 	%r7182, %r7053, %r7054, 8;
	mov.b64 	%rd7939, {%r7182, %r7181};
	xor.b64  	%rd7940, %rd7938, %rd7939;
	shr.u64 	%rd7941, %rd7755, 7;
	xor.b64  	%rd7942, %rd7940, %rd7941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7183,%dummy}, %rd7924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7184}, %rd7924;
	}
	shf.r.wrap.b32 	%r7185, %r7184, %r7183, 19;
	shf.r.wrap.b32 	%r7186, %r7183, %r7184, 19;
	mov.b64 	%rd7943, {%r7186, %r7185};
	shf.l.wrap.b32 	%r7187, %r7183, %r7184, 3;
	shf.l.wrap.b32 	%r7188, %r7184, %r7183, 3;
	mov.b64 	%rd7944, {%r7188, %r7187};
	xor.b64  	%rd7945, %rd7943, %rd7944;
	shr.u64 	%rd7946, %rd7924, 6;
	xor.b64  	%rd7947, %rd7945, %rd7946;
	add.s64 	%rd7948, %rd7942, %rd7742;
	add.s64 	%rd7949, %rd7948, %rd7859;
	add.s64 	%rd7950, %rd7949, %rd7947;
	shf.r.wrap.b32 	%r7189, %r7064, %r7063, 1;
	shf.r.wrap.b32 	%r7190, %r7063, %r7064, 1;
	mov.b64 	%rd7951, {%r7190, %r7189};
	shf.r.wrap.b32 	%r7191, %r7064, %r7063, 8;
	shf.r.wrap.b32 	%r7192, %r7063, %r7064, 8;
	mov.b64 	%rd7952, {%r7192, %r7191};
	xor.b64  	%rd7953, %rd7951, %rd7952;
	shr.u64 	%rd7954, %rd7768, 7;
	xor.b64  	%rd7955, %rd7953, %rd7954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7193,%dummy}, %rd7937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7194}, %rd7937;
	}
	shf.r.wrap.b32 	%r7195, %r7194, %r7193, 19;
	shf.r.wrap.b32 	%r7196, %r7193, %r7194, 19;
	mov.b64 	%rd7956, {%r7196, %r7195};
	shf.l.wrap.b32 	%r7197, %r7193, %r7194, 3;
	shf.l.wrap.b32 	%r7198, %r7194, %r7193, 3;
	mov.b64 	%rd7957, {%r7198, %r7197};
	xor.b64  	%rd7958, %rd7956, %rd7957;
	shr.u64 	%rd7959, %rd7937, 6;
	xor.b64  	%rd7960, %rd7958, %rd7959;
	add.s64 	%rd7961, %rd7955, %rd7755;
	add.s64 	%rd7962, %rd7961, %rd7872;
	add.s64 	%rd7963, %rd7962, %rd7960;
	shf.r.wrap.b32 	%r7199, %r7074, %r7073, 1;
	shf.r.wrap.b32 	%r7200, %r7073, %r7074, 1;
	mov.b64 	%rd7964, {%r7200, %r7199};
	shf.r.wrap.b32 	%r7201, %r7074, %r7073, 8;
	shf.r.wrap.b32 	%r7202, %r7073, %r7074, 8;
	mov.b64 	%rd7965, {%r7202, %r7201};
	xor.b64  	%rd7966, %rd7964, %rd7965;
	shr.u64 	%rd7967, %rd7781, 7;
	xor.b64  	%rd7968, %rd7966, %rd7967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7203,%dummy}, %rd7950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7204}, %rd7950;
	}
	shf.r.wrap.b32 	%r7205, %r7204, %r7203, 19;
	shf.r.wrap.b32 	%r7206, %r7203, %r7204, 19;
	mov.b64 	%rd7969, {%r7206, %r7205};
	shf.l.wrap.b32 	%r7207, %r7203, %r7204, 3;
	shf.l.wrap.b32 	%r7208, %r7204, %r7203, 3;
	mov.b64 	%rd7970, {%r7208, %r7207};
	xor.b64  	%rd7971, %rd7969, %rd7970;
	shr.u64 	%rd7972, %rd7950, 6;
	xor.b64  	%rd7973, %rd7971, %rd7972;
	add.s64 	%rd7974, %rd7968, %rd7768;
	add.s64 	%rd7975, %rd7974, %rd7885;
	add.s64 	%rd7976, %rd7975, %rd7973;
	shf.r.wrap.b32 	%r7209, %r7084, %r7083, 1;
	shf.r.wrap.b32 	%r7210, %r7083, %r7084, 1;
	mov.b64 	%rd7977, {%r7210, %r7209};
	shf.r.wrap.b32 	%r7211, %r7084, %r7083, 8;
	shf.r.wrap.b32 	%r7212, %r7083, %r7084, 8;
	mov.b64 	%rd7978, {%r7212, %r7211};
	xor.b64  	%rd7979, %rd7977, %rd7978;
	shr.u64 	%rd7980, %rd7794, 7;
	xor.b64  	%rd7981, %rd7979, %rd7980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7213,%dummy}, %rd7963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7214}, %rd7963;
	}
	shf.r.wrap.b32 	%r7215, %r7214, %r7213, 19;
	shf.r.wrap.b32 	%r7216, %r7213, %r7214, 19;
	mov.b64 	%rd7982, {%r7216, %r7215};
	shf.l.wrap.b32 	%r7217, %r7213, %r7214, 3;
	shf.l.wrap.b32 	%r7218, %r7214, %r7213, 3;
	mov.b64 	%rd7983, {%r7218, %r7217};
	xor.b64  	%rd7984, %rd7982, %rd7983;
	shr.u64 	%rd7985, %rd7963, 6;
	xor.b64  	%rd7986, %rd7984, %rd7985;
	add.s64 	%rd7987, %rd7981, %rd7781;
	add.s64 	%rd7988, %rd7987, %rd7898;
	add.s64 	%rd7989, %rd7988, %rd7986;
	shf.r.wrap.b32 	%r7219, %r7094, %r7093, 1;
	shf.r.wrap.b32 	%r7220, %r7093, %r7094, 1;
	mov.b64 	%rd7990, {%r7220, %r7219};
	shf.r.wrap.b32 	%r7221, %r7094, %r7093, 8;
	shf.r.wrap.b32 	%r7222, %r7093, %r7094, 8;
	mov.b64 	%rd7991, {%r7222, %r7221};
	xor.b64  	%rd7992, %rd7990, %rd7991;
	shr.u64 	%rd7993, %rd7807, 7;
	xor.b64  	%rd7994, %rd7992, %rd7993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7223,%dummy}, %rd7976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7224}, %rd7976;
	}
	shf.r.wrap.b32 	%r7225, %r7224, %r7223, 19;
	shf.r.wrap.b32 	%r7226, %r7223, %r7224, 19;
	mov.b64 	%rd7995, {%r7226, %r7225};
	shf.l.wrap.b32 	%r7227, %r7223, %r7224, 3;
	shf.l.wrap.b32 	%r7228, %r7224, %r7223, 3;
	mov.b64 	%rd7996, {%r7228, %r7227};
	xor.b64  	%rd7997, %rd7995, %rd7996;
	shr.u64 	%rd7998, %rd7976, 6;
	xor.b64  	%rd7999, %rd7997, %rd7998;
	add.s64 	%rd8000, %rd7994, %rd7794;
	add.s64 	%rd8001, %rd8000, %rd7911;
	add.s64 	%rd8002, %rd8001, %rd7999;
	shf.r.wrap.b32 	%r7229, %r7104, %r7103, 1;
	shf.r.wrap.b32 	%r7230, %r7103, %r7104, 1;
	mov.b64 	%rd8003, {%r7230, %r7229};
	shf.r.wrap.b32 	%r7231, %r7104, %r7103, 8;
	shf.r.wrap.b32 	%r7232, %r7103, %r7104, 8;
	mov.b64 	%rd8004, {%r7232, %r7231};
	xor.b64  	%rd8005, %rd8003, %rd8004;
	shr.u64 	%rd8006, %rd7820, 7;
	xor.b64  	%rd8007, %rd8005, %rd8006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7233,%dummy}, %rd7989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7234}, %rd7989;
	}
	shf.r.wrap.b32 	%r7235, %r7234, %r7233, 19;
	shf.r.wrap.b32 	%r7236, %r7233, %r7234, 19;
	mov.b64 	%rd8008, {%r7236, %r7235};
	shf.l.wrap.b32 	%r7237, %r7233, %r7234, 3;
	shf.l.wrap.b32 	%r7238, %r7234, %r7233, 3;
	mov.b64 	%rd8009, {%r7238, %r7237};
	xor.b64  	%rd8010, %rd8008, %rd8009;
	shr.u64 	%rd8011, %rd7989, 6;
	xor.b64  	%rd8012, %rd8010, %rd8011;
	add.s64 	%rd8013, %rd8007, %rd7807;
	add.s64 	%rd8014, %rd8013, %rd7924;
	add.s64 	%rd8015, %rd8014, %rd8012;
	shf.r.wrap.b32 	%r7239, %r7114, %r7113, 1;
	shf.r.wrap.b32 	%r7240, %r7113, %r7114, 1;
	mov.b64 	%rd8016, {%r7240, %r7239};
	shf.r.wrap.b32 	%r7241, %r7114, %r7113, 8;
	shf.r.wrap.b32 	%r7242, %r7113, %r7114, 8;
	mov.b64 	%rd8017, {%r7242, %r7241};
	xor.b64  	%rd8018, %rd8016, %rd8017;
	shr.u64 	%rd8019, %rd7833, 7;
	xor.b64  	%rd8020, %rd8018, %rd8019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7243,%dummy}, %rd8002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7244}, %rd8002;
	}
	shf.r.wrap.b32 	%r7245, %r7244, %r7243, 19;
	shf.r.wrap.b32 	%r7246, %r7243, %r7244, 19;
	mov.b64 	%rd8021, {%r7246, %r7245};
	shf.l.wrap.b32 	%r7247, %r7243, %r7244, 3;
	shf.l.wrap.b32 	%r7248, %r7244, %r7243, 3;
	mov.b64 	%rd8022, {%r7248, %r7247};
	xor.b64  	%rd8023, %rd8021, %rd8022;
	shr.u64 	%rd8024, %rd8002, 6;
	xor.b64  	%rd8025, %rd8023, %rd8024;
	add.s64 	%rd8026, %rd8020, %rd7820;
	add.s64 	%rd8027, %rd8026, %rd7937;
	add.s64 	%rd8028, %rd8027, %rd8025;
	shf.r.wrap.b32 	%r7249, %r7124, %r7123, 1;
	shf.r.wrap.b32 	%r7250, %r7123, %r7124, 1;
	mov.b64 	%rd8029, {%r7250, %r7249};
	shf.r.wrap.b32 	%r7251, %r7124, %r7123, 8;
	shf.r.wrap.b32 	%r7252, %r7123, %r7124, 8;
	mov.b64 	%rd8030, {%r7252, %r7251};
	xor.b64  	%rd8031, %rd8029, %rd8030;
	shr.u64 	%rd8032, %rd7846, 7;
	xor.b64  	%rd8033, %rd8031, %rd8032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7253,%dummy}, %rd8015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7254}, %rd8015;
	}
	shf.r.wrap.b32 	%r7255, %r7254, %r7253, 19;
	shf.r.wrap.b32 	%r7256, %r7253, %r7254, 19;
	mov.b64 	%rd8034, {%r7256, %r7255};
	shf.l.wrap.b32 	%r7257, %r7253, %r7254, 3;
	shf.l.wrap.b32 	%r7258, %r7254, %r7253, 3;
	mov.b64 	%rd8035, {%r7258, %r7257};
	xor.b64  	%rd8036, %rd8034, %rd8035;
	shr.u64 	%rd8037, %rd8015, 6;
	xor.b64  	%rd8038, %rd8036, %rd8037;
	add.s64 	%rd8039, %rd8033, %rd7833;
	add.s64 	%rd8040, %rd8039, %rd7950;
	add.s64 	%rd8041, %rd8040, %rd8038;
	shf.r.wrap.b32 	%r7259, %r7134, %r7133, 1;
	shf.r.wrap.b32 	%r7260, %r7133, %r7134, 1;
	mov.b64 	%rd8042, {%r7260, %r7259};
	shf.r.wrap.b32 	%r7261, %r7134, %r7133, 8;
	shf.r.wrap.b32 	%r7262, %r7133, %r7134, 8;
	mov.b64 	%rd8043, {%r7262, %r7261};
	xor.b64  	%rd8044, %rd8042, %rd8043;
	shr.u64 	%rd8045, %rd7859, 7;
	xor.b64  	%rd8046, %rd8044, %rd8045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7263,%dummy}, %rd8028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7264}, %rd8028;
	}
	shf.r.wrap.b32 	%r7265, %r7264, %r7263, 19;
	shf.r.wrap.b32 	%r7266, %r7263, %r7264, 19;
	mov.b64 	%rd8047, {%r7266, %r7265};
	shf.l.wrap.b32 	%r7267, %r7263, %r7264, 3;
	shf.l.wrap.b32 	%r7268, %r7264, %r7263, 3;
	mov.b64 	%rd8048, {%r7268, %r7267};
	xor.b64  	%rd8049, %rd8047, %rd8048;
	shr.u64 	%rd8050, %rd8028, 6;
	xor.b64  	%rd8051, %rd8049, %rd8050;
	add.s64 	%rd8052, %rd8046, %rd7846;
	add.s64 	%rd8053, %rd8052, %rd7963;
	add.s64 	%rd8054, %rd8053, %rd8051;
	shf.r.wrap.b32 	%r7269, %r7144, %r7143, 1;
	shf.r.wrap.b32 	%r7270, %r7143, %r7144, 1;
	mov.b64 	%rd8055, {%r7270, %r7269};
	shf.r.wrap.b32 	%r7271, %r7144, %r7143, 8;
	shf.r.wrap.b32 	%r7272, %r7143, %r7144, 8;
	mov.b64 	%rd8056, {%r7272, %r7271};
	xor.b64  	%rd8057, %rd8055, %rd8056;
	shr.u64 	%rd8058, %rd7872, 7;
	xor.b64  	%rd8059, %rd8057, %rd8058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7273,%dummy}, %rd8041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7274}, %rd8041;
	}
	shf.r.wrap.b32 	%r7275, %r7274, %r7273, 19;
	shf.r.wrap.b32 	%r7276, %r7273, %r7274, 19;
	mov.b64 	%rd8060, {%r7276, %r7275};
	shf.l.wrap.b32 	%r7277, %r7273, %r7274, 3;
	shf.l.wrap.b32 	%r7278, %r7274, %r7273, 3;
	mov.b64 	%rd8061, {%r7278, %r7277};
	xor.b64  	%rd8062, %rd8060, %rd8061;
	shr.u64 	%rd8063, %rd8041, 6;
	xor.b64  	%rd8064, %rd8062, %rd8063;
	add.s64 	%rd8065, %rd8059, %rd7859;
	add.s64 	%rd8066, %rd8065, %rd7976;
	add.s64 	%rd8067, %rd8066, %rd8064;
	shf.r.wrap.b32 	%r7279, %r7154, %r7153, 1;
	shf.r.wrap.b32 	%r7280, %r7153, %r7154, 1;
	mov.b64 	%rd8068, {%r7280, %r7279};
	shf.r.wrap.b32 	%r7281, %r7154, %r7153, 8;
	shf.r.wrap.b32 	%r7282, %r7153, %r7154, 8;
	mov.b64 	%rd8069, {%r7282, %r7281};
	xor.b64  	%rd8070, %rd8068, %rd8069;
	shr.u64 	%rd8071, %rd7885, 7;
	xor.b64  	%rd8072, %rd8070, %rd8071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7283,%dummy}, %rd8054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7284}, %rd8054;
	}
	shf.r.wrap.b32 	%r7285, %r7284, %r7283, 19;
	shf.r.wrap.b32 	%r7286, %r7283, %r7284, 19;
	mov.b64 	%rd8073, {%r7286, %r7285};
	shf.l.wrap.b32 	%r7287, %r7283, %r7284, 3;
	shf.l.wrap.b32 	%r7288, %r7284, %r7283, 3;
	mov.b64 	%rd8074, {%r7288, %r7287};
	xor.b64  	%rd8075, %rd8073, %rd8074;
	shr.u64 	%rd8076, %rd8054, 6;
	xor.b64  	%rd8077, %rd8075, %rd8076;
	add.s64 	%rd8078, %rd8072, %rd7872;
	add.s64 	%rd8079, %rd8078, %rd7989;
	add.s64 	%rd8080, %rd8079, %rd8077;
	shf.r.wrap.b32 	%r7289, %r7164, %r7163, 1;
	shf.r.wrap.b32 	%r7290, %r7163, %r7164, 1;
	mov.b64 	%rd8081, {%r7290, %r7289};
	shf.r.wrap.b32 	%r7291, %r7164, %r7163, 8;
	shf.r.wrap.b32 	%r7292, %r7163, %r7164, 8;
	mov.b64 	%rd8082, {%r7292, %r7291};
	xor.b64  	%rd8083, %rd8081, %rd8082;
	shr.u64 	%rd8084, %rd7898, 7;
	xor.b64  	%rd8085, %rd8083, %rd8084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7293,%dummy}, %rd8067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7294}, %rd8067;
	}
	shf.r.wrap.b32 	%r7295, %r7294, %r7293, 19;
	shf.r.wrap.b32 	%r7296, %r7293, %r7294, 19;
	mov.b64 	%rd8086, {%r7296, %r7295};
	shf.l.wrap.b32 	%r7297, %r7293, %r7294, 3;
	shf.l.wrap.b32 	%r7298, %r7294, %r7293, 3;
	mov.b64 	%rd8087, {%r7298, %r7297};
	xor.b64  	%rd8088, %rd8086, %rd8087;
	shr.u64 	%rd8089, %rd8067, 6;
	xor.b64  	%rd8090, %rd8088, %rd8089;
	add.s64 	%rd8091, %rd8085, %rd7885;
	add.s64 	%rd8092, %rd8091, %rd8002;
	add.s64 	%rd8093, %rd8092, %rd8090;
	shf.r.wrap.b32 	%r7299, %r7174, %r7173, 1;
	shf.r.wrap.b32 	%r7300, %r7173, %r7174, 1;
	mov.b64 	%rd8094, {%r7300, %r7299};
	shf.r.wrap.b32 	%r7301, %r7174, %r7173, 8;
	shf.r.wrap.b32 	%r7302, %r7173, %r7174, 8;
	mov.b64 	%rd8095, {%r7302, %r7301};
	xor.b64  	%rd8096, %rd8094, %rd8095;
	shr.u64 	%rd8097, %rd7911, 7;
	xor.b64  	%rd8098, %rd8096, %rd8097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7303,%dummy}, %rd8080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7304}, %rd8080;
	}
	shf.r.wrap.b32 	%r7305, %r7304, %r7303, 19;
	shf.r.wrap.b32 	%r7306, %r7303, %r7304, 19;
	mov.b64 	%rd8099, {%r7306, %r7305};
	shf.l.wrap.b32 	%r7307, %r7303, %r7304, 3;
	shf.l.wrap.b32 	%r7308, %r7304, %r7303, 3;
	mov.b64 	%rd8100, {%r7308, %r7307};
	xor.b64  	%rd8101, %rd8099, %rd8100;
	shr.u64 	%rd8102, %rd8080, 6;
	xor.b64  	%rd8103, %rd8101, %rd8102;
	add.s64 	%rd8104, %rd8098, %rd7898;
	add.s64 	%rd8105, %rd8104, %rd8015;
	add.s64 	%rd8106, %rd8105, %rd8103;
	shf.r.wrap.b32 	%r7309, %r7184, %r7183, 1;
	shf.r.wrap.b32 	%r7310, %r7183, %r7184, 1;
	mov.b64 	%rd8107, {%r7310, %r7309};
	shf.r.wrap.b32 	%r7311, %r7184, %r7183, 8;
	shf.r.wrap.b32 	%r7312, %r7183, %r7184, 8;
	mov.b64 	%rd8108, {%r7312, %r7311};
	xor.b64  	%rd8109, %rd8107, %rd8108;
	shr.u64 	%rd8110, %rd7924, 7;
	xor.b64  	%rd8111, %rd8109, %rd8110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7313,%dummy}, %rd8093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7314}, %rd8093;
	}
	shf.r.wrap.b32 	%r7315, %r7314, %r7313, 19;
	shf.r.wrap.b32 	%r7316, %r7313, %r7314, 19;
	mov.b64 	%rd8112, {%r7316, %r7315};
	shf.l.wrap.b32 	%r7317, %r7313, %r7314, 3;
	shf.l.wrap.b32 	%r7318, %r7314, %r7313, 3;
	mov.b64 	%rd8113, {%r7318, %r7317};
	xor.b64  	%rd8114, %rd8112, %rd8113;
	shr.u64 	%rd8115, %rd8093, 6;
	xor.b64  	%rd8116, %rd8114, %rd8115;
	add.s64 	%rd8117, %rd8111, %rd7911;
	add.s64 	%rd8118, %rd8117, %rd8028;
	add.s64 	%rd8119, %rd8118, %rd8116;
	shf.r.wrap.b32 	%r7319, %r7194, %r7193, 1;
	shf.r.wrap.b32 	%r7320, %r7193, %r7194, 1;
	mov.b64 	%rd8120, {%r7320, %r7319};
	shf.r.wrap.b32 	%r7321, %r7194, %r7193, 8;
	shf.r.wrap.b32 	%r7322, %r7193, %r7194, 8;
	mov.b64 	%rd8121, {%r7322, %r7321};
	xor.b64  	%rd8122, %rd8120, %rd8121;
	shr.u64 	%rd8123, %rd7937, 7;
	xor.b64  	%rd8124, %rd8122, %rd8123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7323,%dummy}, %rd8106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7324}, %rd8106;
	}
	shf.r.wrap.b32 	%r7325, %r7324, %r7323, 19;
	shf.r.wrap.b32 	%r7326, %r7323, %r7324, 19;
	mov.b64 	%rd8125, {%r7326, %r7325};
	shf.l.wrap.b32 	%r7327, %r7323, %r7324, 3;
	shf.l.wrap.b32 	%r7328, %r7324, %r7323, 3;
	mov.b64 	%rd8126, {%r7328, %r7327};
	xor.b64  	%rd8127, %rd8125, %rd8126;
	shr.u64 	%rd8128, %rd8106, 6;
	xor.b64  	%rd8129, %rd8127, %rd8128;
	add.s64 	%rd8130, %rd8124, %rd7924;
	add.s64 	%rd8131, %rd8130, %rd8041;
	add.s64 	%rd8132, %rd8131, %rd8129;
	shf.r.wrap.b32 	%r7329, %r7204, %r7203, 1;
	shf.r.wrap.b32 	%r7330, %r7203, %r7204, 1;
	mov.b64 	%rd8133, {%r7330, %r7329};
	shf.r.wrap.b32 	%r7331, %r7204, %r7203, 8;
	shf.r.wrap.b32 	%r7332, %r7203, %r7204, 8;
	mov.b64 	%rd8134, {%r7332, %r7331};
	xor.b64  	%rd8135, %rd8133, %rd8134;
	shr.u64 	%rd8136, %rd7950, 7;
	xor.b64  	%rd8137, %rd8135, %rd8136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7333,%dummy}, %rd8119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7334}, %rd8119;
	}
	shf.r.wrap.b32 	%r7335, %r7334, %r7333, 19;
	shf.r.wrap.b32 	%r7336, %r7333, %r7334, 19;
	mov.b64 	%rd8138, {%r7336, %r7335};
	shf.l.wrap.b32 	%r7337, %r7333, %r7334, 3;
	shf.l.wrap.b32 	%r7338, %r7334, %r7333, 3;
	mov.b64 	%rd8139, {%r7338, %r7337};
	xor.b64  	%rd8140, %rd8138, %rd8139;
	shr.u64 	%rd8141, %rd8119, 6;
	xor.b64  	%rd8142, %rd8140, %rd8141;
	add.s64 	%rd8143, %rd8137, %rd7937;
	add.s64 	%rd8144, %rd8143, %rd8054;
	add.s64 	%rd8145, %rd8144, %rd8142;
	shf.r.wrap.b32 	%r7339, %r7214, %r7213, 1;
	shf.r.wrap.b32 	%r7340, %r7213, %r7214, 1;
	mov.b64 	%rd8146, {%r7340, %r7339};
	shf.r.wrap.b32 	%r7341, %r7214, %r7213, 8;
	shf.r.wrap.b32 	%r7342, %r7213, %r7214, 8;
	mov.b64 	%rd8147, {%r7342, %r7341};
	xor.b64  	%rd8148, %rd8146, %rd8147;
	shr.u64 	%rd8149, %rd7963, 7;
	xor.b64  	%rd8150, %rd8148, %rd8149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7343,%dummy}, %rd8132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7344}, %rd8132;
	}
	shf.r.wrap.b32 	%r7345, %r7344, %r7343, 19;
	shf.r.wrap.b32 	%r7346, %r7343, %r7344, 19;
	mov.b64 	%rd8151, {%r7346, %r7345};
	shf.l.wrap.b32 	%r7347, %r7343, %r7344, 3;
	shf.l.wrap.b32 	%r7348, %r7344, %r7343, 3;
	mov.b64 	%rd8152, {%r7348, %r7347};
	xor.b64  	%rd8153, %rd8151, %rd8152;
	shr.u64 	%rd8154, %rd8132, 6;
	xor.b64  	%rd8155, %rd8153, %rd8154;
	add.s64 	%rd8156, %rd8150, %rd7950;
	add.s64 	%rd8157, %rd8156, %rd8067;
	add.s64 	%rd8158, %rd8157, %rd8155;
	shf.r.wrap.b32 	%r7349, %r7224, %r7223, 1;
	shf.r.wrap.b32 	%r7350, %r7223, %r7224, 1;
	mov.b64 	%rd8159, {%r7350, %r7349};
	shf.r.wrap.b32 	%r7351, %r7224, %r7223, 8;
	shf.r.wrap.b32 	%r7352, %r7223, %r7224, 8;
	mov.b64 	%rd8160, {%r7352, %r7351};
	xor.b64  	%rd8161, %rd8159, %rd8160;
	shr.u64 	%rd8162, %rd7976, 7;
	xor.b64  	%rd8163, %rd8161, %rd8162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7353,%dummy}, %rd8145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7354}, %rd8145;
	}
	shf.r.wrap.b32 	%r7355, %r7354, %r7353, 19;
	shf.r.wrap.b32 	%r7356, %r7353, %r7354, 19;
	mov.b64 	%rd8164, {%r7356, %r7355};
	shf.l.wrap.b32 	%r7357, %r7353, %r7354, 3;
	shf.l.wrap.b32 	%r7358, %r7354, %r7353, 3;
	mov.b64 	%rd8165, {%r7358, %r7357};
	xor.b64  	%rd8166, %rd8164, %rd8165;
	shr.u64 	%rd8167, %rd8145, 6;
	xor.b64  	%rd8168, %rd8166, %rd8167;
	add.s64 	%rd8169, %rd8163, %rd7963;
	add.s64 	%rd8170, %rd8169, %rd8080;
	add.s64 	%rd8171, %rd8170, %rd8168;
	shf.r.wrap.b32 	%r7359, %r7234, %r7233, 1;
	shf.r.wrap.b32 	%r7360, %r7233, %r7234, 1;
	mov.b64 	%rd8172, {%r7360, %r7359};
	shf.r.wrap.b32 	%r7361, %r7234, %r7233, 8;
	shf.r.wrap.b32 	%r7362, %r7233, %r7234, 8;
	mov.b64 	%rd8173, {%r7362, %r7361};
	xor.b64  	%rd8174, %rd8172, %rd8173;
	shr.u64 	%rd8175, %rd7989, 7;
	xor.b64  	%rd8176, %rd8174, %rd8175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7363,%dummy}, %rd8158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7364}, %rd8158;
	}
	shf.r.wrap.b32 	%r7365, %r7364, %r7363, 19;
	shf.r.wrap.b32 	%r7366, %r7363, %r7364, 19;
	mov.b64 	%rd8177, {%r7366, %r7365};
	shf.l.wrap.b32 	%r7367, %r7363, %r7364, 3;
	shf.l.wrap.b32 	%r7368, %r7364, %r7363, 3;
	mov.b64 	%rd8178, {%r7368, %r7367};
	xor.b64  	%rd8179, %rd8177, %rd8178;
	shr.u64 	%rd8180, %rd8158, 6;
	xor.b64  	%rd8181, %rd8179, %rd8180;
	add.s64 	%rd8182, %rd8176, %rd7976;
	add.s64 	%rd8183, %rd8182, %rd8093;
	add.s64 	%rd8184, %rd8183, %rd8181;
	shf.r.wrap.b32 	%r7369, %r7244, %r7243, 1;
	shf.r.wrap.b32 	%r7370, %r7243, %r7244, 1;
	mov.b64 	%rd8185, {%r7370, %r7369};
	shf.r.wrap.b32 	%r7371, %r7244, %r7243, 8;
	shf.r.wrap.b32 	%r7372, %r7243, %r7244, 8;
	mov.b64 	%rd8186, {%r7372, %r7371};
	xor.b64  	%rd8187, %rd8185, %rd8186;
	shr.u64 	%rd8188, %rd8002, 7;
	xor.b64  	%rd8189, %rd8187, %rd8188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7373,%dummy}, %rd8171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7374}, %rd8171;
	}
	shf.r.wrap.b32 	%r7375, %r7374, %r7373, 19;
	shf.r.wrap.b32 	%r7376, %r7373, %r7374, 19;
	mov.b64 	%rd8190, {%r7376, %r7375};
	shf.l.wrap.b32 	%r7377, %r7373, %r7374, 3;
	shf.l.wrap.b32 	%r7378, %r7374, %r7373, 3;
	mov.b64 	%rd8191, {%r7378, %r7377};
	xor.b64  	%rd8192, %rd8190, %rd8191;
	shr.u64 	%rd8193, %rd8171, 6;
	xor.b64  	%rd8194, %rd8192, %rd8193;
	add.s64 	%rd8195, %rd8189, %rd7989;
	add.s64 	%rd8196, %rd8195, %rd8106;
	add.s64 	%rd8197, %rd8196, %rd8194;
	shf.r.wrap.b32 	%r7379, %r7254, %r7253, 1;
	shf.r.wrap.b32 	%r7380, %r7253, %r7254, 1;
	mov.b64 	%rd8198, {%r7380, %r7379};
	shf.r.wrap.b32 	%r7381, %r7254, %r7253, 8;
	shf.r.wrap.b32 	%r7382, %r7253, %r7254, 8;
	mov.b64 	%rd8199, {%r7382, %r7381};
	xor.b64  	%rd8200, %rd8198, %rd8199;
	shr.u64 	%rd8201, %rd8015, 7;
	xor.b64  	%rd8202, %rd8200, %rd8201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7383,%dummy}, %rd8184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7384}, %rd8184;
	}
	shf.r.wrap.b32 	%r7385, %r7384, %r7383, 19;
	shf.r.wrap.b32 	%r7386, %r7383, %r7384, 19;
	mov.b64 	%rd8203, {%r7386, %r7385};
	shf.l.wrap.b32 	%r7387, %r7383, %r7384, 3;
	shf.l.wrap.b32 	%r7388, %r7384, %r7383, 3;
	mov.b64 	%rd8204, {%r7388, %r7387};
	xor.b64  	%rd8205, %rd8203, %rd8204;
	shr.u64 	%rd8206, %rd8184, 6;
	xor.b64  	%rd8207, %rd8205, %rd8206;
	add.s64 	%rd8208, %rd8202, %rd8002;
	add.s64 	%rd8209, %rd8208, %rd8119;
	add.s64 	%rd8210, %rd8209, %rd8207;
	shf.r.wrap.b32 	%r7389, %r7264, %r7263, 1;
	shf.r.wrap.b32 	%r7390, %r7263, %r7264, 1;
	mov.b64 	%rd8211, {%r7390, %r7389};
	shf.r.wrap.b32 	%r7391, %r7264, %r7263, 8;
	shf.r.wrap.b32 	%r7392, %r7263, %r7264, 8;
	mov.b64 	%rd8212, {%r7392, %r7391};
	xor.b64  	%rd8213, %rd8211, %rd8212;
	shr.u64 	%rd8214, %rd8028, 7;
	xor.b64  	%rd8215, %rd8213, %rd8214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7393,%dummy}, %rd8197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7394}, %rd8197;
	}
	shf.r.wrap.b32 	%r7395, %r7394, %r7393, 19;
	shf.r.wrap.b32 	%r7396, %r7393, %r7394, 19;
	mov.b64 	%rd8216, {%r7396, %r7395};
	shf.l.wrap.b32 	%r7397, %r7393, %r7394, 3;
	shf.l.wrap.b32 	%r7398, %r7394, %r7393, 3;
	mov.b64 	%rd8217, {%r7398, %r7397};
	xor.b64  	%rd8218, %rd8216, %rd8217;
	shr.u64 	%rd8219, %rd8197, 6;
	xor.b64  	%rd8220, %rd8218, %rd8219;
	add.s64 	%rd8221, %rd8215, %rd8015;
	add.s64 	%rd8222, %rd8221, %rd8132;
	add.s64 	%rd8223, %rd8222, %rd8220;
	shf.r.wrap.b32 	%r7399, %r7274, %r7273, 1;
	shf.r.wrap.b32 	%r7400, %r7273, %r7274, 1;
	mov.b64 	%rd8224, {%r7400, %r7399};
	shf.r.wrap.b32 	%r7401, %r7274, %r7273, 8;
	shf.r.wrap.b32 	%r7402, %r7273, %r7274, 8;
	mov.b64 	%rd8225, {%r7402, %r7401};
	xor.b64  	%rd8226, %rd8224, %rd8225;
	shr.u64 	%rd8227, %rd8041, 7;
	xor.b64  	%rd8228, %rd8226, %rd8227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7403,%dummy}, %rd8210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7404}, %rd8210;
	}
	shf.r.wrap.b32 	%r7405, %r7404, %r7403, 19;
	shf.r.wrap.b32 	%r7406, %r7403, %r7404, 19;
	mov.b64 	%rd8229, {%r7406, %r7405};
	shf.l.wrap.b32 	%r7407, %r7403, %r7404, 3;
	shf.l.wrap.b32 	%r7408, %r7404, %r7403, 3;
	mov.b64 	%rd8230, {%r7408, %r7407};
	xor.b64  	%rd8231, %rd8229, %rd8230;
	shr.u64 	%rd8232, %rd8210, 6;
	xor.b64  	%rd8233, %rd8231, %rd8232;
	add.s64 	%rd8234, %rd8228, %rd8028;
	add.s64 	%rd8235, %rd8234, %rd8145;
	add.s64 	%rd8236, %rd8235, %rd8233;
	shf.r.wrap.b32 	%r7409, %r7284, %r7283, 1;
	shf.r.wrap.b32 	%r7410, %r7283, %r7284, 1;
	mov.b64 	%rd8237, {%r7410, %r7409};
	shf.r.wrap.b32 	%r7411, %r7284, %r7283, 8;
	shf.r.wrap.b32 	%r7412, %r7283, %r7284, 8;
	mov.b64 	%rd8238, {%r7412, %r7411};
	xor.b64  	%rd8239, %rd8237, %rd8238;
	shr.u64 	%rd8240, %rd8054, 7;
	xor.b64  	%rd8241, %rd8239, %rd8240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7413,%dummy}, %rd8223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7414}, %rd8223;
	}
	shf.r.wrap.b32 	%r7415, %r7414, %r7413, 19;
	shf.r.wrap.b32 	%r7416, %r7413, %r7414, 19;
	mov.b64 	%rd8242, {%r7416, %r7415};
	shf.l.wrap.b32 	%r7417, %r7413, %r7414, 3;
	shf.l.wrap.b32 	%r7418, %r7414, %r7413, 3;
	mov.b64 	%rd8243, {%r7418, %r7417};
	xor.b64  	%rd8244, %rd8242, %rd8243;
	shr.u64 	%rd8245, %rd8223, 6;
	xor.b64  	%rd8246, %rd8244, %rd8245;
	add.s64 	%rd8247, %rd8241, %rd8041;
	add.s64 	%rd8248, %rd8247, %rd8158;
	add.s64 	%rd8249, %rd8248, %rd8246;
	shf.r.wrap.b32 	%r7419, %r7294, %r7293, 1;
	shf.r.wrap.b32 	%r7420, %r7293, %r7294, 1;
	mov.b64 	%rd8250, {%r7420, %r7419};
	shf.r.wrap.b32 	%r7421, %r7294, %r7293, 8;
	shf.r.wrap.b32 	%r7422, %r7293, %r7294, 8;
	mov.b64 	%rd8251, {%r7422, %r7421};
	xor.b64  	%rd8252, %rd8250, %rd8251;
	shr.u64 	%rd8253, %rd8067, 7;
	xor.b64  	%rd8254, %rd8252, %rd8253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7423,%dummy}, %rd8236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7424}, %rd8236;
	}
	shf.r.wrap.b32 	%r7425, %r7424, %r7423, 19;
	shf.r.wrap.b32 	%r7426, %r7423, %r7424, 19;
	mov.b64 	%rd8255, {%r7426, %r7425};
	shf.l.wrap.b32 	%r7427, %r7423, %r7424, 3;
	shf.l.wrap.b32 	%r7428, %r7424, %r7423, 3;
	mov.b64 	%rd8256, {%r7428, %r7427};
	xor.b64  	%rd8257, %rd8255, %rd8256;
	shr.u64 	%rd8258, %rd8236, 6;
	xor.b64  	%rd8259, %rd8257, %rd8258;
	add.s64 	%rd8260, %rd8254, %rd8054;
	add.s64 	%rd8261, %rd8260, %rd8171;
	add.s64 	%rd8262, %rd8261, %rd8259;
	shf.r.wrap.b32 	%r7429, %r7304, %r7303, 1;
	shf.r.wrap.b32 	%r7430, %r7303, %r7304, 1;
	mov.b64 	%rd8263, {%r7430, %r7429};
	shf.r.wrap.b32 	%r7431, %r7304, %r7303, 8;
	shf.r.wrap.b32 	%r7432, %r7303, %r7304, 8;
	mov.b64 	%rd8264, {%r7432, %r7431};
	xor.b64  	%rd8265, %rd8263, %rd8264;
	shr.u64 	%rd8266, %rd8080, 7;
	xor.b64  	%rd8267, %rd8265, %rd8266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7433,%dummy}, %rd8249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7434}, %rd8249;
	}
	shf.r.wrap.b32 	%r7435, %r7434, %r7433, 19;
	shf.r.wrap.b32 	%r7436, %r7433, %r7434, 19;
	mov.b64 	%rd8268, {%r7436, %r7435};
	shf.l.wrap.b32 	%r7437, %r7433, %r7434, 3;
	shf.l.wrap.b32 	%r7438, %r7434, %r7433, 3;
	mov.b64 	%rd8269, {%r7438, %r7437};
	xor.b64  	%rd8270, %rd8268, %rd8269;
	shr.u64 	%rd8271, %rd8249, 6;
	xor.b64  	%rd8272, %rd8270, %rd8271;
	add.s64 	%rd8273, %rd8267, %rd8067;
	add.s64 	%rd8274, %rd8273, %rd8184;
	add.s64 	%rd8275, %rd8274, %rd8272;
	shf.r.wrap.b32 	%r7439, %r7314, %r7313, 1;
	shf.r.wrap.b32 	%r7440, %r7313, %r7314, 1;
	mov.b64 	%rd8276, {%r7440, %r7439};
	shf.r.wrap.b32 	%r7441, %r7314, %r7313, 8;
	shf.r.wrap.b32 	%r7442, %r7313, %r7314, 8;
	mov.b64 	%rd8277, {%r7442, %r7441};
	xor.b64  	%rd8278, %rd8276, %rd8277;
	shr.u64 	%rd8279, %rd8093, 7;
	xor.b64  	%rd8280, %rd8278, %rd8279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7443,%dummy}, %rd8262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7444}, %rd8262;
	}
	shf.r.wrap.b32 	%r7445, %r7444, %r7443, 19;
	shf.r.wrap.b32 	%r7446, %r7443, %r7444, 19;
	mov.b64 	%rd8281, {%r7446, %r7445};
	shf.l.wrap.b32 	%r7447, %r7443, %r7444, 3;
	shf.l.wrap.b32 	%r7448, %r7444, %r7443, 3;
	mov.b64 	%rd8282, {%r7448, %r7447};
	xor.b64  	%rd8283, %rd8281, %rd8282;
	shr.u64 	%rd8284, %rd8262, 6;
	xor.b64  	%rd8285, %rd8283, %rd8284;
	add.s64 	%rd8286, %rd8280, %rd8080;
	add.s64 	%rd8287, %rd8286, %rd8197;
	add.s64 	%rd8288, %rd8287, %rd8285;
	shf.r.wrap.b32 	%r7449, %r7324, %r7323, 1;
	shf.r.wrap.b32 	%r7450, %r7323, %r7324, 1;
	mov.b64 	%rd8289, {%r7450, %r7449};
	shf.r.wrap.b32 	%r7451, %r7324, %r7323, 8;
	shf.r.wrap.b32 	%r7452, %r7323, %r7324, 8;
	mov.b64 	%rd8290, {%r7452, %r7451};
	xor.b64  	%rd8291, %rd8289, %rd8290;
	shr.u64 	%rd8292, %rd8106, 7;
	xor.b64  	%rd8293, %rd8291, %rd8292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7453,%dummy}, %rd8275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7454}, %rd8275;
	}
	shf.r.wrap.b32 	%r7455, %r7454, %r7453, 19;
	shf.r.wrap.b32 	%r7456, %r7453, %r7454, 19;
	mov.b64 	%rd8294, {%r7456, %r7455};
	shf.l.wrap.b32 	%r7457, %r7453, %r7454, 3;
	shf.l.wrap.b32 	%r7458, %r7454, %r7453, 3;
	mov.b64 	%rd8295, {%r7458, %r7457};
	xor.b64  	%rd8296, %rd8294, %rd8295;
	shr.u64 	%rd8297, %rd8275, 6;
	xor.b64  	%rd8298, %rd8296, %rd8297;
	add.s64 	%rd8299, %rd8293, %rd8093;
	add.s64 	%rd8300, %rd8299, %rd8210;
	add.s64 	%rd8301, %rd8300, %rd8298;
	shf.r.wrap.b32 	%r7459, %r7334, %r7333, 1;
	shf.r.wrap.b32 	%r7460, %r7333, %r7334, 1;
	mov.b64 	%rd8302, {%r7460, %r7459};
	shf.r.wrap.b32 	%r7461, %r7334, %r7333, 8;
	shf.r.wrap.b32 	%r7462, %r7333, %r7334, 8;
	mov.b64 	%rd8303, {%r7462, %r7461};
	xor.b64  	%rd8304, %rd8302, %rd8303;
	shr.u64 	%rd8305, %rd8119, 7;
	xor.b64  	%rd8306, %rd8304, %rd8305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7463,%dummy}, %rd8288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7464}, %rd8288;
	}
	shf.r.wrap.b32 	%r7465, %r7464, %r7463, 19;
	shf.r.wrap.b32 	%r7466, %r7463, %r7464, 19;
	mov.b64 	%rd8307, {%r7466, %r7465};
	shf.l.wrap.b32 	%r7467, %r7463, %r7464, 3;
	shf.l.wrap.b32 	%r7468, %r7464, %r7463, 3;
	mov.b64 	%rd8308, {%r7468, %r7467};
	xor.b64  	%rd8309, %rd8307, %rd8308;
	shr.u64 	%rd8310, %rd8288, 6;
	xor.b64  	%rd8311, %rd8309, %rd8310;
	add.s64 	%rd8312, %rd8306, %rd8106;
	add.s64 	%rd8313, %rd8312, %rd8223;
	add.s64 	%rd8314, %rd8313, %rd8311;
	shf.r.wrap.b32 	%r7469, %r7344, %r7343, 1;
	shf.r.wrap.b32 	%r7470, %r7343, %r7344, 1;
	mov.b64 	%rd8315, {%r7470, %r7469};
	shf.r.wrap.b32 	%r7471, %r7344, %r7343, 8;
	shf.r.wrap.b32 	%r7472, %r7343, %r7344, 8;
	mov.b64 	%rd8316, {%r7472, %r7471};
	xor.b64  	%rd8317, %rd8315, %rd8316;
	shr.u64 	%rd8318, %rd8132, 7;
	xor.b64  	%rd8319, %rd8317, %rd8318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7473,%dummy}, %rd8301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7474}, %rd8301;
	}
	shf.r.wrap.b32 	%r7475, %r7474, %r7473, 19;
	shf.r.wrap.b32 	%r7476, %r7473, %r7474, 19;
	mov.b64 	%rd8320, {%r7476, %r7475};
	shf.l.wrap.b32 	%r7477, %r7473, %r7474, 3;
	shf.l.wrap.b32 	%r7478, %r7474, %r7473, 3;
	mov.b64 	%rd8321, {%r7478, %r7477};
	xor.b64  	%rd8322, %rd8320, %rd8321;
	shr.u64 	%rd8323, %rd8301, 6;
	xor.b64  	%rd8324, %rd8322, %rd8323;
	add.s64 	%rd8325, %rd8319, %rd8119;
	add.s64 	%rd8326, %rd8325, %rd8236;
	add.s64 	%rd8327, %rd8326, %rd8324;
	shf.r.wrap.b32 	%r7479, %r7354, %r7353, 1;
	shf.r.wrap.b32 	%r7480, %r7353, %r7354, 1;
	mov.b64 	%rd8328, {%r7480, %r7479};
	shf.r.wrap.b32 	%r7481, %r7354, %r7353, 8;
	shf.r.wrap.b32 	%r7482, %r7353, %r7354, 8;
	mov.b64 	%rd8329, {%r7482, %r7481};
	xor.b64  	%rd8330, %rd8328, %rd8329;
	shr.u64 	%rd8331, %rd8145, 7;
	xor.b64  	%rd8332, %rd8330, %rd8331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7483,%dummy}, %rd8314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7484}, %rd8314;
	}
	shf.r.wrap.b32 	%r7485, %r7484, %r7483, 19;
	shf.r.wrap.b32 	%r7486, %r7483, %r7484, 19;
	mov.b64 	%rd8333, {%r7486, %r7485};
	shf.l.wrap.b32 	%r7487, %r7483, %r7484, 3;
	shf.l.wrap.b32 	%r7488, %r7484, %r7483, 3;
	mov.b64 	%rd8334, {%r7488, %r7487};
	xor.b64  	%rd8335, %rd8333, %rd8334;
	shr.u64 	%rd8336, %rd8314, 6;
	xor.b64  	%rd8337, %rd8335, %rd8336;
	add.s64 	%rd8338, %rd8332, %rd8132;
	add.s64 	%rd8339, %rd8338, %rd8249;
	add.s64 	%rd8340, %rd8339, %rd8337;
	shf.r.wrap.b32 	%r7489, %r7364, %r7363, 1;
	shf.r.wrap.b32 	%r7490, %r7363, %r7364, 1;
	mov.b64 	%rd8341, {%r7490, %r7489};
	shf.r.wrap.b32 	%r7491, %r7364, %r7363, 8;
	shf.r.wrap.b32 	%r7492, %r7363, %r7364, 8;
	mov.b64 	%rd8342, {%r7492, %r7491};
	xor.b64  	%rd8343, %rd8341, %rd8342;
	shr.u64 	%rd8344, %rd8158, 7;
	xor.b64  	%rd8345, %rd8343, %rd8344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7493,%dummy}, %rd8327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7494}, %rd8327;
	}
	shf.r.wrap.b32 	%r7495, %r7494, %r7493, 19;
	shf.r.wrap.b32 	%r7496, %r7493, %r7494, 19;
	mov.b64 	%rd8346, {%r7496, %r7495};
	shf.l.wrap.b32 	%r7497, %r7493, %r7494, 3;
	shf.l.wrap.b32 	%r7498, %r7494, %r7493, 3;
	mov.b64 	%rd8347, {%r7498, %r7497};
	xor.b64  	%rd8348, %rd8346, %rd8347;
	shr.u64 	%rd8349, %rd8327, 6;
	xor.b64  	%rd8350, %rd8348, %rd8349;
	add.s64 	%rd8351, %rd8345, %rd8145;
	add.s64 	%rd8352, %rd8351, %rd8262;
	add.s64 	%rd8353, %rd8352, %rd8350;
	shf.r.wrap.b32 	%r7499, %r7374, %r7373, 1;
	shf.r.wrap.b32 	%r7500, %r7373, %r7374, 1;
	mov.b64 	%rd8354, {%r7500, %r7499};
	shf.r.wrap.b32 	%r7501, %r7374, %r7373, 8;
	shf.r.wrap.b32 	%r7502, %r7373, %r7374, 8;
	mov.b64 	%rd8355, {%r7502, %r7501};
	xor.b64  	%rd8356, %rd8354, %rd8355;
	shr.u64 	%rd8357, %rd8171, 7;
	xor.b64  	%rd8358, %rd8356, %rd8357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7503,%dummy}, %rd8340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7504}, %rd8340;
	}
	shf.r.wrap.b32 	%r7505, %r7504, %r7503, 19;
	shf.r.wrap.b32 	%r7506, %r7503, %r7504, 19;
	mov.b64 	%rd8359, {%r7506, %r7505};
	shf.l.wrap.b32 	%r7507, %r7503, %r7504, 3;
	shf.l.wrap.b32 	%r7508, %r7504, %r7503, 3;
	mov.b64 	%rd8360, {%r7508, %r7507};
	xor.b64  	%rd8361, %rd8359, %rd8360;
	shr.u64 	%rd8362, %rd8340, 6;
	xor.b64  	%rd8363, %rd8361, %rd8362;
	add.s64 	%rd8364, %rd8358, %rd8158;
	add.s64 	%rd8365, %rd8364, %rd8275;
	add.s64 	%rd8366, %rd8365, %rd8363;
	shf.r.wrap.b32 	%r7509, %r7384, %r7383, 1;
	shf.r.wrap.b32 	%r7510, %r7383, %r7384, 1;
	mov.b64 	%rd8367, {%r7510, %r7509};
	shf.r.wrap.b32 	%r7511, %r7384, %r7383, 8;
	shf.r.wrap.b32 	%r7512, %r7383, %r7384, 8;
	mov.b64 	%rd8368, {%r7512, %r7511};
	xor.b64  	%rd8369, %rd8367, %rd8368;
	shr.u64 	%rd8370, %rd8184, 7;
	xor.b64  	%rd8371, %rd8369, %rd8370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7513,%dummy}, %rd8353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7514}, %rd8353;
	}
	shf.r.wrap.b32 	%r7515, %r7514, %r7513, 19;
	shf.r.wrap.b32 	%r7516, %r7513, %r7514, 19;
	mov.b64 	%rd8372, {%r7516, %r7515};
	shf.l.wrap.b32 	%r7517, %r7513, %r7514, 3;
	shf.l.wrap.b32 	%r7518, %r7514, %r7513, 3;
	mov.b64 	%rd8373, {%r7518, %r7517};
	xor.b64  	%rd8374, %rd8372, %rd8373;
	shr.u64 	%rd8375, %rd8353, 6;
	xor.b64  	%rd8376, %rd8374, %rd8375;
	add.s64 	%rd8377, %rd8371, %rd8171;
	add.s64 	%rd8378, %rd8377, %rd8288;
	add.s64 	%rd8379, %rd8378, %rd8376;
	shf.r.wrap.b32 	%r7519, %r7394, %r7393, 1;
	shf.r.wrap.b32 	%r7520, %r7393, %r7394, 1;
	mov.b64 	%rd8380, {%r7520, %r7519};
	shf.r.wrap.b32 	%r7521, %r7394, %r7393, 8;
	shf.r.wrap.b32 	%r7522, %r7393, %r7394, 8;
	mov.b64 	%rd8381, {%r7522, %r7521};
	xor.b64  	%rd8382, %rd8380, %rd8381;
	shr.u64 	%rd8383, %rd8197, 7;
	xor.b64  	%rd8384, %rd8382, %rd8383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7523,%dummy}, %rd8366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7524}, %rd8366;
	}
	shf.r.wrap.b32 	%r7525, %r7524, %r7523, 19;
	shf.r.wrap.b32 	%r7526, %r7523, %r7524, 19;
	mov.b64 	%rd8385, {%r7526, %r7525};
	shf.l.wrap.b32 	%r7527, %r7523, %r7524, 3;
	shf.l.wrap.b32 	%r7528, %r7524, %r7523, 3;
	mov.b64 	%rd8386, {%r7528, %r7527};
	xor.b64  	%rd8387, %rd8385, %rd8386;
	shr.u64 	%rd8388, %rd8366, 6;
	xor.b64  	%rd8389, %rd8387, %rd8388;
	add.s64 	%rd8390, %rd8384, %rd8184;
	add.s64 	%rd8391, %rd8390, %rd8301;
	add.s64 	%rd8392, %rd8391, %rd8389;
	shf.r.wrap.b32 	%r7529, %r7404, %r7403, 1;
	shf.r.wrap.b32 	%r7530, %r7403, %r7404, 1;
	mov.b64 	%rd8393, {%r7530, %r7529};
	shf.r.wrap.b32 	%r7531, %r7404, %r7403, 8;
	shf.r.wrap.b32 	%r7532, %r7403, %r7404, 8;
	mov.b64 	%rd8394, {%r7532, %r7531};
	xor.b64  	%rd8395, %rd8393, %rd8394;
	shr.u64 	%rd8396, %rd8210, 7;
	xor.b64  	%rd8397, %rd8395, %rd8396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7533,%dummy}, %rd8379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7534}, %rd8379;
	}
	shf.r.wrap.b32 	%r7535, %r7534, %r7533, 19;
	shf.r.wrap.b32 	%r7536, %r7533, %r7534, 19;
	mov.b64 	%rd8398, {%r7536, %r7535};
	shf.l.wrap.b32 	%r7537, %r7533, %r7534, 3;
	shf.l.wrap.b32 	%r7538, %r7534, %r7533, 3;
	mov.b64 	%rd8399, {%r7538, %r7537};
	xor.b64  	%rd8400, %rd8398, %rd8399;
	shr.u64 	%rd8401, %rd8379, 6;
	xor.b64  	%rd8402, %rd8400, %rd8401;
	add.s64 	%rd8403, %rd8397, %rd8197;
	add.s64 	%rd8404, %rd8403, %rd8314;
	add.s64 	%rd8405, %rd8404, %rd8402;
	shf.r.wrap.b32 	%r7539, %r7414, %r7413, 1;
	shf.r.wrap.b32 	%r7540, %r7413, %r7414, 1;
	mov.b64 	%rd8406, {%r7540, %r7539};
	shf.r.wrap.b32 	%r7541, %r7414, %r7413, 8;
	shf.r.wrap.b32 	%r7542, %r7413, %r7414, 8;
	mov.b64 	%rd8407, {%r7542, %r7541};
	xor.b64  	%rd8408, %rd8406, %rd8407;
	shr.u64 	%rd8409, %rd8223, 7;
	xor.b64  	%rd8410, %rd8408, %rd8409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7543,%dummy}, %rd8392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7544}, %rd8392;
	}
	shf.r.wrap.b32 	%r7545, %r7544, %r7543, 19;
	shf.r.wrap.b32 	%r7546, %r7543, %r7544, 19;
	mov.b64 	%rd8411, {%r7546, %r7545};
	shf.l.wrap.b32 	%r7547, %r7543, %r7544, 3;
	shf.l.wrap.b32 	%r7548, %r7544, %r7543, 3;
	mov.b64 	%rd8412, {%r7548, %r7547};
	xor.b64  	%rd8413, %rd8411, %rd8412;
	shr.u64 	%rd8414, %rd8392, 6;
	xor.b64  	%rd8415, %rd8413, %rd8414;
	add.s64 	%rd8416, %rd8410, %rd8210;
	add.s64 	%rd8417, %rd8416, %rd8327;
	add.s64 	%rd8418, %rd8417, %rd8415;
	shf.r.wrap.b32 	%r7549, %r7424, %r7423, 1;
	shf.r.wrap.b32 	%r7550, %r7423, %r7424, 1;
	mov.b64 	%rd8419, {%r7550, %r7549};
	shf.r.wrap.b32 	%r7551, %r7424, %r7423, 8;
	shf.r.wrap.b32 	%r7552, %r7423, %r7424, 8;
	mov.b64 	%rd8420, {%r7552, %r7551};
	xor.b64  	%rd8421, %rd8419, %rd8420;
	shr.u64 	%rd8422, %rd8236, 7;
	xor.b64  	%rd8423, %rd8421, %rd8422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7553,%dummy}, %rd8405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7554}, %rd8405;
	}
	shf.r.wrap.b32 	%r7555, %r7554, %r7553, 19;
	shf.r.wrap.b32 	%r7556, %r7553, %r7554, 19;
	mov.b64 	%rd8424, {%r7556, %r7555};
	shf.l.wrap.b32 	%r7557, %r7553, %r7554, 3;
	shf.l.wrap.b32 	%r7558, %r7554, %r7553, 3;
	mov.b64 	%rd8425, {%r7558, %r7557};
	xor.b64  	%rd8426, %rd8424, %rd8425;
	shr.u64 	%rd8427, %rd8405, 6;
	xor.b64  	%rd8428, %rd8426, %rd8427;
	add.s64 	%rd8429, %rd8423, %rd8223;
	add.s64 	%rd8430, %rd8429, %rd8340;
	add.s64 	%rd8431, %rd8430, %rd8428;
	add.s64 	%rd8432, %rd40, %rd7299;
	add.s64 	%rd8433, %rd8432, -6534734903238641935;
	add.s64 	%rd8434, %rd120, %rd8432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7559,%dummy}, %rd8433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7560}, %rd8433;
	}
	shf.r.wrap.b32 	%r7561, %r7560, %r7559, 14;
	shf.r.wrap.b32 	%r7562, %r7559, %r7560, 14;
	mov.b64 	%rd8435, {%r7562, %r7561};
	shf.r.wrap.b32 	%r7563, %r7560, %r7559, 18;
	shf.r.wrap.b32 	%r7564, %r7559, %r7560, 18;
	mov.b64 	%rd8436, {%r7564, %r7563};
	xor.b64  	%rd8437, %rd8435, %rd8436;
	shf.l.wrap.b32 	%r7565, %r7559, %r7560, 23;
	shf.l.wrap.b32 	%r7566, %r7560, %r7559, 23;
	mov.b64 	%rd8438, {%r7566, %r7565};
	xor.b64  	%rd8439, %rd8437, %rd8438;
	and.b64  	%rd8440, %rd8433, 5840696475078001361;
	mov.u64 	%rd8441, 6534734903238641934;
	sub.s64 	%rd8442, %rd8441, %rd8432;
	and.b64  	%rd8443, %rd8442, -7276294671716946913;
	or.b64  	%rd8444, %rd8440, %rd8443;
	add.s64 	%rd8445, %rd8444, %rd8439;
	add.s64 	%rd8446, %rd8445, %rd41;
	add.s64 	%rd8447, %rd8446, %rd7319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7567,%dummy}, %rd8434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7568}, %rd8434;
	}
	shf.r.wrap.b32 	%r7569, %r7568, %r7567, 28;
	shf.r.wrap.b32 	%r7570, %r7567, %r7568, 28;
	mov.b64 	%rd8448, {%r7570, %r7569};
	shf.l.wrap.b32 	%r7571, %r7567, %r7568, 30;
	shf.l.wrap.b32 	%r7572, %r7568, %r7567, 30;
	mov.b64 	%rd8449, {%r7572, %r7571};
	xor.b64  	%rd8450, %rd8448, %rd8449;
	shf.l.wrap.b32 	%r7573, %r7567, %r7568, 25;
	shf.l.wrap.b32 	%r7574, %r7568, %r7567, 25;
	mov.b64 	%rd8451, {%r7574, %r7573};
	xor.b64  	%rd8452, %rd8450, %rd8451;
	and.b64  	%rd8453, %rd8434, -3355664534840381901;
	or.b64  	%rd8454, %rd8453, 3026882967131160840;
	add.s64 	%rd8455, %rd8452, %rd8454;
	add.s64 	%rd8456, %rd8455, %rd8447;
	add.s64 	%rd8457, %rd8447, 6625583534739731862;
	add.s64 	%rd8458, %rd8456, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7575,%dummy}, %rd8457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7576}, %rd8457;
	}
	shf.r.wrap.b32 	%r7577, %r7576, %r7575, 14;
	shf.r.wrap.b32 	%r7578, %r7575, %r7576, 14;
	mov.b64 	%rd8459, {%r7578, %r7577};
	shf.r.wrap.b32 	%r7579, %r7576, %r7575, 18;
	shf.r.wrap.b32 	%r7580, %r7575, %r7576, 18;
	mov.b64 	%rd8460, {%r7580, %r7579};
	xor.b64  	%rd8461, %rd8459, %rd8460;
	shf.l.wrap.b32 	%r7581, %r7575, %r7576, 23;
	shf.l.wrap.b32 	%r7582, %r7576, %r7575, 23;
	mov.b64 	%rd8462, {%r7582, %r7581};
	xor.b64  	%rd8463, %rd8461, %rd8462;
	and.b64  	%rd8464, %rd8457, %rd8433;
	mov.u64 	%rd8465, 2597788502115043945;
	sub.s64 	%rd8466, %rd8465, %rd8447;
	and.b64  	%rd8467, %rd8466, 5840696475078001361;
	or.b64  	%rd8468, %rd8464, %rd8467;
	add.s64 	%rd8469, %rd8468, %rd8463;
	add.s64 	%rd8470, %rd8469, %rd42;
	add.s64 	%rd8471, %rd8470, %rd7339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7583,%dummy}, %rd8458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7584}, %rd8458;
	}
	shf.r.wrap.b32 	%r7585, %r7584, %r7583, 28;
	shf.r.wrap.b32 	%r7586, %r7583, %r7584, 28;
	mov.b64 	%rd8472, {%r7586, %r7585};
	shf.l.wrap.b32 	%r7587, %r7583, %r7584, 30;
	shf.l.wrap.b32 	%r7588, %r7584, %r7583, 30;
	mov.b64 	%rd8473, {%r7588, %r7587};
	xor.b64  	%rd8474, %rd8472, %rd8473;
	shf.l.wrap.b32 	%r7589, %r7583, %r7584, 25;
	shf.l.wrap.b32 	%r7590, %r7584, %r7583, 25;
	mov.b64 	%rd8475, {%r7590, %r7589};
	xor.b64  	%rd8476, %rd8474, %rd8475;
	xor.b64  	%rd8477, %rd8434, 7640891576956012808;
	and.b64  	%rd8478, %rd8458, %rd8477;
	and.b64  	%rd8479, %rd8434, 7640891576956012808;
	xor.b64  	%rd8480, %rd8478, %rd8479;
	add.s64 	%rd8481, %rd8476, %rd8480;
	add.s64 	%rd8482, %rd8481, %rd8471;
	add.s64 	%rd8483, %rd8471, 6227659224458531674;
	add.s64 	%rd8484, %rd8482, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7591,%dummy}, %rd8483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7592}, %rd8483;
	}
	shf.r.wrap.b32 	%r7593, %r7592, %r7591, 14;
	shf.r.wrap.b32 	%r7594, %r7591, %r7592, 14;
	mov.b64 	%rd8485, {%r7594, %r7593};
	shf.r.wrap.b32 	%r7595, %r7592, %r7591, 18;
	shf.r.wrap.b32 	%r7596, %r7591, %r7592, 18;
	mov.b64 	%rd8486, {%r7596, %r7595};
	xor.b64  	%rd8487, %rd8485, %rd8486;
	shf.l.wrap.b32 	%r7597, %r7591, %r7592, 23;
	shf.l.wrap.b32 	%r7598, %r7592, %r7591, 23;
	mov.b64 	%rd8488, {%r7598, %r7597};
	xor.b64  	%rd8489, %rd8487, %rd8488;
	and.b64  	%rd8490, %rd8483, %rd8457;
	mov.u64 	%rd8491, -6227659224458531675;
	sub.s64 	%rd8492, %rd8491, %rd8471;
	and.b64  	%rd8493, %rd8433, %rd8492;
	or.b64  	%rd8494, %rd8490, %rd8493;
	add.s64 	%rd8495, %rd8494, %rd8489;
	add.s64 	%rd8496, %rd8495, %rd43;
	add.s64 	%rd8497, %rd8496, %rd7359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7599,%dummy}, %rd8484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7600}, %rd8484;
	}
	shf.r.wrap.b32 	%r7601, %r7600, %r7599, 28;
	shf.r.wrap.b32 	%r7602, %r7599, %r7600, 28;
	mov.b64 	%rd8498, {%r7602, %r7601};
	shf.l.wrap.b32 	%r7603, %r7599, %r7600, 30;
	shf.l.wrap.b32 	%r7604, %r7600, %r7599, 30;
	mov.b64 	%rd8499, {%r7604, %r7603};
	xor.b64  	%rd8500, %rd8498, %rd8499;
	shf.l.wrap.b32 	%r7605, %r7599, %r7600, 25;
	shf.l.wrap.b32 	%r7606, %r7600, %r7599, 25;
	mov.b64 	%rd8501, {%r7606, %r7605};
	xor.b64  	%rd8502, %rd8500, %rd8501;
	xor.b64  	%rd8503, %rd8458, %rd8434;
	and.b64  	%rd8504, %rd8484, %rd8503;
	and.b64  	%rd8505, %rd8458, %rd8434;
	xor.b64  	%rd8506, %rd8504, %rd8505;
	add.s64 	%rd8507, %rd8502, %rd8506;
	add.s64 	%rd8508, %rd8507, %rd8497;
	add.s64 	%rd8509, %rd8497, -4965156021675537447;
	add.s64 	%rd8510, %rd8508, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7607,%dummy}, %rd8509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7608}, %rd8509;
	}
	shf.r.wrap.b32 	%r7609, %r7608, %r7607, 14;
	shf.r.wrap.b32 	%r7610, %r7607, %r7608, 14;
	mov.b64 	%rd8511, {%r7610, %r7609};
	shf.r.wrap.b32 	%r7611, %r7608, %r7607, 18;
	shf.r.wrap.b32 	%r7612, %r7607, %r7608, 18;
	mov.b64 	%rd8512, {%r7612, %r7611};
	xor.b64  	%rd8513, %rd8511, %rd8512;
	shf.l.wrap.b32 	%r7613, %r7607, %r7608, 23;
	shf.l.wrap.b32 	%r7614, %r7608, %r7607, 23;
	mov.b64 	%rd8514, {%r7614, %r7613};
	xor.b64  	%rd8515, %rd8513, %rd8514;
	and.b64  	%rd8516, %rd8509, %rd8483;
	mov.u64 	%rd8517, 4965156021675537446;
	sub.s64 	%rd8518, %rd8517, %rd8497;
	and.b64  	%rd8519, %rd8457, %rd8518;
	or.b64  	%rd8520, %rd8516, %rd8519;
	add.s64 	%rd8521, %rd8520, %rd8433;
	add.s64 	%rd8522, %rd8521, %rd8515;
	add.s64 	%rd8523, %rd8522, %rd44;
	add.s64 	%rd8524, %rd8523, %rd7379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7615,%dummy}, %rd8510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7616}, %rd8510;
	}
	shf.r.wrap.b32 	%r7617, %r7616, %r7615, 28;
	shf.r.wrap.b32 	%r7618, %r7615, %r7616, 28;
	mov.b64 	%rd8525, {%r7618, %r7617};
	shf.l.wrap.b32 	%r7619, %r7615, %r7616, 30;
	shf.l.wrap.b32 	%r7620, %r7616, %r7615, 30;
	mov.b64 	%rd8526, {%r7620, %r7619};
	xor.b64  	%rd8527, %rd8525, %rd8526;
	shf.l.wrap.b32 	%r7621, %r7615, %r7616, 25;
	shf.l.wrap.b32 	%r7622, %r7616, %r7615, 25;
	mov.b64 	%rd8528, {%r7622, %r7621};
	xor.b64  	%rd8529, %rd8527, %rd8528;
	xor.b64  	%rd8530, %rd8484, %rd8458;
	and.b64  	%rd8531, %rd8510, %rd8530;
	and.b64  	%rd8532, %rd8484, %rd8458;
	xor.b64  	%rd8533, %rd8531, %rd8532;
	add.s64 	%rd8534, %rd8529, %rd8533;
	add.s64 	%rd8535, %rd8524, %rd8434;
	add.s64 	%rd8536, %rd8534, %rd8524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7623,%dummy}, %rd8535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7624}, %rd8535;
	}
	shf.r.wrap.b32 	%r7625, %r7624, %r7623, 14;
	shf.r.wrap.b32 	%r7626, %r7623, %r7624, 14;
	mov.b64 	%rd8537, {%r7626, %r7625};
	shf.r.wrap.b32 	%r7627, %r7624, %r7623, 18;
	shf.r.wrap.b32 	%r7628, %r7623, %r7624, 18;
	mov.b64 	%rd8538, {%r7628, %r7627};
	xor.b64  	%rd8539, %rd8537, %rd8538;
	shf.l.wrap.b32 	%r7629, %r7623, %r7624, 23;
	shf.l.wrap.b32 	%r7630, %r7624, %r7623, 23;
	mov.b64 	%rd8540, {%r7630, %r7629};
	xor.b64  	%rd8541, %rd8539, %rd8540;
	and.b64  	%rd8542, %rd8535, %rd8509;
	not.b64 	%rd8543, %rd8535;
	and.b64  	%rd8544, %rd8483, %rd8543;
	or.b64  	%rd8545, %rd8542, %rd8544;
	add.s64 	%rd8546, %rd8545, %rd8457;
	add.s64 	%rd8547, %rd8546, %rd8541;
	add.s64 	%rd8548, %rd8547, %rd45;
	add.s64 	%rd8549, %rd8548, %rd7399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7631,%dummy}, %rd8536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7632}, %rd8536;
	}
	shf.r.wrap.b32 	%r7633, %r7632, %r7631, 28;
	shf.r.wrap.b32 	%r7634, %r7631, %r7632, 28;
	mov.b64 	%rd8550, {%r7634, %r7633};
	shf.l.wrap.b32 	%r7635, %r7631, %r7632, 30;
	shf.l.wrap.b32 	%r7636, %r7632, %r7631, 30;
	mov.b64 	%rd8551, {%r7636, %r7635};
	xor.b64  	%rd8552, %rd8550, %rd8551;
	shf.l.wrap.b32 	%r7637, %r7631, %r7632, 25;
	shf.l.wrap.b32 	%r7638, %r7632, %r7631, 25;
	mov.b64 	%rd8553, {%r7638, %r7637};
	xor.b64  	%rd8554, %rd8552, %rd8553;
	xor.b64  	%rd8555, %rd8510, %rd8484;
	and.b64  	%rd8556, %rd8536, %rd8555;
	and.b64  	%rd8557, %rd8510, %rd8484;
	xor.b64  	%rd8558, %rd8556, %rd8557;
	add.s64 	%rd8559, %rd8554, %rd8558;
	add.s64 	%rd8560, %rd8549, %rd8458;
	add.s64 	%rd8561, %rd8559, %rd8549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7639,%dummy}, %rd8560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7640}, %rd8560;
	}
	shf.r.wrap.b32 	%r7641, %r7640, %r7639, 14;
	shf.r.wrap.b32 	%r7642, %r7639, %r7640, 14;
	mov.b64 	%rd8562, {%r7642, %r7641};
	shf.r.wrap.b32 	%r7643, %r7640, %r7639, 18;
	shf.r.wrap.b32 	%r7644, %r7639, %r7640, 18;
	mov.b64 	%rd8563, {%r7644, %r7643};
	xor.b64  	%rd8564, %rd8562, %rd8563;
	shf.l.wrap.b32 	%r7645, %r7639, %r7640, 23;
	shf.l.wrap.b32 	%r7646, %r7640, %r7639, 23;
	mov.b64 	%rd8565, {%r7646, %r7645};
	xor.b64  	%rd8566, %rd8564, %rd8565;
	and.b64  	%rd8567, %rd8560, %rd8535;
	not.b64 	%rd8568, %rd8560;
	and.b64  	%rd8569, %rd8509, %rd8568;
	or.b64  	%rd8570, %rd8567, %rd8569;
	add.s64 	%rd8571, %rd8570, %rd8483;
	add.s64 	%rd8572, %rd8571, %rd8566;
	add.s64 	%rd8573, %rd8572, %rd46;
	add.s64 	%rd8574, %rd8573, %rd7419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7647,%dummy}, %rd8561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7648}, %rd8561;
	}
	shf.r.wrap.b32 	%r7649, %r7648, %r7647, 28;
	shf.r.wrap.b32 	%r7650, %r7647, %r7648, 28;
	mov.b64 	%rd8575, {%r7650, %r7649};
	shf.l.wrap.b32 	%r7651, %r7647, %r7648, 30;
	shf.l.wrap.b32 	%r7652, %r7648, %r7647, 30;
	mov.b64 	%rd8576, {%r7652, %r7651};
	xor.b64  	%rd8577, %rd8575, %rd8576;
	shf.l.wrap.b32 	%r7653, %r7647, %r7648, 25;
	shf.l.wrap.b32 	%r7654, %r7648, %r7647, 25;
	mov.b64 	%rd8578, {%r7654, %r7653};
	xor.b64  	%rd8579, %rd8577, %rd8578;
	xor.b64  	%rd8580, %rd8536, %rd8510;
	and.b64  	%rd8581, %rd8561, %rd8580;
	and.b64  	%rd8582, %rd8536, %rd8510;
	xor.b64  	%rd8583, %rd8581, %rd8582;
	add.s64 	%rd8584, %rd8579, %rd8583;
	add.s64 	%rd8585, %rd8574, %rd8484;
	add.s64 	%rd8586, %rd8584, %rd8574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7655,%dummy}, %rd8585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7656}, %rd8585;
	}
	shf.r.wrap.b32 	%r7657, %r7656, %r7655, 14;
	shf.r.wrap.b32 	%r7658, %r7655, %r7656, 14;
	mov.b64 	%rd8587, {%r7658, %r7657};
	shf.r.wrap.b32 	%r7659, %r7656, %r7655, 18;
	shf.r.wrap.b32 	%r7660, %r7655, %r7656, 18;
	mov.b64 	%rd8588, {%r7660, %r7659};
	xor.b64  	%rd8589, %rd8587, %rd8588;
	shf.l.wrap.b32 	%r7661, %r7655, %r7656, 23;
	shf.l.wrap.b32 	%r7662, %r7656, %r7655, 23;
	mov.b64 	%rd8590, {%r7662, %r7661};
	xor.b64  	%rd8591, %rd8589, %rd8590;
	and.b64  	%rd8592, %rd8585, %rd8560;
	not.b64 	%rd8593, %rd8585;
	and.b64  	%rd8594, %rd8535, %rd8593;
	or.b64  	%rd8595, %rd8592, %rd8594;
	add.s64 	%rd8596, %rd8595, %rd8509;
	add.s64 	%rd8597, %rd8596, %rd8591;
	add.s64 	%rd8598, %rd8597, %rd47;
	add.s64 	%rd8599, %rd8598, %rd7439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7663,%dummy}, %rd8586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7664}, %rd8586;
	}
	shf.r.wrap.b32 	%r7665, %r7664, %r7663, 28;
	shf.r.wrap.b32 	%r7666, %r7663, %r7664, 28;
	mov.b64 	%rd8600, {%r7666, %r7665};
	shf.l.wrap.b32 	%r7667, %r7663, %r7664, 30;
	shf.l.wrap.b32 	%r7668, %r7664, %r7663, 30;
	mov.b64 	%rd8601, {%r7668, %r7667};
	xor.b64  	%rd8602, %rd8600, %rd8601;
	shf.l.wrap.b32 	%r7669, %r7663, %r7664, 25;
	shf.l.wrap.b32 	%r7670, %r7664, %r7663, 25;
	mov.b64 	%rd8603, {%r7670, %r7669};
	xor.b64  	%rd8604, %rd8602, %rd8603;
	xor.b64  	%rd8605, %rd8561, %rd8536;
	and.b64  	%rd8606, %rd8586, %rd8605;
	and.b64  	%rd8607, %rd8561, %rd8536;
	xor.b64  	%rd8608, %rd8606, %rd8607;
	add.s64 	%rd8609, %rd8604, %rd8608;
	add.s64 	%rd8610, %rd8599, %rd8510;
	add.s64 	%rd8611, %rd8609, %rd8599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7671,%dummy}, %rd8610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7672}, %rd8610;
	}
	shf.r.wrap.b32 	%r7673, %r7672, %r7671, 14;
	shf.r.wrap.b32 	%r7674, %r7671, %r7672, 14;
	mov.b64 	%rd8612, {%r7674, %r7673};
	shf.r.wrap.b32 	%r7675, %r7672, %r7671, 18;
	shf.r.wrap.b32 	%r7676, %r7671, %r7672, 18;
	mov.b64 	%rd8613, {%r7676, %r7675};
	xor.b64  	%rd8614, %rd8612, %rd8613;
	shf.l.wrap.b32 	%r7677, %r7671, %r7672, 23;
	shf.l.wrap.b32 	%r7678, %r7672, %r7671, 23;
	mov.b64 	%rd8615, {%r7678, %r7677};
	xor.b64  	%rd8616, %rd8614, %rd8615;
	and.b64  	%rd8617, %rd8610, %rd8585;
	not.b64 	%rd8618, %rd8610;
	and.b64  	%rd8619, %rd8560, %rd8618;
	or.b64  	%rd8620, %rd8617, %rd8619;
	add.s64 	%rd8621, %rd8620, %rd8535;
	add.s64 	%rd8622, %rd8621, %rd8616;
	add.s64 	%rd8623, %rd8622, %rd48;
	add.s64 	%rd8624, %rd8623, %rd7459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7679,%dummy}, %rd8611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7680}, %rd8611;
	}
	shf.r.wrap.b32 	%r7681, %r7680, %r7679, 28;
	shf.r.wrap.b32 	%r7682, %r7679, %r7680, 28;
	mov.b64 	%rd8625, {%r7682, %r7681};
	shf.l.wrap.b32 	%r7683, %r7679, %r7680, 30;
	shf.l.wrap.b32 	%r7684, %r7680, %r7679, 30;
	mov.b64 	%rd8626, {%r7684, %r7683};
	xor.b64  	%rd8627, %rd8625, %rd8626;
	shf.l.wrap.b32 	%r7685, %r7679, %r7680, 25;
	shf.l.wrap.b32 	%r7686, %r7680, %r7679, 25;
	mov.b64 	%rd8628, {%r7686, %r7685};
	xor.b64  	%rd8629, %rd8627, %rd8628;
	xor.b64  	%rd8630, %rd8586, %rd8561;
	and.b64  	%rd8631, %rd8611, %rd8630;
	and.b64  	%rd8632, %rd8586, %rd8561;
	xor.b64  	%rd8633, %rd8631, %rd8632;
	add.s64 	%rd8634, %rd8629, %rd8633;
	add.s64 	%rd8635, %rd8624, %rd8536;
	add.s64 	%rd8636, %rd8634, %rd8624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7687,%dummy}, %rd8635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7688}, %rd8635;
	}
	shf.r.wrap.b32 	%r7689, %r7688, %r7687, 14;
	shf.r.wrap.b32 	%r7690, %r7687, %r7688, 14;
	mov.b64 	%rd8637, {%r7690, %r7689};
	shf.r.wrap.b32 	%r7691, %r7688, %r7687, 18;
	shf.r.wrap.b32 	%r7692, %r7687, %r7688, 18;
	mov.b64 	%rd8638, {%r7692, %r7691};
	xor.b64  	%rd8639, %rd8637, %rd8638;
	shf.l.wrap.b32 	%r7693, %r7687, %r7688, 23;
	shf.l.wrap.b32 	%r7694, %r7688, %r7687, 23;
	mov.b64 	%rd8640, {%r7694, %r7693};
	xor.b64  	%rd8641, %rd8639, %rd8640;
	and.b64  	%rd8642, %rd8635, %rd8610;
	not.b64 	%rd8643, %rd8635;
	and.b64  	%rd8644, %rd8585, %rd8643;
	or.b64  	%rd8645, %rd8642, %rd8644;
	add.s64 	%rd8646, %rd8645, %rd8560;
	add.s64 	%rd8647, %rd8646, %rd8641;
	add.s64 	%rd8648, %rd8647, %rd49;
	add.s64 	%rd8649, %rd8648, %rd7479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7695,%dummy}, %rd8636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7696}, %rd8636;
	}
	shf.r.wrap.b32 	%r7697, %r7696, %r7695, 28;
	shf.r.wrap.b32 	%r7698, %r7695, %r7696, 28;
	mov.b64 	%rd8650, {%r7698, %r7697};
	shf.l.wrap.b32 	%r7699, %r7695, %r7696, 30;
	shf.l.wrap.b32 	%r7700, %r7696, %r7695, 30;
	mov.b64 	%rd8651, {%r7700, %r7699};
	xor.b64  	%rd8652, %rd8650, %rd8651;
	shf.l.wrap.b32 	%r7701, %r7695, %r7696, 25;
	shf.l.wrap.b32 	%r7702, %r7696, %r7695, 25;
	mov.b64 	%rd8653, {%r7702, %r7701};
	xor.b64  	%rd8654, %rd8652, %rd8653;
	xor.b64  	%rd8655, %rd8611, %rd8586;
	and.b64  	%rd8656, %rd8636, %rd8655;
	and.b64  	%rd8657, %rd8611, %rd8586;
	xor.b64  	%rd8658, %rd8656, %rd8657;
	add.s64 	%rd8659, %rd8654, %rd8658;
	add.s64 	%rd8660, %rd8649, %rd8561;
	add.s64 	%rd8661, %rd8659, %rd8649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7703,%dummy}, %rd8660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7704}, %rd8660;
	}
	shf.r.wrap.b32 	%r7705, %r7704, %r7703, 14;
	shf.r.wrap.b32 	%r7706, %r7703, %r7704, 14;
	mov.b64 	%rd8662, {%r7706, %r7705};
	shf.r.wrap.b32 	%r7707, %r7704, %r7703, 18;
	shf.r.wrap.b32 	%r7708, %r7703, %r7704, 18;
	mov.b64 	%rd8663, {%r7708, %r7707};
	xor.b64  	%rd8664, %rd8662, %rd8663;
	shf.l.wrap.b32 	%r7709, %r7703, %r7704, 23;
	shf.l.wrap.b32 	%r7710, %r7704, %r7703, 23;
	mov.b64 	%rd8665, {%r7710, %r7709};
	xor.b64  	%rd8666, %rd8664, %rd8665;
	and.b64  	%rd8667, %rd8660, %rd8635;
	not.b64 	%rd8668, %rd8660;
	and.b64  	%rd8669, %rd8610, %rd8668;
	or.b64  	%rd8670, %rd8667, %rd8669;
	add.s64 	%rd8671, %rd8670, %rd8585;
	add.s64 	%rd8672, %rd8671, %rd8666;
	add.s64 	%rd8673, %rd8672, %rd50;
	add.s64 	%rd8674, %rd8673, %rd7499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7711,%dummy}, %rd8661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7712}, %rd8661;
	}
	shf.r.wrap.b32 	%r7713, %r7712, %r7711, 28;
	shf.r.wrap.b32 	%r7714, %r7711, %r7712, 28;
	mov.b64 	%rd8675, {%r7714, %r7713};
	shf.l.wrap.b32 	%r7715, %r7711, %r7712, 30;
	shf.l.wrap.b32 	%r7716, %r7712, %r7711, 30;
	mov.b64 	%rd8676, {%r7716, %r7715};
	xor.b64  	%rd8677, %rd8675, %rd8676;
	shf.l.wrap.b32 	%r7717, %r7711, %r7712, 25;
	shf.l.wrap.b32 	%r7718, %r7712, %r7711, 25;
	mov.b64 	%rd8678, {%r7718, %r7717};
	xor.b64  	%rd8679, %rd8677, %rd8678;
	xor.b64  	%rd8680, %rd8636, %rd8611;
	and.b64  	%rd8681, %rd8661, %rd8680;
	and.b64  	%rd8682, %rd8636, %rd8611;
	xor.b64  	%rd8683, %rd8681, %rd8682;
	add.s64 	%rd8684, %rd8679, %rd8683;
	add.s64 	%rd8685, %rd8674, %rd8586;
	add.s64 	%rd8686, %rd8684, %rd8674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7719,%dummy}, %rd8685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7720}, %rd8685;
	}
	shf.r.wrap.b32 	%r7721, %r7720, %r7719, 14;
	shf.r.wrap.b32 	%r7722, %r7719, %r7720, 14;
	mov.b64 	%rd8687, {%r7722, %r7721};
	shf.r.wrap.b32 	%r7723, %r7720, %r7719, 18;
	shf.r.wrap.b32 	%r7724, %r7719, %r7720, 18;
	mov.b64 	%rd8688, {%r7724, %r7723};
	xor.b64  	%rd8689, %rd8687, %rd8688;
	shf.l.wrap.b32 	%r7725, %r7719, %r7720, 23;
	shf.l.wrap.b32 	%r7726, %r7720, %r7719, 23;
	mov.b64 	%rd8690, {%r7726, %r7725};
	xor.b64  	%rd8691, %rd8689, %rd8690;
	and.b64  	%rd8692, %rd8685, %rd8660;
	not.b64 	%rd8693, %rd8685;
	and.b64  	%rd8694, %rd8635, %rd8693;
	or.b64  	%rd8695, %rd8692, %rd8694;
	add.s64 	%rd8696, %rd8695, %rd8610;
	add.s64 	%rd8697, %rd8696, %rd8691;
	add.s64 	%rd8698, %rd8697, %rd51;
	add.s64 	%rd8699, %rd8698, %rd7519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7727,%dummy}, %rd8686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7728}, %rd8686;
	}
	shf.r.wrap.b32 	%r7729, %r7728, %r7727, 28;
	shf.r.wrap.b32 	%r7730, %r7727, %r7728, 28;
	mov.b64 	%rd8700, {%r7730, %r7729};
	shf.l.wrap.b32 	%r7731, %r7727, %r7728, 30;
	shf.l.wrap.b32 	%r7732, %r7728, %r7727, 30;
	mov.b64 	%rd8701, {%r7732, %r7731};
	xor.b64  	%rd8702, %rd8700, %rd8701;
	shf.l.wrap.b32 	%r7733, %r7727, %r7728, 25;
	shf.l.wrap.b32 	%r7734, %r7728, %r7727, 25;
	mov.b64 	%rd8703, {%r7734, %r7733};
	xor.b64  	%rd8704, %rd8702, %rd8703;
	xor.b64  	%rd8705, %rd8661, %rd8636;
	and.b64  	%rd8706, %rd8686, %rd8705;
	and.b64  	%rd8707, %rd8661, %rd8636;
	xor.b64  	%rd8708, %rd8706, %rd8707;
	add.s64 	%rd8709, %rd8704, %rd8708;
	add.s64 	%rd8710, %rd8699, %rd8611;
	add.s64 	%rd8711, %rd8709, %rd8699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7735,%dummy}, %rd8710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7736}, %rd8710;
	}
	shf.r.wrap.b32 	%r7737, %r7736, %r7735, 14;
	shf.r.wrap.b32 	%r7738, %r7735, %r7736, 14;
	mov.b64 	%rd8712, {%r7738, %r7737};
	shf.r.wrap.b32 	%r7739, %r7736, %r7735, 18;
	shf.r.wrap.b32 	%r7740, %r7735, %r7736, 18;
	mov.b64 	%rd8713, {%r7740, %r7739};
	xor.b64  	%rd8714, %rd8712, %rd8713;
	shf.l.wrap.b32 	%r7741, %r7735, %r7736, 23;
	shf.l.wrap.b32 	%r7742, %r7736, %r7735, 23;
	mov.b64 	%rd8715, {%r7742, %r7741};
	xor.b64  	%rd8716, %rd8714, %rd8715;
	and.b64  	%rd8717, %rd8710, %rd8685;
	not.b64 	%rd8718, %rd8710;
	and.b64  	%rd8719, %rd8660, %rd8718;
	or.b64  	%rd8720, %rd8717, %rd8719;
	add.s64 	%rd8721, %rd8720, %rd8635;
	add.s64 	%rd8722, %rd8721, %rd8716;
	add.s64 	%rd8723, %rd8722, %rd52;
	add.s64 	%rd8724, %rd8723, %rd7539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7743,%dummy}, %rd8711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7744}, %rd8711;
	}
	shf.r.wrap.b32 	%r7745, %r7744, %r7743, 28;
	shf.r.wrap.b32 	%r7746, %r7743, %r7744, 28;
	mov.b64 	%rd8725, {%r7746, %r7745};
	shf.l.wrap.b32 	%r7747, %r7743, %r7744, 30;
	shf.l.wrap.b32 	%r7748, %r7744, %r7743, 30;
	mov.b64 	%rd8726, {%r7748, %r7747};
	xor.b64  	%rd8727, %rd8725, %rd8726;
	shf.l.wrap.b32 	%r7749, %r7743, %r7744, 25;
	shf.l.wrap.b32 	%r7750, %r7744, %r7743, 25;
	mov.b64 	%rd8728, {%r7750, %r7749};
	xor.b64  	%rd8729, %rd8727, %rd8728;
	xor.b64  	%rd8730, %rd8686, %rd8661;
	and.b64  	%rd8731, %rd8711, %rd8730;
	and.b64  	%rd8732, %rd8686, %rd8661;
	xor.b64  	%rd8733, %rd8731, %rd8732;
	add.s64 	%rd8734, %rd8729, %rd8733;
	add.s64 	%rd8735, %rd8724, %rd8636;
	add.s64 	%rd8736, %rd8734, %rd8724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7751,%dummy}, %rd8735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7752}, %rd8735;
	}
	shf.r.wrap.b32 	%r7753, %r7752, %r7751, 14;
	shf.r.wrap.b32 	%r7754, %r7751, %r7752, 14;
	mov.b64 	%rd8737, {%r7754, %r7753};
	shf.r.wrap.b32 	%r7755, %r7752, %r7751, 18;
	shf.r.wrap.b32 	%r7756, %r7751, %r7752, 18;
	mov.b64 	%rd8738, {%r7756, %r7755};
	xor.b64  	%rd8739, %rd8737, %rd8738;
	shf.l.wrap.b32 	%r7757, %r7751, %r7752, 23;
	shf.l.wrap.b32 	%r7758, %r7752, %r7751, 23;
	mov.b64 	%rd8740, {%r7758, %r7757};
	xor.b64  	%rd8741, %rd8739, %rd8740;
	and.b64  	%rd8742, %rd8735, %rd8710;
	not.b64 	%rd8743, %rd8735;
	and.b64  	%rd8744, %rd8685, %rd8743;
	or.b64  	%rd8745, %rd8742, %rd8744;
	add.s64 	%rd8746, %rd8745, %rd8660;
	add.s64 	%rd8747, %rd8746, %rd8741;
	add.s64 	%rd8748, %rd8747, %rd53;
	add.s64 	%rd8749, %rd8748, %rd7559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7759,%dummy}, %rd8736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7760}, %rd8736;
	}
	shf.r.wrap.b32 	%r7761, %r7760, %r7759, 28;
	shf.r.wrap.b32 	%r7762, %r7759, %r7760, 28;
	mov.b64 	%rd8750, {%r7762, %r7761};
	shf.l.wrap.b32 	%r7763, %r7759, %r7760, 30;
	shf.l.wrap.b32 	%r7764, %r7760, %r7759, 30;
	mov.b64 	%rd8751, {%r7764, %r7763};
	xor.b64  	%rd8752, %rd8750, %rd8751;
	shf.l.wrap.b32 	%r7765, %r7759, %r7760, 25;
	shf.l.wrap.b32 	%r7766, %r7760, %r7759, 25;
	mov.b64 	%rd8753, {%r7766, %r7765};
	xor.b64  	%rd8754, %rd8752, %rd8753;
	xor.b64  	%rd8755, %rd8711, %rd8686;
	and.b64  	%rd8756, %rd8736, %rd8755;
	and.b64  	%rd8757, %rd8711, %rd8686;
	xor.b64  	%rd8758, %rd8756, %rd8757;
	add.s64 	%rd8759, %rd8754, %rd8758;
	add.s64 	%rd8760, %rd8749, %rd8661;
	add.s64 	%rd8761, %rd8759, %rd8749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7767,%dummy}, %rd8760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7768}, %rd8760;
	}
	shf.r.wrap.b32 	%r7769, %r7768, %r7767, 14;
	shf.r.wrap.b32 	%r7770, %r7767, %r7768, 14;
	mov.b64 	%rd8762, {%r7770, %r7769};
	shf.r.wrap.b32 	%r7771, %r7768, %r7767, 18;
	shf.r.wrap.b32 	%r7772, %r7767, %r7768, 18;
	mov.b64 	%rd8763, {%r7772, %r7771};
	xor.b64  	%rd8764, %rd8762, %rd8763;
	shf.l.wrap.b32 	%r7773, %r7767, %r7768, 23;
	shf.l.wrap.b32 	%r7774, %r7768, %r7767, 23;
	mov.b64 	%rd8765, {%r7774, %r7773};
	xor.b64  	%rd8766, %rd8764, %rd8765;
	and.b64  	%rd8767, %rd8760, %rd8735;
	not.b64 	%rd8768, %rd8760;
	and.b64  	%rd8769, %rd8710, %rd8768;
	or.b64  	%rd8770, %rd8767, %rd8769;
	add.s64 	%rd8771, %rd8770, %rd8685;
	add.s64 	%rd8772, %rd8771, %rd8766;
	add.s64 	%rd8773, %rd8772, %rd54;
	add.s64 	%rd8774, %rd8773, %rd7579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7775,%dummy}, %rd8761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7776}, %rd8761;
	}
	shf.r.wrap.b32 	%r7777, %r7776, %r7775, 28;
	shf.r.wrap.b32 	%r7778, %r7775, %r7776, 28;
	mov.b64 	%rd8775, {%r7778, %r7777};
	shf.l.wrap.b32 	%r7779, %r7775, %r7776, 30;
	shf.l.wrap.b32 	%r7780, %r7776, %r7775, 30;
	mov.b64 	%rd8776, {%r7780, %r7779};
	xor.b64  	%rd8777, %rd8775, %rd8776;
	shf.l.wrap.b32 	%r7781, %r7775, %r7776, 25;
	shf.l.wrap.b32 	%r7782, %r7776, %r7775, 25;
	mov.b64 	%rd8778, {%r7782, %r7781};
	xor.b64  	%rd8779, %rd8777, %rd8778;
	xor.b64  	%rd8780, %rd8736, %rd8711;
	and.b64  	%rd8781, %rd8761, %rd8780;
	and.b64  	%rd8782, %rd8736, %rd8711;
	xor.b64  	%rd8783, %rd8781, %rd8782;
	add.s64 	%rd8784, %rd8779, %rd8783;
	add.s64 	%rd8785, %rd8774, %rd8686;
	add.s64 	%rd8786, %rd8784, %rd8774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7783,%dummy}, %rd8785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7784}, %rd8785;
	}
	shf.r.wrap.b32 	%r7785, %r7784, %r7783, 14;
	shf.r.wrap.b32 	%r7786, %r7783, %r7784, 14;
	mov.b64 	%rd8787, {%r7786, %r7785};
	shf.r.wrap.b32 	%r7787, %r7784, %r7783, 18;
	shf.r.wrap.b32 	%r7788, %r7783, %r7784, 18;
	mov.b64 	%rd8788, {%r7788, %r7787};
	xor.b64  	%rd8789, %rd8787, %rd8788;
	shf.l.wrap.b32 	%r7789, %r7783, %r7784, 23;
	shf.l.wrap.b32 	%r7790, %r7784, %r7783, 23;
	mov.b64 	%rd8790, {%r7790, %r7789};
	xor.b64  	%rd8791, %rd8789, %rd8790;
	and.b64  	%rd8792, %rd8785, %rd8760;
	not.b64 	%rd8793, %rd8785;
	and.b64  	%rd8794, %rd8735, %rd8793;
	or.b64  	%rd8795, %rd8792, %rd8794;
	add.s64 	%rd8796, %rd8795, %rd8710;
	add.s64 	%rd8797, %rd8796, %rd8791;
	add.s64 	%rd8798, %rd8797, %rd55;
	add.s64 	%rd8799, %rd8798, %rd7599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7791,%dummy}, %rd8786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7792}, %rd8786;
	}
	shf.r.wrap.b32 	%r7793, %r7792, %r7791, 28;
	shf.r.wrap.b32 	%r7794, %r7791, %r7792, 28;
	mov.b64 	%rd8800, {%r7794, %r7793};
	shf.l.wrap.b32 	%r7795, %r7791, %r7792, 30;
	shf.l.wrap.b32 	%r7796, %r7792, %r7791, 30;
	mov.b64 	%rd8801, {%r7796, %r7795};
	xor.b64  	%rd8802, %rd8800, %rd8801;
	shf.l.wrap.b32 	%r7797, %r7791, %r7792, 25;
	shf.l.wrap.b32 	%r7798, %r7792, %r7791, 25;
	mov.b64 	%rd8803, {%r7798, %r7797};
	xor.b64  	%rd8804, %rd8802, %rd8803;
	xor.b64  	%rd8805, %rd8761, %rd8736;
	and.b64  	%rd8806, %rd8786, %rd8805;
	and.b64  	%rd8807, %rd8761, %rd8736;
	xor.b64  	%rd8808, %rd8806, %rd8807;
	add.s64 	%rd8809, %rd8804, %rd8808;
	add.s64 	%rd8810, %rd8799, %rd8711;
	add.s64 	%rd8811, %rd8809, %rd8799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7799,%dummy}, %rd8810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7800}, %rd8810;
	}
	shf.r.wrap.b32 	%r7801, %r7800, %r7799, 14;
	shf.r.wrap.b32 	%r7802, %r7799, %r7800, 14;
	mov.b64 	%rd8812, {%r7802, %r7801};
	shf.r.wrap.b32 	%r7803, %r7800, %r7799, 18;
	shf.r.wrap.b32 	%r7804, %r7799, %r7800, 18;
	mov.b64 	%rd8813, {%r7804, %r7803};
	xor.b64  	%rd8814, %rd8812, %rd8813;
	shf.l.wrap.b32 	%r7805, %r7799, %r7800, 23;
	shf.l.wrap.b32 	%r7806, %r7800, %r7799, 23;
	mov.b64 	%rd8815, {%r7806, %r7805};
	xor.b64  	%rd8816, %rd8814, %rd8815;
	and.b64  	%rd8817, %rd8810, %rd8785;
	not.b64 	%rd8818, %rd8810;
	and.b64  	%rd8819, %rd8760, %rd8818;
	or.b64  	%rd8820, %rd8817, %rd8819;
	add.s64 	%rd8821, %rd8820, %rd8735;
	add.s64 	%rd8822, %rd8821, %rd8816;
	add.s64 	%rd8823, %rd8822, %rd56;
	add.s64 	%rd8824, %rd8823, %rd7612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7807,%dummy}, %rd8811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7808}, %rd8811;
	}
	shf.r.wrap.b32 	%r7809, %r7808, %r7807, 28;
	shf.r.wrap.b32 	%r7810, %r7807, %r7808, 28;
	mov.b64 	%rd8825, {%r7810, %r7809};
	shf.l.wrap.b32 	%r7811, %r7807, %r7808, 30;
	shf.l.wrap.b32 	%r7812, %r7808, %r7807, 30;
	mov.b64 	%rd8826, {%r7812, %r7811};
	xor.b64  	%rd8827, %rd8825, %rd8826;
	shf.l.wrap.b32 	%r7813, %r7807, %r7808, 25;
	shf.l.wrap.b32 	%r7814, %r7808, %r7807, 25;
	mov.b64 	%rd8828, {%r7814, %r7813};
	xor.b64  	%rd8829, %rd8827, %rd8828;
	xor.b64  	%rd8830, %rd8786, %rd8761;
	and.b64  	%rd8831, %rd8811, %rd8830;
	and.b64  	%rd8832, %rd8786, %rd8761;
	xor.b64  	%rd8833, %rd8831, %rd8832;
	add.s64 	%rd8834, %rd8829, %rd8833;
	add.s64 	%rd8835, %rd8824, %rd8736;
	add.s64 	%rd8836, %rd8834, %rd8824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7815,%dummy}, %rd8835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7816}, %rd8835;
	}
	shf.r.wrap.b32 	%r7817, %r7816, %r7815, 14;
	shf.r.wrap.b32 	%r7818, %r7815, %r7816, 14;
	mov.b64 	%rd8837, {%r7818, %r7817};
	shf.r.wrap.b32 	%r7819, %r7816, %r7815, 18;
	shf.r.wrap.b32 	%r7820, %r7815, %r7816, 18;
	mov.b64 	%rd8838, {%r7820, %r7819};
	xor.b64  	%rd8839, %rd8837, %rd8838;
	shf.l.wrap.b32 	%r7821, %r7815, %r7816, 23;
	shf.l.wrap.b32 	%r7822, %r7816, %r7815, 23;
	mov.b64 	%rd8840, {%r7822, %r7821};
	xor.b64  	%rd8841, %rd8839, %rd8840;
	and.b64  	%rd8842, %rd8835, %rd8810;
	not.b64 	%rd8843, %rd8835;
	and.b64  	%rd8844, %rd8785, %rd8843;
	or.b64  	%rd8845, %rd8842, %rd8844;
	add.s64 	%rd8846, %rd8845, %rd8760;
	add.s64 	%rd8847, %rd8846, %rd8841;
	add.s64 	%rd8848, %rd8847, %rd57;
	add.s64 	%rd8849, %rd8848, %rd7625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7823,%dummy}, %rd8836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7824}, %rd8836;
	}
	shf.r.wrap.b32 	%r7825, %r7824, %r7823, 28;
	shf.r.wrap.b32 	%r7826, %r7823, %r7824, 28;
	mov.b64 	%rd8850, {%r7826, %r7825};
	shf.l.wrap.b32 	%r7827, %r7823, %r7824, 30;
	shf.l.wrap.b32 	%r7828, %r7824, %r7823, 30;
	mov.b64 	%rd8851, {%r7828, %r7827};
	xor.b64  	%rd8852, %rd8850, %rd8851;
	shf.l.wrap.b32 	%r7829, %r7823, %r7824, 25;
	shf.l.wrap.b32 	%r7830, %r7824, %r7823, 25;
	mov.b64 	%rd8853, {%r7830, %r7829};
	xor.b64  	%rd8854, %rd8852, %rd8853;
	xor.b64  	%rd8855, %rd8811, %rd8786;
	and.b64  	%rd8856, %rd8836, %rd8855;
	and.b64  	%rd8857, %rd8811, %rd8786;
	xor.b64  	%rd8858, %rd8856, %rd8857;
	add.s64 	%rd8859, %rd8854, %rd8858;
	add.s64 	%rd8860, %rd8849, %rd8761;
	add.s64 	%rd8861, %rd8859, %rd8849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7831,%dummy}, %rd8860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7832}, %rd8860;
	}
	shf.r.wrap.b32 	%r7833, %r7832, %r7831, 14;
	shf.r.wrap.b32 	%r7834, %r7831, %r7832, 14;
	mov.b64 	%rd8862, {%r7834, %r7833};
	shf.r.wrap.b32 	%r7835, %r7832, %r7831, 18;
	shf.r.wrap.b32 	%r7836, %r7831, %r7832, 18;
	mov.b64 	%rd8863, {%r7836, %r7835};
	xor.b64  	%rd8864, %rd8862, %rd8863;
	shf.l.wrap.b32 	%r7837, %r7831, %r7832, 23;
	shf.l.wrap.b32 	%r7838, %r7832, %r7831, 23;
	mov.b64 	%rd8865, {%r7838, %r7837};
	xor.b64  	%rd8866, %rd8864, %rd8865;
	and.b64  	%rd8867, %rd8860, %rd8835;
	not.b64 	%rd8868, %rd8860;
	and.b64  	%rd8869, %rd8810, %rd8868;
	or.b64  	%rd8870, %rd8867, %rd8869;
	add.s64 	%rd8871, %rd8870, %rd8785;
	add.s64 	%rd8872, %rd8871, %rd8866;
	add.s64 	%rd8873, %rd8872, %rd58;
	add.s64 	%rd8874, %rd8873, %rd7638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7839,%dummy}, %rd8861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7840}, %rd8861;
	}
	shf.r.wrap.b32 	%r7841, %r7840, %r7839, 28;
	shf.r.wrap.b32 	%r7842, %r7839, %r7840, 28;
	mov.b64 	%rd8875, {%r7842, %r7841};
	shf.l.wrap.b32 	%r7843, %r7839, %r7840, 30;
	shf.l.wrap.b32 	%r7844, %r7840, %r7839, 30;
	mov.b64 	%rd8876, {%r7844, %r7843};
	xor.b64  	%rd8877, %rd8875, %rd8876;
	shf.l.wrap.b32 	%r7845, %r7839, %r7840, 25;
	shf.l.wrap.b32 	%r7846, %r7840, %r7839, 25;
	mov.b64 	%rd8878, {%r7846, %r7845};
	xor.b64  	%rd8879, %rd8877, %rd8878;
	xor.b64  	%rd8880, %rd8836, %rd8811;
	and.b64  	%rd8881, %rd8861, %rd8880;
	and.b64  	%rd8882, %rd8836, %rd8811;
	xor.b64  	%rd8883, %rd8881, %rd8882;
	add.s64 	%rd8884, %rd8879, %rd8883;
	add.s64 	%rd8885, %rd8874, %rd8786;
	add.s64 	%rd8886, %rd8884, %rd8874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7847,%dummy}, %rd8885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7848}, %rd8885;
	}
	shf.r.wrap.b32 	%r7849, %r7848, %r7847, 14;
	shf.r.wrap.b32 	%r7850, %r7847, %r7848, 14;
	mov.b64 	%rd8887, {%r7850, %r7849};
	shf.r.wrap.b32 	%r7851, %r7848, %r7847, 18;
	shf.r.wrap.b32 	%r7852, %r7847, %r7848, 18;
	mov.b64 	%rd8888, {%r7852, %r7851};
	xor.b64  	%rd8889, %rd8887, %rd8888;
	shf.l.wrap.b32 	%r7853, %r7847, %r7848, 23;
	shf.l.wrap.b32 	%r7854, %r7848, %r7847, 23;
	mov.b64 	%rd8890, {%r7854, %r7853};
	xor.b64  	%rd8891, %rd8889, %rd8890;
	and.b64  	%rd8892, %rd8885, %rd8860;
	not.b64 	%rd8893, %rd8885;
	and.b64  	%rd8894, %rd8835, %rd8893;
	or.b64  	%rd8895, %rd8892, %rd8894;
	add.s64 	%rd8896, %rd8895, %rd8810;
	add.s64 	%rd8897, %rd8896, %rd8891;
	add.s64 	%rd8898, %rd8897, %rd59;
	add.s64 	%rd8899, %rd8898, %rd7651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7855,%dummy}, %rd8886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7856}, %rd8886;
	}
	shf.r.wrap.b32 	%r7857, %r7856, %r7855, 28;
	shf.r.wrap.b32 	%r7858, %r7855, %r7856, 28;
	mov.b64 	%rd8900, {%r7858, %r7857};
	shf.l.wrap.b32 	%r7859, %r7855, %r7856, 30;
	shf.l.wrap.b32 	%r7860, %r7856, %r7855, 30;
	mov.b64 	%rd8901, {%r7860, %r7859};
	xor.b64  	%rd8902, %rd8900, %rd8901;
	shf.l.wrap.b32 	%r7861, %r7855, %r7856, 25;
	shf.l.wrap.b32 	%r7862, %r7856, %r7855, 25;
	mov.b64 	%rd8903, {%r7862, %r7861};
	xor.b64  	%rd8904, %rd8902, %rd8903;
	xor.b64  	%rd8905, %rd8861, %rd8836;
	and.b64  	%rd8906, %rd8886, %rd8905;
	and.b64  	%rd8907, %rd8861, %rd8836;
	xor.b64  	%rd8908, %rd8906, %rd8907;
	add.s64 	%rd8909, %rd8904, %rd8908;
	add.s64 	%rd8910, %rd8899, %rd8811;
	add.s64 	%rd8911, %rd8909, %rd8899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7863,%dummy}, %rd8910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7864}, %rd8910;
	}
	shf.r.wrap.b32 	%r7865, %r7864, %r7863, 14;
	shf.r.wrap.b32 	%r7866, %r7863, %r7864, 14;
	mov.b64 	%rd8912, {%r7866, %r7865};
	shf.r.wrap.b32 	%r7867, %r7864, %r7863, 18;
	shf.r.wrap.b32 	%r7868, %r7863, %r7864, 18;
	mov.b64 	%rd8913, {%r7868, %r7867};
	xor.b64  	%rd8914, %rd8912, %rd8913;
	shf.l.wrap.b32 	%r7869, %r7863, %r7864, 23;
	shf.l.wrap.b32 	%r7870, %r7864, %r7863, 23;
	mov.b64 	%rd8915, {%r7870, %r7869};
	xor.b64  	%rd8916, %rd8914, %rd8915;
	and.b64  	%rd8917, %rd8910, %rd8885;
	not.b64 	%rd8918, %rd8910;
	and.b64  	%rd8919, %rd8860, %rd8918;
	or.b64  	%rd8920, %rd8917, %rd8919;
	add.s64 	%rd8921, %rd8920, %rd8835;
	add.s64 	%rd8922, %rd8921, %rd8916;
	add.s64 	%rd8923, %rd8922, %rd60;
	add.s64 	%rd8924, %rd8923, %rd7664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7871,%dummy}, %rd8911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7872}, %rd8911;
	}
	shf.r.wrap.b32 	%r7873, %r7872, %r7871, 28;
	shf.r.wrap.b32 	%r7874, %r7871, %r7872, 28;
	mov.b64 	%rd8925, {%r7874, %r7873};
	shf.l.wrap.b32 	%r7875, %r7871, %r7872, 30;
	shf.l.wrap.b32 	%r7876, %r7872, %r7871, 30;
	mov.b64 	%rd8926, {%r7876, %r7875};
	xor.b64  	%rd8927, %rd8925, %rd8926;
	shf.l.wrap.b32 	%r7877, %r7871, %r7872, 25;
	shf.l.wrap.b32 	%r7878, %r7872, %r7871, 25;
	mov.b64 	%rd8928, {%r7878, %r7877};
	xor.b64  	%rd8929, %rd8927, %rd8928;
	xor.b64  	%rd8930, %rd8886, %rd8861;
	and.b64  	%rd8931, %rd8911, %rd8930;
	and.b64  	%rd8932, %rd8886, %rd8861;
	xor.b64  	%rd8933, %rd8931, %rd8932;
	add.s64 	%rd8934, %rd8929, %rd8933;
	add.s64 	%rd8935, %rd8924, %rd8836;
	add.s64 	%rd8936, %rd8934, %rd8924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7879,%dummy}, %rd8935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7880}, %rd8935;
	}
	shf.r.wrap.b32 	%r7881, %r7880, %r7879, 14;
	shf.r.wrap.b32 	%r7882, %r7879, %r7880, 14;
	mov.b64 	%rd8937, {%r7882, %r7881};
	shf.r.wrap.b32 	%r7883, %r7880, %r7879, 18;
	shf.r.wrap.b32 	%r7884, %r7879, %r7880, 18;
	mov.b64 	%rd8938, {%r7884, %r7883};
	xor.b64  	%rd8939, %rd8937, %rd8938;
	shf.l.wrap.b32 	%r7885, %r7879, %r7880, 23;
	shf.l.wrap.b32 	%r7886, %r7880, %r7879, 23;
	mov.b64 	%rd8940, {%r7886, %r7885};
	xor.b64  	%rd8941, %rd8939, %rd8940;
	and.b64  	%rd8942, %rd8935, %rd8910;
	not.b64 	%rd8943, %rd8935;
	and.b64  	%rd8944, %rd8885, %rd8943;
	or.b64  	%rd8945, %rd8942, %rd8944;
	add.s64 	%rd8946, %rd8945, %rd8860;
	add.s64 	%rd8947, %rd8946, %rd8941;
	add.s64 	%rd8948, %rd8947, %rd61;
	add.s64 	%rd8949, %rd8948, %rd7677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7887,%dummy}, %rd8936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7888}, %rd8936;
	}
	shf.r.wrap.b32 	%r7889, %r7888, %r7887, 28;
	shf.r.wrap.b32 	%r7890, %r7887, %r7888, 28;
	mov.b64 	%rd8950, {%r7890, %r7889};
	shf.l.wrap.b32 	%r7891, %r7887, %r7888, 30;
	shf.l.wrap.b32 	%r7892, %r7888, %r7887, 30;
	mov.b64 	%rd8951, {%r7892, %r7891};
	xor.b64  	%rd8952, %rd8950, %rd8951;
	shf.l.wrap.b32 	%r7893, %r7887, %r7888, 25;
	shf.l.wrap.b32 	%r7894, %r7888, %r7887, 25;
	mov.b64 	%rd8953, {%r7894, %r7893};
	xor.b64  	%rd8954, %rd8952, %rd8953;
	xor.b64  	%rd8955, %rd8911, %rd8886;
	and.b64  	%rd8956, %rd8936, %rd8955;
	and.b64  	%rd8957, %rd8911, %rd8886;
	xor.b64  	%rd8958, %rd8956, %rd8957;
	add.s64 	%rd8959, %rd8954, %rd8958;
	add.s64 	%rd8960, %rd8949, %rd8861;
	add.s64 	%rd8961, %rd8959, %rd8949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7895,%dummy}, %rd8960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7896}, %rd8960;
	}
	shf.r.wrap.b32 	%r7897, %r7896, %r7895, 14;
	shf.r.wrap.b32 	%r7898, %r7895, %r7896, 14;
	mov.b64 	%rd8962, {%r7898, %r7897};
	shf.r.wrap.b32 	%r7899, %r7896, %r7895, 18;
	shf.r.wrap.b32 	%r7900, %r7895, %r7896, 18;
	mov.b64 	%rd8963, {%r7900, %r7899};
	xor.b64  	%rd8964, %rd8962, %rd8963;
	shf.l.wrap.b32 	%r7901, %r7895, %r7896, 23;
	shf.l.wrap.b32 	%r7902, %r7896, %r7895, 23;
	mov.b64 	%rd8965, {%r7902, %r7901};
	xor.b64  	%rd8966, %rd8964, %rd8965;
	and.b64  	%rd8967, %rd8960, %rd8935;
	not.b64 	%rd8968, %rd8960;
	and.b64  	%rd8969, %rd8910, %rd8968;
	or.b64  	%rd8970, %rd8967, %rd8969;
	add.s64 	%rd8971, %rd8970, %rd8885;
	add.s64 	%rd8972, %rd8971, %rd8966;
	add.s64 	%rd8973, %rd8972, %rd62;
	add.s64 	%rd8974, %rd8973, %rd7690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7903,%dummy}, %rd8961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7904}, %rd8961;
	}
	shf.r.wrap.b32 	%r7905, %r7904, %r7903, 28;
	shf.r.wrap.b32 	%r7906, %r7903, %r7904, 28;
	mov.b64 	%rd8975, {%r7906, %r7905};
	shf.l.wrap.b32 	%r7907, %r7903, %r7904, 30;
	shf.l.wrap.b32 	%r7908, %r7904, %r7903, 30;
	mov.b64 	%rd8976, {%r7908, %r7907};
	xor.b64  	%rd8977, %rd8975, %rd8976;
	shf.l.wrap.b32 	%r7909, %r7903, %r7904, 25;
	shf.l.wrap.b32 	%r7910, %r7904, %r7903, 25;
	mov.b64 	%rd8978, {%r7910, %r7909};
	xor.b64  	%rd8979, %rd8977, %rd8978;
	xor.b64  	%rd8980, %rd8936, %rd8911;
	and.b64  	%rd8981, %rd8961, %rd8980;
	and.b64  	%rd8982, %rd8936, %rd8911;
	xor.b64  	%rd8983, %rd8981, %rd8982;
	add.s64 	%rd8984, %rd8979, %rd8983;
	add.s64 	%rd8985, %rd8974, %rd8886;
	add.s64 	%rd8986, %rd8984, %rd8974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7911,%dummy}, %rd8985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7912}, %rd8985;
	}
	shf.r.wrap.b32 	%r7913, %r7912, %r7911, 14;
	shf.r.wrap.b32 	%r7914, %r7911, %r7912, 14;
	mov.b64 	%rd8987, {%r7914, %r7913};
	shf.r.wrap.b32 	%r7915, %r7912, %r7911, 18;
	shf.r.wrap.b32 	%r7916, %r7911, %r7912, 18;
	mov.b64 	%rd8988, {%r7916, %r7915};
	xor.b64  	%rd8989, %rd8987, %rd8988;
	shf.l.wrap.b32 	%r7917, %r7911, %r7912, 23;
	shf.l.wrap.b32 	%r7918, %r7912, %r7911, 23;
	mov.b64 	%rd8990, {%r7918, %r7917};
	xor.b64  	%rd8991, %rd8989, %rd8990;
	and.b64  	%rd8992, %rd8985, %rd8960;
	not.b64 	%rd8993, %rd8985;
	and.b64  	%rd8994, %rd8935, %rd8993;
	or.b64  	%rd8995, %rd8992, %rd8994;
	add.s64 	%rd8996, %rd8995, %rd8910;
	add.s64 	%rd8997, %rd8996, %rd8991;
	add.s64 	%rd8998, %rd8997, %rd63;
	add.s64 	%rd8999, %rd8998, %rd7703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7919,%dummy}, %rd8986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7920}, %rd8986;
	}
	shf.r.wrap.b32 	%r7921, %r7920, %r7919, 28;
	shf.r.wrap.b32 	%r7922, %r7919, %r7920, 28;
	mov.b64 	%rd9000, {%r7922, %r7921};
	shf.l.wrap.b32 	%r7923, %r7919, %r7920, 30;
	shf.l.wrap.b32 	%r7924, %r7920, %r7919, 30;
	mov.b64 	%rd9001, {%r7924, %r7923};
	xor.b64  	%rd9002, %rd9000, %rd9001;
	shf.l.wrap.b32 	%r7925, %r7919, %r7920, 25;
	shf.l.wrap.b32 	%r7926, %r7920, %r7919, 25;
	mov.b64 	%rd9003, {%r7926, %r7925};
	xor.b64  	%rd9004, %rd9002, %rd9003;
	xor.b64  	%rd9005, %rd8961, %rd8936;
	and.b64  	%rd9006, %rd8986, %rd9005;
	and.b64  	%rd9007, %rd8961, %rd8936;
	xor.b64  	%rd9008, %rd9006, %rd9007;
	add.s64 	%rd9009, %rd9004, %rd9008;
	add.s64 	%rd9010, %rd8999, %rd8911;
	add.s64 	%rd9011, %rd9009, %rd8999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7927,%dummy}, %rd9010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7928}, %rd9010;
	}
	shf.r.wrap.b32 	%r7929, %r7928, %r7927, 14;
	shf.r.wrap.b32 	%r7930, %r7927, %r7928, 14;
	mov.b64 	%rd9012, {%r7930, %r7929};
	shf.r.wrap.b32 	%r7931, %r7928, %r7927, 18;
	shf.r.wrap.b32 	%r7932, %r7927, %r7928, 18;
	mov.b64 	%rd9013, {%r7932, %r7931};
	xor.b64  	%rd9014, %rd9012, %rd9013;
	shf.l.wrap.b32 	%r7933, %r7927, %r7928, 23;
	shf.l.wrap.b32 	%r7934, %r7928, %r7927, 23;
	mov.b64 	%rd9015, {%r7934, %r7933};
	xor.b64  	%rd9016, %rd9014, %rd9015;
	and.b64  	%rd9017, %rd9010, %rd8985;
	not.b64 	%rd9018, %rd9010;
	and.b64  	%rd9019, %rd8960, %rd9018;
	or.b64  	%rd9020, %rd9017, %rd9019;
	add.s64 	%rd9021, %rd9020, %rd8935;
	add.s64 	%rd9022, %rd9021, %rd9016;
	add.s64 	%rd9023, %rd9022, %rd64;
	add.s64 	%rd9024, %rd9023, %rd7716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7935,%dummy}, %rd9011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7936}, %rd9011;
	}
	shf.r.wrap.b32 	%r7937, %r7936, %r7935, 28;
	shf.r.wrap.b32 	%r7938, %r7935, %r7936, 28;
	mov.b64 	%rd9025, {%r7938, %r7937};
	shf.l.wrap.b32 	%r7939, %r7935, %r7936, 30;
	shf.l.wrap.b32 	%r7940, %r7936, %r7935, 30;
	mov.b64 	%rd9026, {%r7940, %r7939};
	xor.b64  	%rd9027, %rd9025, %rd9026;
	shf.l.wrap.b32 	%r7941, %r7935, %r7936, 25;
	shf.l.wrap.b32 	%r7942, %r7936, %r7935, 25;
	mov.b64 	%rd9028, {%r7942, %r7941};
	xor.b64  	%rd9029, %rd9027, %rd9028;
	xor.b64  	%rd9030, %rd8986, %rd8961;
	and.b64  	%rd9031, %rd9011, %rd9030;
	and.b64  	%rd9032, %rd8986, %rd8961;
	xor.b64  	%rd9033, %rd9031, %rd9032;
	add.s64 	%rd9034, %rd9029, %rd9033;
	add.s64 	%rd9035, %rd9024, %rd8936;
	add.s64 	%rd9036, %rd9034, %rd9024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7943,%dummy}, %rd9035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7944}, %rd9035;
	}
	shf.r.wrap.b32 	%r7945, %r7944, %r7943, 14;
	shf.r.wrap.b32 	%r7946, %r7943, %r7944, 14;
	mov.b64 	%rd9037, {%r7946, %r7945};
	shf.r.wrap.b32 	%r7947, %r7944, %r7943, 18;
	shf.r.wrap.b32 	%r7948, %r7943, %r7944, 18;
	mov.b64 	%rd9038, {%r7948, %r7947};
	xor.b64  	%rd9039, %rd9037, %rd9038;
	shf.l.wrap.b32 	%r7949, %r7943, %r7944, 23;
	shf.l.wrap.b32 	%r7950, %r7944, %r7943, 23;
	mov.b64 	%rd9040, {%r7950, %r7949};
	xor.b64  	%rd9041, %rd9039, %rd9040;
	and.b64  	%rd9042, %rd9035, %rd9010;
	not.b64 	%rd9043, %rd9035;
	and.b64  	%rd9044, %rd8985, %rd9043;
	or.b64  	%rd9045, %rd9042, %rd9044;
	add.s64 	%rd9046, %rd9045, %rd8960;
	add.s64 	%rd9047, %rd9046, %rd9041;
	add.s64 	%rd9048, %rd9047, %rd65;
	add.s64 	%rd9049, %rd9048, %rd7729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7951,%dummy}, %rd9036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7952}, %rd9036;
	}
	shf.r.wrap.b32 	%r7953, %r7952, %r7951, 28;
	shf.r.wrap.b32 	%r7954, %r7951, %r7952, 28;
	mov.b64 	%rd9050, {%r7954, %r7953};
	shf.l.wrap.b32 	%r7955, %r7951, %r7952, 30;
	shf.l.wrap.b32 	%r7956, %r7952, %r7951, 30;
	mov.b64 	%rd9051, {%r7956, %r7955};
	xor.b64  	%rd9052, %rd9050, %rd9051;
	shf.l.wrap.b32 	%r7957, %r7951, %r7952, 25;
	shf.l.wrap.b32 	%r7958, %r7952, %r7951, 25;
	mov.b64 	%rd9053, {%r7958, %r7957};
	xor.b64  	%rd9054, %rd9052, %rd9053;
	xor.b64  	%rd9055, %rd9011, %rd8986;
	and.b64  	%rd9056, %rd9036, %rd9055;
	and.b64  	%rd9057, %rd9011, %rd8986;
	xor.b64  	%rd9058, %rd9056, %rd9057;
	add.s64 	%rd9059, %rd9054, %rd9058;
	add.s64 	%rd9060, %rd9049, %rd8961;
	add.s64 	%rd9061, %rd9059, %rd9049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7959,%dummy}, %rd9060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7960}, %rd9060;
	}
	shf.r.wrap.b32 	%r7961, %r7960, %r7959, 14;
	shf.r.wrap.b32 	%r7962, %r7959, %r7960, 14;
	mov.b64 	%rd9062, {%r7962, %r7961};
	shf.r.wrap.b32 	%r7963, %r7960, %r7959, 18;
	shf.r.wrap.b32 	%r7964, %r7959, %r7960, 18;
	mov.b64 	%rd9063, {%r7964, %r7963};
	xor.b64  	%rd9064, %rd9062, %rd9063;
	shf.l.wrap.b32 	%r7965, %r7959, %r7960, 23;
	shf.l.wrap.b32 	%r7966, %r7960, %r7959, 23;
	mov.b64 	%rd9065, {%r7966, %r7965};
	xor.b64  	%rd9066, %rd9064, %rd9065;
	and.b64  	%rd9067, %rd9060, %rd9035;
	not.b64 	%rd9068, %rd9060;
	and.b64  	%rd9069, %rd9010, %rd9068;
	or.b64  	%rd9070, %rd9067, %rd9069;
	add.s64 	%rd9071, %rd9070, %rd8985;
	add.s64 	%rd9072, %rd9071, %rd9066;
	add.s64 	%rd9073, %rd9072, %rd66;
	add.s64 	%rd9074, %rd9073, %rd7742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7967,%dummy}, %rd9061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7968}, %rd9061;
	}
	shf.r.wrap.b32 	%r7969, %r7968, %r7967, 28;
	shf.r.wrap.b32 	%r7970, %r7967, %r7968, 28;
	mov.b64 	%rd9075, {%r7970, %r7969};
	shf.l.wrap.b32 	%r7971, %r7967, %r7968, 30;
	shf.l.wrap.b32 	%r7972, %r7968, %r7967, 30;
	mov.b64 	%rd9076, {%r7972, %r7971};
	xor.b64  	%rd9077, %rd9075, %rd9076;
	shf.l.wrap.b32 	%r7973, %r7967, %r7968, 25;
	shf.l.wrap.b32 	%r7974, %r7968, %r7967, 25;
	mov.b64 	%rd9078, {%r7974, %r7973};
	xor.b64  	%rd9079, %rd9077, %rd9078;
	xor.b64  	%rd9080, %rd9036, %rd9011;
	and.b64  	%rd9081, %rd9061, %rd9080;
	and.b64  	%rd9082, %rd9036, %rd9011;
	xor.b64  	%rd9083, %rd9081, %rd9082;
	add.s64 	%rd9084, %rd9079, %rd9083;
	add.s64 	%rd9085, %rd9074, %rd8986;
	add.s64 	%rd9086, %rd9084, %rd9074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7975,%dummy}, %rd9085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7976}, %rd9085;
	}
	shf.r.wrap.b32 	%r7977, %r7976, %r7975, 14;
	shf.r.wrap.b32 	%r7978, %r7975, %r7976, 14;
	mov.b64 	%rd9087, {%r7978, %r7977};
	shf.r.wrap.b32 	%r7979, %r7976, %r7975, 18;
	shf.r.wrap.b32 	%r7980, %r7975, %r7976, 18;
	mov.b64 	%rd9088, {%r7980, %r7979};
	xor.b64  	%rd9089, %rd9087, %rd9088;
	shf.l.wrap.b32 	%r7981, %r7975, %r7976, 23;
	shf.l.wrap.b32 	%r7982, %r7976, %r7975, 23;
	mov.b64 	%rd9090, {%r7982, %r7981};
	xor.b64  	%rd9091, %rd9089, %rd9090;
	and.b64  	%rd9092, %rd9085, %rd9060;
	not.b64 	%rd9093, %rd9085;
	and.b64  	%rd9094, %rd9035, %rd9093;
	or.b64  	%rd9095, %rd9092, %rd9094;
	add.s64 	%rd9096, %rd9095, %rd9010;
	add.s64 	%rd9097, %rd9096, %rd9091;
	add.s64 	%rd9098, %rd9097, %rd67;
	add.s64 	%rd9099, %rd9098, %rd7755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7983,%dummy}, %rd9086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7984}, %rd9086;
	}
	shf.r.wrap.b32 	%r7985, %r7984, %r7983, 28;
	shf.r.wrap.b32 	%r7986, %r7983, %r7984, 28;
	mov.b64 	%rd9100, {%r7986, %r7985};
	shf.l.wrap.b32 	%r7987, %r7983, %r7984, 30;
	shf.l.wrap.b32 	%r7988, %r7984, %r7983, 30;
	mov.b64 	%rd9101, {%r7988, %r7987};
	xor.b64  	%rd9102, %rd9100, %rd9101;
	shf.l.wrap.b32 	%r7989, %r7983, %r7984, 25;
	shf.l.wrap.b32 	%r7990, %r7984, %r7983, 25;
	mov.b64 	%rd9103, {%r7990, %r7989};
	xor.b64  	%rd9104, %rd9102, %rd9103;
	xor.b64  	%rd9105, %rd9061, %rd9036;
	and.b64  	%rd9106, %rd9086, %rd9105;
	and.b64  	%rd9107, %rd9061, %rd9036;
	xor.b64  	%rd9108, %rd9106, %rd9107;
	add.s64 	%rd9109, %rd9104, %rd9108;
	add.s64 	%rd9110, %rd9099, %rd9011;
	add.s64 	%rd9111, %rd9109, %rd9099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7991,%dummy}, %rd9110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7992}, %rd9110;
	}
	shf.r.wrap.b32 	%r7993, %r7992, %r7991, 14;
	shf.r.wrap.b32 	%r7994, %r7991, %r7992, 14;
	mov.b64 	%rd9112, {%r7994, %r7993};
	shf.r.wrap.b32 	%r7995, %r7992, %r7991, 18;
	shf.r.wrap.b32 	%r7996, %r7991, %r7992, 18;
	mov.b64 	%rd9113, {%r7996, %r7995};
	xor.b64  	%rd9114, %rd9112, %rd9113;
	shf.l.wrap.b32 	%r7997, %r7991, %r7992, 23;
	shf.l.wrap.b32 	%r7998, %r7992, %r7991, 23;
	mov.b64 	%rd9115, {%r7998, %r7997};
	xor.b64  	%rd9116, %rd9114, %rd9115;
	and.b64  	%rd9117, %rd9110, %rd9085;
	not.b64 	%rd9118, %rd9110;
	and.b64  	%rd9119, %rd9060, %rd9118;
	or.b64  	%rd9120, %rd9117, %rd9119;
	add.s64 	%rd9121, %rd9120, %rd9035;
	add.s64 	%rd9122, %rd9121, %rd9116;
	add.s64 	%rd9123, %rd9122, %rd68;
	add.s64 	%rd9124, %rd9123, %rd7768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7999,%dummy}, %rd9111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8000}, %rd9111;
	}
	shf.r.wrap.b32 	%r8001, %r8000, %r7999, 28;
	shf.r.wrap.b32 	%r8002, %r7999, %r8000, 28;
	mov.b64 	%rd9125, {%r8002, %r8001};
	shf.l.wrap.b32 	%r8003, %r7999, %r8000, 30;
	shf.l.wrap.b32 	%r8004, %r8000, %r7999, 30;
	mov.b64 	%rd9126, {%r8004, %r8003};
	xor.b64  	%rd9127, %rd9125, %rd9126;
	shf.l.wrap.b32 	%r8005, %r7999, %r8000, 25;
	shf.l.wrap.b32 	%r8006, %r8000, %r7999, 25;
	mov.b64 	%rd9128, {%r8006, %r8005};
	xor.b64  	%rd9129, %rd9127, %rd9128;
	xor.b64  	%rd9130, %rd9086, %rd9061;
	and.b64  	%rd9131, %rd9111, %rd9130;
	and.b64  	%rd9132, %rd9086, %rd9061;
	xor.b64  	%rd9133, %rd9131, %rd9132;
	add.s64 	%rd9134, %rd9129, %rd9133;
	add.s64 	%rd9135, %rd9124, %rd9036;
	add.s64 	%rd9136, %rd9134, %rd9124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8007,%dummy}, %rd9135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8008}, %rd9135;
	}
	shf.r.wrap.b32 	%r8009, %r8008, %r8007, 14;
	shf.r.wrap.b32 	%r8010, %r8007, %r8008, 14;
	mov.b64 	%rd9137, {%r8010, %r8009};
	shf.r.wrap.b32 	%r8011, %r8008, %r8007, 18;
	shf.r.wrap.b32 	%r8012, %r8007, %r8008, 18;
	mov.b64 	%rd9138, {%r8012, %r8011};
	xor.b64  	%rd9139, %rd9137, %rd9138;
	shf.l.wrap.b32 	%r8013, %r8007, %r8008, 23;
	shf.l.wrap.b32 	%r8014, %r8008, %r8007, 23;
	mov.b64 	%rd9140, {%r8014, %r8013};
	xor.b64  	%rd9141, %rd9139, %rd9140;
	and.b64  	%rd9142, %rd9135, %rd9110;
	not.b64 	%rd9143, %rd9135;
	and.b64  	%rd9144, %rd9085, %rd9143;
	or.b64  	%rd9145, %rd9142, %rd9144;
	add.s64 	%rd9146, %rd9145, %rd9060;
	add.s64 	%rd9147, %rd9146, %rd9141;
	add.s64 	%rd9148, %rd9147, %rd69;
	add.s64 	%rd9149, %rd9148, %rd7781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8015,%dummy}, %rd9136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8016}, %rd9136;
	}
	shf.r.wrap.b32 	%r8017, %r8016, %r8015, 28;
	shf.r.wrap.b32 	%r8018, %r8015, %r8016, 28;
	mov.b64 	%rd9150, {%r8018, %r8017};
	shf.l.wrap.b32 	%r8019, %r8015, %r8016, 30;
	shf.l.wrap.b32 	%r8020, %r8016, %r8015, 30;
	mov.b64 	%rd9151, {%r8020, %r8019};
	xor.b64  	%rd9152, %rd9150, %rd9151;
	shf.l.wrap.b32 	%r8021, %r8015, %r8016, 25;
	shf.l.wrap.b32 	%r8022, %r8016, %r8015, 25;
	mov.b64 	%rd9153, {%r8022, %r8021};
	xor.b64  	%rd9154, %rd9152, %rd9153;
	xor.b64  	%rd9155, %rd9111, %rd9086;
	and.b64  	%rd9156, %rd9136, %rd9155;
	and.b64  	%rd9157, %rd9111, %rd9086;
	xor.b64  	%rd9158, %rd9156, %rd9157;
	add.s64 	%rd9159, %rd9154, %rd9158;
	add.s64 	%rd9160, %rd9149, %rd9061;
	add.s64 	%rd9161, %rd9159, %rd9149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8023,%dummy}, %rd9160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8024}, %rd9160;
	}
	shf.r.wrap.b32 	%r8025, %r8024, %r8023, 14;
	shf.r.wrap.b32 	%r8026, %r8023, %r8024, 14;
	mov.b64 	%rd9162, {%r8026, %r8025};
	shf.r.wrap.b32 	%r8027, %r8024, %r8023, 18;
	shf.r.wrap.b32 	%r8028, %r8023, %r8024, 18;
	mov.b64 	%rd9163, {%r8028, %r8027};
	xor.b64  	%rd9164, %rd9162, %rd9163;
	shf.l.wrap.b32 	%r8029, %r8023, %r8024, 23;
	shf.l.wrap.b32 	%r8030, %r8024, %r8023, 23;
	mov.b64 	%rd9165, {%r8030, %r8029};
	xor.b64  	%rd9166, %rd9164, %rd9165;
	and.b64  	%rd9167, %rd9160, %rd9135;
	not.b64 	%rd9168, %rd9160;
	and.b64  	%rd9169, %rd9110, %rd9168;
	or.b64  	%rd9170, %rd9167, %rd9169;
	add.s64 	%rd9171, %rd9170, %rd9085;
	add.s64 	%rd9172, %rd9171, %rd9166;
	add.s64 	%rd9173, %rd9172, %rd70;
	add.s64 	%rd9174, %rd9173, %rd7794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8031,%dummy}, %rd9161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8032}, %rd9161;
	}
	shf.r.wrap.b32 	%r8033, %r8032, %r8031, 28;
	shf.r.wrap.b32 	%r8034, %r8031, %r8032, 28;
	mov.b64 	%rd9175, {%r8034, %r8033};
	shf.l.wrap.b32 	%r8035, %r8031, %r8032, 30;
	shf.l.wrap.b32 	%r8036, %r8032, %r8031, 30;
	mov.b64 	%rd9176, {%r8036, %r8035};
	xor.b64  	%rd9177, %rd9175, %rd9176;
	shf.l.wrap.b32 	%r8037, %r8031, %r8032, 25;
	shf.l.wrap.b32 	%r8038, %r8032, %r8031, 25;
	mov.b64 	%rd9178, {%r8038, %r8037};
	xor.b64  	%rd9179, %rd9177, %rd9178;
	xor.b64  	%rd9180, %rd9136, %rd9111;
	and.b64  	%rd9181, %rd9161, %rd9180;
	and.b64  	%rd9182, %rd9136, %rd9111;
	xor.b64  	%rd9183, %rd9181, %rd9182;
	add.s64 	%rd9184, %rd9179, %rd9183;
	add.s64 	%rd9185, %rd9174, %rd9086;
	add.s64 	%rd9186, %rd9184, %rd9174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8039,%dummy}, %rd9185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8040}, %rd9185;
	}
	shf.r.wrap.b32 	%r8041, %r8040, %r8039, 14;
	shf.r.wrap.b32 	%r8042, %r8039, %r8040, 14;
	mov.b64 	%rd9187, {%r8042, %r8041};
	shf.r.wrap.b32 	%r8043, %r8040, %r8039, 18;
	shf.r.wrap.b32 	%r8044, %r8039, %r8040, 18;
	mov.b64 	%rd9188, {%r8044, %r8043};
	xor.b64  	%rd9189, %rd9187, %rd9188;
	shf.l.wrap.b32 	%r8045, %r8039, %r8040, 23;
	shf.l.wrap.b32 	%r8046, %r8040, %r8039, 23;
	mov.b64 	%rd9190, {%r8046, %r8045};
	xor.b64  	%rd9191, %rd9189, %rd9190;
	and.b64  	%rd9192, %rd9185, %rd9160;
	not.b64 	%rd9193, %rd9185;
	and.b64  	%rd9194, %rd9135, %rd9193;
	or.b64  	%rd9195, %rd9192, %rd9194;
	add.s64 	%rd9196, %rd9195, %rd9110;
	add.s64 	%rd9197, %rd9196, %rd9191;
	add.s64 	%rd9198, %rd9197, %rd71;
	add.s64 	%rd9199, %rd9198, %rd7807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8047,%dummy}, %rd9186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8048}, %rd9186;
	}
	shf.r.wrap.b32 	%r8049, %r8048, %r8047, 28;
	shf.r.wrap.b32 	%r8050, %r8047, %r8048, 28;
	mov.b64 	%rd9200, {%r8050, %r8049};
	shf.l.wrap.b32 	%r8051, %r8047, %r8048, 30;
	shf.l.wrap.b32 	%r8052, %r8048, %r8047, 30;
	mov.b64 	%rd9201, {%r8052, %r8051};
	xor.b64  	%rd9202, %rd9200, %rd9201;
	shf.l.wrap.b32 	%r8053, %r8047, %r8048, 25;
	shf.l.wrap.b32 	%r8054, %r8048, %r8047, 25;
	mov.b64 	%rd9203, {%r8054, %r8053};
	xor.b64  	%rd9204, %rd9202, %rd9203;
	xor.b64  	%rd9205, %rd9161, %rd9136;
	and.b64  	%rd9206, %rd9186, %rd9205;
	and.b64  	%rd9207, %rd9161, %rd9136;
	xor.b64  	%rd9208, %rd9206, %rd9207;
	add.s64 	%rd9209, %rd9204, %rd9208;
	add.s64 	%rd9210, %rd9199, %rd9111;
	add.s64 	%rd9211, %rd9209, %rd9199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8055,%dummy}, %rd9210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8056}, %rd9210;
	}
	shf.r.wrap.b32 	%r8057, %r8056, %r8055, 14;
	shf.r.wrap.b32 	%r8058, %r8055, %r8056, 14;
	mov.b64 	%rd9212, {%r8058, %r8057};
	shf.r.wrap.b32 	%r8059, %r8056, %r8055, 18;
	shf.r.wrap.b32 	%r8060, %r8055, %r8056, 18;
	mov.b64 	%rd9213, {%r8060, %r8059};
	xor.b64  	%rd9214, %rd9212, %rd9213;
	shf.l.wrap.b32 	%r8061, %r8055, %r8056, 23;
	shf.l.wrap.b32 	%r8062, %r8056, %r8055, 23;
	mov.b64 	%rd9215, {%r8062, %r8061};
	xor.b64  	%rd9216, %rd9214, %rd9215;
	and.b64  	%rd9217, %rd9210, %rd9185;
	not.b64 	%rd9218, %rd9210;
	and.b64  	%rd9219, %rd9160, %rd9218;
	or.b64  	%rd9220, %rd9217, %rd9219;
	add.s64 	%rd9221, %rd9220, %rd9135;
	add.s64 	%rd9222, %rd9221, %rd9216;
	add.s64 	%rd9223, %rd9222, %rd72;
	add.s64 	%rd9224, %rd9223, %rd7820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8063,%dummy}, %rd9211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8064}, %rd9211;
	}
	shf.r.wrap.b32 	%r8065, %r8064, %r8063, 28;
	shf.r.wrap.b32 	%r8066, %r8063, %r8064, 28;
	mov.b64 	%rd9225, {%r8066, %r8065};
	shf.l.wrap.b32 	%r8067, %r8063, %r8064, 30;
	shf.l.wrap.b32 	%r8068, %r8064, %r8063, 30;
	mov.b64 	%rd9226, {%r8068, %r8067};
	xor.b64  	%rd9227, %rd9225, %rd9226;
	shf.l.wrap.b32 	%r8069, %r8063, %r8064, 25;
	shf.l.wrap.b32 	%r8070, %r8064, %r8063, 25;
	mov.b64 	%rd9228, {%r8070, %r8069};
	xor.b64  	%rd9229, %rd9227, %rd9228;
	xor.b64  	%rd9230, %rd9186, %rd9161;
	and.b64  	%rd9231, %rd9211, %rd9230;
	and.b64  	%rd9232, %rd9186, %rd9161;
	xor.b64  	%rd9233, %rd9231, %rd9232;
	add.s64 	%rd9234, %rd9229, %rd9233;
	add.s64 	%rd9235, %rd9224, %rd9136;
	add.s64 	%rd9236, %rd9234, %rd9224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8071,%dummy}, %rd9235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8072}, %rd9235;
	}
	shf.r.wrap.b32 	%r8073, %r8072, %r8071, 14;
	shf.r.wrap.b32 	%r8074, %r8071, %r8072, 14;
	mov.b64 	%rd9237, {%r8074, %r8073};
	shf.r.wrap.b32 	%r8075, %r8072, %r8071, 18;
	shf.r.wrap.b32 	%r8076, %r8071, %r8072, 18;
	mov.b64 	%rd9238, {%r8076, %r8075};
	xor.b64  	%rd9239, %rd9237, %rd9238;
	shf.l.wrap.b32 	%r8077, %r8071, %r8072, 23;
	shf.l.wrap.b32 	%r8078, %r8072, %r8071, 23;
	mov.b64 	%rd9240, {%r8078, %r8077};
	xor.b64  	%rd9241, %rd9239, %rd9240;
	and.b64  	%rd9242, %rd9235, %rd9210;
	not.b64 	%rd9243, %rd9235;
	and.b64  	%rd9244, %rd9185, %rd9243;
	or.b64  	%rd9245, %rd9242, %rd9244;
	add.s64 	%rd9246, %rd9245, %rd9160;
	add.s64 	%rd9247, %rd9246, %rd9241;
	add.s64 	%rd9248, %rd9247, %rd73;
	add.s64 	%rd9249, %rd9248, %rd7833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8079,%dummy}, %rd9236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8080}, %rd9236;
	}
	shf.r.wrap.b32 	%r8081, %r8080, %r8079, 28;
	shf.r.wrap.b32 	%r8082, %r8079, %r8080, 28;
	mov.b64 	%rd9250, {%r8082, %r8081};
	shf.l.wrap.b32 	%r8083, %r8079, %r8080, 30;
	shf.l.wrap.b32 	%r8084, %r8080, %r8079, 30;
	mov.b64 	%rd9251, {%r8084, %r8083};
	xor.b64  	%rd9252, %rd9250, %rd9251;
	shf.l.wrap.b32 	%r8085, %r8079, %r8080, 25;
	shf.l.wrap.b32 	%r8086, %r8080, %r8079, 25;
	mov.b64 	%rd9253, {%r8086, %r8085};
	xor.b64  	%rd9254, %rd9252, %rd9253;
	xor.b64  	%rd9255, %rd9211, %rd9186;
	and.b64  	%rd9256, %rd9236, %rd9255;
	and.b64  	%rd9257, %rd9211, %rd9186;
	xor.b64  	%rd9258, %rd9256, %rd9257;
	add.s64 	%rd9259, %rd9254, %rd9258;
	add.s64 	%rd9260, %rd9249, %rd9161;
	add.s64 	%rd9261, %rd9259, %rd9249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8087,%dummy}, %rd9260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8088}, %rd9260;
	}
	shf.r.wrap.b32 	%r8089, %r8088, %r8087, 14;
	shf.r.wrap.b32 	%r8090, %r8087, %r8088, 14;
	mov.b64 	%rd9262, {%r8090, %r8089};
	shf.r.wrap.b32 	%r8091, %r8088, %r8087, 18;
	shf.r.wrap.b32 	%r8092, %r8087, %r8088, 18;
	mov.b64 	%rd9263, {%r8092, %r8091};
	xor.b64  	%rd9264, %rd9262, %rd9263;
	shf.l.wrap.b32 	%r8093, %r8087, %r8088, 23;
	shf.l.wrap.b32 	%r8094, %r8088, %r8087, 23;
	mov.b64 	%rd9265, {%r8094, %r8093};
	xor.b64  	%rd9266, %rd9264, %rd9265;
	and.b64  	%rd9267, %rd9260, %rd9235;
	not.b64 	%rd9268, %rd9260;
	and.b64  	%rd9269, %rd9210, %rd9268;
	or.b64  	%rd9270, %rd9267, %rd9269;
	add.s64 	%rd9271, %rd9270, %rd9185;
	add.s64 	%rd9272, %rd9271, %rd9266;
	add.s64 	%rd9273, %rd9272, %rd74;
	add.s64 	%rd9274, %rd9273, %rd7846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8095,%dummy}, %rd9261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8096}, %rd9261;
	}
	shf.r.wrap.b32 	%r8097, %r8096, %r8095, 28;
	shf.r.wrap.b32 	%r8098, %r8095, %r8096, 28;
	mov.b64 	%rd9275, {%r8098, %r8097};
	shf.l.wrap.b32 	%r8099, %r8095, %r8096, 30;
	shf.l.wrap.b32 	%r8100, %r8096, %r8095, 30;
	mov.b64 	%rd9276, {%r8100, %r8099};
	xor.b64  	%rd9277, %rd9275, %rd9276;
	shf.l.wrap.b32 	%r8101, %r8095, %r8096, 25;
	shf.l.wrap.b32 	%r8102, %r8096, %r8095, 25;
	mov.b64 	%rd9278, {%r8102, %r8101};
	xor.b64  	%rd9279, %rd9277, %rd9278;
	xor.b64  	%rd9280, %rd9236, %rd9211;
	and.b64  	%rd9281, %rd9261, %rd9280;
	and.b64  	%rd9282, %rd9236, %rd9211;
	xor.b64  	%rd9283, %rd9281, %rd9282;
	add.s64 	%rd9284, %rd9279, %rd9283;
	add.s64 	%rd9285, %rd9274, %rd9186;
	add.s64 	%rd9286, %rd9284, %rd9274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8103,%dummy}, %rd9285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8104}, %rd9285;
	}
	shf.r.wrap.b32 	%r8105, %r8104, %r8103, 14;
	shf.r.wrap.b32 	%r8106, %r8103, %r8104, 14;
	mov.b64 	%rd9287, {%r8106, %r8105};
	shf.r.wrap.b32 	%r8107, %r8104, %r8103, 18;
	shf.r.wrap.b32 	%r8108, %r8103, %r8104, 18;
	mov.b64 	%rd9288, {%r8108, %r8107};
	xor.b64  	%rd9289, %rd9287, %rd9288;
	shf.l.wrap.b32 	%r8109, %r8103, %r8104, 23;
	shf.l.wrap.b32 	%r8110, %r8104, %r8103, 23;
	mov.b64 	%rd9290, {%r8110, %r8109};
	xor.b64  	%rd9291, %rd9289, %rd9290;
	and.b64  	%rd9292, %rd9285, %rd9260;
	not.b64 	%rd9293, %rd9285;
	and.b64  	%rd9294, %rd9235, %rd9293;
	or.b64  	%rd9295, %rd9292, %rd9294;
	add.s64 	%rd9296, %rd9295, %rd9210;
	add.s64 	%rd9297, %rd9296, %rd9291;
	add.s64 	%rd9298, %rd9297, %rd75;
	add.s64 	%rd9299, %rd9298, %rd7859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8111,%dummy}, %rd9286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8112}, %rd9286;
	}
	shf.r.wrap.b32 	%r8113, %r8112, %r8111, 28;
	shf.r.wrap.b32 	%r8114, %r8111, %r8112, 28;
	mov.b64 	%rd9300, {%r8114, %r8113};
	shf.l.wrap.b32 	%r8115, %r8111, %r8112, 30;
	shf.l.wrap.b32 	%r8116, %r8112, %r8111, 30;
	mov.b64 	%rd9301, {%r8116, %r8115};
	xor.b64  	%rd9302, %rd9300, %rd9301;
	shf.l.wrap.b32 	%r8117, %r8111, %r8112, 25;
	shf.l.wrap.b32 	%r8118, %r8112, %r8111, 25;
	mov.b64 	%rd9303, {%r8118, %r8117};
	xor.b64  	%rd9304, %rd9302, %rd9303;
	xor.b64  	%rd9305, %rd9261, %rd9236;
	and.b64  	%rd9306, %rd9286, %rd9305;
	and.b64  	%rd9307, %rd9261, %rd9236;
	xor.b64  	%rd9308, %rd9306, %rd9307;
	add.s64 	%rd9309, %rd9304, %rd9308;
	add.s64 	%rd9310, %rd9299, %rd9211;
	add.s64 	%rd9311, %rd9309, %rd9299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8119,%dummy}, %rd9310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8120}, %rd9310;
	}
	shf.r.wrap.b32 	%r8121, %r8120, %r8119, 14;
	shf.r.wrap.b32 	%r8122, %r8119, %r8120, 14;
	mov.b64 	%rd9312, {%r8122, %r8121};
	shf.r.wrap.b32 	%r8123, %r8120, %r8119, 18;
	shf.r.wrap.b32 	%r8124, %r8119, %r8120, 18;
	mov.b64 	%rd9313, {%r8124, %r8123};
	xor.b64  	%rd9314, %rd9312, %rd9313;
	shf.l.wrap.b32 	%r8125, %r8119, %r8120, 23;
	shf.l.wrap.b32 	%r8126, %r8120, %r8119, 23;
	mov.b64 	%rd9315, {%r8126, %r8125};
	xor.b64  	%rd9316, %rd9314, %rd9315;
	and.b64  	%rd9317, %rd9310, %rd9285;
	not.b64 	%rd9318, %rd9310;
	and.b64  	%rd9319, %rd9260, %rd9318;
	or.b64  	%rd9320, %rd9317, %rd9319;
	add.s64 	%rd9321, %rd9320, %rd9235;
	add.s64 	%rd9322, %rd9321, %rd9316;
	add.s64 	%rd9323, %rd9322, %rd76;
	add.s64 	%rd9324, %rd9323, %rd7872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8127,%dummy}, %rd9311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8128}, %rd9311;
	}
	shf.r.wrap.b32 	%r8129, %r8128, %r8127, 28;
	shf.r.wrap.b32 	%r8130, %r8127, %r8128, 28;
	mov.b64 	%rd9325, {%r8130, %r8129};
	shf.l.wrap.b32 	%r8131, %r8127, %r8128, 30;
	shf.l.wrap.b32 	%r8132, %r8128, %r8127, 30;
	mov.b64 	%rd9326, {%r8132, %r8131};
	xor.b64  	%rd9327, %rd9325, %rd9326;
	shf.l.wrap.b32 	%r8133, %r8127, %r8128, 25;
	shf.l.wrap.b32 	%r8134, %r8128, %r8127, 25;
	mov.b64 	%rd9328, {%r8134, %r8133};
	xor.b64  	%rd9329, %rd9327, %rd9328;
	xor.b64  	%rd9330, %rd9286, %rd9261;
	and.b64  	%rd9331, %rd9311, %rd9330;
	and.b64  	%rd9332, %rd9286, %rd9261;
	xor.b64  	%rd9333, %rd9331, %rd9332;
	add.s64 	%rd9334, %rd9329, %rd9333;
	add.s64 	%rd9335, %rd9324, %rd9236;
	add.s64 	%rd9336, %rd9334, %rd9324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8135,%dummy}, %rd9335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8136}, %rd9335;
	}
	shf.r.wrap.b32 	%r8137, %r8136, %r8135, 14;
	shf.r.wrap.b32 	%r8138, %r8135, %r8136, 14;
	mov.b64 	%rd9337, {%r8138, %r8137};
	shf.r.wrap.b32 	%r8139, %r8136, %r8135, 18;
	shf.r.wrap.b32 	%r8140, %r8135, %r8136, 18;
	mov.b64 	%rd9338, {%r8140, %r8139};
	xor.b64  	%rd9339, %rd9337, %rd9338;
	shf.l.wrap.b32 	%r8141, %r8135, %r8136, 23;
	shf.l.wrap.b32 	%r8142, %r8136, %r8135, 23;
	mov.b64 	%rd9340, {%r8142, %r8141};
	xor.b64  	%rd9341, %rd9339, %rd9340;
	and.b64  	%rd9342, %rd9335, %rd9310;
	not.b64 	%rd9343, %rd9335;
	and.b64  	%rd9344, %rd9285, %rd9343;
	or.b64  	%rd9345, %rd9342, %rd9344;
	add.s64 	%rd9346, %rd9345, %rd9260;
	add.s64 	%rd9347, %rd9346, %rd9341;
	add.s64 	%rd9348, %rd9347, %rd77;
	add.s64 	%rd9349, %rd9348, %rd7885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8143,%dummy}, %rd9336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8144}, %rd9336;
	}
	shf.r.wrap.b32 	%r8145, %r8144, %r8143, 28;
	shf.r.wrap.b32 	%r8146, %r8143, %r8144, 28;
	mov.b64 	%rd9350, {%r8146, %r8145};
	shf.l.wrap.b32 	%r8147, %r8143, %r8144, 30;
	shf.l.wrap.b32 	%r8148, %r8144, %r8143, 30;
	mov.b64 	%rd9351, {%r8148, %r8147};
	xor.b64  	%rd9352, %rd9350, %rd9351;
	shf.l.wrap.b32 	%r8149, %r8143, %r8144, 25;
	shf.l.wrap.b32 	%r8150, %r8144, %r8143, 25;
	mov.b64 	%rd9353, {%r8150, %r8149};
	xor.b64  	%rd9354, %rd9352, %rd9353;
	xor.b64  	%rd9355, %rd9311, %rd9286;
	and.b64  	%rd9356, %rd9336, %rd9355;
	and.b64  	%rd9357, %rd9311, %rd9286;
	xor.b64  	%rd9358, %rd9356, %rd9357;
	add.s64 	%rd9359, %rd9354, %rd9358;
	add.s64 	%rd9360, %rd9349, %rd9261;
	add.s64 	%rd9361, %rd9359, %rd9349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8151,%dummy}, %rd9360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8152}, %rd9360;
	}
	shf.r.wrap.b32 	%r8153, %r8152, %r8151, 14;
	shf.r.wrap.b32 	%r8154, %r8151, %r8152, 14;
	mov.b64 	%rd9362, {%r8154, %r8153};
	shf.r.wrap.b32 	%r8155, %r8152, %r8151, 18;
	shf.r.wrap.b32 	%r8156, %r8151, %r8152, 18;
	mov.b64 	%rd9363, {%r8156, %r8155};
	xor.b64  	%rd9364, %rd9362, %rd9363;
	shf.l.wrap.b32 	%r8157, %r8151, %r8152, 23;
	shf.l.wrap.b32 	%r8158, %r8152, %r8151, 23;
	mov.b64 	%rd9365, {%r8158, %r8157};
	xor.b64  	%rd9366, %rd9364, %rd9365;
	and.b64  	%rd9367, %rd9360, %rd9335;
	not.b64 	%rd9368, %rd9360;
	and.b64  	%rd9369, %rd9310, %rd9368;
	or.b64  	%rd9370, %rd9367, %rd9369;
	add.s64 	%rd9371, %rd9370, %rd9285;
	add.s64 	%rd9372, %rd9371, %rd9366;
	add.s64 	%rd9373, %rd9372, %rd78;
	add.s64 	%rd9374, %rd9373, %rd7898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8159,%dummy}, %rd9361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8160}, %rd9361;
	}
	shf.r.wrap.b32 	%r8161, %r8160, %r8159, 28;
	shf.r.wrap.b32 	%r8162, %r8159, %r8160, 28;
	mov.b64 	%rd9375, {%r8162, %r8161};
	shf.l.wrap.b32 	%r8163, %r8159, %r8160, 30;
	shf.l.wrap.b32 	%r8164, %r8160, %r8159, 30;
	mov.b64 	%rd9376, {%r8164, %r8163};
	xor.b64  	%rd9377, %rd9375, %rd9376;
	shf.l.wrap.b32 	%r8165, %r8159, %r8160, 25;
	shf.l.wrap.b32 	%r8166, %r8160, %r8159, 25;
	mov.b64 	%rd9378, {%r8166, %r8165};
	xor.b64  	%rd9379, %rd9377, %rd9378;
	xor.b64  	%rd9380, %rd9336, %rd9311;
	and.b64  	%rd9381, %rd9361, %rd9380;
	and.b64  	%rd9382, %rd9336, %rd9311;
	xor.b64  	%rd9383, %rd9381, %rd9382;
	add.s64 	%rd9384, %rd9379, %rd9383;
	add.s64 	%rd9385, %rd9374, %rd9286;
	add.s64 	%rd9386, %rd9384, %rd9374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8167,%dummy}, %rd9385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8168}, %rd9385;
	}
	shf.r.wrap.b32 	%r8169, %r8168, %r8167, 14;
	shf.r.wrap.b32 	%r8170, %r8167, %r8168, 14;
	mov.b64 	%rd9387, {%r8170, %r8169};
	shf.r.wrap.b32 	%r8171, %r8168, %r8167, 18;
	shf.r.wrap.b32 	%r8172, %r8167, %r8168, 18;
	mov.b64 	%rd9388, {%r8172, %r8171};
	xor.b64  	%rd9389, %rd9387, %rd9388;
	shf.l.wrap.b32 	%r8173, %r8167, %r8168, 23;
	shf.l.wrap.b32 	%r8174, %r8168, %r8167, 23;
	mov.b64 	%rd9390, {%r8174, %r8173};
	xor.b64  	%rd9391, %rd9389, %rd9390;
	and.b64  	%rd9392, %rd9385, %rd9360;
	not.b64 	%rd9393, %rd9385;
	and.b64  	%rd9394, %rd9335, %rd9393;
	or.b64  	%rd9395, %rd9392, %rd9394;
	add.s64 	%rd9396, %rd9395, %rd9310;
	add.s64 	%rd9397, %rd9396, %rd9391;
	add.s64 	%rd9398, %rd9397, %rd79;
	add.s64 	%rd9399, %rd9398, %rd7911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8175,%dummy}, %rd9386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8176}, %rd9386;
	}
	shf.r.wrap.b32 	%r8177, %r8176, %r8175, 28;
	shf.r.wrap.b32 	%r8178, %r8175, %r8176, 28;
	mov.b64 	%rd9400, {%r8178, %r8177};
	shf.l.wrap.b32 	%r8179, %r8175, %r8176, 30;
	shf.l.wrap.b32 	%r8180, %r8176, %r8175, 30;
	mov.b64 	%rd9401, {%r8180, %r8179};
	xor.b64  	%rd9402, %rd9400, %rd9401;
	shf.l.wrap.b32 	%r8181, %r8175, %r8176, 25;
	shf.l.wrap.b32 	%r8182, %r8176, %r8175, 25;
	mov.b64 	%rd9403, {%r8182, %r8181};
	xor.b64  	%rd9404, %rd9402, %rd9403;
	xor.b64  	%rd9405, %rd9361, %rd9336;
	and.b64  	%rd9406, %rd9386, %rd9405;
	and.b64  	%rd9407, %rd9361, %rd9336;
	xor.b64  	%rd9408, %rd9406, %rd9407;
	add.s64 	%rd9409, %rd9404, %rd9408;
	add.s64 	%rd9410, %rd9399, %rd9311;
	add.s64 	%rd9411, %rd9409, %rd9399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8183,%dummy}, %rd9410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8184}, %rd9410;
	}
	shf.r.wrap.b32 	%r8185, %r8184, %r8183, 14;
	shf.r.wrap.b32 	%r8186, %r8183, %r8184, 14;
	mov.b64 	%rd9412, {%r8186, %r8185};
	shf.r.wrap.b32 	%r8187, %r8184, %r8183, 18;
	shf.r.wrap.b32 	%r8188, %r8183, %r8184, 18;
	mov.b64 	%rd9413, {%r8188, %r8187};
	xor.b64  	%rd9414, %rd9412, %rd9413;
	shf.l.wrap.b32 	%r8189, %r8183, %r8184, 23;
	shf.l.wrap.b32 	%r8190, %r8184, %r8183, 23;
	mov.b64 	%rd9415, {%r8190, %r8189};
	xor.b64  	%rd9416, %rd9414, %rd9415;
	and.b64  	%rd9417, %rd9410, %rd9385;
	not.b64 	%rd9418, %rd9410;
	and.b64  	%rd9419, %rd9360, %rd9418;
	or.b64  	%rd9420, %rd9417, %rd9419;
	add.s64 	%rd9421, %rd9420, %rd9335;
	add.s64 	%rd9422, %rd9421, %rd9416;
	add.s64 	%rd9423, %rd9422, %rd80;
	add.s64 	%rd9424, %rd9423, %rd7924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8191,%dummy}, %rd9411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8192}, %rd9411;
	}
	shf.r.wrap.b32 	%r8193, %r8192, %r8191, 28;
	shf.r.wrap.b32 	%r8194, %r8191, %r8192, 28;
	mov.b64 	%rd9425, {%r8194, %r8193};
	shf.l.wrap.b32 	%r8195, %r8191, %r8192, 30;
	shf.l.wrap.b32 	%r8196, %r8192, %r8191, 30;
	mov.b64 	%rd9426, {%r8196, %r8195};
	xor.b64  	%rd9427, %rd9425, %rd9426;
	shf.l.wrap.b32 	%r8197, %r8191, %r8192, 25;
	shf.l.wrap.b32 	%r8198, %r8192, %r8191, 25;
	mov.b64 	%rd9428, {%r8198, %r8197};
	xor.b64  	%rd9429, %rd9427, %rd9428;
	xor.b64  	%rd9430, %rd9386, %rd9361;
	and.b64  	%rd9431, %rd9411, %rd9430;
	and.b64  	%rd9432, %rd9386, %rd9361;
	xor.b64  	%rd9433, %rd9431, %rd9432;
	add.s64 	%rd9434, %rd9429, %rd9433;
	add.s64 	%rd9435, %rd9424, %rd9336;
	add.s64 	%rd9436, %rd9434, %rd9424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8199,%dummy}, %rd9435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8200}, %rd9435;
	}
	shf.r.wrap.b32 	%r8201, %r8200, %r8199, 14;
	shf.r.wrap.b32 	%r8202, %r8199, %r8200, 14;
	mov.b64 	%rd9437, {%r8202, %r8201};
	shf.r.wrap.b32 	%r8203, %r8200, %r8199, 18;
	shf.r.wrap.b32 	%r8204, %r8199, %r8200, 18;
	mov.b64 	%rd9438, {%r8204, %r8203};
	xor.b64  	%rd9439, %rd9437, %rd9438;
	shf.l.wrap.b32 	%r8205, %r8199, %r8200, 23;
	shf.l.wrap.b32 	%r8206, %r8200, %r8199, 23;
	mov.b64 	%rd9440, {%r8206, %r8205};
	xor.b64  	%rd9441, %rd9439, %rd9440;
	and.b64  	%rd9442, %rd9435, %rd9410;
	not.b64 	%rd9443, %rd9435;
	and.b64  	%rd9444, %rd9385, %rd9443;
	or.b64  	%rd9445, %rd9442, %rd9444;
	add.s64 	%rd9446, %rd9445, %rd9360;
	add.s64 	%rd9447, %rd9446, %rd9441;
	add.s64 	%rd9448, %rd9447, %rd81;
	add.s64 	%rd9449, %rd9448, %rd7937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8207,%dummy}, %rd9436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8208}, %rd9436;
	}
	shf.r.wrap.b32 	%r8209, %r8208, %r8207, 28;
	shf.r.wrap.b32 	%r8210, %r8207, %r8208, 28;
	mov.b64 	%rd9450, {%r8210, %r8209};
	shf.l.wrap.b32 	%r8211, %r8207, %r8208, 30;
	shf.l.wrap.b32 	%r8212, %r8208, %r8207, 30;
	mov.b64 	%rd9451, {%r8212, %r8211};
	xor.b64  	%rd9452, %rd9450, %rd9451;
	shf.l.wrap.b32 	%r8213, %r8207, %r8208, 25;
	shf.l.wrap.b32 	%r8214, %r8208, %r8207, 25;
	mov.b64 	%rd9453, {%r8214, %r8213};
	xor.b64  	%rd9454, %rd9452, %rd9453;
	xor.b64  	%rd9455, %rd9411, %rd9386;
	and.b64  	%rd9456, %rd9436, %rd9455;
	and.b64  	%rd9457, %rd9411, %rd9386;
	xor.b64  	%rd9458, %rd9456, %rd9457;
	add.s64 	%rd9459, %rd9454, %rd9458;
	add.s64 	%rd9460, %rd9449, %rd9361;
	add.s64 	%rd9461, %rd9459, %rd9449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8215,%dummy}, %rd9460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8216}, %rd9460;
	}
	shf.r.wrap.b32 	%r8217, %r8216, %r8215, 14;
	shf.r.wrap.b32 	%r8218, %r8215, %r8216, 14;
	mov.b64 	%rd9462, {%r8218, %r8217};
	shf.r.wrap.b32 	%r8219, %r8216, %r8215, 18;
	shf.r.wrap.b32 	%r8220, %r8215, %r8216, 18;
	mov.b64 	%rd9463, {%r8220, %r8219};
	xor.b64  	%rd9464, %rd9462, %rd9463;
	shf.l.wrap.b32 	%r8221, %r8215, %r8216, 23;
	shf.l.wrap.b32 	%r8222, %r8216, %r8215, 23;
	mov.b64 	%rd9465, {%r8222, %r8221};
	xor.b64  	%rd9466, %rd9464, %rd9465;
	and.b64  	%rd9467, %rd9460, %rd9435;
	not.b64 	%rd9468, %rd9460;
	and.b64  	%rd9469, %rd9410, %rd9468;
	or.b64  	%rd9470, %rd9467, %rd9469;
	add.s64 	%rd9471, %rd9470, %rd9385;
	add.s64 	%rd9472, %rd9471, %rd9466;
	add.s64 	%rd9473, %rd9472, %rd82;
	add.s64 	%rd9474, %rd9473, %rd7950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8223,%dummy}, %rd9461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8224}, %rd9461;
	}
	shf.r.wrap.b32 	%r8225, %r8224, %r8223, 28;
	shf.r.wrap.b32 	%r8226, %r8223, %r8224, 28;
	mov.b64 	%rd9475, {%r8226, %r8225};
	shf.l.wrap.b32 	%r8227, %r8223, %r8224, 30;
	shf.l.wrap.b32 	%r8228, %r8224, %r8223, 30;
	mov.b64 	%rd9476, {%r8228, %r8227};
	xor.b64  	%rd9477, %rd9475, %rd9476;
	shf.l.wrap.b32 	%r8229, %r8223, %r8224, 25;
	shf.l.wrap.b32 	%r8230, %r8224, %r8223, 25;
	mov.b64 	%rd9478, {%r8230, %r8229};
	xor.b64  	%rd9479, %rd9477, %rd9478;
	xor.b64  	%rd9480, %rd9436, %rd9411;
	and.b64  	%rd9481, %rd9461, %rd9480;
	and.b64  	%rd9482, %rd9436, %rd9411;
	xor.b64  	%rd9483, %rd9481, %rd9482;
	add.s64 	%rd9484, %rd9479, %rd9483;
	add.s64 	%rd9485, %rd9474, %rd9386;
	add.s64 	%rd9486, %rd9484, %rd9474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8231,%dummy}, %rd9485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8232}, %rd9485;
	}
	shf.r.wrap.b32 	%r8233, %r8232, %r8231, 14;
	shf.r.wrap.b32 	%r8234, %r8231, %r8232, 14;
	mov.b64 	%rd9487, {%r8234, %r8233};
	shf.r.wrap.b32 	%r8235, %r8232, %r8231, 18;
	shf.r.wrap.b32 	%r8236, %r8231, %r8232, 18;
	mov.b64 	%rd9488, {%r8236, %r8235};
	xor.b64  	%rd9489, %rd9487, %rd9488;
	shf.l.wrap.b32 	%r8237, %r8231, %r8232, 23;
	shf.l.wrap.b32 	%r8238, %r8232, %r8231, 23;
	mov.b64 	%rd9490, {%r8238, %r8237};
	xor.b64  	%rd9491, %rd9489, %rd9490;
	and.b64  	%rd9492, %rd9485, %rd9460;
	not.b64 	%rd9493, %rd9485;
	and.b64  	%rd9494, %rd9435, %rd9493;
	or.b64  	%rd9495, %rd9492, %rd9494;
	add.s64 	%rd9496, %rd9495, %rd9410;
	add.s64 	%rd9497, %rd9496, %rd9491;
	add.s64 	%rd9498, %rd9497, %rd83;
	add.s64 	%rd9499, %rd9498, %rd7963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8239,%dummy}, %rd9486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8240}, %rd9486;
	}
	shf.r.wrap.b32 	%r8241, %r8240, %r8239, 28;
	shf.r.wrap.b32 	%r8242, %r8239, %r8240, 28;
	mov.b64 	%rd9500, {%r8242, %r8241};
	shf.l.wrap.b32 	%r8243, %r8239, %r8240, 30;
	shf.l.wrap.b32 	%r8244, %r8240, %r8239, 30;
	mov.b64 	%rd9501, {%r8244, %r8243};
	xor.b64  	%rd9502, %rd9500, %rd9501;
	shf.l.wrap.b32 	%r8245, %r8239, %r8240, 25;
	shf.l.wrap.b32 	%r8246, %r8240, %r8239, 25;
	mov.b64 	%rd9503, {%r8246, %r8245};
	xor.b64  	%rd9504, %rd9502, %rd9503;
	xor.b64  	%rd9505, %rd9461, %rd9436;
	and.b64  	%rd9506, %rd9486, %rd9505;
	and.b64  	%rd9507, %rd9461, %rd9436;
	xor.b64  	%rd9508, %rd9506, %rd9507;
	add.s64 	%rd9509, %rd9504, %rd9508;
	add.s64 	%rd9510, %rd9499, %rd9411;
	add.s64 	%rd9511, %rd9509, %rd9499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8247,%dummy}, %rd9510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8248}, %rd9510;
	}
	shf.r.wrap.b32 	%r8249, %r8248, %r8247, 14;
	shf.r.wrap.b32 	%r8250, %r8247, %r8248, 14;
	mov.b64 	%rd9512, {%r8250, %r8249};
	shf.r.wrap.b32 	%r8251, %r8248, %r8247, 18;
	shf.r.wrap.b32 	%r8252, %r8247, %r8248, 18;
	mov.b64 	%rd9513, {%r8252, %r8251};
	xor.b64  	%rd9514, %rd9512, %rd9513;
	shf.l.wrap.b32 	%r8253, %r8247, %r8248, 23;
	shf.l.wrap.b32 	%r8254, %r8248, %r8247, 23;
	mov.b64 	%rd9515, {%r8254, %r8253};
	xor.b64  	%rd9516, %rd9514, %rd9515;
	and.b64  	%rd9517, %rd9510, %rd9485;
	not.b64 	%rd9518, %rd9510;
	and.b64  	%rd9519, %rd9460, %rd9518;
	or.b64  	%rd9520, %rd9517, %rd9519;
	add.s64 	%rd9521, %rd9520, %rd9435;
	add.s64 	%rd9522, %rd9521, %rd9516;
	add.s64 	%rd9523, %rd9522, %rd84;
	add.s64 	%rd9524, %rd9523, %rd7976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8255,%dummy}, %rd9511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8256}, %rd9511;
	}
	shf.r.wrap.b32 	%r8257, %r8256, %r8255, 28;
	shf.r.wrap.b32 	%r8258, %r8255, %r8256, 28;
	mov.b64 	%rd9525, {%r8258, %r8257};
	shf.l.wrap.b32 	%r8259, %r8255, %r8256, 30;
	shf.l.wrap.b32 	%r8260, %r8256, %r8255, 30;
	mov.b64 	%rd9526, {%r8260, %r8259};
	xor.b64  	%rd9527, %rd9525, %rd9526;
	shf.l.wrap.b32 	%r8261, %r8255, %r8256, 25;
	shf.l.wrap.b32 	%r8262, %r8256, %r8255, 25;
	mov.b64 	%rd9528, {%r8262, %r8261};
	xor.b64  	%rd9529, %rd9527, %rd9528;
	xor.b64  	%rd9530, %rd9486, %rd9461;
	and.b64  	%rd9531, %rd9511, %rd9530;
	and.b64  	%rd9532, %rd9486, %rd9461;
	xor.b64  	%rd9533, %rd9531, %rd9532;
	add.s64 	%rd9534, %rd9529, %rd9533;
	add.s64 	%rd9535, %rd9524, %rd9436;
	add.s64 	%rd9536, %rd9534, %rd9524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8263,%dummy}, %rd9535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8264}, %rd9535;
	}
	shf.r.wrap.b32 	%r8265, %r8264, %r8263, 14;
	shf.r.wrap.b32 	%r8266, %r8263, %r8264, 14;
	mov.b64 	%rd9537, {%r8266, %r8265};
	shf.r.wrap.b32 	%r8267, %r8264, %r8263, 18;
	shf.r.wrap.b32 	%r8268, %r8263, %r8264, 18;
	mov.b64 	%rd9538, {%r8268, %r8267};
	xor.b64  	%rd9539, %rd9537, %rd9538;
	shf.l.wrap.b32 	%r8269, %r8263, %r8264, 23;
	shf.l.wrap.b32 	%r8270, %r8264, %r8263, 23;
	mov.b64 	%rd9540, {%r8270, %r8269};
	xor.b64  	%rd9541, %rd9539, %rd9540;
	and.b64  	%rd9542, %rd9535, %rd9510;
	not.b64 	%rd9543, %rd9535;
	and.b64  	%rd9544, %rd9485, %rd9543;
	or.b64  	%rd9545, %rd9542, %rd9544;
	add.s64 	%rd9546, %rd9545, %rd9460;
	add.s64 	%rd9547, %rd9546, %rd9541;
	add.s64 	%rd9548, %rd9547, %rd85;
	add.s64 	%rd9549, %rd9548, %rd7989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8271,%dummy}, %rd9536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8272}, %rd9536;
	}
	shf.r.wrap.b32 	%r8273, %r8272, %r8271, 28;
	shf.r.wrap.b32 	%r8274, %r8271, %r8272, 28;
	mov.b64 	%rd9550, {%r8274, %r8273};
	shf.l.wrap.b32 	%r8275, %r8271, %r8272, 30;
	shf.l.wrap.b32 	%r8276, %r8272, %r8271, 30;
	mov.b64 	%rd9551, {%r8276, %r8275};
	xor.b64  	%rd9552, %rd9550, %rd9551;
	shf.l.wrap.b32 	%r8277, %r8271, %r8272, 25;
	shf.l.wrap.b32 	%r8278, %r8272, %r8271, 25;
	mov.b64 	%rd9553, {%r8278, %r8277};
	xor.b64  	%rd9554, %rd9552, %rd9553;
	xor.b64  	%rd9555, %rd9511, %rd9486;
	and.b64  	%rd9556, %rd9536, %rd9555;
	and.b64  	%rd9557, %rd9511, %rd9486;
	xor.b64  	%rd9558, %rd9556, %rd9557;
	add.s64 	%rd9559, %rd9554, %rd9558;
	add.s64 	%rd9560, %rd9549, %rd9461;
	add.s64 	%rd9561, %rd9559, %rd9549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8279,%dummy}, %rd9560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8280}, %rd9560;
	}
	shf.r.wrap.b32 	%r8281, %r8280, %r8279, 14;
	shf.r.wrap.b32 	%r8282, %r8279, %r8280, 14;
	mov.b64 	%rd9562, {%r8282, %r8281};
	shf.r.wrap.b32 	%r8283, %r8280, %r8279, 18;
	shf.r.wrap.b32 	%r8284, %r8279, %r8280, 18;
	mov.b64 	%rd9563, {%r8284, %r8283};
	xor.b64  	%rd9564, %rd9562, %rd9563;
	shf.l.wrap.b32 	%r8285, %r8279, %r8280, 23;
	shf.l.wrap.b32 	%r8286, %r8280, %r8279, 23;
	mov.b64 	%rd9565, {%r8286, %r8285};
	xor.b64  	%rd9566, %rd9564, %rd9565;
	and.b64  	%rd9567, %rd9560, %rd9535;
	not.b64 	%rd9568, %rd9560;
	and.b64  	%rd9569, %rd9510, %rd9568;
	or.b64  	%rd9570, %rd9567, %rd9569;
	add.s64 	%rd9571, %rd9570, %rd9485;
	add.s64 	%rd9572, %rd9571, %rd9566;
	add.s64 	%rd9573, %rd9572, %rd86;
	add.s64 	%rd9574, %rd9573, %rd8002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8287,%dummy}, %rd9561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8288}, %rd9561;
	}
	shf.r.wrap.b32 	%r8289, %r8288, %r8287, 28;
	shf.r.wrap.b32 	%r8290, %r8287, %r8288, 28;
	mov.b64 	%rd9575, {%r8290, %r8289};
	shf.l.wrap.b32 	%r8291, %r8287, %r8288, 30;
	shf.l.wrap.b32 	%r8292, %r8288, %r8287, 30;
	mov.b64 	%rd9576, {%r8292, %r8291};
	xor.b64  	%rd9577, %rd9575, %rd9576;
	shf.l.wrap.b32 	%r8293, %r8287, %r8288, 25;
	shf.l.wrap.b32 	%r8294, %r8288, %r8287, 25;
	mov.b64 	%rd9578, {%r8294, %r8293};
	xor.b64  	%rd9579, %rd9577, %rd9578;
	xor.b64  	%rd9580, %rd9536, %rd9511;
	and.b64  	%rd9581, %rd9561, %rd9580;
	and.b64  	%rd9582, %rd9536, %rd9511;
	xor.b64  	%rd9583, %rd9581, %rd9582;
	add.s64 	%rd9584, %rd9579, %rd9583;
	add.s64 	%rd9585, %rd9574, %rd9486;
	add.s64 	%rd9586, %rd9584, %rd9574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8295,%dummy}, %rd9585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8296}, %rd9585;
	}
	shf.r.wrap.b32 	%r8297, %r8296, %r8295, 14;
	shf.r.wrap.b32 	%r8298, %r8295, %r8296, 14;
	mov.b64 	%rd9587, {%r8298, %r8297};
	shf.r.wrap.b32 	%r8299, %r8296, %r8295, 18;
	shf.r.wrap.b32 	%r8300, %r8295, %r8296, 18;
	mov.b64 	%rd9588, {%r8300, %r8299};
	xor.b64  	%rd9589, %rd9587, %rd9588;
	shf.l.wrap.b32 	%r8301, %r8295, %r8296, 23;
	shf.l.wrap.b32 	%r8302, %r8296, %r8295, 23;
	mov.b64 	%rd9590, {%r8302, %r8301};
	xor.b64  	%rd9591, %rd9589, %rd9590;
	and.b64  	%rd9592, %rd9585, %rd9560;
	not.b64 	%rd9593, %rd9585;
	and.b64  	%rd9594, %rd9535, %rd9593;
	or.b64  	%rd9595, %rd9592, %rd9594;
	add.s64 	%rd9596, %rd9595, %rd9510;
	add.s64 	%rd9597, %rd9596, %rd9591;
	add.s64 	%rd9598, %rd9597, %rd87;
	add.s64 	%rd9599, %rd9598, %rd8015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8303,%dummy}, %rd9586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8304}, %rd9586;
	}
	shf.r.wrap.b32 	%r8305, %r8304, %r8303, 28;
	shf.r.wrap.b32 	%r8306, %r8303, %r8304, 28;
	mov.b64 	%rd9600, {%r8306, %r8305};
	shf.l.wrap.b32 	%r8307, %r8303, %r8304, 30;
	shf.l.wrap.b32 	%r8308, %r8304, %r8303, 30;
	mov.b64 	%rd9601, {%r8308, %r8307};
	xor.b64  	%rd9602, %rd9600, %rd9601;
	shf.l.wrap.b32 	%r8309, %r8303, %r8304, 25;
	shf.l.wrap.b32 	%r8310, %r8304, %r8303, 25;
	mov.b64 	%rd9603, {%r8310, %r8309};
	xor.b64  	%rd9604, %rd9602, %rd9603;
	xor.b64  	%rd9605, %rd9561, %rd9536;
	and.b64  	%rd9606, %rd9586, %rd9605;
	and.b64  	%rd9607, %rd9561, %rd9536;
	xor.b64  	%rd9608, %rd9606, %rd9607;
	add.s64 	%rd9609, %rd9604, %rd9608;
	add.s64 	%rd9610, %rd9599, %rd9511;
	add.s64 	%rd9611, %rd9609, %rd9599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8311,%dummy}, %rd9610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8312}, %rd9610;
	}
	shf.r.wrap.b32 	%r8313, %r8312, %r8311, 14;
	shf.r.wrap.b32 	%r8314, %r8311, %r8312, 14;
	mov.b64 	%rd9612, {%r8314, %r8313};
	shf.r.wrap.b32 	%r8315, %r8312, %r8311, 18;
	shf.r.wrap.b32 	%r8316, %r8311, %r8312, 18;
	mov.b64 	%rd9613, {%r8316, %r8315};
	xor.b64  	%rd9614, %rd9612, %rd9613;
	shf.l.wrap.b32 	%r8317, %r8311, %r8312, 23;
	shf.l.wrap.b32 	%r8318, %r8312, %r8311, 23;
	mov.b64 	%rd9615, {%r8318, %r8317};
	xor.b64  	%rd9616, %rd9614, %rd9615;
	and.b64  	%rd9617, %rd9610, %rd9585;
	not.b64 	%rd9618, %rd9610;
	and.b64  	%rd9619, %rd9560, %rd9618;
	or.b64  	%rd9620, %rd9617, %rd9619;
	add.s64 	%rd9621, %rd9620, %rd9535;
	add.s64 	%rd9622, %rd9621, %rd9616;
	add.s64 	%rd9623, %rd9622, %rd88;
	add.s64 	%rd9624, %rd9623, %rd8028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8319,%dummy}, %rd9611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8320}, %rd9611;
	}
	shf.r.wrap.b32 	%r8321, %r8320, %r8319, 28;
	shf.r.wrap.b32 	%r8322, %r8319, %r8320, 28;
	mov.b64 	%rd9625, {%r8322, %r8321};
	shf.l.wrap.b32 	%r8323, %r8319, %r8320, 30;
	shf.l.wrap.b32 	%r8324, %r8320, %r8319, 30;
	mov.b64 	%rd9626, {%r8324, %r8323};
	xor.b64  	%rd9627, %rd9625, %rd9626;
	shf.l.wrap.b32 	%r8325, %r8319, %r8320, 25;
	shf.l.wrap.b32 	%r8326, %r8320, %r8319, 25;
	mov.b64 	%rd9628, {%r8326, %r8325};
	xor.b64  	%rd9629, %rd9627, %rd9628;
	xor.b64  	%rd9630, %rd9586, %rd9561;
	and.b64  	%rd9631, %rd9611, %rd9630;
	and.b64  	%rd9632, %rd9586, %rd9561;
	xor.b64  	%rd9633, %rd9631, %rd9632;
	add.s64 	%rd9634, %rd9629, %rd9633;
	add.s64 	%rd9635, %rd9624, %rd9536;
	add.s64 	%rd9636, %rd9634, %rd9624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8327,%dummy}, %rd9635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8328}, %rd9635;
	}
	shf.r.wrap.b32 	%r8329, %r8328, %r8327, 14;
	shf.r.wrap.b32 	%r8330, %r8327, %r8328, 14;
	mov.b64 	%rd9637, {%r8330, %r8329};
	shf.r.wrap.b32 	%r8331, %r8328, %r8327, 18;
	shf.r.wrap.b32 	%r8332, %r8327, %r8328, 18;
	mov.b64 	%rd9638, {%r8332, %r8331};
	xor.b64  	%rd9639, %rd9637, %rd9638;
	shf.l.wrap.b32 	%r8333, %r8327, %r8328, 23;
	shf.l.wrap.b32 	%r8334, %r8328, %r8327, 23;
	mov.b64 	%rd9640, {%r8334, %r8333};
	xor.b64  	%rd9641, %rd9639, %rd9640;
	and.b64  	%rd9642, %rd9635, %rd9610;
	not.b64 	%rd9643, %rd9635;
	and.b64  	%rd9644, %rd9585, %rd9643;
	or.b64  	%rd9645, %rd9642, %rd9644;
	add.s64 	%rd9646, %rd9645, %rd9560;
	add.s64 	%rd9647, %rd9646, %rd9641;
	add.s64 	%rd9648, %rd9647, %rd89;
	add.s64 	%rd9649, %rd9648, %rd8041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8335,%dummy}, %rd9636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8336}, %rd9636;
	}
	shf.r.wrap.b32 	%r8337, %r8336, %r8335, 28;
	shf.r.wrap.b32 	%r8338, %r8335, %r8336, 28;
	mov.b64 	%rd9650, {%r8338, %r8337};
	shf.l.wrap.b32 	%r8339, %r8335, %r8336, 30;
	shf.l.wrap.b32 	%r8340, %r8336, %r8335, 30;
	mov.b64 	%rd9651, {%r8340, %r8339};
	xor.b64  	%rd9652, %rd9650, %rd9651;
	shf.l.wrap.b32 	%r8341, %r8335, %r8336, 25;
	shf.l.wrap.b32 	%r8342, %r8336, %r8335, 25;
	mov.b64 	%rd9653, {%r8342, %r8341};
	xor.b64  	%rd9654, %rd9652, %rd9653;
	xor.b64  	%rd9655, %rd9611, %rd9586;
	and.b64  	%rd9656, %rd9636, %rd9655;
	and.b64  	%rd9657, %rd9611, %rd9586;
	xor.b64  	%rd9658, %rd9656, %rd9657;
	add.s64 	%rd9659, %rd9654, %rd9658;
	add.s64 	%rd9660, %rd9649, %rd9561;
	add.s64 	%rd9661, %rd9659, %rd9649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8343,%dummy}, %rd9660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8344}, %rd9660;
	}
	shf.r.wrap.b32 	%r8345, %r8344, %r8343, 14;
	shf.r.wrap.b32 	%r8346, %r8343, %r8344, 14;
	mov.b64 	%rd9662, {%r8346, %r8345};
	shf.r.wrap.b32 	%r8347, %r8344, %r8343, 18;
	shf.r.wrap.b32 	%r8348, %r8343, %r8344, 18;
	mov.b64 	%rd9663, {%r8348, %r8347};
	xor.b64  	%rd9664, %rd9662, %rd9663;
	shf.l.wrap.b32 	%r8349, %r8343, %r8344, 23;
	shf.l.wrap.b32 	%r8350, %r8344, %r8343, 23;
	mov.b64 	%rd9665, {%r8350, %r8349};
	xor.b64  	%rd9666, %rd9664, %rd9665;
	and.b64  	%rd9667, %rd9660, %rd9635;
	not.b64 	%rd9668, %rd9660;
	and.b64  	%rd9669, %rd9610, %rd9668;
	or.b64  	%rd9670, %rd9667, %rd9669;
	add.s64 	%rd9671, %rd9670, %rd9585;
	add.s64 	%rd9672, %rd9671, %rd9666;
	add.s64 	%rd9673, %rd9672, %rd90;
	add.s64 	%rd9674, %rd9673, %rd8054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8351,%dummy}, %rd9661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8352}, %rd9661;
	}
	shf.r.wrap.b32 	%r8353, %r8352, %r8351, 28;
	shf.r.wrap.b32 	%r8354, %r8351, %r8352, 28;
	mov.b64 	%rd9675, {%r8354, %r8353};
	shf.l.wrap.b32 	%r8355, %r8351, %r8352, 30;
	shf.l.wrap.b32 	%r8356, %r8352, %r8351, 30;
	mov.b64 	%rd9676, {%r8356, %r8355};
	xor.b64  	%rd9677, %rd9675, %rd9676;
	shf.l.wrap.b32 	%r8357, %r8351, %r8352, 25;
	shf.l.wrap.b32 	%r8358, %r8352, %r8351, 25;
	mov.b64 	%rd9678, {%r8358, %r8357};
	xor.b64  	%rd9679, %rd9677, %rd9678;
	xor.b64  	%rd9680, %rd9636, %rd9611;
	and.b64  	%rd9681, %rd9661, %rd9680;
	and.b64  	%rd9682, %rd9636, %rd9611;
	xor.b64  	%rd9683, %rd9681, %rd9682;
	add.s64 	%rd9684, %rd9679, %rd9683;
	add.s64 	%rd9685, %rd9674, %rd9586;
	add.s64 	%rd9686, %rd9684, %rd9674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8359,%dummy}, %rd9685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8360}, %rd9685;
	}
	shf.r.wrap.b32 	%r8361, %r8360, %r8359, 14;
	shf.r.wrap.b32 	%r8362, %r8359, %r8360, 14;
	mov.b64 	%rd9687, {%r8362, %r8361};
	shf.r.wrap.b32 	%r8363, %r8360, %r8359, 18;
	shf.r.wrap.b32 	%r8364, %r8359, %r8360, 18;
	mov.b64 	%rd9688, {%r8364, %r8363};
	xor.b64  	%rd9689, %rd9687, %rd9688;
	shf.l.wrap.b32 	%r8365, %r8359, %r8360, 23;
	shf.l.wrap.b32 	%r8366, %r8360, %r8359, 23;
	mov.b64 	%rd9690, {%r8366, %r8365};
	xor.b64  	%rd9691, %rd9689, %rd9690;
	and.b64  	%rd9692, %rd9685, %rd9660;
	not.b64 	%rd9693, %rd9685;
	and.b64  	%rd9694, %rd9635, %rd9693;
	or.b64  	%rd9695, %rd9692, %rd9694;
	add.s64 	%rd9696, %rd9695, %rd9610;
	add.s64 	%rd9697, %rd9696, %rd9691;
	add.s64 	%rd9698, %rd9697, %rd91;
	add.s64 	%rd9699, %rd9698, %rd8067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8367,%dummy}, %rd9686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8368}, %rd9686;
	}
	shf.r.wrap.b32 	%r8369, %r8368, %r8367, 28;
	shf.r.wrap.b32 	%r8370, %r8367, %r8368, 28;
	mov.b64 	%rd9700, {%r8370, %r8369};
	shf.l.wrap.b32 	%r8371, %r8367, %r8368, 30;
	shf.l.wrap.b32 	%r8372, %r8368, %r8367, 30;
	mov.b64 	%rd9701, {%r8372, %r8371};
	xor.b64  	%rd9702, %rd9700, %rd9701;
	shf.l.wrap.b32 	%r8373, %r8367, %r8368, 25;
	shf.l.wrap.b32 	%r8374, %r8368, %r8367, 25;
	mov.b64 	%rd9703, {%r8374, %r8373};
	xor.b64  	%rd9704, %rd9702, %rd9703;
	xor.b64  	%rd9705, %rd9661, %rd9636;
	and.b64  	%rd9706, %rd9686, %rd9705;
	and.b64  	%rd9707, %rd9661, %rd9636;
	xor.b64  	%rd9708, %rd9706, %rd9707;
	add.s64 	%rd9709, %rd9704, %rd9708;
	add.s64 	%rd9710, %rd9699, %rd9611;
	add.s64 	%rd9711, %rd9709, %rd9699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8375,%dummy}, %rd9710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8376}, %rd9710;
	}
	shf.r.wrap.b32 	%r8377, %r8376, %r8375, 14;
	shf.r.wrap.b32 	%r8378, %r8375, %r8376, 14;
	mov.b64 	%rd9712, {%r8378, %r8377};
	shf.r.wrap.b32 	%r8379, %r8376, %r8375, 18;
	shf.r.wrap.b32 	%r8380, %r8375, %r8376, 18;
	mov.b64 	%rd9713, {%r8380, %r8379};
	xor.b64  	%rd9714, %rd9712, %rd9713;
	shf.l.wrap.b32 	%r8381, %r8375, %r8376, 23;
	shf.l.wrap.b32 	%r8382, %r8376, %r8375, 23;
	mov.b64 	%rd9715, {%r8382, %r8381};
	xor.b64  	%rd9716, %rd9714, %rd9715;
	and.b64  	%rd9717, %rd9710, %rd9685;
	not.b64 	%rd9718, %rd9710;
	and.b64  	%rd9719, %rd9660, %rd9718;
	or.b64  	%rd9720, %rd9717, %rd9719;
	add.s64 	%rd9721, %rd9720, %rd9635;
	add.s64 	%rd9722, %rd9721, %rd9716;
	add.s64 	%rd9723, %rd9722, %rd92;
	add.s64 	%rd9724, %rd9723, %rd8080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8383,%dummy}, %rd9711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8384}, %rd9711;
	}
	shf.r.wrap.b32 	%r8385, %r8384, %r8383, 28;
	shf.r.wrap.b32 	%r8386, %r8383, %r8384, 28;
	mov.b64 	%rd9725, {%r8386, %r8385};
	shf.l.wrap.b32 	%r8387, %r8383, %r8384, 30;
	shf.l.wrap.b32 	%r8388, %r8384, %r8383, 30;
	mov.b64 	%rd9726, {%r8388, %r8387};
	xor.b64  	%rd9727, %rd9725, %rd9726;
	shf.l.wrap.b32 	%r8389, %r8383, %r8384, 25;
	shf.l.wrap.b32 	%r8390, %r8384, %r8383, 25;
	mov.b64 	%rd9728, {%r8390, %r8389};
	xor.b64  	%rd9729, %rd9727, %rd9728;
	xor.b64  	%rd9730, %rd9686, %rd9661;
	and.b64  	%rd9731, %rd9711, %rd9730;
	and.b64  	%rd9732, %rd9686, %rd9661;
	xor.b64  	%rd9733, %rd9731, %rd9732;
	add.s64 	%rd9734, %rd9729, %rd9733;
	add.s64 	%rd9735, %rd9724, %rd9636;
	add.s64 	%rd9736, %rd9734, %rd9724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8391,%dummy}, %rd9735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8392}, %rd9735;
	}
	shf.r.wrap.b32 	%r8393, %r8392, %r8391, 14;
	shf.r.wrap.b32 	%r8394, %r8391, %r8392, 14;
	mov.b64 	%rd9737, {%r8394, %r8393};
	shf.r.wrap.b32 	%r8395, %r8392, %r8391, 18;
	shf.r.wrap.b32 	%r8396, %r8391, %r8392, 18;
	mov.b64 	%rd9738, {%r8396, %r8395};
	xor.b64  	%rd9739, %rd9737, %rd9738;
	shf.l.wrap.b32 	%r8397, %r8391, %r8392, 23;
	shf.l.wrap.b32 	%r8398, %r8392, %r8391, 23;
	mov.b64 	%rd9740, {%r8398, %r8397};
	xor.b64  	%rd9741, %rd9739, %rd9740;
	and.b64  	%rd9742, %rd9735, %rd9710;
	not.b64 	%rd9743, %rd9735;
	and.b64  	%rd9744, %rd9685, %rd9743;
	or.b64  	%rd9745, %rd9742, %rd9744;
	add.s64 	%rd9746, %rd9745, %rd9660;
	add.s64 	%rd9747, %rd9746, %rd9741;
	add.s64 	%rd9748, %rd9747, %rd93;
	add.s64 	%rd9749, %rd9748, %rd8093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8399,%dummy}, %rd9736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8400}, %rd9736;
	}
	shf.r.wrap.b32 	%r8401, %r8400, %r8399, 28;
	shf.r.wrap.b32 	%r8402, %r8399, %r8400, 28;
	mov.b64 	%rd9750, {%r8402, %r8401};
	shf.l.wrap.b32 	%r8403, %r8399, %r8400, 30;
	shf.l.wrap.b32 	%r8404, %r8400, %r8399, 30;
	mov.b64 	%rd9751, {%r8404, %r8403};
	xor.b64  	%rd9752, %rd9750, %rd9751;
	shf.l.wrap.b32 	%r8405, %r8399, %r8400, 25;
	shf.l.wrap.b32 	%r8406, %r8400, %r8399, 25;
	mov.b64 	%rd9753, {%r8406, %r8405};
	xor.b64  	%rd9754, %rd9752, %rd9753;
	xor.b64  	%rd9755, %rd9711, %rd9686;
	and.b64  	%rd9756, %rd9736, %rd9755;
	and.b64  	%rd9757, %rd9711, %rd9686;
	xor.b64  	%rd9758, %rd9756, %rd9757;
	add.s64 	%rd9759, %rd9754, %rd9758;
	add.s64 	%rd9760, %rd9749, %rd9661;
	add.s64 	%rd9761, %rd9759, %rd9749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8407,%dummy}, %rd9760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8408}, %rd9760;
	}
	shf.r.wrap.b32 	%r8409, %r8408, %r8407, 14;
	shf.r.wrap.b32 	%r8410, %r8407, %r8408, 14;
	mov.b64 	%rd9762, {%r8410, %r8409};
	shf.r.wrap.b32 	%r8411, %r8408, %r8407, 18;
	shf.r.wrap.b32 	%r8412, %r8407, %r8408, 18;
	mov.b64 	%rd9763, {%r8412, %r8411};
	xor.b64  	%rd9764, %rd9762, %rd9763;
	shf.l.wrap.b32 	%r8413, %r8407, %r8408, 23;
	shf.l.wrap.b32 	%r8414, %r8408, %r8407, 23;
	mov.b64 	%rd9765, {%r8414, %r8413};
	xor.b64  	%rd9766, %rd9764, %rd9765;
	and.b64  	%rd9767, %rd9760, %rd9735;
	not.b64 	%rd9768, %rd9760;
	and.b64  	%rd9769, %rd9710, %rd9768;
	or.b64  	%rd9770, %rd9767, %rd9769;
	add.s64 	%rd9771, %rd9770, %rd9685;
	add.s64 	%rd9772, %rd9771, %rd9766;
	add.s64 	%rd9773, %rd9772, %rd94;
	add.s64 	%rd9774, %rd9773, %rd8106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8415,%dummy}, %rd9761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8416}, %rd9761;
	}
	shf.r.wrap.b32 	%r8417, %r8416, %r8415, 28;
	shf.r.wrap.b32 	%r8418, %r8415, %r8416, 28;
	mov.b64 	%rd9775, {%r8418, %r8417};
	shf.l.wrap.b32 	%r8419, %r8415, %r8416, 30;
	shf.l.wrap.b32 	%r8420, %r8416, %r8415, 30;
	mov.b64 	%rd9776, {%r8420, %r8419};
	xor.b64  	%rd9777, %rd9775, %rd9776;
	shf.l.wrap.b32 	%r8421, %r8415, %r8416, 25;
	shf.l.wrap.b32 	%r8422, %r8416, %r8415, 25;
	mov.b64 	%rd9778, {%r8422, %r8421};
	xor.b64  	%rd9779, %rd9777, %rd9778;
	xor.b64  	%rd9780, %rd9736, %rd9711;
	and.b64  	%rd9781, %rd9761, %rd9780;
	and.b64  	%rd9782, %rd9736, %rd9711;
	xor.b64  	%rd9783, %rd9781, %rd9782;
	add.s64 	%rd9784, %rd9779, %rd9783;
	add.s64 	%rd9785, %rd9774, %rd9686;
	add.s64 	%rd9786, %rd9784, %rd9774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8423,%dummy}, %rd9785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8424}, %rd9785;
	}
	shf.r.wrap.b32 	%r8425, %r8424, %r8423, 14;
	shf.r.wrap.b32 	%r8426, %r8423, %r8424, 14;
	mov.b64 	%rd9787, {%r8426, %r8425};
	shf.r.wrap.b32 	%r8427, %r8424, %r8423, 18;
	shf.r.wrap.b32 	%r8428, %r8423, %r8424, 18;
	mov.b64 	%rd9788, {%r8428, %r8427};
	xor.b64  	%rd9789, %rd9787, %rd9788;
	shf.l.wrap.b32 	%r8429, %r8423, %r8424, 23;
	shf.l.wrap.b32 	%r8430, %r8424, %r8423, 23;
	mov.b64 	%rd9790, {%r8430, %r8429};
	xor.b64  	%rd9791, %rd9789, %rd9790;
	and.b64  	%rd9792, %rd9785, %rd9760;
	not.b64 	%rd9793, %rd9785;
	and.b64  	%rd9794, %rd9735, %rd9793;
	or.b64  	%rd9795, %rd9792, %rd9794;
	add.s64 	%rd9796, %rd9795, %rd9710;
	add.s64 	%rd9797, %rd9796, %rd9791;
	add.s64 	%rd9798, %rd9797, %rd95;
	add.s64 	%rd9799, %rd9798, %rd8119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8431,%dummy}, %rd9786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8432}, %rd9786;
	}
	shf.r.wrap.b32 	%r8433, %r8432, %r8431, 28;
	shf.r.wrap.b32 	%r8434, %r8431, %r8432, 28;
	mov.b64 	%rd9800, {%r8434, %r8433};
	shf.l.wrap.b32 	%r8435, %r8431, %r8432, 30;
	shf.l.wrap.b32 	%r8436, %r8432, %r8431, 30;
	mov.b64 	%rd9801, {%r8436, %r8435};
	xor.b64  	%rd9802, %rd9800, %rd9801;
	shf.l.wrap.b32 	%r8437, %r8431, %r8432, 25;
	shf.l.wrap.b32 	%r8438, %r8432, %r8431, 25;
	mov.b64 	%rd9803, {%r8438, %r8437};
	xor.b64  	%rd9804, %rd9802, %rd9803;
	xor.b64  	%rd9805, %rd9761, %rd9736;
	and.b64  	%rd9806, %rd9786, %rd9805;
	and.b64  	%rd9807, %rd9761, %rd9736;
	xor.b64  	%rd9808, %rd9806, %rd9807;
	add.s64 	%rd9809, %rd9804, %rd9808;
	add.s64 	%rd9810, %rd9799, %rd9711;
	add.s64 	%rd9811, %rd9809, %rd9799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8439,%dummy}, %rd9810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8440}, %rd9810;
	}
	shf.r.wrap.b32 	%r8441, %r8440, %r8439, 14;
	shf.r.wrap.b32 	%r8442, %r8439, %r8440, 14;
	mov.b64 	%rd9812, {%r8442, %r8441};
	shf.r.wrap.b32 	%r8443, %r8440, %r8439, 18;
	shf.r.wrap.b32 	%r8444, %r8439, %r8440, 18;
	mov.b64 	%rd9813, {%r8444, %r8443};
	xor.b64  	%rd9814, %rd9812, %rd9813;
	shf.l.wrap.b32 	%r8445, %r8439, %r8440, 23;
	shf.l.wrap.b32 	%r8446, %r8440, %r8439, 23;
	mov.b64 	%rd9815, {%r8446, %r8445};
	xor.b64  	%rd9816, %rd9814, %rd9815;
	and.b64  	%rd9817, %rd9810, %rd9785;
	not.b64 	%rd9818, %rd9810;
	and.b64  	%rd9819, %rd9760, %rd9818;
	or.b64  	%rd9820, %rd9817, %rd9819;
	add.s64 	%rd9821, %rd9820, %rd9735;
	add.s64 	%rd9822, %rd9821, %rd9816;
	add.s64 	%rd9823, %rd9822, %rd96;
	add.s64 	%rd9824, %rd9823, %rd8132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8447,%dummy}, %rd9811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8448}, %rd9811;
	}
	shf.r.wrap.b32 	%r8449, %r8448, %r8447, 28;
	shf.r.wrap.b32 	%r8450, %r8447, %r8448, 28;
	mov.b64 	%rd9825, {%r8450, %r8449};
	shf.l.wrap.b32 	%r8451, %r8447, %r8448, 30;
	shf.l.wrap.b32 	%r8452, %r8448, %r8447, 30;
	mov.b64 	%rd9826, {%r8452, %r8451};
	xor.b64  	%rd9827, %rd9825, %rd9826;
	shf.l.wrap.b32 	%r8453, %r8447, %r8448, 25;
	shf.l.wrap.b32 	%r8454, %r8448, %r8447, 25;
	mov.b64 	%rd9828, {%r8454, %r8453};
	xor.b64  	%rd9829, %rd9827, %rd9828;
	xor.b64  	%rd9830, %rd9786, %rd9761;
	and.b64  	%rd9831, %rd9811, %rd9830;
	and.b64  	%rd9832, %rd9786, %rd9761;
	xor.b64  	%rd9833, %rd9831, %rd9832;
	add.s64 	%rd9834, %rd9829, %rd9833;
	add.s64 	%rd9835, %rd9824, %rd9736;
	add.s64 	%rd9836, %rd9834, %rd9824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8455,%dummy}, %rd9835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8456}, %rd9835;
	}
	shf.r.wrap.b32 	%r8457, %r8456, %r8455, 14;
	shf.r.wrap.b32 	%r8458, %r8455, %r8456, 14;
	mov.b64 	%rd9837, {%r8458, %r8457};
	shf.r.wrap.b32 	%r8459, %r8456, %r8455, 18;
	shf.r.wrap.b32 	%r8460, %r8455, %r8456, 18;
	mov.b64 	%rd9838, {%r8460, %r8459};
	xor.b64  	%rd9839, %rd9837, %rd9838;
	shf.l.wrap.b32 	%r8461, %r8455, %r8456, 23;
	shf.l.wrap.b32 	%r8462, %r8456, %r8455, 23;
	mov.b64 	%rd9840, {%r8462, %r8461};
	xor.b64  	%rd9841, %rd9839, %rd9840;
	and.b64  	%rd9842, %rd9835, %rd9810;
	not.b64 	%rd9843, %rd9835;
	and.b64  	%rd9844, %rd9785, %rd9843;
	or.b64  	%rd9845, %rd9842, %rd9844;
	add.s64 	%rd9846, %rd9845, %rd9760;
	add.s64 	%rd9847, %rd9846, %rd9841;
	add.s64 	%rd9848, %rd9847, %rd97;
	add.s64 	%rd9849, %rd9848, %rd8145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8463,%dummy}, %rd9836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8464}, %rd9836;
	}
	shf.r.wrap.b32 	%r8465, %r8464, %r8463, 28;
	shf.r.wrap.b32 	%r8466, %r8463, %r8464, 28;
	mov.b64 	%rd9850, {%r8466, %r8465};
	shf.l.wrap.b32 	%r8467, %r8463, %r8464, 30;
	shf.l.wrap.b32 	%r8468, %r8464, %r8463, 30;
	mov.b64 	%rd9851, {%r8468, %r8467};
	xor.b64  	%rd9852, %rd9850, %rd9851;
	shf.l.wrap.b32 	%r8469, %r8463, %r8464, 25;
	shf.l.wrap.b32 	%r8470, %r8464, %r8463, 25;
	mov.b64 	%rd9853, {%r8470, %r8469};
	xor.b64  	%rd9854, %rd9852, %rd9853;
	xor.b64  	%rd9855, %rd9811, %rd9786;
	and.b64  	%rd9856, %rd9836, %rd9855;
	and.b64  	%rd9857, %rd9811, %rd9786;
	xor.b64  	%rd9858, %rd9856, %rd9857;
	add.s64 	%rd9859, %rd9854, %rd9858;
	add.s64 	%rd9860, %rd9849, %rd9761;
	add.s64 	%rd9861, %rd9859, %rd9849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8471,%dummy}, %rd9860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8472}, %rd9860;
	}
	shf.r.wrap.b32 	%r8473, %r8472, %r8471, 14;
	shf.r.wrap.b32 	%r8474, %r8471, %r8472, 14;
	mov.b64 	%rd9862, {%r8474, %r8473};
	shf.r.wrap.b32 	%r8475, %r8472, %r8471, 18;
	shf.r.wrap.b32 	%r8476, %r8471, %r8472, 18;
	mov.b64 	%rd9863, {%r8476, %r8475};
	xor.b64  	%rd9864, %rd9862, %rd9863;
	shf.l.wrap.b32 	%r8477, %r8471, %r8472, 23;
	shf.l.wrap.b32 	%r8478, %r8472, %r8471, 23;
	mov.b64 	%rd9865, {%r8478, %r8477};
	xor.b64  	%rd9866, %rd9864, %rd9865;
	and.b64  	%rd9867, %rd9860, %rd9835;
	not.b64 	%rd9868, %rd9860;
	and.b64  	%rd9869, %rd9810, %rd9868;
	or.b64  	%rd9870, %rd9867, %rd9869;
	add.s64 	%rd9871, %rd9870, %rd9785;
	add.s64 	%rd9872, %rd9871, %rd9866;
	add.s64 	%rd9873, %rd9872, %rd98;
	add.s64 	%rd9874, %rd9873, %rd8158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8479,%dummy}, %rd9861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8480}, %rd9861;
	}
	shf.r.wrap.b32 	%r8481, %r8480, %r8479, 28;
	shf.r.wrap.b32 	%r8482, %r8479, %r8480, 28;
	mov.b64 	%rd9875, {%r8482, %r8481};
	shf.l.wrap.b32 	%r8483, %r8479, %r8480, 30;
	shf.l.wrap.b32 	%r8484, %r8480, %r8479, 30;
	mov.b64 	%rd9876, {%r8484, %r8483};
	xor.b64  	%rd9877, %rd9875, %rd9876;
	shf.l.wrap.b32 	%r8485, %r8479, %r8480, 25;
	shf.l.wrap.b32 	%r8486, %r8480, %r8479, 25;
	mov.b64 	%rd9878, {%r8486, %r8485};
	xor.b64  	%rd9879, %rd9877, %rd9878;
	xor.b64  	%rd9880, %rd9836, %rd9811;
	and.b64  	%rd9881, %rd9861, %rd9880;
	and.b64  	%rd9882, %rd9836, %rd9811;
	xor.b64  	%rd9883, %rd9881, %rd9882;
	add.s64 	%rd9884, %rd9879, %rd9883;
	add.s64 	%rd9885, %rd9874, %rd9786;
	add.s64 	%rd9886, %rd9884, %rd9874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8487,%dummy}, %rd9885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8488}, %rd9885;
	}
	shf.r.wrap.b32 	%r8489, %r8488, %r8487, 14;
	shf.r.wrap.b32 	%r8490, %r8487, %r8488, 14;
	mov.b64 	%rd9887, {%r8490, %r8489};
	shf.r.wrap.b32 	%r8491, %r8488, %r8487, 18;
	shf.r.wrap.b32 	%r8492, %r8487, %r8488, 18;
	mov.b64 	%rd9888, {%r8492, %r8491};
	xor.b64  	%rd9889, %rd9887, %rd9888;
	shf.l.wrap.b32 	%r8493, %r8487, %r8488, 23;
	shf.l.wrap.b32 	%r8494, %r8488, %r8487, 23;
	mov.b64 	%rd9890, {%r8494, %r8493};
	xor.b64  	%rd9891, %rd9889, %rd9890;
	and.b64  	%rd9892, %rd9885, %rd9860;
	not.b64 	%rd9893, %rd9885;
	and.b64  	%rd9894, %rd9835, %rd9893;
	or.b64  	%rd9895, %rd9892, %rd9894;
	add.s64 	%rd9896, %rd9895, %rd9810;
	add.s64 	%rd9897, %rd9896, %rd9891;
	add.s64 	%rd9898, %rd9897, %rd99;
	add.s64 	%rd9899, %rd9898, %rd8171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8495,%dummy}, %rd9886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8496}, %rd9886;
	}
	shf.r.wrap.b32 	%r8497, %r8496, %r8495, 28;
	shf.r.wrap.b32 	%r8498, %r8495, %r8496, 28;
	mov.b64 	%rd9900, {%r8498, %r8497};
	shf.l.wrap.b32 	%r8499, %r8495, %r8496, 30;
	shf.l.wrap.b32 	%r8500, %r8496, %r8495, 30;
	mov.b64 	%rd9901, {%r8500, %r8499};
	xor.b64  	%rd9902, %rd9900, %rd9901;
	shf.l.wrap.b32 	%r8501, %r8495, %r8496, 25;
	shf.l.wrap.b32 	%r8502, %r8496, %r8495, 25;
	mov.b64 	%rd9903, {%r8502, %r8501};
	xor.b64  	%rd9904, %rd9902, %rd9903;
	xor.b64  	%rd9905, %rd9861, %rd9836;
	and.b64  	%rd9906, %rd9886, %rd9905;
	and.b64  	%rd9907, %rd9861, %rd9836;
	xor.b64  	%rd9908, %rd9906, %rd9907;
	add.s64 	%rd9909, %rd9904, %rd9908;
	add.s64 	%rd9910, %rd9899, %rd9811;
	add.s64 	%rd9911, %rd9909, %rd9899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8503,%dummy}, %rd9910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8504}, %rd9910;
	}
	shf.r.wrap.b32 	%r8505, %r8504, %r8503, 14;
	shf.r.wrap.b32 	%r8506, %r8503, %r8504, 14;
	mov.b64 	%rd9912, {%r8506, %r8505};
	shf.r.wrap.b32 	%r8507, %r8504, %r8503, 18;
	shf.r.wrap.b32 	%r8508, %r8503, %r8504, 18;
	mov.b64 	%rd9913, {%r8508, %r8507};
	xor.b64  	%rd9914, %rd9912, %rd9913;
	shf.l.wrap.b32 	%r8509, %r8503, %r8504, 23;
	shf.l.wrap.b32 	%r8510, %r8504, %r8503, 23;
	mov.b64 	%rd9915, {%r8510, %r8509};
	xor.b64  	%rd9916, %rd9914, %rd9915;
	and.b64  	%rd9917, %rd9910, %rd9885;
	not.b64 	%rd9918, %rd9910;
	and.b64  	%rd9919, %rd9860, %rd9918;
	or.b64  	%rd9920, %rd9917, %rd9919;
	add.s64 	%rd9921, %rd9920, %rd9835;
	add.s64 	%rd9922, %rd9921, %rd9916;
	add.s64 	%rd9923, %rd9922, %rd100;
	add.s64 	%rd9924, %rd9923, %rd8184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8511,%dummy}, %rd9911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8512}, %rd9911;
	}
	shf.r.wrap.b32 	%r8513, %r8512, %r8511, 28;
	shf.r.wrap.b32 	%r8514, %r8511, %r8512, 28;
	mov.b64 	%rd9925, {%r8514, %r8513};
	shf.l.wrap.b32 	%r8515, %r8511, %r8512, 30;
	shf.l.wrap.b32 	%r8516, %r8512, %r8511, 30;
	mov.b64 	%rd9926, {%r8516, %r8515};
	xor.b64  	%rd9927, %rd9925, %rd9926;
	shf.l.wrap.b32 	%r8517, %r8511, %r8512, 25;
	shf.l.wrap.b32 	%r8518, %r8512, %r8511, 25;
	mov.b64 	%rd9928, {%r8518, %r8517};
	xor.b64  	%rd9929, %rd9927, %rd9928;
	xor.b64  	%rd9930, %rd9886, %rd9861;
	and.b64  	%rd9931, %rd9911, %rd9930;
	and.b64  	%rd9932, %rd9886, %rd9861;
	xor.b64  	%rd9933, %rd9931, %rd9932;
	add.s64 	%rd9934, %rd9929, %rd9933;
	add.s64 	%rd9935, %rd9924, %rd9836;
	add.s64 	%rd9936, %rd9934, %rd9924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8519,%dummy}, %rd9935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8520}, %rd9935;
	}
	shf.r.wrap.b32 	%r8521, %r8520, %r8519, 14;
	shf.r.wrap.b32 	%r8522, %r8519, %r8520, 14;
	mov.b64 	%rd9937, {%r8522, %r8521};
	shf.r.wrap.b32 	%r8523, %r8520, %r8519, 18;
	shf.r.wrap.b32 	%r8524, %r8519, %r8520, 18;
	mov.b64 	%rd9938, {%r8524, %r8523};
	xor.b64  	%rd9939, %rd9937, %rd9938;
	shf.l.wrap.b32 	%r8525, %r8519, %r8520, 23;
	shf.l.wrap.b32 	%r8526, %r8520, %r8519, 23;
	mov.b64 	%rd9940, {%r8526, %r8525};
	xor.b64  	%rd9941, %rd9939, %rd9940;
	and.b64  	%rd9942, %rd9935, %rd9910;
	not.b64 	%rd9943, %rd9935;
	and.b64  	%rd9944, %rd9885, %rd9943;
	or.b64  	%rd9945, %rd9942, %rd9944;
	add.s64 	%rd9946, %rd9945, %rd9860;
	add.s64 	%rd9947, %rd9946, %rd9941;
	add.s64 	%rd9948, %rd9947, %rd101;
	add.s64 	%rd9949, %rd9948, %rd8197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8527,%dummy}, %rd9936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8528}, %rd9936;
	}
	shf.r.wrap.b32 	%r8529, %r8528, %r8527, 28;
	shf.r.wrap.b32 	%r8530, %r8527, %r8528, 28;
	mov.b64 	%rd9950, {%r8530, %r8529};
	shf.l.wrap.b32 	%r8531, %r8527, %r8528, 30;
	shf.l.wrap.b32 	%r8532, %r8528, %r8527, 30;
	mov.b64 	%rd9951, {%r8532, %r8531};
	xor.b64  	%rd9952, %rd9950, %rd9951;
	shf.l.wrap.b32 	%r8533, %r8527, %r8528, 25;
	shf.l.wrap.b32 	%r8534, %r8528, %r8527, 25;
	mov.b64 	%rd9953, {%r8534, %r8533};
	xor.b64  	%rd9954, %rd9952, %rd9953;
	xor.b64  	%rd9955, %rd9911, %rd9886;
	and.b64  	%rd9956, %rd9936, %rd9955;
	and.b64  	%rd9957, %rd9911, %rd9886;
	xor.b64  	%rd9958, %rd9956, %rd9957;
	add.s64 	%rd9959, %rd9954, %rd9958;
	add.s64 	%rd9960, %rd9949, %rd9861;
	add.s64 	%rd9961, %rd9959, %rd9949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8535,%dummy}, %rd9960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8536}, %rd9960;
	}
	shf.r.wrap.b32 	%r8537, %r8536, %r8535, 14;
	shf.r.wrap.b32 	%r8538, %r8535, %r8536, 14;
	mov.b64 	%rd9962, {%r8538, %r8537};
	shf.r.wrap.b32 	%r8539, %r8536, %r8535, 18;
	shf.r.wrap.b32 	%r8540, %r8535, %r8536, 18;
	mov.b64 	%rd9963, {%r8540, %r8539};
	xor.b64  	%rd9964, %rd9962, %rd9963;
	shf.l.wrap.b32 	%r8541, %r8535, %r8536, 23;
	shf.l.wrap.b32 	%r8542, %r8536, %r8535, 23;
	mov.b64 	%rd9965, {%r8542, %r8541};
	xor.b64  	%rd9966, %rd9964, %rd9965;
	and.b64  	%rd9967, %rd9960, %rd9935;
	not.b64 	%rd9968, %rd9960;
	and.b64  	%rd9969, %rd9910, %rd9968;
	or.b64  	%rd9970, %rd9967, %rd9969;
	add.s64 	%rd9971, %rd9970, %rd9885;
	add.s64 	%rd9972, %rd9971, %rd9966;
	add.s64 	%rd9973, %rd9972, %rd102;
	add.s64 	%rd9974, %rd9973, %rd8210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8543,%dummy}, %rd9961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8544}, %rd9961;
	}
	shf.r.wrap.b32 	%r8545, %r8544, %r8543, 28;
	shf.r.wrap.b32 	%r8546, %r8543, %r8544, 28;
	mov.b64 	%rd9975, {%r8546, %r8545};
	shf.l.wrap.b32 	%r8547, %r8543, %r8544, 30;
	shf.l.wrap.b32 	%r8548, %r8544, %r8543, 30;
	mov.b64 	%rd9976, {%r8548, %r8547};
	xor.b64  	%rd9977, %rd9975, %rd9976;
	shf.l.wrap.b32 	%r8549, %r8543, %r8544, 25;
	shf.l.wrap.b32 	%r8550, %r8544, %r8543, 25;
	mov.b64 	%rd9978, {%r8550, %r8549};
	xor.b64  	%rd9979, %rd9977, %rd9978;
	xor.b64  	%rd9980, %rd9936, %rd9911;
	and.b64  	%rd9981, %rd9961, %rd9980;
	and.b64  	%rd9982, %rd9936, %rd9911;
	xor.b64  	%rd9983, %rd9981, %rd9982;
	add.s64 	%rd9984, %rd9979, %rd9983;
	add.s64 	%rd9985, %rd9974, %rd9886;
	add.s64 	%rd9986, %rd9984, %rd9974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8551,%dummy}, %rd9985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8552}, %rd9985;
	}
	shf.r.wrap.b32 	%r8553, %r8552, %r8551, 14;
	shf.r.wrap.b32 	%r8554, %r8551, %r8552, 14;
	mov.b64 	%rd9987, {%r8554, %r8553};
	shf.r.wrap.b32 	%r8555, %r8552, %r8551, 18;
	shf.r.wrap.b32 	%r8556, %r8551, %r8552, 18;
	mov.b64 	%rd9988, {%r8556, %r8555};
	xor.b64  	%rd9989, %rd9987, %rd9988;
	shf.l.wrap.b32 	%r8557, %r8551, %r8552, 23;
	shf.l.wrap.b32 	%r8558, %r8552, %r8551, 23;
	mov.b64 	%rd9990, {%r8558, %r8557};
	xor.b64  	%rd9991, %rd9989, %rd9990;
	and.b64  	%rd9992, %rd9985, %rd9960;
	not.b64 	%rd9993, %rd9985;
	and.b64  	%rd9994, %rd9935, %rd9993;
	or.b64  	%rd9995, %rd9992, %rd9994;
	add.s64 	%rd9996, %rd9995, %rd9910;
	add.s64 	%rd9997, %rd9996, %rd9991;
	add.s64 	%rd9998, %rd9997, %rd103;
	add.s64 	%rd9999, %rd9998, %rd8223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8559,%dummy}, %rd9986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8560}, %rd9986;
	}
	shf.r.wrap.b32 	%r8561, %r8560, %r8559, 28;
	shf.r.wrap.b32 	%r8562, %r8559, %r8560, 28;
	mov.b64 	%rd10000, {%r8562, %r8561};
	shf.l.wrap.b32 	%r8563, %r8559, %r8560, 30;
	shf.l.wrap.b32 	%r8564, %r8560, %r8559, 30;
	mov.b64 	%rd10001, {%r8564, %r8563};
	xor.b64  	%rd10002, %rd10000, %rd10001;
	shf.l.wrap.b32 	%r8565, %r8559, %r8560, 25;
	shf.l.wrap.b32 	%r8566, %r8560, %r8559, 25;
	mov.b64 	%rd10003, {%r8566, %r8565};
	xor.b64  	%rd10004, %rd10002, %rd10003;
	xor.b64  	%rd10005, %rd9961, %rd9936;
	and.b64  	%rd10006, %rd9986, %rd10005;
	and.b64  	%rd10007, %rd9961, %rd9936;
	xor.b64  	%rd10008, %rd10006, %rd10007;
	add.s64 	%rd10009, %rd10004, %rd10008;
	add.s64 	%rd10010, %rd9999, %rd9911;
	add.s64 	%rd10011, %rd10009, %rd9999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8567,%dummy}, %rd10010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8568}, %rd10010;
	}
	shf.r.wrap.b32 	%r8569, %r8568, %r8567, 14;
	shf.r.wrap.b32 	%r8570, %r8567, %r8568, 14;
	mov.b64 	%rd10012, {%r8570, %r8569};
	shf.r.wrap.b32 	%r8571, %r8568, %r8567, 18;
	shf.r.wrap.b32 	%r8572, %r8567, %r8568, 18;
	mov.b64 	%rd10013, {%r8572, %r8571};
	xor.b64  	%rd10014, %rd10012, %rd10013;
	shf.l.wrap.b32 	%r8573, %r8567, %r8568, 23;
	shf.l.wrap.b32 	%r8574, %r8568, %r8567, 23;
	mov.b64 	%rd10015, {%r8574, %r8573};
	xor.b64  	%rd10016, %rd10014, %rd10015;
	and.b64  	%rd10017, %rd10010, %rd9985;
	not.b64 	%rd10018, %rd10010;
	and.b64  	%rd10019, %rd9960, %rd10018;
	or.b64  	%rd10020, %rd10017, %rd10019;
	add.s64 	%rd10021, %rd10020, %rd9935;
	add.s64 	%rd10022, %rd10021, %rd10016;
	add.s64 	%rd10023, %rd10022, %rd104;
	add.s64 	%rd10024, %rd10023, %rd8236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8575,%dummy}, %rd10011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8576}, %rd10011;
	}
	shf.r.wrap.b32 	%r8577, %r8576, %r8575, 28;
	shf.r.wrap.b32 	%r8578, %r8575, %r8576, 28;
	mov.b64 	%rd10025, {%r8578, %r8577};
	shf.l.wrap.b32 	%r8579, %r8575, %r8576, 30;
	shf.l.wrap.b32 	%r8580, %r8576, %r8575, 30;
	mov.b64 	%rd10026, {%r8580, %r8579};
	xor.b64  	%rd10027, %rd10025, %rd10026;
	shf.l.wrap.b32 	%r8581, %r8575, %r8576, 25;
	shf.l.wrap.b32 	%r8582, %r8576, %r8575, 25;
	mov.b64 	%rd10028, {%r8582, %r8581};
	xor.b64  	%rd10029, %rd10027, %rd10028;
	xor.b64  	%rd10030, %rd9986, %rd9961;
	and.b64  	%rd10031, %rd10011, %rd10030;
	and.b64  	%rd10032, %rd9986, %rd9961;
	xor.b64  	%rd10033, %rd10031, %rd10032;
	add.s64 	%rd10034, %rd10029, %rd10033;
	add.s64 	%rd10035, %rd10024, %rd9936;
	add.s64 	%rd10036, %rd10034, %rd10024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8583,%dummy}, %rd10035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8584}, %rd10035;
	}
	shf.r.wrap.b32 	%r8585, %r8584, %r8583, 14;
	shf.r.wrap.b32 	%r8586, %r8583, %r8584, 14;
	mov.b64 	%rd10037, {%r8586, %r8585};
	shf.r.wrap.b32 	%r8587, %r8584, %r8583, 18;
	shf.r.wrap.b32 	%r8588, %r8583, %r8584, 18;
	mov.b64 	%rd10038, {%r8588, %r8587};
	xor.b64  	%rd10039, %rd10037, %rd10038;
	shf.l.wrap.b32 	%r8589, %r8583, %r8584, 23;
	shf.l.wrap.b32 	%r8590, %r8584, %r8583, 23;
	mov.b64 	%rd10040, {%r8590, %r8589};
	xor.b64  	%rd10041, %rd10039, %rd10040;
	and.b64  	%rd10042, %rd10035, %rd10010;
	not.b64 	%rd10043, %rd10035;
	and.b64  	%rd10044, %rd9985, %rd10043;
	or.b64  	%rd10045, %rd10042, %rd10044;
	add.s64 	%rd10046, %rd10045, %rd9960;
	add.s64 	%rd10047, %rd10046, %rd10041;
	add.s64 	%rd10048, %rd10047, %rd105;
	add.s64 	%rd10049, %rd10048, %rd8249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8591,%dummy}, %rd10036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8592}, %rd10036;
	}
	shf.r.wrap.b32 	%r8593, %r8592, %r8591, 28;
	shf.r.wrap.b32 	%r8594, %r8591, %r8592, 28;
	mov.b64 	%rd10050, {%r8594, %r8593};
	shf.l.wrap.b32 	%r8595, %r8591, %r8592, 30;
	shf.l.wrap.b32 	%r8596, %r8592, %r8591, 30;
	mov.b64 	%rd10051, {%r8596, %r8595};
	xor.b64  	%rd10052, %rd10050, %rd10051;
	shf.l.wrap.b32 	%r8597, %r8591, %r8592, 25;
	shf.l.wrap.b32 	%r8598, %r8592, %r8591, 25;
	mov.b64 	%rd10053, {%r8598, %r8597};
	xor.b64  	%rd10054, %rd10052, %rd10053;
	xor.b64  	%rd10055, %rd10011, %rd9986;
	and.b64  	%rd10056, %rd10036, %rd10055;
	and.b64  	%rd10057, %rd10011, %rd9986;
	xor.b64  	%rd10058, %rd10056, %rd10057;
	add.s64 	%rd10059, %rd10054, %rd10058;
	add.s64 	%rd10060, %rd10049, %rd9961;
	add.s64 	%rd10061, %rd10059, %rd10049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8599,%dummy}, %rd10060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8600}, %rd10060;
	}
	shf.r.wrap.b32 	%r8601, %r8600, %r8599, 14;
	shf.r.wrap.b32 	%r8602, %r8599, %r8600, 14;
	mov.b64 	%rd10062, {%r8602, %r8601};
	shf.r.wrap.b32 	%r8603, %r8600, %r8599, 18;
	shf.r.wrap.b32 	%r8604, %r8599, %r8600, 18;
	mov.b64 	%rd10063, {%r8604, %r8603};
	xor.b64  	%rd10064, %rd10062, %rd10063;
	shf.l.wrap.b32 	%r8605, %r8599, %r8600, 23;
	shf.l.wrap.b32 	%r8606, %r8600, %r8599, 23;
	mov.b64 	%rd10065, {%r8606, %r8605};
	xor.b64  	%rd10066, %rd10064, %rd10065;
	and.b64  	%rd10067, %rd10060, %rd10035;
	not.b64 	%rd10068, %rd10060;
	and.b64  	%rd10069, %rd10010, %rd10068;
	or.b64  	%rd10070, %rd10067, %rd10069;
	add.s64 	%rd10071, %rd10070, %rd9985;
	add.s64 	%rd10072, %rd10071, %rd10066;
	add.s64 	%rd10073, %rd10072, %rd106;
	add.s64 	%rd10074, %rd10073, %rd8262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8607,%dummy}, %rd10061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8608}, %rd10061;
	}
	shf.r.wrap.b32 	%r8609, %r8608, %r8607, 28;
	shf.r.wrap.b32 	%r8610, %r8607, %r8608, 28;
	mov.b64 	%rd10075, {%r8610, %r8609};
	shf.l.wrap.b32 	%r8611, %r8607, %r8608, 30;
	shf.l.wrap.b32 	%r8612, %r8608, %r8607, 30;
	mov.b64 	%rd10076, {%r8612, %r8611};
	xor.b64  	%rd10077, %rd10075, %rd10076;
	shf.l.wrap.b32 	%r8613, %r8607, %r8608, 25;
	shf.l.wrap.b32 	%r8614, %r8608, %r8607, 25;
	mov.b64 	%rd10078, {%r8614, %r8613};
	xor.b64  	%rd10079, %rd10077, %rd10078;
	xor.b64  	%rd10080, %rd10036, %rd10011;
	and.b64  	%rd10081, %rd10061, %rd10080;
	and.b64  	%rd10082, %rd10036, %rd10011;
	xor.b64  	%rd10083, %rd10081, %rd10082;
	add.s64 	%rd10084, %rd10079, %rd10083;
	add.s64 	%rd10085, %rd10074, %rd9986;
	add.s64 	%rd10086, %rd10084, %rd10074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8615,%dummy}, %rd10085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8616}, %rd10085;
	}
	shf.r.wrap.b32 	%r8617, %r8616, %r8615, 14;
	shf.r.wrap.b32 	%r8618, %r8615, %r8616, 14;
	mov.b64 	%rd10087, {%r8618, %r8617};
	shf.r.wrap.b32 	%r8619, %r8616, %r8615, 18;
	shf.r.wrap.b32 	%r8620, %r8615, %r8616, 18;
	mov.b64 	%rd10088, {%r8620, %r8619};
	xor.b64  	%rd10089, %rd10087, %rd10088;
	shf.l.wrap.b32 	%r8621, %r8615, %r8616, 23;
	shf.l.wrap.b32 	%r8622, %r8616, %r8615, 23;
	mov.b64 	%rd10090, {%r8622, %r8621};
	xor.b64  	%rd10091, %rd10089, %rd10090;
	and.b64  	%rd10092, %rd10085, %rd10060;
	not.b64 	%rd10093, %rd10085;
	and.b64  	%rd10094, %rd10035, %rd10093;
	or.b64  	%rd10095, %rd10092, %rd10094;
	add.s64 	%rd10096, %rd10095, %rd10010;
	add.s64 	%rd10097, %rd10096, %rd10091;
	add.s64 	%rd10098, %rd10097, %rd107;
	add.s64 	%rd10099, %rd10098, %rd8275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8623,%dummy}, %rd10086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8624}, %rd10086;
	}
	shf.r.wrap.b32 	%r8625, %r8624, %r8623, 28;
	shf.r.wrap.b32 	%r8626, %r8623, %r8624, 28;
	mov.b64 	%rd10100, {%r8626, %r8625};
	shf.l.wrap.b32 	%r8627, %r8623, %r8624, 30;
	shf.l.wrap.b32 	%r8628, %r8624, %r8623, 30;
	mov.b64 	%rd10101, {%r8628, %r8627};
	xor.b64  	%rd10102, %rd10100, %rd10101;
	shf.l.wrap.b32 	%r8629, %r8623, %r8624, 25;
	shf.l.wrap.b32 	%r8630, %r8624, %r8623, 25;
	mov.b64 	%rd10103, {%r8630, %r8629};
	xor.b64  	%rd10104, %rd10102, %rd10103;
	xor.b64  	%rd10105, %rd10061, %rd10036;
	and.b64  	%rd10106, %rd10086, %rd10105;
	and.b64  	%rd10107, %rd10061, %rd10036;
	xor.b64  	%rd10108, %rd10106, %rd10107;
	add.s64 	%rd10109, %rd10104, %rd10108;
	add.s64 	%rd10110, %rd10099, %rd10011;
	add.s64 	%rd10111, %rd10109, %rd10099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8631,%dummy}, %rd10110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8632}, %rd10110;
	}
	shf.r.wrap.b32 	%r8633, %r8632, %r8631, 14;
	shf.r.wrap.b32 	%r8634, %r8631, %r8632, 14;
	mov.b64 	%rd10112, {%r8634, %r8633};
	shf.r.wrap.b32 	%r8635, %r8632, %r8631, 18;
	shf.r.wrap.b32 	%r8636, %r8631, %r8632, 18;
	mov.b64 	%rd10113, {%r8636, %r8635};
	xor.b64  	%rd10114, %rd10112, %rd10113;
	shf.l.wrap.b32 	%r8637, %r8631, %r8632, 23;
	shf.l.wrap.b32 	%r8638, %r8632, %r8631, 23;
	mov.b64 	%rd10115, {%r8638, %r8637};
	xor.b64  	%rd10116, %rd10114, %rd10115;
	and.b64  	%rd10117, %rd10110, %rd10085;
	not.b64 	%rd10118, %rd10110;
	and.b64  	%rd10119, %rd10060, %rd10118;
	or.b64  	%rd10120, %rd10117, %rd10119;
	add.s64 	%rd10121, %rd10120, %rd10035;
	add.s64 	%rd10122, %rd10121, %rd10116;
	add.s64 	%rd10123, %rd10122, %rd108;
	add.s64 	%rd10124, %rd10123, %rd8288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8639,%dummy}, %rd10111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8640}, %rd10111;
	}
	shf.r.wrap.b32 	%r8641, %r8640, %r8639, 28;
	shf.r.wrap.b32 	%r8642, %r8639, %r8640, 28;
	mov.b64 	%rd10125, {%r8642, %r8641};
	shf.l.wrap.b32 	%r8643, %r8639, %r8640, 30;
	shf.l.wrap.b32 	%r8644, %r8640, %r8639, 30;
	mov.b64 	%rd10126, {%r8644, %r8643};
	xor.b64  	%rd10127, %rd10125, %rd10126;
	shf.l.wrap.b32 	%r8645, %r8639, %r8640, 25;
	shf.l.wrap.b32 	%r8646, %r8640, %r8639, 25;
	mov.b64 	%rd10128, {%r8646, %r8645};
	xor.b64  	%rd10129, %rd10127, %rd10128;
	xor.b64  	%rd10130, %rd10086, %rd10061;
	and.b64  	%rd10131, %rd10111, %rd10130;
	and.b64  	%rd10132, %rd10086, %rd10061;
	xor.b64  	%rd10133, %rd10131, %rd10132;
	add.s64 	%rd10134, %rd10129, %rd10133;
	add.s64 	%rd10135, %rd10124, %rd10036;
	add.s64 	%rd10136, %rd10134, %rd10124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8647,%dummy}, %rd10135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8648}, %rd10135;
	}
	shf.r.wrap.b32 	%r8649, %r8648, %r8647, 14;
	shf.r.wrap.b32 	%r8650, %r8647, %r8648, 14;
	mov.b64 	%rd10137, {%r8650, %r8649};
	shf.r.wrap.b32 	%r8651, %r8648, %r8647, 18;
	shf.r.wrap.b32 	%r8652, %r8647, %r8648, 18;
	mov.b64 	%rd10138, {%r8652, %r8651};
	xor.b64  	%rd10139, %rd10137, %rd10138;
	shf.l.wrap.b32 	%r8653, %r8647, %r8648, 23;
	shf.l.wrap.b32 	%r8654, %r8648, %r8647, 23;
	mov.b64 	%rd10140, {%r8654, %r8653};
	xor.b64  	%rd10141, %rd10139, %rd10140;
	and.b64  	%rd10142, %rd10135, %rd10110;
	not.b64 	%rd10143, %rd10135;
	and.b64  	%rd10144, %rd10085, %rd10143;
	or.b64  	%rd10145, %rd10142, %rd10144;
	add.s64 	%rd10146, %rd10145, %rd10060;
	add.s64 	%rd10147, %rd10146, %rd10141;
	add.s64 	%rd10148, %rd10147, %rd109;
	add.s64 	%rd10149, %rd10148, %rd8301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8655,%dummy}, %rd10136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8656}, %rd10136;
	}
	shf.r.wrap.b32 	%r8657, %r8656, %r8655, 28;
	shf.r.wrap.b32 	%r8658, %r8655, %r8656, 28;
	mov.b64 	%rd10150, {%r8658, %r8657};
	shf.l.wrap.b32 	%r8659, %r8655, %r8656, 30;
	shf.l.wrap.b32 	%r8660, %r8656, %r8655, 30;
	mov.b64 	%rd10151, {%r8660, %r8659};
	xor.b64  	%rd10152, %rd10150, %rd10151;
	shf.l.wrap.b32 	%r8661, %r8655, %r8656, 25;
	shf.l.wrap.b32 	%r8662, %r8656, %r8655, 25;
	mov.b64 	%rd10153, {%r8662, %r8661};
	xor.b64  	%rd10154, %rd10152, %rd10153;
	xor.b64  	%rd10155, %rd10111, %rd10086;
	and.b64  	%rd10156, %rd10136, %rd10155;
	and.b64  	%rd10157, %rd10111, %rd10086;
	xor.b64  	%rd10158, %rd10156, %rd10157;
	add.s64 	%rd10159, %rd10154, %rd10158;
	add.s64 	%rd10160, %rd10149, %rd10061;
	add.s64 	%rd10161, %rd10159, %rd10149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8663,%dummy}, %rd10160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8664}, %rd10160;
	}
	shf.r.wrap.b32 	%r8665, %r8664, %r8663, 14;
	shf.r.wrap.b32 	%r8666, %r8663, %r8664, 14;
	mov.b64 	%rd10162, {%r8666, %r8665};
	shf.r.wrap.b32 	%r8667, %r8664, %r8663, 18;
	shf.r.wrap.b32 	%r8668, %r8663, %r8664, 18;
	mov.b64 	%rd10163, {%r8668, %r8667};
	xor.b64  	%rd10164, %rd10162, %rd10163;
	shf.l.wrap.b32 	%r8669, %r8663, %r8664, 23;
	shf.l.wrap.b32 	%r8670, %r8664, %r8663, 23;
	mov.b64 	%rd10165, {%r8670, %r8669};
	xor.b64  	%rd10166, %rd10164, %rd10165;
	and.b64  	%rd10167, %rd10160, %rd10135;
	not.b64 	%rd10168, %rd10160;
	and.b64  	%rd10169, %rd10110, %rd10168;
	or.b64  	%rd10170, %rd10167, %rd10169;
	add.s64 	%rd10171, %rd10170, %rd10085;
	add.s64 	%rd10172, %rd10171, %rd10166;
	add.s64 	%rd10173, %rd10172, %rd110;
	add.s64 	%rd10174, %rd10173, %rd8314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8671,%dummy}, %rd10161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8672}, %rd10161;
	}
	shf.r.wrap.b32 	%r8673, %r8672, %r8671, 28;
	shf.r.wrap.b32 	%r8674, %r8671, %r8672, 28;
	mov.b64 	%rd10175, {%r8674, %r8673};
	shf.l.wrap.b32 	%r8675, %r8671, %r8672, 30;
	shf.l.wrap.b32 	%r8676, %r8672, %r8671, 30;
	mov.b64 	%rd10176, {%r8676, %r8675};
	xor.b64  	%rd10177, %rd10175, %rd10176;
	shf.l.wrap.b32 	%r8677, %r8671, %r8672, 25;
	shf.l.wrap.b32 	%r8678, %r8672, %r8671, 25;
	mov.b64 	%rd10178, {%r8678, %r8677};
	xor.b64  	%rd10179, %rd10177, %rd10178;
	xor.b64  	%rd10180, %rd10136, %rd10111;
	and.b64  	%rd10181, %rd10161, %rd10180;
	and.b64  	%rd10182, %rd10136, %rd10111;
	xor.b64  	%rd10183, %rd10181, %rd10182;
	add.s64 	%rd10184, %rd10179, %rd10183;
	add.s64 	%rd10185, %rd10174, %rd10086;
	add.s64 	%rd10186, %rd10184, %rd10174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8679,%dummy}, %rd10185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8680}, %rd10185;
	}
	shf.r.wrap.b32 	%r8681, %r8680, %r8679, 14;
	shf.r.wrap.b32 	%r8682, %r8679, %r8680, 14;
	mov.b64 	%rd10187, {%r8682, %r8681};
	shf.r.wrap.b32 	%r8683, %r8680, %r8679, 18;
	shf.r.wrap.b32 	%r8684, %r8679, %r8680, 18;
	mov.b64 	%rd10188, {%r8684, %r8683};
	xor.b64  	%rd10189, %rd10187, %rd10188;
	shf.l.wrap.b32 	%r8685, %r8679, %r8680, 23;
	shf.l.wrap.b32 	%r8686, %r8680, %r8679, 23;
	mov.b64 	%rd10190, {%r8686, %r8685};
	xor.b64  	%rd10191, %rd10189, %rd10190;
	and.b64  	%rd10192, %rd10185, %rd10160;
	not.b64 	%rd10193, %rd10185;
	and.b64  	%rd10194, %rd10135, %rd10193;
	or.b64  	%rd10195, %rd10192, %rd10194;
	add.s64 	%rd10196, %rd10195, %rd10110;
	add.s64 	%rd10197, %rd10196, %rd10191;
	add.s64 	%rd10198, %rd10197, %rd15510;
	add.s64 	%rd10199, %rd10198, %rd8327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8687,%dummy}, %rd10186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8688}, %rd10186;
	}
	shf.r.wrap.b32 	%r8689, %r8688, %r8687, 28;
	shf.r.wrap.b32 	%r8690, %r8687, %r8688, 28;
	mov.b64 	%rd10200, {%r8690, %r8689};
	shf.l.wrap.b32 	%r8691, %r8687, %r8688, 30;
	shf.l.wrap.b32 	%r8692, %r8688, %r8687, 30;
	mov.b64 	%rd10201, {%r8692, %r8691};
	xor.b64  	%rd10202, %rd10200, %rd10201;
	shf.l.wrap.b32 	%r8693, %r8687, %r8688, 25;
	shf.l.wrap.b32 	%r8694, %r8688, %r8687, 25;
	mov.b64 	%rd10203, {%r8694, %r8693};
	xor.b64  	%rd10204, %rd10202, %rd10203;
	xor.b64  	%rd10205, %rd10161, %rd10136;
	and.b64  	%rd10206, %rd10186, %rd10205;
	and.b64  	%rd10207, %rd10161, %rd10136;
	xor.b64  	%rd10208, %rd10206, %rd10207;
	add.s64 	%rd10209, %rd10204, %rd10208;
	add.s64 	%rd10210, %rd10199, %rd10111;
	add.s64 	%rd10211, %rd10209, %rd10199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8695,%dummy}, %rd10210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8696}, %rd10210;
	}
	shf.r.wrap.b32 	%r8697, %r8696, %r8695, 14;
	shf.r.wrap.b32 	%r8698, %r8695, %r8696, 14;
	mov.b64 	%rd10212, {%r8698, %r8697};
	shf.r.wrap.b32 	%r8699, %r8696, %r8695, 18;
	shf.r.wrap.b32 	%r8700, %r8695, %r8696, 18;
	mov.b64 	%rd10213, {%r8700, %r8699};
	xor.b64  	%rd10214, %rd10212, %rd10213;
	shf.l.wrap.b32 	%r8701, %r8695, %r8696, 23;
	shf.l.wrap.b32 	%r8702, %r8696, %r8695, 23;
	mov.b64 	%rd10215, {%r8702, %r8701};
	xor.b64  	%rd10216, %rd10214, %rd10215;
	and.b64  	%rd10217, %rd10210, %rd10185;
	not.b64 	%rd10218, %rd10210;
	and.b64  	%rd10219, %rd10160, %rd10218;
	or.b64  	%rd10220, %rd10217, %rd10219;
	add.s64 	%rd10221, %rd10220, %rd10135;
	add.s64 	%rd10222, %rd10221, %rd10216;
	add.s64 	%rd10223, %rd10222, %rd15509;
	add.s64 	%rd10224, %rd10223, %rd8340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8703,%dummy}, %rd10211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8704}, %rd10211;
	}
	shf.r.wrap.b32 	%r8705, %r8704, %r8703, 28;
	shf.r.wrap.b32 	%r8706, %r8703, %r8704, 28;
	mov.b64 	%rd10225, {%r8706, %r8705};
	shf.l.wrap.b32 	%r8707, %r8703, %r8704, 30;
	shf.l.wrap.b32 	%r8708, %r8704, %r8703, 30;
	mov.b64 	%rd10226, {%r8708, %r8707};
	xor.b64  	%rd10227, %rd10225, %rd10226;
	shf.l.wrap.b32 	%r8709, %r8703, %r8704, 25;
	shf.l.wrap.b32 	%r8710, %r8704, %r8703, 25;
	mov.b64 	%rd10228, {%r8710, %r8709};
	xor.b64  	%rd10229, %rd10227, %rd10228;
	xor.b64  	%rd10230, %rd10186, %rd10161;
	and.b64  	%rd10231, %rd10211, %rd10230;
	and.b64  	%rd10232, %rd10186, %rd10161;
	xor.b64  	%rd10233, %rd10231, %rd10232;
	add.s64 	%rd10234, %rd10229, %rd10233;
	add.s64 	%rd10235, %rd10224, %rd10136;
	add.s64 	%rd10236, %rd10234, %rd10224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8711,%dummy}, %rd10235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8712}, %rd10235;
	}
	shf.r.wrap.b32 	%r8713, %r8712, %r8711, 14;
	shf.r.wrap.b32 	%r8714, %r8711, %r8712, 14;
	mov.b64 	%rd10237, {%r8714, %r8713};
	shf.r.wrap.b32 	%r8715, %r8712, %r8711, 18;
	shf.r.wrap.b32 	%r8716, %r8711, %r8712, 18;
	mov.b64 	%rd10238, {%r8716, %r8715};
	xor.b64  	%rd10239, %rd10237, %rd10238;
	shf.l.wrap.b32 	%r8717, %r8711, %r8712, 23;
	shf.l.wrap.b32 	%r8718, %r8712, %r8711, 23;
	mov.b64 	%rd10240, {%r8718, %r8717};
	xor.b64  	%rd10241, %rd10239, %rd10240;
	and.b64  	%rd10242, %rd10235, %rd10210;
	not.b64 	%rd10243, %rd10235;
	and.b64  	%rd10244, %rd10185, %rd10243;
	or.b64  	%rd10245, %rd10242, %rd10244;
	add.s64 	%rd10246, %rd10245, %rd10160;
	add.s64 	%rd10247, %rd10246, %rd10241;
	add.s64 	%rd10248, %rd10247, %rd15508;
	add.s64 	%rd10249, %rd10248, %rd8353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8719,%dummy}, %rd10236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8720}, %rd10236;
	}
	shf.r.wrap.b32 	%r8721, %r8720, %r8719, 28;
	shf.r.wrap.b32 	%r8722, %r8719, %r8720, 28;
	mov.b64 	%rd10250, {%r8722, %r8721};
	shf.l.wrap.b32 	%r8723, %r8719, %r8720, 30;
	shf.l.wrap.b32 	%r8724, %r8720, %r8719, 30;
	mov.b64 	%rd10251, {%r8724, %r8723};
	xor.b64  	%rd10252, %rd10250, %rd10251;
	shf.l.wrap.b32 	%r8725, %r8719, %r8720, 25;
	shf.l.wrap.b32 	%r8726, %r8720, %r8719, 25;
	mov.b64 	%rd10253, {%r8726, %r8725};
	xor.b64  	%rd10254, %rd10252, %rd10253;
	xor.b64  	%rd10255, %rd10211, %rd10186;
	and.b64  	%rd10256, %rd10236, %rd10255;
	and.b64  	%rd10257, %rd10211, %rd10186;
	xor.b64  	%rd10258, %rd10256, %rd10257;
	add.s64 	%rd10259, %rd10254, %rd10258;
	add.s64 	%rd10260, %rd10249, %rd10161;
	add.s64 	%rd10261, %rd10259, %rd10249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8727,%dummy}, %rd10260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8728}, %rd10260;
	}
	shf.r.wrap.b32 	%r8729, %r8728, %r8727, 14;
	shf.r.wrap.b32 	%r8730, %r8727, %r8728, 14;
	mov.b64 	%rd10262, {%r8730, %r8729};
	shf.r.wrap.b32 	%r8731, %r8728, %r8727, 18;
	shf.r.wrap.b32 	%r8732, %r8727, %r8728, 18;
	mov.b64 	%rd10263, {%r8732, %r8731};
	xor.b64  	%rd10264, %rd10262, %rd10263;
	shf.l.wrap.b32 	%r8733, %r8727, %r8728, 23;
	shf.l.wrap.b32 	%r8734, %r8728, %r8727, 23;
	mov.b64 	%rd10265, {%r8734, %r8733};
	xor.b64  	%rd10266, %rd10264, %rd10265;
	and.b64  	%rd10267, %rd10260, %rd10235;
	not.b64 	%rd10268, %rd10260;
	and.b64  	%rd10269, %rd10210, %rd10268;
	or.b64  	%rd10270, %rd10267, %rd10269;
	add.s64 	%rd10271, %rd10270, %rd10185;
	add.s64 	%rd10272, %rd10271, %rd10266;
	add.s64 	%rd10273, %rd10272, %rd114;
	add.s64 	%rd10274, %rd10273, %rd8366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8735,%dummy}, %rd10261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8736}, %rd10261;
	}
	shf.r.wrap.b32 	%r8737, %r8736, %r8735, 28;
	shf.r.wrap.b32 	%r8738, %r8735, %r8736, 28;
	mov.b64 	%rd10275, {%r8738, %r8737};
	shf.l.wrap.b32 	%r8739, %r8735, %r8736, 30;
	shf.l.wrap.b32 	%r8740, %r8736, %r8735, 30;
	mov.b64 	%rd10276, {%r8740, %r8739};
	xor.b64  	%rd10277, %rd10275, %rd10276;
	shf.l.wrap.b32 	%r8741, %r8735, %r8736, 25;
	shf.l.wrap.b32 	%r8742, %r8736, %r8735, 25;
	mov.b64 	%rd10278, {%r8742, %r8741};
	xor.b64  	%rd10279, %rd10277, %rd10278;
	xor.b64  	%rd10280, %rd10236, %rd10211;
	and.b64  	%rd10281, %rd10261, %rd10280;
	and.b64  	%rd10282, %rd10236, %rd10211;
	xor.b64  	%rd10283, %rd10281, %rd10282;
	add.s64 	%rd10284, %rd10279, %rd10283;
	add.s64 	%rd10285, %rd10274, %rd10186;
	add.s64 	%rd10286, %rd10284, %rd10274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8743,%dummy}, %rd10285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8744}, %rd10285;
	}
	shf.r.wrap.b32 	%r8745, %r8744, %r8743, 14;
	shf.r.wrap.b32 	%r8746, %r8743, %r8744, 14;
	mov.b64 	%rd10287, {%r8746, %r8745};
	shf.r.wrap.b32 	%r8747, %r8744, %r8743, 18;
	shf.r.wrap.b32 	%r8748, %r8743, %r8744, 18;
	mov.b64 	%rd10288, {%r8748, %r8747};
	xor.b64  	%rd10289, %rd10287, %rd10288;
	shf.l.wrap.b32 	%r8749, %r8743, %r8744, 23;
	shf.l.wrap.b32 	%r8750, %r8744, %r8743, 23;
	mov.b64 	%rd10290, {%r8750, %r8749};
	xor.b64  	%rd10291, %rd10289, %rd10290;
	and.b64  	%rd10292, %rd10285, %rd10260;
	not.b64 	%rd10293, %rd10285;
	and.b64  	%rd10294, %rd10235, %rd10293;
	or.b64  	%rd10295, %rd10292, %rd10294;
	add.s64 	%rd10296, %rd10295, %rd10210;
	add.s64 	%rd10297, %rd10296, %rd10291;
	add.s64 	%rd10298, %rd10297, %rd115;
	add.s64 	%rd10299, %rd10298, %rd8379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8751,%dummy}, %rd10286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8752}, %rd10286;
	}
	shf.r.wrap.b32 	%r8753, %r8752, %r8751, 28;
	shf.r.wrap.b32 	%r8754, %r8751, %r8752, 28;
	mov.b64 	%rd10300, {%r8754, %r8753};
	shf.l.wrap.b32 	%r8755, %r8751, %r8752, 30;
	shf.l.wrap.b32 	%r8756, %r8752, %r8751, 30;
	mov.b64 	%rd10301, {%r8756, %r8755};
	xor.b64  	%rd10302, %rd10300, %rd10301;
	shf.l.wrap.b32 	%r8757, %r8751, %r8752, 25;
	shf.l.wrap.b32 	%r8758, %r8752, %r8751, 25;
	mov.b64 	%rd10303, {%r8758, %r8757};
	xor.b64  	%rd10304, %rd10302, %rd10303;
	xor.b64  	%rd10305, %rd10261, %rd10236;
	and.b64  	%rd10306, %rd10286, %rd10305;
	and.b64  	%rd10307, %rd10261, %rd10236;
	xor.b64  	%rd10308, %rd10306, %rd10307;
	add.s64 	%rd10309, %rd10304, %rd10308;
	add.s64 	%rd10310, %rd10299, %rd10211;
	add.s64 	%rd10311, %rd10309, %rd10299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8759,%dummy}, %rd10310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8760}, %rd10310;
	}
	shf.r.wrap.b32 	%r8761, %r8760, %r8759, 14;
	shf.r.wrap.b32 	%r8762, %r8759, %r8760, 14;
	mov.b64 	%rd10312, {%r8762, %r8761};
	shf.r.wrap.b32 	%r8763, %r8760, %r8759, 18;
	shf.r.wrap.b32 	%r8764, %r8759, %r8760, 18;
	mov.b64 	%rd10313, {%r8764, %r8763};
	xor.b64  	%rd10314, %rd10312, %rd10313;
	shf.l.wrap.b32 	%r8765, %r8759, %r8760, 23;
	shf.l.wrap.b32 	%r8766, %r8760, %r8759, 23;
	mov.b64 	%rd10315, {%r8766, %r8765};
	xor.b64  	%rd10316, %rd10314, %rd10315;
	and.b64  	%rd10317, %rd10310, %rd10285;
	not.b64 	%rd10318, %rd10310;
	and.b64  	%rd10319, %rd10260, %rd10318;
	or.b64  	%rd10320, %rd10317, %rd10319;
	add.s64 	%rd10321, %rd10320, %rd10235;
	add.s64 	%rd10322, %rd10321, %rd10316;
	add.s64 	%rd10323, %rd10322, %rd116;
	add.s64 	%rd10324, %rd10323, %rd8392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8767,%dummy}, %rd10311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8768}, %rd10311;
	}
	shf.r.wrap.b32 	%r8769, %r8768, %r8767, 28;
	shf.r.wrap.b32 	%r8770, %r8767, %r8768, 28;
	mov.b64 	%rd10325, {%r8770, %r8769};
	shf.l.wrap.b32 	%r8771, %r8767, %r8768, 30;
	shf.l.wrap.b32 	%r8772, %r8768, %r8767, 30;
	mov.b64 	%rd10326, {%r8772, %r8771};
	xor.b64  	%rd10327, %rd10325, %rd10326;
	shf.l.wrap.b32 	%r8773, %r8767, %r8768, 25;
	shf.l.wrap.b32 	%r8774, %r8768, %r8767, 25;
	mov.b64 	%rd10328, {%r8774, %r8773};
	xor.b64  	%rd10329, %rd10327, %rd10328;
	xor.b64  	%rd10330, %rd10286, %rd10261;
	and.b64  	%rd10331, %rd10311, %rd10330;
	and.b64  	%rd10332, %rd10286, %rd10261;
	xor.b64  	%rd10333, %rd10331, %rd10332;
	add.s64 	%rd10334, %rd10329, %rd10333;
	add.s64 	%rd10335, %rd10324, %rd10236;
	add.s64 	%rd10336, %rd10334, %rd10324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8775,%dummy}, %rd10335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8776}, %rd10335;
	}
	shf.r.wrap.b32 	%r8777, %r8776, %r8775, 14;
	shf.r.wrap.b32 	%r8778, %r8775, %r8776, 14;
	mov.b64 	%rd10337, {%r8778, %r8777};
	shf.r.wrap.b32 	%r8779, %r8776, %r8775, 18;
	shf.r.wrap.b32 	%r8780, %r8775, %r8776, 18;
	mov.b64 	%rd10338, {%r8780, %r8779};
	xor.b64  	%rd10339, %rd10337, %rd10338;
	shf.l.wrap.b32 	%r8781, %r8775, %r8776, 23;
	shf.l.wrap.b32 	%r8782, %r8776, %r8775, 23;
	mov.b64 	%rd10340, {%r8782, %r8781};
	xor.b64  	%rd10341, %rd10339, %rd10340;
	and.b64  	%rd10342, %rd10335, %rd10310;
	not.b64 	%rd10343, %rd10335;
	and.b64  	%rd10344, %rd10285, %rd10343;
	or.b64  	%rd10345, %rd10342, %rd10344;
	add.s64 	%rd10346, %rd10345, %rd10260;
	add.s64 	%rd10347, %rd10346, %rd10341;
	add.s64 	%rd10348, %rd10347, %rd117;
	add.s64 	%rd10349, %rd10348, %rd8405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8783,%dummy}, %rd10336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8784}, %rd10336;
	}
	shf.r.wrap.b32 	%r8785, %r8784, %r8783, 28;
	shf.r.wrap.b32 	%r8786, %r8783, %r8784, 28;
	mov.b64 	%rd10350, {%r8786, %r8785};
	shf.l.wrap.b32 	%r8787, %r8783, %r8784, 30;
	shf.l.wrap.b32 	%r8788, %r8784, %r8783, 30;
	mov.b64 	%rd10351, {%r8788, %r8787};
	xor.b64  	%rd10352, %rd10350, %rd10351;
	shf.l.wrap.b32 	%r8789, %r8783, %r8784, 25;
	shf.l.wrap.b32 	%r8790, %r8784, %r8783, 25;
	mov.b64 	%rd10353, {%r8790, %r8789};
	xor.b64  	%rd10354, %rd10352, %rd10353;
	xor.b64  	%rd10355, %rd10311, %rd10286;
	and.b64  	%rd10356, %rd10336, %rd10355;
	and.b64  	%rd10357, %rd10311, %rd10286;
	xor.b64  	%rd10358, %rd10356, %rd10357;
	add.s64 	%rd10359, %rd10354, %rd10358;
	add.s64 	%rd10360, %rd10349, %rd10261;
	add.s64 	%rd10361, %rd10359, %rd10349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8791,%dummy}, %rd10360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8792}, %rd10360;
	}
	shf.r.wrap.b32 	%r8793, %r8792, %r8791, 14;
	shf.r.wrap.b32 	%r8794, %r8791, %r8792, 14;
	mov.b64 	%rd10362, {%r8794, %r8793};
	shf.r.wrap.b32 	%r8795, %r8792, %r8791, 18;
	shf.r.wrap.b32 	%r8796, %r8791, %r8792, 18;
	mov.b64 	%rd10363, {%r8796, %r8795};
	xor.b64  	%rd10364, %rd10362, %rd10363;
	shf.l.wrap.b32 	%r8797, %r8791, %r8792, 23;
	shf.l.wrap.b32 	%r8798, %r8792, %r8791, 23;
	mov.b64 	%rd10365, {%r8798, %r8797};
	xor.b64  	%rd10366, %rd10364, %rd10365;
	and.b64  	%rd10367, %rd10360, %rd10335;
	not.b64 	%rd10368, %rd10360;
	and.b64  	%rd10369, %rd10310, %rd10368;
	or.b64  	%rd10370, %rd10367, %rd10369;
	add.s64 	%rd10371, %rd10370, %rd10285;
	add.s64 	%rd10372, %rd10371, %rd10366;
	add.s64 	%rd10373, %rd10372, %rd118;
	add.s64 	%rd10374, %rd10373, %rd8418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8799,%dummy}, %rd10361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8800}, %rd10361;
	}
	shf.r.wrap.b32 	%r8801, %r8800, %r8799, 28;
	shf.r.wrap.b32 	%r8802, %r8799, %r8800, 28;
	mov.b64 	%rd10375, {%r8802, %r8801};
	shf.l.wrap.b32 	%r8803, %r8799, %r8800, 30;
	shf.l.wrap.b32 	%r8804, %r8800, %r8799, 30;
	mov.b64 	%rd10376, {%r8804, %r8803};
	xor.b64  	%rd10377, %rd10375, %rd10376;
	shf.l.wrap.b32 	%r8805, %r8799, %r8800, 25;
	shf.l.wrap.b32 	%r8806, %r8800, %r8799, 25;
	mov.b64 	%rd10378, {%r8806, %r8805};
	xor.b64  	%rd10379, %rd10377, %rd10378;
	xor.b64  	%rd10380, %rd10336, %rd10311;
	and.b64  	%rd10381, %rd10361, %rd10380;
	and.b64  	%rd10382, %rd10336, %rd10311;
	xor.b64  	%rd10383, %rd10381, %rd10382;
	add.s64 	%rd10384, %rd10379, %rd10383;
	add.s64 	%rd10385, %rd10374, %rd10286;
	add.s64 	%rd10386, %rd10384, %rd10374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8807,%dummy}, %rd10385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8808}, %rd10385;
	}
	shf.r.wrap.b32 	%r8809, %r8808, %r8807, 14;
	shf.r.wrap.b32 	%r8810, %r8807, %r8808, 14;
	mov.b64 	%rd10387, {%r8810, %r8809};
	shf.r.wrap.b32 	%r8811, %r8808, %r8807, 18;
	shf.r.wrap.b32 	%r8812, %r8807, %r8808, 18;
	mov.b64 	%rd10388, {%r8812, %r8811};
	xor.b64  	%rd10389, %rd10387, %rd10388;
	shf.l.wrap.b32 	%r8813, %r8807, %r8808, 23;
	shf.l.wrap.b32 	%r8814, %r8808, %r8807, 23;
	mov.b64 	%rd10390, {%r8814, %r8813};
	xor.b64  	%rd10391, %rd10389, %rd10390;
	and.b64  	%rd10392, %rd10385, %rd10360;
	not.b64 	%rd10393, %rd10385;
	and.b64  	%rd10394, %rd10335, %rd10393;
	or.b64  	%rd10395, %rd10392, %rd10394;
	add.s64 	%rd10396, %rd10395, %rd10310;
	add.s64 	%rd10397, %rd10396, %rd10391;
	add.s64 	%rd10398, %rd10397, %rd119;
	add.s64 	%rd10399, %rd10398, %rd8431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8815,%dummy}, %rd10386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8816}, %rd10386;
	}
	shf.r.wrap.b32 	%r8817, %r8816, %r8815, 28;
	shf.r.wrap.b32 	%r8818, %r8815, %r8816, 28;
	mov.b64 	%rd10400, {%r8818, %r8817};
	shf.l.wrap.b32 	%r8819, %r8815, %r8816, 30;
	shf.l.wrap.b32 	%r8820, %r8816, %r8815, 30;
	mov.b64 	%rd10401, {%r8820, %r8819};
	xor.b64  	%rd10402, %rd10400, %rd10401;
	shf.l.wrap.b32 	%r8821, %r8815, %r8816, 25;
	shf.l.wrap.b32 	%r8822, %r8816, %r8815, 25;
	mov.b64 	%rd10403, {%r8822, %r8821};
	xor.b64  	%rd10404, %rd10402, %rd10403;
	xor.b64  	%rd10405, %rd10361, %rd10336;
	and.b64  	%rd10406, %rd10386, %rd10405;
	and.b64  	%rd10407, %rd10361, %rd10336;
	xor.b64  	%rd10408, %rd10406, %rd10407;
	add.s64 	%rd10409, %rd10404, %rd10408;
	add.s64 	%rd10410, %rd10399, %rd10311;
	add.s64 	%rd10411, %rd10409, %rd10399;
	add.s64 	%rd10412, %rd10411, 7640891576956012808;
	add.s64 	%rd10413, %rd10386, -4942790177534073029;
	add.s64 	%rd10414, %rd10361, 4354685564936845355;
	add.s64 	%rd10415, %rd10336, -6534734903238641935;
	add.s64 	%rd10416, %rd10410, 5840696475078001361;
	add.s64 	%rd10417, %rd10385, -7276294671716946913;
	add.s64 	%rd10418, %rd10360, 2270897969802886507;
	add.s64 	%rd10419, %rd10335, 6620516959819538809;
	shr.u64 	%rd10420, %rd10412, 56;
	shr.u64 	%rd10421, %rd10412, 48;
	shr.u64 	%rd10422, %rd10412, 40;
	cvt.u32.u64 	%r8823, %rd10422;
	shr.u64 	%rd10423, %rd10412, 32;
	cvt.u32.u64 	%r8824, %rd10412;
	shr.u64 	%rd10424, %rd10412, 16;
	shr.u64 	%rd10425, %rd10413, 56;
	shr.u64 	%rd10426, %rd10413, 48;
	shr.u64 	%rd10427, %rd10413, 40;
	cvt.u32.u64 	%r8825, %rd10427;
	shr.u64 	%rd10428, %rd10413, 32;
	cvt.u32.u64 	%r8826, %rd10413;
	shr.u64 	%rd10429, %rd10413, 16;
	cvt.u16.u64 	%rs729, %rd10420;
	cvt.u16.u64 	%rs730, %rd10421;
	shl.b16 	%rs731, %rs730, 8;
	or.b16  	%rs732, %rs729, %rs731;
	cvt.u32.u64 	%r8827, %rd10423;
	and.b32  	%r8828, %r8823, 255;
	prmt.b32 	%r8829, %r8827, %r8828, 30212;
	cvt.u16.u32 	%rs733, %r8829;
	cvt.u16.u64 	%rs734, %rd10412;
	shl.b16 	%rs735, %rs734, 8;
	shr.u16 	%rs736, %rs734, 8;
	or.b16  	%rs737, %rs736, %rs735;
	shr.u32 	%r8830, %r8824, 24;
	cvt.u32.u64 	%r8831, %rd10424;
	prmt.b32 	%r8832, %r8831, %r8830, 30212;
	cvt.u16.u32 	%rs738, %r8832;
	cvt.u16.u64 	%rs739, %rd10425;
	cvt.u16.u64 	%rs740, %rd10426;
	shl.b16 	%rs741, %rs740, 8;
	or.b16  	%rs742, %rs739, %rs741;
	cvt.u32.u64 	%r8833, %rd10428;
	and.b32  	%r8834, %r8825, 255;
	prmt.b32 	%r8835, %r8833, %r8834, 30212;
	cvt.u16.u32 	%rs743, %r8835;
	cvt.u16.u64 	%rs744, %rd10413;
	shl.b16 	%rs745, %rs744, 8;
	shr.u16 	%rs746, %rs744, 8;
	or.b16  	%rs747, %rs746, %rs745;
	shr.u32 	%r8836, %r8826, 24;
	cvt.u32.u64 	%r8837, %rd10429;
	prmt.b32 	%r8838, %r8837, %r8836, 30212;
	cvt.u16.u32 	%rs748, %r8838;
	mov.b32 	%r8839, {%rs738, %rs737};
	mov.b32 	%r8840, {%rs732, %rs733};
	mov.b32 	%r8841, {%rs748, %rs747};
	mov.b32 	%r8842, {%rs742, %rs743};
	st.local.v4.u32 	[%rd2], {%r8840, %r8839, %r8842, %r8841};
	shr.u64 	%rd10430, %rd10414, 56;
	shr.u64 	%rd10431, %rd10414, 48;
	shr.u64 	%rd10432, %rd10414, 40;
	cvt.u32.u64 	%r8843, %rd10432;
	shr.u64 	%rd10433, %rd10414, 32;
	cvt.u32.u64 	%r8844, %rd10414;
	shr.u64 	%rd10434, %rd10414, 16;
	shr.u64 	%rd10435, %rd10415, 56;
	shr.u64 	%rd10436, %rd10415, 48;
	shr.u64 	%rd10437, %rd10415, 40;
	cvt.u32.u64 	%r8845, %rd10437;
	shr.u64 	%rd10438, %rd10415, 32;
	cvt.u32.u64 	%r8846, %rd10415;
	shr.u64 	%rd10439, %rd10415, 16;
	cvt.u16.u64 	%rs749, %rd10430;
	cvt.u16.u64 	%rs750, %rd10431;
	shl.b16 	%rs751, %rs750, 8;
	or.b16  	%rs752, %rs749, %rs751;
	cvt.u32.u64 	%r8847, %rd10433;
	and.b32  	%r8848, %r8843, 255;
	prmt.b32 	%r8849, %r8847, %r8848, 30212;
	cvt.u16.u32 	%rs753, %r8849;
	cvt.u16.u64 	%rs754, %rd10414;
	shl.b16 	%rs755, %rs754, 8;
	shr.u16 	%rs756, %rs754, 8;
	or.b16  	%rs757, %rs756, %rs755;
	shr.u32 	%r8850, %r8844, 24;
	cvt.u32.u64 	%r8851, %rd10434;
	prmt.b32 	%r8852, %r8851, %r8850, 30212;
	cvt.u16.u32 	%rs758, %r8852;
	cvt.u16.u64 	%rs759, %rd10435;
	cvt.u16.u64 	%rs760, %rd10436;
	shl.b16 	%rs761, %rs760, 8;
	or.b16  	%rs762, %rs759, %rs761;
	cvt.u32.u64 	%r8853, %rd10438;
	and.b32  	%r8854, %r8845, 255;
	prmt.b32 	%r8855, %r8853, %r8854, 30212;
	cvt.u16.u32 	%rs763, %r8855;
	cvt.u16.u64 	%rs764, %rd10415;
	shl.b16 	%rs765, %rs764, 8;
	shr.u16 	%rs766, %rs764, 8;
	or.b16  	%rs767, %rs766, %rs765;
	shr.u32 	%r8856, %r8846, 24;
	cvt.u32.u64 	%r8857, %rd10439;
	prmt.b32 	%r8858, %r8857, %r8856, 30212;
	cvt.u16.u32 	%rs768, %r8858;
	mov.b32 	%r8859, {%rs758, %rs757};
	mov.b32 	%r8860, {%rs752, %rs753};
	mov.b32 	%r8861, {%rs768, %rs767};
	mov.b32 	%r8862, {%rs762, %rs763};
	st.local.v4.u32 	[%rd2+16], {%r8860, %r8859, %r8862, %r8861};
	shr.u64 	%rd10440, %rd10416, 56;
	shr.u64 	%rd10441, %rd10416, 48;
	shr.u64 	%rd10442, %rd10416, 40;
	cvt.u32.u64 	%r8863, %rd10442;
	shr.u64 	%rd10443, %rd10416, 32;
	cvt.u32.u64 	%r8864, %rd10416;
	shr.u64 	%rd10444, %rd10416, 16;
	shr.u64 	%rd10445, %rd10417, 56;
	shr.u64 	%rd10446, %rd10417, 48;
	shr.u64 	%rd10447, %rd10417, 40;
	cvt.u32.u64 	%r8865, %rd10447;
	shr.u64 	%rd10448, %rd10417, 32;
	cvt.u32.u64 	%r8866, %rd10417;
	shr.u64 	%rd10449, %rd10417, 16;
	cvt.u16.u64 	%rs769, %rd10440;
	cvt.u16.u64 	%rs770, %rd10441;
	shl.b16 	%rs771, %rs770, 8;
	or.b16  	%rs772, %rs769, %rs771;
	cvt.u32.u64 	%r8867, %rd10443;
	and.b32  	%r8868, %r8863, 255;
	prmt.b32 	%r8869, %r8867, %r8868, 30212;
	cvt.u16.u32 	%rs773, %r8869;
	cvt.u16.u64 	%rs774, %rd10416;
	shl.b16 	%rs775, %rs774, 8;
	shr.u16 	%rs776, %rs774, 8;
	or.b16  	%rs777, %rs776, %rs775;
	shr.u32 	%r8870, %r8864, 24;
	cvt.u32.u64 	%r8871, %rd10444;
	prmt.b32 	%r8872, %r8871, %r8870, 30212;
	cvt.u16.u32 	%rs778, %r8872;
	cvt.u16.u64 	%rs779, %rd10445;
	cvt.u16.u64 	%rs780, %rd10446;
	shl.b16 	%rs781, %rs780, 8;
	or.b16  	%rs782, %rs779, %rs781;
	cvt.u32.u64 	%r8873, %rd10448;
	and.b32  	%r8874, %r8865, 255;
	prmt.b32 	%r8875, %r8873, %r8874, 30212;
	cvt.u16.u32 	%rs783, %r8875;
	cvt.u16.u64 	%rs784, %rd10417;
	shl.b16 	%rs785, %rs784, 8;
	shr.u16 	%rs786, %rs784, 8;
	or.b16  	%rs787, %rs786, %rs785;
	shr.u32 	%r8876, %r8866, 24;
	cvt.u32.u64 	%r8877, %rd10449;
	prmt.b32 	%r8878, %r8877, %r8876, 30212;
	cvt.u16.u32 	%rs788, %r8878;
	mov.b32 	%r8879, {%rs778, %rs777};
	mov.b32 	%r8880, {%rs772, %rs773};
	mov.b32 	%r8881, {%rs788, %rs787};
	mov.b32 	%r8882, {%rs782, %rs783};
	st.local.v4.u32 	[%rd2+32], {%r8880, %r8879, %r8882, %r8881};
	shr.u64 	%rd10450, %rd10418, 56;
	shr.u64 	%rd10451, %rd10418, 48;
	shr.u64 	%rd10452, %rd10418, 40;
	cvt.u32.u64 	%r8883, %rd10452;
	shr.u64 	%rd10453, %rd10418, 32;
	cvt.u32.u64 	%r8884, %rd10418;
	shr.u64 	%rd10454, %rd10418, 16;
	shr.u64 	%rd10455, %rd10419, 56;
	shr.u64 	%rd10456, %rd10419, 48;
	shr.u64 	%rd10457, %rd10419, 40;
	cvt.u32.u64 	%r8885, %rd10457;
	shr.u64 	%rd10458, %rd10419, 32;
	cvt.u32.u64 	%r8886, %rd10419;
	shr.u64 	%rd10459, %rd10419, 16;
	cvt.u16.u64 	%rs789, %rd10450;
	cvt.u16.u64 	%rs790, %rd10451;
	shl.b16 	%rs791, %rs790, 8;
	or.b16  	%rs792, %rs789, %rs791;
	cvt.u32.u64 	%r8887, %rd10453;
	and.b32  	%r8888, %r8883, 255;
	prmt.b32 	%r8889, %r8887, %r8888, 30212;
	cvt.u16.u32 	%rs793, %r8889;
	cvt.u16.u64 	%rs794, %rd10418;
	shl.b16 	%rs795, %rs794, 8;
	shr.u16 	%rs796, %rs794, 8;
	or.b16  	%rs797, %rs796, %rs795;
	shr.u32 	%r8890, %r8884, 24;
	cvt.u32.u64 	%r8891, %rd10454;
	prmt.b32 	%r8892, %r8891, %r8890, 30212;
	cvt.u16.u32 	%rs798, %r8892;
	cvt.u16.u64 	%rs799, %rd10455;
	cvt.u16.u64 	%rs800, %rd10456;
	shl.b16 	%rs801, %rs800, 8;
	or.b16  	%rs802, %rs799, %rs801;
	cvt.u32.u64 	%r8893, %rd10458;
	and.b32  	%r8894, %r8885, 255;
	prmt.b32 	%r8895, %r8893, %r8894, 30212;
	cvt.u16.u32 	%rs803, %r8895;
	cvt.u16.u64 	%rs804, %rd10419;
	shl.b16 	%rs805, %rs804, 8;
	shr.u16 	%rs806, %rs804, 8;
	or.b16  	%rs807, %rs806, %rs805;
	shr.u32 	%r8896, %r8886, 24;
	cvt.u32.u64 	%r8897, %rd10459;
	prmt.b32 	%r8898, %r8897, %r8896, 30212;
	cvt.u16.u32 	%rs808, %r8898;
	mov.b32 	%r8899, {%rs798, %rs797};
	mov.b32 	%r8900, {%rs792, %rs793};
	mov.b32 	%r8901, {%rs808, %rs807};
	mov.b32 	%r8902, {%rs802, %rs803};
	st.local.v4.u32 	[%rd2+48], {%r8900, %r8899, %r8902, %r8901};
	mov.u32 	%r11226, 64;
	mov.u64 	%rd15516, %rd2;

$L__BB4_100:
	setp.lt.s32 	%p72, %r11226, 1;
	@%p72 bra 	$L__BB4_108;

	add.s32 	%r8904, %r11226, -1;
	and.b32  	%r107, %r11226, 3;
	setp.lt.u32 	%p73, %r8904, 3;
	mov.u32 	%r11229, 0;
	@%p73 bra 	$L__BB4_104;

	sub.s32 	%r11228, %r11226, %r107;

$L__BB4_103:
	cvt.s64.s32 	%rd10461, %r11229;
	add.s64 	%rd10462, %rd15516, %rd10461;
	ld.local.u8 	%rs809, [%rd10462];
	xor.b16  	%rs810, %rs809, 54;
	add.s64 	%rd10463, %rd2, %rd10461;
	st.local.u8 	[%rd10463], %rs810;
	ld.local.u8 	%rs811, [%rd10462];
	add.s64 	%rd10464, %rd3, %rd10461;
	ld.local.u8 	%rs812, [%rd10462+1];
	xor.b16  	%rs813, %rs812, 54;
	st.local.u8 	[%rd10463+1], %rs813;
	ld.local.u8 	%rs814, [%rd10462+1];
	ld.local.u8 	%rs815, [%rd10462+2];
	xor.b16  	%rs816, %rs815, 54;
	st.local.u8 	[%rd10463+2], %rs816;
	ld.local.u8 	%rs817, [%rd10462+2];
	ld.local.u8 	%rs818, [%rd10462+3];
	xor.b16  	%rs819, %rs818, 54;
	st.local.u8 	[%rd10463+3], %rs819;
	ld.local.u8 	%rs820, [%rd10462+3];
	xor.b16  	%rs821, %rs811, 92;
	xor.b16  	%rs822, %rs814, 92;
	xor.b16  	%rs823, %rs817, 92;
	xor.b16  	%rs824, %rs820, 92;
	st.local.v4.u8 	[%rd10464], {%rs821, %rs822, %rs823, %rs824};
	add.s32 	%r11229, %r11229, 4;
	add.s32 	%r11228, %r11228, -4;
	setp.ne.s32 	%p74, %r11228, 0;
	@%p74 bra 	$L__BB4_103;

$L__BB4_104:
	setp.eq.s32 	%p75, %r107, 0;
	@%p75 bra 	$L__BB4_108;

	cvt.s64.s32 	%rd10465, %r11229;
	add.s64 	%rd147, %rd15516, %rd10465;
	ld.local.u8 	%rs825, [%rd147];
	xor.b16  	%rs826, %rs825, 54;
	add.s64 	%rd148, %rd2, %rd10465;
	st.local.u8 	[%rd148], %rs826;
	ld.local.u8 	%rs827, [%rd147];
	xor.b16  	%rs828, %rs827, 92;
	add.s64 	%rd149, %rd3, %rd10465;
	st.local.u8 	[%rd149], %rs828;
	setp.eq.s32 	%p76, %r107, 1;
	@%p76 bra 	$L__BB4_108;

	ld.local.u8 	%rs829, [%rd147+1];
	xor.b16  	%rs830, %rs829, 54;
	st.local.u8 	[%rd148+1], %rs830;
	ld.local.u8 	%rs831, [%rd147+1];
	xor.b16  	%rs832, %rs831, 92;
	st.local.u8 	[%rd149+1], %rs832;
	setp.eq.s32 	%p77, %r107, 2;
	@%p77 bra 	$L__BB4_108;

	ld.local.u8 	%rs833, [%rd147+2];
	xor.b16  	%rs834, %rs833, 54;
	st.local.u8 	[%rd148+2], %rs834;
	ld.local.u8 	%rs835, [%rd147+2];
	xor.b16  	%rs836, %rs835, 92;
	st.local.u8 	[%rd149+2], %rs836;

$L__BB4_108:
	setp.gt.s32 	%p78, %r11226, 127;
	@%p78 bra 	$L__BB4_116;

	neg.s32 	%r8906, %r11226;
	and.b32  	%r114, %r8906, 3;
	setp.eq.s32 	%p79, %r114, 0;
	mov.u32 	%r11230, %r11226;
	@%p79 bra 	$L__BB4_113;

	cvt.s64.s32 	%rd10468, %r11226;
	add.s64 	%rd150, %rd2, %rd10468;
	mov.u16 	%rs837, 54;
	st.local.u8 	[%rd150], %rs837;
	add.s64 	%rd151, %rd3, %rd10468;
	mov.u16 	%rs838, 92;
	st.local.u8 	[%rd151], %rs838;
	add.s32 	%r11230, %r11226, 1;
	setp.eq.s32 	%p80, %r114, 1;
	@%p80 bra 	$L__BB4_113;

	st.local.u8 	[%rd150+1], %rs837;
	st.local.u8 	[%rd151+1], %rs838;
	add.s32 	%r11230, %r11226, 2;
	setp.eq.s32 	%p81, %r114, 2;
	@%p81 bra 	$L__BB4_113;

	mov.u16 	%rs841, 54;
	st.local.u8 	[%rd150+2], %rs841;
	mov.u16 	%rs842, 92;
	st.local.u8 	[%rd151+2], %rs842;
	add.s32 	%r11230, %r11226, 3;

$L__BB4_113:
	mov.u32 	%r8907, 127;
	sub.s32 	%r8908, %r8907, %r11226;
	setp.lt.u32 	%p82, %r8908, 3;
	@%p82 bra 	$L__BB4_116;

$L__BB4_115:
	cvt.s64.s32 	%rd10472, %r11230;
	add.s64 	%rd10473, %rd2, %rd10472;
	mov.u16 	%rs843, 54;
	st.local.u8 	[%rd10473], %rs843;
	add.s64 	%rd10474, %rd3, %rd10472;
	mov.u16 	%rs844, 92;
	st.local.u8 	[%rd10474], %rs844;
	st.local.u8 	[%rd10473+1], %rs843;
	st.local.u8 	[%rd10474+1], %rs844;
	st.local.u8 	[%rd10473+2], %rs843;
	st.local.u8 	[%rd10474+2], %rs844;
	st.local.u8 	[%rd10473+3], %rs843;
	st.local.u8 	[%rd10474+3], %rs844;
	add.s32 	%r120, %r11230, 4;
	setp.lt.s32 	%p83, %r11230, 124;
	mov.u32 	%r11230, %r120;
	@%p83 bra 	$L__BB4_115;

$L__BB4_116:
	ld.local.v4.u32 	{%r8909, %r8910, %r8911, %r8912}, [%rd3];
	mov.b32 	{%rs845, %rs846}, %r8909;
	shr.u16 	%rs847, %rs845, 8;
	shr.u16 	%rs848, %rs846, 8;
	mov.b32 	{%rs849, %rs850}, %r8910;
	shr.u16 	%rs851, %rs849, 8;
	shr.u16 	%rs852, %rs850, 8;
	mov.b32 	{%rs853, %rs854}, %r8911;
	shr.u16 	%rs855, %rs853, 8;
	shr.u16 	%rs856, %rs854, 8;
	mov.b32 	{%rs857, %rs858}, %r8912;
	shr.u16 	%rs859, %rs857, 8;
	shr.u16 	%rs860, %rs858, 8;
	ld.local.v4.u32 	{%r8917, %r8918, %r8919, %r8920}, [%rd3+16];
	mov.b32 	{%rs861, %rs862}, %r8917;
	shr.u16 	%rs863, %rs861, 8;
	shr.u16 	%rs864, %rs862, 8;
	mov.b32 	{%rs865, %rs866}, %r8918;
	shr.u16 	%rs867, %rs865, 8;
	shr.u16 	%rs868, %rs866, 8;
	mov.b32 	{%rs869, %rs870}, %r8919;
	shr.u16 	%rs871, %rs869, 8;
	shr.u16 	%rs872, %rs870, 8;
	mov.b32 	{%rs873, %rs874}, %r8920;
	shr.u16 	%rs875, %rs873, 8;
	shr.u16 	%rs876, %rs874, 8;
	ld.local.v4.u32 	{%r8925, %r8926, %r8927, %r8928}, [%rd3+32];
	mov.b32 	{%rs877, %rs878}, %r8925;
	shr.u16 	%rs879, %rs877, 8;
	shr.u16 	%rs880, %rs878, 8;
	mov.b32 	{%rs881, %rs882}, %r8926;
	shr.u16 	%rs883, %rs881, 8;
	shr.u16 	%rs884, %rs882, 8;
	mov.b32 	{%rs885, %rs886}, %r8927;
	shr.u16 	%rs887, %rs885, 8;
	shr.u16 	%rs888, %rs886, 8;
	mov.b32 	{%rs889, %rs890}, %r8928;
	shr.u16 	%rs891, %rs889, 8;
	shr.u16 	%rs892, %rs890, 8;
	ld.local.v4.u32 	{%r8933, %r8934, %r8935, %r8936}, [%rd3+48];
	mov.b32 	{%rs893, %rs894}, %r8933;
	shr.u16 	%rs895, %rs893, 8;
	shr.u16 	%rs896, %rs894, 8;
	mov.b32 	{%rs897, %rs898}, %r8934;
	shr.u16 	%rs899, %rs897, 8;
	shr.u16 	%rs900, %rs898, 8;
	mov.b32 	{%rs901, %rs902}, %r8935;
	shr.u16 	%rs903, %rs901, 8;
	shr.u16 	%rs904, %rs902, 8;
	mov.b32 	{%rs905, %rs906}, %r8936;
	shr.u16 	%rs907, %rs905, 8;
	shr.u16 	%rs908, %rs906, 8;
	ld.local.v4.u32 	{%r8941, %r8942, %r8943, %r8944}, [%rd3+64];
	mov.b32 	{%rs909, %rs910}, %r8941;
	shr.u16 	%rs911, %rs909, 8;
	shr.u16 	%rs912, %rs910, 8;
	mov.b32 	{%rs913, %rs914}, %r8942;
	shr.u16 	%rs915, %rs913, 8;
	shr.u16 	%rs916, %rs914, 8;
	mov.b32 	{%rs917, %rs918}, %r8943;
	shr.u16 	%rs919, %rs917, 8;
	shr.u16 	%rs920, %rs918, 8;
	mov.b32 	{%rs921, %rs922}, %r8944;
	shr.u16 	%rs923, %rs921, 8;
	shr.u16 	%rs924, %rs922, 8;
	ld.local.v4.u32 	{%r8949, %r8950, %r8951, %r8952}, [%rd3+80];
	mov.b32 	{%rs925, %rs926}, %r8949;
	shr.u16 	%rs927, %rs925, 8;
	shr.u16 	%rs928, %rs926, 8;
	mov.b32 	{%rs929, %rs930}, %r8950;
	shr.u16 	%rs931, %rs929, 8;
	shr.u16 	%rs932, %rs930, 8;
	mov.b32 	{%rs933, %rs934}, %r8951;
	shr.u16 	%rs935, %rs933, 8;
	shr.u16 	%rs936, %rs934, 8;
	mov.b32 	{%rs937, %rs938}, %r8952;
	shr.u16 	%rs939, %rs937, 8;
	shr.u16 	%rs940, %rs938, 8;
	ld.local.v4.u32 	{%r8957, %r8958, %r8959, %r8960}, [%rd3+96];
	mov.b32 	{%rs941, %rs942}, %r8957;
	shr.u16 	%rs943, %rs941, 8;
	shr.u16 	%rs944, %rs942, 8;
	mov.b32 	{%rs945, %rs946}, %r8958;
	shr.u16 	%rs947, %rs945, 8;
	shr.u16 	%rs948, %rs946, 8;
	mov.b32 	{%rs949, %rs950}, %r8959;
	shr.u16 	%rs951, %rs949, 8;
	shr.u16 	%rs952, %rs950, 8;
	mov.b32 	{%rs953, %rs954}, %r8960;
	shr.u16 	%rs955, %rs953, 8;
	shr.u16 	%rs956, %rs954, 8;
	ld.local.v4.u32 	{%r8965, %r8966, %r8967, %r8968}, [%rd3+112];
	mov.b32 	{%rs957, %rs958}, %r8965;
	shr.u16 	%rs959, %rs957, 8;
	shr.u16 	%rs960, %rs958, 8;
	mov.b32 	{%rs961, %rs962}, %r8966;
	shr.u16 	%rs963, %rs961, 8;
	shr.u16 	%rs964, %rs962, 8;
	mov.b32 	{%rs965, %rs966}, %r8967;
	shr.u16 	%rs967, %rs965, 8;
	shr.u16 	%rs968, %rs966, 8;
	mov.b32 	{%rs969, %rs970}, %r8968;
	shr.u16 	%rs971, %rs969, 8;
	shr.u16 	%rs972, %rs970, 8;
	cvt.u64.u16 	%rd10477, %rs845;
	shl.b64 	%rd10478, %rd10477, 56;
	cvt.u64.u16 	%rd10479, %rs847;
	shl.b64 	%rd10480, %rd10479, 48;
	or.b64  	%rd10481, %rd10480, %rd10478;
	cvt.u64.u16 	%rd10482, %rs846;
	shl.b64 	%rd10483, %rd10482, 40;
	and.b64  	%rd10484, %rd10483, 280375465082880;
	or.b64  	%rd10485, %rd10481, %rd10484;
	cvt.u64.u16 	%rd10486, %rs848;
	shl.b64 	%rd10487, %rd10486, 32;
	or.b64  	%rd10488, %rd10485, %rd10487;
	cvt.u32.u16 	%r8973, %rs849;
	and.b32  	%r8974, %r8973, 255;
	mul.wide.u32 	%rd10489, %r8974, 16777216;
	or.b64  	%rd10490, %rd10488, %rd10489;
	cvt.u32.u16 	%r8975, %rs851;
	mul.wide.u32 	%rd10491, %r8975, 65536;
	or.b64  	%rd10492, %rd10490, %rd10491;
	cvt.u32.u16 	%r8976, %rs850;
	and.b32  	%r8977, %r8976, 255;
	mul.wide.u32 	%rd10493, %r8977, 256;
	or.b64  	%rd10494, %rd10492, %rd10493;
	cvt.u64.u16 	%rd10495, %rs852;
	or.b64  	%rd10496, %rd10494, %rd10495;
	cvt.u64.u16 	%rd10497, %rs853;
	shl.b64 	%rd10498, %rd10497, 56;
	cvt.u64.u16 	%rd10499, %rs855;
	shl.b64 	%rd10500, %rd10499, 48;
	or.b64  	%rd10501, %rd10500, %rd10498;
	cvt.u64.u16 	%rd10502, %rs854;
	shl.b64 	%rd10503, %rd10502, 40;
	and.b64  	%rd10504, %rd10503, 280375465082880;
	or.b64  	%rd10505, %rd10501, %rd10504;
	cvt.u64.u16 	%rd10506, %rs856;
	shl.b64 	%rd10507, %rd10506, 32;
	or.b64  	%rd10508, %rd10505, %rd10507;
	cvt.u32.u16 	%r8978, %rs857;
	and.b32  	%r8979, %r8978, 255;
	mul.wide.u32 	%rd10509, %r8979, 16777216;
	or.b64  	%rd10510, %rd10508, %rd10509;
	cvt.u32.u16 	%r8980, %rs859;
	mul.wide.u32 	%rd10511, %r8980, 65536;
	or.b64  	%rd10512, %rd10510, %rd10511;
	cvt.u32.u16 	%r8981, %rs858;
	and.b32  	%r8982, %r8981, 255;
	mul.wide.u32 	%rd10513, %r8982, 256;
	or.b64  	%rd10514, %rd10512, %rd10513;
	cvt.u64.u16 	%rd10515, %rs860;
	or.b64  	%rd10516, %rd10514, %rd10515;
	cvt.u64.u16 	%rd10517, %rs861;
	shl.b64 	%rd10518, %rd10517, 56;
	cvt.u64.u16 	%rd10519, %rs863;
	shl.b64 	%rd10520, %rd10519, 48;
	or.b64  	%rd10521, %rd10520, %rd10518;
	cvt.u64.u16 	%rd10522, %rs862;
	shl.b64 	%rd10523, %rd10522, 40;
	and.b64  	%rd10524, %rd10523, 280375465082880;
	or.b64  	%rd10525, %rd10521, %rd10524;
	cvt.u64.u16 	%rd10526, %rs864;
	shl.b64 	%rd10527, %rd10526, 32;
	or.b64  	%rd10528, %rd10525, %rd10527;
	cvt.u32.u16 	%r8983, %rs865;
	and.b32  	%r8984, %r8983, 255;
	mul.wide.u32 	%rd10529, %r8984, 16777216;
	or.b64  	%rd10530, %rd10528, %rd10529;
	cvt.u32.u16 	%r8985, %rs867;
	mul.wide.u32 	%rd10531, %r8985, 65536;
	or.b64  	%rd10532, %rd10530, %rd10531;
	cvt.u32.u16 	%r8986, %rs866;
	and.b32  	%r8987, %r8986, 255;
	mul.wide.u32 	%rd10533, %r8987, 256;
	or.b64  	%rd10534, %rd10532, %rd10533;
	cvt.u64.u16 	%rd10535, %rs868;
	or.b64  	%rd10536, %rd10534, %rd10535;
	cvt.u64.u16 	%rd10537, %rs869;
	shl.b64 	%rd10538, %rd10537, 56;
	cvt.u64.u16 	%rd10539, %rs871;
	shl.b64 	%rd10540, %rd10539, 48;
	or.b64  	%rd10541, %rd10540, %rd10538;
	cvt.u64.u16 	%rd10542, %rs870;
	shl.b64 	%rd10543, %rd10542, 40;
	and.b64  	%rd10544, %rd10543, 280375465082880;
	or.b64  	%rd10545, %rd10541, %rd10544;
	cvt.u64.u16 	%rd10546, %rs872;
	shl.b64 	%rd10547, %rd10546, 32;
	or.b64  	%rd10548, %rd10545, %rd10547;
	cvt.u32.u16 	%r8988, %rs873;
	and.b32  	%r8989, %r8988, 255;
	mul.wide.u32 	%rd10549, %r8989, 16777216;
	or.b64  	%rd10550, %rd10548, %rd10549;
	cvt.u32.u16 	%r8990, %rs875;
	mul.wide.u32 	%rd10551, %r8990, 65536;
	or.b64  	%rd10552, %rd10550, %rd10551;
	cvt.u32.u16 	%r8991, %rs874;
	and.b32  	%r8992, %r8991, 255;
	mul.wide.u32 	%rd10553, %r8992, 256;
	or.b64  	%rd10554, %rd10552, %rd10553;
	cvt.u64.u16 	%rd10555, %rs876;
	or.b64  	%rd10556, %rd10554, %rd10555;
	cvt.u64.u16 	%rd10557, %rs877;
	shl.b64 	%rd10558, %rd10557, 56;
	cvt.u64.u16 	%rd10559, %rs879;
	shl.b64 	%rd10560, %rd10559, 48;
	or.b64  	%rd10561, %rd10560, %rd10558;
	cvt.u64.u16 	%rd10562, %rs878;
	shl.b64 	%rd10563, %rd10562, 40;
	and.b64  	%rd10564, %rd10563, 280375465082880;
	or.b64  	%rd10565, %rd10561, %rd10564;
	cvt.u64.u16 	%rd10566, %rs880;
	shl.b64 	%rd10567, %rd10566, 32;
	or.b64  	%rd10568, %rd10565, %rd10567;
	cvt.u32.u16 	%r8993, %rs881;
	and.b32  	%r8994, %r8993, 255;
	mul.wide.u32 	%rd10569, %r8994, 16777216;
	or.b64  	%rd10570, %rd10568, %rd10569;
	cvt.u32.u16 	%r8995, %rs883;
	mul.wide.u32 	%rd10571, %r8995, 65536;
	or.b64  	%rd10572, %rd10570, %rd10571;
	cvt.u32.u16 	%r8996, %rs882;
	and.b32  	%r8997, %r8996, 255;
	mul.wide.u32 	%rd10573, %r8997, 256;
	or.b64  	%rd10574, %rd10572, %rd10573;
	cvt.u64.u16 	%rd10575, %rs884;
	or.b64  	%rd10576, %rd10574, %rd10575;
	cvt.u64.u16 	%rd10577, %rs885;
	shl.b64 	%rd10578, %rd10577, 56;
	cvt.u64.u16 	%rd10579, %rs887;
	shl.b64 	%rd10580, %rd10579, 48;
	or.b64  	%rd10581, %rd10580, %rd10578;
	cvt.u64.u16 	%rd10582, %rs886;
	shl.b64 	%rd10583, %rd10582, 40;
	and.b64  	%rd10584, %rd10583, 280375465082880;
	or.b64  	%rd10585, %rd10581, %rd10584;
	cvt.u64.u16 	%rd10586, %rs888;
	shl.b64 	%rd10587, %rd10586, 32;
	or.b64  	%rd10588, %rd10585, %rd10587;
	cvt.u32.u16 	%r8998, %rs889;
	and.b32  	%r8999, %r8998, 255;
	mul.wide.u32 	%rd10589, %r8999, 16777216;
	or.b64  	%rd10590, %rd10588, %rd10589;
	cvt.u32.u16 	%r9000, %rs891;
	mul.wide.u32 	%rd10591, %r9000, 65536;
	or.b64  	%rd10592, %rd10590, %rd10591;
	cvt.u32.u16 	%r9001, %rs890;
	and.b32  	%r9002, %r9001, 255;
	mul.wide.u32 	%rd10593, %r9002, 256;
	or.b64  	%rd10594, %rd10592, %rd10593;
	cvt.u64.u16 	%rd10595, %rs892;
	or.b64  	%rd10596, %rd10594, %rd10595;
	cvt.u64.u16 	%rd10597, %rs893;
	shl.b64 	%rd10598, %rd10597, 56;
	cvt.u64.u16 	%rd10599, %rs895;
	shl.b64 	%rd10600, %rd10599, 48;
	or.b64  	%rd10601, %rd10600, %rd10598;
	cvt.u64.u16 	%rd10602, %rs894;
	shl.b64 	%rd10603, %rd10602, 40;
	and.b64  	%rd10604, %rd10603, 280375465082880;
	or.b64  	%rd10605, %rd10601, %rd10604;
	cvt.u64.u16 	%rd10606, %rs896;
	shl.b64 	%rd10607, %rd10606, 32;
	or.b64  	%rd10608, %rd10605, %rd10607;
	cvt.u32.u16 	%r9003, %rs897;
	and.b32  	%r9004, %r9003, 255;
	mul.wide.u32 	%rd10609, %r9004, 16777216;
	or.b64  	%rd10610, %rd10608, %rd10609;
	cvt.u32.u16 	%r9005, %rs899;
	mul.wide.u32 	%rd10611, %r9005, 65536;
	or.b64  	%rd10612, %rd10610, %rd10611;
	cvt.u32.u16 	%r9006, %rs898;
	and.b32  	%r9007, %r9006, 255;
	mul.wide.u32 	%rd10613, %r9007, 256;
	or.b64  	%rd10614, %rd10612, %rd10613;
	cvt.u64.u16 	%rd10615, %rs900;
	or.b64  	%rd10616, %rd10614, %rd10615;
	cvt.u64.u16 	%rd10617, %rs901;
	shl.b64 	%rd10618, %rd10617, 56;
	cvt.u64.u16 	%rd10619, %rs903;
	shl.b64 	%rd10620, %rd10619, 48;
	or.b64  	%rd10621, %rd10620, %rd10618;
	cvt.u64.u16 	%rd10622, %rs902;
	shl.b64 	%rd10623, %rd10622, 40;
	and.b64  	%rd10624, %rd10623, 280375465082880;
	or.b64  	%rd10625, %rd10621, %rd10624;
	cvt.u64.u16 	%rd10626, %rs904;
	shl.b64 	%rd10627, %rd10626, 32;
	or.b64  	%rd10628, %rd10625, %rd10627;
	cvt.u32.u16 	%r9008, %rs905;
	and.b32  	%r9009, %r9008, 255;
	mul.wide.u32 	%rd10629, %r9009, 16777216;
	or.b64  	%rd10630, %rd10628, %rd10629;
	cvt.u32.u16 	%r9010, %rs907;
	mul.wide.u32 	%rd10631, %r9010, 65536;
	or.b64  	%rd10632, %rd10630, %rd10631;
	cvt.u32.u16 	%r9011, %rs906;
	and.b32  	%r9012, %r9011, 255;
	mul.wide.u32 	%rd10633, %r9012, 256;
	or.b64  	%rd10634, %rd10632, %rd10633;
	cvt.u64.u16 	%rd10635, %rs908;
	or.b64  	%rd10636, %rd10634, %rd10635;
	cvt.u64.u16 	%rd10637, %rs909;
	shl.b64 	%rd10638, %rd10637, 56;
	cvt.u64.u16 	%rd10639, %rs911;
	shl.b64 	%rd10640, %rd10639, 48;
	or.b64  	%rd10641, %rd10640, %rd10638;
	cvt.u64.u16 	%rd10642, %rs910;
	shl.b64 	%rd10643, %rd10642, 40;
	and.b64  	%rd10644, %rd10643, 280375465082880;
	or.b64  	%rd10645, %rd10641, %rd10644;
	cvt.u64.u16 	%rd10646, %rs912;
	shl.b64 	%rd10647, %rd10646, 32;
	or.b64  	%rd10648, %rd10645, %rd10647;
	cvt.u32.u16 	%r9013, %rs913;
	and.b32  	%r9014, %r9013, 255;
	mul.wide.u32 	%rd10649, %r9014, 16777216;
	or.b64  	%rd10650, %rd10648, %rd10649;
	cvt.u32.u16 	%r9015, %rs915;
	mul.wide.u32 	%rd10651, %r9015, 65536;
	or.b64  	%rd10652, %rd10650, %rd10651;
	cvt.u32.u16 	%r9016, %rs914;
	and.b32  	%r9017, %r9016, 255;
	mul.wide.u32 	%rd10653, %r9017, 256;
	or.b64  	%rd10654, %rd10652, %rd10653;
	cvt.u64.u16 	%rd10655, %rs916;
	or.b64  	%rd10656, %rd10654, %rd10655;
	cvt.u64.u16 	%rd10657, %rs917;
	shl.b64 	%rd10658, %rd10657, 56;
	cvt.u64.u16 	%rd10659, %rs919;
	shl.b64 	%rd10660, %rd10659, 48;
	or.b64  	%rd10661, %rd10660, %rd10658;
	cvt.u64.u16 	%rd10662, %rs918;
	shl.b64 	%rd10663, %rd10662, 40;
	and.b64  	%rd10664, %rd10663, 280375465082880;
	or.b64  	%rd10665, %rd10661, %rd10664;
	cvt.u64.u16 	%rd10666, %rs920;
	shl.b64 	%rd10667, %rd10666, 32;
	or.b64  	%rd10668, %rd10665, %rd10667;
	cvt.u32.u16 	%r9018, %rs921;
	and.b32  	%r9019, %r9018, 255;
	mul.wide.u32 	%rd10669, %r9019, 16777216;
	or.b64  	%rd10670, %rd10668, %rd10669;
	cvt.u32.u16 	%r9020, %rs923;
	mul.wide.u32 	%rd10671, %r9020, 65536;
	or.b64  	%rd10672, %rd10670, %rd10671;
	cvt.u32.u16 	%r9021, %rs922;
	and.b32  	%r9022, %r9021, 255;
	mul.wide.u32 	%rd10673, %r9022, 256;
	or.b64  	%rd10674, %rd10672, %rd10673;
	cvt.u64.u16 	%rd10675, %rs924;
	or.b64  	%rd10676, %rd10674, %rd10675;
	cvt.u64.u16 	%rd10677, %rs925;
	shl.b64 	%rd10678, %rd10677, 56;
	cvt.u64.u16 	%rd10679, %rs927;
	shl.b64 	%rd10680, %rd10679, 48;
	or.b64  	%rd10681, %rd10680, %rd10678;
	cvt.u64.u16 	%rd10682, %rs926;
	shl.b64 	%rd10683, %rd10682, 40;
	and.b64  	%rd10684, %rd10683, 280375465082880;
	or.b64  	%rd10685, %rd10681, %rd10684;
	cvt.u64.u16 	%rd10686, %rs928;
	shl.b64 	%rd10687, %rd10686, 32;
	or.b64  	%rd10688, %rd10685, %rd10687;
	cvt.u32.u16 	%r9023, %rs929;
	and.b32  	%r9024, %r9023, 255;
	mul.wide.u32 	%rd10689, %r9024, 16777216;
	or.b64  	%rd10690, %rd10688, %rd10689;
	cvt.u32.u16 	%r9025, %rs931;
	mul.wide.u32 	%rd10691, %r9025, 65536;
	or.b64  	%rd10692, %rd10690, %rd10691;
	cvt.u32.u16 	%r9026, %rs930;
	and.b32  	%r9027, %r9026, 255;
	mul.wide.u32 	%rd10693, %r9027, 256;
	or.b64  	%rd10694, %rd10692, %rd10693;
	cvt.u64.u16 	%rd10695, %rs932;
	or.b64  	%rd10696, %rd10694, %rd10695;
	cvt.u64.u16 	%rd10697, %rs933;
	shl.b64 	%rd10698, %rd10697, 56;
	cvt.u64.u16 	%rd10699, %rs935;
	shl.b64 	%rd10700, %rd10699, 48;
	or.b64  	%rd10701, %rd10700, %rd10698;
	cvt.u64.u16 	%rd10702, %rs934;
	shl.b64 	%rd10703, %rd10702, 40;
	and.b64  	%rd10704, %rd10703, 280375465082880;
	or.b64  	%rd10705, %rd10701, %rd10704;
	cvt.u64.u16 	%rd10706, %rs936;
	shl.b64 	%rd10707, %rd10706, 32;
	or.b64  	%rd10708, %rd10705, %rd10707;
	cvt.u32.u16 	%r9028, %rs937;
	and.b32  	%r9029, %r9028, 255;
	mul.wide.u32 	%rd10709, %r9029, 16777216;
	or.b64  	%rd10710, %rd10708, %rd10709;
	cvt.u32.u16 	%r9030, %rs939;
	mul.wide.u32 	%rd10711, %r9030, 65536;
	or.b64  	%rd10712, %rd10710, %rd10711;
	cvt.u32.u16 	%r9031, %rs938;
	and.b32  	%r9032, %r9031, 255;
	mul.wide.u32 	%rd10713, %r9032, 256;
	or.b64  	%rd10714, %rd10712, %rd10713;
	cvt.u64.u16 	%rd10715, %rs940;
	or.b64  	%rd10716, %rd10714, %rd10715;
	cvt.u64.u16 	%rd10717, %rs941;
	shl.b64 	%rd10718, %rd10717, 56;
	cvt.u64.u16 	%rd10719, %rs943;
	shl.b64 	%rd10720, %rd10719, 48;
	or.b64  	%rd10721, %rd10720, %rd10718;
	cvt.u64.u16 	%rd10722, %rs942;
	shl.b64 	%rd10723, %rd10722, 40;
	and.b64  	%rd10724, %rd10723, 280375465082880;
	or.b64  	%rd10725, %rd10721, %rd10724;
	cvt.u64.u16 	%rd10726, %rs944;
	shl.b64 	%rd10727, %rd10726, 32;
	or.b64  	%rd10728, %rd10725, %rd10727;
	cvt.u32.u16 	%r9033, %rs945;
	and.b32  	%r9034, %r9033, 255;
	mul.wide.u32 	%rd10729, %r9034, 16777216;
	or.b64  	%rd10730, %rd10728, %rd10729;
	cvt.u32.u16 	%r9035, %rs947;
	mul.wide.u32 	%rd10731, %r9035, 65536;
	or.b64  	%rd10732, %rd10730, %rd10731;
	cvt.u32.u16 	%r9036, %rs946;
	and.b32  	%r9037, %r9036, 255;
	mul.wide.u32 	%rd10733, %r9037, 256;
	or.b64  	%rd10734, %rd10732, %rd10733;
	cvt.u64.u16 	%rd10735, %rs948;
	or.b64  	%rd10736, %rd10734, %rd10735;
	cvt.u64.u16 	%rd10737, %rs949;
	shl.b64 	%rd10738, %rd10737, 56;
	cvt.u64.u16 	%rd10739, %rs951;
	shl.b64 	%rd10740, %rd10739, 48;
	or.b64  	%rd10741, %rd10740, %rd10738;
	cvt.u64.u16 	%rd10742, %rs950;
	shl.b64 	%rd10743, %rd10742, 40;
	and.b64  	%rd10744, %rd10743, 280375465082880;
	or.b64  	%rd10745, %rd10741, %rd10744;
	cvt.u64.u16 	%rd10746, %rs952;
	shl.b64 	%rd10747, %rd10746, 32;
	or.b64  	%rd10748, %rd10745, %rd10747;
	cvt.u32.u16 	%r9038, %rs953;
	and.b32  	%r9039, %r9038, 255;
	mul.wide.u32 	%rd10749, %r9039, 16777216;
	or.b64  	%rd10750, %rd10748, %rd10749;
	cvt.u32.u16 	%r9040, %rs955;
	mul.wide.u32 	%rd10751, %r9040, 65536;
	or.b64  	%rd10752, %rd10750, %rd10751;
	cvt.u32.u16 	%r9041, %rs954;
	and.b32  	%r9042, %r9041, 255;
	mul.wide.u32 	%rd10753, %r9042, 256;
	or.b64  	%rd10754, %rd10752, %rd10753;
	cvt.u64.u16 	%rd10755, %rs956;
	or.b64  	%rd10756, %rd10754, %rd10755;
	cvt.u64.u16 	%rd10757, %rs957;
	shl.b64 	%rd10758, %rd10757, 56;
	cvt.u64.u16 	%rd10759, %rs959;
	shl.b64 	%rd10760, %rd10759, 48;
	or.b64  	%rd10761, %rd10760, %rd10758;
	cvt.u64.u16 	%rd10762, %rs958;
	shl.b64 	%rd10763, %rd10762, 40;
	and.b64  	%rd10764, %rd10763, 280375465082880;
	or.b64  	%rd10765, %rd10761, %rd10764;
	cvt.u64.u16 	%rd10766, %rs960;
	shl.b64 	%rd10767, %rd10766, 32;
	or.b64  	%rd10768, %rd10765, %rd10767;
	cvt.u32.u16 	%r9043, %rs961;
	and.b32  	%r9044, %r9043, 255;
	mul.wide.u32 	%rd10769, %r9044, 16777216;
	or.b64  	%rd10770, %rd10768, %rd10769;
	cvt.u32.u16 	%r9045, %rs963;
	mul.wide.u32 	%rd10771, %r9045, 65536;
	or.b64  	%rd10772, %rd10770, %rd10771;
	cvt.u32.u16 	%r9046, %rs962;
	and.b32  	%r9047, %r9046, 255;
	mul.wide.u32 	%rd10773, %r9047, 256;
	or.b64  	%rd10774, %rd10772, %rd10773;
	cvt.u64.u16 	%rd10775, %rs964;
	or.b64  	%rd10776, %rd10774, %rd10775;
	cvt.u64.u16 	%rd10777, %rs965;
	shl.b64 	%rd10778, %rd10777, 56;
	cvt.u64.u16 	%rd10779, %rs967;
	shl.b64 	%rd10780, %rd10779, 48;
	or.b64  	%rd10781, %rd10780, %rd10778;
	cvt.u64.u16 	%rd10782, %rs966;
	shl.b64 	%rd10783, %rd10782, 40;
	and.b64  	%rd10784, %rd10783, 280375465082880;
	or.b64  	%rd10785, %rd10781, %rd10784;
	cvt.u64.u16 	%rd10786, %rs968;
	shl.b64 	%rd10787, %rd10786, 32;
	or.b64  	%rd10788, %rd10785, %rd10787;
	cvt.u32.u16 	%r9048, %rs969;
	and.b32  	%r9049, %r9048, 255;
	mul.wide.u32 	%rd10789, %r9049, 16777216;
	or.b64  	%rd10790, %rd10788, %rd10789;
	cvt.u32.u16 	%r9050, %rs971;
	mul.wide.u32 	%rd10791, %r9050, 65536;
	or.b64  	%rd10792, %rd10790, %rd10791;
	cvt.u32.u16 	%r9051, %rs970;
	and.b32  	%r9052, %r9051, 255;
	mul.wide.u32 	%rd10793, %r9052, 256;
	or.b64  	%rd10794, %rd10792, %rd10793;
	cvt.u64.u16 	%rd10795, %rs972;
	or.b64  	%rd10796, %rd10794, %rd10795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9053,%dummy}, %rd10516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9054}, %rd10516;
	}
	shf.r.wrap.b32 	%r9055, %r9054, %r9053, 1;
	shf.r.wrap.b32 	%r9056, %r9053, %r9054, 1;
	mov.b64 	%rd10797, {%r9056, %r9055};
	shf.r.wrap.b32 	%r9057, %r9054, %r9053, 8;
	shf.r.wrap.b32 	%r9058, %r9053, %r9054, 8;
	mov.b64 	%rd10798, {%r9058, %r9057};
	xor.b64  	%rd10799, %rd10797, %rd10798;
	shr.u64 	%rd10800, %rd10516, 7;
	xor.b64  	%rd10801, %rd10799, %rd10800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9059,%dummy}, %rd10776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9060}, %rd10776;
	}
	shf.r.wrap.b32 	%r9061, %r9060, %r9059, 19;
	shf.r.wrap.b32 	%r9062, %r9059, %r9060, 19;
	mov.b64 	%rd10802, {%r9062, %r9061};
	shf.l.wrap.b32 	%r9063, %r9059, %r9060, 3;
	shf.l.wrap.b32 	%r9064, %r9060, %r9059, 3;
	mov.b64 	%rd10803, {%r9064, %r9063};
	xor.b64  	%rd10804, %rd10802, %rd10803;
	shr.u64 	%rd10805, %rd10776, 6;
	xor.b64  	%rd10806, %rd10804, %rd10805;
	add.s64 	%rd10807, %rd10801, %rd10496;
	add.s64 	%rd10808, %rd10807, %rd10676;
	add.s64 	%rd10809, %rd10808, %rd10806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9065,%dummy}, %rd10536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9066}, %rd10536;
	}
	shf.r.wrap.b32 	%r9067, %r9066, %r9065, 1;
	shf.r.wrap.b32 	%r9068, %r9065, %r9066, 1;
	mov.b64 	%rd10810, {%r9068, %r9067};
	shf.r.wrap.b32 	%r9069, %r9066, %r9065, 8;
	shf.r.wrap.b32 	%r9070, %r9065, %r9066, 8;
	mov.b64 	%rd10811, {%r9070, %r9069};
	xor.b64  	%rd10812, %rd10810, %rd10811;
	shr.u64 	%rd10813, %rd10536, 7;
	xor.b64  	%rd10814, %rd10812, %rd10813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9071,%dummy}, %rd10796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9072}, %rd10796;
	}
	shf.r.wrap.b32 	%r9073, %r9072, %r9071, 19;
	shf.r.wrap.b32 	%r9074, %r9071, %r9072, 19;
	mov.b64 	%rd10815, {%r9074, %r9073};
	shf.l.wrap.b32 	%r9075, %r9071, %r9072, 3;
	shf.l.wrap.b32 	%r9076, %r9072, %r9071, 3;
	mov.b64 	%rd10816, {%r9076, %r9075};
	xor.b64  	%rd10817, %rd10815, %rd10816;
	shr.u64 	%rd10818, %rd10796, 6;
	xor.b64  	%rd10819, %rd10817, %rd10818;
	add.s64 	%rd10820, %rd10814, %rd10516;
	add.s64 	%rd10821, %rd10820, %rd10696;
	add.s64 	%rd10822, %rd10821, %rd10819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9077,%dummy}, %rd10556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9078}, %rd10556;
	}
	shf.r.wrap.b32 	%r9079, %r9078, %r9077, 1;
	shf.r.wrap.b32 	%r9080, %r9077, %r9078, 1;
	mov.b64 	%rd10823, {%r9080, %r9079};
	shf.r.wrap.b32 	%r9081, %r9078, %r9077, 8;
	shf.r.wrap.b32 	%r9082, %r9077, %r9078, 8;
	mov.b64 	%rd10824, {%r9082, %r9081};
	xor.b64  	%rd10825, %rd10823, %rd10824;
	shr.u64 	%rd10826, %rd10556, 7;
	xor.b64  	%rd10827, %rd10825, %rd10826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9083,%dummy}, %rd10809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9084}, %rd10809;
	}
	shf.r.wrap.b32 	%r9085, %r9084, %r9083, 19;
	shf.r.wrap.b32 	%r9086, %r9083, %r9084, 19;
	mov.b64 	%rd10828, {%r9086, %r9085};
	shf.l.wrap.b32 	%r9087, %r9083, %r9084, 3;
	shf.l.wrap.b32 	%r9088, %r9084, %r9083, 3;
	mov.b64 	%rd10829, {%r9088, %r9087};
	xor.b64  	%rd10830, %rd10828, %rd10829;
	shr.u64 	%rd10831, %rd10809, 6;
	xor.b64  	%rd10832, %rd10830, %rd10831;
	add.s64 	%rd10833, %rd10827, %rd10536;
	add.s64 	%rd10834, %rd10833, %rd10716;
	add.s64 	%rd10835, %rd10834, %rd10832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9089,%dummy}, %rd10576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9090}, %rd10576;
	}
	shf.r.wrap.b32 	%r9091, %r9090, %r9089, 1;
	shf.r.wrap.b32 	%r9092, %r9089, %r9090, 1;
	mov.b64 	%rd10836, {%r9092, %r9091};
	shf.r.wrap.b32 	%r9093, %r9090, %r9089, 8;
	shf.r.wrap.b32 	%r9094, %r9089, %r9090, 8;
	mov.b64 	%rd10837, {%r9094, %r9093};
	xor.b64  	%rd10838, %rd10836, %rd10837;
	shr.u64 	%rd10839, %rd10576, 7;
	xor.b64  	%rd10840, %rd10838, %rd10839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9095,%dummy}, %rd10822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9096}, %rd10822;
	}
	shf.r.wrap.b32 	%r9097, %r9096, %r9095, 19;
	shf.r.wrap.b32 	%r9098, %r9095, %r9096, 19;
	mov.b64 	%rd10841, {%r9098, %r9097};
	shf.l.wrap.b32 	%r9099, %r9095, %r9096, 3;
	shf.l.wrap.b32 	%r9100, %r9096, %r9095, 3;
	mov.b64 	%rd10842, {%r9100, %r9099};
	xor.b64  	%rd10843, %rd10841, %rd10842;
	shr.u64 	%rd10844, %rd10822, 6;
	xor.b64  	%rd10845, %rd10843, %rd10844;
	add.s64 	%rd10846, %rd10840, %rd10556;
	add.s64 	%rd10847, %rd10846, %rd10736;
	add.s64 	%rd10848, %rd10847, %rd10845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9101,%dummy}, %rd10596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9102}, %rd10596;
	}
	shf.r.wrap.b32 	%r9103, %r9102, %r9101, 1;
	shf.r.wrap.b32 	%r9104, %r9101, %r9102, 1;
	mov.b64 	%rd10849, {%r9104, %r9103};
	shf.r.wrap.b32 	%r9105, %r9102, %r9101, 8;
	shf.r.wrap.b32 	%r9106, %r9101, %r9102, 8;
	mov.b64 	%rd10850, {%r9106, %r9105};
	xor.b64  	%rd10851, %rd10849, %rd10850;
	shr.u64 	%rd10852, %rd10596, 7;
	xor.b64  	%rd10853, %rd10851, %rd10852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9107,%dummy}, %rd10835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9108}, %rd10835;
	}
	shf.r.wrap.b32 	%r9109, %r9108, %r9107, 19;
	shf.r.wrap.b32 	%r9110, %r9107, %r9108, 19;
	mov.b64 	%rd10854, {%r9110, %r9109};
	shf.l.wrap.b32 	%r9111, %r9107, %r9108, 3;
	shf.l.wrap.b32 	%r9112, %r9108, %r9107, 3;
	mov.b64 	%rd10855, {%r9112, %r9111};
	xor.b64  	%rd10856, %rd10854, %rd10855;
	shr.u64 	%rd10857, %rd10835, 6;
	xor.b64  	%rd10858, %rd10856, %rd10857;
	add.s64 	%rd10859, %rd10853, %rd10576;
	add.s64 	%rd10860, %rd10859, %rd10756;
	add.s64 	%rd10861, %rd10860, %rd10858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9113,%dummy}, %rd10616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9114}, %rd10616;
	}
	shf.r.wrap.b32 	%r9115, %r9114, %r9113, 1;
	shf.r.wrap.b32 	%r9116, %r9113, %r9114, 1;
	mov.b64 	%rd10862, {%r9116, %r9115};
	shf.r.wrap.b32 	%r9117, %r9114, %r9113, 8;
	shf.r.wrap.b32 	%r9118, %r9113, %r9114, 8;
	mov.b64 	%rd10863, {%r9118, %r9117};
	xor.b64  	%rd10864, %rd10862, %rd10863;
	shr.u64 	%rd10865, %rd10616, 7;
	xor.b64  	%rd10866, %rd10864, %rd10865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9119,%dummy}, %rd10848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9120}, %rd10848;
	}
	shf.r.wrap.b32 	%r9121, %r9120, %r9119, 19;
	shf.r.wrap.b32 	%r9122, %r9119, %r9120, 19;
	mov.b64 	%rd10867, {%r9122, %r9121};
	shf.l.wrap.b32 	%r9123, %r9119, %r9120, 3;
	shf.l.wrap.b32 	%r9124, %r9120, %r9119, 3;
	mov.b64 	%rd10868, {%r9124, %r9123};
	xor.b64  	%rd10869, %rd10867, %rd10868;
	shr.u64 	%rd10870, %rd10848, 6;
	xor.b64  	%rd10871, %rd10869, %rd10870;
	add.s64 	%rd10872, %rd10866, %rd10596;
	add.s64 	%rd10873, %rd10872, %rd10776;
	add.s64 	%rd10874, %rd10873, %rd10871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9125,%dummy}, %rd10636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9126}, %rd10636;
	}
	shf.r.wrap.b32 	%r9127, %r9126, %r9125, 1;
	shf.r.wrap.b32 	%r9128, %r9125, %r9126, 1;
	mov.b64 	%rd10875, {%r9128, %r9127};
	shf.r.wrap.b32 	%r9129, %r9126, %r9125, 8;
	shf.r.wrap.b32 	%r9130, %r9125, %r9126, 8;
	mov.b64 	%rd10876, {%r9130, %r9129};
	xor.b64  	%rd10877, %rd10875, %rd10876;
	shr.u64 	%rd10878, %rd10636, 7;
	xor.b64  	%rd10879, %rd10877, %rd10878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9131,%dummy}, %rd10861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9132}, %rd10861;
	}
	shf.r.wrap.b32 	%r9133, %r9132, %r9131, 19;
	shf.r.wrap.b32 	%r9134, %r9131, %r9132, 19;
	mov.b64 	%rd10880, {%r9134, %r9133};
	shf.l.wrap.b32 	%r9135, %r9131, %r9132, 3;
	shf.l.wrap.b32 	%r9136, %r9132, %r9131, 3;
	mov.b64 	%rd10881, {%r9136, %r9135};
	xor.b64  	%rd10882, %rd10880, %rd10881;
	shr.u64 	%rd10883, %rd10861, 6;
	xor.b64  	%rd10884, %rd10882, %rd10883;
	add.s64 	%rd10885, %rd10879, %rd10616;
	add.s64 	%rd10886, %rd10885, %rd10796;
	add.s64 	%rd10887, %rd10886, %rd10884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9137,%dummy}, %rd10656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9138}, %rd10656;
	}
	shf.r.wrap.b32 	%r9139, %r9138, %r9137, 1;
	shf.r.wrap.b32 	%r9140, %r9137, %r9138, 1;
	mov.b64 	%rd10888, {%r9140, %r9139};
	shf.r.wrap.b32 	%r9141, %r9138, %r9137, 8;
	shf.r.wrap.b32 	%r9142, %r9137, %r9138, 8;
	mov.b64 	%rd10889, {%r9142, %r9141};
	xor.b64  	%rd10890, %rd10888, %rd10889;
	shr.u64 	%rd10891, %rd10656, 7;
	xor.b64  	%rd10892, %rd10890, %rd10891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9143,%dummy}, %rd10874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9144}, %rd10874;
	}
	shf.r.wrap.b32 	%r9145, %r9144, %r9143, 19;
	shf.r.wrap.b32 	%r9146, %r9143, %r9144, 19;
	mov.b64 	%rd10893, {%r9146, %r9145};
	shf.l.wrap.b32 	%r9147, %r9143, %r9144, 3;
	shf.l.wrap.b32 	%r9148, %r9144, %r9143, 3;
	mov.b64 	%rd10894, {%r9148, %r9147};
	xor.b64  	%rd10895, %rd10893, %rd10894;
	shr.u64 	%rd10896, %rd10874, 6;
	xor.b64  	%rd10897, %rd10895, %rd10896;
	add.s64 	%rd10898, %rd10892, %rd10636;
	add.s64 	%rd10899, %rd10898, %rd10809;
	add.s64 	%rd10900, %rd10899, %rd10897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9149,%dummy}, %rd10676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9150}, %rd10676;
	}
	shf.r.wrap.b32 	%r9151, %r9150, %r9149, 1;
	shf.r.wrap.b32 	%r9152, %r9149, %r9150, 1;
	mov.b64 	%rd10901, {%r9152, %r9151};
	shf.r.wrap.b32 	%r9153, %r9150, %r9149, 8;
	shf.r.wrap.b32 	%r9154, %r9149, %r9150, 8;
	mov.b64 	%rd10902, {%r9154, %r9153};
	xor.b64  	%rd10903, %rd10901, %rd10902;
	shr.u64 	%rd10904, %rd10676, 7;
	xor.b64  	%rd10905, %rd10903, %rd10904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9155,%dummy}, %rd10887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9156}, %rd10887;
	}
	shf.r.wrap.b32 	%r9157, %r9156, %r9155, 19;
	shf.r.wrap.b32 	%r9158, %r9155, %r9156, 19;
	mov.b64 	%rd10906, {%r9158, %r9157};
	shf.l.wrap.b32 	%r9159, %r9155, %r9156, 3;
	shf.l.wrap.b32 	%r9160, %r9156, %r9155, 3;
	mov.b64 	%rd10907, {%r9160, %r9159};
	xor.b64  	%rd10908, %rd10906, %rd10907;
	shr.u64 	%rd10909, %rd10887, 6;
	xor.b64  	%rd10910, %rd10908, %rd10909;
	add.s64 	%rd10911, %rd10905, %rd10656;
	add.s64 	%rd10912, %rd10911, %rd10822;
	add.s64 	%rd10913, %rd10912, %rd10910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9161,%dummy}, %rd10696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9162}, %rd10696;
	}
	shf.r.wrap.b32 	%r9163, %r9162, %r9161, 1;
	shf.r.wrap.b32 	%r9164, %r9161, %r9162, 1;
	mov.b64 	%rd10914, {%r9164, %r9163};
	shf.r.wrap.b32 	%r9165, %r9162, %r9161, 8;
	shf.r.wrap.b32 	%r9166, %r9161, %r9162, 8;
	mov.b64 	%rd10915, {%r9166, %r9165};
	xor.b64  	%rd10916, %rd10914, %rd10915;
	shr.u64 	%rd10917, %rd10696, 7;
	xor.b64  	%rd10918, %rd10916, %rd10917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9167,%dummy}, %rd10900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9168}, %rd10900;
	}
	shf.r.wrap.b32 	%r9169, %r9168, %r9167, 19;
	shf.r.wrap.b32 	%r9170, %r9167, %r9168, 19;
	mov.b64 	%rd10919, {%r9170, %r9169};
	shf.l.wrap.b32 	%r9171, %r9167, %r9168, 3;
	shf.l.wrap.b32 	%r9172, %r9168, %r9167, 3;
	mov.b64 	%rd10920, {%r9172, %r9171};
	xor.b64  	%rd10921, %rd10919, %rd10920;
	shr.u64 	%rd10922, %rd10900, 6;
	xor.b64  	%rd10923, %rd10921, %rd10922;
	add.s64 	%rd10924, %rd10918, %rd10676;
	add.s64 	%rd10925, %rd10924, %rd10835;
	add.s64 	%rd10926, %rd10925, %rd10923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9173,%dummy}, %rd10716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9174}, %rd10716;
	}
	shf.r.wrap.b32 	%r9175, %r9174, %r9173, 1;
	shf.r.wrap.b32 	%r9176, %r9173, %r9174, 1;
	mov.b64 	%rd10927, {%r9176, %r9175};
	shf.r.wrap.b32 	%r9177, %r9174, %r9173, 8;
	shf.r.wrap.b32 	%r9178, %r9173, %r9174, 8;
	mov.b64 	%rd10928, {%r9178, %r9177};
	xor.b64  	%rd10929, %rd10927, %rd10928;
	shr.u64 	%rd10930, %rd10716, 7;
	xor.b64  	%rd10931, %rd10929, %rd10930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9179,%dummy}, %rd10913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9180}, %rd10913;
	}
	shf.r.wrap.b32 	%r9181, %r9180, %r9179, 19;
	shf.r.wrap.b32 	%r9182, %r9179, %r9180, 19;
	mov.b64 	%rd10932, {%r9182, %r9181};
	shf.l.wrap.b32 	%r9183, %r9179, %r9180, 3;
	shf.l.wrap.b32 	%r9184, %r9180, %r9179, 3;
	mov.b64 	%rd10933, {%r9184, %r9183};
	xor.b64  	%rd10934, %rd10932, %rd10933;
	shr.u64 	%rd10935, %rd10913, 6;
	xor.b64  	%rd10936, %rd10934, %rd10935;
	add.s64 	%rd10937, %rd10931, %rd10696;
	add.s64 	%rd10938, %rd10937, %rd10848;
	add.s64 	%rd10939, %rd10938, %rd10936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9185,%dummy}, %rd10736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9186}, %rd10736;
	}
	shf.r.wrap.b32 	%r9187, %r9186, %r9185, 1;
	shf.r.wrap.b32 	%r9188, %r9185, %r9186, 1;
	mov.b64 	%rd10940, {%r9188, %r9187};
	shf.r.wrap.b32 	%r9189, %r9186, %r9185, 8;
	shf.r.wrap.b32 	%r9190, %r9185, %r9186, 8;
	mov.b64 	%rd10941, {%r9190, %r9189};
	xor.b64  	%rd10942, %rd10940, %rd10941;
	shr.u64 	%rd10943, %rd10736, 7;
	xor.b64  	%rd10944, %rd10942, %rd10943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9191,%dummy}, %rd10926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9192}, %rd10926;
	}
	shf.r.wrap.b32 	%r9193, %r9192, %r9191, 19;
	shf.r.wrap.b32 	%r9194, %r9191, %r9192, 19;
	mov.b64 	%rd10945, {%r9194, %r9193};
	shf.l.wrap.b32 	%r9195, %r9191, %r9192, 3;
	shf.l.wrap.b32 	%r9196, %r9192, %r9191, 3;
	mov.b64 	%rd10946, {%r9196, %r9195};
	xor.b64  	%rd10947, %rd10945, %rd10946;
	shr.u64 	%rd10948, %rd10926, 6;
	xor.b64  	%rd10949, %rd10947, %rd10948;
	add.s64 	%rd10950, %rd10944, %rd10716;
	add.s64 	%rd10951, %rd10950, %rd10861;
	add.s64 	%rd10952, %rd10951, %rd10949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9197,%dummy}, %rd10756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9198}, %rd10756;
	}
	shf.r.wrap.b32 	%r9199, %r9198, %r9197, 1;
	shf.r.wrap.b32 	%r9200, %r9197, %r9198, 1;
	mov.b64 	%rd10953, {%r9200, %r9199};
	shf.r.wrap.b32 	%r9201, %r9198, %r9197, 8;
	shf.r.wrap.b32 	%r9202, %r9197, %r9198, 8;
	mov.b64 	%rd10954, {%r9202, %r9201};
	xor.b64  	%rd10955, %rd10953, %rd10954;
	shr.u64 	%rd10956, %rd10756, 7;
	xor.b64  	%rd10957, %rd10955, %rd10956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9203,%dummy}, %rd10939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9204}, %rd10939;
	}
	shf.r.wrap.b32 	%r9205, %r9204, %r9203, 19;
	shf.r.wrap.b32 	%r9206, %r9203, %r9204, 19;
	mov.b64 	%rd10958, {%r9206, %r9205};
	shf.l.wrap.b32 	%r9207, %r9203, %r9204, 3;
	shf.l.wrap.b32 	%r9208, %r9204, %r9203, 3;
	mov.b64 	%rd10959, {%r9208, %r9207};
	xor.b64  	%rd10960, %rd10958, %rd10959;
	shr.u64 	%rd10961, %rd10939, 6;
	xor.b64  	%rd10962, %rd10960, %rd10961;
	add.s64 	%rd10963, %rd10957, %rd10736;
	add.s64 	%rd10964, %rd10963, %rd10874;
	add.s64 	%rd10965, %rd10964, %rd10962;
	shf.r.wrap.b32 	%r9209, %r9060, %r9059, 1;
	shf.r.wrap.b32 	%r9210, %r9059, %r9060, 1;
	mov.b64 	%rd10966, {%r9210, %r9209};
	shf.r.wrap.b32 	%r9211, %r9060, %r9059, 8;
	shf.r.wrap.b32 	%r9212, %r9059, %r9060, 8;
	mov.b64 	%rd10967, {%r9212, %r9211};
	xor.b64  	%rd10968, %rd10966, %rd10967;
	shr.u64 	%rd10969, %rd10776, 7;
	xor.b64  	%rd10970, %rd10968, %rd10969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9213,%dummy}, %rd10952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9214}, %rd10952;
	}
	shf.r.wrap.b32 	%r9215, %r9214, %r9213, 19;
	shf.r.wrap.b32 	%r9216, %r9213, %r9214, 19;
	mov.b64 	%rd10971, {%r9216, %r9215};
	shf.l.wrap.b32 	%r9217, %r9213, %r9214, 3;
	shf.l.wrap.b32 	%r9218, %r9214, %r9213, 3;
	mov.b64 	%rd10972, {%r9218, %r9217};
	xor.b64  	%rd10973, %rd10971, %rd10972;
	shr.u64 	%rd10974, %rd10952, 6;
	xor.b64  	%rd10975, %rd10973, %rd10974;
	add.s64 	%rd10976, %rd10970, %rd10756;
	add.s64 	%rd10977, %rd10976, %rd10887;
	add.s64 	%rd10978, %rd10977, %rd10975;
	shf.r.wrap.b32 	%r9219, %r9072, %r9071, 1;
	shf.r.wrap.b32 	%r9220, %r9071, %r9072, 1;
	mov.b64 	%rd10979, {%r9220, %r9219};
	shf.r.wrap.b32 	%r9221, %r9072, %r9071, 8;
	shf.r.wrap.b32 	%r9222, %r9071, %r9072, 8;
	mov.b64 	%rd10980, {%r9222, %r9221};
	xor.b64  	%rd10981, %rd10979, %rd10980;
	shr.u64 	%rd10982, %rd10796, 7;
	xor.b64  	%rd10983, %rd10981, %rd10982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9223,%dummy}, %rd10965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9224}, %rd10965;
	}
	shf.r.wrap.b32 	%r9225, %r9224, %r9223, 19;
	shf.r.wrap.b32 	%r9226, %r9223, %r9224, 19;
	mov.b64 	%rd10984, {%r9226, %r9225};
	shf.l.wrap.b32 	%r9227, %r9223, %r9224, 3;
	shf.l.wrap.b32 	%r9228, %r9224, %r9223, 3;
	mov.b64 	%rd10985, {%r9228, %r9227};
	xor.b64  	%rd10986, %rd10984, %rd10985;
	shr.u64 	%rd10987, %rd10965, 6;
	xor.b64  	%rd10988, %rd10986, %rd10987;
	add.s64 	%rd10989, %rd10983, %rd10776;
	add.s64 	%rd10990, %rd10989, %rd10900;
	add.s64 	%rd10991, %rd10990, %rd10988;
	shf.r.wrap.b32 	%r9229, %r9084, %r9083, 1;
	shf.r.wrap.b32 	%r9230, %r9083, %r9084, 1;
	mov.b64 	%rd10992, {%r9230, %r9229};
	shf.r.wrap.b32 	%r9231, %r9084, %r9083, 8;
	shf.r.wrap.b32 	%r9232, %r9083, %r9084, 8;
	mov.b64 	%rd10993, {%r9232, %r9231};
	xor.b64  	%rd10994, %rd10992, %rd10993;
	shr.u64 	%rd10995, %rd10809, 7;
	xor.b64  	%rd10996, %rd10994, %rd10995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9233,%dummy}, %rd10978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9234}, %rd10978;
	}
	shf.r.wrap.b32 	%r9235, %r9234, %r9233, 19;
	shf.r.wrap.b32 	%r9236, %r9233, %r9234, 19;
	mov.b64 	%rd10997, {%r9236, %r9235};
	shf.l.wrap.b32 	%r9237, %r9233, %r9234, 3;
	shf.l.wrap.b32 	%r9238, %r9234, %r9233, 3;
	mov.b64 	%rd10998, {%r9238, %r9237};
	xor.b64  	%rd10999, %rd10997, %rd10998;
	shr.u64 	%rd11000, %rd10978, 6;
	xor.b64  	%rd11001, %rd10999, %rd11000;
	add.s64 	%rd11002, %rd10996, %rd10796;
	add.s64 	%rd11003, %rd11002, %rd10913;
	add.s64 	%rd11004, %rd11003, %rd11001;
	shf.r.wrap.b32 	%r9239, %r9096, %r9095, 1;
	shf.r.wrap.b32 	%r9240, %r9095, %r9096, 1;
	mov.b64 	%rd11005, {%r9240, %r9239};
	shf.r.wrap.b32 	%r9241, %r9096, %r9095, 8;
	shf.r.wrap.b32 	%r9242, %r9095, %r9096, 8;
	mov.b64 	%rd11006, {%r9242, %r9241};
	xor.b64  	%rd11007, %rd11005, %rd11006;
	shr.u64 	%rd11008, %rd10822, 7;
	xor.b64  	%rd11009, %rd11007, %rd11008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9243,%dummy}, %rd10991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9244}, %rd10991;
	}
	shf.r.wrap.b32 	%r9245, %r9244, %r9243, 19;
	shf.r.wrap.b32 	%r9246, %r9243, %r9244, 19;
	mov.b64 	%rd11010, {%r9246, %r9245};
	shf.l.wrap.b32 	%r9247, %r9243, %r9244, 3;
	shf.l.wrap.b32 	%r9248, %r9244, %r9243, 3;
	mov.b64 	%rd11011, {%r9248, %r9247};
	xor.b64  	%rd11012, %rd11010, %rd11011;
	shr.u64 	%rd11013, %rd10991, 6;
	xor.b64  	%rd11014, %rd11012, %rd11013;
	add.s64 	%rd11015, %rd11009, %rd10809;
	add.s64 	%rd11016, %rd11015, %rd10926;
	add.s64 	%rd11017, %rd11016, %rd11014;
	shf.r.wrap.b32 	%r9249, %r9108, %r9107, 1;
	shf.r.wrap.b32 	%r9250, %r9107, %r9108, 1;
	mov.b64 	%rd11018, {%r9250, %r9249};
	shf.r.wrap.b32 	%r9251, %r9108, %r9107, 8;
	shf.r.wrap.b32 	%r9252, %r9107, %r9108, 8;
	mov.b64 	%rd11019, {%r9252, %r9251};
	xor.b64  	%rd11020, %rd11018, %rd11019;
	shr.u64 	%rd11021, %rd10835, 7;
	xor.b64  	%rd11022, %rd11020, %rd11021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9253,%dummy}, %rd11004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9254}, %rd11004;
	}
	shf.r.wrap.b32 	%r9255, %r9254, %r9253, 19;
	shf.r.wrap.b32 	%r9256, %r9253, %r9254, 19;
	mov.b64 	%rd11023, {%r9256, %r9255};
	shf.l.wrap.b32 	%r9257, %r9253, %r9254, 3;
	shf.l.wrap.b32 	%r9258, %r9254, %r9253, 3;
	mov.b64 	%rd11024, {%r9258, %r9257};
	xor.b64  	%rd11025, %rd11023, %rd11024;
	shr.u64 	%rd11026, %rd11004, 6;
	xor.b64  	%rd11027, %rd11025, %rd11026;
	add.s64 	%rd11028, %rd11022, %rd10822;
	add.s64 	%rd11029, %rd11028, %rd10939;
	add.s64 	%rd11030, %rd11029, %rd11027;
	shf.r.wrap.b32 	%r9259, %r9120, %r9119, 1;
	shf.r.wrap.b32 	%r9260, %r9119, %r9120, 1;
	mov.b64 	%rd11031, {%r9260, %r9259};
	shf.r.wrap.b32 	%r9261, %r9120, %r9119, 8;
	shf.r.wrap.b32 	%r9262, %r9119, %r9120, 8;
	mov.b64 	%rd11032, {%r9262, %r9261};
	xor.b64  	%rd11033, %rd11031, %rd11032;
	shr.u64 	%rd11034, %rd10848, 7;
	xor.b64  	%rd11035, %rd11033, %rd11034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9263,%dummy}, %rd11017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9264}, %rd11017;
	}
	shf.r.wrap.b32 	%r9265, %r9264, %r9263, 19;
	shf.r.wrap.b32 	%r9266, %r9263, %r9264, 19;
	mov.b64 	%rd11036, {%r9266, %r9265};
	shf.l.wrap.b32 	%r9267, %r9263, %r9264, 3;
	shf.l.wrap.b32 	%r9268, %r9264, %r9263, 3;
	mov.b64 	%rd11037, {%r9268, %r9267};
	xor.b64  	%rd11038, %rd11036, %rd11037;
	shr.u64 	%rd11039, %rd11017, 6;
	xor.b64  	%rd11040, %rd11038, %rd11039;
	add.s64 	%rd11041, %rd11035, %rd10835;
	add.s64 	%rd11042, %rd11041, %rd10952;
	add.s64 	%rd11043, %rd11042, %rd11040;
	shf.r.wrap.b32 	%r9269, %r9132, %r9131, 1;
	shf.r.wrap.b32 	%r9270, %r9131, %r9132, 1;
	mov.b64 	%rd11044, {%r9270, %r9269};
	shf.r.wrap.b32 	%r9271, %r9132, %r9131, 8;
	shf.r.wrap.b32 	%r9272, %r9131, %r9132, 8;
	mov.b64 	%rd11045, {%r9272, %r9271};
	xor.b64  	%rd11046, %rd11044, %rd11045;
	shr.u64 	%rd11047, %rd10861, 7;
	xor.b64  	%rd11048, %rd11046, %rd11047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9273,%dummy}, %rd11030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9274}, %rd11030;
	}
	shf.r.wrap.b32 	%r9275, %r9274, %r9273, 19;
	shf.r.wrap.b32 	%r9276, %r9273, %r9274, 19;
	mov.b64 	%rd11049, {%r9276, %r9275};
	shf.l.wrap.b32 	%r9277, %r9273, %r9274, 3;
	shf.l.wrap.b32 	%r9278, %r9274, %r9273, 3;
	mov.b64 	%rd11050, {%r9278, %r9277};
	xor.b64  	%rd11051, %rd11049, %rd11050;
	shr.u64 	%rd11052, %rd11030, 6;
	xor.b64  	%rd11053, %rd11051, %rd11052;
	add.s64 	%rd11054, %rd11048, %rd10848;
	add.s64 	%rd11055, %rd11054, %rd10965;
	add.s64 	%rd11056, %rd11055, %rd11053;
	shf.r.wrap.b32 	%r9279, %r9144, %r9143, 1;
	shf.r.wrap.b32 	%r9280, %r9143, %r9144, 1;
	mov.b64 	%rd11057, {%r9280, %r9279};
	shf.r.wrap.b32 	%r9281, %r9144, %r9143, 8;
	shf.r.wrap.b32 	%r9282, %r9143, %r9144, 8;
	mov.b64 	%rd11058, {%r9282, %r9281};
	xor.b64  	%rd11059, %rd11057, %rd11058;
	shr.u64 	%rd11060, %rd10874, 7;
	xor.b64  	%rd11061, %rd11059, %rd11060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9283,%dummy}, %rd11043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9284}, %rd11043;
	}
	shf.r.wrap.b32 	%r9285, %r9284, %r9283, 19;
	shf.r.wrap.b32 	%r9286, %r9283, %r9284, 19;
	mov.b64 	%rd11062, {%r9286, %r9285};
	shf.l.wrap.b32 	%r9287, %r9283, %r9284, 3;
	shf.l.wrap.b32 	%r9288, %r9284, %r9283, 3;
	mov.b64 	%rd11063, {%r9288, %r9287};
	xor.b64  	%rd11064, %rd11062, %rd11063;
	shr.u64 	%rd11065, %rd11043, 6;
	xor.b64  	%rd11066, %rd11064, %rd11065;
	add.s64 	%rd11067, %rd11061, %rd10861;
	add.s64 	%rd11068, %rd11067, %rd10978;
	add.s64 	%rd11069, %rd11068, %rd11066;
	shf.r.wrap.b32 	%r9289, %r9156, %r9155, 1;
	shf.r.wrap.b32 	%r9290, %r9155, %r9156, 1;
	mov.b64 	%rd11070, {%r9290, %r9289};
	shf.r.wrap.b32 	%r9291, %r9156, %r9155, 8;
	shf.r.wrap.b32 	%r9292, %r9155, %r9156, 8;
	mov.b64 	%rd11071, {%r9292, %r9291};
	xor.b64  	%rd11072, %rd11070, %rd11071;
	shr.u64 	%rd11073, %rd10887, 7;
	xor.b64  	%rd11074, %rd11072, %rd11073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9293,%dummy}, %rd11056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9294}, %rd11056;
	}
	shf.r.wrap.b32 	%r9295, %r9294, %r9293, 19;
	shf.r.wrap.b32 	%r9296, %r9293, %r9294, 19;
	mov.b64 	%rd11075, {%r9296, %r9295};
	shf.l.wrap.b32 	%r9297, %r9293, %r9294, 3;
	shf.l.wrap.b32 	%r9298, %r9294, %r9293, 3;
	mov.b64 	%rd11076, {%r9298, %r9297};
	xor.b64  	%rd11077, %rd11075, %rd11076;
	shr.u64 	%rd11078, %rd11056, 6;
	xor.b64  	%rd11079, %rd11077, %rd11078;
	add.s64 	%rd11080, %rd11074, %rd10874;
	add.s64 	%rd11081, %rd11080, %rd10991;
	add.s64 	%rd11082, %rd11081, %rd11079;
	shf.r.wrap.b32 	%r9299, %r9168, %r9167, 1;
	shf.r.wrap.b32 	%r9300, %r9167, %r9168, 1;
	mov.b64 	%rd11083, {%r9300, %r9299};
	shf.r.wrap.b32 	%r9301, %r9168, %r9167, 8;
	shf.r.wrap.b32 	%r9302, %r9167, %r9168, 8;
	mov.b64 	%rd11084, {%r9302, %r9301};
	xor.b64  	%rd11085, %rd11083, %rd11084;
	shr.u64 	%rd11086, %rd10900, 7;
	xor.b64  	%rd11087, %rd11085, %rd11086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9303,%dummy}, %rd11069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9304}, %rd11069;
	}
	shf.r.wrap.b32 	%r9305, %r9304, %r9303, 19;
	shf.r.wrap.b32 	%r9306, %r9303, %r9304, 19;
	mov.b64 	%rd11088, {%r9306, %r9305};
	shf.l.wrap.b32 	%r9307, %r9303, %r9304, 3;
	shf.l.wrap.b32 	%r9308, %r9304, %r9303, 3;
	mov.b64 	%rd11089, {%r9308, %r9307};
	xor.b64  	%rd11090, %rd11088, %rd11089;
	shr.u64 	%rd11091, %rd11069, 6;
	xor.b64  	%rd11092, %rd11090, %rd11091;
	add.s64 	%rd11093, %rd11087, %rd10887;
	add.s64 	%rd11094, %rd11093, %rd11004;
	add.s64 	%rd11095, %rd11094, %rd11092;
	shf.r.wrap.b32 	%r9309, %r9180, %r9179, 1;
	shf.r.wrap.b32 	%r9310, %r9179, %r9180, 1;
	mov.b64 	%rd11096, {%r9310, %r9309};
	shf.r.wrap.b32 	%r9311, %r9180, %r9179, 8;
	shf.r.wrap.b32 	%r9312, %r9179, %r9180, 8;
	mov.b64 	%rd11097, {%r9312, %r9311};
	xor.b64  	%rd11098, %rd11096, %rd11097;
	shr.u64 	%rd11099, %rd10913, 7;
	xor.b64  	%rd11100, %rd11098, %rd11099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9313,%dummy}, %rd11082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9314}, %rd11082;
	}
	shf.r.wrap.b32 	%r9315, %r9314, %r9313, 19;
	shf.r.wrap.b32 	%r9316, %r9313, %r9314, 19;
	mov.b64 	%rd11101, {%r9316, %r9315};
	shf.l.wrap.b32 	%r9317, %r9313, %r9314, 3;
	shf.l.wrap.b32 	%r9318, %r9314, %r9313, 3;
	mov.b64 	%rd11102, {%r9318, %r9317};
	xor.b64  	%rd11103, %rd11101, %rd11102;
	shr.u64 	%rd11104, %rd11082, 6;
	xor.b64  	%rd11105, %rd11103, %rd11104;
	add.s64 	%rd11106, %rd11100, %rd10900;
	add.s64 	%rd11107, %rd11106, %rd11017;
	add.s64 	%rd11108, %rd11107, %rd11105;
	shf.r.wrap.b32 	%r9319, %r9192, %r9191, 1;
	shf.r.wrap.b32 	%r9320, %r9191, %r9192, 1;
	mov.b64 	%rd11109, {%r9320, %r9319};
	shf.r.wrap.b32 	%r9321, %r9192, %r9191, 8;
	shf.r.wrap.b32 	%r9322, %r9191, %r9192, 8;
	mov.b64 	%rd11110, {%r9322, %r9321};
	xor.b64  	%rd11111, %rd11109, %rd11110;
	shr.u64 	%rd11112, %rd10926, 7;
	xor.b64  	%rd11113, %rd11111, %rd11112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9323,%dummy}, %rd11095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9324}, %rd11095;
	}
	shf.r.wrap.b32 	%r9325, %r9324, %r9323, 19;
	shf.r.wrap.b32 	%r9326, %r9323, %r9324, 19;
	mov.b64 	%rd11114, {%r9326, %r9325};
	shf.l.wrap.b32 	%r9327, %r9323, %r9324, 3;
	shf.l.wrap.b32 	%r9328, %r9324, %r9323, 3;
	mov.b64 	%rd11115, {%r9328, %r9327};
	xor.b64  	%rd11116, %rd11114, %rd11115;
	shr.u64 	%rd11117, %rd11095, 6;
	xor.b64  	%rd11118, %rd11116, %rd11117;
	add.s64 	%rd11119, %rd11113, %rd10913;
	add.s64 	%rd11120, %rd11119, %rd11030;
	add.s64 	%rd11121, %rd11120, %rd11118;
	shf.r.wrap.b32 	%r9329, %r9204, %r9203, 1;
	shf.r.wrap.b32 	%r9330, %r9203, %r9204, 1;
	mov.b64 	%rd11122, {%r9330, %r9329};
	shf.r.wrap.b32 	%r9331, %r9204, %r9203, 8;
	shf.r.wrap.b32 	%r9332, %r9203, %r9204, 8;
	mov.b64 	%rd11123, {%r9332, %r9331};
	xor.b64  	%rd11124, %rd11122, %rd11123;
	shr.u64 	%rd11125, %rd10939, 7;
	xor.b64  	%rd11126, %rd11124, %rd11125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9333,%dummy}, %rd11108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9334}, %rd11108;
	}
	shf.r.wrap.b32 	%r9335, %r9334, %r9333, 19;
	shf.r.wrap.b32 	%r9336, %r9333, %r9334, 19;
	mov.b64 	%rd11127, {%r9336, %r9335};
	shf.l.wrap.b32 	%r9337, %r9333, %r9334, 3;
	shf.l.wrap.b32 	%r9338, %r9334, %r9333, 3;
	mov.b64 	%rd11128, {%r9338, %r9337};
	xor.b64  	%rd11129, %rd11127, %rd11128;
	shr.u64 	%rd11130, %rd11108, 6;
	xor.b64  	%rd11131, %rd11129, %rd11130;
	add.s64 	%rd11132, %rd11126, %rd10926;
	add.s64 	%rd11133, %rd11132, %rd11043;
	add.s64 	%rd11134, %rd11133, %rd11131;
	shf.r.wrap.b32 	%r9339, %r9214, %r9213, 1;
	shf.r.wrap.b32 	%r9340, %r9213, %r9214, 1;
	mov.b64 	%rd11135, {%r9340, %r9339};
	shf.r.wrap.b32 	%r9341, %r9214, %r9213, 8;
	shf.r.wrap.b32 	%r9342, %r9213, %r9214, 8;
	mov.b64 	%rd11136, {%r9342, %r9341};
	xor.b64  	%rd11137, %rd11135, %rd11136;
	shr.u64 	%rd11138, %rd10952, 7;
	xor.b64  	%rd11139, %rd11137, %rd11138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9343,%dummy}, %rd11121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9344}, %rd11121;
	}
	shf.r.wrap.b32 	%r9345, %r9344, %r9343, 19;
	shf.r.wrap.b32 	%r9346, %r9343, %r9344, 19;
	mov.b64 	%rd11140, {%r9346, %r9345};
	shf.l.wrap.b32 	%r9347, %r9343, %r9344, 3;
	shf.l.wrap.b32 	%r9348, %r9344, %r9343, 3;
	mov.b64 	%rd11141, {%r9348, %r9347};
	xor.b64  	%rd11142, %rd11140, %rd11141;
	shr.u64 	%rd11143, %rd11121, 6;
	xor.b64  	%rd11144, %rd11142, %rd11143;
	add.s64 	%rd11145, %rd11139, %rd10939;
	add.s64 	%rd11146, %rd11145, %rd11056;
	add.s64 	%rd11147, %rd11146, %rd11144;
	shf.r.wrap.b32 	%r9349, %r9224, %r9223, 1;
	shf.r.wrap.b32 	%r9350, %r9223, %r9224, 1;
	mov.b64 	%rd11148, {%r9350, %r9349};
	shf.r.wrap.b32 	%r9351, %r9224, %r9223, 8;
	shf.r.wrap.b32 	%r9352, %r9223, %r9224, 8;
	mov.b64 	%rd11149, {%r9352, %r9351};
	xor.b64  	%rd11150, %rd11148, %rd11149;
	shr.u64 	%rd11151, %rd10965, 7;
	xor.b64  	%rd11152, %rd11150, %rd11151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9353,%dummy}, %rd11134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9354}, %rd11134;
	}
	shf.r.wrap.b32 	%r9355, %r9354, %r9353, 19;
	shf.r.wrap.b32 	%r9356, %r9353, %r9354, 19;
	mov.b64 	%rd11153, {%r9356, %r9355};
	shf.l.wrap.b32 	%r9357, %r9353, %r9354, 3;
	shf.l.wrap.b32 	%r9358, %r9354, %r9353, 3;
	mov.b64 	%rd11154, {%r9358, %r9357};
	xor.b64  	%rd11155, %rd11153, %rd11154;
	shr.u64 	%rd11156, %rd11134, 6;
	xor.b64  	%rd11157, %rd11155, %rd11156;
	add.s64 	%rd11158, %rd11152, %rd10952;
	add.s64 	%rd11159, %rd11158, %rd11069;
	add.s64 	%rd11160, %rd11159, %rd11157;
	shf.r.wrap.b32 	%r9359, %r9234, %r9233, 1;
	shf.r.wrap.b32 	%r9360, %r9233, %r9234, 1;
	mov.b64 	%rd11161, {%r9360, %r9359};
	shf.r.wrap.b32 	%r9361, %r9234, %r9233, 8;
	shf.r.wrap.b32 	%r9362, %r9233, %r9234, 8;
	mov.b64 	%rd11162, {%r9362, %r9361};
	xor.b64  	%rd11163, %rd11161, %rd11162;
	shr.u64 	%rd11164, %rd10978, 7;
	xor.b64  	%rd11165, %rd11163, %rd11164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9363,%dummy}, %rd11147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9364}, %rd11147;
	}
	shf.r.wrap.b32 	%r9365, %r9364, %r9363, 19;
	shf.r.wrap.b32 	%r9366, %r9363, %r9364, 19;
	mov.b64 	%rd11166, {%r9366, %r9365};
	shf.l.wrap.b32 	%r9367, %r9363, %r9364, 3;
	shf.l.wrap.b32 	%r9368, %r9364, %r9363, 3;
	mov.b64 	%rd11167, {%r9368, %r9367};
	xor.b64  	%rd11168, %rd11166, %rd11167;
	shr.u64 	%rd11169, %rd11147, 6;
	xor.b64  	%rd11170, %rd11168, %rd11169;
	add.s64 	%rd11171, %rd11165, %rd10965;
	add.s64 	%rd11172, %rd11171, %rd11082;
	add.s64 	%rd11173, %rd11172, %rd11170;
	shf.r.wrap.b32 	%r9369, %r9244, %r9243, 1;
	shf.r.wrap.b32 	%r9370, %r9243, %r9244, 1;
	mov.b64 	%rd11174, {%r9370, %r9369};
	shf.r.wrap.b32 	%r9371, %r9244, %r9243, 8;
	shf.r.wrap.b32 	%r9372, %r9243, %r9244, 8;
	mov.b64 	%rd11175, {%r9372, %r9371};
	xor.b64  	%rd11176, %rd11174, %rd11175;
	shr.u64 	%rd11177, %rd10991, 7;
	xor.b64  	%rd11178, %rd11176, %rd11177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9373,%dummy}, %rd11160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9374}, %rd11160;
	}
	shf.r.wrap.b32 	%r9375, %r9374, %r9373, 19;
	shf.r.wrap.b32 	%r9376, %r9373, %r9374, 19;
	mov.b64 	%rd11179, {%r9376, %r9375};
	shf.l.wrap.b32 	%r9377, %r9373, %r9374, 3;
	shf.l.wrap.b32 	%r9378, %r9374, %r9373, 3;
	mov.b64 	%rd11180, {%r9378, %r9377};
	xor.b64  	%rd11181, %rd11179, %rd11180;
	shr.u64 	%rd11182, %rd11160, 6;
	xor.b64  	%rd11183, %rd11181, %rd11182;
	add.s64 	%rd11184, %rd11178, %rd10978;
	add.s64 	%rd11185, %rd11184, %rd11095;
	add.s64 	%rd11186, %rd11185, %rd11183;
	shf.r.wrap.b32 	%r9379, %r9254, %r9253, 1;
	shf.r.wrap.b32 	%r9380, %r9253, %r9254, 1;
	mov.b64 	%rd11187, {%r9380, %r9379};
	shf.r.wrap.b32 	%r9381, %r9254, %r9253, 8;
	shf.r.wrap.b32 	%r9382, %r9253, %r9254, 8;
	mov.b64 	%rd11188, {%r9382, %r9381};
	xor.b64  	%rd11189, %rd11187, %rd11188;
	shr.u64 	%rd11190, %rd11004, 7;
	xor.b64  	%rd11191, %rd11189, %rd11190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9383,%dummy}, %rd11173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9384}, %rd11173;
	}
	shf.r.wrap.b32 	%r9385, %r9384, %r9383, 19;
	shf.r.wrap.b32 	%r9386, %r9383, %r9384, 19;
	mov.b64 	%rd11192, {%r9386, %r9385};
	shf.l.wrap.b32 	%r9387, %r9383, %r9384, 3;
	shf.l.wrap.b32 	%r9388, %r9384, %r9383, 3;
	mov.b64 	%rd11193, {%r9388, %r9387};
	xor.b64  	%rd11194, %rd11192, %rd11193;
	shr.u64 	%rd11195, %rd11173, 6;
	xor.b64  	%rd11196, %rd11194, %rd11195;
	add.s64 	%rd11197, %rd11191, %rd10991;
	add.s64 	%rd11198, %rd11197, %rd11108;
	add.s64 	%rd11199, %rd11198, %rd11196;
	shf.r.wrap.b32 	%r9389, %r9264, %r9263, 1;
	shf.r.wrap.b32 	%r9390, %r9263, %r9264, 1;
	mov.b64 	%rd11200, {%r9390, %r9389};
	shf.r.wrap.b32 	%r9391, %r9264, %r9263, 8;
	shf.r.wrap.b32 	%r9392, %r9263, %r9264, 8;
	mov.b64 	%rd11201, {%r9392, %r9391};
	xor.b64  	%rd11202, %rd11200, %rd11201;
	shr.u64 	%rd11203, %rd11017, 7;
	xor.b64  	%rd11204, %rd11202, %rd11203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9393,%dummy}, %rd11186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9394}, %rd11186;
	}
	shf.r.wrap.b32 	%r9395, %r9394, %r9393, 19;
	shf.r.wrap.b32 	%r9396, %r9393, %r9394, 19;
	mov.b64 	%rd11205, {%r9396, %r9395};
	shf.l.wrap.b32 	%r9397, %r9393, %r9394, 3;
	shf.l.wrap.b32 	%r9398, %r9394, %r9393, 3;
	mov.b64 	%rd11206, {%r9398, %r9397};
	xor.b64  	%rd11207, %rd11205, %rd11206;
	shr.u64 	%rd11208, %rd11186, 6;
	xor.b64  	%rd11209, %rd11207, %rd11208;
	add.s64 	%rd11210, %rd11204, %rd11004;
	add.s64 	%rd11211, %rd11210, %rd11121;
	add.s64 	%rd11212, %rd11211, %rd11209;
	shf.r.wrap.b32 	%r9399, %r9274, %r9273, 1;
	shf.r.wrap.b32 	%r9400, %r9273, %r9274, 1;
	mov.b64 	%rd11213, {%r9400, %r9399};
	shf.r.wrap.b32 	%r9401, %r9274, %r9273, 8;
	shf.r.wrap.b32 	%r9402, %r9273, %r9274, 8;
	mov.b64 	%rd11214, {%r9402, %r9401};
	xor.b64  	%rd11215, %rd11213, %rd11214;
	shr.u64 	%rd11216, %rd11030, 7;
	xor.b64  	%rd11217, %rd11215, %rd11216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9403,%dummy}, %rd11199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9404}, %rd11199;
	}
	shf.r.wrap.b32 	%r9405, %r9404, %r9403, 19;
	shf.r.wrap.b32 	%r9406, %r9403, %r9404, 19;
	mov.b64 	%rd11218, {%r9406, %r9405};
	shf.l.wrap.b32 	%r9407, %r9403, %r9404, 3;
	shf.l.wrap.b32 	%r9408, %r9404, %r9403, 3;
	mov.b64 	%rd11219, {%r9408, %r9407};
	xor.b64  	%rd11220, %rd11218, %rd11219;
	shr.u64 	%rd11221, %rd11199, 6;
	xor.b64  	%rd11222, %rd11220, %rd11221;
	add.s64 	%rd11223, %rd11217, %rd11017;
	add.s64 	%rd11224, %rd11223, %rd11134;
	add.s64 	%rd11225, %rd11224, %rd11222;
	shf.r.wrap.b32 	%r9409, %r9284, %r9283, 1;
	shf.r.wrap.b32 	%r9410, %r9283, %r9284, 1;
	mov.b64 	%rd11226, {%r9410, %r9409};
	shf.r.wrap.b32 	%r9411, %r9284, %r9283, 8;
	shf.r.wrap.b32 	%r9412, %r9283, %r9284, 8;
	mov.b64 	%rd11227, {%r9412, %r9411};
	xor.b64  	%rd11228, %rd11226, %rd11227;
	shr.u64 	%rd11229, %rd11043, 7;
	xor.b64  	%rd11230, %rd11228, %rd11229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9413,%dummy}, %rd11212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9414}, %rd11212;
	}
	shf.r.wrap.b32 	%r9415, %r9414, %r9413, 19;
	shf.r.wrap.b32 	%r9416, %r9413, %r9414, 19;
	mov.b64 	%rd11231, {%r9416, %r9415};
	shf.l.wrap.b32 	%r9417, %r9413, %r9414, 3;
	shf.l.wrap.b32 	%r9418, %r9414, %r9413, 3;
	mov.b64 	%rd11232, {%r9418, %r9417};
	xor.b64  	%rd11233, %rd11231, %rd11232;
	shr.u64 	%rd11234, %rd11212, 6;
	xor.b64  	%rd11235, %rd11233, %rd11234;
	add.s64 	%rd11236, %rd11230, %rd11030;
	add.s64 	%rd11237, %rd11236, %rd11147;
	add.s64 	%rd11238, %rd11237, %rd11235;
	shf.r.wrap.b32 	%r9419, %r9294, %r9293, 1;
	shf.r.wrap.b32 	%r9420, %r9293, %r9294, 1;
	mov.b64 	%rd11239, {%r9420, %r9419};
	shf.r.wrap.b32 	%r9421, %r9294, %r9293, 8;
	shf.r.wrap.b32 	%r9422, %r9293, %r9294, 8;
	mov.b64 	%rd11240, {%r9422, %r9421};
	xor.b64  	%rd11241, %rd11239, %rd11240;
	shr.u64 	%rd11242, %rd11056, 7;
	xor.b64  	%rd11243, %rd11241, %rd11242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9423,%dummy}, %rd11225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9424}, %rd11225;
	}
	shf.r.wrap.b32 	%r9425, %r9424, %r9423, 19;
	shf.r.wrap.b32 	%r9426, %r9423, %r9424, 19;
	mov.b64 	%rd11244, {%r9426, %r9425};
	shf.l.wrap.b32 	%r9427, %r9423, %r9424, 3;
	shf.l.wrap.b32 	%r9428, %r9424, %r9423, 3;
	mov.b64 	%rd11245, {%r9428, %r9427};
	xor.b64  	%rd11246, %rd11244, %rd11245;
	shr.u64 	%rd11247, %rd11225, 6;
	xor.b64  	%rd11248, %rd11246, %rd11247;
	add.s64 	%rd11249, %rd11243, %rd11043;
	add.s64 	%rd11250, %rd11249, %rd11160;
	add.s64 	%rd11251, %rd11250, %rd11248;
	shf.r.wrap.b32 	%r9429, %r9304, %r9303, 1;
	shf.r.wrap.b32 	%r9430, %r9303, %r9304, 1;
	mov.b64 	%rd11252, {%r9430, %r9429};
	shf.r.wrap.b32 	%r9431, %r9304, %r9303, 8;
	shf.r.wrap.b32 	%r9432, %r9303, %r9304, 8;
	mov.b64 	%rd11253, {%r9432, %r9431};
	xor.b64  	%rd11254, %rd11252, %rd11253;
	shr.u64 	%rd11255, %rd11069, 7;
	xor.b64  	%rd11256, %rd11254, %rd11255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9433,%dummy}, %rd11238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9434}, %rd11238;
	}
	shf.r.wrap.b32 	%r9435, %r9434, %r9433, 19;
	shf.r.wrap.b32 	%r9436, %r9433, %r9434, 19;
	mov.b64 	%rd11257, {%r9436, %r9435};
	shf.l.wrap.b32 	%r9437, %r9433, %r9434, 3;
	shf.l.wrap.b32 	%r9438, %r9434, %r9433, 3;
	mov.b64 	%rd11258, {%r9438, %r9437};
	xor.b64  	%rd11259, %rd11257, %rd11258;
	shr.u64 	%rd11260, %rd11238, 6;
	xor.b64  	%rd11261, %rd11259, %rd11260;
	add.s64 	%rd11262, %rd11256, %rd11056;
	add.s64 	%rd11263, %rd11262, %rd11173;
	add.s64 	%rd11264, %rd11263, %rd11261;
	shf.r.wrap.b32 	%r9439, %r9314, %r9313, 1;
	shf.r.wrap.b32 	%r9440, %r9313, %r9314, 1;
	mov.b64 	%rd11265, {%r9440, %r9439};
	shf.r.wrap.b32 	%r9441, %r9314, %r9313, 8;
	shf.r.wrap.b32 	%r9442, %r9313, %r9314, 8;
	mov.b64 	%rd11266, {%r9442, %r9441};
	xor.b64  	%rd11267, %rd11265, %rd11266;
	shr.u64 	%rd11268, %rd11082, 7;
	xor.b64  	%rd11269, %rd11267, %rd11268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9443,%dummy}, %rd11251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9444}, %rd11251;
	}
	shf.r.wrap.b32 	%r9445, %r9444, %r9443, 19;
	shf.r.wrap.b32 	%r9446, %r9443, %r9444, 19;
	mov.b64 	%rd11270, {%r9446, %r9445};
	shf.l.wrap.b32 	%r9447, %r9443, %r9444, 3;
	shf.l.wrap.b32 	%r9448, %r9444, %r9443, 3;
	mov.b64 	%rd11271, {%r9448, %r9447};
	xor.b64  	%rd11272, %rd11270, %rd11271;
	shr.u64 	%rd11273, %rd11251, 6;
	xor.b64  	%rd11274, %rd11272, %rd11273;
	add.s64 	%rd11275, %rd11269, %rd11069;
	add.s64 	%rd11276, %rd11275, %rd11186;
	add.s64 	%rd11277, %rd11276, %rd11274;
	shf.r.wrap.b32 	%r9449, %r9324, %r9323, 1;
	shf.r.wrap.b32 	%r9450, %r9323, %r9324, 1;
	mov.b64 	%rd11278, {%r9450, %r9449};
	shf.r.wrap.b32 	%r9451, %r9324, %r9323, 8;
	shf.r.wrap.b32 	%r9452, %r9323, %r9324, 8;
	mov.b64 	%rd11279, {%r9452, %r9451};
	xor.b64  	%rd11280, %rd11278, %rd11279;
	shr.u64 	%rd11281, %rd11095, 7;
	xor.b64  	%rd11282, %rd11280, %rd11281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9453,%dummy}, %rd11264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9454}, %rd11264;
	}
	shf.r.wrap.b32 	%r9455, %r9454, %r9453, 19;
	shf.r.wrap.b32 	%r9456, %r9453, %r9454, 19;
	mov.b64 	%rd11283, {%r9456, %r9455};
	shf.l.wrap.b32 	%r9457, %r9453, %r9454, 3;
	shf.l.wrap.b32 	%r9458, %r9454, %r9453, 3;
	mov.b64 	%rd11284, {%r9458, %r9457};
	xor.b64  	%rd11285, %rd11283, %rd11284;
	shr.u64 	%rd11286, %rd11264, 6;
	xor.b64  	%rd11287, %rd11285, %rd11286;
	add.s64 	%rd11288, %rd11282, %rd11082;
	add.s64 	%rd11289, %rd11288, %rd11199;
	add.s64 	%rd11290, %rd11289, %rd11287;
	shf.r.wrap.b32 	%r9459, %r9334, %r9333, 1;
	shf.r.wrap.b32 	%r9460, %r9333, %r9334, 1;
	mov.b64 	%rd11291, {%r9460, %r9459};
	shf.r.wrap.b32 	%r9461, %r9334, %r9333, 8;
	shf.r.wrap.b32 	%r9462, %r9333, %r9334, 8;
	mov.b64 	%rd11292, {%r9462, %r9461};
	xor.b64  	%rd11293, %rd11291, %rd11292;
	shr.u64 	%rd11294, %rd11108, 7;
	xor.b64  	%rd11295, %rd11293, %rd11294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9463,%dummy}, %rd11277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9464}, %rd11277;
	}
	shf.r.wrap.b32 	%r9465, %r9464, %r9463, 19;
	shf.r.wrap.b32 	%r9466, %r9463, %r9464, 19;
	mov.b64 	%rd11296, {%r9466, %r9465};
	shf.l.wrap.b32 	%r9467, %r9463, %r9464, 3;
	shf.l.wrap.b32 	%r9468, %r9464, %r9463, 3;
	mov.b64 	%rd11297, {%r9468, %r9467};
	xor.b64  	%rd11298, %rd11296, %rd11297;
	shr.u64 	%rd11299, %rd11277, 6;
	xor.b64  	%rd11300, %rd11298, %rd11299;
	add.s64 	%rd11301, %rd11295, %rd11095;
	add.s64 	%rd11302, %rd11301, %rd11212;
	add.s64 	%rd11303, %rd11302, %rd11300;
	shf.r.wrap.b32 	%r9469, %r9344, %r9343, 1;
	shf.r.wrap.b32 	%r9470, %r9343, %r9344, 1;
	mov.b64 	%rd11304, {%r9470, %r9469};
	shf.r.wrap.b32 	%r9471, %r9344, %r9343, 8;
	shf.r.wrap.b32 	%r9472, %r9343, %r9344, 8;
	mov.b64 	%rd11305, {%r9472, %r9471};
	xor.b64  	%rd11306, %rd11304, %rd11305;
	shr.u64 	%rd11307, %rd11121, 7;
	xor.b64  	%rd11308, %rd11306, %rd11307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9473,%dummy}, %rd11290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9474}, %rd11290;
	}
	shf.r.wrap.b32 	%r9475, %r9474, %r9473, 19;
	shf.r.wrap.b32 	%r9476, %r9473, %r9474, 19;
	mov.b64 	%rd11309, {%r9476, %r9475};
	shf.l.wrap.b32 	%r9477, %r9473, %r9474, 3;
	shf.l.wrap.b32 	%r9478, %r9474, %r9473, 3;
	mov.b64 	%rd11310, {%r9478, %r9477};
	xor.b64  	%rd11311, %rd11309, %rd11310;
	shr.u64 	%rd11312, %rd11290, 6;
	xor.b64  	%rd11313, %rd11311, %rd11312;
	add.s64 	%rd11314, %rd11308, %rd11108;
	add.s64 	%rd11315, %rd11314, %rd11225;
	add.s64 	%rd11316, %rd11315, %rd11313;
	shf.r.wrap.b32 	%r9479, %r9354, %r9353, 1;
	shf.r.wrap.b32 	%r9480, %r9353, %r9354, 1;
	mov.b64 	%rd11317, {%r9480, %r9479};
	shf.r.wrap.b32 	%r9481, %r9354, %r9353, 8;
	shf.r.wrap.b32 	%r9482, %r9353, %r9354, 8;
	mov.b64 	%rd11318, {%r9482, %r9481};
	xor.b64  	%rd11319, %rd11317, %rd11318;
	shr.u64 	%rd11320, %rd11134, 7;
	xor.b64  	%rd11321, %rd11319, %rd11320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9483,%dummy}, %rd11303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9484}, %rd11303;
	}
	shf.r.wrap.b32 	%r9485, %r9484, %r9483, 19;
	shf.r.wrap.b32 	%r9486, %r9483, %r9484, 19;
	mov.b64 	%rd11322, {%r9486, %r9485};
	shf.l.wrap.b32 	%r9487, %r9483, %r9484, 3;
	shf.l.wrap.b32 	%r9488, %r9484, %r9483, 3;
	mov.b64 	%rd11323, {%r9488, %r9487};
	xor.b64  	%rd11324, %rd11322, %rd11323;
	shr.u64 	%rd11325, %rd11303, 6;
	xor.b64  	%rd11326, %rd11324, %rd11325;
	add.s64 	%rd11327, %rd11321, %rd11121;
	add.s64 	%rd11328, %rd11327, %rd11238;
	add.s64 	%rd11329, %rd11328, %rd11326;
	shf.r.wrap.b32 	%r9489, %r9364, %r9363, 1;
	shf.r.wrap.b32 	%r9490, %r9363, %r9364, 1;
	mov.b64 	%rd11330, {%r9490, %r9489};
	shf.r.wrap.b32 	%r9491, %r9364, %r9363, 8;
	shf.r.wrap.b32 	%r9492, %r9363, %r9364, 8;
	mov.b64 	%rd11331, {%r9492, %r9491};
	xor.b64  	%rd11332, %rd11330, %rd11331;
	shr.u64 	%rd11333, %rd11147, 7;
	xor.b64  	%rd11334, %rd11332, %rd11333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9493,%dummy}, %rd11316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9494}, %rd11316;
	}
	shf.r.wrap.b32 	%r9495, %r9494, %r9493, 19;
	shf.r.wrap.b32 	%r9496, %r9493, %r9494, 19;
	mov.b64 	%rd11335, {%r9496, %r9495};
	shf.l.wrap.b32 	%r9497, %r9493, %r9494, 3;
	shf.l.wrap.b32 	%r9498, %r9494, %r9493, 3;
	mov.b64 	%rd11336, {%r9498, %r9497};
	xor.b64  	%rd11337, %rd11335, %rd11336;
	shr.u64 	%rd11338, %rd11316, 6;
	xor.b64  	%rd11339, %rd11337, %rd11338;
	add.s64 	%rd11340, %rd11334, %rd11134;
	add.s64 	%rd11341, %rd11340, %rd11251;
	add.s64 	%rd11342, %rd11341, %rd11339;
	shf.r.wrap.b32 	%r9499, %r9374, %r9373, 1;
	shf.r.wrap.b32 	%r9500, %r9373, %r9374, 1;
	mov.b64 	%rd11343, {%r9500, %r9499};
	shf.r.wrap.b32 	%r9501, %r9374, %r9373, 8;
	shf.r.wrap.b32 	%r9502, %r9373, %r9374, 8;
	mov.b64 	%rd11344, {%r9502, %r9501};
	xor.b64  	%rd11345, %rd11343, %rd11344;
	shr.u64 	%rd11346, %rd11160, 7;
	xor.b64  	%rd11347, %rd11345, %rd11346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9503,%dummy}, %rd11329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9504}, %rd11329;
	}
	shf.r.wrap.b32 	%r9505, %r9504, %r9503, 19;
	shf.r.wrap.b32 	%r9506, %r9503, %r9504, 19;
	mov.b64 	%rd11348, {%r9506, %r9505};
	shf.l.wrap.b32 	%r9507, %r9503, %r9504, 3;
	shf.l.wrap.b32 	%r9508, %r9504, %r9503, 3;
	mov.b64 	%rd11349, {%r9508, %r9507};
	xor.b64  	%rd11350, %rd11348, %rd11349;
	shr.u64 	%rd11351, %rd11329, 6;
	xor.b64  	%rd11352, %rd11350, %rd11351;
	add.s64 	%rd11353, %rd11347, %rd11147;
	add.s64 	%rd11354, %rd11353, %rd11264;
	add.s64 	%rd11355, %rd11354, %rd11352;
	shf.r.wrap.b32 	%r9509, %r9384, %r9383, 1;
	shf.r.wrap.b32 	%r9510, %r9383, %r9384, 1;
	mov.b64 	%rd11356, {%r9510, %r9509};
	shf.r.wrap.b32 	%r9511, %r9384, %r9383, 8;
	shf.r.wrap.b32 	%r9512, %r9383, %r9384, 8;
	mov.b64 	%rd11357, {%r9512, %r9511};
	xor.b64  	%rd11358, %rd11356, %rd11357;
	shr.u64 	%rd11359, %rd11173, 7;
	xor.b64  	%rd11360, %rd11358, %rd11359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9513,%dummy}, %rd11342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9514}, %rd11342;
	}
	shf.r.wrap.b32 	%r9515, %r9514, %r9513, 19;
	shf.r.wrap.b32 	%r9516, %r9513, %r9514, 19;
	mov.b64 	%rd11361, {%r9516, %r9515};
	shf.l.wrap.b32 	%r9517, %r9513, %r9514, 3;
	shf.l.wrap.b32 	%r9518, %r9514, %r9513, 3;
	mov.b64 	%rd11362, {%r9518, %r9517};
	xor.b64  	%rd11363, %rd11361, %rd11362;
	shr.u64 	%rd11364, %rd11342, 6;
	xor.b64  	%rd11365, %rd11363, %rd11364;
	add.s64 	%rd11366, %rd11360, %rd11160;
	add.s64 	%rd11367, %rd11366, %rd11277;
	add.s64 	%rd11368, %rd11367, %rd11365;
	shf.r.wrap.b32 	%r9519, %r9394, %r9393, 1;
	shf.r.wrap.b32 	%r9520, %r9393, %r9394, 1;
	mov.b64 	%rd11369, {%r9520, %r9519};
	shf.r.wrap.b32 	%r9521, %r9394, %r9393, 8;
	shf.r.wrap.b32 	%r9522, %r9393, %r9394, 8;
	mov.b64 	%rd11370, {%r9522, %r9521};
	xor.b64  	%rd11371, %rd11369, %rd11370;
	shr.u64 	%rd11372, %rd11186, 7;
	xor.b64  	%rd11373, %rd11371, %rd11372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9523,%dummy}, %rd11355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9524}, %rd11355;
	}
	shf.r.wrap.b32 	%r9525, %r9524, %r9523, 19;
	shf.r.wrap.b32 	%r9526, %r9523, %r9524, 19;
	mov.b64 	%rd11374, {%r9526, %r9525};
	shf.l.wrap.b32 	%r9527, %r9523, %r9524, 3;
	shf.l.wrap.b32 	%r9528, %r9524, %r9523, 3;
	mov.b64 	%rd11375, {%r9528, %r9527};
	xor.b64  	%rd11376, %rd11374, %rd11375;
	shr.u64 	%rd11377, %rd11355, 6;
	xor.b64  	%rd11378, %rd11376, %rd11377;
	add.s64 	%rd11379, %rd11373, %rd11173;
	add.s64 	%rd11380, %rd11379, %rd11290;
	add.s64 	%rd11381, %rd11380, %rd11378;
	shf.r.wrap.b32 	%r9529, %r9404, %r9403, 1;
	shf.r.wrap.b32 	%r9530, %r9403, %r9404, 1;
	mov.b64 	%rd11382, {%r9530, %r9529};
	shf.r.wrap.b32 	%r9531, %r9404, %r9403, 8;
	shf.r.wrap.b32 	%r9532, %r9403, %r9404, 8;
	mov.b64 	%rd11383, {%r9532, %r9531};
	xor.b64  	%rd11384, %rd11382, %rd11383;
	shr.u64 	%rd11385, %rd11199, 7;
	xor.b64  	%rd11386, %rd11384, %rd11385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9533,%dummy}, %rd11368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9534}, %rd11368;
	}
	shf.r.wrap.b32 	%r9535, %r9534, %r9533, 19;
	shf.r.wrap.b32 	%r9536, %r9533, %r9534, 19;
	mov.b64 	%rd11387, {%r9536, %r9535};
	shf.l.wrap.b32 	%r9537, %r9533, %r9534, 3;
	shf.l.wrap.b32 	%r9538, %r9534, %r9533, 3;
	mov.b64 	%rd11388, {%r9538, %r9537};
	xor.b64  	%rd11389, %rd11387, %rd11388;
	shr.u64 	%rd11390, %rd11368, 6;
	xor.b64  	%rd11391, %rd11389, %rd11390;
	add.s64 	%rd11392, %rd11386, %rd11186;
	add.s64 	%rd11393, %rd11392, %rd11303;
	add.s64 	%rd11394, %rd11393, %rd11391;
	shf.r.wrap.b32 	%r9539, %r9414, %r9413, 1;
	shf.r.wrap.b32 	%r9540, %r9413, %r9414, 1;
	mov.b64 	%rd11395, {%r9540, %r9539};
	shf.r.wrap.b32 	%r9541, %r9414, %r9413, 8;
	shf.r.wrap.b32 	%r9542, %r9413, %r9414, 8;
	mov.b64 	%rd11396, {%r9542, %r9541};
	xor.b64  	%rd11397, %rd11395, %rd11396;
	shr.u64 	%rd11398, %rd11212, 7;
	xor.b64  	%rd11399, %rd11397, %rd11398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9543,%dummy}, %rd11381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9544}, %rd11381;
	}
	shf.r.wrap.b32 	%r9545, %r9544, %r9543, 19;
	shf.r.wrap.b32 	%r9546, %r9543, %r9544, 19;
	mov.b64 	%rd11400, {%r9546, %r9545};
	shf.l.wrap.b32 	%r9547, %r9543, %r9544, 3;
	shf.l.wrap.b32 	%r9548, %r9544, %r9543, 3;
	mov.b64 	%rd11401, {%r9548, %r9547};
	xor.b64  	%rd11402, %rd11400, %rd11401;
	shr.u64 	%rd11403, %rd11381, 6;
	xor.b64  	%rd11404, %rd11402, %rd11403;
	add.s64 	%rd11405, %rd11399, %rd11199;
	add.s64 	%rd11406, %rd11405, %rd11316;
	add.s64 	%rd11407, %rd11406, %rd11404;
	shf.r.wrap.b32 	%r9549, %r9424, %r9423, 1;
	shf.r.wrap.b32 	%r9550, %r9423, %r9424, 1;
	mov.b64 	%rd11408, {%r9550, %r9549};
	shf.r.wrap.b32 	%r9551, %r9424, %r9423, 8;
	shf.r.wrap.b32 	%r9552, %r9423, %r9424, 8;
	mov.b64 	%rd11409, {%r9552, %r9551};
	xor.b64  	%rd11410, %rd11408, %rd11409;
	shr.u64 	%rd11411, %rd11225, 7;
	xor.b64  	%rd11412, %rd11410, %rd11411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9553,%dummy}, %rd11394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9554}, %rd11394;
	}
	shf.r.wrap.b32 	%r9555, %r9554, %r9553, 19;
	shf.r.wrap.b32 	%r9556, %r9553, %r9554, 19;
	mov.b64 	%rd11413, {%r9556, %r9555};
	shf.l.wrap.b32 	%r9557, %r9553, %r9554, 3;
	shf.l.wrap.b32 	%r9558, %r9554, %r9553, 3;
	mov.b64 	%rd11414, {%r9558, %r9557};
	xor.b64  	%rd11415, %rd11413, %rd11414;
	shr.u64 	%rd11416, %rd11394, 6;
	xor.b64  	%rd11417, %rd11415, %rd11416;
	add.s64 	%rd11418, %rd11412, %rd11212;
	add.s64 	%rd11419, %rd11418, %rd11329;
	add.s64 	%rd11420, %rd11419, %rd11417;
	shf.r.wrap.b32 	%r9559, %r9434, %r9433, 1;
	shf.r.wrap.b32 	%r9560, %r9433, %r9434, 1;
	mov.b64 	%rd11421, {%r9560, %r9559};
	shf.r.wrap.b32 	%r9561, %r9434, %r9433, 8;
	shf.r.wrap.b32 	%r9562, %r9433, %r9434, 8;
	mov.b64 	%rd11422, {%r9562, %r9561};
	xor.b64  	%rd11423, %rd11421, %rd11422;
	shr.u64 	%rd11424, %rd11238, 7;
	xor.b64  	%rd11425, %rd11423, %rd11424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9563,%dummy}, %rd11407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9564}, %rd11407;
	}
	shf.r.wrap.b32 	%r9565, %r9564, %r9563, 19;
	shf.r.wrap.b32 	%r9566, %r9563, %r9564, 19;
	mov.b64 	%rd11426, {%r9566, %r9565};
	shf.l.wrap.b32 	%r9567, %r9563, %r9564, 3;
	shf.l.wrap.b32 	%r9568, %r9564, %r9563, 3;
	mov.b64 	%rd11427, {%r9568, %r9567};
	xor.b64  	%rd11428, %rd11426, %rd11427;
	shr.u64 	%rd11429, %rd11407, 6;
	xor.b64  	%rd11430, %rd11428, %rd11429;
	add.s64 	%rd11431, %rd11425, %rd11225;
	add.s64 	%rd11432, %rd11431, %rd11342;
	add.s64 	%rd11433, %rd11432, %rd11430;
	shf.r.wrap.b32 	%r9569, %r9444, %r9443, 1;
	shf.r.wrap.b32 	%r9570, %r9443, %r9444, 1;
	mov.b64 	%rd11434, {%r9570, %r9569};
	shf.r.wrap.b32 	%r9571, %r9444, %r9443, 8;
	shf.r.wrap.b32 	%r9572, %r9443, %r9444, 8;
	mov.b64 	%rd11435, {%r9572, %r9571};
	xor.b64  	%rd11436, %rd11434, %rd11435;
	shr.u64 	%rd11437, %rd11251, 7;
	xor.b64  	%rd11438, %rd11436, %rd11437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9573,%dummy}, %rd11420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9574}, %rd11420;
	}
	shf.r.wrap.b32 	%r9575, %r9574, %r9573, 19;
	shf.r.wrap.b32 	%r9576, %r9573, %r9574, 19;
	mov.b64 	%rd11439, {%r9576, %r9575};
	shf.l.wrap.b32 	%r9577, %r9573, %r9574, 3;
	shf.l.wrap.b32 	%r9578, %r9574, %r9573, 3;
	mov.b64 	%rd11440, {%r9578, %r9577};
	xor.b64  	%rd11441, %rd11439, %rd11440;
	shr.u64 	%rd11442, %rd11420, 6;
	xor.b64  	%rd11443, %rd11441, %rd11442;
	add.s64 	%rd11444, %rd11438, %rd11238;
	add.s64 	%rd11445, %rd11444, %rd11355;
	add.s64 	%rd11446, %rd11445, %rd11443;
	shf.r.wrap.b32 	%r9579, %r9454, %r9453, 1;
	shf.r.wrap.b32 	%r9580, %r9453, %r9454, 1;
	mov.b64 	%rd11447, {%r9580, %r9579};
	shf.r.wrap.b32 	%r9581, %r9454, %r9453, 8;
	shf.r.wrap.b32 	%r9582, %r9453, %r9454, 8;
	mov.b64 	%rd11448, {%r9582, %r9581};
	xor.b64  	%rd11449, %rd11447, %rd11448;
	shr.u64 	%rd11450, %rd11264, 7;
	xor.b64  	%rd11451, %rd11449, %rd11450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9583,%dummy}, %rd11433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9584}, %rd11433;
	}
	shf.r.wrap.b32 	%r9585, %r9584, %r9583, 19;
	shf.r.wrap.b32 	%r9586, %r9583, %r9584, 19;
	mov.b64 	%rd11452, {%r9586, %r9585};
	shf.l.wrap.b32 	%r9587, %r9583, %r9584, 3;
	shf.l.wrap.b32 	%r9588, %r9584, %r9583, 3;
	mov.b64 	%rd11453, {%r9588, %r9587};
	xor.b64  	%rd11454, %rd11452, %rd11453;
	shr.u64 	%rd11455, %rd11433, 6;
	xor.b64  	%rd11456, %rd11454, %rd11455;
	add.s64 	%rd11457, %rd11451, %rd11251;
	add.s64 	%rd11458, %rd11457, %rd11368;
	add.s64 	%rd11459, %rd11458, %rd11456;
	shf.r.wrap.b32 	%r9589, %r9464, %r9463, 1;
	shf.r.wrap.b32 	%r9590, %r9463, %r9464, 1;
	mov.b64 	%rd11460, {%r9590, %r9589};
	shf.r.wrap.b32 	%r9591, %r9464, %r9463, 8;
	shf.r.wrap.b32 	%r9592, %r9463, %r9464, 8;
	mov.b64 	%rd11461, {%r9592, %r9591};
	xor.b64  	%rd11462, %rd11460, %rd11461;
	shr.u64 	%rd11463, %rd11277, 7;
	xor.b64  	%rd11464, %rd11462, %rd11463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9593,%dummy}, %rd11446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9594}, %rd11446;
	}
	shf.r.wrap.b32 	%r9595, %r9594, %r9593, 19;
	shf.r.wrap.b32 	%r9596, %r9593, %r9594, 19;
	mov.b64 	%rd11465, {%r9596, %r9595};
	shf.l.wrap.b32 	%r9597, %r9593, %r9594, 3;
	shf.l.wrap.b32 	%r9598, %r9594, %r9593, 3;
	mov.b64 	%rd11466, {%r9598, %r9597};
	xor.b64  	%rd11467, %rd11465, %rd11466;
	shr.u64 	%rd11468, %rd11446, 6;
	xor.b64  	%rd11469, %rd11467, %rd11468;
	add.s64 	%rd11470, %rd11464, %rd11264;
	add.s64 	%rd11471, %rd11470, %rd11381;
	add.s64 	%rd11472, %rd11471, %rd11469;
	shf.r.wrap.b32 	%r9599, %r9474, %r9473, 1;
	shf.r.wrap.b32 	%r9600, %r9473, %r9474, 1;
	mov.b64 	%rd11473, {%r9600, %r9599};
	shf.r.wrap.b32 	%r9601, %r9474, %r9473, 8;
	shf.r.wrap.b32 	%r9602, %r9473, %r9474, 8;
	mov.b64 	%rd11474, {%r9602, %r9601};
	xor.b64  	%rd11475, %rd11473, %rd11474;
	shr.u64 	%rd11476, %rd11290, 7;
	xor.b64  	%rd11477, %rd11475, %rd11476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9603,%dummy}, %rd11459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9604}, %rd11459;
	}
	shf.r.wrap.b32 	%r9605, %r9604, %r9603, 19;
	shf.r.wrap.b32 	%r9606, %r9603, %r9604, 19;
	mov.b64 	%rd11478, {%r9606, %r9605};
	shf.l.wrap.b32 	%r9607, %r9603, %r9604, 3;
	shf.l.wrap.b32 	%r9608, %r9604, %r9603, 3;
	mov.b64 	%rd11479, {%r9608, %r9607};
	xor.b64  	%rd11480, %rd11478, %rd11479;
	shr.u64 	%rd11481, %rd11459, 6;
	xor.b64  	%rd11482, %rd11480, %rd11481;
	add.s64 	%rd11483, %rd11477, %rd11277;
	add.s64 	%rd11484, %rd11483, %rd11394;
	add.s64 	%rd11485, %rd11484, %rd11482;
	shf.r.wrap.b32 	%r9609, %r9484, %r9483, 1;
	shf.r.wrap.b32 	%r9610, %r9483, %r9484, 1;
	mov.b64 	%rd11486, {%r9610, %r9609};
	shf.r.wrap.b32 	%r9611, %r9484, %r9483, 8;
	shf.r.wrap.b32 	%r9612, %r9483, %r9484, 8;
	mov.b64 	%rd11487, {%r9612, %r9611};
	xor.b64  	%rd11488, %rd11486, %rd11487;
	shr.u64 	%rd11489, %rd11303, 7;
	xor.b64  	%rd11490, %rd11488, %rd11489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9613,%dummy}, %rd11472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9614}, %rd11472;
	}
	shf.r.wrap.b32 	%r9615, %r9614, %r9613, 19;
	shf.r.wrap.b32 	%r9616, %r9613, %r9614, 19;
	mov.b64 	%rd11491, {%r9616, %r9615};
	shf.l.wrap.b32 	%r9617, %r9613, %r9614, 3;
	shf.l.wrap.b32 	%r9618, %r9614, %r9613, 3;
	mov.b64 	%rd11492, {%r9618, %r9617};
	xor.b64  	%rd11493, %rd11491, %rd11492;
	shr.u64 	%rd11494, %rd11472, 6;
	xor.b64  	%rd11495, %rd11493, %rd11494;
	add.s64 	%rd11496, %rd11490, %rd11290;
	add.s64 	%rd11497, %rd11496, %rd11407;
	add.s64 	%rd11498, %rd11497, %rd11495;
	shf.r.wrap.b32 	%r9619, %r9494, %r9493, 1;
	shf.r.wrap.b32 	%r9620, %r9493, %r9494, 1;
	mov.b64 	%rd11499, {%r9620, %r9619};
	shf.r.wrap.b32 	%r9621, %r9494, %r9493, 8;
	shf.r.wrap.b32 	%r9622, %r9493, %r9494, 8;
	mov.b64 	%rd11500, {%r9622, %r9621};
	xor.b64  	%rd11501, %rd11499, %rd11500;
	shr.u64 	%rd11502, %rd11316, 7;
	xor.b64  	%rd11503, %rd11501, %rd11502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9623,%dummy}, %rd11485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9624}, %rd11485;
	}
	shf.r.wrap.b32 	%r9625, %r9624, %r9623, 19;
	shf.r.wrap.b32 	%r9626, %r9623, %r9624, 19;
	mov.b64 	%rd11504, {%r9626, %r9625};
	shf.l.wrap.b32 	%r9627, %r9623, %r9624, 3;
	shf.l.wrap.b32 	%r9628, %r9624, %r9623, 3;
	mov.b64 	%rd11505, {%r9628, %r9627};
	xor.b64  	%rd11506, %rd11504, %rd11505;
	shr.u64 	%rd11507, %rd11485, 6;
	xor.b64  	%rd11508, %rd11506, %rd11507;
	add.s64 	%rd11509, %rd11503, %rd11303;
	add.s64 	%rd11510, %rd11509, %rd11420;
	add.s64 	%rd11511, %rd11510, %rd11508;
	shf.r.wrap.b32 	%r9629, %r9504, %r9503, 1;
	shf.r.wrap.b32 	%r9630, %r9503, %r9504, 1;
	mov.b64 	%rd11512, {%r9630, %r9629};
	shf.r.wrap.b32 	%r9631, %r9504, %r9503, 8;
	shf.r.wrap.b32 	%r9632, %r9503, %r9504, 8;
	mov.b64 	%rd11513, {%r9632, %r9631};
	xor.b64  	%rd11514, %rd11512, %rd11513;
	shr.u64 	%rd11515, %rd11329, 7;
	xor.b64  	%rd11516, %rd11514, %rd11515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9633,%dummy}, %rd11498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9634}, %rd11498;
	}
	shf.r.wrap.b32 	%r9635, %r9634, %r9633, 19;
	shf.r.wrap.b32 	%r9636, %r9633, %r9634, 19;
	mov.b64 	%rd11517, {%r9636, %r9635};
	shf.l.wrap.b32 	%r9637, %r9633, %r9634, 3;
	shf.l.wrap.b32 	%r9638, %r9634, %r9633, 3;
	mov.b64 	%rd11518, {%r9638, %r9637};
	xor.b64  	%rd11519, %rd11517, %rd11518;
	shr.u64 	%rd11520, %rd11498, 6;
	xor.b64  	%rd11521, %rd11519, %rd11520;
	add.s64 	%rd11522, %rd11516, %rd11316;
	add.s64 	%rd11523, %rd11522, %rd11433;
	add.s64 	%rd11524, %rd11523, %rd11521;
	shf.r.wrap.b32 	%r9639, %r9514, %r9513, 1;
	shf.r.wrap.b32 	%r9640, %r9513, %r9514, 1;
	mov.b64 	%rd11525, {%r9640, %r9639};
	shf.r.wrap.b32 	%r9641, %r9514, %r9513, 8;
	shf.r.wrap.b32 	%r9642, %r9513, %r9514, 8;
	mov.b64 	%rd11526, {%r9642, %r9641};
	xor.b64  	%rd11527, %rd11525, %rd11526;
	shr.u64 	%rd11528, %rd11342, 7;
	xor.b64  	%rd11529, %rd11527, %rd11528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9643,%dummy}, %rd11511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9644}, %rd11511;
	}
	shf.r.wrap.b32 	%r9645, %r9644, %r9643, 19;
	shf.r.wrap.b32 	%r9646, %r9643, %r9644, 19;
	mov.b64 	%rd11530, {%r9646, %r9645};
	shf.l.wrap.b32 	%r9647, %r9643, %r9644, 3;
	shf.l.wrap.b32 	%r9648, %r9644, %r9643, 3;
	mov.b64 	%rd11531, {%r9648, %r9647};
	xor.b64  	%rd11532, %rd11530, %rd11531;
	shr.u64 	%rd11533, %rd11511, 6;
	xor.b64  	%rd11534, %rd11532, %rd11533;
	add.s64 	%rd11535, %rd11529, %rd11329;
	add.s64 	%rd11536, %rd11535, %rd11446;
	add.s64 	%rd11537, %rd11536, %rd11534;
	shf.r.wrap.b32 	%r9649, %r9524, %r9523, 1;
	shf.r.wrap.b32 	%r9650, %r9523, %r9524, 1;
	mov.b64 	%rd11538, {%r9650, %r9649};
	shf.r.wrap.b32 	%r9651, %r9524, %r9523, 8;
	shf.r.wrap.b32 	%r9652, %r9523, %r9524, 8;
	mov.b64 	%rd11539, {%r9652, %r9651};
	xor.b64  	%rd11540, %rd11538, %rd11539;
	shr.u64 	%rd11541, %rd11355, 7;
	xor.b64  	%rd11542, %rd11540, %rd11541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9653,%dummy}, %rd11524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9654}, %rd11524;
	}
	shf.r.wrap.b32 	%r9655, %r9654, %r9653, 19;
	shf.r.wrap.b32 	%r9656, %r9653, %r9654, 19;
	mov.b64 	%rd11543, {%r9656, %r9655};
	shf.l.wrap.b32 	%r9657, %r9653, %r9654, 3;
	shf.l.wrap.b32 	%r9658, %r9654, %r9653, 3;
	mov.b64 	%rd11544, {%r9658, %r9657};
	xor.b64  	%rd11545, %rd11543, %rd11544;
	shr.u64 	%rd11546, %rd11524, 6;
	xor.b64  	%rd11547, %rd11545, %rd11546;
	add.s64 	%rd11548, %rd11542, %rd11342;
	add.s64 	%rd11549, %rd11548, %rd11459;
	add.s64 	%rd11550, %rd11549, %rd11547;
	shf.r.wrap.b32 	%r9659, %r9534, %r9533, 1;
	shf.r.wrap.b32 	%r9660, %r9533, %r9534, 1;
	mov.b64 	%rd11551, {%r9660, %r9659};
	shf.r.wrap.b32 	%r9661, %r9534, %r9533, 8;
	shf.r.wrap.b32 	%r9662, %r9533, %r9534, 8;
	mov.b64 	%rd11552, {%r9662, %r9661};
	xor.b64  	%rd11553, %rd11551, %rd11552;
	shr.u64 	%rd11554, %rd11368, 7;
	xor.b64  	%rd11555, %rd11553, %rd11554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9663,%dummy}, %rd11537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9664}, %rd11537;
	}
	shf.r.wrap.b32 	%r9665, %r9664, %r9663, 19;
	shf.r.wrap.b32 	%r9666, %r9663, %r9664, 19;
	mov.b64 	%rd11556, {%r9666, %r9665};
	shf.l.wrap.b32 	%r9667, %r9663, %r9664, 3;
	shf.l.wrap.b32 	%r9668, %r9664, %r9663, 3;
	mov.b64 	%rd11557, {%r9668, %r9667};
	xor.b64  	%rd11558, %rd11556, %rd11557;
	shr.u64 	%rd11559, %rd11537, 6;
	xor.b64  	%rd11560, %rd11558, %rd11559;
	add.s64 	%rd11561, %rd11555, %rd11355;
	add.s64 	%rd11562, %rd11561, %rd11472;
	add.s64 	%rd11563, %rd11562, %rd11560;
	shf.r.wrap.b32 	%r9669, %r9544, %r9543, 1;
	shf.r.wrap.b32 	%r9670, %r9543, %r9544, 1;
	mov.b64 	%rd11564, {%r9670, %r9669};
	shf.r.wrap.b32 	%r9671, %r9544, %r9543, 8;
	shf.r.wrap.b32 	%r9672, %r9543, %r9544, 8;
	mov.b64 	%rd11565, {%r9672, %r9671};
	xor.b64  	%rd11566, %rd11564, %rd11565;
	shr.u64 	%rd11567, %rd11381, 7;
	xor.b64  	%rd11568, %rd11566, %rd11567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9673,%dummy}, %rd11550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9674}, %rd11550;
	}
	shf.r.wrap.b32 	%r9675, %r9674, %r9673, 19;
	shf.r.wrap.b32 	%r9676, %r9673, %r9674, 19;
	mov.b64 	%rd11569, {%r9676, %r9675};
	shf.l.wrap.b32 	%r9677, %r9673, %r9674, 3;
	shf.l.wrap.b32 	%r9678, %r9674, %r9673, 3;
	mov.b64 	%rd11570, {%r9678, %r9677};
	xor.b64  	%rd11571, %rd11569, %rd11570;
	shr.u64 	%rd11572, %rd11550, 6;
	xor.b64  	%rd11573, %rd11571, %rd11572;
	add.s64 	%rd11574, %rd11568, %rd11368;
	add.s64 	%rd11575, %rd11574, %rd11485;
	add.s64 	%rd11576, %rd11575, %rd11573;
	shf.r.wrap.b32 	%r9679, %r9554, %r9553, 1;
	shf.r.wrap.b32 	%r9680, %r9553, %r9554, 1;
	mov.b64 	%rd11577, {%r9680, %r9679};
	shf.r.wrap.b32 	%r9681, %r9554, %r9553, 8;
	shf.r.wrap.b32 	%r9682, %r9553, %r9554, 8;
	mov.b64 	%rd11578, {%r9682, %r9681};
	xor.b64  	%rd11579, %rd11577, %rd11578;
	shr.u64 	%rd11580, %rd11394, 7;
	xor.b64  	%rd11581, %rd11579, %rd11580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9683,%dummy}, %rd11563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9684}, %rd11563;
	}
	shf.r.wrap.b32 	%r9685, %r9684, %r9683, 19;
	shf.r.wrap.b32 	%r9686, %r9683, %r9684, 19;
	mov.b64 	%rd11582, {%r9686, %r9685};
	shf.l.wrap.b32 	%r9687, %r9683, %r9684, 3;
	shf.l.wrap.b32 	%r9688, %r9684, %r9683, 3;
	mov.b64 	%rd11583, {%r9688, %r9687};
	xor.b64  	%rd11584, %rd11582, %rd11583;
	shr.u64 	%rd11585, %rd11563, 6;
	xor.b64  	%rd11586, %rd11584, %rd11585;
	add.s64 	%rd11587, %rd11581, %rd11381;
	add.s64 	%rd11588, %rd11587, %rd11498;
	add.s64 	%rd11589, %rd11588, %rd11586;
	shf.r.wrap.b32 	%r9689, %r9564, %r9563, 1;
	shf.r.wrap.b32 	%r9690, %r9563, %r9564, 1;
	mov.b64 	%rd11590, {%r9690, %r9689};
	shf.r.wrap.b32 	%r9691, %r9564, %r9563, 8;
	shf.r.wrap.b32 	%r9692, %r9563, %r9564, 8;
	mov.b64 	%rd11591, {%r9692, %r9691};
	xor.b64  	%rd11592, %rd11590, %rd11591;
	shr.u64 	%rd11593, %rd11407, 7;
	xor.b64  	%rd11594, %rd11592, %rd11593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9693,%dummy}, %rd11576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9694}, %rd11576;
	}
	shf.r.wrap.b32 	%r9695, %r9694, %r9693, 19;
	shf.r.wrap.b32 	%r9696, %r9693, %r9694, 19;
	mov.b64 	%rd11595, {%r9696, %r9695};
	shf.l.wrap.b32 	%r9697, %r9693, %r9694, 3;
	shf.l.wrap.b32 	%r9698, %r9694, %r9693, 3;
	mov.b64 	%rd11596, {%r9698, %r9697};
	xor.b64  	%rd11597, %rd11595, %rd11596;
	shr.u64 	%rd11598, %rd11576, 6;
	xor.b64  	%rd11599, %rd11597, %rd11598;
	add.s64 	%rd11600, %rd11594, %rd11394;
	add.s64 	%rd11601, %rd11600, %rd11511;
	add.s64 	%rd11602, %rd11601, %rd11599;
	shf.r.wrap.b32 	%r9699, %r9574, %r9573, 1;
	shf.r.wrap.b32 	%r9700, %r9573, %r9574, 1;
	mov.b64 	%rd11603, {%r9700, %r9699};
	shf.r.wrap.b32 	%r9701, %r9574, %r9573, 8;
	shf.r.wrap.b32 	%r9702, %r9573, %r9574, 8;
	mov.b64 	%rd11604, {%r9702, %r9701};
	xor.b64  	%rd11605, %rd11603, %rd11604;
	shr.u64 	%rd11606, %rd11420, 7;
	xor.b64  	%rd11607, %rd11605, %rd11606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9703,%dummy}, %rd11589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9704}, %rd11589;
	}
	shf.r.wrap.b32 	%r9705, %r9704, %r9703, 19;
	shf.r.wrap.b32 	%r9706, %r9703, %r9704, 19;
	mov.b64 	%rd11608, {%r9706, %r9705};
	shf.l.wrap.b32 	%r9707, %r9703, %r9704, 3;
	shf.l.wrap.b32 	%r9708, %r9704, %r9703, 3;
	mov.b64 	%rd11609, {%r9708, %r9707};
	xor.b64  	%rd11610, %rd11608, %rd11609;
	shr.u64 	%rd11611, %rd11589, 6;
	xor.b64  	%rd11612, %rd11610, %rd11611;
	add.s64 	%rd11613, %rd11607, %rd11407;
	add.s64 	%rd11614, %rd11613, %rd11524;
	add.s64 	%rd11615, %rd11614, %rd11612;
	shf.r.wrap.b32 	%r9709, %r9584, %r9583, 1;
	shf.r.wrap.b32 	%r9710, %r9583, %r9584, 1;
	mov.b64 	%rd11616, {%r9710, %r9709};
	shf.r.wrap.b32 	%r9711, %r9584, %r9583, 8;
	shf.r.wrap.b32 	%r9712, %r9583, %r9584, 8;
	mov.b64 	%rd11617, {%r9712, %r9711};
	xor.b64  	%rd11618, %rd11616, %rd11617;
	shr.u64 	%rd11619, %rd11433, 7;
	xor.b64  	%rd11620, %rd11618, %rd11619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9713,%dummy}, %rd11602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9714}, %rd11602;
	}
	shf.r.wrap.b32 	%r9715, %r9714, %r9713, 19;
	shf.r.wrap.b32 	%r9716, %r9713, %r9714, 19;
	mov.b64 	%rd11621, {%r9716, %r9715};
	shf.l.wrap.b32 	%r9717, %r9713, %r9714, 3;
	shf.l.wrap.b32 	%r9718, %r9714, %r9713, 3;
	mov.b64 	%rd11622, {%r9718, %r9717};
	xor.b64  	%rd11623, %rd11621, %rd11622;
	shr.u64 	%rd11624, %rd11602, 6;
	xor.b64  	%rd11625, %rd11623, %rd11624;
	add.s64 	%rd11626, %rd11620, %rd11420;
	add.s64 	%rd11627, %rd11626, %rd11537;
	add.s64 	%rd11628, %rd11627, %rd11625;
	add.s64 	%rd11629, %rd40, %rd10496;
	add.s64 	%rd11630, %rd11629, -6534734903238641935;
	add.s64 	%rd11631, %rd120, %rd11629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9719,%dummy}, %rd11630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9720}, %rd11630;
	}
	shf.r.wrap.b32 	%r9721, %r9720, %r9719, 14;
	shf.r.wrap.b32 	%r9722, %r9719, %r9720, 14;
	mov.b64 	%rd11632, {%r9722, %r9721};
	shf.r.wrap.b32 	%r9723, %r9720, %r9719, 18;
	shf.r.wrap.b32 	%r9724, %r9719, %r9720, 18;
	mov.b64 	%rd11633, {%r9724, %r9723};
	xor.b64  	%rd11634, %rd11632, %rd11633;
	shf.l.wrap.b32 	%r9725, %r9719, %r9720, 23;
	shf.l.wrap.b32 	%r9726, %r9720, %r9719, 23;
	mov.b64 	%rd11635, {%r9726, %r9725};
	xor.b64  	%rd11636, %rd11634, %rd11635;
	and.b64  	%rd11637, %rd11630, 5840696475078001361;
	mov.u64 	%rd11638, 6534734903238641934;
	sub.s64 	%rd11639, %rd11638, %rd11629;
	and.b64  	%rd11640, %rd11639, -7276294671716946913;
	or.b64  	%rd11641, %rd11637, %rd11640;
	add.s64 	%rd11642, %rd11641, %rd11636;
	add.s64 	%rd11643, %rd11642, %rd41;
	add.s64 	%rd11644, %rd11643, %rd10516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9727,%dummy}, %rd11631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9728}, %rd11631;
	}
	shf.r.wrap.b32 	%r9729, %r9728, %r9727, 28;
	shf.r.wrap.b32 	%r9730, %r9727, %r9728, 28;
	mov.b64 	%rd11645, {%r9730, %r9729};
	shf.l.wrap.b32 	%r9731, %r9727, %r9728, 30;
	shf.l.wrap.b32 	%r9732, %r9728, %r9727, 30;
	mov.b64 	%rd11646, {%r9732, %r9731};
	xor.b64  	%rd11647, %rd11645, %rd11646;
	shf.l.wrap.b32 	%r9733, %r9727, %r9728, 25;
	shf.l.wrap.b32 	%r9734, %r9728, %r9727, 25;
	mov.b64 	%rd11648, {%r9734, %r9733};
	xor.b64  	%rd11649, %rd11647, %rd11648;
	and.b64  	%rd11650, %rd11631, -3355664534840381901;
	or.b64  	%rd11651, %rd11650, 3026882967131160840;
	add.s64 	%rd11652, %rd11649, %rd11651;
	add.s64 	%rd11653, %rd11652, %rd11644;
	add.s64 	%rd11654, %rd11644, 6625583534739731862;
	add.s64 	%rd11655, %rd11653, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9735,%dummy}, %rd11654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9736}, %rd11654;
	}
	shf.r.wrap.b32 	%r9737, %r9736, %r9735, 14;
	shf.r.wrap.b32 	%r9738, %r9735, %r9736, 14;
	mov.b64 	%rd11656, {%r9738, %r9737};
	shf.r.wrap.b32 	%r9739, %r9736, %r9735, 18;
	shf.r.wrap.b32 	%r9740, %r9735, %r9736, 18;
	mov.b64 	%rd11657, {%r9740, %r9739};
	xor.b64  	%rd11658, %rd11656, %rd11657;
	shf.l.wrap.b32 	%r9741, %r9735, %r9736, 23;
	shf.l.wrap.b32 	%r9742, %r9736, %r9735, 23;
	mov.b64 	%rd11659, {%r9742, %r9741};
	xor.b64  	%rd11660, %rd11658, %rd11659;
	and.b64  	%rd11661, %rd11654, %rd11630;
	mov.u64 	%rd11662, 2597788502115043945;
	sub.s64 	%rd11663, %rd11662, %rd11644;
	and.b64  	%rd11664, %rd11663, 5840696475078001361;
	or.b64  	%rd11665, %rd11661, %rd11664;
	add.s64 	%rd11666, %rd11665, %rd11660;
	add.s64 	%rd11667, %rd11666, %rd42;
	add.s64 	%rd11668, %rd11667, %rd10536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9743,%dummy}, %rd11655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9744}, %rd11655;
	}
	shf.r.wrap.b32 	%r9745, %r9744, %r9743, 28;
	shf.r.wrap.b32 	%r9746, %r9743, %r9744, 28;
	mov.b64 	%rd11669, {%r9746, %r9745};
	shf.l.wrap.b32 	%r9747, %r9743, %r9744, 30;
	shf.l.wrap.b32 	%r9748, %r9744, %r9743, 30;
	mov.b64 	%rd11670, {%r9748, %r9747};
	xor.b64  	%rd11671, %rd11669, %rd11670;
	shf.l.wrap.b32 	%r9749, %r9743, %r9744, 25;
	shf.l.wrap.b32 	%r9750, %r9744, %r9743, 25;
	mov.b64 	%rd11672, {%r9750, %r9749};
	xor.b64  	%rd11673, %rd11671, %rd11672;
	xor.b64  	%rd11674, %rd11631, 7640891576956012808;
	and.b64  	%rd11675, %rd11655, %rd11674;
	and.b64  	%rd11676, %rd11631, 7640891576956012808;
	xor.b64  	%rd11677, %rd11675, %rd11676;
	add.s64 	%rd11678, %rd11673, %rd11677;
	add.s64 	%rd11679, %rd11678, %rd11668;
	add.s64 	%rd11680, %rd11668, 6227659224458531674;
	add.s64 	%rd11681, %rd11679, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9751,%dummy}, %rd11680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9752}, %rd11680;
	}
	shf.r.wrap.b32 	%r9753, %r9752, %r9751, 14;
	shf.r.wrap.b32 	%r9754, %r9751, %r9752, 14;
	mov.b64 	%rd11682, {%r9754, %r9753};
	shf.r.wrap.b32 	%r9755, %r9752, %r9751, 18;
	shf.r.wrap.b32 	%r9756, %r9751, %r9752, 18;
	mov.b64 	%rd11683, {%r9756, %r9755};
	xor.b64  	%rd11684, %rd11682, %rd11683;
	shf.l.wrap.b32 	%r9757, %r9751, %r9752, 23;
	shf.l.wrap.b32 	%r9758, %r9752, %r9751, 23;
	mov.b64 	%rd11685, {%r9758, %r9757};
	xor.b64  	%rd11686, %rd11684, %rd11685;
	and.b64  	%rd11687, %rd11680, %rd11654;
	mov.u64 	%rd11688, -6227659224458531675;
	sub.s64 	%rd11689, %rd11688, %rd11668;
	and.b64  	%rd11690, %rd11630, %rd11689;
	or.b64  	%rd11691, %rd11687, %rd11690;
	add.s64 	%rd11692, %rd11691, %rd11686;
	add.s64 	%rd11693, %rd11692, %rd43;
	add.s64 	%rd11694, %rd11693, %rd10556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9759,%dummy}, %rd11681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9760}, %rd11681;
	}
	shf.r.wrap.b32 	%r9761, %r9760, %r9759, 28;
	shf.r.wrap.b32 	%r9762, %r9759, %r9760, 28;
	mov.b64 	%rd11695, {%r9762, %r9761};
	shf.l.wrap.b32 	%r9763, %r9759, %r9760, 30;
	shf.l.wrap.b32 	%r9764, %r9760, %r9759, 30;
	mov.b64 	%rd11696, {%r9764, %r9763};
	xor.b64  	%rd11697, %rd11695, %rd11696;
	shf.l.wrap.b32 	%r9765, %r9759, %r9760, 25;
	shf.l.wrap.b32 	%r9766, %r9760, %r9759, 25;
	mov.b64 	%rd11698, {%r9766, %r9765};
	xor.b64  	%rd11699, %rd11697, %rd11698;
	xor.b64  	%rd11700, %rd11655, %rd11631;
	and.b64  	%rd11701, %rd11681, %rd11700;
	and.b64  	%rd11702, %rd11655, %rd11631;
	xor.b64  	%rd11703, %rd11701, %rd11702;
	add.s64 	%rd11704, %rd11699, %rd11703;
	add.s64 	%rd11705, %rd11704, %rd11694;
	add.s64 	%rd11706, %rd11694, -4965156021675537447;
	add.s64 	%rd11707, %rd11705, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9767,%dummy}, %rd11706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9768}, %rd11706;
	}
	shf.r.wrap.b32 	%r9769, %r9768, %r9767, 14;
	shf.r.wrap.b32 	%r9770, %r9767, %r9768, 14;
	mov.b64 	%rd11708, {%r9770, %r9769};
	shf.r.wrap.b32 	%r9771, %r9768, %r9767, 18;
	shf.r.wrap.b32 	%r9772, %r9767, %r9768, 18;
	mov.b64 	%rd11709, {%r9772, %r9771};
	xor.b64  	%rd11710, %rd11708, %rd11709;
	shf.l.wrap.b32 	%r9773, %r9767, %r9768, 23;
	shf.l.wrap.b32 	%r9774, %r9768, %r9767, 23;
	mov.b64 	%rd11711, {%r9774, %r9773};
	xor.b64  	%rd11712, %rd11710, %rd11711;
	and.b64  	%rd11713, %rd11706, %rd11680;
	mov.u64 	%rd11714, 4965156021675537446;
	sub.s64 	%rd11715, %rd11714, %rd11694;
	and.b64  	%rd11716, %rd11654, %rd11715;
	or.b64  	%rd11717, %rd11713, %rd11716;
	add.s64 	%rd11718, %rd11717, %rd11630;
	add.s64 	%rd11719, %rd11718, %rd11712;
	add.s64 	%rd11720, %rd11719, %rd44;
	add.s64 	%rd11721, %rd11720, %rd10576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9775,%dummy}, %rd11707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9776}, %rd11707;
	}
	shf.r.wrap.b32 	%r9777, %r9776, %r9775, 28;
	shf.r.wrap.b32 	%r9778, %r9775, %r9776, 28;
	mov.b64 	%rd11722, {%r9778, %r9777};
	shf.l.wrap.b32 	%r9779, %r9775, %r9776, 30;
	shf.l.wrap.b32 	%r9780, %r9776, %r9775, 30;
	mov.b64 	%rd11723, {%r9780, %r9779};
	xor.b64  	%rd11724, %rd11722, %rd11723;
	shf.l.wrap.b32 	%r9781, %r9775, %r9776, 25;
	shf.l.wrap.b32 	%r9782, %r9776, %r9775, 25;
	mov.b64 	%rd11725, {%r9782, %r9781};
	xor.b64  	%rd11726, %rd11724, %rd11725;
	xor.b64  	%rd11727, %rd11681, %rd11655;
	and.b64  	%rd11728, %rd11707, %rd11727;
	and.b64  	%rd11729, %rd11681, %rd11655;
	xor.b64  	%rd11730, %rd11728, %rd11729;
	add.s64 	%rd11731, %rd11726, %rd11730;
	add.s64 	%rd11732, %rd11721, %rd11631;
	add.s64 	%rd11733, %rd11731, %rd11721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9783,%dummy}, %rd11732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9784}, %rd11732;
	}
	shf.r.wrap.b32 	%r9785, %r9784, %r9783, 14;
	shf.r.wrap.b32 	%r9786, %r9783, %r9784, 14;
	mov.b64 	%rd11734, {%r9786, %r9785};
	shf.r.wrap.b32 	%r9787, %r9784, %r9783, 18;
	shf.r.wrap.b32 	%r9788, %r9783, %r9784, 18;
	mov.b64 	%rd11735, {%r9788, %r9787};
	xor.b64  	%rd11736, %rd11734, %rd11735;
	shf.l.wrap.b32 	%r9789, %r9783, %r9784, 23;
	shf.l.wrap.b32 	%r9790, %r9784, %r9783, 23;
	mov.b64 	%rd11737, {%r9790, %r9789};
	xor.b64  	%rd11738, %rd11736, %rd11737;
	and.b64  	%rd11739, %rd11732, %rd11706;
	not.b64 	%rd11740, %rd11732;
	and.b64  	%rd11741, %rd11680, %rd11740;
	or.b64  	%rd11742, %rd11739, %rd11741;
	add.s64 	%rd11743, %rd11742, %rd11654;
	add.s64 	%rd11744, %rd11743, %rd11738;
	add.s64 	%rd11745, %rd11744, %rd45;
	add.s64 	%rd11746, %rd11745, %rd10596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9791,%dummy}, %rd11733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9792}, %rd11733;
	}
	shf.r.wrap.b32 	%r9793, %r9792, %r9791, 28;
	shf.r.wrap.b32 	%r9794, %r9791, %r9792, 28;
	mov.b64 	%rd11747, {%r9794, %r9793};
	shf.l.wrap.b32 	%r9795, %r9791, %r9792, 30;
	shf.l.wrap.b32 	%r9796, %r9792, %r9791, 30;
	mov.b64 	%rd11748, {%r9796, %r9795};
	xor.b64  	%rd11749, %rd11747, %rd11748;
	shf.l.wrap.b32 	%r9797, %r9791, %r9792, 25;
	shf.l.wrap.b32 	%r9798, %r9792, %r9791, 25;
	mov.b64 	%rd11750, {%r9798, %r9797};
	xor.b64  	%rd11751, %rd11749, %rd11750;
	xor.b64  	%rd11752, %rd11707, %rd11681;
	and.b64  	%rd11753, %rd11733, %rd11752;
	and.b64  	%rd11754, %rd11707, %rd11681;
	xor.b64  	%rd11755, %rd11753, %rd11754;
	add.s64 	%rd11756, %rd11751, %rd11755;
	add.s64 	%rd11757, %rd11746, %rd11655;
	add.s64 	%rd11758, %rd11756, %rd11746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9799,%dummy}, %rd11757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9800}, %rd11757;
	}
	shf.r.wrap.b32 	%r9801, %r9800, %r9799, 14;
	shf.r.wrap.b32 	%r9802, %r9799, %r9800, 14;
	mov.b64 	%rd11759, {%r9802, %r9801};
	shf.r.wrap.b32 	%r9803, %r9800, %r9799, 18;
	shf.r.wrap.b32 	%r9804, %r9799, %r9800, 18;
	mov.b64 	%rd11760, {%r9804, %r9803};
	xor.b64  	%rd11761, %rd11759, %rd11760;
	shf.l.wrap.b32 	%r9805, %r9799, %r9800, 23;
	shf.l.wrap.b32 	%r9806, %r9800, %r9799, 23;
	mov.b64 	%rd11762, {%r9806, %r9805};
	xor.b64  	%rd11763, %rd11761, %rd11762;
	and.b64  	%rd11764, %rd11757, %rd11732;
	not.b64 	%rd11765, %rd11757;
	and.b64  	%rd11766, %rd11706, %rd11765;
	or.b64  	%rd11767, %rd11764, %rd11766;
	add.s64 	%rd11768, %rd11767, %rd11680;
	add.s64 	%rd11769, %rd11768, %rd11763;
	add.s64 	%rd11770, %rd11769, %rd46;
	add.s64 	%rd11771, %rd11770, %rd10616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9807,%dummy}, %rd11758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9808}, %rd11758;
	}
	shf.r.wrap.b32 	%r9809, %r9808, %r9807, 28;
	shf.r.wrap.b32 	%r9810, %r9807, %r9808, 28;
	mov.b64 	%rd11772, {%r9810, %r9809};
	shf.l.wrap.b32 	%r9811, %r9807, %r9808, 30;
	shf.l.wrap.b32 	%r9812, %r9808, %r9807, 30;
	mov.b64 	%rd11773, {%r9812, %r9811};
	xor.b64  	%rd11774, %rd11772, %rd11773;
	shf.l.wrap.b32 	%r9813, %r9807, %r9808, 25;
	shf.l.wrap.b32 	%r9814, %r9808, %r9807, 25;
	mov.b64 	%rd11775, {%r9814, %r9813};
	xor.b64  	%rd11776, %rd11774, %rd11775;
	xor.b64  	%rd11777, %rd11733, %rd11707;
	and.b64  	%rd11778, %rd11758, %rd11777;
	and.b64  	%rd11779, %rd11733, %rd11707;
	xor.b64  	%rd11780, %rd11778, %rd11779;
	add.s64 	%rd11781, %rd11776, %rd11780;
	add.s64 	%rd11782, %rd11771, %rd11681;
	add.s64 	%rd11783, %rd11781, %rd11771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9815,%dummy}, %rd11782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9816}, %rd11782;
	}
	shf.r.wrap.b32 	%r9817, %r9816, %r9815, 14;
	shf.r.wrap.b32 	%r9818, %r9815, %r9816, 14;
	mov.b64 	%rd11784, {%r9818, %r9817};
	shf.r.wrap.b32 	%r9819, %r9816, %r9815, 18;
	shf.r.wrap.b32 	%r9820, %r9815, %r9816, 18;
	mov.b64 	%rd11785, {%r9820, %r9819};
	xor.b64  	%rd11786, %rd11784, %rd11785;
	shf.l.wrap.b32 	%r9821, %r9815, %r9816, 23;
	shf.l.wrap.b32 	%r9822, %r9816, %r9815, 23;
	mov.b64 	%rd11787, {%r9822, %r9821};
	xor.b64  	%rd11788, %rd11786, %rd11787;
	and.b64  	%rd11789, %rd11782, %rd11757;
	not.b64 	%rd11790, %rd11782;
	and.b64  	%rd11791, %rd11732, %rd11790;
	or.b64  	%rd11792, %rd11789, %rd11791;
	add.s64 	%rd11793, %rd11792, %rd11706;
	add.s64 	%rd11794, %rd11793, %rd11788;
	add.s64 	%rd11795, %rd11794, %rd47;
	add.s64 	%rd11796, %rd11795, %rd10636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9823,%dummy}, %rd11783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9824}, %rd11783;
	}
	shf.r.wrap.b32 	%r9825, %r9824, %r9823, 28;
	shf.r.wrap.b32 	%r9826, %r9823, %r9824, 28;
	mov.b64 	%rd11797, {%r9826, %r9825};
	shf.l.wrap.b32 	%r9827, %r9823, %r9824, 30;
	shf.l.wrap.b32 	%r9828, %r9824, %r9823, 30;
	mov.b64 	%rd11798, {%r9828, %r9827};
	xor.b64  	%rd11799, %rd11797, %rd11798;
	shf.l.wrap.b32 	%r9829, %r9823, %r9824, 25;
	shf.l.wrap.b32 	%r9830, %r9824, %r9823, 25;
	mov.b64 	%rd11800, {%r9830, %r9829};
	xor.b64  	%rd11801, %rd11799, %rd11800;
	xor.b64  	%rd11802, %rd11758, %rd11733;
	and.b64  	%rd11803, %rd11783, %rd11802;
	and.b64  	%rd11804, %rd11758, %rd11733;
	xor.b64  	%rd11805, %rd11803, %rd11804;
	add.s64 	%rd11806, %rd11801, %rd11805;
	add.s64 	%rd11807, %rd11796, %rd11707;
	add.s64 	%rd11808, %rd11806, %rd11796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9831,%dummy}, %rd11807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9832}, %rd11807;
	}
	shf.r.wrap.b32 	%r9833, %r9832, %r9831, 14;
	shf.r.wrap.b32 	%r9834, %r9831, %r9832, 14;
	mov.b64 	%rd11809, {%r9834, %r9833};
	shf.r.wrap.b32 	%r9835, %r9832, %r9831, 18;
	shf.r.wrap.b32 	%r9836, %r9831, %r9832, 18;
	mov.b64 	%rd11810, {%r9836, %r9835};
	xor.b64  	%rd11811, %rd11809, %rd11810;
	shf.l.wrap.b32 	%r9837, %r9831, %r9832, 23;
	shf.l.wrap.b32 	%r9838, %r9832, %r9831, 23;
	mov.b64 	%rd11812, {%r9838, %r9837};
	xor.b64  	%rd11813, %rd11811, %rd11812;
	and.b64  	%rd11814, %rd11807, %rd11782;
	not.b64 	%rd11815, %rd11807;
	and.b64  	%rd11816, %rd11757, %rd11815;
	or.b64  	%rd11817, %rd11814, %rd11816;
	add.s64 	%rd11818, %rd11817, %rd11732;
	add.s64 	%rd11819, %rd11818, %rd11813;
	add.s64 	%rd11820, %rd11819, %rd48;
	add.s64 	%rd11821, %rd11820, %rd10656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9839,%dummy}, %rd11808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9840}, %rd11808;
	}
	shf.r.wrap.b32 	%r9841, %r9840, %r9839, 28;
	shf.r.wrap.b32 	%r9842, %r9839, %r9840, 28;
	mov.b64 	%rd11822, {%r9842, %r9841};
	shf.l.wrap.b32 	%r9843, %r9839, %r9840, 30;
	shf.l.wrap.b32 	%r9844, %r9840, %r9839, 30;
	mov.b64 	%rd11823, {%r9844, %r9843};
	xor.b64  	%rd11824, %rd11822, %rd11823;
	shf.l.wrap.b32 	%r9845, %r9839, %r9840, 25;
	shf.l.wrap.b32 	%r9846, %r9840, %r9839, 25;
	mov.b64 	%rd11825, {%r9846, %r9845};
	xor.b64  	%rd11826, %rd11824, %rd11825;
	xor.b64  	%rd11827, %rd11783, %rd11758;
	and.b64  	%rd11828, %rd11808, %rd11827;
	and.b64  	%rd11829, %rd11783, %rd11758;
	xor.b64  	%rd11830, %rd11828, %rd11829;
	add.s64 	%rd11831, %rd11826, %rd11830;
	add.s64 	%rd11832, %rd11821, %rd11733;
	add.s64 	%rd11833, %rd11831, %rd11821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9847,%dummy}, %rd11832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9848}, %rd11832;
	}
	shf.r.wrap.b32 	%r9849, %r9848, %r9847, 14;
	shf.r.wrap.b32 	%r9850, %r9847, %r9848, 14;
	mov.b64 	%rd11834, {%r9850, %r9849};
	shf.r.wrap.b32 	%r9851, %r9848, %r9847, 18;
	shf.r.wrap.b32 	%r9852, %r9847, %r9848, 18;
	mov.b64 	%rd11835, {%r9852, %r9851};
	xor.b64  	%rd11836, %rd11834, %rd11835;
	shf.l.wrap.b32 	%r9853, %r9847, %r9848, 23;
	shf.l.wrap.b32 	%r9854, %r9848, %r9847, 23;
	mov.b64 	%rd11837, {%r9854, %r9853};
	xor.b64  	%rd11838, %rd11836, %rd11837;
	and.b64  	%rd11839, %rd11832, %rd11807;
	not.b64 	%rd11840, %rd11832;
	and.b64  	%rd11841, %rd11782, %rd11840;
	or.b64  	%rd11842, %rd11839, %rd11841;
	add.s64 	%rd11843, %rd11842, %rd11757;
	add.s64 	%rd11844, %rd11843, %rd11838;
	add.s64 	%rd11845, %rd11844, %rd49;
	add.s64 	%rd11846, %rd11845, %rd10676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9855,%dummy}, %rd11833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9856}, %rd11833;
	}
	shf.r.wrap.b32 	%r9857, %r9856, %r9855, 28;
	shf.r.wrap.b32 	%r9858, %r9855, %r9856, 28;
	mov.b64 	%rd11847, {%r9858, %r9857};
	shf.l.wrap.b32 	%r9859, %r9855, %r9856, 30;
	shf.l.wrap.b32 	%r9860, %r9856, %r9855, 30;
	mov.b64 	%rd11848, {%r9860, %r9859};
	xor.b64  	%rd11849, %rd11847, %rd11848;
	shf.l.wrap.b32 	%r9861, %r9855, %r9856, 25;
	shf.l.wrap.b32 	%r9862, %r9856, %r9855, 25;
	mov.b64 	%rd11850, {%r9862, %r9861};
	xor.b64  	%rd11851, %rd11849, %rd11850;
	xor.b64  	%rd11852, %rd11808, %rd11783;
	and.b64  	%rd11853, %rd11833, %rd11852;
	and.b64  	%rd11854, %rd11808, %rd11783;
	xor.b64  	%rd11855, %rd11853, %rd11854;
	add.s64 	%rd11856, %rd11851, %rd11855;
	add.s64 	%rd11857, %rd11846, %rd11758;
	add.s64 	%rd11858, %rd11856, %rd11846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9863,%dummy}, %rd11857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9864}, %rd11857;
	}
	shf.r.wrap.b32 	%r9865, %r9864, %r9863, 14;
	shf.r.wrap.b32 	%r9866, %r9863, %r9864, 14;
	mov.b64 	%rd11859, {%r9866, %r9865};
	shf.r.wrap.b32 	%r9867, %r9864, %r9863, 18;
	shf.r.wrap.b32 	%r9868, %r9863, %r9864, 18;
	mov.b64 	%rd11860, {%r9868, %r9867};
	xor.b64  	%rd11861, %rd11859, %rd11860;
	shf.l.wrap.b32 	%r9869, %r9863, %r9864, 23;
	shf.l.wrap.b32 	%r9870, %r9864, %r9863, 23;
	mov.b64 	%rd11862, {%r9870, %r9869};
	xor.b64  	%rd11863, %rd11861, %rd11862;
	and.b64  	%rd11864, %rd11857, %rd11832;
	not.b64 	%rd11865, %rd11857;
	and.b64  	%rd11866, %rd11807, %rd11865;
	or.b64  	%rd11867, %rd11864, %rd11866;
	add.s64 	%rd11868, %rd11867, %rd11782;
	add.s64 	%rd11869, %rd11868, %rd11863;
	add.s64 	%rd11870, %rd11869, %rd50;
	add.s64 	%rd11871, %rd11870, %rd10696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9871,%dummy}, %rd11858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9872}, %rd11858;
	}
	shf.r.wrap.b32 	%r9873, %r9872, %r9871, 28;
	shf.r.wrap.b32 	%r9874, %r9871, %r9872, 28;
	mov.b64 	%rd11872, {%r9874, %r9873};
	shf.l.wrap.b32 	%r9875, %r9871, %r9872, 30;
	shf.l.wrap.b32 	%r9876, %r9872, %r9871, 30;
	mov.b64 	%rd11873, {%r9876, %r9875};
	xor.b64  	%rd11874, %rd11872, %rd11873;
	shf.l.wrap.b32 	%r9877, %r9871, %r9872, 25;
	shf.l.wrap.b32 	%r9878, %r9872, %r9871, 25;
	mov.b64 	%rd11875, {%r9878, %r9877};
	xor.b64  	%rd11876, %rd11874, %rd11875;
	xor.b64  	%rd11877, %rd11833, %rd11808;
	and.b64  	%rd11878, %rd11858, %rd11877;
	and.b64  	%rd11879, %rd11833, %rd11808;
	xor.b64  	%rd11880, %rd11878, %rd11879;
	add.s64 	%rd11881, %rd11876, %rd11880;
	add.s64 	%rd11882, %rd11871, %rd11783;
	add.s64 	%rd11883, %rd11881, %rd11871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9879,%dummy}, %rd11882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9880}, %rd11882;
	}
	shf.r.wrap.b32 	%r9881, %r9880, %r9879, 14;
	shf.r.wrap.b32 	%r9882, %r9879, %r9880, 14;
	mov.b64 	%rd11884, {%r9882, %r9881};
	shf.r.wrap.b32 	%r9883, %r9880, %r9879, 18;
	shf.r.wrap.b32 	%r9884, %r9879, %r9880, 18;
	mov.b64 	%rd11885, {%r9884, %r9883};
	xor.b64  	%rd11886, %rd11884, %rd11885;
	shf.l.wrap.b32 	%r9885, %r9879, %r9880, 23;
	shf.l.wrap.b32 	%r9886, %r9880, %r9879, 23;
	mov.b64 	%rd11887, {%r9886, %r9885};
	xor.b64  	%rd11888, %rd11886, %rd11887;
	and.b64  	%rd11889, %rd11882, %rd11857;
	not.b64 	%rd11890, %rd11882;
	and.b64  	%rd11891, %rd11832, %rd11890;
	or.b64  	%rd11892, %rd11889, %rd11891;
	add.s64 	%rd11893, %rd11892, %rd11807;
	add.s64 	%rd11894, %rd11893, %rd11888;
	add.s64 	%rd11895, %rd11894, %rd51;
	add.s64 	%rd11896, %rd11895, %rd10716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9887,%dummy}, %rd11883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9888}, %rd11883;
	}
	shf.r.wrap.b32 	%r9889, %r9888, %r9887, 28;
	shf.r.wrap.b32 	%r9890, %r9887, %r9888, 28;
	mov.b64 	%rd11897, {%r9890, %r9889};
	shf.l.wrap.b32 	%r9891, %r9887, %r9888, 30;
	shf.l.wrap.b32 	%r9892, %r9888, %r9887, 30;
	mov.b64 	%rd11898, {%r9892, %r9891};
	xor.b64  	%rd11899, %rd11897, %rd11898;
	shf.l.wrap.b32 	%r9893, %r9887, %r9888, 25;
	shf.l.wrap.b32 	%r9894, %r9888, %r9887, 25;
	mov.b64 	%rd11900, {%r9894, %r9893};
	xor.b64  	%rd11901, %rd11899, %rd11900;
	xor.b64  	%rd11902, %rd11858, %rd11833;
	and.b64  	%rd11903, %rd11883, %rd11902;
	and.b64  	%rd11904, %rd11858, %rd11833;
	xor.b64  	%rd11905, %rd11903, %rd11904;
	add.s64 	%rd11906, %rd11901, %rd11905;
	add.s64 	%rd11907, %rd11896, %rd11808;
	add.s64 	%rd11908, %rd11906, %rd11896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9895,%dummy}, %rd11907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9896}, %rd11907;
	}
	shf.r.wrap.b32 	%r9897, %r9896, %r9895, 14;
	shf.r.wrap.b32 	%r9898, %r9895, %r9896, 14;
	mov.b64 	%rd11909, {%r9898, %r9897};
	shf.r.wrap.b32 	%r9899, %r9896, %r9895, 18;
	shf.r.wrap.b32 	%r9900, %r9895, %r9896, 18;
	mov.b64 	%rd11910, {%r9900, %r9899};
	xor.b64  	%rd11911, %rd11909, %rd11910;
	shf.l.wrap.b32 	%r9901, %r9895, %r9896, 23;
	shf.l.wrap.b32 	%r9902, %r9896, %r9895, 23;
	mov.b64 	%rd11912, {%r9902, %r9901};
	xor.b64  	%rd11913, %rd11911, %rd11912;
	and.b64  	%rd11914, %rd11907, %rd11882;
	not.b64 	%rd11915, %rd11907;
	and.b64  	%rd11916, %rd11857, %rd11915;
	or.b64  	%rd11917, %rd11914, %rd11916;
	add.s64 	%rd11918, %rd11917, %rd11832;
	add.s64 	%rd11919, %rd11918, %rd11913;
	add.s64 	%rd11920, %rd11919, %rd52;
	add.s64 	%rd11921, %rd11920, %rd10736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9903,%dummy}, %rd11908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9904}, %rd11908;
	}
	shf.r.wrap.b32 	%r9905, %r9904, %r9903, 28;
	shf.r.wrap.b32 	%r9906, %r9903, %r9904, 28;
	mov.b64 	%rd11922, {%r9906, %r9905};
	shf.l.wrap.b32 	%r9907, %r9903, %r9904, 30;
	shf.l.wrap.b32 	%r9908, %r9904, %r9903, 30;
	mov.b64 	%rd11923, {%r9908, %r9907};
	xor.b64  	%rd11924, %rd11922, %rd11923;
	shf.l.wrap.b32 	%r9909, %r9903, %r9904, 25;
	shf.l.wrap.b32 	%r9910, %r9904, %r9903, 25;
	mov.b64 	%rd11925, {%r9910, %r9909};
	xor.b64  	%rd11926, %rd11924, %rd11925;
	xor.b64  	%rd11927, %rd11883, %rd11858;
	and.b64  	%rd11928, %rd11908, %rd11927;
	and.b64  	%rd11929, %rd11883, %rd11858;
	xor.b64  	%rd11930, %rd11928, %rd11929;
	add.s64 	%rd11931, %rd11926, %rd11930;
	add.s64 	%rd11932, %rd11921, %rd11833;
	add.s64 	%rd11933, %rd11931, %rd11921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9911,%dummy}, %rd11932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9912}, %rd11932;
	}
	shf.r.wrap.b32 	%r9913, %r9912, %r9911, 14;
	shf.r.wrap.b32 	%r9914, %r9911, %r9912, 14;
	mov.b64 	%rd11934, {%r9914, %r9913};
	shf.r.wrap.b32 	%r9915, %r9912, %r9911, 18;
	shf.r.wrap.b32 	%r9916, %r9911, %r9912, 18;
	mov.b64 	%rd11935, {%r9916, %r9915};
	xor.b64  	%rd11936, %rd11934, %rd11935;
	shf.l.wrap.b32 	%r9917, %r9911, %r9912, 23;
	shf.l.wrap.b32 	%r9918, %r9912, %r9911, 23;
	mov.b64 	%rd11937, {%r9918, %r9917};
	xor.b64  	%rd11938, %rd11936, %rd11937;
	and.b64  	%rd11939, %rd11932, %rd11907;
	not.b64 	%rd11940, %rd11932;
	and.b64  	%rd11941, %rd11882, %rd11940;
	or.b64  	%rd11942, %rd11939, %rd11941;
	add.s64 	%rd11943, %rd11942, %rd11857;
	add.s64 	%rd11944, %rd11943, %rd11938;
	add.s64 	%rd11945, %rd11944, %rd53;
	add.s64 	%rd11946, %rd11945, %rd10756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9919,%dummy}, %rd11933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9920}, %rd11933;
	}
	shf.r.wrap.b32 	%r9921, %r9920, %r9919, 28;
	shf.r.wrap.b32 	%r9922, %r9919, %r9920, 28;
	mov.b64 	%rd11947, {%r9922, %r9921};
	shf.l.wrap.b32 	%r9923, %r9919, %r9920, 30;
	shf.l.wrap.b32 	%r9924, %r9920, %r9919, 30;
	mov.b64 	%rd11948, {%r9924, %r9923};
	xor.b64  	%rd11949, %rd11947, %rd11948;
	shf.l.wrap.b32 	%r9925, %r9919, %r9920, 25;
	shf.l.wrap.b32 	%r9926, %r9920, %r9919, 25;
	mov.b64 	%rd11950, {%r9926, %r9925};
	xor.b64  	%rd11951, %rd11949, %rd11950;
	xor.b64  	%rd11952, %rd11908, %rd11883;
	and.b64  	%rd11953, %rd11933, %rd11952;
	and.b64  	%rd11954, %rd11908, %rd11883;
	xor.b64  	%rd11955, %rd11953, %rd11954;
	add.s64 	%rd11956, %rd11951, %rd11955;
	add.s64 	%rd11957, %rd11946, %rd11858;
	add.s64 	%rd11958, %rd11956, %rd11946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9927,%dummy}, %rd11957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9928}, %rd11957;
	}
	shf.r.wrap.b32 	%r9929, %r9928, %r9927, 14;
	shf.r.wrap.b32 	%r9930, %r9927, %r9928, 14;
	mov.b64 	%rd11959, {%r9930, %r9929};
	shf.r.wrap.b32 	%r9931, %r9928, %r9927, 18;
	shf.r.wrap.b32 	%r9932, %r9927, %r9928, 18;
	mov.b64 	%rd11960, {%r9932, %r9931};
	xor.b64  	%rd11961, %rd11959, %rd11960;
	shf.l.wrap.b32 	%r9933, %r9927, %r9928, 23;
	shf.l.wrap.b32 	%r9934, %r9928, %r9927, 23;
	mov.b64 	%rd11962, {%r9934, %r9933};
	xor.b64  	%rd11963, %rd11961, %rd11962;
	and.b64  	%rd11964, %rd11957, %rd11932;
	not.b64 	%rd11965, %rd11957;
	and.b64  	%rd11966, %rd11907, %rd11965;
	or.b64  	%rd11967, %rd11964, %rd11966;
	add.s64 	%rd11968, %rd11967, %rd11882;
	add.s64 	%rd11969, %rd11968, %rd11963;
	add.s64 	%rd11970, %rd11969, %rd54;
	add.s64 	%rd11971, %rd11970, %rd10776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9935,%dummy}, %rd11958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9936}, %rd11958;
	}
	shf.r.wrap.b32 	%r9937, %r9936, %r9935, 28;
	shf.r.wrap.b32 	%r9938, %r9935, %r9936, 28;
	mov.b64 	%rd11972, {%r9938, %r9937};
	shf.l.wrap.b32 	%r9939, %r9935, %r9936, 30;
	shf.l.wrap.b32 	%r9940, %r9936, %r9935, 30;
	mov.b64 	%rd11973, {%r9940, %r9939};
	xor.b64  	%rd11974, %rd11972, %rd11973;
	shf.l.wrap.b32 	%r9941, %r9935, %r9936, 25;
	shf.l.wrap.b32 	%r9942, %r9936, %r9935, 25;
	mov.b64 	%rd11975, {%r9942, %r9941};
	xor.b64  	%rd11976, %rd11974, %rd11975;
	xor.b64  	%rd11977, %rd11933, %rd11908;
	and.b64  	%rd11978, %rd11958, %rd11977;
	and.b64  	%rd11979, %rd11933, %rd11908;
	xor.b64  	%rd11980, %rd11978, %rd11979;
	add.s64 	%rd11981, %rd11976, %rd11980;
	add.s64 	%rd11982, %rd11971, %rd11883;
	add.s64 	%rd11983, %rd11981, %rd11971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9943,%dummy}, %rd11982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9944}, %rd11982;
	}
	shf.r.wrap.b32 	%r9945, %r9944, %r9943, 14;
	shf.r.wrap.b32 	%r9946, %r9943, %r9944, 14;
	mov.b64 	%rd11984, {%r9946, %r9945};
	shf.r.wrap.b32 	%r9947, %r9944, %r9943, 18;
	shf.r.wrap.b32 	%r9948, %r9943, %r9944, 18;
	mov.b64 	%rd11985, {%r9948, %r9947};
	xor.b64  	%rd11986, %rd11984, %rd11985;
	shf.l.wrap.b32 	%r9949, %r9943, %r9944, 23;
	shf.l.wrap.b32 	%r9950, %r9944, %r9943, 23;
	mov.b64 	%rd11987, {%r9950, %r9949};
	xor.b64  	%rd11988, %rd11986, %rd11987;
	and.b64  	%rd11989, %rd11982, %rd11957;
	not.b64 	%rd11990, %rd11982;
	and.b64  	%rd11991, %rd11932, %rd11990;
	or.b64  	%rd11992, %rd11989, %rd11991;
	add.s64 	%rd11993, %rd11992, %rd11907;
	add.s64 	%rd11994, %rd11993, %rd11988;
	add.s64 	%rd11995, %rd11994, %rd55;
	add.s64 	%rd11996, %rd11995, %rd10796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9951,%dummy}, %rd11983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9952}, %rd11983;
	}
	shf.r.wrap.b32 	%r9953, %r9952, %r9951, 28;
	shf.r.wrap.b32 	%r9954, %r9951, %r9952, 28;
	mov.b64 	%rd11997, {%r9954, %r9953};
	shf.l.wrap.b32 	%r9955, %r9951, %r9952, 30;
	shf.l.wrap.b32 	%r9956, %r9952, %r9951, 30;
	mov.b64 	%rd11998, {%r9956, %r9955};
	xor.b64  	%rd11999, %rd11997, %rd11998;
	shf.l.wrap.b32 	%r9957, %r9951, %r9952, 25;
	shf.l.wrap.b32 	%r9958, %r9952, %r9951, 25;
	mov.b64 	%rd12000, {%r9958, %r9957};
	xor.b64  	%rd12001, %rd11999, %rd12000;
	xor.b64  	%rd12002, %rd11958, %rd11933;
	and.b64  	%rd12003, %rd11983, %rd12002;
	and.b64  	%rd12004, %rd11958, %rd11933;
	xor.b64  	%rd12005, %rd12003, %rd12004;
	add.s64 	%rd12006, %rd12001, %rd12005;
	add.s64 	%rd12007, %rd11996, %rd11908;
	add.s64 	%rd12008, %rd12006, %rd11996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9959,%dummy}, %rd12007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9960}, %rd12007;
	}
	shf.r.wrap.b32 	%r9961, %r9960, %r9959, 14;
	shf.r.wrap.b32 	%r9962, %r9959, %r9960, 14;
	mov.b64 	%rd12009, {%r9962, %r9961};
	shf.r.wrap.b32 	%r9963, %r9960, %r9959, 18;
	shf.r.wrap.b32 	%r9964, %r9959, %r9960, 18;
	mov.b64 	%rd12010, {%r9964, %r9963};
	xor.b64  	%rd12011, %rd12009, %rd12010;
	shf.l.wrap.b32 	%r9965, %r9959, %r9960, 23;
	shf.l.wrap.b32 	%r9966, %r9960, %r9959, 23;
	mov.b64 	%rd12012, {%r9966, %r9965};
	xor.b64  	%rd12013, %rd12011, %rd12012;
	and.b64  	%rd12014, %rd12007, %rd11982;
	not.b64 	%rd12015, %rd12007;
	and.b64  	%rd12016, %rd11957, %rd12015;
	or.b64  	%rd12017, %rd12014, %rd12016;
	add.s64 	%rd12018, %rd12017, %rd11932;
	add.s64 	%rd12019, %rd12018, %rd12013;
	add.s64 	%rd12020, %rd12019, %rd56;
	add.s64 	%rd12021, %rd12020, %rd10809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9967,%dummy}, %rd12008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9968}, %rd12008;
	}
	shf.r.wrap.b32 	%r9969, %r9968, %r9967, 28;
	shf.r.wrap.b32 	%r9970, %r9967, %r9968, 28;
	mov.b64 	%rd12022, {%r9970, %r9969};
	shf.l.wrap.b32 	%r9971, %r9967, %r9968, 30;
	shf.l.wrap.b32 	%r9972, %r9968, %r9967, 30;
	mov.b64 	%rd12023, {%r9972, %r9971};
	xor.b64  	%rd12024, %rd12022, %rd12023;
	shf.l.wrap.b32 	%r9973, %r9967, %r9968, 25;
	shf.l.wrap.b32 	%r9974, %r9968, %r9967, 25;
	mov.b64 	%rd12025, {%r9974, %r9973};
	xor.b64  	%rd12026, %rd12024, %rd12025;
	xor.b64  	%rd12027, %rd11983, %rd11958;
	and.b64  	%rd12028, %rd12008, %rd12027;
	and.b64  	%rd12029, %rd11983, %rd11958;
	xor.b64  	%rd12030, %rd12028, %rd12029;
	add.s64 	%rd12031, %rd12026, %rd12030;
	add.s64 	%rd12032, %rd12021, %rd11933;
	add.s64 	%rd12033, %rd12031, %rd12021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9975,%dummy}, %rd12032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9976}, %rd12032;
	}
	shf.r.wrap.b32 	%r9977, %r9976, %r9975, 14;
	shf.r.wrap.b32 	%r9978, %r9975, %r9976, 14;
	mov.b64 	%rd12034, {%r9978, %r9977};
	shf.r.wrap.b32 	%r9979, %r9976, %r9975, 18;
	shf.r.wrap.b32 	%r9980, %r9975, %r9976, 18;
	mov.b64 	%rd12035, {%r9980, %r9979};
	xor.b64  	%rd12036, %rd12034, %rd12035;
	shf.l.wrap.b32 	%r9981, %r9975, %r9976, 23;
	shf.l.wrap.b32 	%r9982, %r9976, %r9975, 23;
	mov.b64 	%rd12037, {%r9982, %r9981};
	xor.b64  	%rd12038, %rd12036, %rd12037;
	and.b64  	%rd12039, %rd12032, %rd12007;
	not.b64 	%rd12040, %rd12032;
	and.b64  	%rd12041, %rd11982, %rd12040;
	or.b64  	%rd12042, %rd12039, %rd12041;
	add.s64 	%rd12043, %rd12042, %rd11957;
	add.s64 	%rd12044, %rd12043, %rd12038;
	add.s64 	%rd12045, %rd12044, %rd57;
	add.s64 	%rd12046, %rd12045, %rd10822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9983,%dummy}, %rd12033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9984}, %rd12033;
	}
	shf.r.wrap.b32 	%r9985, %r9984, %r9983, 28;
	shf.r.wrap.b32 	%r9986, %r9983, %r9984, 28;
	mov.b64 	%rd12047, {%r9986, %r9985};
	shf.l.wrap.b32 	%r9987, %r9983, %r9984, 30;
	shf.l.wrap.b32 	%r9988, %r9984, %r9983, 30;
	mov.b64 	%rd12048, {%r9988, %r9987};
	xor.b64  	%rd12049, %rd12047, %rd12048;
	shf.l.wrap.b32 	%r9989, %r9983, %r9984, 25;
	shf.l.wrap.b32 	%r9990, %r9984, %r9983, 25;
	mov.b64 	%rd12050, {%r9990, %r9989};
	xor.b64  	%rd12051, %rd12049, %rd12050;
	xor.b64  	%rd12052, %rd12008, %rd11983;
	and.b64  	%rd12053, %rd12033, %rd12052;
	and.b64  	%rd12054, %rd12008, %rd11983;
	xor.b64  	%rd12055, %rd12053, %rd12054;
	add.s64 	%rd12056, %rd12051, %rd12055;
	add.s64 	%rd12057, %rd12046, %rd11958;
	add.s64 	%rd12058, %rd12056, %rd12046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9991,%dummy}, %rd12057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9992}, %rd12057;
	}
	shf.r.wrap.b32 	%r9993, %r9992, %r9991, 14;
	shf.r.wrap.b32 	%r9994, %r9991, %r9992, 14;
	mov.b64 	%rd12059, {%r9994, %r9993};
	shf.r.wrap.b32 	%r9995, %r9992, %r9991, 18;
	shf.r.wrap.b32 	%r9996, %r9991, %r9992, 18;
	mov.b64 	%rd12060, {%r9996, %r9995};
	xor.b64  	%rd12061, %rd12059, %rd12060;
	shf.l.wrap.b32 	%r9997, %r9991, %r9992, 23;
	shf.l.wrap.b32 	%r9998, %r9992, %r9991, 23;
	mov.b64 	%rd12062, {%r9998, %r9997};
	xor.b64  	%rd12063, %rd12061, %rd12062;
	and.b64  	%rd12064, %rd12057, %rd12032;
	not.b64 	%rd12065, %rd12057;
	and.b64  	%rd12066, %rd12007, %rd12065;
	or.b64  	%rd12067, %rd12064, %rd12066;
	add.s64 	%rd12068, %rd12067, %rd11982;
	add.s64 	%rd12069, %rd12068, %rd12063;
	add.s64 	%rd12070, %rd12069, %rd58;
	add.s64 	%rd12071, %rd12070, %rd10835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9999,%dummy}, %rd12058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10000}, %rd12058;
	}
	shf.r.wrap.b32 	%r10001, %r10000, %r9999, 28;
	shf.r.wrap.b32 	%r10002, %r9999, %r10000, 28;
	mov.b64 	%rd12072, {%r10002, %r10001};
	shf.l.wrap.b32 	%r10003, %r9999, %r10000, 30;
	shf.l.wrap.b32 	%r10004, %r10000, %r9999, 30;
	mov.b64 	%rd12073, {%r10004, %r10003};
	xor.b64  	%rd12074, %rd12072, %rd12073;
	shf.l.wrap.b32 	%r10005, %r9999, %r10000, 25;
	shf.l.wrap.b32 	%r10006, %r10000, %r9999, 25;
	mov.b64 	%rd12075, {%r10006, %r10005};
	xor.b64  	%rd12076, %rd12074, %rd12075;
	xor.b64  	%rd12077, %rd12033, %rd12008;
	and.b64  	%rd12078, %rd12058, %rd12077;
	and.b64  	%rd12079, %rd12033, %rd12008;
	xor.b64  	%rd12080, %rd12078, %rd12079;
	add.s64 	%rd12081, %rd12076, %rd12080;
	add.s64 	%rd12082, %rd12071, %rd11983;
	add.s64 	%rd12083, %rd12081, %rd12071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10007,%dummy}, %rd12082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10008}, %rd12082;
	}
	shf.r.wrap.b32 	%r10009, %r10008, %r10007, 14;
	shf.r.wrap.b32 	%r10010, %r10007, %r10008, 14;
	mov.b64 	%rd12084, {%r10010, %r10009};
	shf.r.wrap.b32 	%r10011, %r10008, %r10007, 18;
	shf.r.wrap.b32 	%r10012, %r10007, %r10008, 18;
	mov.b64 	%rd12085, {%r10012, %r10011};
	xor.b64  	%rd12086, %rd12084, %rd12085;
	shf.l.wrap.b32 	%r10013, %r10007, %r10008, 23;
	shf.l.wrap.b32 	%r10014, %r10008, %r10007, 23;
	mov.b64 	%rd12087, {%r10014, %r10013};
	xor.b64  	%rd12088, %rd12086, %rd12087;
	and.b64  	%rd12089, %rd12082, %rd12057;
	not.b64 	%rd12090, %rd12082;
	and.b64  	%rd12091, %rd12032, %rd12090;
	or.b64  	%rd12092, %rd12089, %rd12091;
	add.s64 	%rd12093, %rd12092, %rd12007;
	add.s64 	%rd12094, %rd12093, %rd12088;
	add.s64 	%rd12095, %rd12094, %rd59;
	add.s64 	%rd12096, %rd12095, %rd10848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10015,%dummy}, %rd12083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10016}, %rd12083;
	}
	shf.r.wrap.b32 	%r10017, %r10016, %r10015, 28;
	shf.r.wrap.b32 	%r10018, %r10015, %r10016, 28;
	mov.b64 	%rd12097, {%r10018, %r10017};
	shf.l.wrap.b32 	%r10019, %r10015, %r10016, 30;
	shf.l.wrap.b32 	%r10020, %r10016, %r10015, 30;
	mov.b64 	%rd12098, {%r10020, %r10019};
	xor.b64  	%rd12099, %rd12097, %rd12098;
	shf.l.wrap.b32 	%r10021, %r10015, %r10016, 25;
	shf.l.wrap.b32 	%r10022, %r10016, %r10015, 25;
	mov.b64 	%rd12100, {%r10022, %r10021};
	xor.b64  	%rd12101, %rd12099, %rd12100;
	xor.b64  	%rd12102, %rd12058, %rd12033;
	and.b64  	%rd12103, %rd12083, %rd12102;
	and.b64  	%rd12104, %rd12058, %rd12033;
	xor.b64  	%rd12105, %rd12103, %rd12104;
	add.s64 	%rd12106, %rd12101, %rd12105;
	add.s64 	%rd12107, %rd12096, %rd12008;
	add.s64 	%rd12108, %rd12106, %rd12096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10023,%dummy}, %rd12107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10024}, %rd12107;
	}
	shf.r.wrap.b32 	%r10025, %r10024, %r10023, 14;
	shf.r.wrap.b32 	%r10026, %r10023, %r10024, 14;
	mov.b64 	%rd12109, {%r10026, %r10025};
	shf.r.wrap.b32 	%r10027, %r10024, %r10023, 18;
	shf.r.wrap.b32 	%r10028, %r10023, %r10024, 18;
	mov.b64 	%rd12110, {%r10028, %r10027};
	xor.b64  	%rd12111, %rd12109, %rd12110;
	shf.l.wrap.b32 	%r10029, %r10023, %r10024, 23;
	shf.l.wrap.b32 	%r10030, %r10024, %r10023, 23;
	mov.b64 	%rd12112, {%r10030, %r10029};
	xor.b64  	%rd12113, %rd12111, %rd12112;
	and.b64  	%rd12114, %rd12107, %rd12082;
	not.b64 	%rd12115, %rd12107;
	and.b64  	%rd12116, %rd12057, %rd12115;
	or.b64  	%rd12117, %rd12114, %rd12116;
	add.s64 	%rd12118, %rd12117, %rd12032;
	add.s64 	%rd12119, %rd12118, %rd12113;
	add.s64 	%rd12120, %rd12119, %rd60;
	add.s64 	%rd12121, %rd12120, %rd10861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10031,%dummy}, %rd12108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10032}, %rd12108;
	}
	shf.r.wrap.b32 	%r10033, %r10032, %r10031, 28;
	shf.r.wrap.b32 	%r10034, %r10031, %r10032, 28;
	mov.b64 	%rd12122, {%r10034, %r10033};
	shf.l.wrap.b32 	%r10035, %r10031, %r10032, 30;
	shf.l.wrap.b32 	%r10036, %r10032, %r10031, 30;
	mov.b64 	%rd12123, {%r10036, %r10035};
	xor.b64  	%rd12124, %rd12122, %rd12123;
	shf.l.wrap.b32 	%r10037, %r10031, %r10032, 25;
	shf.l.wrap.b32 	%r10038, %r10032, %r10031, 25;
	mov.b64 	%rd12125, {%r10038, %r10037};
	xor.b64  	%rd12126, %rd12124, %rd12125;
	xor.b64  	%rd12127, %rd12083, %rd12058;
	and.b64  	%rd12128, %rd12108, %rd12127;
	and.b64  	%rd12129, %rd12083, %rd12058;
	xor.b64  	%rd12130, %rd12128, %rd12129;
	add.s64 	%rd12131, %rd12126, %rd12130;
	add.s64 	%rd12132, %rd12121, %rd12033;
	add.s64 	%rd12133, %rd12131, %rd12121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10039,%dummy}, %rd12132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10040}, %rd12132;
	}
	shf.r.wrap.b32 	%r10041, %r10040, %r10039, 14;
	shf.r.wrap.b32 	%r10042, %r10039, %r10040, 14;
	mov.b64 	%rd12134, {%r10042, %r10041};
	shf.r.wrap.b32 	%r10043, %r10040, %r10039, 18;
	shf.r.wrap.b32 	%r10044, %r10039, %r10040, 18;
	mov.b64 	%rd12135, {%r10044, %r10043};
	xor.b64  	%rd12136, %rd12134, %rd12135;
	shf.l.wrap.b32 	%r10045, %r10039, %r10040, 23;
	shf.l.wrap.b32 	%r10046, %r10040, %r10039, 23;
	mov.b64 	%rd12137, {%r10046, %r10045};
	xor.b64  	%rd12138, %rd12136, %rd12137;
	and.b64  	%rd12139, %rd12132, %rd12107;
	not.b64 	%rd12140, %rd12132;
	and.b64  	%rd12141, %rd12082, %rd12140;
	or.b64  	%rd12142, %rd12139, %rd12141;
	add.s64 	%rd12143, %rd12142, %rd12057;
	add.s64 	%rd12144, %rd12143, %rd12138;
	add.s64 	%rd12145, %rd12144, %rd61;
	add.s64 	%rd12146, %rd12145, %rd10874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10047,%dummy}, %rd12133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10048}, %rd12133;
	}
	shf.r.wrap.b32 	%r10049, %r10048, %r10047, 28;
	shf.r.wrap.b32 	%r10050, %r10047, %r10048, 28;
	mov.b64 	%rd12147, {%r10050, %r10049};
	shf.l.wrap.b32 	%r10051, %r10047, %r10048, 30;
	shf.l.wrap.b32 	%r10052, %r10048, %r10047, 30;
	mov.b64 	%rd12148, {%r10052, %r10051};
	xor.b64  	%rd12149, %rd12147, %rd12148;
	shf.l.wrap.b32 	%r10053, %r10047, %r10048, 25;
	shf.l.wrap.b32 	%r10054, %r10048, %r10047, 25;
	mov.b64 	%rd12150, {%r10054, %r10053};
	xor.b64  	%rd12151, %rd12149, %rd12150;
	xor.b64  	%rd12152, %rd12108, %rd12083;
	and.b64  	%rd12153, %rd12133, %rd12152;
	and.b64  	%rd12154, %rd12108, %rd12083;
	xor.b64  	%rd12155, %rd12153, %rd12154;
	add.s64 	%rd12156, %rd12151, %rd12155;
	add.s64 	%rd12157, %rd12146, %rd12058;
	add.s64 	%rd12158, %rd12156, %rd12146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10055,%dummy}, %rd12157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10056}, %rd12157;
	}
	shf.r.wrap.b32 	%r10057, %r10056, %r10055, 14;
	shf.r.wrap.b32 	%r10058, %r10055, %r10056, 14;
	mov.b64 	%rd12159, {%r10058, %r10057};
	shf.r.wrap.b32 	%r10059, %r10056, %r10055, 18;
	shf.r.wrap.b32 	%r10060, %r10055, %r10056, 18;
	mov.b64 	%rd12160, {%r10060, %r10059};
	xor.b64  	%rd12161, %rd12159, %rd12160;
	shf.l.wrap.b32 	%r10061, %r10055, %r10056, 23;
	shf.l.wrap.b32 	%r10062, %r10056, %r10055, 23;
	mov.b64 	%rd12162, {%r10062, %r10061};
	xor.b64  	%rd12163, %rd12161, %rd12162;
	and.b64  	%rd12164, %rd12157, %rd12132;
	not.b64 	%rd12165, %rd12157;
	and.b64  	%rd12166, %rd12107, %rd12165;
	or.b64  	%rd12167, %rd12164, %rd12166;
	add.s64 	%rd12168, %rd12167, %rd12082;
	add.s64 	%rd12169, %rd12168, %rd12163;
	add.s64 	%rd12170, %rd12169, %rd62;
	add.s64 	%rd12171, %rd12170, %rd10887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10063,%dummy}, %rd12158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10064}, %rd12158;
	}
	shf.r.wrap.b32 	%r10065, %r10064, %r10063, 28;
	shf.r.wrap.b32 	%r10066, %r10063, %r10064, 28;
	mov.b64 	%rd12172, {%r10066, %r10065};
	shf.l.wrap.b32 	%r10067, %r10063, %r10064, 30;
	shf.l.wrap.b32 	%r10068, %r10064, %r10063, 30;
	mov.b64 	%rd12173, {%r10068, %r10067};
	xor.b64  	%rd12174, %rd12172, %rd12173;
	shf.l.wrap.b32 	%r10069, %r10063, %r10064, 25;
	shf.l.wrap.b32 	%r10070, %r10064, %r10063, 25;
	mov.b64 	%rd12175, {%r10070, %r10069};
	xor.b64  	%rd12176, %rd12174, %rd12175;
	xor.b64  	%rd12177, %rd12133, %rd12108;
	and.b64  	%rd12178, %rd12158, %rd12177;
	and.b64  	%rd12179, %rd12133, %rd12108;
	xor.b64  	%rd12180, %rd12178, %rd12179;
	add.s64 	%rd12181, %rd12176, %rd12180;
	add.s64 	%rd12182, %rd12171, %rd12083;
	add.s64 	%rd12183, %rd12181, %rd12171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10071,%dummy}, %rd12182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10072}, %rd12182;
	}
	shf.r.wrap.b32 	%r10073, %r10072, %r10071, 14;
	shf.r.wrap.b32 	%r10074, %r10071, %r10072, 14;
	mov.b64 	%rd12184, {%r10074, %r10073};
	shf.r.wrap.b32 	%r10075, %r10072, %r10071, 18;
	shf.r.wrap.b32 	%r10076, %r10071, %r10072, 18;
	mov.b64 	%rd12185, {%r10076, %r10075};
	xor.b64  	%rd12186, %rd12184, %rd12185;
	shf.l.wrap.b32 	%r10077, %r10071, %r10072, 23;
	shf.l.wrap.b32 	%r10078, %r10072, %r10071, 23;
	mov.b64 	%rd12187, {%r10078, %r10077};
	xor.b64  	%rd12188, %rd12186, %rd12187;
	and.b64  	%rd12189, %rd12182, %rd12157;
	not.b64 	%rd12190, %rd12182;
	and.b64  	%rd12191, %rd12132, %rd12190;
	or.b64  	%rd12192, %rd12189, %rd12191;
	add.s64 	%rd12193, %rd12192, %rd12107;
	add.s64 	%rd12194, %rd12193, %rd12188;
	add.s64 	%rd12195, %rd12194, %rd63;
	add.s64 	%rd12196, %rd12195, %rd10900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10079,%dummy}, %rd12183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10080}, %rd12183;
	}
	shf.r.wrap.b32 	%r10081, %r10080, %r10079, 28;
	shf.r.wrap.b32 	%r10082, %r10079, %r10080, 28;
	mov.b64 	%rd12197, {%r10082, %r10081};
	shf.l.wrap.b32 	%r10083, %r10079, %r10080, 30;
	shf.l.wrap.b32 	%r10084, %r10080, %r10079, 30;
	mov.b64 	%rd12198, {%r10084, %r10083};
	xor.b64  	%rd12199, %rd12197, %rd12198;
	shf.l.wrap.b32 	%r10085, %r10079, %r10080, 25;
	shf.l.wrap.b32 	%r10086, %r10080, %r10079, 25;
	mov.b64 	%rd12200, {%r10086, %r10085};
	xor.b64  	%rd12201, %rd12199, %rd12200;
	xor.b64  	%rd12202, %rd12158, %rd12133;
	and.b64  	%rd12203, %rd12183, %rd12202;
	and.b64  	%rd12204, %rd12158, %rd12133;
	xor.b64  	%rd12205, %rd12203, %rd12204;
	add.s64 	%rd12206, %rd12201, %rd12205;
	add.s64 	%rd12207, %rd12196, %rd12108;
	add.s64 	%rd12208, %rd12206, %rd12196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10087,%dummy}, %rd12207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10088}, %rd12207;
	}
	shf.r.wrap.b32 	%r10089, %r10088, %r10087, 14;
	shf.r.wrap.b32 	%r10090, %r10087, %r10088, 14;
	mov.b64 	%rd12209, {%r10090, %r10089};
	shf.r.wrap.b32 	%r10091, %r10088, %r10087, 18;
	shf.r.wrap.b32 	%r10092, %r10087, %r10088, 18;
	mov.b64 	%rd12210, {%r10092, %r10091};
	xor.b64  	%rd12211, %rd12209, %rd12210;
	shf.l.wrap.b32 	%r10093, %r10087, %r10088, 23;
	shf.l.wrap.b32 	%r10094, %r10088, %r10087, 23;
	mov.b64 	%rd12212, {%r10094, %r10093};
	xor.b64  	%rd12213, %rd12211, %rd12212;
	and.b64  	%rd12214, %rd12207, %rd12182;
	not.b64 	%rd12215, %rd12207;
	and.b64  	%rd12216, %rd12157, %rd12215;
	or.b64  	%rd12217, %rd12214, %rd12216;
	add.s64 	%rd12218, %rd12217, %rd12132;
	add.s64 	%rd12219, %rd12218, %rd12213;
	add.s64 	%rd12220, %rd12219, %rd64;
	add.s64 	%rd12221, %rd12220, %rd10913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10095,%dummy}, %rd12208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10096}, %rd12208;
	}
	shf.r.wrap.b32 	%r10097, %r10096, %r10095, 28;
	shf.r.wrap.b32 	%r10098, %r10095, %r10096, 28;
	mov.b64 	%rd12222, {%r10098, %r10097};
	shf.l.wrap.b32 	%r10099, %r10095, %r10096, 30;
	shf.l.wrap.b32 	%r10100, %r10096, %r10095, 30;
	mov.b64 	%rd12223, {%r10100, %r10099};
	xor.b64  	%rd12224, %rd12222, %rd12223;
	shf.l.wrap.b32 	%r10101, %r10095, %r10096, 25;
	shf.l.wrap.b32 	%r10102, %r10096, %r10095, 25;
	mov.b64 	%rd12225, {%r10102, %r10101};
	xor.b64  	%rd12226, %rd12224, %rd12225;
	xor.b64  	%rd12227, %rd12183, %rd12158;
	and.b64  	%rd12228, %rd12208, %rd12227;
	and.b64  	%rd12229, %rd12183, %rd12158;
	xor.b64  	%rd12230, %rd12228, %rd12229;
	add.s64 	%rd12231, %rd12226, %rd12230;
	add.s64 	%rd12232, %rd12221, %rd12133;
	add.s64 	%rd12233, %rd12231, %rd12221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10103,%dummy}, %rd12232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10104}, %rd12232;
	}
	shf.r.wrap.b32 	%r10105, %r10104, %r10103, 14;
	shf.r.wrap.b32 	%r10106, %r10103, %r10104, 14;
	mov.b64 	%rd12234, {%r10106, %r10105};
	shf.r.wrap.b32 	%r10107, %r10104, %r10103, 18;
	shf.r.wrap.b32 	%r10108, %r10103, %r10104, 18;
	mov.b64 	%rd12235, {%r10108, %r10107};
	xor.b64  	%rd12236, %rd12234, %rd12235;
	shf.l.wrap.b32 	%r10109, %r10103, %r10104, 23;
	shf.l.wrap.b32 	%r10110, %r10104, %r10103, 23;
	mov.b64 	%rd12237, {%r10110, %r10109};
	xor.b64  	%rd12238, %rd12236, %rd12237;
	and.b64  	%rd12239, %rd12232, %rd12207;
	not.b64 	%rd12240, %rd12232;
	and.b64  	%rd12241, %rd12182, %rd12240;
	or.b64  	%rd12242, %rd12239, %rd12241;
	add.s64 	%rd12243, %rd12242, %rd12157;
	add.s64 	%rd12244, %rd12243, %rd12238;
	add.s64 	%rd12245, %rd12244, %rd65;
	add.s64 	%rd12246, %rd12245, %rd10926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10111,%dummy}, %rd12233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10112}, %rd12233;
	}
	shf.r.wrap.b32 	%r10113, %r10112, %r10111, 28;
	shf.r.wrap.b32 	%r10114, %r10111, %r10112, 28;
	mov.b64 	%rd12247, {%r10114, %r10113};
	shf.l.wrap.b32 	%r10115, %r10111, %r10112, 30;
	shf.l.wrap.b32 	%r10116, %r10112, %r10111, 30;
	mov.b64 	%rd12248, {%r10116, %r10115};
	xor.b64  	%rd12249, %rd12247, %rd12248;
	shf.l.wrap.b32 	%r10117, %r10111, %r10112, 25;
	shf.l.wrap.b32 	%r10118, %r10112, %r10111, 25;
	mov.b64 	%rd12250, {%r10118, %r10117};
	xor.b64  	%rd12251, %rd12249, %rd12250;
	xor.b64  	%rd12252, %rd12208, %rd12183;
	and.b64  	%rd12253, %rd12233, %rd12252;
	and.b64  	%rd12254, %rd12208, %rd12183;
	xor.b64  	%rd12255, %rd12253, %rd12254;
	add.s64 	%rd12256, %rd12251, %rd12255;
	add.s64 	%rd12257, %rd12246, %rd12158;
	add.s64 	%rd12258, %rd12256, %rd12246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10119,%dummy}, %rd12257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10120}, %rd12257;
	}
	shf.r.wrap.b32 	%r10121, %r10120, %r10119, 14;
	shf.r.wrap.b32 	%r10122, %r10119, %r10120, 14;
	mov.b64 	%rd12259, {%r10122, %r10121};
	shf.r.wrap.b32 	%r10123, %r10120, %r10119, 18;
	shf.r.wrap.b32 	%r10124, %r10119, %r10120, 18;
	mov.b64 	%rd12260, {%r10124, %r10123};
	xor.b64  	%rd12261, %rd12259, %rd12260;
	shf.l.wrap.b32 	%r10125, %r10119, %r10120, 23;
	shf.l.wrap.b32 	%r10126, %r10120, %r10119, 23;
	mov.b64 	%rd12262, {%r10126, %r10125};
	xor.b64  	%rd12263, %rd12261, %rd12262;
	and.b64  	%rd12264, %rd12257, %rd12232;
	not.b64 	%rd12265, %rd12257;
	and.b64  	%rd12266, %rd12207, %rd12265;
	or.b64  	%rd12267, %rd12264, %rd12266;
	add.s64 	%rd12268, %rd12267, %rd12182;
	add.s64 	%rd12269, %rd12268, %rd12263;
	add.s64 	%rd12270, %rd12269, %rd66;
	add.s64 	%rd12271, %rd12270, %rd10939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10127,%dummy}, %rd12258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10128}, %rd12258;
	}
	shf.r.wrap.b32 	%r10129, %r10128, %r10127, 28;
	shf.r.wrap.b32 	%r10130, %r10127, %r10128, 28;
	mov.b64 	%rd12272, {%r10130, %r10129};
	shf.l.wrap.b32 	%r10131, %r10127, %r10128, 30;
	shf.l.wrap.b32 	%r10132, %r10128, %r10127, 30;
	mov.b64 	%rd12273, {%r10132, %r10131};
	xor.b64  	%rd12274, %rd12272, %rd12273;
	shf.l.wrap.b32 	%r10133, %r10127, %r10128, 25;
	shf.l.wrap.b32 	%r10134, %r10128, %r10127, 25;
	mov.b64 	%rd12275, {%r10134, %r10133};
	xor.b64  	%rd12276, %rd12274, %rd12275;
	xor.b64  	%rd12277, %rd12233, %rd12208;
	and.b64  	%rd12278, %rd12258, %rd12277;
	and.b64  	%rd12279, %rd12233, %rd12208;
	xor.b64  	%rd12280, %rd12278, %rd12279;
	add.s64 	%rd12281, %rd12276, %rd12280;
	add.s64 	%rd12282, %rd12271, %rd12183;
	add.s64 	%rd12283, %rd12281, %rd12271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10135,%dummy}, %rd12282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10136}, %rd12282;
	}
	shf.r.wrap.b32 	%r10137, %r10136, %r10135, 14;
	shf.r.wrap.b32 	%r10138, %r10135, %r10136, 14;
	mov.b64 	%rd12284, {%r10138, %r10137};
	shf.r.wrap.b32 	%r10139, %r10136, %r10135, 18;
	shf.r.wrap.b32 	%r10140, %r10135, %r10136, 18;
	mov.b64 	%rd12285, {%r10140, %r10139};
	xor.b64  	%rd12286, %rd12284, %rd12285;
	shf.l.wrap.b32 	%r10141, %r10135, %r10136, 23;
	shf.l.wrap.b32 	%r10142, %r10136, %r10135, 23;
	mov.b64 	%rd12287, {%r10142, %r10141};
	xor.b64  	%rd12288, %rd12286, %rd12287;
	and.b64  	%rd12289, %rd12282, %rd12257;
	not.b64 	%rd12290, %rd12282;
	and.b64  	%rd12291, %rd12232, %rd12290;
	or.b64  	%rd12292, %rd12289, %rd12291;
	add.s64 	%rd12293, %rd12292, %rd12207;
	add.s64 	%rd12294, %rd12293, %rd12288;
	add.s64 	%rd12295, %rd12294, %rd67;
	add.s64 	%rd12296, %rd12295, %rd10952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10143,%dummy}, %rd12283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10144}, %rd12283;
	}
	shf.r.wrap.b32 	%r10145, %r10144, %r10143, 28;
	shf.r.wrap.b32 	%r10146, %r10143, %r10144, 28;
	mov.b64 	%rd12297, {%r10146, %r10145};
	shf.l.wrap.b32 	%r10147, %r10143, %r10144, 30;
	shf.l.wrap.b32 	%r10148, %r10144, %r10143, 30;
	mov.b64 	%rd12298, {%r10148, %r10147};
	xor.b64  	%rd12299, %rd12297, %rd12298;
	shf.l.wrap.b32 	%r10149, %r10143, %r10144, 25;
	shf.l.wrap.b32 	%r10150, %r10144, %r10143, 25;
	mov.b64 	%rd12300, {%r10150, %r10149};
	xor.b64  	%rd12301, %rd12299, %rd12300;
	xor.b64  	%rd12302, %rd12258, %rd12233;
	and.b64  	%rd12303, %rd12283, %rd12302;
	and.b64  	%rd12304, %rd12258, %rd12233;
	xor.b64  	%rd12305, %rd12303, %rd12304;
	add.s64 	%rd12306, %rd12301, %rd12305;
	add.s64 	%rd12307, %rd12296, %rd12208;
	add.s64 	%rd12308, %rd12306, %rd12296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10151,%dummy}, %rd12307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10152}, %rd12307;
	}
	shf.r.wrap.b32 	%r10153, %r10152, %r10151, 14;
	shf.r.wrap.b32 	%r10154, %r10151, %r10152, 14;
	mov.b64 	%rd12309, {%r10154, %r10153};
	shf.r.wrap.b32 	%r10155, %r10152, %r10151, 18;
	shf.r.wrap.b32 	%r10156, %r10151, %r10152, 18;
	mov.b64 	%rd12310, {%r10156, %r10155};
	xor.b64  	%rd12311, %rd12309, %rd12310;
	shf.l.wrap.b32 	%r10157, %r10151, %r10152, 23;
	shf.l.wrap.b32 	%r10158, %r10152, %r10151, 23;
	mov.b64 	%rd12312, {%r10158, %r10157};
	xor.b64  	%rd12313, %rd12311, %rd12312;
	and.b64  	%rd12314, %rd12307, %rd12282;
	not.b64 	%rd12315, %rd12307;
	and.b64  	%rd12316, %rd12257, %rd12315;
	or.b64  	%rd12317, %rd12314, %rd12316;
	add.s64 	%rd12318, %rd12317, %rd12232;
	add.s64 	%rd12319, %rd12318, %rd12313;
	add.s64 	%rd12320, %rd12319, %rd68;
	add.s64 	%rd12321, %rd12320, %rd10965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10159,%dummy}, %rd12308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10160}, %rd12308;
	}
	shf.r.wrap.b32 	%r10161, %r10160, %r10159, 28;
	shf.r.wrap.b32 	%r10162, %r10159, %r10160, 28;
	mov.b64 	%rd12322, {%r10162, %r10161};
	shf.l.wrap.b32 	%r10163, %r10159, %r10160, 30;
	shf.l.wrap.b32 	%r10164, %r10160, %r10159, 30;
	mov.b64 	%rd12323, {%r10164, %r10163};
	xor.b64  	%rd12324, %rd12322, %rd12323;
	shf.l.wrap.b32 	%r10165, %r10159, %r10160, 25;
	shf.l.wrap.b32 	%r10166, %r10160, %r10159, 25;
	mov.b64 	%rd12325, {%r10166, %r10165};
	xor.b64  	%rd12326, %rd12324, %rd12325;
	xor.b64  	%rd12327, %rd12283, %rd12258;
	and.b64  	%rd12328, %rd12308, %rd12327;
	and.b64  	%rd12329, %rd12283, %rd12258;
	xor.b64  	%rd12330, %rd12328, %rd12329;
	add.s64 	%rd12331, %rd12326, %rd12330;
	add.s64 	%rd12332, %rd12321, %rd12233;
	add.s64 	%rd12333, %rd12331, %rd12321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10167,%dummy}, %rd12332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10168}, %rd12332;
	}
	shf.r.wrap.b32 	%r10169, %r10168, %r10167, 14;
	shf.r.wrap.b32 	%r10170, %r10167, %r10168, 14;
	mov.b64 	%rd12334, {%r10170, %r10169};
	shf.r.wrap.b32 	%r10171, %r10168, %r10167, 18;
	shf.r.wrap.b32 	%r10172, %r10167, %r10168, 18;
	mov.b64 	%rd12335, {%r10172, %r10171};
	xor.b64  	%rd12336, %rd12334, %rd12335;
	shf.l.wrap.b32 	%r10173, %r10167, %r10168, 23;
	shf.l.wrap.b32 	%r10174, %r10168, %r10167, 23;
	mov.b64 	%rd12337, {%r10174, %r10173};
	xor.b64  	%rd12338, %rd12336, %rd12337;
	and.b64  	%rd12339, %rd12332, %rd12307;
	not.b64 	%rd12340, %rd12332;
	and.b64  	%rd12341, %rd12282, %rd12340;
	or.b64  	%rd12342, %rd12339, %rd12341;
	add.s64 	%rd12343, %rd12342, %rd12257;
	add.s64 	%rd12344, %rd12343, %rd12338;
	add.s64 	%rd12345, %rd12344, %rd69;
	add.s64 	%rd12346, %rd12345, %rd10978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10175,%dummy}, %rd12333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10176}, %rd12333;
	}
	shf.r.wrap.b32 	%r10177, %r10176, %r10175, 28;
	shf.r.wrap.b32 	%r10178, %r10175, %r10176, 28;
	mov.b64 	%rd12347, {%r10178, %r10177};
	shf.l.wrap.b32 	%r10179, %r10175, %r10176, 30;
	shf.l.wrap.b32 	%r10180, %r10176, %r10175, 30;
	mov.b64 	%rd12348, {%r10180, %r10179};
	xor.b64  	%rd12349, %rd12347, %rd12348;
	shf.l.wrap.b32 	%r10181, %r10175, %r10176, 25;
	shf.l.wrap.b32 	%r10182, %r10176, %r10175, 25;
	mov.b64 	%rd12350, {%r10182, %r10181};
	xor.b64  	%rd12351, %rd12349, %rd12350;
	xor.b64  	%rd12352, %rd12308, %rd12283;
	and.b64  	%rd12353, %rd12333, %rd12352;
	and.b64  	%rd12354, %rd12308, %rd12283;
	xor.b64  	%rd12355, %rd12353, %rd12354;
	add.s64 	%rd12356, %rd12351, %rd12355;
	add.s64 	%rd12357, %rd12346, %rd12258;
	add.s64 	%rd12358, %rd12356, %rd12346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10183,%dummy}, %rd12357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10184}, %rd12357;
	}
	shf.r.wrap.b32 	%r10185, %r10184, %r10183, 14;
	shf.r.wrap.b32 	%r10186, %r10183, %r10184, 14;
	mov.b64 	%rd12359, {%r10186, %r10185};
	shf.r.wrap.b32 	%r10187, %r10184, %r10183, 18;
	shf.r.wrap.b32 	%r10188, %r10183, %r10184, 18;
	mov.b64 	%rd12360, {%r10188, %r10187};
	xor.b64  	%rd12361, %rd12359, %rd12360;
	shf.l.wrap.b32 	%r10189, %r10183, %r10184, 23;
	shf.l.wrap.b32 	%r10190, %r10184, %r10183, 23;
	mov.b64 	%rd12362, {%r10190, %r10189};
	xor.b64  	%rd12363, %rd12361, %rd12362;
	and.b64  	%rd12364, %rd12357, %rd12332;
	not.b64 	%rd12365, %rd12357;
	and.b64  	%rd12366, %rd12307, %rd12365;
	or.b64  	%rd12367, %rd12364, %rd12366;
	add.s64 	%rd12368, %rd12367, %rd12282;
	add.s64 	%rd12369, %rd12368, %rd12363;
	add.s64 	%rd12370, %rd12369, %rd70;
	add.s64 	%rd12371, %rd12370, %rd10991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10191,%dummy}, %rd12358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10192}, %rd12358;
	}
	shf.r.wrap.b32 	%r10193, %r10192, %r10191, 28;
	shf.r.wrap.b32 	%r10194, %r10191, %r10192, 28;
	mov.b64 	%rd12372, {%r10194, %r10193};
	shf.l.wrap.b32 	%r10195, %r10191, %r10192, 30;
	shf.l.wrap.b32 	%r10196, %r10192, %r10191, 30;
	mov.b64 	%rd12373, {%r10196, %r10195};
	xor.b64  	%rd12374, %rd12372, %rd12373;
	shf.l.wrap.b32 	%r10197, %r10191, %r10192, 25;
	shf.l.wrap.b32 	%r10198, %r10192, %r10191, 25;
	mov.b64 	%rd12375, {%r10198, %r10197};
	xor.b64  	%rd12376, %rd12374, %rd12375;
	xor.b64  	%rd12377, %rd12333, %rd12308;
	and.b64  	%rd12378, %rd12358, %rd12377;
	and.b64  	%rd12379, %rd12333, %rd12308;
	xor.b64  	%rd12380, %rd12378, %rd12379;
	add.s64 	%rd12381, %rd12376, %rd12380;
	add.s64 	%rd12382, %rd12371, %rd12283;
	add.s64 	%rd12383, %rd12381, %rd12371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10199,%dummy}, %rd12382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10200}, %rd12382;
	}
	shf.r.wrap.b32 	%r10201, %r10200, %r10199, 14;
	shf.r.wrap.b32 	%r10202, %r10199, %r10200, 14;
	mov.b64 	%rd12384, {%r10202, %r10201};
	shf.r.wrap.b32 	%r10203, %r10200, %r10199, 18;
	shf.r.wrap.b32 	%r10204, %r10199, %r10200, 18;
	mov.b64 	%rd12385, {%r10204, %r10203};
	xor.b64  	%rd12386, %rd12384, %rd12385;
	shf.l.wrap.b32 	%r10205, %r10199, %r10200, 23;
	shf.l.wrap.b32 	%r10206, %r10200, %r10199, 23;
	mov.b64 	%rd12387, {%r10206, %r10205};
	xor.b64  	%rd12388, %rd12386, %rd12387;
	and.b64  	%rd12389, %rd12382, %rd12357;
	not.b64 	%rd12390, %rd12382;
	and.b64  	%rd12391, %rd12332, %rd12390;
	or.b64  	%rd12392, %rd12389, %rd12391;
	add.s64 	%rd12393, %rd12392, %rd12307;
	add.s64 	%rd12394, %rd12393, %rd12388;
	add.s64 	%rd12395, %rd12394, %rd71;
	add.s64 	%rd12396, %rd12395, %rd11004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10207,%dummy}, %rd12383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10208}, %rd12383;
	}
	shf.r.wrap.b32 	%r10209, %r10208, %r10207, 28;
	shf.r.wrap.b32 	%r10210, %r10207, %r10208, 28;
	mov.b64 	%rd12397, {%r10210, %r10209};
	shf.l.wrap.b32 	%r10211, %r10207, %r10208, 30;
	shf.l.wrap.b32 	%r10212, %r10208, %r10207, 30;
	mov.b64 	%rd12398, {%r10212, %r10211};
	xor.b64  	%rd12399, %rd12397, %rd12398;
	shf.l.wrap.b32 	%r10213, %r10207, %r10208, 25;
	shf.l.wrap.b32 	%r10214, %r10208, %r10207, 25;
	mov.b64 	%rd12400, {%r10214, %r10213};
	xor.b64  	%rd12401, %rd12399, %rd12400;
	xor.b64  	%rd12402, %rd12358, %rd12333;
	and.b64  	%rd12403, %rd12383, %rd12402;
	and.b64  	%rd12404, %rd12358, %rd12333;
	xor.b64  	%rd12405, %rd12403, %rd12404;
	add.s64 	%rd12406, %rd12401, %rd12405;
	add.s64 	%rd12407, %rd12396, %rd12308;
	add.s64 	%rd12408, %rd12406, %rd12396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10215,%dummy}, %rd12407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10216}, %rd12407;
	}
	shf.r.wrap.b32 	%r10217, %r10216, %r10215, 14;
	shf.r.wrap.b32 	%r10218, %r10215, %r10216, 14;
	mov.b64 	%rd12409, {%r10218, %r10217};
	shf.r.wrap.b32 	%r10219, %r10216, %r10215, 18;
	shf.r.wrap.b32 	%r10220, %r10215, %r10216, 18;
	mov.b64 	%rd12410, {%r10220, %r10219};
	xor.b64  	%rd12411, %rd12409, %rd12410;
	shf.l.wrap.b32 	%r10221, %r10215, %r10216, 23;
	shf.l.wrap.b32 	%r10222, %r10216, %r10215, 23;
	mov.b64 	%rd12412, {%r10222, %r10221};
	xor.b64  	%rd12413, %rd12411, %rd12412;
	and.b64  	%rd12414, %rd12407, %rd12382;
	not.b64 	%rd12415, %rd12407;
	and.b64  	%rd12416, %rd12357, %rd12415;
	or.b64  	%rd12417, %rd12414, %rd12416;
	add.s64 	%rd12418, %rd12417, %rd12332;
	add.s64 	%rd12419, %rd12418, %rd12413;
	add.s64 	%rd12420, %rd12419, %rd72;
	add.s64 	%rd12421, %rd12420, %rd11017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10223,%dummy}, %rd12408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10224}, %rd12408;
	}
	shf.r.wrap.b32 	%r10225, %r10224, %r10223, 28;
	shf.r.wrap.b32 	%r10226, %r10223, %r10224, 28;
	mov.b64 	%rd12422, {%r10226, %r10225};
	shf.l.wrap.b32 	%r10227, %r10223, %r10224, 30;
	shf.l.wrap.b32 	%r10228, %r10224, %r10223, 30;
	mov.b64 	%rd12423, {%r10228, %r10227};
	xor.b64  	%rd12424, %rd12422, %rd12423;
	shf.l.wrap.b32 	%r10229, %r10223, %r10224, 25;
	shf.l.wrap.b32 	%r10230, %r10224, %r10223, 25;
	mov.b64 	%rd12425, {%r10230, %r10229};
	xor.b64  	%rd12426, %rd12424, %rd12425;
	xor.b64  	%rd12427, %rd12383, %rd12358;
	and.b64  	%rd12428, %rd12408, %rd12427;
	and.b64  	%rd12429, %rd12383, %rd12358;
	xor.b64  	%rd12430, %rd12428, %rd12429;
	add.s64 	%rd12431, %rd12426, %rd12430;
	add.s64 	%rd12432, %rd12421, %rd12333;
	add.s64 	%rd12433, %rd12431, %rd12421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10231,%dummy}, %rd12432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10232}, %rd12432;
	}
	shf.r.wrap.b32 	%r10233, %r10232, %r10231, 14;
	shf.r.wrap.b32 	%r10234, %r10231, %r10232, 14;
	mov.b64 	%rd12434, {%r10234, %r10233};
	shf.r.wrap.b32 	%r10235, %r10232, %r10231, 18;
	shf.r.wrap.b32 	%r10236, %r10231, %r10232, 18;
	mov.b64 	%rd12435, {%r10236, %r10235};
	xor.b64  	%rd12436, %rd12434, %rd12435;
	shf.l.wrap.b32 	%r10237, %r10231, %r10232, 23;
	shf.l.wrap.b32 	%r10238, %r10232, %r10231, 23;
	mov.b64 	%rd12437, {%r10238, %r10237};
	xor.b64  	%rd12438, %rd12436, %rd12437;
	and.b64  	%rd12439, %rd12432, %rd12407;
	not.b64 	%rd12440, %rd12432;
	and.b64  	%rd12441, %rd12382, %rd12440;
	or.b64  	%rd12442, %rd12439, %rd12441;
	add.s64 	%rd12443, %rd12442, %rd12357;
	add.s64 	%rd12444, %rd12443, %rd12438;
	add.s64 	%rd12445, %rd12444, %rd73;
	add.s64 	%rd12446, %rd12445, %rd11030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10239,%dummy}, %rd12433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10240}, %rd12433;
	}
	shf.r.wrap.b32 	%r10241, %r10240, %r10239, 28;
	shf.r.wrap.b32 	%r10242, %r10239, %r10240, 28;
	mov.b64 	%rd12447, {%r10242, %r10241};
	shf.l.wrap.b32 	%r10243, %r10239, %r10240, 30;
	shf.l.wrap.b32 	%r10244, %r10240, %r10239, 30;
	mov.b64 	%rd12448, {%r10244, %r10243};
	xor.b64  	%rd12449, %rd12447, %rd12448;
	shf.l.wrap.b32 	%r10245, %r10239, %r10240, 25;
	shf.l.wrap.b32 	%r10246, %r10240, %r10239, 25;
	mov.b64 	%rd12450, {%r10246, %r10245};
	xor.b64  	%rd12451, %rd12449, %rd12450;
	xor.b64  	%rd12452, %rd12408, %rd12383;
	and.b64  	%rd12453, %rd12433, %rd12452;
	and.b64  	%rd12454, %rd12408, %rd12383;
	xor.b64  	%rd12455, %rd12453, %rd12454;
	add.s64 	%rd12456, %rd12451, %rd12455;
	add.s64 	%rd12457, %rd12446, %rd12358;
	add.s64 	%rd12458, %rd12456, %rd12446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10247,%dummy}, %rd12457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10248}, %rd12457;
	}
	shf.r.wrap.b32 	%r10249, %r10248, %r10247, 14;
	shf.r.wrap.b32 	%r10250, %r10247, %r10248, 14;
	mov.b64 	%rd12459, {%r10250, %r10249};
	shf.r.wrap.b32 	%r10251, %r10248, %r10247, 18;
	shf.r.wrap.b32 	%r10252, %r10247, %r10248, 18;
	mov.b64 	%rd12460, {%r10252, %r10251};
	xor.b64  	%rd12461, %rd12459, %rd12460;
	shf.l.wrap.b32 	%r10253, %r10247, %r10248, 23;
	shf.l.wrap.b32 	%r10254, %r10248, %r10247, 23;
	mov.b64 	%rd12462, {%r10254, %r10253};
	xor.b64  	%rd12463, %rd12461, %rd12462;
	and.b64  	%rd12464, %rd12457, %rd12432;
	not.b64 	%rd12465, %rd12457;
	and.b64  	%rd12466, %rd12407, %rd12465;
	or.b64  	%rd12467, %rd12464, %rd12466;
	add.s64 	%rd12468, %rd12467, %rd12382;
	add.s64 	%rd12469, %rd12468, %rd12463;
	add.s64 	%rd12470, %rd12469, %rd74;
	add.s64 	%rd12471, %rd12470, %rd11043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10255,%dummy}, %rd12458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10256}, %rd12458;
	}
	shf.r.wrap.b32 	%r10257, %r10256, %r10255, 28;
	shf.r.wrap.b32 	%r10258, %r10255, %r10256, 28;
	mov.b64 	%rd12472, {%r10258, %r10257};
	shf.l.wrap.b32 	%r10259, %r10255, %r10256, 30;
	shf.l.wrap.b32 	%r10260, %r10256, %r10255, 30;
	mov.b64 	%rd12473, {%r10260, %r10259};
	xor.b64  	%rd12474, %rd12472, %rd12473;
	shf.l.wrap.b32 	%r10261, %r10255, %r10256, 25;
	shf.l.wrap.b32 	%r10262, %r10256, %r10255, 25;
	mov.b64 	%rd12475, {%r10262, %r10261};
	xor.b64  	%rd12476, %rd12474, %rd12475;
	xor.b64  	%rd12477, %rd12433, %rd12408;
	and.b64  	%rd12478, %rd12458, %rd12477;
	and.b64  	%rd12479, %rd12433, %rd12408;
	xor.b64  	%rd12480, %rd12478, %rd12479;
	add.s64 	%rd12481, %rd12476, %rd12480;
	add.s64 	%rd12482, %rd12471, %rd12383;
	add.s64 	%rd12483, %rd12481, %rd12471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10263,%dummy}, %rd12482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10264}, %rd12482;
	}
	shf.r.wrap.b32 	%r10265, %r10264, %r10263, 14;
	shf.r.wrap.b32 	%r10266, %r10263, %r10264, 14;
	mov.b64 	%rd12484, {%r10266, %r10265};
	shf.r.wrap.b32 	%r10267, %r10264, %r10263, 18;
	shf.r.wrap.b32 	%r10268, %r10263, %r10264, 18;
	mov.b64 	%rd12485, {%r10268, %r10267};
	xor.b64  	%rd12486, %rd12484, %rd12485;
	shf.l.wrap.b32 	%r10269, %r10263, %r10264, 23;
	shf.l.wrap.b32 	%r10270, %r10264, %r10263, 23;
	mov.b64 	%rd12487, {%r10270, %r10269};
	xor.b64  	%rd12488, %rd12486, %rd12487;
	and.b64  	%rd12489, %rd12482, %rd12457;
	not.b64 	%rd12490, %rd12482;
	and.b64  	%rd12491, %rd12432, %rd12490;
	or.b64  	%rd12492, %rd12489, %rd12491;
	add.s64 	%rd12493, %rd12492, %rd12407;
	add.s64 	%rd12494, %rd12493, %rd12488;
	add.s64 	%rd12495, %rd12494, %rd75;
	add.s64 	%rd12496, %rd12495, %rd11056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10271,%dummy}, %rd12483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10272}, %rd12483;
	}
	shf.r.wrap.b32 	%r10273, %r10272, %r10271, 28;
	shf.r.wrap.b32 	%r10274, %r10271, %r10272, 28;
	mov.b64 	%rd12497, {%r10274, %r10273};
	shf.l.wrap.b32 	%r10275, %r10271, %r10272, 30;
	shf.l.wrap.b32 	%r10276, %r10272, %r10271, 30;
	mov.b64 	%rd12498, {%r10276, %r10275};
	xor.b64  	%rd12499, %rd12497, %rd12498;
	shf.l.wrap.b32 	%r10277, %r10271, %r10272, 25;
	shf.l.wrap.b32 	%r10278, %r10272, %r10271, 25;
	mov.b64 	%rd12500, {%r10278, %r10277};
	xor.b64  	%rd12501, %rd12499, %rd12500;
	xor.b64  	%rd12502, %rd12458, %rd12433;
	and.b64  	%rd12503, %rd12483, %rd12502;
	and.b64  	%rd12504, %rd12458, %rd12433;
	xor.b64  	%rd12505, %rd12503, %rd12504;
	add.s64 	%rd12506, %rd12501, %rd12505;
	add.s64 	%rd12507, %rd12496, %rd12408;
	add.s64 	%rd12508, %rd12506, %rd12496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10279,%dummy}, %rd12507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10280}, %rd12507;
	}
	shf.r.wrap.b32 	%r10281, %r10280, %r10279, 14;
	shf.r.wrap.b32 	%r10282, %r10279, %r10280, 14;
	mov.b64 	%rd12509, {%r10282, %r10281};
	shf.r.wrap.b32 	%r10283, %r10280, %r10279, 18;
	shf.r.wrap.b32 	%r10284, %r10279, %r10280, 18;
	mov.b64 	%rd12510, {%r10284, %r10283};
	xor.b64  	%rd12511, %rd12509, %rd12510;
	shf.l.wrap.b32 	%r10285, %r10279, %r10280, 23;
	shf.l.wrap.b32 	%r10286, %r10280, %r10279, 23;
	mov.b64 	%rd12512, {%r10286, %r10285};
	xor.b64  	%rd12513, %rd12511, %rd12512;
	and.b64  	%rd12514, %rd12507, %rd12482;
	not.b64 	%rd12515, %rd12507;
	and.b64  	%rd12516, %rd12457, %rd12515;
	or.b64  	%rd12517, %rd12514, %rd12516;
	add.s64 	%rd12518, %rd12517, %rd12432;
	add.s64 	%rd12519, %rd12518, %rd12513;
	add.s64 	%rd12520, %rd12519, %rd76;
	add.s64 	%rd12521, %rd12520, %rd11069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10287,%dummy}, %rd12508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10288}, %rd12508;
	}
	shf.r.wrap.b32 	%r10289, %r10288, %r10287, 28;
	shf.r.wrap.b32 	%r10290, %r10287, %r10288, 28;
	mov.b64 	%rd12522, {%r10290, %r10289};
	shf.l.wrap.b32 	%r10291, %r10287, %r10288, 30;
	shf.l.wrap.b32 	%r10292, %r10288, %r10287, 30;
	mov.b64 	%rd12523, {%r10292, %r10291};
	xor.b64  	%rd12524, %rd12522, %rd12523;
	shf.l.wrap.b32 	%r10293, %r10287, %r10288, 25;
	shf.l.wrap.b32 	%r10294, %r10288, %r10287, 25;
	mov.b64 	%rd12525, {%r10294, %r10293};
	xor.b64  	%rd12526, %rd12524, %rd12525;
	xor.b64  	%rd12527, %rd12483, %rd12458;
	and.b64  	%rd12528, %rd12508, %rd12527;
	and.b64  	%rd12529, %rd12483, %rd12458;
	xor.b64  	%rd12530, %rd12528, %rd12529;
	add.s64 	%rd12531, %rd12526, %rd12530;
	add.s64 	%rd12532, %rd12521, %rd12433;
	add.s64 	%rd12533, %rd12531, %rd12521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10295,%dummy}, %rd12532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10296}, %rd12532;
	}
	shf.r.wrap.b32 	%r10297, %r10296, %r10295, 14;
	shf.r.wrap.b32 	%r10298, %r10295, %r10296, 14;
	mov.b64 	%rd12534, {%r10298, %r10297};
	shf.r.wrap.b32 	%r10299, %r10296, %r10295, 18;
	shf.r.wrap.b32 	%r10300, %r10295, %r10296, 18;
	mov.b64 	%rd12535, {%r10300, %r10299};
	xor.b64  	%rd12536, %rd12534, %rd12535;
	shf.l.wrap.b32 	%r10301, %r10295, %r10296, 23;
	shf.l.wrap.b32 	%r10302, %r10296, %r10295, 23;
	mov.b64 	%rd12537, {%r10302, %r10301};
	xor.b64  	%rd12538, %rd12536, %rd12537;
	and.b64  	%rd12539, %rd12532, %rd12507;
	not.b64 	%rd12540, %rd12532;
	and.b64  	%rd12541, %rd12482, %rd12540;
	or.b64  	%rd12542, %rd12539, %rd12541;
	add.s64 	%rd12543, %rd12542, %rd12457;
	add.s64 	%rd12544, %rd12543, %rd12538;
	add.s64 	%rd12545, %rd12544, %rd77;
	add.s64 	%rd12546, %rd12545, %rd11082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10303,%dummy}, %rd12533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10304}, %rd12533;
	}
	shf.r.wrap.b32 	%r10305, %r10304, %r10303, 28;
	shf.r.wrap.b32 	%r10306, %r10303, %r10304, 28;
	mov.b64 	%rd12547, {%r10306, %r10305};
	shf.l.wrap.b32 	%r10307, %r10303, %r10304, 30;
	shf.l.wrap.b32 	%r10308, %r10304, %r10303, 30;
	mov.b64 	%rd12548, {%r10308, %r10307};
	xor.b64  	%rd12549, %rd12547, %rd12548;
	shf.l.wrap.b32 	%r10309, %r10303, %r10304, 25;
	shf.l.wrap.b32 	%r10310, %r10304, %r10303, 25;
	mov.b64 	%rd12550, {%r10310, %r10309};
	xor.b64  	%rd12551, %rd12549, %rd12550;
	xor.b64  	%rd12552, %rd12508, %rd12483;
	and.b64  	%rd12553, %rd12533, %rd12552;
	and.b64  	%rd12554, %rd12508, %rd12483;
	xor.b64  	%rd12555, %rd12553, %rd12554;
	add.s64 	%rd12556, %rd12551, %rd12555;
	add.s64 	%rd12557, %rd12546, %rd12458;
	add.s64 	%rd12558, %rd12556, %rd12546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10311,%dummy}, %rd12557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10312}, %rd12557;
	}
	shf.r.wrap.b32 	%r10313, %r10312, %r10311, 14;
	shf.r.wrap.b32 	%r10314, %r10311, %r10312, 14;
	mov.b64 	%rd12559, {%r10314, %r10313};
	shf.r.wrap.b32 	%r10315, %r10312, %r10311, 18;
	shf.r.wrap.b32 	%r10316, %r10311, %r10312, 18;
	mov.b64 	%rd12560, {%r10316, %r10315};
	xor.b64  	%rd12561, %rd12559, %rd12560;
	shf.l.wrap.b32 	%r10317, %r10311, %r10312, 23;
	shf.l.wrap.b32 	%r10318, %r10312, %r10311, 23;
	mov.b64 	%rd12562, {%r10318, %r10317};
	xor.b64  	%rd12563, %rd12561, %rd12562;
	and.b64  	%rd12564, %rd12557, %rd12532;
	not.b64 	%rd12565, %rd12557;
	and.b64  	%rd12566, %rd12507, %rd12565;
	or.b64  	%rd12567, %rd12564, %rd12566;
	add.s64 	%rd12568, %rd12567, %rd12482;
	add.s64 	%rd12569, %rd12568, %rd12563;
	add.s64 	%rd12570, %rd12569, %rd78;
	add.s64 	%rd12571, %rd12570, %rd11095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10319,%dummy}, %rd12558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10320}, %rd12558;
	}
	shf.r.wrap.b32 	%r10321, %r10320, %r10319, 28;
	shf.r.wrap.b32 	%r10322, %r10319, %r10320, 28;
	mov.b64 	%rd12572, {%r10322, %r10321};
	shf.l.wrap.b32 	%r10323, %r10319, %r10320, 30;
	shf.l.wrap.b32 	%r10324, %r10320, %r10319, 30;
	mov.b64 	%rd12573, {%r10324, %r10323};
	xor.b64  	%rd12574, %rd12572, %rd12573;
	shf.l.wrap.b32 	%r10325, %r10319, %r10320, 25;
	shf.l.wrap.b32 	%r10326, %r10320, %r10319, 25;
	mov.b64 	%rd12575, {%r10326, %r10325};
	xor.b64  	%rd12576, %rd12574, %rd12575;
	xor.b64  	%rd12577, %rd12533, %rd12508;
	and.b64  	%rd12578, %rd12558, %rd12577;
	and.b64  	%rd12579, %rd12533, %rd12508;
	xor.b64  	%rd12580, %rd12578, %rd12579;
	add.s64 	%rd12581, %rd12576, %rd12580;
	add.s64 	%rd12582, %rd12571, %rd12483;
	add.s64 	%rd12583, %rd12581, %rd12571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10327,%dummy}, %rd12582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10328}, %rd12582;
	}
	shf.r.wrap.b32 	%r10329, %r10328, %r10327, 14;
	shf.r.wrap.b32 	%r10330, %r10327, %r10328, 14;
	mov.b64 	%rd12584, {%r10330, %r10329};
	shf.r.wrap.b32 	%r10331, %r10328, %r10327, 18;
	shf.r.wrap.b32 	%r10332, %r10327, %r10328, 18;
	mov.b64 	%rd12585, {%r10332, %r10331};
	xor.b64  	%rd12586, %rd12584, %rd12585;
	shf.l.wrap.b32 	%r10333, %r10327, %r10328, 23;
	shf.l.wrap.b32 	%r10334, %r10328, %r10327, 23;
	mov.b64 	%rd12587, {%r10334, %r10333};
	xor.b64  	%rd12588, %rd12586, %rd12587;
	and.b64  	%rd12589, %rd12582, %rd12557;
	not.b64 	%rd12590, %rd12582;
	and.b64  	%rd12591, %rd12532, %rd12590;
	or.b64  	%rd12592, %rd12589, %rd12591;
	add.s64 	%rd12593, %rd12592, %rd12507;
	add.s64 	%rd12594, %rd12593, %rd12588;
	add.s64 	%rd12595, %rd12594, %rd79;
	add.s64 	%rd12596, %rd12595, %rd11108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10335,%dummy}, %rd12583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10336}, %rd12583;
	}
	shf.r.wrap.b32 	%r10337, %r10336, %r10335, 28;
	shf.r.wrap.b32 	%r10338, %r10335, %r10336, 28;
	mov.b64 	%rd12597, {%r10338, %r10337};
	shf.l.wrap.b32 	%r10339, %r10335, %r10336, 30;
	shf.l.wrap.b32 	%r10340, %r10336, %r10335, 30;
	mov.b64 	%rd12598, {%r10340, %r10339};
	xor.b64  	%rd12599, %rd12597, %rd12598;
	shf.l.wrap.b32 	%r10341, %r10335, %r10336, 25;
	shf.l.wrap.b32 	%r10342, %r10336, %r10335, 25;
	mov.b64 	%rd12600, {%r10342, %r10341};
	xor.b64  	%rd12601, %rd12599, %rd12600;
	xor.b64  	%rd12602, %rd12558, %rd12533;
	and.b64  	%rd12603, %rd12583, %rd12602;
	and.b64  	%rd12604, %rd12558, %rd12533;
	xor.b64  	%rd12605, %rd12603, %rd12604;
	add.s64 	%rd12606, %rd12601, %rd12605;
	add.s64 	%rd12607, %rd12596, %rd12508;
	add.s64 	%rd12608, %rd12606, %rd12596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10343,%dummy}, %rd12607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10344}, %rd12607;
	}
	shf.r.wrap.b32 	%r10345, %r10344, %r10343, 14;
	shf.r.wrap.b32 	%r10346, %r10343, %r10344, 14;
	mov.b64 	%rd12609, {%r10346, %r10345};
	shf.r.wrap.b32 	%r10347, %r10344, %r10343, 18;
	shf.r.wrap.b32 	%r10348, %r10343, %r10344, 18;
	mov.b64 	%rd12610, {%r10348, %r10347};
	xor.b64  	%rd12611, %rd12609, %rd12610;
	shf.l.wrap.b32 	%r10349, %r10343, %r10344, 23;
	shf.l.wrap.b32 	%r10350, %r10344, %r10343, 23;
	mov.b64 	%rd12612, {%r10350, %r10349};
	xor.b64  	%rd12613, %rd12611, %rd12612;
	and.b64  	%rd12614, %rd12607, %rd12582;
	not.b64 	%rd12615, %rd12607;
	and.b64  	%rd12616, %rd12557, %rd12615;
	or.b64  	%rd12617, %rd12614, %rd12616;
	add.s64 	%rd12618, %rd12617, %rd12532;
	add.s64 	%rd12619, %rd12618, %rd12613;
	add.s64 	%rd12620, %rd12619, %rd80;
	add.s64 	%rd12621, %rd12620, %rd11121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10351,%dummy}, %rd12608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10352}, %rd12608;
	}
	shf.r.wrap.b32 	%r10353, %r10352, %r10351, 28;
	shf.r.wrap.b32 	%r10354, %r10351, %r10352, 28;
	mov.b64 	%rd12622, {%r10354, %r10353};
	shf.l.wrap.b32 	%r10355, %r10351, %r10352, 30;
	shf.l.wrap.b32 	%r10356, %r10352, %r10351, 30;
	mov.b64 	%rd12623, {%r10356, %r10355};
	xor.b64  	%rd12624, %rd12622, %rd12623;
	shf.l.wrap.b32 	%r10357, %r10351, %r10352, 25;
	shf.l.wrap.b32 	%r10358, %r10352, %r10351, 25;
	mov.b64 	%rd12625, {%r10358, %r10357};
	xor.b64  	%rd12626, %rd12624, %rd12625;
	xor.b64  	%rd12627, %rd12583, %rd12558;
	and.b64  	%rd12628, %rd12608, %rd12627;
	and.b64  	%rd12629, %rd12583, %rd12558;
	xor.b64  	%rd12630, %rd12628, %rd12629;
	add.s64 	%rd12631, %rd12626, %rd12630;
	add.s64 	%rd12632, %rd12621, %rd12533;
	add.s64 	%rd12633, %rd12631, %rd12621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10359,%dummy}, %rd12632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10360}, %rd12632;
	}
	shf.r.wrap.b32 	%r10361, %r10360, %r10359, 14;
	shf.r.wrap.b32 	%r10362, %r10359, %r10360, 14;
	mov.b64 	%rd12634, {%r10362, %r10361};
	shf.r.wrap.b32 	%r10363, %r10360, %r10359, 18;
	shf.r.wrap.b32 	%r10364, %r10359, %r10360, 18;
	mov.b64 	%rd12635, {%r10364, %r10363};
	xor.b64  	%rd12636, %rd12634, %rd12635;
	shf.l.wrap.b32 	%r10365, %r10359, %r10360, 23;
	shf.l.wrap.b32 	%r10366, %r10360, %r10359, 23;
	mov.b64 	%rd12637, {%r10366, %r10365};
	xor.b64  	%rd12638, %rd12636, %rd12637;
	and.b64  	%rd12639, %rd12632, %rd12607;
	not.b64 	%rd12640, %rd12632;
	and.b64  	%rd12641, %rd12582, %rd12640;
	or.b64  	%rd12642, %rd12639, %rd12641;
	add.s64 	%rd12643, %rd12642, %rd12557;
	add.s64 	%rd12644, %rd12643, %rd12638;
	add.s64 	%rd12645, %rd12644, %rd81;
	add.s64 	%rd12646, %rd12645, %rd11134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10367,%dummy}, %rd12633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10368}, %rd12633;
	}
	shf.r.wrap.b32 	%r10369, %r10368, %r10367, 28;
	shf.r.wrap.b32 	%r10370, %r10367, %r10368, 28;
	mov.b64 	%rd12647, {%r10370, %r10369};
	shf.l.wrap.b32 	%r10371, %r10367, %r10368, 30;
	shf.l.wrap.b32 	%r10372, %r10368, %r10367, 30;
	mov.b64 	%rd12648, {%r10372, %r10371};
	xor.b64  	%rd12649, %rd12647, %rd12648;
	shf.l.wrap.b32 	%r10373, %r10367, %r10368, 25;
	shf.l.wrap.b32 	%r10374, %r10368, %r10367, 25;
	mov.b64 	%rd12650, {%r10374, %r10373};
	xor.b64  	%rd12651, %rd12649, %rd12650;
	xor.b64  	%rd12652, %rd12608, %rd12583;
	and.b64  	%rd12653, %rd12633, %rd12652;
	and.b64  	%rd12654, %rd12608, %rd12583;
	xor.b64  	%rd12655, %rd12653, %rd12654;
	add.s64 	%rd12656, %rd12651, %rd12655;
	add.s64 	%rd12657, %rd12646, %rd12558;
	add.s64 	%rd12658, %rd12656, %rd12646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10375,%dummy}, %rd12657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10376}, %rd12657;
	}
	shf.r.wrap.b32 	%r10377, %r10376, %r10375, 14;
	shf.r.wrap.b32 	%r10378, %r10375, %r10376, 14;
	mov.b64 	%rd12659, {%r10378, %r10377};
	shf.r.wrap.b32 	%r10379, %r10376, %r10375, 18;
	shf.r.wrap.b32 	%r10380, %r10375, %r10376, 18;
	mov.b64 	%rd12660, {%r10380, %r10379};
	xor.b64  	%rd12661, %rd12659, %rd12660;
	shf.l.wrap.b32 	%r10381, %r10375, %r10376, 23;
	shf.l.wrap.b32 	%r10382, %r10376, %r10375, 23;
	mov.b64 	%rd12662, {%r10382, %r10381};
	xor.b64  	%rd12663, %rd12661, %rd12662;
	and.b64  	%rd12664, %rd12657, %rd12632;
	not.b64 	%rd12665, %rd12657;
	and.b64  	%rd12666, %rd12607, %rd12665;
	or.b64  	%rd12667, %rd12664, %rd12666;
	add.s64 	%rd12668, %rd12667, %rd12582;
	add.s64 	%rd12669, %rd12668, %rd12663;
	add.s64 	%rd12670, %rd12669, %rd82;
	add.s64 	%rd12671, %rd12670, %rd11147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10383,%dummy}, %rd12658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10384}, %rd12658;
	}
	shf.r.wrap.b32 	%r10385, %r10384, %r10383, 28;
	shf.r.wrap.b32 	%r10386, %r10383, %r10384, 28;
	mov.b64 	%rd12672, {%r10386, %r10385};
	shf.l.wrap.b32 	%r10387, %r10383, %r10384, 30;
	shf.l.wrap.b32 	%r10388, %r10384, %r10383, 30;
	mov.b64 	%rd12673, {%r10388, %r10387};
	xor.b64  	%rd12674, %rd12672, %rd12673;
	shf.l.wrap.b32 	%r10389, %r10383, %r10384, 25;
	shf.l.wrap.b32 	%r10390, %r10384, %r10383, 25;
	mov.b64 	%rd12675, {%r10390, %r10389};
	xor.b64  	%rd12676, %rd12674, %rd12675;
	xor.b64  	%rd12677, %rd12633, %rd12608;
	and.b64  	%rd12678, %rd12658, %rd12677;
	and.b64  	%rd12679, %rd12633, %rd12608;
	xor.b64  	%rd12680, %rd12678, %rd12679;
	add.s64 	%rd12681, %rd12676, %rd12680;
	add.s64 	%rd12682, %rd12671, %rd12583;
	add.s64 	%rd12683, %rd12681, %rd12671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10391,%dummy}, %rd12682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10392}, %rd12682;
	}
	shf.r.wrap.b32 	%r10393, %r10392, %r10391, 14;
	shf.r.wrap.b32 	%r10394, %r10391, %r10392, 14;
	mov.b64 	%rd12684, {%r10394, %r10393};
	shf.r.wrap.b32 	%r10395, %r10392, %r10391, 18;
	shf.r.wrap.b32 	%r10396, %r10391, %r10392, 18;
	mov.b64 	%rd12685, {%r10396, %r10395};
	xor.b64  	%rd12686, %rd12684, %rd12685;
	shf.l.wrap.b32 	%r10397, %r10391, %r10392, 23;
	shf.l.wrap.b32 	%r10398, %r10392, %r10391, 23;
	mov.b64 	%rd12687, {%r10398, %r10397};
	xor.b64  	%rd12688, %rd12686, %rd12687;
	and.b64  	%rd12689, %rd12682, %rd12657;
	not.b64 	%rd12690, %rd12682;
	and.b64  	%rd12691, %rd12632, %rd12690;
	or.b64  	%rd12692, %rd12689, %rd12691;
	add.s64 	%rd12693, %rd12692, %rd12607;
	add.s64 	%rd12694, %rd12693, %rd12688;
	add.s64 	%rd12695, %rd12694, %rd83;
	add.s64 	%rd12696, %rd12695, %rd11160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10399,%dummy}, %rd12683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10400}, %rd12683;
	}
	shf.r.wrap.b32 	%r10401, %r10400, %r10399, 28;
	shf.r.wrap.b32 	%r10402, %r10399, %r10400, 28;
	mov.b64 	%rd12697, {%r10402, %r10401};
	shf.l.wrap.b32 	%r10403, %r10399, %r10400, 30;
	shf.l.wrap.b32 	%r10404, %r10400, %r10399, 30;
	mov.b64 	%rd12698, {%r10404, %r10403};
	xor.b64  	%rd12699, %rd12697, %rd12698;
	shf.l.wrap.b32 	%r10405, %r10399, %r10400, 25;
	shf.l.wrap.b32 	%r10406, %r10400, %r10399, 25;
	mov.b64 	%rd12700, {%r10406, %r10405};
	xor.b64  	%rd12701, %rd12699, %rd12700;
	xor.b64  	%rd12702, %rd12658, %rd12633;
	and.b64  	%rd12703, %rd12683, %rd12702;
	and.b64  	%rd12704, %rd12658, %rd12633;
	xor.b64  	%rd12705, %rd12703, %rd12704;
	add.s64 	%rd12706, %rd12701, %rd12705;
	add.s64 	%rd12707, %rd12696, %rd12608;
	add.s64 	%rd12708, %rd12706, %rd12696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10407,%dummy}, %rd12707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10408}, %rd12707;
	}
	shf.r.wrap.b32 	%r10409, %r10408, %r10407, 14;
	shf.r.wrap.b32 	%r10410, %r10407, %r10408, 14;
	mov.b64 	%rd12709, {%r10410, %r10409};
	shf.r.wrap.b32 	%r10411, %r10408, %r10407, 18;
	shf.r.wrap.b32 	%r10412, %r10407, %r10408, 18;
	mov.b64 	%rd12710, {%r10412, %r10411};
	xor.b64  	%rd12711, %rd12709, %rd12710;
	shf.l.wrap.b32 	%r10413, %r10407, %r10408, 23;
	shf.l.wrap.b32 	%r10414, %r10408, %r10407, 23;
	mov.b64 	%rd12712, {%r10414, %r10413};
	xor.b64  	%rd12713, %rd12711, %rd12712;
	and.b64  	%rd12714, %rd12707, %rd12682;
	not.b64 	%rd12715, %rd12707;
	and.b64  	%rd12716, %rd12657, %rd12715;
	or.b64  	%rd12717, %rd12714, %rd12716;
	add.s64 	%rd12718, %rd12717, %rd12632;
	add.s64 	%rd12719, %rd12718, %rd12713;
	add.s64 	%rd12720, %rd12719, %rd84;
	add.s64 	%rd12721, %rd12720, %rd11173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10415,%dummy}, %rd12708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10416}, %rd12708;
	}
	shf.r.wrap.b32 	%r10417, %r10416, %r10415, 28;
	shf.r.wrap.b32 	%r10418, %r10415, %r10416, 28;
	mov.b64 	%rd12722, {%r10418, %r10417};
	shf.l.wrap.b32 	%r10419, %r10415, %r10416, 30;
	shf.l.wrap.b32 	%r10420, %r10416, %r10415, 30;
	mov.b64 	%rd12723, {%r10420, %r10419};
	xor.b64  	%rd12724, %rd12722, %rd12723;
	shf.l.wrap.b32 	%r10421, %r10415, %r10416, 25;
	shf.l.wrap.b32 	%r10422, %r10416, %r10415, 25;
	mov.b64 	%rd12725, {%r10422, %r10421};
	xor.b64  	%rd12726, %rd12724, %rd12725;
	xor.b64  	%rd12727, %rd12683, %rd12658;
	and.b64  	%rd12728, %rd12708, %rd12727;
	and.b64  	%rd12729, %rd12683, %rd12658;
	xor.b64  	%rd12730, %rd12728, %rd12729;
	add.s64 	%rd12731, %rd12726, %rd12730;
	add.s64 	%rd12732, %rd12721, %rd12633;
	add.s64 	%rd12733, %rd12731, %rd12721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10423,%dummy}, %rd12732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10424}, %rd12732;
	}
	shf.r.wrap.b32 	%r10425, %r10424, %r10423, 14;
	shf.r.wrap.b32 	%r10426, %r10423, %r10424, 14;
	mov.b64 	%rd12734, {%r10426, %r10425};
	shf.r.wrap.b32 	%r10427, %r10424, %r10423, 18;
	shf.r.wrap.b32 	%r10428, %r10423, %r10424, 18;
	mov.b64 	%rd12735, {%r10428, %r10427};
	xor.b64  	%rd12736, %rd12734, %rd12735;
	shf.l.wrap.b32 	%r10429, %r10423, %r10424, 23;
	shf.l.wrap.b32 	%r10430, %r10424, %r10423, 23;
	mov.b64 	%rd12737, {%r10430, %r10429};
	xor.b64  	%rd12738, %rd12736, %rd12737;
	and.b64  	%rd12739, %rd12732, %rd12707;
	not.b64 	%rd12740, %rd12732;
	and.b64  	%rd12741, %rd12682, %rd12740;
	or.b64  	%rd12742, %rd12739, %rd12741;
	add.s64 	%rd12743, %rd12742, %rd12657;
	add.s64 	%rd12744, %rd12743, %rd12738;
	add.s64 	%rd12745, %rd12744, %rd85;
	add.s64 	%rd12746, %rd12745, %rd11186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10431,%dummy}, %rd12733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10432}, %rd12733;
	}
	shf.r.wrap.b32 	%r10433, %r10432, %r10431, 28;
	shf.r.wrap.b32 	%r10434, %r10431, %r10432, 28;
	mov.b64 	%rd12747, {%r10434, %r10433};
	shf.l.wrap.b32 	%r10435, %r10431, %r10432, 30;
	shf.l.wrap.b32 	%r10436, %r10432, %r10431, 30;
	mov.b64 	%rd12748, {%r10436, %r10435};
	xor.b64  	%rd12749, %rd12747, %rd12748;
	shf.l.wrap.b32 	%r10437, %r10431, %r10432, 25;
	shf.l.wrap.b32 	%r10438, %r10432, %r10431, 25;
	mov.b64 	%rd12750, {%r10438, %r10437};
	xor.b64  	%rd12751, %rd12749, %rd12750;
	xor.b64  	%rd12752, %rd12708, %rd12683;
	and.b64  	%rd12753, %rd12733, %rd12752;
	and.b64  	%rd12754, %rd12708, %rd12683;
	xor.b64  	%rd12755, %rd12753, %rd12754;
	add.s64 	%rd12756, %rd12751, %rd12755;
	add.s64 	%rd12757, %rd12746, %rd12658;
	add.s64 	%rd12758, %rd12756, %rd12746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10439,%dummy}, %rd12757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10440}, %rd12757;
	}
	shf.r.wrap.b32 	%r10441, %r10440, %r10439, 14;
	shf.r.wrap.b32 	%r10442, %r10439, %r10440, 14;
	mov.b64 	%rd12759, {%r10442, %r10441};
	shf.r.wrap.b32 	%r10443, %r10440, %r10439, 18;
	shf.r.wrap.b32 	%r10444, %r10439, %r10440, 18;
	mov.b64 	%rd12760, {%r10444, %r10443};
	xor.b64  	%rd12761, %rd12759, %rd12760;
	shf.l.wrap.b32 	%r10445, %r10439, %r10440, 23;
	shf.l.wrap.b32 	%r10446, %r10440, %r10439, 23;
	mov.b64 	%rd12762, {%r10446, %r10445};
	xor.b64  	%rd12763, %rd12761, %rd12762;
	and.b64  	%rd12764, %rd12757, %rd12732;
	not.b64 	%rd12765, %rd12757;
	and.b64  	%rd12766, %rd12707, %rd12765;
	or.b64  	%rd12767, %rd12764, %rd12766;
	add.s64 	%rd12768, %rd12767, %rd12682;
	add.s64 	%rd12769, %rd12768, %rd12763;
	add.s64 	%rd12770, %rd12769, %rd86;
	add.s64 	%rd12771, %rd12770, %rd11199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10447,%dummy}, %rd12758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10448}, %rd12758;
	}
	shf.r.wrap.b32 	%r10449, %r10448, %r10447, 28;
	shf.r.wrap.b32 	%r10450, %r10447, %r10448, 28;
	mov.b64 	%rd12772, {%r10450, %r10449};
	shf.l.wrap.b32 	%r10451, %r10447, %r10448, 30;
	shf.l.wrap.b32 	%r10452, %r10448, %r10447, 30;
	mov.b64 	%rd12773, {%r10452, %r10451};
	xor.b64  	%rd12774, %rd12772, %rd12773;
	shf.l.wrap.b32 	%r10453, %r10447, %r10448, 25;
	shf.l.wrap.b32 	%r10454, %r10448, %r10447, 25;
	mov.b64 	%rd12775, {%r10454, %r10453};
	xor.b64  	%rd12776, %rd12774, %rd12775;
	xor.b64  	%rd12777, %rd12733, %rd12708;
	and.b64  	%rd12778, %rd12758, %rd12777;
	and.b64  	%rd12779, %rd12733, %rd12708;
	xor.b64  	%rd12780, %rd12778, %rd12779;
	add.s64 	%rd12781, %rd12776, %rd12780;
	add.s64 	%rd12782, %rd12771, %rd12683;
	add.s64 	%rd12783, %rd12781, %rd12771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10455,%dummy}, %rd12782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10456}, %rd12782;
	}
	shf.r.wrap.b32 	%r10457, %r10456, %r10455, 14;
	shf.r.wrap.b32 	%r10458, %r10455, %r10456, 14;
	mov.b64 	%rd12784, {%r10458, %r10457};
	shf.r.wrap.b32 	%r10459, %r10456, %r10455, 18;
	shf.r.wrap.b32 	%r10460, %r10455, %r10456, 18;
	mov.b64 	%rd12785, {%r10460, %r10459};
	xor.b64  	%rd12786, %rd12784, %rd12785;
	shf.l.wrap.b32 	%r10461, %r10455, %r10456, 23;
	shf.l.wrap.b32 	%r10462, %r10456, %r10455, 23;
	mov.b64 	%rd12787, {%r10462, %r10461};
	xor.b64  	%rd12788, %rd12786, %rd12787;
	and.b64  	%rd12789, %rd12782, %rd12757;
	not.b64 	%rd12790, %rd12782;
	and.b64  	%rd12791, %rd12732, %rd12790;
	or.b64  	%rd12792, %rd12789, %rd12791;
	add.s64 	%rd12793, %rd12792, %rd12707;
	add.s64 	%rd12794, %rd12793, %rd12788;
	add.s64 	%rd12795, %rd12794, %rd87;
	add.s64 	%rd12796, %rd12795, %rd11212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10463,%dummy}, %rd12783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10464}, %rd12783;
	}
	shf.r.wrap.b32 	%r10465, %r10464, %r10463, 28;
	shf.r.wrap.b32 	%r10466, %r10463, %r10464, 28;
	mov.b64 	%rd12797, {%r10466, %r10465};
	shf.l.wrap.b32 	%r10467, %r10463, %r10464, 30;
	shf.l.wrap.b32 	%r10468, %r10464, %r10463, 30;
	mov.b64 	%rd12798, {%r10468, %r10467};
	xor.b64  	%rd12799, %rd12797, %rd12798;
	shf.l.wrap.b32 	%r10469, %r10463, %r10464, 25;
	shf.l.wrap.b32 	%r10470, %r10464, %r10463, 25;
	mov.b64 	%rd12800, {%r10470, %r10469};
	xor.b64  	%rd12801, %rd12799, %rd12800;
	xor.b64  	%rd12802, %rd12758, %rd12733;
	and.b64  	%rd12803, %rd12783, %rd12802;
	and.b64  	%rd12804, %rd12758, %rd12733;
	xor.b64  	%rd12805, %rd12803, %rd12804;
	add.s64 	%rd12806, %rd12801, %rd12805;
	add.s64 	%rd12807, %rd12796, %rd12708;
	add.s64 	%rd12808, %rd12806, %rd12796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10471,%dummy}, %rd12807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10472}, %rd12807;
	}
	shf.r.wrap.b32 	%r10473, %r10472, %r10471, 14;
	shf.r.wrap.b32 	%r10474, %r10471, %r10472, 14;
	mov.b64 	%rd12809, {%r10474, %r10473};
	shf.r.wrap.b32 	%r10475, %r10472, %r10471, 18;
	shf.r.wrap.b32 	%r10476, %r10471, %r10472, 18;
	mov.b64 	%rd12810, {%r10476, %r10475};
	xor.b64  	%rd12811, %rd12809, %rd12810;
	shf.l.wrap.b32 	%r10477, %r10471, %r10472, 23;
	shf.l.wrap.b32 	%r10478, %r10472, %r10471, 23;
	mov.b64 	%rd12812, {%r10478, %r10477};
	xor.b64  	%rd12813, %rd12811, %rd12812;
	and.b64  	%rd12814, %rd12807, %rd12782;
	not.b64 	%rd12815, %rd12807;
	and.b64  	%rd12816, %rd12757, %rd12815;
	or.b64  	%rd12817, %rd12814, %rd12816;
	add.s64 	%rd12818, %rd12817, %rd12732;
	add.s64 	%rd12819, %rd12818, %rd12813;
	add.s64 	%rd12820, %rd12819, %rd88;
	add.s64 	%rd12821, %rd12820, %rd11225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10479,%dummy}, %rd12808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10480}, %rd12808;
	}
	shf.r.wrap.b32 	%r10481, %r10480, %r10479, 28;
	shf.r.wrap.b32 	%r10482, %r10479, %r10480, 28;
	mov.b64 	%rd12822, {%r10482, %r10481};
	shf.l.wrap.b32 	%r10483, %r10479, %r10480, 30;
	shf.l.wrap.b32 	%r10484, %r10480, %r10479, 30;
	mov.b64 	%rd12823, {%r10484, %r10483};
	xor.b64  	%rd12824, %rd12822, %rd12823;
	shf.l.wrap.b32 	%r10485, %r10479, %r10480, 25;
	shf.l.wrap.b32 	%r10486, %r10480, %r10479, 25;
	mov.b64 	%rd12825, {%r10486, %r10485};
	xor.b64  	%rd12826, %rd12824, %rd12825;
	xor.b64  	%rd12827, %rd12783, %rd12758;
	and.b64  	%rd12828, %rd12808, %rd12827;
	and.b64  	%rd12829, %rd12783, %rd12758;
	xor.b64  	%rd12830, %rd12828, %rd12829;
	add.s64 	%rd12831, %rd12826, %rd12830;
	add.s64 	%rd12832, %rd12821, %rd12733;
	add.s64 	%rd12833, %rd12831, %rd12821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10487,%dummy}, %rd12832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10488}, %rd12832;
	}
	shf.r.wrap.b32 	%r10489, %r10488, %r10487, 14;
	shf.r.wrap.b32 	%r10490, %r10487, %r10488, 14;
	mov.b64 	%rd12834, {%r10490, %r10489};
	shf.r.wrap.b32 	%r10491, %r10488, %r10487, 18;
	shf.r.wrap.b32 	%r10492, %r10487, %r10488, 18;
	mov.b64 	%rd12835, {%r10492, %r10491};
	xor.b64  	%rd12836, %rd12834, %rd12835;
	shf.l.wrap.b32 	%r10493, %r10487, %r10488, 23;
	shf.l.wrap.b32 	%r10494, %r10488, %r10487, 23;
	mov.b64 	%rd12837, {%r10494, %r10493};
	xor.b64  	%rd12838, %rd12836, %rd12837;
	and.b64  	%rd12839, %rd12832, %rd12807;
	not.b64 	%rd12840, %rd12832;
	and.b64  	%rd12841, %rd12782, %rd12840;
	or.b64  	%rd12842, %rd12839, %rd12841;
	add.s64 	%rd12843, %rd12842, %rd12757;
	add.s64 	%rd12844, %rd12843, %rd12838;
	add.s64 	%rd12845, %rd12844, %rd89;
	add.s64 	%rd12846, %rd12845, %rd11238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10495,%dummy}, %rd12833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10496}, %rd12833;
	}
	shf.r.wrap.b32 	%r10497, %r10496, %r10495, 28;
	shf.r.wrap.b32 	%r10498, %r10495, %r10496, 28;
	mov.b64 	%rd12847, {%r10498, %r10497};
	shf.l.wrap.b32 	%r10499, %r10495, %r10496, 30;
	shf.l.wrap.b32 	%r10500, %r10496, %r10495, 30;
	mov.b64 	%rd12848, {%r10500, %r10499};
	xor.b64  	%rd12849, %rd12847, %rd12848;
	shf.l.wrap.b32 	%r10501, %r10495, %r10496, 25;
	shf.l.wrap.b32 	%r10502, %r10496, %r10495, 25;
	mov.b64 	%rd12850, {%r10502, %r10501};
	xor.b64  	%rd12851, %rd12849, %rd12850;
	xor.b64  	%rd12852, %rd12808, %rd12783;
	and.b64  	%rd12853, %rd12833, %rd12852;
	and.b64  	%rd12854, %rd12808, %rd12783;
	xor.b64  	%rd12855, %rd12853, %rd12854;
	add.s64 	%rd12856, %rd12851, %rd12855;
	add.s64 	%rd12857, %rd12846, %rd12758;
	add.s64 	%rd12858, %rd12856, %rd12846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10503,%dummy}, %rd12857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10504}, %rd12857;
	}
	shf.r.wrap.b32 	%r10505, %r10504, %r10503, 14;
	shf.r.wrap.b32 	%r10506, %r10503, %r10504, 14;
	mov.b64 	%rd12859, {%r10506, %r10505};
	shf.r.wrap.b32 	%r10507, %r10504, %r10503, 18;
	shf.r.wrap.b32 	%r10508, %r10503, %r10504, 18;
	mov.b64 	%rd12860, {%r10508, %r10507};
	xor.b64  	%rd12861, %rd12859, %rd12860;
	shf.l.wrap.b32 	%r10509, %r10503, %r10504, 23;
	shf.l.wrap.b32 	%r10510, %r10504, %r10503, 23;
	mov.b64 	%rd12862, {%r10510, %r10509};
	xor.b64  	%rd12863, %rd12861, %rd12862;
	and.b64  	%rd12864, %rd12857, %rd12832;
	not.b64 	%rd12865, %rd12857;
	and.b64  	%rd12866, %rd12807, %rd12865;
	or.b64  	%rd12867, %rd12864, %rd12866;
	add.s64 	%rd12868, %rd12867, %rd12782;
	add.s64 	%rd12869, %rd12868, %rd12863;
	add.s64 	%rd12870, %rd12869, %rd90;
	add.s64 	%rd12871, %rd12870, %rd11251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10511,%dummy}, %rd12858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10512}, %rd12858;
	}
	shf.r.wrap.b32 	%r10513, %r10512, %r10511, 28;
	shf.r.wrap.b32 	%r10514, %r10511, %r10512, 28;
	mov.b64 	%rd12872, {%r10514, %r10513};
	shf.l.wrap.b32 	%r10515, %r10511, %r10512, 30;
	shf.l.wrap.b32 	%r10516, %r10512, %r10511, 30;
	mov.b64 	%rd12873, {%r10516, %r10515};
	xor.b64  	%rd12874, %rd12872, %rd12873;
	shf.l.wrap.b32 	%r10517, %r10511, %r10512, 25;
	shf.l.wrap.b32 	%r10518, %r10512, %r10511, 25;
	mov.b64 	%rd12875, {%r10518, %r10517};
	xor.b64  	%rd12876, %rd12874, %rd12875;
	xor.b64  	%rd12877, %rd12833, %rd12808;
	and.b64  	%rd12878, %rd12858, %rd12877;
	and.b64  	%rd12879, %rd12833, %rd12808;
	xor.b64  	%rd12880, %rd12878, %rd12879;
	add.s64 	%rd12881, %rd12876, %rd12880;
	add.s64 	%rd12882, %rd12871, %rd12783;
	add.s64 	%rd12883, %rd12881, %rd12871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10519,%dummy}, %rd12882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10520}, %rd12882;
	}
	shf.r.wrap.b32 	%r10521, %r10520, %r10519, 14;
	shf.r.wrap.b32 	%r10522, %r10519, %r10520, 14;
	mov.b64 	%rd12884, {%r10522, %r10521};
	shf.r.wrap.b32 	%r10523, %r10520, %r10519, 18;
	shf.r.wrap.b32 	%r10524, %r10519, %r10520, 18;
	mov.b64 	%rd12885, {%r10524, %r10523};
	xor.b64  	%rd12886, %rd12884, %rd12885;
	shf.l.wrap.b32 	%r10525, %r10519, %r10520, 23;
	shf.l.wrap.b32 	%r10526, %r10520, %r10519, 23;
	mov.b64 	%rd12887, {%r10526, %r10525};
	xor.b64  	%rd12888, %rd12886, %rd12887;
	and.b64  	%rd12889, %rd12882, %rd12857;
	not.b64 	%rd12890, %rd12882;
	and.b64  	%rd12891, %rd12832, %rd12890;
	or.b64  	%rd12892, %rd12889, %rd12891;
	add.s64 	%rd12893, %rd12892, %rd12807;
	add.s64 	%rd12894, %rd12893, %rd12888;
	add.s64 	%rd12895, %rd12894, %rd91;
	add.s64 	%rd12896, %rd12895, %rd11264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10527,%dummy}, %rd12883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10528}, %rd12883;
	}
	shf.r.wrap.b32 	%r10529, %r10528, %r10527, 28;
	shf.r.wrap.b32 	%r10530, %r10527, %r10528, 28;
	mov.b64 	%rd12897, {%r10530, %r10529};
	shf.l.wrap.b32 	%r10531, %r10527, %r10528, 30;
	shf.l.wrap.b32 	%r10532, %r10528, %r10527, 30;
	mov.b64 	%rd12898, {%r10532, %r10531};
	xor.b64  	%rd12899, %rd12897, %rd12898;
	shf.l.wrap.b32 	%r10533, %r10527, %r10528, 25;
	shf.l.wrap.b32 	%r10534, %r10528, %r10527, 25;
	mov.b64 	%rd12900, {%r10534, %r10533};
	xor.b64  	%rd12901, %rd12899, %rd12900;
	xor.b64  	%rd12902, %rd12858, %rd12833;
	and.b64  	%rd12903, %rd12883, %rd12902;
	and.b64  	%rd12904, %rd12858, %rd12833;
	xor.b64  	%rd12905, %rd12903, %rd12904;
	add.s64 	%rd12906, %rd12901, %rd12905;
	add.s64 	%rd12907, %rd12896, %rd12808;
	add.s64 	%rd12908, %rd12906, %rd12896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10535,%dummy}, %rd12907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10536}, %rd12907;
	}
	shf.r.wrap.b32 	%r10537, %r10536, %r10535, 14;
	shf.r.wrap.b32 	%r10538, %r10535, %r10536, 14;
	mov.b64 	%rd12909, {%r10538, %r10537};
	shf.r.wrap.b32 	%r10539, %r10536, %r10535, 18;
	shf.r.wrap.b32 	%r10540, %r10535, %r10536, 18;
	mov.b64 	%rd12910, {%r10540, %r10539};
	xor.b64  	%rd12911, %rd12909, %rd12910;
	shf.l.wrap.b32 	%r10541, %r10535, %r10536, 23;
	shf.l.wrap.b32 	%r10542, %r10536, %r10535, 23;
	mov.b64 	%rd12912, {%r10542, %r10541};
	xor.b64  	%rd12913, %rd12911, %rd12912;
	and.b64  	%rd12914, %rd12907, %rd12882;
	not.b64 	%rd12915, %rd12907;
	and.b64  	%rd12916, %rd12857, %rd12915;
	or.b64  	%rd12917, %rd12914, %rd12916;
	add.s64 	%rd12918, %rd12917, %rd12832;
	add.s64 	%rd12919, %rd12918, %rd12913;
	add.s64 	%rd12920, %rd12919, %rd92;
	add.s64 	%rd12921, %rd12920, %rd11277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10543,%dummy}, %rd12908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10544}, %rd12908;
	}
	shf.r.wrap.b32 	%r10545, %r10544, %r10543, 28;
	shf.r.wrap.b32 	%r10546, %r10543, %r10544, 28;
	mov.b64 	%rd12922, {%r10546, %r10545};
	shf.l.wrap.b32 	%r10547, %r10543, %r10544, 30;
	shf.l.wrap.b32 	%r10548, %r10544, %r10543, 30;
	mov.b64 	%rd12923, {%r10548, %r10547};
	xor.b64  	%rd12924, %rd12922, %rd12923;
	shf.l.wrap.b32 	%r10549, %r10543, %r10544, 25;
	shf.l.wrap.b32 	%r10550, %r10544, %r10543, 25;
	mov.b64 	%rd12925, {%r10550, %r10549};
	xor.b64  	%rd12926, %rd12924, %rd12925;
	xor.b64  	%rd12927, %rd12883, %rd12858;
	and.b64  	%rd12928, %rd12908, %rd12927;
	and.b64  	%rd12929, %rd12883, %rd12858;
	xor.b64  	%rd12930, %rd12928, %rd12929;
	add.s64 	%rd12931, %rd12926, %rd12930;
	add.s64 	%rd12932, %rd12921, %rd12833;
	add.s64 	%rd12933, %rd12931, %rd12921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10551,%dummy}, %rd12932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10552}, %rd12932;
	}
	shf.r.wrap.b32 	%r10553, %r10552, %r10551, 14;
	shf.r.wrap.b32 	%r10554, %r10551, %r10552, 14;
	mov.b64 	%rd12934, {%r10554, %r10553};
	shf.r.wrap.b32 	%r10555, %r10552, %r10551, 18;
	shf.r.wrap.b32 	%r10556, %r10551, %r10552, 18;
	mov.b64 	%rd12935, {%r10556, %r10555};
	xor.b64  	%rd12936, %rd12934, %rd12935;
	shf.l.wrap.b32 	%r10557, %r10551, %r10552, 23;
	shf.l.wrap.b32 	%r10558, %r10552, %r10551, 23;
	mov.b64 	%rd12937, {%r10558, %r10557};
	xor.b64  	%rd12938, %rd12936, %rd12937;
	and.b64  	%rd12939, %rd12932, %rd12907;
	not.b64 	%rd12940, %rd12932;
	and.b64  	%rd12941, %rd12882, %rd12940;
	or.b64  	%rd12942, %rd12939, %rd12941;
	add.s64 	%rd12943, %rd12942, %rd12857;
	add.s64 	%rd12944, %rd12943, %rd12938;
	add.s64 	%rd12945, %rd12944, %rd93;
	add.s64 	%rd12946, %rd12945, %rd11290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10559,%dummy}, %rd12933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10560}, %rd12933;
	}
	shf.r.wrap.b32 	%r10561, %r10560, %r10559, 28;
	shf.r.wrap.b32 	%r10562, %r10559, %r10560, 28;
	mov.b64 	%rd12947, {%r10562, %r10561};
	shf.l.wrap.b32 	%r10563, %r10559, %r10560, 30;
	shf.l.wrap.b32 	%r10564, %r10560, %r10559, 30;
	mov.b64 	%rd12948, {%r10564, %r10563};
	xor.b64  	%rd12949, %rd12947, %rd12948;
	shf.l.wrap.b32 	%r10565, %r10559, %r10560, 25;
	shf.l.wrap.b32 	%r10566, %r10560, %r10559, 25;
	mov.b64 	%rd12950, {%r10566, %r10565};
	xor.b64  	%rd12951, %rd12949, %rd12950;
	xor.b64  	%rd12952, %rd12908, %rd12883;
	and.b64  	%rd12953, %rd12933, %rd12952;
	and.b64  	%rd12954, %rd12908, %rd12883;
	xor.b64  	%rd12955, %rd12953, %rd12954;
	add.s64 	%rd12956, %rd12951, %rd12955;
	add.s64 	%rd12957, %rd12946, %rd12858;
	add.s64 	%rd12958, %rd12956, %rd12946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10567,%dummy}, %rd12957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10568}, %rd12957;
	}
	shf.r.wrap.b32 	%r10569, %r10568, %r10567, 14;
	shf.r.wrap.b32 	%r10570, %r10567, %r10568, 14;
	mov.b64 	%rd12959, {%r10570, %r10569};
	shf.r.wrap.b32 	%r10571, %r10568, %r10567, 18;
	shf.r.wrap.b32 	%r10572, %r10567, %r10568, 18;
	mov.b64 	%rd12960, {%r10572, %r10571};
	xor.b64  	%rd12961, %rd12959, %rd12960;
	shf.l.wrap.b32 	%r10573, %r10567, %r10568, 23;
	shf.l.wrap.b32 	%r10574, %r10568, %r10567, 23;
	mov.b64 	%rd12962, {%r10574, %r10573};
	xor.b64  	%rd12963, %rd12961, %rd12962;
	and.b64  	%rd12964, %rd12957, %rd12932;
	not.b64 	%rd12965, %rd12957;
	and.b64  	%rd12966, %rd12907, %rd12965;
	or.b64  	%rd12967, %rd12964, %rd12966;
	add.s64 	%rd12968, %rd12967, %rd12882;
	add.s64 	%rd12969, %rd12968, %rd12963;
	add.s64 	%rd12970, %rd12969, %rd94;
	add.s64 	%rd12971, %rd12970, %rd11303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10575,%dummy}, %rd12958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10576}, %rd12958;
	}
	shf.r.wrap.b32 	%r10577, %r10576, %r10575, 28;
	shf.r.wrap.b32 	%r10578, %r10575, %r10576, 28;
	mov.b64 	%rd12972, {%r10578, %r10577};
	shf.l.wrap.b32 	%r10579, %r10575, %r10576, 30;
	shf.l.wrap.b32 	%r10580, %r10576, %r10575, 30;
	mov.b64 	%rd12973, {%r10580, %r10579};
	xor.b64  	%rd12974, %rd12972, %rd12973;
	shf.l.wrap.b32 	%r10581, %r10575, %r10576, 25;
	shf.l.wrap.b32 	%r10582, %r10576, %r10575, 25;
	mov.b64 	%rd12975, {%r10582, %r10581};
	xor.b64  	%rd12976, %rd12974, %rd12975;
	xor.b64  	%rd12977, %rd12933, %rd12908;
	and.b64  	%rd12978, %rd12958, %rd12977;
	and.b64  	%rd12979, %rd12933, %rd12908;
	xor.b64  	%rd12980, %rd12978, %rd12979;
	add.s64 	%rd12981, %rd12976, %rd12980;
	add.s64 	%rd12982, %rd12971, %rd12883;
	add.s64 	%rd12983, %rd12981, %rd12971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10583,%dummy}, %rd12982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10584}, %rd12982;
	}
	shf.r.wrap.b32 	%r10585, %r10584, %r10583, 14;
	shf.r.wrap.b32 	%r10586, %r10583, %r10584, 14;
	mov.b64 	%rd12984, {%r10586, %r10585};
	shf.r.wrap.b32 	%r10587, %r10584, %r10583, 18;
	shf.r.wrap.b32 	%r10588, %r10583, %r10584, 18;
	mov.b64 	%rd12985, {%r10588, %r10587};
	xor.b64  	%rd12986, %rd12984, %rd12985;
	shf.l.wrap.b32 	%r10589, %r10583, %r10584, 23;
	shf.l.wrap.b32 	%r10590, %r10584, %r10583, 23;
	mov.b64 	%rd12987, {%r10590, %r10589};
	xor.b64  	%rd12988, %rd12986, %rd12987;
	and.b64  	%rd12989, %rd12982, %rd12957;
	not.b64 	%rd12990, %rd12982;
	and.b64  	%rd12991, %rd12932, %rd12990;
	or.b64  	%rd12992, %rd12989, %rd12991;
	add.s64 	%rd12993, %rd12992, %rd12907;
	add.s64 	%rd12994, %rd12993, %rd12988;
	add.s64 	%rd12995, %rd12994, %rd95;
	add.s64 	%rd12996, %rd12995, %rd11316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10591,%dummy}, %rd12983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10592}, %rd12983;
	}
	shf.r.wrap.b32 	%r10593, %r10592, %r10591, 28;
	shf.r.wrap.b32 	%r10594, %r10591, %r10592, 28;
	mov.b64 	%rd12997, {%r10594, %r10593};
	shf.l.wrap.b32 	%r10595, %r10591, %r10592, 30;
	shf.l.wrap.b32 	%r10596, %r10592, %r10591, 30;
	mov.b64 	%rd12998, {%r10596, %r10595};
	xor.b64  	%rd12999, %rd12997, %rd12998;
	shf.l.wrap.b32 	%r10597, %r10591, %r10592, 25;
	shf.l.wrap.b32 	%r10598, %r10592, %r10591, 25;
	mov.b64 	%rd13000, {%r10598, %r10597};
	xor.b64  	%rd13001, %rd12999, %rd13000;
	xor.b64  	%rd13002, %rd12958, %rd12933;
	and.b64  	%rd13003, %rd12983, %rd13002;
	and.b64  	%rd13004, %rd12958, %rd12933;
	xor.b64  	%rd13005, %rd13003, %rd13004;
	add.s64 	%rd13006, %rd13001, %rd13005;
	add.s64 	%rd13007, %rd12996, %rd12908;
	add.s64 	%rd13008, %rd13006, %rd12996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10599,%dummy}, %rd13007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10600}, %rd13007;
	}
	shf.r.wrap.b32 	%r10601, %r10600, %r10599, 14;
	shf.r.wrap.b32 	%r10602, %r10599, %r10600, 14;
	mov.b64 	%rd13009, {%r10602, %r10601};
	shf.r.wrap.b32 	%r10603, %r10600, %r10599, 18;
	shf.r.wrap.b32 	%r10604, %r10599, %r10600, 18;
	mov.b64 	%rd13010, {%r10604, %r10603};
	xor.b64  	%rd13011, %rd13009, %rd13010;
	shf.l.wrap.b32 	%r10605, %r10599, %r10600, 23;
	shf.l.wrap.b32 	%r10606, %r10600, %r10599, 23;
	mov.b64 	%rd13012, {%r10606, %r10605};
	xor.b64  	%rd13013, %rd13011, %rd13012;
	and.b64  	%rd13014, %rd13007, %rd12982;
	not.b64 	%rd13015, %rd13007;
	and.b64  	%rd13016, %rd12957, %rd13015;
	or.b64  	%rd13017, %rd13014, %rd13016;
	add.s64 	%rd13018, %rd13017, %rd12932;
	add.s64 	%rd13019, %rd13018, %rd13013;
	add.s64 	%rd13020, %rd13019, %rd96;
	add.s64 	%rd13021, %rd13020, %rd11329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10607,%dummy}, %rd13008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10608}, %rd13008;
	}
	shf.r.wrap.b32 	%r10609, %r10608, %r10607, 28;
	shf.r.wrap.b32 	%r10610, %r10607, %r10608, 28;
	mov.b64 	%rd13022, {%r10610, %r10609};
	shf.l.wrap.b32 	%r10611, %r10607, %r10608, 30;
	shf.l.wrap.b32 	%r10612, %r10608, %r10607, 30;
	mov.b64 	%rd13023, {%r10612, %r10611};
	xor.b64  	%rd13024, %rd13022, %rd13023;
	shf.l.wrap.b32 	%r10613, %r10607, %r10608, 25;
	shf.l.wrap.b32 	%r10614, %r10608, %r10607, 25;
	mov.b64 	%rd13025, {%r10614, %r10613};
	xor.b64  	%rd13026, %rd13024, %rd13025;
	xor.b64  	%rd13027, %rd12983, %rd12958;
	and.b64  	%rd13028, %rd13008, %rd13027;
	and.b64  	%rd13029, %rd12983, %rd12958;
	xor.b64  	%rd13030, %rd13028, %rd13029;
	add.s64 	%rd13031, %rd13026, %rd13030;
	add.s64 	%rd13032, %rd13021, %rd12933;
	add.s64 	%rd13033, %rd13031, %rd13021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10615,%dummy}, %rd13032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10616}, %rd13032;
	}
	shf.r.wrap.b32 	%r10617, %r10616, %r10615, 14;
	shf.r.wrap.b32 	%r10618, %r10615, %r10616, 14;
	mov.b64 	%rd13034, {%r10618, %r10617};
	shf.r.wrap.b32 	%r10619, %r10616, %r10615, 18;
	shf.r.wrap.b32 	%r10620, %r10615, %r10616, 18;
	mov.b64 	%rd13035, {%r10620, %r10619};
	xor.b64  	%rd13036, %rd13034, %rd13035;
	shf.l.wrap.b32 	%r10621, %r10615, %r10616, 23;
	shf.l.wrap.b32 	%r10622, %r10616, %r10615, 23;
	mov.b64 	%rd13037, {%r10622, %r10621};
	xor.b64  	%rd13038, %rd13036, %rd13037;
	and.b64  	%rd13039, %rd13032, %rd13007;
	not.b64 	%rd13040, %rd13032;
	and.b64  	%rd13041, %rd12982, %rd13040;
	or.b64  	%rd13042, %rd13039, %rd13041;
	add.s64 	%rd13043, %rd13042, %rd12957;
	add.s64 	%rd13044, %rd13043, %rd13038;
	add.s64 	%rd13045, %rd13044, %rd97;
	add.s64 	%rd13046, %rd13045, %rd11342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10623,%dummy}, %rd13033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10624}, %rd13033;
	}
	shf.r.wrap.b32 	%r10625, %r10624, %r10623, 28;
	shf.r.wrap.b32 	%r10626, %r10623, %r10624, 28;
	mov.b64 	%rd13047, {%r10626, %r10625};
	shf.l.wrap.b32 	%r10627, %r10623, %r10624, 30;
	shf.l.wrap.b32 	%r10628, %r10624, %r10623, 30;
	mov.b64 	%rd13048, {%r10628, %r10627};
	xor.b64  	%rd13049, %rd13047, %rd13048;
	shf.l.wrap.b32 	%r10629, %r10623, %r10624, 25;
	shf.l.wrap.b32 	%r10630, %r10624, %r10623, 25;
	mov.b64 	%rd13050, {%r10630, %r10629};
	xor.b64  	%rd13051, %rd13049, %rd13050;
	xor.b64  	%rd13052, %rd13008, %rd12983;
	and.b64  	%rd13053, %rd13033, %rd13052;
	and.b64  	%rd13054, %rd13008, %rd12983;
	xor.b64  	%rd13055, %rd13053, %rd13054;
	add.s64 	%rd13056, %rd13051, %rd13055;
	add.s64 	%rd13057, %rd13046, %rd12958;
	add.s64 	%rd13058, %rd13056, %rd13046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10631,%dummy}, %rd13057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10632}, %rd13057;
	}
	shf.r.wrap.b32 	%r10633, %r10632, %r10631, 14;
	shf.r.wrap.b32 	%r10634, %r10631, %r10632, 14;
	mov.b64 	%rd13059, {%r10634, %r10633};
	shf.r.wrap.b32 	%r10635, %r10632, %r10631, 18;
	shf.r.wrap.b32 	%r10636, %r10631, %r10632, 18;
	mov.b64 	%rd13060, {%r10636, %r10635};
	xor.b64  	%rd13061, %rd13059, %rd13060;
	shf.l.wrap.b32 	%r10637, %r10631, %r10632, 23;
	shf.l.wrap.b32 	%r10638, %r10632, %r10631, 23;
	mov.b64 	%rd13062, {%r10638, %r10637};
	xor.b64  	%rd13063, %rd13061, %rd13062;
	and.b64  	%rd13064, %rd13057, %rd13032;
	not.b64 	%rd13065, %rd13057;
	and.b64  	%rd13066, %rd13007, %rd13065;
	or.b64  	%rd13067, %rd13064, %rd13066;
	add.s64 	%rd13068, %rd13067, %rd12982;
	add.s64 	%rd13069, %rd13068, %rd13063;
	add.s64 	%rd13070, %rd13069, %rd98;
	add.s64 	%rd13071, %rd13070, %rd11355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10639,%dummy}, %rd13058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10640}, %rd13058;
	}
	shf.r.wrap.b32 	%r10641, %r10640, %r10639, 28;
	shf.r.wrap.b32 	%r10642, %r10639, %r10640, 28;
	mov.b64 	%rd13072, {%r10642, %r10641};
	shf.l.wrap.b32 	%r10643, %r10639, %r10640, 30;
	shf.l.wrap.b32 	%r10644, %r10640, %r10639, 30;
	mov.b64 	%rd13073, {%r10644, %r10643};
	xor.b64  	%rd13074, %rd13072, %rd13073;
	shf.l.wrap.b32 	%r10645, %r10639, %r10640, 25;
	shf.l.wrap.b32 	%r10646, %r10640, %r10639, 25;
	mov.b64 	%rd13075, {%r10646, %r10645};
	xor.b64  	%rd13076, %rd13074, %rd13075;
	xor.b64  	%rd13077, %rd13033, %rd13008;
	and.b64  	%rd13078, %rd13058, %rd13077;
	and.b64  	%rd13079, %rd13033, %rd13008;
	xor.b64  	%rd13080, %rd13078, %rd13079;
	add.s64 	%rd13081, %rd13076, %rd13080;
	add.s64 	%rd13082, %rd13071, %rd12983;
	add.s64 	%rd13083, %rd13081, %rd13071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10647,%dummy}, %rd13082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10648}, %rd13082;
	}
	shf.r.wrap.b32 	%r10649, %r10648, %r10647, 14;
	shf.r.wrap.b32 	%r10650, %r10647, %r10648, 14;
	mov.b64 	%rd13084, {%r10650, %r10649};
	shf.r.wrap.b32 	%r10651, %r10648, %r10647, 18;
	shf.r.wrap.b32 	%r10652, %r10647, %r10648, 18;
	mov.b64 	%rd13085, {%r10652, %r10651};
	xor.b64  	%rd13086, %rd13084, %rd13085;
	shf.l.wrap.b32 	%r10653, %r10647, %r10648, 23;
	shf.l.wrap.b32 	%r10654, %r10648, %r10647, 23;
	mov.b64 	%rd13087, {%r10654, %r10653};
	xor.b64  	%rd13088, %rd13086, %rd13087;
	and.b64  	%rd13089, %rd13082, %rd13057;
	not.b64 	%rd13090, %rd13082;
	and.b64  	%rd13091, %rd13032, %rd13090;
	or.b64  	%rd13092, %rd13089, %rd13091;
	add.s64 	%rd13093, %rd13092, %rd13007;
	add.s64 	%rd13094, %rd13093, %rd13088;
	add.s64 	%rd13095, %rd13094, %rd99;
	add.s64 	%rd13096, %rd13095, %rd11368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10655,%dummy}, %rd13083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10656}, %rd13083;
	}
	shf.r.wrap.b32 	%r10657, %r10656, %r10655, 28;
	shf.r.wrap.b32 	%r10658, %r10655, %r10656, 28;
	mov.b64 	%rd13097, {%r10658, %r10657};
	shf.l.wrap.b32 	%r10659, %r10655, %r10656, 30;
	shf.l.wrap.b32 	%r10660, %r10656, %r10655, 30;
	mov.b64 	%rd13098, {%r10660, %r10659};
	xor.b64  	%rd13099, %rd13097, %rd13098;
	shf.l.wrap.b32 	%r10661, %r10655, %r10656, 25;
	shf.l.wrap.b32 	%r10662, %r10656, %r10655, 25;
	mov.b64 	%rd13100, {%r10662, %r10661};
	xor.b64  	%rd13101, %rd13099, %rd13100;
	xor.b64  	%rd13102, %rd13058, %rd13033;
	and.b64  	%rd13103, %rd13083, %rd13102;
	and.b64  	%rd13104, %rd13058, %rd13033;
	xor.b64  	%rd13105, %rd13103, %rd13104;
	add.s64 	%rd13106, %rd13101, %rd13105;
	add.s64 	%rd13107, %rd13096, %rd13008;
	add.s64 	%rd13108, %rd13106, %rd13096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10663,%dummy}, %rd13107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10664}, %rd13107;
	}
	shf.r.wrap.b32 	%r10665, %r10664, %r10663, 14;
	shf.r.wrap.b32 	%r10666, %r10663, %r10664, 14;
	mov.b64 	%rd13109, {%r10666, %r10665};
	shf.r.wrap.b32 	%r10667, %r10664, %r10663, 18;
	shf.r.wrap.b32 	%r10668, %r10663, %r10664, 18;
	mov.b64 	%rd13110, {%r10668, %r10667};
	xor.b64  	%rd13111, %rd13109, %rd13110;
	shf.l.wrap.b32 	%r10669, %r10663, %r10664, 23;
	shf.l.wrap.b32 	%r10670, %r10664, %r10663, 23;
	mov.b64 	%rd13112, {%r10670, %r10669};
	xor.b64  	%rd13113, %rd13111, %rd13112;
	and.b64  	%rd13114, %rd13107, %rd13082;
	not.b64 	%rd13115, %rd13107;
	and.b64  	%rd13116, %rd13057, %rd13115;
	or.b64  	%rd13117, %rd13114, %rd13116;
	add.s64 	%rd13118, %rd13117, %rd13032;
	add.s64 	%rd13119, %rd13118, %rd13113;
	add.s64 	%rd13120, %rd13119, %rd100;
	add.s64 	%rd13121, %rd13120, %rd11381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10671,%dummy}, %rd13108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10672}, %rd13108;
	}
	shf.r.wrap.b32 	%r10673, %r10672, %r10671, 28;
	shf.r.wrap.b32 	%r10674, %r10671, %r10672, 28;
	mov.b64 	%rd13122, {%r10674, %r10673};
	shf.l.wrap.b32 	%r10675, %r10671, %r10672, 30;
	shf.l.wrap.b32 	%r10676, %r10672, %r10671, 30;
	mov.b64 	%rd13123, {%r10676, %r10675};
	xor.b64  	%rd13124, %rd13122, %rd13123;
	shf.l.wrap.b32 	%r10677, %r10671, %r10672, 25;
	shf.l.wrap.b32 	%r10678, %r10672, %r10671, 25;
	mov.b64 	%rd13125, {%r10678, %r10677};
	xor.b64  	%rd13126, %rd13124, %rd13125;
	xor.b64  	%rd13127, %rd13083, %rd13058;
	and.b64  	%rd13128, %rd13108, %rd13127;
	and.b64  	%rd13129, %rd13083, %rd13058;
	xor.b64  	%rd13130, %rd13128, %rd13129;
	add.s64 	%rd13131, %rd13126, %rd13130;
	add.s64 	%rd13132, %rd13121, %rd13033;
	add.s64 	%rd13133, %rd13131, %rd13121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10679,%dummy}, %rd13132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10680}, %rd13132;
	}
	shf.r.wrap.b32 	%r10681, %r10680, %r10679, 14;
	shf.r.wrap.b32 	%r10682, %r10679, %r10680, 14;
	mov.b64 	%rd13134, {%r10682, %r10681};
	shf.r.wrap.b32 	%r10683, %r10680, %r10679, 18;
	shf.r.wrap.b32 	%r10684, %r10679, %r10680, 18;
	mov.b64 	%rd13135, {%r10684, %r10683};
	xor.b64  	%rd13136, %rd13134, %rd13135;
	shf.l.wrap.b32 	%r10685, %r10679, %r10680, 23;
	shf.l.wrap.b32 	%r10686, %r10680, %r10679, 23;
	mov.b64 	%rd13137, {%r10686, %r10685};
	xor.b64  	%rd13138, %rd13136, %rd13137;
	and.b64  	%rd13139, %rd13132, %rd13107;
	not.b64 	%rd13140, %rd13132;
	and.b64  	%rd13141, %rd13082, %rd13140;
	or.b64  	%rd13142, %rd13139, %rd13141;
	add.s64 	%rd13143, %rd13142, %rd13057;
	add.s64 	%rd13144, %rd13143, %rd13138;
	add.s64 	%rd13145, %rd13144, %rd101;
	add.s64 	%rd13146, %rd13145, %rd11394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10687,%dummy}, %rd13133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10688}, %rd13133;
	}
	shf.r.wrap.b32 	%r10689, %r10688, %r10687, 28;
	shf.r.wrap.b32 	%r10690, %r10687, %r10688, 28;
	mov.b64 	%rd13147, {%r10690, %r10689};
	shf.l.wrap.b32 	%r10691, %r10687, %r10688, 30;
	shf.l.wrap.b32 	%r10692, %r10688, %r10687, 30;
	mov.b64 	%rd13148, {%r10692, %r10691};
	xor.b64  	%rd13149, %rd13147, %rd13148;
	shf.l.wrap.b32 	%r10693, %r10687, %r10688, 25;
	shf.l.wrap.b32 	%r10694, %r10688, %r10687, 25;
	mov.b64 	%rd13150, {%r10694, %r10693};
	xor.b64  	%rd13151, %rd13149, %rd13150;
	xor.b64  	%rd13152, %rd13108, %rd13083;
	and.b64  	%rd13153, %rd13133, %rd13152;
	and.b64  	%rd13154, %rd13108, %rd13083;
	xor.b64  	%rd13155, %rd13153, %rd13154;
	add.s64 	%rd13156, %rd13151, %rd13155;
	add.s64 	%rd13157, %rd13146, %rd13058;
	add.s64 	%rd13158, %rd13156, %rd13146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10695,%dummy}, %rd13157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10696}, %rd13157;
	}
	shf.r.wrap.b32 	%r10697, %r10696, %r10695, 14;
	shf.r.wrap.b32 	%r10698, %r10695, %r10696, 14;
	mov.b64 	%rd13159, {%r10698, %r10697};
	shf.r.wrap.b32 	%r10699, %r10696, %r10695, 18;
	shf.r.wrap.b32 	%r10700, %r10695, %r10696, 18;
	mov.b64 	%rd13160, {%r10700, %r10699};
	xor.b64  	%rd13161, %rd13159, %rd13160;
	shf.l.wrap.b32 	%r10701, %r10695, %r10696, 23;
	shf.l.wrap.b32 	%r10702, %r10696, %r10695, 23;
	mov.b64 	%rd13162, {%r10702, %r10701};
	xor.b64  	%rd13163, %rd13161, %rd13162;
	and.b64  	%rd13164, %rd13157, %rd13132;
	not.b64 	%rd13165, %rd13157;
	and.b64  	%rd13166, %rd13107, %rd13165;
	or.b64  	%rd13167, %rd13164, %rd13166;
	add.s64 	%rd13168, %rd13167, %rd13082;
	add.s64 	%rd13169, %rd13168, %rd13163;
	add.s64 	%rd13170, %rd13169, %rd102;
	add.s64 	%rd13171, %rd13170, %rd11407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10703,%dummy}, %rd13158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10704}, %rd13158;
	}
	shf.r.wrap.b32 	%r10705, %r10704, %r10703, 28;
	shf.r.wrap.b32 	%r10706, %r10703, %r10704, 28;
	mov.b64 	%rd13172, {%r10706, %r10705};
	shf.l.wrap.b32 	%r10707, %r10703, %r10704, 30;
	shf.l.wrap.b32 	%r10708, %r10704, %r10703, 30;
	mov.b64 	%rd13173, {%r10708, %r10707};
	xor.b64  	%rd13174, %rd13172, %rd13173;
	shf.l.wrap.b32 	%r10709, %r10703, %r10704, 25;
	shf.l.wrap.b32 	%r10710, %r10704, %r10703, 25;
	mov.b64 	%rd13175, {%r10710, %r10709};
	xor.b64  	%rd13176, %rd13174, %rd13175;
	xor.b64  	%rd13177, %rd13133, %rd13108;
	and.b64  	%rd13178, %rd13158, %rd13177;
	and.b64  	%rd13179, %rd13133, %rd13108;
	xor.b64  	%rd13180, %rd13178, %rd13179;
	add.s64 	%rd13181, %rd13176, %rd13180;
	add.s64 	%rd13182, %rd13171, %rd13083;
	add.s64 	%rd13183, %rd13181, %rd13171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10711,%dummy}, %rd13182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10712}, %rd13182;
	}
	shf.r.wrap.b32 	%r10713, %r10712, %r10711, 14;
	shf.r.wrap.b32 	%r10714, %r10711, %r10712, 14;
	mov.b64 	%rd13184, {%r10714, %r10713};
	shf.r.wrap.b32 	%r10715, %r10712, %r10711, 18;
	shf.r.wrap.b32 	%r10716, %r10711, %r10712, 18;
	mov.b64 	%rd13185, {%r10716, %r10715};
	xor.b64  	%rd13186, %rd13184, %rd13185;
	shf.l.wrap.b32 	%r10717, %r10711, %r10712, 23;
	shf.l.wrap.b32 	%r10718, %r10712, %r10711, 23;
	mov.b64 	%rd13187, {%r10718, %r10717};
	xor.b64  	%rd13188, %rd13186, %rd13187;
	and.b64  	%rd13189, %rd13182, %rd13157;
	not.b64 	%rd13190, %rd13182;
	and.b64  	%rd13191, %rd13132, %rd13190;
	or.b64  	%rd13192, %rd13189, %rd13191;
	add.s64 	%rd13193, %rd13192, %rd13107;
	add.s64 	%rd13194, %rd13193, %rd13188;
	add.s64 	%rd13195, %rd13194, %rd103;
	add.s64 	%rd13196, %rd13195, %rd11420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10719,%dummy}, %rd13183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10720}, %rd13183;
	}
	shf.r.wrap.b32 	%r10721, %r10720, %r10719, 28;
	shf.r.wrap.b32 	%r10722, %r10719, %r10720, 28;
	mov.b64 	%rd13197, {%r10722, %r10721};
	shf.l.wrap.b32 	%r10723, %r10719, %r10720, 30;
	shf.l.wrap.b32 	%r10724, %r10720, %r10719, 30;
	mov.b64 	%rd13198, {%r10724, %r10723};
	xor.b64  	%rd13199, %rd13197, %rd13198;
	shf.l.wrap.b32 	%r10725, %r10719, %r10720, 25;
	shf.l.wrap.b32 	%r10726, %r10720, %r10719, 25;
	mov.b64 	%rd13200, {%r10726, %r10725};
	xor.b64  	%rd13201, %rd13199, %rd13200;
	xor.b64  	%rd13202, %rd13158, %rd13133;
	and.b64  	%rd13203, %rd13183, %rd13202;
	and.b64  	%rd13204, %rd13158, %rd13133;
	xor.b64  	%rd13205, %rd13203, %rd13204;
	add.s64 	%rd13206, %rd13201, %rd13205;
	add.s64 	%rd13207, %rd13196, %rd13108;
	add.s64 	%rd13208, %rd13206, %rd13196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10727,%dummy}, %rd13207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10728}, %rd13207;
	}
	shf.r.wrap.b32 	%r10729, %r10728, %r10727, 14;
	shf.r.wrap.b32 	%r10730, %r10727, %r10728, 14;
	mov.b64 	%rd13209, {%r10730, %r10729};
	shf.r.wrap.b32 	%r10731, %r10728, %r10727, 18;
	shf.r.wrap.b32 	%r10732, %r10727, %r10728, 18;
	mov.b64 	%rd13210, {%r10732, %r10731};
	xor.b64  	%rd13211, %rd13209, %rd13210;
	shf.l.wrap.b32 	%r10733, %r10727, %r10728, 23;
	shf.l.wrap.b32 	%r10734, %r10728, %r10727, 23;
	mov.b64 	%rd13212, {%r10734, %r10733};
	xor.b64  	%rd13213, %rd13211, %rd13212;
	and.b64  	%rd13214, %rd13207, %rd13182;
	not.b64 	%rd13215, %rd13207;
	and.b64  	%rd13216, %rd13157, %rd13215;
	or.b64  	%rd13217, %rd13214, %rd13216;
	add.s64 	%rd13218, %rd13217, %rd13132;
	add.s64 	%rd13219, %rd13218, %rd13213;
	add.s64 	%rd13220, %rd13219, %rd104;
	add.s64 	%rd13221, %rd13220, %rd11433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10735,%dummy}, %rd13208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10736}, %rd13208;
	}
	shf.r.wrap.b32 	%r10737, %r10736, %r10735, 28;
	shf.r.wrap.b32 	%r10738, %r10735, %r10736, 28;
	mov.b64 	%rd13222, {%r10738, %r10737};
	shf.l.wrap.b32 	%r10739, %r10735, %r10736, 30;
	shf.l.wrap.b32 	%r10740, %r10736, %r10735, 30;
	mov.b64 	%rd13223, {%r10740, %r10739};
	xor.b64  	%rd13224, %rd13222, %rd13223;
	shf.l.wrap.b32 	%r10741, %r10735, %r10736, 25;
	shf.l.wrap.b32 	%r10742, %r10736, %r10735, 25;
	mov.b64 	%rd13225, {%r10742, %r10741};
	xor.b64  	%rd13226, %rd13224, %rd13225;
	xor.b64  	%rd13227, %rd13183, %rd13158;
	and.b64  	%rd13228, %rd13208, %rd13227;
	and.b64  	%rd13229, %rd13183, %rd13158;
	xor.b64  	%rd13230, %rd13228, %rd13229;
	add.s64 	%rd13231, %rd13226, %rd13230;
	add.s64 	%rd13232, %rd13221, %rd13133;
	add.s64 	%rd13233, %rd13231, %rd13221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10743,%dummy}, %rd13232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10744}, %rd13232;
	}
	shf.r.wrap.b32 	%r10745, %r10744, %r10743, 14;
	shf.r.wrap.b32 	%r10746, %r10743, %r10744, 14;
	mov.b64 	%rd13234, {%r10746, %r10745};
	shf.r.wrap.b32 	%r10747, %r10744, %r10743, 18;
	shf.r.wrap.b32 	%r10748, %r10743, %r10744, 18;
	mov.b64 	%rd13235, {%r10748, %r10747};
	xor.b64  	%rd13236, %rd13234, %rd13235;
	shf.l.wrap.b32 	%r10749, %r10743, %r10744, 23;
	shf.l.wrap.b32 	%r10750, %r10744, %r10743, 23;
	mov.b64 	%rd13237, {%r10750, %r10749};
	xor.b64  	%rd13238, %rd13236, %rd13237;
	and.b64  	%rd13239, %rd13232, %rd13207;
	not.b64 	%rd13240, %rd13232;
	and.b64  	%rd13241, %rd13182, %rd13240;
	or.b64  	%rd13242, %rd13239, %rd13241;
	add.s64 	%rd13243, %rd13242, %rd13157;
	add.s64 	%rd13244, %rd13243, %rd13238;
	add.s64 	%rd13245, %rd13244, %rd105;
	add.s64 	%rd13246, %rd13245, %rd11446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10751,%dummy}, %rd13233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10752}, %rd13233;
	}
	shf.r.wrap.b32 	%r10753, %r10752, %r10751, 28;
	shf.r.wrap.b32 	%r10754, %r10751, %r10752, 28;
	mov.b64 	%rd13247, {%r10754, %r10753};
	shf.l.wrap.b32 	%r10755, %r10751, %r10752, 30;
	shf.l.wrap.b32 	%r10756, %r10752, %r10751, 30;
	mov.b64 	%rd13248, {%r10756, %r10755};
	xor.b64  	%rd13249, %rd13247, %rd13248;
	shf.l.wrap.b32 	%r10757, %r10751, %r10752, 25;
	shf.l.wrap.b32 	%r10758, %r10752, %r10751, 25;
	mov.b64 	%rd13250, {%r10758, %r10757};
	xor.b64  	%rd13251, %rd13249, %rd13250;
	xor.b64  	%rd13252, %rd13208, %rd13183;
	and.b64  	%rd13253, %rd13233, %rd13252;
	and.b64  	%rd13254, %rd13208, %rd13183;
	xor.b64  	%rd13255, %rd13253, %rd13254;
	add.s64 	%rd13256, %rd13251, %rd13255;
	add.s64 	%rd13257, %rd13246, %rd13158;
	add.s64 	%rd13258, %rd13256, %rd13246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10759,%dummy}, %rd13257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10760}, %rd13257;
	}
	shf.r.wrap.b32 	%r10761, %r10760, %r10759, 14;
	shf.r.wrap.b32 	%r10762, %r10759, %r10760, 14;
	mov.b64 	%rd13259, {%r10762, %r10761};
	shf.r.wrap.b32 	%r10763, %r10760, %r10759, 18;
	shf.r.wrap.b32 	%r10764, %r10759, %r10760, 18;
	mov.b64 	%rd13260, {%r10764, %r10763};
	xor.b64  	%rd13261, %rd13259, %rd13260;
	shf.l.wrap.b32 	%r10765, %r10759, %r10760, 23;
	shf.l.wrap.b32 	%r10766, %r10760, %r10759, 23;
	mov.b64 	%rd13262, {%r10766, %r10765};
	xor.b64  	%rd13263, %rd13261, %rd13262;
	and.b64  	%rd13264, %rd13257, %rd13232;
	not.b64 	%rd13265, %rd13257;
	and.b64  	%rd13266, %rd13207, %rd13265;
	or.b64  	%rd13267, %rd13264, %rd13266;
	add.s64 	%rd13268, %rd13267, %rd13182;
	add.s64 	%rd13269, %rd13268, %rd13263;
	add.s64 	%rd13270, %rd13269, %rd106;
	add.s64 	%rd13271, %rd13270, %rd11459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10767,%dummy}, %rd13258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10768}, %rd13258;
	}
	shf.r.wrap.b32 	%r10769, %r10768, %r10767, 28;
	shf.r.wrap.b32 	%r10770, %r10767, %r10768, 28;
	mov.b64 	%rd13272, {%r10770, %r10769};
	shf.l.wrap.b32 	%r10771, %r10767, %r10768, 30;
	shf.l.wrap.b32 	%r10772, %r10768, %r10767, 30;
	mov.b64 	%rd13273, {%r10772, %r10771};
	xor.b64  	%rd13274, %rd13272, %rd13273;
	shf.l.wrap.b32 	%r10773, %r10767, %r10768, 25;
	shf.l.wrap.b32 	%r10774, %r10768, %r10767, 25;
	mov.b64 	%rd13275, {%r10774, %r10773};
	xor.b64  	%rd13276, %rd13274, %rd13275;
	xor.b64  	%rd13277, %rd13233, %rd13208;
	and.b64  	%rd13278, %rd13258, %rd13277;
	and.b64  	%rd13279, %rd13233, %rd13208;
	xor.b64  	%rd13280, %rd13278, %rd13279;
	add.s64 	%rd13281, %rd13276, %rd13280;
	add.s64 	%rd13282, %rd13271, %rd13183;
	add.s64 	%rd13283, %rd13281, %rd13271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10775,%dummy}, %rd13282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10776}, %rd13282;
	}
	shf.r.wrap.b32 	%r10777, %r10776, %r10775, 14;
	shf.r.wrap.b32 	%r10778, %r10775, %r10776, 14;
	mov.b64 	%rd13284, {%r10778, %r10777};
	shf.r.wrap.b32 	%r10779, %r10776, %r10775, 18;
	shf.r.wrap.b32 	%r10780, %r10775, %r10776, 18;
	mov.b64 	%rd13285, {%r10780, %r10779};
	xor.b64  	%rd13286, %rd13284, %rd13285;
	shf.l.wrap.b32 	%r10781, %r10775, %r10776, 23;
	shf.l.wrap.b32 	%r10782, %r10776, %r10775, 23;
	mov.b64 	%rd13287, {%r10782, %r10781};
	xor.b64  	%rd13288, %rd13286, %rd13287;
	and.b64  	%rd13289, %rd13282, %rd13257;
	not.b64 	%rd13290, %rd13282;
	and.b64  	%rd13291, %rd13232, %rd13290;
	or.b64  	%rd13292, %rd13289, %rd13291;
	add.s64 	%rd13293, %rd13292, %rd13207;
	add.s64 	%rd13294, %rd13293, %rd13288;
	add.s64 	%rd13295, %rd13294, %rd107;
	add.s64 	%rd13296, %rd13295, %rd11472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10783,%dummy}, %rd13283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10784}, %rd13283;
	}
	shf.r.wrap.b32 	%r10785, %r10784, %r10783, 28;
	shf.r.wrap.b32 	%r10786, %r10783, %r10784, 28;
	mov.b64 	%rd13297, {%r10786, %r10785};
	shf.l.wrap.b32 	%r10787, %r10783, %r10784, 30;
	shf.l.wrap.b32 	%r10788, %r10784, %r10783, 30;
	mov.b64 	%rd13298, {%r10788, %r10787};
	xor.b64  	%rd13299, %rd13297, %rd13298;
	shf.l.wrap.b32 	%r10789, %r10783, %r10784, 25;
	shf.l.wrap.b32 	%r10790, %r10784, %r10783, 25;
	mov.b64 	%rd13300, {%r10790, %r10789};
	xor.b64  	%rd13301, %rd13299, %rd13300;
	xor.b64  	%rd13302, %rd13258, %rd13233;
	and.b64  	%rd13303, %rd13283, %rd13302;
	and.b64  	%rd13304, %rd13258, %rd13233;
	xor.b64  	%rd13305, %rd13303, %rd13304;
	add.s64 	%rd13306, %rd13301, %rd13305;
	add.s64 	%rd13307, %rd13296, %rd13208;
	add.s64 	%rd13308, %rd13306, %rd13296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10791,%dummy}, %rd13307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10792}, %rd13307;
	}
	shf.r.wrap.b32 	%r10793, %r10792, %r10791, 14;
	shf.r.wrap.b32 	%r10794, %r10791, %r10792, 14;
	mov.b64 	%rd13309, {%r10794, %r10793};
	shf.r.wrap.b32 	%r10795, %r10792, %r10791, 18;
	shf.r.wrap.b32 	%r10796, %r10791, %r10792, 18;
	mov.b64 	%rd13310, {%r10796, %r10795};
	xor.b64  	%rd13311, %rd13309, %rd13310;
	shf.l.wrap.b32 	%r10797, %r10791, %r10792, 23;
	shf.l.wrap.b32 	%r10798, %r10792, %r10791, 23;
	mov.b64 	%rd13312, {%r10798, %r10797};
	xor.b64  	%rd13313, %rd13311, %rd13312;
	and.b64  	%rd13314, %rd13307, %rd13282;
	not.b64 	%rd13315, %rd13307;
	and.b64  	%rd13316, %rd13257, %rd13315;
	or.b64  	%rd13317, %rd13314, %rd13316;
	add.s64 	%rd13318, %rd13317, %rd13232;
	add.s64 	%rd13319, %rd13318, %rd13313;
	add.s64 	%rd13320, %rd13319, %rd108;
	add.s64 	%rd13321, %rd13320, %rd11485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10799,%dummy}, %rd13308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10800}, %rd13308;
	}
	shf.r.wrap.b32 	%r10801, %r10800, %r10799, 28;
	shf.r.wrap.b32 	%r10802, %r10799, %r10800, 28;
	mov.b64 	%rd13322, {%r10802, %r10801};
	shf.l.wrap.b32 	%r10803, %r10799, %r10800, 30;
	shf.l.wrap.b32 	%r10804, %r10800, %r10799, 30;
	mov.b64 	%rd13323, {%r10804, %r10803};
	xor.b64  	%rd13324, %rd13322, %rd13323;
	shf.l.wrap.b32 	%r10805, %r10799, %r10800, 25;
	shf.l.wrap.b32 	%r10806, %r10800, %r10799, 25;
	mov.b64 	%rd13325, {%r10806, %r10805};
	xor.b64  	%rd13326, %rd13324, %rd13325;
	xor.b64  	%rd13327, %rd13283, %rd13258;
	and.b64  	%rd13328, %rd13308, %rd13327;
	and.b64  	%rd13329, %rd13283, %rd13258;
	xor.b64  	%rd13330, %rd13328, %rd13329;
	add.s64 	%rd13331, %rd13326, %rd13330;
	add.s64 	%rd13332, %rd13321, %rd13233;
	add.s64 	%rd13333, %rd13331, %rd13321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10807,%dummy}, %rd13332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10808}, %rd13332;
	}
	shf.r.wrap.b32 	%r10809, %r10808, %r10807, 14;
	shf.r.wrap.b32 	%r10810, %r10807, %r10808, 14;
	mov.b64 	%rd13334, {%r10810, %r10809};
	shf.r.wrap.b32 	%r10811, %r10808, %r10807, 18;
	shf.r.wrap.b32 	%r10812, %r10807, %r10808, 18;
	mov.b64 	%rd13335, {%r10812, %r10811};
	xor.b64  	%rd13336, %rd13334, %rd13335;
	shf.l.wrap.b32 	%r10813, %r10807, %r10808, 23;
	shf.l.wrap.b32 	%r10814, %r10808, %r10807, 23;
	mov.b64 	%rd13337, {%r10814, %r10813};
	xor.b64  	%rd13338, %rd13336, %rd13337;
	and.b64  	%rd13339, %rd13332, %rd13307;
	not.b64 	%rd13340, %rd13332;
	and.b64  	%rd13341, %rd13282, %rd13340;
	or.b64  	%rd13342, %rd13339, %rd13341;
	add.s64 	%rd13343, %rd13342, %rd13257;
	add.s64 	%rd13344, %rd13343, %rd13338;
	add.s64 	%rd13345, %rd13344, %rd109;
	add.s64 	%rd13346, %rd13345, %rd11498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10815,%dummy}, %rd13333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10816}, %rd13333;
	}
	shf.r.wrap.b32 	%r10817, %r10816, %r10815, 28;
	shf.r.wrap.b32 	%r10818, %r10815, %r10816, 28;
	mov.b64 	%rd13347, {%r10818, %r10817};
	shf.l.wrap.b32 	%r10819, %r10815, %r10816, 30;
	shf.l.wrap.b32 	%r10820, %r10816, %r10815, 30;
	mov.b64 	%rd13348, {%r10820, %r10819};
	xor.b64  	%rd13349, %rd13347, %rd13348;
	shf.l.wrap.b32 	%r10821, %r10815, %r10816, 25;
	shf.l.wrap.b32 	%r10822, %r10816, %r10815, 25;
	mov.b64 	%rd13350, {%r10822, %r10821};
	xor.b64  	%rd13351, %rd13349, %rd13350;
	xor.b64  	%rd13352, %rd13308, %rd13283;
	and.b64  	%rd13353, %rd13333, %rd13352;
	and.b64  	%rd13354, %rd13308, %rd13283;
	xor.b64  	%rd13355, %rd13353, %rd13354;
	add.s64 	%rd13356, %rd13351, %rd13355;
	add.s64 	%rd13357, %rd13346, %rd13258;
	add.s64 	%rd13358, %rd13356, %rd13346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10823,%dummy}, %rd13357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10824}, %rd13357;
	}
	shf.r.wrap.b32 	%r10825, %r10824, %r10823, 14;
	shf.r.wrap.b32 	%r10826, %r10823, %r10824, 14;
	mov.b64 	%rd13359, {%r10826, %r10825};
	shf.r.wrap.b32 	%r10827, %r10824, %r10823, 18;
	shf.r.wrap.b32 	%r10828, %r10823, %r10824, 18;
	mov.b64 	%rd13360, {%r10828, %r10827};
	xor.b64  	%rd13361, %rd13359, %rd13360;
	shf.l.wrap.b32 	%r10829, %r10823, %r10824, 23;
	shf.l.wrap.b32 	%r10830, %r10824, %r10823, 23;
	mov.b64 	%rd13362, {%r10830, %r10829};
	xor.b64  	%rd13363, %rd13361, %rd13362;
	and.b64  	%rd13364, %rd13357, %rd13332;
	not.b64 	%rd13365, %rd13357;
	and.b64  	%rd13366, %rd13307, %rd13365;
	or.b64  	%rd13367, %rd13364, %rd13366;
	add.s64 	%rd13368, %rd13367, %rd13282;
	add.s64 	%rd13369, %rd13368, %rd13363;
	add.s64 	%rd13370, %rd13369, %rd110;
	add.s64 	%rd13371, %rd13370, %rd11511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10831,%dummy}, %rd13358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10832}, %rd13358;
	}
	shf.r.wrap.b32 	%r10833, %r10832, %r10831, 28;
	shf.r.wrap.b32 	%r10834, %r10831, %r10832, 28;
	mov.b64 	%rd13372, {%r10834, %r10833};
	shf.l.wrap.b32 	%r10835, %r10831, %r10832, 30;
	shf.l.wrap.b32 	%r10836, %r10832, %r10831, 30;
	mov.b64 	%rd13373, {%r10836, %r10835};
	xor.b64  	%rd13374, %rd13372, %rd13373;
	shf.l.wrap.b32 	%r10837, %r10831, %r10832, 25;
	shf.l.wrap.b32 	%r10838, %r10832, %r10831, 25;
	mov.b64 	%rd13375, {%r10838, %r10837};
	xor.b64  	%rd13376, %rd13374, %rd13375;
	xor.b64  	%rd13377, %rd13333, %rd13308;
	and.b64  	%rd13378, %rd13358, %rd13377;
	and.b64  	%rd13379, %rd13333, %rd13308;
	xor.b64  	%rd13380, %rd13378, %rd13379;
	add.s64 	%rd13381, %rd13376, %rd13380;
	add.s64 	%rd13382, %rd13371, %rd13283;
	add.s64 	%rd13383, %rd13381, %rd13371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10839,%dummy}, %rd13382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10840}, %rd13382;
	}
	shf.r.wrap.b32 	%r10841, %r10840, %r10839, 14;
	shf.r.wrap.b32 	%r10842, %r10839, %r10840, 14;
	mov.b64 	%rd13384, {%r10842, %r10841};
	shf.r.wrap.b32 	%r10843, %r10840, %r10839, 18;
	shf.r.wrap.b32 	%r10844, %r10839, %r10840, 18;
	mov.b64 	%rd13385, {%r10844, %r10843};
	xor.b64  	%rd13386, %rd13384, %rd13385;
	shf.l.wrap.b32 	%r10845, %r10839, %r10840, 23;
	shf.l.wrap.b32 	%r10846, %r10840, %r10839, 23;
	mov.b64 	%rd13387, {%r10846, %r10845};
	xor.b64  	%rd13388, %rd13386, %rd13387;
	and.b64  	%rd13389, %rd13382, %rd13357;
	not.b64 	%rd13390, %rd13382;
	and.b64  	%rd13391, %rd13332, %rd13390;
	or.b64  	%rd13392, %rd13389, %rd13391;
	add.s64 	%rd13393, %rd13392, %rd13307;
	add.s64 	%rd13394, %rd13393, %rd13388;
	add.s64 	%rd13395, %rd13394, %rd15510;
	add.s64 	%rd13396, %rd13395, %rd11524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10847,%dummy}, %rd13383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10848}, %rd13383;
	}
	shf.r.wrap.b32 	%r10849, %r10848, %r10847, 28;
	shf.r.wrap.b32 	%r10850, %r10847, %r10848, 28;
	mov.b64 	%rd13397, {%r10850, %r10849};
	shf.l.wrap.b32 	%r10851, %r10847, %r10848, 30;
	shf.l.wrap.b32 	%r10852, %r10848, %r10847, 30;
	mov.b64 	%rd13398, {%r10852, %r10851};
	xor.b64  	%rd13399, %rd13397, %rd13398;
	shf.l.wrap.b32 	%r10853, %r10847, %r10848, 25;
	shf.l.wrap.b32 	%r10854, %r10848, %r10847, 25;
	mov.b64 	%rd13400, {%r10854, %r10853};
	xor.b64  	%rd13401, %rd13399, %rd13400;
	xor.b64  	%rd13402, %rd13358, %rd13333;
	and.b64  	%rd13403, %rd13383, %rd13402;
	and.b64  	%rd13404, %rd13358, %rd13333;
	xor.b64  	%rd13405, %rd13403, %rd13404;
	add.s64 	%rd13406, %rd13401, %rd13405;
	add.s64 	%rd13407, %rd13396, %rd13308;
	add.s64 	%rd13408, %rd13406, %rd13396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10855,%dummy}, %rd13407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10856}, %rd13407;
	}
	shf.r.wrap.b32 	%r10857, %r10856, %r10855, 14;
	shf.r.wrap.b32 	%r10858, %r10855, %r10856, 14;
	mov.b64 	%rd13409, {%r10858, %r10857};
	shf.r.wrap.b32 	%r10859, %r10856, %r10855, 18;
	shf.r.wrap.b32 	%r10860, %r10855, %r10856, 18;
	mov.b64 	%rd13410, {%r10860, %r10859};
	xor.b64  	%rd13411, %rd13409, %rd13410;
	shf.l.wrap.b32 	%r10861, %r10855, %r10856, 23;
	shf.l.wrap.b32 	%r10862, %r10856, %r10855, 23;
	mov.b64 	%rd13412, {%r10862, %r10861};
	xor.b64  	%rd13413, %rd13411, %rd13412;
	and.b64  	%rd13414, %rd13407, %rd13382;
	not.b64 	%rd13415, %rd13407;
	and.b64  	%rd13416, %rd13357, %rd13415;
	or.b64  	%rd13417, %rd13414, %rd13416;
	add.s64 	%rd13418, %rd13417, %rd13332;
	add.s64 	%rd13419, %rd13418, %rd13413;
	add.s64 	%rd13420, %rd13419, %rd15509;
	add.s64 	%rd13421, %rd13420, %rd11537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10863,%dummy}, %rd13408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10864}, %rd13408;
	}
	shf.r.wrap.b32 	%r10865, %r10864, %r10863, 28;
	shf.r.wrap.b32 	%r10866, %r10863, %r10864, 28;
	mov.b64 	%rd13422, {%r10866, %r10865};
	shf.l.wrap.b32 	%r10867, %r10863, %r10864, 30;
	shf.l.wrap.b32 	%r10868, %r10864, %r10863, 30;
	mov.b64 	%rd13423, {%r10868, %r10867};
	xor.b64  	%rd13424, %rd13422, %rd13423;
	shf.l.wrap.b32 	%r10869, %r10863, %r10864, 25;
	shf.l.wrap.b32 	%r10870, %r10864, %r10863, 25;
	mov.b64 	%rd13425, {%r10870, %r10869};
	xor.b64  	%rd13426, %rd13424, %rd13425;
	xor.b64  	%rd13427, %rd13383, %rd13358;
	and.b64  	%rd13428, %rd13408, %rd13427;
	and.b64  	%rd13429, %rd13383, %rd13358;
	xor.b64  	%rd13430, %rd13428, %rd13429;
	add.s64 	%rd13431, %rd13426, %rd13430;
	add.s64 	%rd13432, %rd13421, %rd13333;
	add.s64 	%rd13433, %rd13431, %rd13421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10871,%dummy}, %rd13432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10872}, %rd13432;
	}
	shf.r.wrap.b32 	%r10873, %r10872, %r10871, 14;
	shf.r.wrap.b32 	%r10874, %r10871, %r10872, 14;
	mov.b64 	%rd13434, {%r10874, %r10873};
	shf.r.wrap.b32 	%r10875, %r10872, %r10871, 18;
	shf.r.wrap.b32 	%r10876, %r10871, %r10872, 18;
	mov.b64 	%rd13435, {%r10876, %r10875};
	xor.b64  	%rd13436, %rd13434, %rd13435;
	shf.l.wrap.b32 	%r10877, %r10871, %r10872, 23;
	shf.l.wrap.b32 	%r10878, %r10872, %r10871, 23;
	mov.b64 	%rd13437, {%r10878, %r10877};
	xor.b64  	%rd13438, %rd13436, %rd13437;
	and.b64  	%rd13439, %rd13432, %rd13407;
	not.b64 	%rd13440, %rd13432;
	and.b64  	%rd13441, %rd13382, %rd13440;
	or.b64  	%rd13442, %rd13439, %rd13441;
	add.s64 	%rd13443, %rd13442, %rd13357;
	add.s64 	%rd13444, %rd13443, %rd13438;
	add.s64 	%rd13445, %rd13444, %rd15508;
	add.s64 	%rd13446, %rd13445, %rd11550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10879,%dummy}, %rd13433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10880}, %rd13433;
	}
	shf.r.wrap.b32 	%r10881, %r10880, %r10879, 28;
	shf.r.wrap.b32 	%r10882, %r10879, %r10880, 28;
	mov.b64 	%rd13447, {%r10882, %r10881};
	shf.l.wrap.b32 	%r10883, %r10879, %r10880, 30;
	shf.l.wrap.b32 	%r10884, %r10880, %r10879, 30;
	mov.b64 	%rd13448, {%r10884, %r10883};
	xor.b64  	%rd13449, %rd13447, %rd13448;
	shf.l.wrap.b32 	%r10885, %r10879, %r10880, 25;
	shf.l.wrap.b32 	%r10886, %r10880, %r10879, 25;
	mov.b64 	%rd13450, {%r10886, %r10885};
	xor.b64  	%rd13451, %rd13449, %rd13450;
	xor.b64  	%rd13452, %rd13408, %rd13383;
	and.b64  	%rd13453, %rd13433, %rd13452;
	and.b64  	%rd13454, %rd13408, %rd13383;
	xor.b64  	%rd13455, %rd13453, %rd13454;
	add.s64 	%rd13456, %rd13451, %rd13455;
	add.s64 	%rd13457, %rd13446, %rd13358;
	add.s64 	%rd13458, %rd13456, %rd13446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10887,%dummy}, %rd13457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10888}, %rd13457;
	}
	shf.r.wrap.b32 	%r10889, %r10888, %r10887, 14;
	shf.r.wrap.b32 	%r10890, %r10887, %r10888, 14;
	mov.b64 	%rd13459, {%r10890, %r10889};
	shf.r.wrap.b32 	%r10891, %r10888, %r10887, 18;
	shf.r.wrap.b32 	%r10892, %r10887, %r10888, 18;
	mov.b64 	%rd13460, {%r10892, %r10891};
	xor.b64  	%rd13461, %rd13459, %rd13460;
	shf.l.wrap.b32 	%r10893, %r10887, %r10888, 23;
	shf.l.wrap.b32 	%r10894, %r10888, %r10887, 23;
	mov.b64 	%rd13462, {%r10894, %r10893};
	xor.b64  	%rd13463, %rd13461, %rd13462;
	and.b64  	%rd13464, %rd13457, %rd13432;
	not.b64 	%rd13465, %rd13457;
	and.b64  	%rd13466, %rd13407, %rd13465;
	or.b64  	%rd13467, %rd13464, %rd13466;
	add.s64 	%rd13468, %rd13467, %rd13382;
	add.s64 	%rd13469, %rd13468, %rd13463;
	add.s64 	%rd13470, %rd13469, %rd114;
	add.s64 	%rd13471, %rd13470, %rd11563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10895,%dummy}, %rd13458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10896}, %rd13458;
	}
	shf.r.wrap.b32 	%r10897, %r10896, %r10895, 28;
	shf.r.wrap.b32 	%r10898, %r10895, %r10896, 28;
	mov.b64 	%rd13472, {%r10898, %r10897};
	shf.l.wrap.b32 	%r10899, %r10895, %r10896, 30;
	shf.l.wrap.b32 	%r10900, %r10896, %r10895, 30;
	mov.b64 	%rd13473, {%r10900, %r10899};
	xor.b64  	%rd13474, %rd13472, %rd13473;
	shf.l.wrap.b32 	%r10901, %r10895, %r10896, 25;
	shf.l.wrap.b32 	%r10902, %r10896, %r10895, 25;
	mov.b64 	%rd13475, {%r10902, %r10901};
	xor.b64  	%rd13476, %rd13474, %rd13475;
	xor.b64  	%rd13477, %rd13433, %rd13408;
	and.b64  	%rd13478, %rd13458, %rd13477;
	and.b64  	%rd13479, %rd13433, %rd13408;
	xor.b64  	%rd13480, %rd13478, %rd13479;
	add.s64 	%rd13481, %rd13476, %rd13480;
	add.s64 	%rd13482, %rd13471, %rd13383;
	add.s64 	%rd13483, %rd13481, %rd13471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10903,%dummy}, %rd13482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10904}, %rd13482;
	}
	shf.r.wrap.b32 	%r10905, %r10904, %r10903, 14;
	shf.r.wrap.b32 	%r10906, %r10903, %r10904, 14;
	mov.b64 	%rd13484, {%r10906, %r10905};
	shf.r.wrap.b32 	%r10907, %r10904, %r10903, 18;
	shf.r.wrap.b32 	%r10908, %r10903, %r10904, 18;
	mov.b64 	%rd13485, {%r10908, %r10907};
	xor.b64  	%rd13486, %rd13484, %rd13485;
	shf.l.wrap.b32 	%r10909, %r10903, %r10904, 23;
	shf.l.wrap.b32 	%r10910, %r10904, %r10903, 23;
	mov.b64 	%rd13487, {%r10910, %r10909};
	xor.b64  	%rd13488, %rd13486, %rd13487;
	and.b64  	%rd13489, %rd13482, %rd13457;
	not.b64 	%rd13490, %rd13482;
	and.b64  	%rd13491, %rd13432, %rd13490;
	or.b64  	%rd13492, %rd13489, %rd13491;
	add.s64 	%rd13493, %rd13492, %rd13407;
	add.s64 	%rd13494, %rd13493, %rd13488;
	add.s64 	%rd13495, %rd13494, %rd115;
	add.s64 	%rd13496, %rd13495, %rd11576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10911,%dummy}, %rd13483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10912}, %rd13483;
	}
	shf.r.wrap.b32 	%r10913, %r10912, %r10911, 28;
	shf.r.wrap.b32 	%r10914, %r10911, %r10912, 28;
	mov.b64 	%rd13497, {%r10914, %r10913};
	shf.l.wrap.b32 	%r10915, %r10911, %r10912, 30;
	shf.l.wrap.b32 	%r10916, %r10912, %r10911, 30;
	mov.b64 	%rd13498, {%r10916, %r10915};
	xor.b64  	%rd13499, %rd13497, %rd13498;
	shf.l.wrap.b32 	%r10917, %r10911, %r10912, 25;
	shf.l.wrap.b32 	%r10918, %r10912, %r10911, 25;
	mov.b64 	%rd13500, {%r10918, %r10917};
	xor.b64  	%rd13501, %rd13499, %rd13500;
	xor.b64  	%rd13502, %rd13458, %rd13433;
	and.b64  	%rd13503, %rd13483, %rd13502;
	and.b64  	%rd13504, %rd13458, %rd13433;
	xor.b64  	%rd13505, %rd13503, %rd13504;
	add.s64 	%rd13506, %rd13501, %rd13505;
	add.s64 	%rd13507, %rd13496, %rd13408;
	add.s64 	%rd13508, %rd13506, %rd13496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10919,%dummy}, %rd13507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10920}, %rd13507;
	}
	shf.r.wrap.b32 	%r10921, %r10920, %r10919, 14;
	shf.r.wrap.b32 	%r10922, %r10919, %r10920, 14;
	mov.b64 	%rd13509, {%r10922, %r10921};
	shf.r.wrap.b32 	%r10923, %r10920, %r10919, 18;
	shf.r.wrap.b32 	%r10924, %r10919, %r10920, 18;
	mov.b64 	%rd13510, {%r10924, %r10923};
	xor.b64  	%rd13511, %rd13509, %rd13510;
	shf.l.wrap.b32 	%r10925, %r10919, %r10920, 23;
	shf.l.wrap.b32 	%r10926, %r10920, %r10919, 23;
	mov.b64 	%rd13512, {%r10926, %r10925};
	xor.b64  	%rd13513, %rd13511, %rd13512;
	and.b64  	%rd13514, %rd13507, %rd13482;
	not.b64 	%rd13515, %rd13507;
	and.b64  	%rd13516, %rd13457, %rd13515;
	or.b64  	%rd13517, %rd13514, %rd13516;
	add.s64 	%rd13518, %rd13517, %rd13432;
	add.s64 	%rd13519, %rd13518, %rd13513;
	add.s64 	%rd13520, %rd13519, %rd116;
	add.s64 	%rd13521, %rd13520, %rd11589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10927,%dummy}, %rd13508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10928}, %rd13508;
	}
	shf.r.wrap.b32 	%r10929, %r10928, %r10927, 28;
	shf.r.wrap.b32 	%r10930, %r10927, %r10928, 28;
	mov.b64 	%rd13522, {%r10930, %r10929};
	shf.l.wrap.b32 	%r10931, %r10927, %r10928, 30;
	shf.l.wrap.b32 	%r10932, %r10928, %r10927, 30;
	mov.b64 	%rd13523, {%r10932, %r10931};
	xor.b64  	%rd13524, %rd13522, %rd13523;
	shf.l.wrap.b32 	%r10933, %r10927, %r10928, 25;
	shf.l.wrap.b32 	%r10934, %r10928, %r10927, 25;
	mov.b64 	%rd13525, {%r10934, %r10933};
	xor.b64  	%rd13526, %rd13524, %rd13525;
	xor.b64  	%rd13527, %rd13483, %rd13458;
	and.b64  	%rd13528, %rd13508, %rd13527;
	and.b64  	%rd13529, %rd13483, %rd13458;
	xor.b64  	%rd13530, %rd13528, %rd13529;
	add.s64 	%rd13531, %rd13526, %rd13530;
	add.s64 	%rd13532, %rd13521, %rd13433;
	add.s64 	%rd13533, %rd13531, %rd13521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10935,%dummy}, %rd13532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10936}, %rd13532;
	}
	shf.r.wrap.b32 	%r10937, %r10936, %r10935, 14;
	shf.r.wrap.b32 	%r10938, %r10935, %r10936, 14;
	mov.b64 	%rd13534, {%r10938, %r10937};
	shf.r.wrap.b32 	%r10939, %r10936, %r10935, 18;
	shf.r.wrap.b32 	%r10940, %r10935, %r10936, 18;
	mov.b64 	%rd13535, {%r10940, %r10939};
	xor.b64  	%rd13536, %rd13534, %rd13535;
	shf.l.wrap.b32 	%r10941, %r10935, %r10936, 23;
	shf.l.wrap.b32 	%r10942, %r10936, %r10935, 23;
	mov.b64 	%rd13537, {%r10942, %r10941};
	xor.b64  	%rd13538, %rd13536, %rd13537;
	and.b64  	%rd13539, %rd13532, %rd13507;
	not.b64 	%rd13540, %rd13532;
	and.b64  	%rd13541, %rd13482, %rd13540;
	or.b64  	%rd13542, %rd13539, %rd13541;
	add.s64 	%rd13543, %rd13542, %rd13457;
	add.s64 	%rd13544, %rd13543, %rd13538;
	add.s64 	%rd13545, %rd13544, %rd117;
	add.s64 	%rd13546, %rd13545, %rd11602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10943,%dummy}, %rd13533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10944}, %rd13533;
	}
	shf.r.wrap.b32 	%r10945, %r10944, %r10943, 28;
	shf.r.wrap.b32 	%r10946, %r10943, %r10944, 28;
	mov.b64 	%rd13547, {%r10946, %r10945};
	shf.l.wrap.b32 	%r10947, %r10943, %r10944, 30;
	shf.l.wrap.b32 	%r10948, %r10944, %r10943, 30;
	mov.b64 	%rd13548, {%r10948, %r10947};
	xor.b64  	%rd13549, %rd13547, %rd13548;
	shf.l.wrap.b32 	%r10949, %r10943, %r10944, 25;
	shf.l.wrap.b32 	%r10950, %r10944, %r10943, 25;
	mov.b64 	%rd13550, {%r10950, %r10949};
	xor.b64  	%rd13551, %rd13549, %rd13550;
	xor.b64  	%rd13552, %rd13508, %rd13483;
	and.b64  	%rd13553, %rd13533, %rd13552;
	and.b64  	%rd13554, %rd13508, %rd13483;
	xor.b64  	%rd13555, %rd13553, %rd13554;
	add.s64 	%rd13556, %rd13551, %rd13555;
	add.s64 	%rd13557, %rd13546, %rd13458;
	add.s64 	%rd13558, %rd13556, %rd13546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10951,%dummy}, %rd13557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10952}, %rd13557;
	}
	shf.r.wrap.b32 	%r10953, %r10952, %r10951, 14;
	shf.r.wrap.b32 	%r10954, %r10951, %r10952, 14;
	mov.b64 	%rd13559, {%r10954, %r10953};
	shf.r.wrap.b32 	%r10955, %r10952, %r10951, 18;
	shf.r.wrap.b32 	%r10956, %r10951, %r10952, 18;
	mov.b64 	%rd13560, {%r10956, %r10955};
	xor.b64  	%rd13561, %rd13559, %rd13560;
	shf.l.wrap.b32 	%r10957, %r10951, %r10952, 23;
	shf.l.wrap.b32 	%r10958, %r10952, %r10951, 23;
	mov.b64 	%rd13562, {%r10958, %r10957};
	xor.b64  	%rd13563, %rd13561, %rd13562;
	and.b64  	%rd13564, %rd13557, %rd13532;
	not.b64 	%rd13565, %rd13557;
	and.b64  	%rd13566, %rd13507, %rd13565;
	or.b64  	%rd13567, %rd13564, %rd13566;
	add.s64 	%rd13568, %rd13567, %rd13482;
	add.s64 	%rd13569, %rd13568, %rd13563;
	add.s64 	%rd13570, %rd13569, %rd118;
	add.s64 	%rd13571, %rd13570, %rd11615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10959,%dummy}, %rd13558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10960}, %rd13558;
	}
	shf.r.wrap.b32 	%r10961, %r10960, %r10959, 28;
	shf.r.wrap.b32 	%r10962, %r10959, %r10960, 28;
	mov.b64 	%rd13572, {%r10962, %r10961};
	shf.l.wrap.b32 	%r10963, %r10959, %r10960, 30;
	shf.l.wrap.b32 	%r10964, %r10960, %r10959, 30;
	mov.b64 	%rd13573, {%r10964, %r10963};
	xor.b64  	%rd13574, %rd13572, %rd13573;
	shf.l.wrap.b32 	%r10965, %r10959, %r10960, 25;
	shf.l.wrap.b32 	%r10966, %r10960, %r10959, 25;
	mov.b64 	%rd13575, {%r10966, %r10965};
	xor.b64  	%rd13576, %rd13574, %rd13575;
	xor.b64  	%rd13577, %rd13533, %rd13508;
	and.b64  	%rd13578, %rd13558, %rd13577;
	and.b64  	%rd13579, %rd13533, %rd13508;
	xor.b64  	%rd13580, %rd13578, %rd13579;
	add.s64 	%rd13581, %rd13576, %rd13580;
	add.s64 	%rd13582, %rd13571, %rd13483;
	add.s64 	%rd13583, %rd13581, %rd13571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10967,%dummy}, %rd13582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10968}, %rd13582;
	}
	shf.r.wrap.b32 	%r10969, %r10968, %r10967, 14;
	shf.r.wrap.b32 	%r10970, %r10967, %r10968, 14;
	mov.b64 	%rd13584, {%r10970, %r10969};
	shf.r.wrap.b32 	%r10971, %r10968, %r10967, 18;
	shf.r.wrap.b32 	%r10972, %r10967, %r10968, 18;
	mov.b64 	%rd13585, {%r10972, %r10971};
	xor.b64  	%rd13586, %rd13584, %rd13585;
	shf.l.wrap.b32 	%r10973, %r10967, %r10968, 23;
	shf.l.wrap.b32 	%r10974, %r10968, %r10967, 23;
	mov.b64 	%rd13587, {%r10974, %r10973};
	xor.b64  	%rd13588, %rd13586, %rd13587;
	and.b64  	%rd13589, %rd13582, %rd13557;
	not.b64 	%rd13590, %rd13582;
	and.b64  	%rd13591, %rd13532, %rd13590;
	or.b64  	%rd13592, %rd13589, %rd13591;
	add.s64 	%rd13593, %rd13592, %rd13507;
	add.s64 	%rd13594, %rd13593, %rd13588;
	add.s64 	%rd13595, %rd13594, %rd119;
	add.s64 	%rd13596, %rd13595, %rd11628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10975,%dummy}, %rd13583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10976}, %rd13583;
	}
	shf.r.wrap.b32 	%r10977, %r10976, %r10975, 28;
	shf.r.wrap.b32 	%r10978, %r10975, %r10976, 28;
	mov.b64 	%rd13597, {%r10978, %r10977};
	shf.l.wrap.b32 	%r10979, %r10975, %r10976, 30;
	shf.l.wrap.b32 	%r10980, %r10976, %r10975, 30;
	mov.b64 	%rd13598, {%r10980, %r10979};
	xor.b64  	%rd13599, %rd13597, %rd13598;
	shf.l.wrap.b32 	%r10981, %r10975, %r10976, 25;
	shf.l.wrap.b32 	%r10982, %r10976, %r10975, 25;
	mov.b64 	%rd13600, {%r10982, %r10981};
	xor.b64  	%rd13601, %rd13599, %rd13600;
	xor.b64  	%rd13602, %rd13558, %rd13533;
	and.b64  	%rd13603, %rd13583, %rd13602;
	and.b64  	%rd13604, %rd13558, %rd13533;
	xor.b64  	%rd13605, %rd13603, %rd13604;
	add.s64 	%rd13606, %rd13601, %rd13605;
	add.s64 	%rd13607, %rd13606, %rd13596;
	add.s64 	%rd13608, %rd13607, 7640891576956012808;
	add.s64 	%rd13609, %rd13583, -4942790177534073029;
	add.s64 	%rd13610, %rd13558, 4354685564936845355;
	add.s64 	%rd13611, %rd13533, -6534734903238641935;
	shr.u64 	%rd13612, %rd13608, 56;
	cvt.u16.u64 	%rs973, %rd13612;
	shr.u64 	%rd13613, %rd13608, 48;
	cvt.u16.u64 	%rs974, %rd13613;
	shr.u64 	%rd13614, %rd13608, 40;
	cvt.u16.u64 	%rs975, %rd13614;
	shr.u64 	%rd13615, %rd13608, 32;
	cvt.u16.u64 	%rs976, %rd13615;
	shr.u64 	%rd13616, %rd13608, 24;
	cvt.u16.u64 	%rs977, %rd13616;
	shr.u64 	%rd13617, %rd13608, 16;
	cvt.u16.u64 	%rs978, %rd13617;
	shr.u64 	%rd13618, %rd13608, 8;
	cvt.u16.u64 	%rs979, %rd13618;
	cvt.u16.u64 	%rs980, %rd13608;
	shr.u64 	%rd13619, %rd13609, 56;
	cvt.u16.u64 	%rs981, %rd13619;
	shr.u64 	%rd13620, %rd13609, 48;
	cvt.u16.u64 	%rs982, %rd13620;
	shr.u64 	%rd13621, %rd13609, 40;
	cvt.u16.u64 	%rs983, %rd13621;
	shr.u64 	%rd13622, %rd13609, 32;
	cvt.u16.u64 	%rs984, %rd13622;
	shr.u64 	%rd13623, %rd13609, 24;
	cvt.u16.u64 	%rs985, %rd13623;
	shr.u64 	%rd13624, %rd13609, 16;
	cvt.u16.u64 	%rs986, %rd13624;
	shr.u64 	%rd13625, %rd13609, 8;
	cvt.u16.u64 	%rs987, %rd13625;
	cvt.u16.u64 	%rs988, %rd13609;
	shr.u64 	%rd13626, %rd13610, 56;
	cvt.u16.u64 	%rs989, %rd13626;
	shr.u64 	%rd13627, %rd13610, 48;
	cvt.u16.u64 	%rs990, %rd13627;
	shr.u64 	%rd13628, %rd13610, 40;
	cvt.u16.u64 	%rs991, %rd13628;
	shr.u64 	%rd13629, %rd13610, 32;
	cvt.u16.u64 	%rs992, %rd13629;
	shr.u64 	%rd13630, %rd13610, 24;
	cvt.u16.u64 	%rs993, %rd13630;
	shr.u64 	%rd13631, %rd13610, 16;
	cvt.u16.u64 	%rs994, %rd13631;
	shr.u64 	%rd13632, %rd13610, 8;
	cvt.u16.u64 	%rs995, %rd13632;
	cvt.u16.u64 	%rs996, %rd13610;
	shr.u64 	%rd13633, %rd13611, 56;
	cvt.u16.u64 	%rs997, %rd13633;
	shr.u64 	%rd13634, %rd13611, 48;
	cvt.u16.u64 	%rs998, %rd13634;
	shr.u64 	%rd13635, %rd13611, 40;
	cvt.u16.u64 	%rs999, %rd13635;
	shr.u64 	%rd13636, %rd13611, 32;
	cvt.u16.u64 	%rs1000, %rd13636;
	shr.u64 	%rd13637, %rd13611, 24;
	cvt.u16.u64 	%rs1001, %rd13637;
	shr.u64 	%rd13638, %rd13611, 16;
	cvt.u16.u64 	%rs1002, %rd13638;
	shr.u64 	%rd13639, %rd13611, 8;
	cvt.u16.u64 	%rs1003, %rd13639;
	cvt.u16.u64 	%rs1004, %rd13611;
	xor.b16  	%rs1139, %rs1139, %rs973;
	xor.b16  	%rs1138, %rs1138, %rs974;
	xor.b16  	%rs1137, %rs1137, %rs975;
	xor.b16  	%rs1136, %rs1136, %rs976;
	xor.b16  	%rs1135, %rs1135, %rs977;
	xor.b16  	%rs1134, %rs1134, %rs978;
	xor.b16  	%rs1133, %rs1133, %rs979;
	xor.b16  	%rs1132, %rs1132, %rs980;
	xor.b16  	%rs1131, %rs1131, %rs981;
	xor.b16  	%rs1130, %rs1130, %rs982;
	xor.b16  	%rs1129, %rs1129, %rs983;
	xor.b16  	%rs1128, %rs1128, %rs984;
	xor.b16  	%rs1127, %rs1127, %rs985;
	xor.b16  	%rs1126, %rs1126, %rs986;
	xor.b16  	%rs1125, %rs1125, %rs987;
	xor.b16  	%rs1124, %rs1124, %rs988;
	xor.b16  	%rs1123, %rs1123, %rs989;
	xor.b16  	%rs1122, %rs1122, %rs990;
	xor.b16  	%rs1121, %rs1121, %rs991;
	xor.b16  	%rs1120, %rs1120, %rs992;
	xor.b16  	%rs1119, %rs1119, %rs993;
	xor.b16  	%rs1118, %rs1118, %rs994;
	xor.b16  	%rs1117, %rs1117, %rs995;
	xor.b16  	%rs1116, %rs1116, %rs996;
	xor.b16  	%rs1115, %rs1115, %rs997;
	xor.b16  	%rs1114, %rs1114, %rs998;
	xor.b16  	%rs1113, %rs1113, %rs999;
	xor.b16  	%rs1112, %rs1112, %rs1000;
	xor.b16  	%rs1111, %rs1111, %rs1001;
	xor.b16  	%rs1110, %rs1110, %rs1002;
	xor.b16  	%rs1109, %rs1109, %rs1003;
	xor.b16  	%rs1108, %rs1108, %rs1004;
	add.s32 	%r11225, %r11225, 1;
	setp.lt.u32 	%p84, %r11225, 2048;
	@%p84 bra 	$L__BB4_94;

	cvt.u64.u16 	%rd13648, %rs1139;
	shl.b64 	%rd13649, %rd13648, 56;
	cvt.u64.u16 	%rd13650, %rs1138;
	shl.b64 	%rd13651, %rd13650, 48;
	and.b64  	%rd13652, %rd13651, 71776119061217280;
	or.b64  	%rd13653, %rd13652, %rd13649;
	cvt.u64.u16 	%rd13654, %rs1137;
	shl.b64 	%rd13655, %rd13654, 40;
	and.b64  	%rd13656, %rd13655, 280375465082880;
	or.b64  	%rd13657, %rd13653, %rd13656;
	cvt.u64.u16 	%rd13658, %rs1136;
	shl.b64 	%rd13659, %rd13658, 32;
	and.b64  	%rd13660, %rd13659, 1095216660480;
	or.b64  	%rd13661, %rd13657, %rd13660;
	cvt.u32.u16 	%r10984, %rs1135;
	and.b32  	%r10985, %r10984, 255;
	mul.wide.u32 	%rd13662, %r10985, 16777216;
	or.b64  	%rd13663, %rd13661, %rd13662;
	cvt.u32.u16 	%r10986, %rs1134;
	and.b32  	%r10987, %r10986, 255;
	mul.wide.u32 	%rd13664, %r10987, 65536;
	or.b64  	%rd13665, %rd13663, %rd13664;
	cvt.u32.u16 	%r10988, %rs1133;
	and.b32  	%r10989, %r10988, 255;
	mul.wide.u32 	%rd13666, %r10989, 256;
	or.b64  	%rd13667, %rd13665, %rd13666;
	cvt.u64.u16 	%rd13668, %rs1132;
	and.b64  	%rd13669, %rd13668, 255;
	cvt.u64.u16 	%rd13670, %rs1131;
	shl.b64 	%rd13671, %rd13670, 56;
	cvt.u64.u16 	%rd13672, %rs1130;
	shl.b64 	%rd13673, %rd13672, 48;
	and.b64  	%rd13674, %rd13673, 71776119061217280;
	or.b64  	%rd13675, %rd13674, %rd13671;
	cvt.u64.u16 	%rd13676, %rs1129;
	shl.b64 	%rd13677, %rd13676, 40;
	and.b64  	%rd13678, %rd13677, 280375465082880;
	or.b64  	%rd13679, %rd13675, %rd13678;
	cvt.u64.u16 	%rd13680, %rs1128;
	shl.b64 	%rd13681, %rd13680, 32;
	and.b64  	%rd13682, %rd13681, 1095216660480;
	or.b64  	%rd13683, %rd13679, %rd13682;
	cvt.u32.u16 	%r10990, %rs1127;
	and.b32  	%r10991, %r10990, 255;
	mul.wide.u32 	%rd13684, %r10991, 16777216;
	or.b64  	%rd13685, %rd13683, %rd13684;
	cvt.u32.u16 	%r10992, %rs1126;
	and.b32  	%r10993, %r10992, 255;
	mul.wide.u32 	%rd13686, %r10993, 65536;
	or.b64  	%rd13687, %rd13685, %rd13686;
	cvt.u32.u16 	%r10994, %rs1125;
	and.b32  	%r10995, %r10994, 255;
	mul.wide.u32 	%rd13688, %r10995, 256;
	or.b64  	%rd13689, %rd13687, %rd13688;
	cvt.u64.u16 	%rd13690, %rs1124;
	and.b64  	%rd13691, %rd13690, 255;
	mov.u64 	%rd15697, 0;
	or.b64  	%rd13692, %rd13689, %rd13691;
	or.b64  	%rd13693, %rd13667, %rd13669;
	add.u64 	%rd15705, %SPL, 0;
	st.local.v2.u64 	[%rd15705], {%rd13693, %rd13692};
	cvt.u64.u16 	%rd13695, %rs1123;
	shl.b64 	%rd13696, %rd13695, 56;
	cvt.u64.u16 	%rd13697, %rs1122;
	shl.b64 	%rd13698, %rd13697, 48;
	and.b64  	%rd13699, %rd13698, 71776119061217280;
	or.b64  	%rd13700, %rd13699, %rd13696;
	cvt.u64.u16 	%rd13701, %rs1121;
	shl.b64 	%rd13702, %rd13701, 40;
	and.b64  	%rd13703, %rd13702, 280375465082880;
	or.b64  	%rd13704, %rd13700, %rd13703;
	cvt.u64.u16 	%rd13705, %rs1120;
	shl.b64 	%rd13706, %rd13705, 32;
	and.b64  	%rd13707, %rd13706, 1095216660480;
	or.b64  	%rd13708, %rd13704, %rd13707;
	cvt.u32.u16 	%r10996, %rs1119;
	and.b32  	%r10997, %r10996, 255;
	mul.wide.u32 	%rd13709, %r10997, 16777216;
	or.b64  	%rd13710, %rd13708, %rd13709;
	cvt.u32.u16 	%r10998, %rs1118;
	and.b32  	%r10999, %r10998, 255;
	mul.wide.u32 	%rd13711, %r10999, 65536;
	or.b64  	%rd13712, %rd13710, %rd13711;
	cvt.u32.u16 	%r11000, %rs1117;
	and.b32  	%r11001, %r11000, 255;
	mul.wide.u32 	%rd13713, %r11001, 256;
	or.b64  	%rd13714, %rd13712, %rd13713;
	cvt.u64.u16 	%rd13715, %rs1116;
	and.b64  	%rd13716, %rd13715, 255;
	cvt.u64.u16 	%rd13717, %rs1115;
	shl.b64 	%rd13718, %rd13717, 56;
	cvt.u64.u16 	%rd13719, %rs1114;
	shl.b64 	%rd13720, %rd13719, 48;
	and.b64  	%rd13721, %rd13720, 71776119061217280;
	or.b64  	%rd13722, %rd13721, %rd13718;
	cvt.u64.u16 	%rd13723, %rs1113;
	shl.b64 	%rd13724, %rd13723, 40;
	and.b64  	%rd13725, %rd13724, 280375465082880;
	or.b64  	%rd13726, %rd13722, %rd13725;
	cvt.u64.u16 	%rd13727, %rs1112;
	shl.b64 	%rd13728, %rd13727, 32;
	and.b64  	%rd13729, %rd13728, 1095216660480;
	or.b64  	%rd13730, %rd13726, %rd13729;
	cvt.u32.u16 	%r11002, %rs1111;
	and.b32  	%r11003, %r11002, 255;
	mul.wide.u32 	%rd13731, %r11003, 16777216;
	or.b64  	%rd13732, %rd13730, %rd13731;
	cvt.u32.u16 	%r11004, %rs1110;
	and.b32  	%r11005, %r11004, 255;
	mul.wide.u32 	%rd13733, %r11005, 65536;
	or.b64  	%rd13734, %rd13732, %rd13733;
	cvt.u32.u16 	%r11006, %rs1109;
	and.b32  	%r11007, %r11006, 255;
	mul.wide.u32 	%rd13735, %r11007, 256;
	or.b64  	%rd13736, %rd13734, %rd13735;
	cvt.u64.u16 	%rd13737, %rs1108;
	and.b64  	%rd13738, %rd13737, 255;
	or.b64  	%rd13739, %rd13736, %rd13738;
	or.b64  	%rd13740, %rd13714, %rd13716;
	st.local.v2.u64 	[%rd15705+16], {%rd13740, %rd13739};
	ld.const.u64 	%rd154, [SECP256K1_P+24];
	ld.const.u64 	%rd155, [SECP256K1_P];
	ld.const.u64 	%rd156, [SECP256K1_P+8];
	mov.u32 	%r11232, 255;
	ld.const.u64 	%rd157, [SECP256K1_P+16];
	mov.u64 	%rd15698, %rd15697;
	mov.u64 	%rd15699, %rd15697;
	mov.u64 	%rd15700, %rd15697;
	mov.u64 	%rd15701, %rd15697;
	mov.u64 	%rd15702, %rd15697;
	mov.u64 	%rd15703, %rd15697;
	mov.u64 	%rd15704, %rd15697;
	bra.uni 	$L__BB4_118;

$L__BB4_127:
	setp.lt.u64 	%p98, %rd15535, %rd157;
	@%p98 bra 	$L__BB4_132;

	setp.gt.u64 	%p99, %rd15535, %rd157;
	@%p99 bra 	$L__BB4_133;

	setp.lt.u64 	%p100, %rd15534, %rd156;
	@%p100 bra 	$L__BB4_132;

	setp.gt.u64 	%p101, %rd15534, %rd156;
	@%p101 bra 	$L__BB4_133;

	setp.gt.u64 	%p102, %rd15533, %rd155;
	@%p102 bra 	$L__BB4_133;
	bra.uni 	$L__BB4_132;

$L__BB4_135:
	setp.lt.u64 	%p105, %rd15539, %rd157;
	@%p105 bra 	$L__BB4_140;

	setp.gt.u64 	%p106, %rd15539, %rd157;
	@%p106 bra 	$L__BB4_141;

	setp.lt.u64 	%p107, %rd15538, %rd156;
	@%p107 bra 	$L__BB4_140;

	setp.gt.u64 	%p108, %rd15538, %rd156;
	@%p108 bra 	$L__BB4_141;

	setp.gt.u64 	%p109, %rd15537, %rd155;
	@%p109 bra 	$L__BB4_141;
	bra.uni 	$L__BB4_140;

$L__BB4_143:
	setp.lt.u64 	%p113, %rd15561, %rd157;
	@%p113 bra 	$L__BB4_148;

	setp.gt.u64 	%p114, %rd15561, %rd157;
	@%p114 bra 	$L__BB4_149;

	setp.lt.u64 	%p115, %rd15542, %rd156;
	@%p115 bra 	$L__BB4_148;

	setp.gt.u64 	%p116, %rd15542, %rd156;
	@%p116 bra 	$L__BB4_149;

	setp.gt.u64 	%p117, %rd15541, %rd155;
	@%p117 bra 	$L__BB4_149;
	bra.uni 	$L__BB4_148;

$L__BB4_191:
	setp.lt.u64 	%p192, %rd15595, %rd157;
	@%p192 bra 	$L__BB4_196;

	setp.gt.u64 	%p193, %rd15595, %rd157;
	@%p193 bra 	$L__BB4_197;

	setp.lt.u64 	%p194, %rd15594, %rd156;
	@%p194 bra 	$L__BB4_196;

	setp.gt.u64 	%p195, %rd15594, %rd156;
	@%p195 bra 	$L__BB4_197;

	setp.gt.u64 	%p196, %rd15593, %rd155;
	@%p196 bra 	$L__BB4_197;
	bra.uni 	$L__BB4_196;

$L__BB4_118:
	mov.u32 	%r122, %r11232;
	mov.u64 	%rd158, %rd15697;
	// begin inline asm
	mul.lo.u64 %rd15525, %rd15701, %rd15701;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13744, %rd15701, %rd15701;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd13747, %rd15701, %rd15702;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13750, %rd15701, %rd15702;
	// end inline asm
	add.s64 	%rd13837, %rd13744, %rd13747;
	// begin inline asm
	mul.lo.u64 %rd13753, %rd15701, %rd15703;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13756, %rd15701, %rd15703;
	// end inline asm
	add.s64 	%rd13838, %rd13750, %rd13753;
	// begin inline asm
	mul.lo.u64 %rd13759, %rd15701, %rd15704;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13762, %rd15701, %rd15704;
	// end inline asm
	add.s64 	%rd13839, %rd13756, %rd13759;
	// begin inline asm
	mul.lo.u64 %rd13765, %rd15702, %rd15701;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13768, %rd15702, %rd15701;
	// end inline asm
	add.s64 	%rd15526, %rd13837, %rd13765;
	add.s64 	%rd13840, %rd13838, %rd13768;
	// begin inline asm
	mul.lo.u64 %rd13771, %rd15702, %rd15702;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13774, %rd15702, %rd15702;
	// end inline asm
	add.s64 	%rd13841, %rd13840, %rd13771;
	add.s64 	%rd13842, %rd13839, %rd13774;
	// begin inline asm
	mul.lo.u64 %rd13777, %rd15702, %rd15703;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13780, %rd15702, %rd15703;
	// end inline asm
	add.s64 	%rd13843, %rd13842, %rd13777;
	add.s64 	%rd13844, %rd13762, %rd13780;
	// begin inline asm
	mul.lo.u64 %rd13783, %rd15702, %rd15704;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13786, %rd15702, %rd15704;
	// end inline asm
	add.s64 	%rd13845, %rd13844, %rd13783;
	// begin inline asm
	mul.lo.u64 %rd13789, %rd15703, %rd15701;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13792, %rd15703, %rd15701;
	// end inline asm
	add.s64 	%rd15527, %rd13841, %rd13789;
	add.s64 	%rd13846, %rd13843, %rd13792;
	// begin inline asm
	mul.lo.u64 %rd13795, %rd15703, %rd15702;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13798, %rd15703, %rd15702;
	// end inline asm
	add.s64 	%rd13847, %rd13846, %rd13795;
	add.s64 	%rd13848, %rd13845, %rd13798;
	// begin inline asm
	mul.lo.u64 %rd13801, %rd15703, %rd15703;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13804, %rd15703, %rd15703;
	// end inline asm
	add.s64 	%rd13849, %rd13848, %rd13801;
	add.s64 	%rd13850, %rd13786, %rd13804;
	// begin inline asm
	mul.lo.u64 %rd13807, %rd15703, %rd15704;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13810, %rd15703, %rd15704;
	// end inline asm
	add.s64 	%rd13851, %rd13850, %rd13807;
	// begin inline asm
	mul.lo.u64 %rd13813, %rd15704, %rd15701;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13816, %rd15704, %rd15701;
	// end inline asm
	add.s64 	%rd15528, %rd13847, %rd13813;
	add.s64 	%rd13852, %rd13849, %rd13816;
	// begin inline asm
	mul.lo.u64 %rd13819, %rd15704, %rd15702;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13822, %rd15704, %rd15702;
	// end inline asm
	add.s64 	%rd15529, %rd13852, %rd13819;
	add.s64 	%rd13853, %rd13851, %rd13822;
	// begin inline asm
	mul.lo.u64 %rd13825, %rd15704, %rd15703;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13828, %rd15704, %rd15703;
	// end inline asm
	add.s64 	%rd15530, %rd13853, %rd13825;
	add.s64 	%rd13854, %rd13810, %rd13828;
	// begin inline asm
	mul.lo.u64 %rd13831, %rd15704, %rd15704;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15532, %rd15704, %rd15704;
	// end inline asm
	add.s64 	%rd15531, %rd13854, %rd13831;
	bra.uni 	$L__BB4_119;

$L__BB4_329:
	setp.lt.u64 	%p426, %rd15525, %rd155;
	selp.u64 	%rd15482, 1, 0, %p426;
	sub.s64 	%rd15525, %rd15525, %rd155;
	add.s64 	%rd15483, %rd156, %rd15482;
	setp.lt.u64 	%p427, %rd15526, %rd15483;
	selp.u64 	%rd15484, 1, 0, %p427;
	sub.s64 	%rd15526, %rd15526, %rd15483;
	add.s64 	%rd15485, %rd157, %rd15484;
	setp.lt.u64 	%p428, %rd15527, %rd15485;
	selp.u64 	%rd15486, 1, 0, %p428;
	sub.s64 	%rd15527, %rd15527, %rd15485;
	add.s64 	%rd15487, %rd154, %rd15486;
	setp.lt.u64 	%p429, %rd15528, %rd15487;
	selp.u64 	%rd15488, 1, 0, %p429;
	sub.s64 	%rd15528, %rd15528, %rd15487;
	setp.lt.u64 	%p430, %rd15529, %rd15488;
	selp.u64 	%rd15489, 1, 0, %p430;
	sub.s64 	%rd15529, %rd15529, %rd15488;
	setp.lt.u64 	%p431, %rd15530, %rd15489;
	selp.u64 	%rd15490, 1, 0, %p431;
	sub.s64 	%rd15530, %rd15530, %rd15489;
	setp.lt.u64 	%p432, %rd15531, %rd15490;
	selp.u64 	%rd15491, 1, 0, %p432;
	sub.s64 	%rd15531, %rd15531, %rd15490;
	sub.s64 	%rd15532, %rd15532, %rd15491;

$L__BB4_119:
	or.b64  	%rd13855, %rd15532, %rd15531;
	or.b64  	%rd13856, %rd13855, %rd15530;
	or.b64  	%rd13857, %rd13856, %rd15529;
	setp.ne.s64 	%p85, %rd13857, 0;
	setp.gt.u64 	%p86, %rd15528, %rd154;
	or.pred  	%p87, %p85, %p86;
	@%p87 bra 	$L__BB4_329;

	setp.lt.u64 	%p88, %rd15528, %rd154;
	@%p88 bra 	$L__BB4_125;

	setp.gt.u64 	%p89, %rd15527, %rd157;
	@%p89 bra 	$L__BB4_329;

	setp.lt.u64 	%p90, %rd15527, %rd157;
	@%p90 bra 	$L__BB4_125;

	setp.gt.u64 	%p91, %rd15526, %rd156;
	@%p91 bra 	$L__BB4_329;

	setp.ge.u64 	%p92, %rd15526, %rd156;
	setp.gt.u64 	%p93, %rd15525, %rd155;
	and.pred  	%p94, %p92, %p93;
	@%p94 bra 	$L__BB4_329;

$L__BB4_125:
	shl.b64 	%rd15533, %rd15525, 1;
	shl.b64 	%rd15535, %rd15527, 1;
	setp.lt.u64 	%p95, %rd15533, %rd15525;
	selp.u64 	%rd13858, 1, 0, %p95;
	bfi.b64 	%rd15534, %rd15526, %rd13858, 1, 63;
	shl.b64 	%rd15536, %rd15528, 1;
	setp.lt.u64 	%p96, %rd15536, %rd154;
	@%p96 bra 	$L__BB4_132;
	bra.uni 	$L__BB4_126;

$L__BB4_132:
	sub.s64 	%rd15533, %rd15533, %rd155;
	sub.s64 	%rd15534, %rd15534, %rd156;
	sub.s64 	%rd15535, %rd15535, %rd157;
	sub.s64 	%rd15536, %rd15536, %rd154;
	bra.uni 	$L__BB4_133;

$L__BB4_126:
	setp.gt.u64 	%p97, %rd15536, %rd154;
	@%p97 bra 	$L__BB4_133;
	bra.uni 	$L__BB4_127;

$L__BB4_133:
	add.s64 	%rd15537, %rd15525, %rd15533;
	add.s64 	%rd15538, %rd15526, %rd15534;
	add.s64 	%rd15539, %rd15527, %rd15535;
	add.s64 	%rd15540, %rd15528, %rd15536;
	setp.lt.u64 	%p103, %rd15540, %rd154;
	@%p103 bra 	$L__BB4_140;
	bra.uni 	$L__BB4_134;

$L__BB4_140:
	sub.s64 	%rd15537, %rd15537, %rd155;
	sub.s64 	%rd15538, %rd15538, %rd156;
	sub.s64 	%rd15539, %rd15539, %rd157;
	sub.s64 	%rd15540, %rd15540, %rd154;
	bra.uni 	$L__BB4_141;

$L__BB4_134:
	setp.gt.u64 	%p104, %rd15540, %rd154;
	@%p104 bra 	$L__BB4_141;
	bra.uni 	$L__BB4_135;

$L__BB4_141:
	shl.b64 	%rd15561, %rd15699, 1;
	shl.b64 	%rd15541, %rd158, 1;
	setp.lt.u64 	%p110, %rd15541, %rd158;
	selp.u64 	%rd13859, 1, 0, %p110;
	bfi.b64 	%rd15542, %rd15698, %rd13859, 1, 63;
	shl.b64 	%rd15562, %rd15700, 1;
	setp.lt.u64 	%p111, %rd15562, %rd154;
	@%p111 bra 	$L__BB4_148;
	bra.uni 	$L__BB4_142;

$L__BB4_148:
	sub.s64 	%rd15541, %rd15541, %rd155;
	sub.s64 	%rd15542, %rd15542, %rd156;
	sub.s64 	%rd15561, %rd15561, %rd157;
	sub.s64 	%rd15562, %rd15562, %rd154;
	bra.uni 	$L__BB4_149;

$L__BB4_142:
	setp.gt.u64 	%p112, %rd15562, %rd154;
	@%p112 bra 	$L__BB4_149;
	bra.uni 	$L__BB4_143;

$L__BB4_149:
	mov.u32 	%r11233, 3;
	mov.u64 	%rd15574, 0;
	mov.u64 	%rd15573, 1;
	mov.u64 	%rd15575, %rd15574;
	mov.u64 	%rd15576, %rd15574;

$L__BB4_150:
	mul.wide.s32 	%rd13864, %r11233, 8;
	mov.u64 	%rd13865, EXP_P_MINUS_2;
	add.s64 	%rd13866, %rd13865, %rd13864;
	ld.const.u64 	%rd226, [%rd13866];
	mov.u32 	%r11234, 63;

$L__BB4_151:
	mov.u32 	%r124, %r11234;
	// begin inline asm
	mul.lo.u64 %rd15563, %rd15541, %rd15541;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13870, %rd15541, %rd15541;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd13873, %rd15541, %rd15542;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13876, %rd15541, %rd15542;
	// end inline asm
	add.s64 	%rd13963, %rd13873, %rd13870;
	setp.lt.u64 	%p118, %rd13963, %rd13873;
	selp.u64 	%rd13964, 1, 0, %p118;
	add.s64 	%rd13965, %rd13876, %rd13964;
	// begin inline asm
	mul.lo.u64 %rd13879, %rd15541, %rd15561;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13882, %rd15541, %rd15561;
	// end inline asm
	add.s64 	%rd13966, %rd13879, %rd13965;
	setp.lt.u64 	%p119, %rd13966, %rd13879;
	selp.u64 	%rd13967, 1, 0, %p119;
	add.s64 	%rd13968, %rd13882, %rd13967;
	// begin inline asm
	mul.lo.u64 %rd13885, %rd15541, %rd15562;
	// end inline asm
	add.s64 	%rd13969, %rd13885, %rd13968;
	// begin inline asm
	mul.lo.u64 %rd13891, %rd15542, %rd15541;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13894, %rd15542, %rd15541;
	// end inline asm
	add.s64 	%rd15564, %rd13891, %rd13963;
	setp.lt.u64 	%p120, %rd15564, %rd13891;
	selp.u64 	%rd13970, 1, 0, %p120;
	add.s64 	%rd13971, %rd13894, %rd13970;
	add.s64 	%rd13972, %rd13966, %rd13971;
	setp.lt.u64 	%p121, %rd13972, %rd13966;
	selp.u64 	%rd13973, 1, 0, %p121;
	// begin inline asm
	mul.lo.u64 %rd13897, %rd15542, %rd15542;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13900, %rd15542, %rd15542;
	// end inline asm
	add.s64 	%rd13974, %rd13897, %rd13973;
	add.s64 	%rd13975, %rd13974, %rd13972;
	setp.lt.u64 	%p122, %rd13975, %rd13974;
	selp.u64 	%rd13976, 1, 0, %p122;
	add.s64 	%rd13977, %rd13900, %rd13976;
	add.s64 	%rd13978, %rd13969, %rd13977;
	setp.lt.u64 	%p123, %rd13978, %rd13969;
	selp.u64 	%rd13979, 1, 0, %p123;
	// begin inline asm
	mul.lo.u64 %rd13903, %rd15542, %rd15561;
	// end inline asm
	add.s64 	%rd13980, %rd13903, %rd13979;
	add.s64 	%rd13981, %rd13980, %rd13978;
	// begin inline asm
	mul.lo.u64 %rd13915, %rd15561, %rd15541;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13918, %rd15561, %rd15541;
	// end inline asm
	add.s64 	%rd237, %rd13915, %rd13975;
	setp.lt.u64 	%p124, %rd237, %rd13915;
	selp.u64 	%rd13982, 1, 0, %p124;
	add.s64 	%rd13983, %rd13918, %rd13982;
	add.s64 	%rd13984, %rd13981, %rd13983;
	setp.lt.u64 	%p125, %rd13984, %rd13981;
	selp.u64 	%rd13985, 1, 0, %p125;
	// begin inline asm
	mul.lo.u64 %rd13921, %rd15561, %rd15542;
	// end inline asm
	add.s64 	%rd13986, %rd13921, %rd13985;
	add.s64 	%rd13987, %rd13986, %rd13984;
	// begin inline asm
	mul.lo.u64 %rd13939, %rd15562, %rd15541;
	// end inline asm
	add.s64 	%rd15562, %rd13939, %rd13987;
	mov.u64 	%rd15561, %rd237;
	bra.uni 	$L__BB4_152;

$L__BB4_163:
	selp.u64 	%rd13994, 1, 0, %p136;
	add.s64 	%rd13995, %rd244, %rd13994;
	add.s64 	%rd15561, %rd13995, %rd157;
	setp.lt.u64 	%p148, %rd15561, %rd244;
	selp.u64 	%rd13996, 1, 0, %p148;
	add.s64 	%rd13997, %rd245, %rd13996;
	add.s64 	%rd15562, %rd13997, %rd154;
	mov.u64 	%rd15563, %rd15541;
	mov.u64 	%rd15564, %rd15542;

$L__BB4_152:
	mov.u64 	%rd15542, %rd15564;
	mov.u64 	%rd15541, %rd15563;
	setp.lt.u64 	%p126, %rd15562, %rd154;
	@%p126 bra 	$L__BB4_164;

	setp.gt.u64 	%p127, %rd15562, %rd154;
	@%p127 bra 	$L__BB4_158;

	setp.lt.u64 	%p128, %rd15561, %rd157;
	@%p128 bra 	$L__BB4_164;

	setp.gt.u64 	%p129, %rd15561, %rd157;
	@%p129 bra 	$L__BB4_158;

	setp.lt.u64 	%p130, %rd15542, %rd156;
	@%p130 bra 	$L__BB4_164;

	setp.le.u64 	%p131, %rd15542, %rd156;
	setp.lt.u64 	%p132, %rd15541, %rd155;
	and.pred  	%p133, %p131, %p132;
	@%p133 bra 	$L__BB4_164;

$L__BB4_158:
	setp.lt.u64 	%p135, %rd15541, %rd155;
	selp.u64 	%rd13988, 1, 0, %p135;
	sub.s64 	%rd13989, %rd15542, %rd156;
	sub.s64 	%rd15564, %rd13989, %rd13988;
	setp.gt.u64 	%p136, %rd15564, %rd15542;
	mov.pred 	%p434, -1;
	mov.pred 	%p433, %p434;
	@%p136 bra 	$L__BB4_160;

	setp.eq.s64 	%p138, %rd15564, %rd15542;
	and.pred  	%p433, %p135, %p138;

$L__BB4_160:
	sub.s64 	%rd13990, %rd15561, %rd157;
	selp.u64 	%rd13991, 1, 0, %p433;
	sub.s64 	%rd244, %rd13990, %rd13991;
	setp.gt.u64 	%p140, %rd244, %rd15561;
	@%p140 bra 	$L__BB4_162;

	setp.eq.s64 	%p141, %rd244, %rd15561;
	and.pred  	%p434, %p433, %p141;

$L__BB4_162:
	sub.s64 	%rd13992, %rd15562, %rd154;
	not.pred 	%p142, %p434;
	selp.u64 	%rd13993, 1, 0, %p434;
	sub.s64 	%rd245, %rd13992, %rd13993;
	setp.le.u64 	%p143, %rd245, %rd15562;
	setp.ne.s64 	%p144, %rd245, %rd15562;
	or.pred  	%p145, %p142, %p144;
	sub.s64 	%rd15563, %rd15541, %rd155;
	and.pred  	%p146, %p143, %p145;
	mov.u64 	%rd15561, %rd244;
	mov.u64 	%rd15562, %rd245;
	@%p146 bra 	$L__BB4_152;
	bra.uni 	$L__BB4_163;

$L__BB4_164:
	mov.u64 	%rd13998, 1;
	shl.b64 	%rd13999, %rd13998, %r124;
	and.b64  	%rd14000, %rd13999, %rd226;
	setp.eq.s64 	%p149, %rd14000, 0;
	@%p149 bra 	$L__BB4_173;

	// begin inline asm
	mul.lo.u64 %rd14001, %rd15573, %rd15541;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14004, %rd15573, %rd15541;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14007, %rd15573, %rd15542;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14010, %rd15573, %rd15542;
	// end inline asm
	add.s64 	%rd14097, %rd14004, %rd14007;
	// begin inline asm
	mul.lo.u64 %rd14013, %rd15573, %rd15561;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14016, %rd15573, %rd15561;
	// end inline asm
	add.s64 	%rd14098, %rd14010, %rd14013;
	// begin inline asm
	mul.lo.u64 %rd14019, %rd15573, %rd15562;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14022, %rd15573, %rd15562;
	// end inline asm
	add.s64 	%rd14099, %rd14016, %rd14019;
	// begin inline asm
	mul.lo.u64 %rd14025, %rd15574, %rd15541;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14028, %rd15574, %rd15541;
	// end inline asm
	add.s64 	%rd250, %rd14097, %rd14025;
	add.s64 	%rd14100, %rd14098, %rd14028;
	// begin inline asm
	mul.lo.u64 %rd14031, %rd15574, %rd15542;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14034, %rd15574, %rd15542;
	// end inline asm
	add.s64 	%rd14101, %rd14100, %rd14031;
	add.s64 	%rd14102, %rd14099, %rd14034;
	// begin inline asm
	mul.lo.u64 %rd14037, %rd15574, %rd15561;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14040, %rd15574, %rd15561;
	// end inline asm
	add.s64 	%rd14103, %rd14102, %rd14037;
	add.s64 	%rd14104, %rd14022, %rd14040;
	// begin inline asm
	mul.lo.u64 %rd14043, %rd15574, %rd15562;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14046, %rd15574, %rd15562;
	// end inline asm
	add.s64 	%rd14105, %rd14104, %rd14043;
	// begin inline asm
	mul.lo.u64 %rd14049, %rd15575, %rd15541;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14052, %rd15575, %rd15541;
	// end inline asm
	add.s64 	%rd251, %rd14101, %rd14049;
	add.s64 	%rd14106, %rd14103, %rd14052;
	// begin inline asm
	mul.lo.u64 %rd14055, %rd15575, %rd15542;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14058, %rd15575, %rd15542;
	// end inline asm
	add.s64 	%rd14107, %rd14106, %rd14055;
	add.s64 	%rd14108, %rd14105, %rd14058;
	// begin inline asm
	mul.lo.u64 %rd14061, %rd15575, %rd15561;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14064, %rd15575, %rd15561;
	// end inline asm
	add.s64 	%rd14109, %rd14108, %rd14061;
	add.s64 	%rd14110, %rd14046, %rd14064;
	// begin inline asm
	mul.lo.u64 %rd14067, %rd15575, %rd15562;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14070, %rd15575, %rd15562;
	// end inline asm
	add.s64 	%rd14111, %rd14110, %rd14067;
	// begin inline asm
	mul.lo.u64 %rd14073, %rd15576, %rd15541;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14076, %rd15576, %rd15541;
	// end inline asm
	add.s64 	%rd252, %rd14107, %rd14073;
	add.s64 	%rd14112, %rd14109, %rd14076;
	// begin inline asm
	mul.lo.u64 %rd14079, %rd15576, %rd15542;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14082, %rd15576, %rd15542;
	// end inline asm
	add.s64 	%rd15569, %rd14112, %rd14079;
	add.s64 	%rd14113, %rd14111, %rd14082;
	// begin inline asm
	mul.lo.u64 %rd14085, %rd15576, %rd15561;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14088, %rd15576, %rd15561;
	// end inline asm
	add.s64 	%rd15570, %rd14113, %rd14085;
	add.s64 	%rd14114, %rd14070, %rd14088;
	// begin inline asm
	mul.lo.u64 %rd14091, %rd15576, %rd15562;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15572, %rd15576, %rd15562;
	// end inline asm
	add.s64 	%rd15571, %rd14114, %rd14091;
	mov.u64 	%rd15573, %rd14001;
	mov.u64 	%rd15574, %rd250;
	mov.u64 	%rd15575, %rd251;
	mov.u64 	%rd15576, %rd252;
	bra.uni 	$L__BB4_166;

$L__BB4_172:
	setp.lt.u64 	%p160, %rd15573, %rd155;
	selp.u64 	%rd14118, 1, 0, %p160;
	sub.s64 	%rd15573, %rd15573, %rd155;
	add.s64 	%rd14119, %rd156, %rd14118;
	setp.lt.u64 	%p161, %rd15574, %rd14119;
	selp.u64 	%rd14120, 1, 0, %p161;
	sub.s64 	%rd15574, %rd15574, %rd14119;
	add.s64 	%rd14121, %rd157, %rd14120;
	setp.lt.u64 	%p162, %rd15575, %rd14121;
	selp.u64 	%rd14122, 1, 0, %p162;
	sub.s64 	%rd15575, %rd15575, %rd14121;
	add.s64 	%rd14123, %rd154, %rd14122;
	setp.lt.u64 	%p163, %rd15576, %rd14123;
	selp.u64 	%rd14124, 1, 0, %p163;
	sub.s64 	%rd15576, %rd15576, %rd14123;
	setp.lt.u64 	%p164, %rd15569, %rd14124;
	selp.u64 	%rd14125, 1, 0, %p164;
	sub.s64 	%rd15569, %rd15569, %rd14124;
	setp.lt.u64 	%p165, %rd15570, %rd14125;
	selp.u64 	%rd14126, 1, 0, %p165;
	sub.s64 	%rd15570, %rd15570, %rd14125;
	setp.lt.u64 	%p166, %rd15571, %rd14126;
	selp.u64 	%rd14127, 1, 0, %p166;
	sub.s64 	%rd15571, %rd15571, %rd14126;
	sub.s64 	%rd15572, %rd15572, %rd14127;

$L__BB4_166:
	or.b64  	%rd14115, %rd15572, %rd15571;
	or.b64  	%rd14116, %rd14115, %rd15570;
	or.b64  	%rd14117, %rd14116, %rd15569;
	setp.ne.s64 	%p150, %rd14117, 0;
	setp.gt.u64 	%p151, %rd15576, %rd154;
	or.pred  	%p152, %p150, %p151;
	@%p152 bra 	$L__BB4_172;

	setp.lt.u64 	%p153, %rd15576, %rd154;
	@%p153 bra 	$L__BB4_173;

	setp.gt.u64 	%p154, %rd15575, %rd157;
	@%p154 bra 	$L__BB4_172;

	setp.lt.u64 	%p155, %rd15575, %rd157;
	@%p155 bra 	$L__BB4_173;

	setp.gt.u64 	%p156, %rd15574, %rd156;
	@%p156 bra 	$L__BB4_172;

	setp.lt.u64 	%p157, %rd15574, %rd156;
	setp.le.u64 	%p158, %rd15573, %rd155;
	or.pred  	%p159, %p157, %p158;
	@%p159 bra 	$L__BB4_173;
	bra.uni 	$L__BB4_172;

$L__BB4_173:
	add.s32 	%r11234, %r124, -1;
	setp.gt.s32 	%p167, %r124, 0;
	@%p167 bra 	$L__BB4_151;

	add.s32 	%r126, %r11233, -1;
	setp.gt.s32 	%p168, %r11233, 0;
	mov.u32 	%r11233, %r126;
	@%p168 bra 	$L__BB4_150;

	// begin inline asm
	mul.lo.u64 %rd15577, %rd15537, %rd15573;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14131, %rd15537, %rd15573;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14134, %rd15537, %rd15574;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14137, %rd15537, %rd15574;
	// end inline asm
	add.s64 	%rd14224, %rd14131, %rd14134;
	// begin inline asm
	mul.lo.u64 %rd14140, %rd15537, %rd15575;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14143, %rd15537, %rd15575;
	// end inline asm
	add.s64 	%rd14225, %rd14137, %rd14140;
	// begin inline asm
	mul.lo.u64 %rd14146, %rd15537, %rd15576;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14149, %rd15537, %rd15576;
	// end inline asm
	add.s64 	%rd14226, %rd14143, %rd14146;
	// begin inline asm
	mul.lo.u64 %rd14152, %rd15538, %rd15573;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14155, %rd15538, %rd15573;
	// end inline asm
	add.s64 	%rd15578, %rd14224, %rd14152;
	add.s64 	%rd14227, %rd14225, %rd14155;
	// begin inline asm
	mul.lo.u64 %rd14158, %rd15538, %rd15574;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14161, %rd15538, %rd15574;
	// end inline asm
	add.s64 	%rd14228, %rd14227, %rd14158;
	add.s64 	%rd14229, %rd14226, %rd14161;
	// begin inline asm
	mul.lo.u64 %rd14164, %rd15538, %rd15575;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14167, %rd15538, %rd15575;
	// end inline asm
	add.s64 	%rd14230, %rd14229, %rd14164;
	add.s64 	%rd14231, %rd14149, %rd14167;
	// begin inline asm
	mul.lo.u64 %rd14170, %rd15538, %rd15576;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14173, %rd15538, %rd15576;
	// end inline asm
	add.s64 	%rd14232, %rd14231, %rd14170;
	// begin inline asm
	mul.lo.u64 %rd14176, %rd15539, %rd15573;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14179, %rd15539, %rd15573;
	// end inline asm
	add.s64 	%rd15579, %rd14228, %rd14176;
	add.s64 	%rd14233, %rd14230, %rd14179;
	// begin inline asm
	mul.lo.u64 %rd14182, %rd15539, %rd15574;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14185, %rd15539, %rd15574;
	// end inline asm
	add.s64 	%rd14234, %rd14233, %rd14182;
	add.s64 	%rd14235, %rd14232, %rd14185;
	// begin inline asm
	mul.lo.u64 %rd14188, %rd15539, %rd15575;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14191, %rd15539, %rd15575;
	// end inline asm
	add.s64 	%rd14236, %rd14235, %rd14188;
	add.s64 	%rd14237, %rd14173, %rd14191;
	// begin inline asm
	mul.lo.u64 %rd14194, %rd15539, %rd15576;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14197, %rd15539, %rd15576;
	// end inline asm
	add.s64 	%rd14238, %rd14237, %rd14194;
	// begin inline asm
	mul.lo.u64 %rd14200, %rd15540, %rd15573;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14203, %rd15540, %rd15573;
	// end inline asm
	add.s64 	%rd15580, %rd14234, %rd14200;
	add.s64 	%rd14239, %rd14236, %rd14203;
	// begin inline asm
	mul.lo.u64 %rd14206, %rd15540, %rd15574;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14209, %rd15540, %rd15574;
	// end inline asm
	add.s64 	%rd15581, %rd14239, %rd14206;
	add.s64 	%rd14240, %rd14238, %rd14209;
	// begin inline asm
	mul.lo.u64 %rd14212, %rd15540, %rd15575;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14215, %rd15540, %rd15575;
	// end inline asm
	add.s64 	%rd15582, %rd14240, %rd14212;
	add.s64 	%rd14241, %rd14197, %rd14215;
	// begin inline asm
	mul.lo.u64 %rd14218, %rd15540, %rd15576;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15584, %rd15540, %rd15576;
	// end inline asm
	add.s64 	%rd15583, %rd14241, %rd14218;
	bra.uni 	$L__BB4_176;

$L__BB4_328:
	setp.lt.u64 	%p419, %rd15577, %rd155;
	selp.u64 	%rd15472, 1, 0, %p419;
	sub.s64 	%rd15577, %rd15577, %rd155;
	add.s64 	%rd15473, %rd156, %rd15472;
	setp.lt.u64 	%p420, %rd15578, %rd15473;
	selp.u64 	%rd15474, 1, 0, %p420;
	sub.s64 	%rd15578, %rd15578, %rd15473;
	add.s64 	%rd15475, %rd157, %rd15474;
	setp.lt.u64 	%p421, %rd15579, %rd15475;
	selp.u64 	%rd15476, 1, 0, %p421;
	sub.s64 	%rd15579, %rd15579, %rd15475;
	add.s64 	%rd15477, %rd154, %rd15476;
	setp.lt.u64 	%p422, %rd15580, %rd15477;
	selp.u64 	%rd15478, 1, 0, %p422;
	sub.s64 	%rd15580, %rd15580, %rd15477;
	setp.lt.u64 	%p423, %rd15581, %rd15478;
	selp.u64 	%rd15479, 1, 0, %p423;
	sub.s64 	%rd15581, %rd15581, %rd15478;
	setp.lt.u64 	%p424, %rd15582, %rd15479;
	selp.u64 	%rd15480, 1, 0, %p424;
	sub.s64 	%rd15582, %rd15582, %rd15479;
	setp.lt.u64 	%p425, %rd15583, %rd15480;
	selp.u64 	%rd15481, 1, 0, %p425;
	sub.s64 	%rd15583, %rd15583, %rd15480;
	sub.s64 	%rd15584, %rd15584, %rd15481;

$L__BB4_176:
	or.b64  	%rd14242, %rd15584, %rd15583;
	or.b64  	%rd14243, %rd14242, %rd15582;
	or.b64  	%rd14244, %rd14243, %rd15581;
	setp.ne.s64 	%p169, %rd14244, 0;
	setp.gt.u64 	%p170, %rd15580, %rd154;
	or.pred  	%p171, %p169, %p170;
	@%p171 bra 	$L__BB4_328;

	setp.lt.u64 	%p172, %rd15580, %rd154;
	@%p172 bra 	$L__BB4_182;

	setp.gt.u64 	%p173, %rd15579, %rd157;
	@%p173 bra 	$L__BB4_328;

	setp.lt.u64 	%p174, %rd15579, %rd157;
	@%p174 bra 	$L__BB4_182;

	setp.gt.u64 	%p175, %rd15578, %rd156;
	@%p175 bra 	$L__BB4_328;

	setp.ge.u64 	%p176, %rd15578, %rd156;
	setp.gt.u64 	%p177, %rd15577, %rd155;
	and.pred  	%p178, %p176, %p177;
	@%p178 bra 	$L__BB4_328;

$L__BB4_182:
	// begin inline asm
	mul.lo.u64 %rd15585, %rd15577, %rd15577;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14248, %rd15577, %rd15577;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14251, %rd15577, %rd15578;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14254, %rd15577, %rd15578;
	// end inline asm
	add.s64 	%rd14341, %rd14248, %rd14251;
	// begin inline asm
	mul.lo.u64 %rd14257, %rd15577, %rd15579;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14260, %rd15577, %rd15579;
	// end inline asm
	add.s64 	%rd14342, %rd14254, %rd14257;
	// begin inline asm
	mul.lo.u64 %rd14263, %rd15577, %rd15580;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14266, %rd15577, %rd15580;
	// end inline asm
	add.s64 	%rd14343, %rd14260, %rd14263;
	// begin inline asm
	mul.lo.u64 %rd14269, %rd15578, %rd15577;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14272, %rd15578, %rd15577;
	// end inline asm
	add.s64 	%rd15586, %rd14341, %rd14269;
	add.s64 	%rd14344, %rd14342, %rd14272;
	// begin inline asm
	mul.lo.u64 %rd14275, %rd15578, %rd15578;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14278, %rd15578, %rd15578;
	// end inline asm
	add.s64 	%rd14345, %rd14344, %rd14275;
	add.s64 	%rd14346, %rd14343, %rd14278;
	// begin inline asm
	mul.lo.u64 %rd14281, %rd15578, %rd15579;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14284, %rd15578, %rd15579;
	// end inline asm
	add.s64 	%rd14347, %rd14346, %rd14281;
	add.s64 	%rd14348, %rd14266, %rd14284;
	// begin inline asm
	mul.lo.u64 %rd14287, %rd15578, %rd15580;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14290, %rd15578, %rd15580;
	// end inline asm
	add.s64 	%rd14349, %rd14348, %rd14287;
	// begin inline asm
	mul.lo.u64 %rd14293, %rd15579, %rd15577;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14296, %rd15579, %rd15577;
	// end inline asm
	add.s64 	%rd15587, %rd14345, %rd14293;
	add.s64 	%rd14350, %rd14347, %rd14296;
	// begin inline asm
	mul.lo.u64 %rd14299, %rd15579, %rd15578;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14302, %rd15579, %rd15578;
	// end inline asm
	add.s64 	%rd14351, %rd14350, %rd14299;
	add.s64 	%rd14352, %rd14349, %rd14302;
	// begin inline asm
	mul.lo.u64 %rd14305, %rd15579, %rd15579;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14308, %rd15579, %rd15579;
	// end inline asm
	add.s64 	%rd14353, %rd14352, %rd14305;
	add.s64 	%rd14354, %rd14290, %rd14308;
	// begin inline asm
	mul.lo.u64 %rd14311, %rd15579, %rd15580;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14314, %rd15579, %rd15580;
	// end inline asm
	add.s64 	%rd14355, %rd14354, %rd14311;
	// begin inline asm
	mul.lo.u64 %rd14317, %rd15580, %rd15577;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14320, %rd15580, %rd15577;
	// end inline asm
	add.s64 	%rd15588, %rd14351, %rd14317;
	add.s64 	%rd14356, %rd14353, %rd14320;
	// begin inline asm
	mul.lo.u64 %rd14323, %rd15580, %rd15578;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14326, %rd15580, %rd15578;
	// end inline asm
	add.s64 	%rd15589, %rd14356, %rd14323;
	add.s64 	%rd14357, %rd14355, %rd14326;
	// begin inline asm
	mul.lo.u64 %rd14329, %rd15580, %rd15579;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14332, %rd15580, %rd15579;
	// end inline asm
	add.s64 	%rd15590, %rd14357, %rd14329;
	add.s64 	%rd14358, %rd14314, %rd14332;
	// begin inline asm
	mul.lo.u64 %rd14335, %rd15580, %rd15580;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15592, %rd15580, %rd15580;
	// end inline asm
	add.s64 	%rd15591, %rd14358, %rd14335;
	bra.uni 	$L__BB4_183;

$L__BB4_327:
	setp.lt.u64 	%p412, %rd15585, %rd155;
	selp.u64 	%rd15462, 1, 0, %p412;
	sub.s64 	%rd15585, %rd15585, %rd155;
	add.s64 	%rd15463, %rd156, %rd15462;
	setp.lt.u64 	%p413, %rd15586, %rd15463;
	selp.u64 	%rd15464, 1, 0, %p413;
	sub.s64 	%rd15586, %rd15586, %rd15463;
	add.s64 	%rd15465, %rd157, %rd15464;
	setp.lt.u64 	%p414, %rd15587, %rd15465;
	selp.u64 	%rd15466, 1, 0, %p414;
	sub.s64 	%rd15587, %rd15587, %rd15465;
	add.s64 	%rd15467, %rd154, %rd15466;
	setp.lt.u64 	%p415, %rd15588, %rd15467;
	selp.u64 	%rd15468, 1, 0, %p415;
	sub.s64 	%rd15588, %rd15588, %rd15467;
	setp.lt.u64 	%p416, %rd15589, %rd15468;
	selp.u64 	%rd15469, 1, 0, %p416;
	sub.s64 	%rd15589, %rd15589, %rd15468;
	setp.lt.u64 	%p417, %rd15590, %rd15469;
	selp.u64 	%rd15470, 1, 0, %p417;
	sub.s64 	%rd15590, %rd15590, %rd15469;
	setp.lt.u64 	%p418, %rd15591, %rd15470;
	selp.u64 	%rd15471, 1, 0, %p418;
	sub.s64 	%rd15591, %rd15591, %rd15470;
	sub.s64 	%rd15592, %rd15592, %rd15471;

$L__BB4_183:
	or.b64  	%rd14359, %rd15592, %rd15591;
	or.b64  	%rd14360, %rd14359, %rd15590;
	or.b64  	%rd14361, %rd14360, %rd15589;
	setp.ne.s64 	%p179, %rd14361, 0;
	setp.gt.u64 	%p180, %rd15588, %rd154;
	or.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB4_327;

	setp.lt.u64 	%p182, %rd15588, %rd154;
	@%p182 bra 	$L__BB4_189;

	setp.gt.u64 	%p183, %rd15587, %rd157;
	@%p183 bra 	$L__BB4_327;

	setp.lt.u64 	%p184, %rd15587, %rd157;
	@%p184 bra 	$L__BB4_189;

	setp.gt.u64 	%p185, %rd15586, %rd156;
	@%p185 bra 	$L__BB4_327;

	setp.ge.u64 	%p186, %rd15586, %rd156;
	setp.gt.u64 	%p187, %rd15585, %rd155;
	and.pred  	%p188, %p186, %p187;
	@%p188 bra 	$L__BB4_327;

$L__BB4_189:
	shl.b64 	%rd15593, %rd15701, 1;
	shl.b64 	%rd15595, %rd15703, 1;
	setp.lt.u64 	%p189, %rd15593, %rd15701;
	selp.u64 	%rd14362, 1, 0, %p189;
	bfi.b64 	%rd15594, %rd15702, %rd14362, 1, 63;
	shl.b64 	%rd15596, %rd15704, 1;
	setp.lt.u64 	%p190, %rd15596, %rd154;
	@%p190 bra 	$L__BB4_196;
	bra.uni 	$L__BB4_190;

$L__BB4_196:
	sub.s64 	%rd15593, %rd15593, %rd155;
	sub.s64 	%rd15594, %rd15594, %rd156;
	sub.s64 	%rd15595, %rd15595, %rd157;
	sub.s64 	%rd15596, %rd15596, %rd154;
	bra.uni 	$L__BB4_197;

$L__BB4_190:
	setp.gt.u64 	%p191, %rd15596, %rd154;
	@%p191 bra 	$L__BB4_197;
	bra.uni 	$L__BB4_191;

$L__BB4_197:
	sub.s64 	%rd15701, %rd15585, %rd15593;
	sub.s64 	%rd15702, %rd15586, %rd15594;
	setp.ge.u64 	%p197, %rd15585, %rd15593;
	mov.u16 	%rs1141, 0;
	mov.u16 	%rs1140, %rs1141;
	@%p197 bra 	$L__BB4_199;

	setp.eq.s64 	%p198, %rd15586, 0;
	not.b64 	%rd14363, %rd15594;
	add.s64 	%rd14364, %rd15586, %rd14363;
	neg.s64 	%rd14365, %rd15594;
	selp.b64 	%rd15702, %rd14365, %rd14364, %p198;
	setp.le.u64 	%p199, %rd15586, %rd15594;
	selp.u16 	%rs1140, 1, 0, %p199;

$L__BB4_199:
	setp.eq.s16 	%p200, %rs1140, 0;
	sub.s64 	%rd15703, %rd15587, %rd15595;
	@%p200 bra 	$L__BB4_201;

	setp.eq.s64 	%p201, %rd15587, 0;
	not.b64 	%rd14366, %rd15595;
	add.s64 	%rd14367, %rd15587, %rd14366;
	neg.s64 	%rd14368, %rd15595;
	selp.b64 	%rd15703, %rd14368, %rd14367, %p201;
	setp.le.u64 	%p202, %rd15587, %rd15595;
	selp.u16 	%rs1141, 1, 0, %p202;

$L__BB4_201:
	setp.eq.s16 	%p203, %rs1141, 0;
	mov.u16 	%rs1142, 0;
	sub.s64 	%rd15704, %rd15588, %rd15596;
	@%p203 bra 	$L__BB4_203;

	setp.eq.s64 	%p204, %rd15588, 0;
	not.b64 	%rd14369, %rd15596;
	add.s64 	%rd14370, %rd15588, %rd14369;
	neg.s64 	%rd14371, %rd15596;
	selp.b64 	%rd15704, %rd14371, %rd14370, %p204;
	setp.le.u64 	%p205, %rd15588, %rd15596;
	selp.u16 	%rs1142, 1, 0, %p205;

$L__BB4_203:
	setp.eq.s16 	%p206, %rs1142, 0;
	@%p206 bra 	$L__BB4_205;

	add.s64 	%rd15701, %rd15701, %rd155;
	add.s64 	%rd15702, %rd15702, %rd156;
	add.s64 	%rd15703, %rd15703, %rd157;
	add.s64 	%rd15704, %rd15704, %rd154;

$L__BB4_205:
	mov.u64 	%rd14467, 0;
	// begin inline asm
	mul.lo.u64 %rd15604, %rd15577, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14375, %rd15577, %rd14467;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14378, %rd15577, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14381, %rd15577, %rd14467;
	// end inline asm
	add.s64 	%rd14468, %rd14375, %rd14378;
	// begin inline asm
	mul.lo.u64 %rd14384, %rd15577, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14387, %rd15577, %rd14467;
	// end inline asm
	add.s64 	%rd14469, %rd14381, %rd14384;
	// begin inline asm
	mul.lo.u64 %rd14390, %rd15577, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14393, %rd15577, %rd14467;
	// end inline asm
	add.s64 	%rd14470, %rd14387, %rd14390;
	// begin inline asm
	mul.lo.u64 %rd14396, %rd15578, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14399, %rd15578, %rd14467;
	// end inline asm
	add.s64 	%rd15605, %rd14468, %rd14396;
	add.s64 	%rd14471, %rd14469, %rd14399;
	// begin inline asm
	mul.lo.u64 %rd14402, %rd15578, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14405, %rd15578, %rd14467;
	// end inline asm
	add.s64 	%rd14472, %rd14471, %rd14402;
	add.s64 	%rd14473, %rd14470, %rd14405;
	// begin inline asm
	mul.lo.u64 %rd14408, %rd15578, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14411, %rd15578, %rd14467;
	// end inline asm
	add.s64 	%rd14474, %rd14473, %rd14408;
	add.s64 	%rd14475, %rd14393, %rd14411;
	// begin inline asm
	mul.lo.u64 %rd14414, %rd15578, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14417, %rd15578, %rd14467;
	// end inline asm
	add.s64 	%rd14476, %rd14475, %rd14414;
	// begin inline asm
	mul.lo.u64 %rd14420, %rd15579, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14423, %rd15579, %rd14467;
	// end inline asm
	add.s64 	%rd15606, %rd14472, %rd14420;
	add.s64 	%rd14477, %rd14474, %rd14423;
	// begin inline asm
	mul.lo.u64 %rd14426, %rd15579, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14429, %rd15579, %rd14467;
	// end inline asm
	add.s64 	%rd14478, %rd14477, %rd14426;
	add.s64 	%rd14479, %rd14476, %rd14429;
	// begin inline asm
	mul.lo.u64 %rd14432, %rd15579, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14435, %rd15579, %rd14467;
	// end inline asm
	add.s64 	%rd14480, %rd14479, %rd14432;
	add.s64 	%rd14481, %rd14417, %rd14435;
	// begin inline asm
	mul.lo.u64 %rd14438, %rd15579, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14441, %rd15579, %rd14467;
	// end inline asm
	add.s64 	%rd14482, %rd14481, %rd14438;
	// begin inline asm
	mul.lo.u64 %rd14444, %rd15580, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14447, %rd15580, %rd14467;
	// end inline asm
	add.s64 	%rd15607, %rd14478, %rd14444;
	add.s64 	%rd14483, %rd14480, %rd14447;
	// begin inline asm
	mul.lo.u64 %rd14450, %rd15580, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14453, %rd15580, %rd14467;
	// end inline asm
	add.s64 	%rd15608, %rd14483, %rd14450;
	add.s64 	%rd14484, %rd14482, %rd14453;
	// begin inline asm
	mul.lo.u64 %rd14456, %rd15580, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14459, %rd15580, %rd14467;
	// end inline asm
	add.s64 	%rd15609, %rd14484, %rd14456;
	add.s64 	%rd14485, %rd14441, %rd14459;
	// begin inline asm
	mul.lo.u64 %rd14462, %rd15580, %rd14467;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15611, %rd15580, %rd14467;
	// end inline asm
	add.s64 	%rd15610, %rd14485, %rd14462;
	bra.uni 	$L__BB4_206;

$L__BB4_326:
	setp.lt.u64 	%p405, %rd15604, %rd155;
	selp.u64 	%rd15452, 1, 0, %p405;
	sub.s64 	%rd15604, %rd15604, %rd155;
	add.s64 	%rd15453, %rd156, %rd15452;
	setp.lt.u64 	%p406, %rd15605, %rd15453;
	selp.u64 	%rd15454, 1, 0, %p406;
	sub.s64 	%rd15605, %rd15605, %rd15453;
	add.s64 	%rd15455, %rd157, %rd15454;
	setp.lt.u64 	%p407, %rd15606, %rd15455;
	selp.u64 	%rd15456, 1, 0, %p407;
	sub.s64 	%rd15606, %rd15606, %rd15455;
	add.s64 	%rd15457, %rd154, %rd15456;
	setp.lt.u64 	%p408, %rd15607, %rd15457;
	selp.u64 	%rd15458, 1, 0, %p408;
	sub.s64 	%rd15607, %rd15607, %rd15457;
	setp.lt.u64 	%p409, %rd15608, %rd15458;
	selp.u64 	%rd15459, 1, 0, %p409;
	sub.s64 	%rd15608, %rd15608, %rd15458;
	setp.lt.u64 	%p410, %rd15609, %rd15459;
	selp.u64 	%rd15460, 1, 0, %p410;
	sub.s64 	%rd15609, %rd15609, %rd15459;
	setp.lt.u64 	%p411, %rd15610, %rd15460;
	selp.u64 	%rd15461, 1, 0, %p411;
	sub.s64 	%rd15610, %rd15610, %rd15460;
	sub.s64 	%rd15611, %rd15611, %rd15461;

$L__BB4_206:
	or.b64  	%rd14486, %rd15611, %rd15610;
	or.b64  	%rd14487, %rd14486, %rd15609;
	or.b64  	%rd14488, %rd14487, %rd15608;
	setp.ne.s64 	%p207, %rd14488, 0;
	setp.gt.u64 	%p208, %rd15607, %rd154;
	or.pred  	%p209, %p207, %p208;
	@%p209 bra 	$L__BB4_326;

	setp.lt.u64 	%p210, %rd15607, %rd154;
	@%p210 bra 	$L__BB4_212;

	setp.gt.u64 	%p211, %rd15606, %rd157;
	@%p211 bra 	$L__BB4_326;

	setp.lt.u64 	%p212, %rd15606, %rd157;
	@%p212 bra 	$L__BB4_212;

	setp.gt.u64 	%p213, %rd15605, %rd156;
	@%p213 bra 	$L__BB4_326;

	setp.ge.u64 	%p214, %rd15605, %rd156;
	setp.gt.u64 	%p215, %rd15604, %rd155;
	and.pred  	%p216, %p214, %p215;
	@%p216 bra 	$L__BB4_326;

$L__BB4_212:
	sub.s64 	%rd15697, %rd15604, %rd158;
	sub.s64 	%rd15698, %rd15605, %rd15698;
	sub.s64 	%rd15699, %rd15606, %rd15699;
	sub.s64 	%rd15700, %rd15607, %rd15700;
	setp.ge.u64 	%p217, %rd15604, %rd158;
	mov.u16 	%rs1144, 0;
	mov.u16 	%rs1143, %rs1144;
	@%p217 bra 	$L__BB4_214;

	setp.eq.s64 	%p218, %rd15605, 0;
	not.b64 	%rd14489, %rd15698;
	add.s64 	%rd14490, %rd15605, %rd14489;
	neg.s64 	%rd14491, %rd15698;
	selp.b64 	%rd15698, %rd14491, %rd14490, %p218;
	setp.le.u64 	%p219, %rd15605, %rd15698;
	selp.u16 	%rs1143, 1, 0, %p219;

$L__BB4_214:
	setp.eq.s16 	%p220, %rs1143, 0;
	@%p220 bra 	$L__BB4_216;

	setp.eq.s64 	%p221, %rd15606, 0;
	not.b64 	%rd14492, %rd15699;
	add.s64 	%rd14493, %rd15606, %rd14492;
	neg.s64 	%rd14494, %rd15699;
	selp.b64 	%rd15699, %rd14494, %rd14493, %p221;
	setp.le.u64 	%p222, %rd15606, %rd15699;
	selp.u16 	%rs1144, 1, 0, %p222;

$L__BB4_216:
	setp.eq.s16 	%p223, %rs1144, 0;
	mov.u16 	%rs1145, 0;
	@%p223 bra 	$L__BB4_218;

	setp.eq.s64 	%p224, %rd15607, 0;
	not.b64 	%rd14495, %rd15700;
	add.s64 	%rd14496, %rd15607, %rd14495;
	neg.s64 	%rd14497, %rd15700;
	selp.b64 	%rd15700, %rd14497, %rd14496, %p224;
	setp.le.u64 	%p225, %rd15607, %rd15700;
	selp.u16 	%rs1145, 1, 0, %p225;

$L__BB4_218:
	setp.eq.s16 	%p226, %rs1145, 0;
	@%p226 bra 	$L__BB4_220;

	add.s64 	%rd15697, %rd15697, %rd155;
	add.s64 	%rd15698, %rd15698, %rd156;
	add.s64 	%rd15699, %rd15699, %rd157;
	add.s64 	%rd15700, %rd15700, %rd154;

$L__BB4_220:
	shr.s32 	%r11010, %r122, 31;
	shr.u32 	%r11011, %r11010, 26;
	add.s32 	%r11012, %r122, %r11011;
	shr.s32 	%r11013, %r11012, 6;
	mul.wide.s32 	%rd14498, %r11013, 8;
	add.s64 	%rd14499, %rd15705, %rd14498;
	and.b32  	%r11014, %r11012, -64;
	sub.s32 	%r11015, %r122, %r11014;
	mov.u64 	%rd14500, 1;
	shl.b64 	%rd14501, %rd14500, %r11015;
	ld.local.u64 	%rd14502, [%rd14499];
	and.b64  	%rd14503, %rd14502, %rd14501;
	setp.eq.s64 	%p227, %rd14503, 0;
	@%p227 bra 	$L__BB4_293;

	mov.u64 	%rd14504, 5204712524664259685;
	sub.s64 	%rd15619, %rd14504, %rd15697;
	setp.gt.u64 	%p228, %rd15697, 5204712524664259685;
	selp.b64 	%rd14505, 6747795201694173351, 6747795201694173352, %p228;
	sub.s64 	%rd15620, %rd14505, %rd15698;
	setp.gt.u64 	%p229, %rd15698, 6747795201694173351;
	and.pred  	%p230, %p228, %p229;
	selp.b64 	%rd14506, -209500633525038056, -209500633525038055, %p230;
	sub.s64 	%rd15621, %rd14506, %rd15699;
	setp.gt.u64 	%p231, %rd15699, -209500633525038056;
	and.pred  	%p232, %p231, %p230;
	not.pred 	%p233, %p232;
	selp.b64 	%rd14507, -7185545363635252041, -7185545363635252040, %p232;
	sub.s64 	%rd15622, %rd14507, %rd15700;
	setp.lt.u64 	%p234, %rd15700, -7185545363635252040;
	or.pred  	%p235, %p234, %p233;
	@%p235 bra 	$L__BB4_223;

	add.s64 	%rd15619, %rd15619, %rd155;
	add.s64 	%rd15620, %rd15620, %rd156;
	add.s64 	%rd15621, %rd15621, %rd157;
	add.s64 	%rd15622, %rd15622, %rd154;

$L__BB4_223:
	mov.u64 	%rd14508, 8772561819708210092;
	sub.s64 	%rd15635, %rd14508, %rd15701;
	setp.gt.u64 	%p236, %rd15701, 8772561819708210092;
	selp.b64 	%rd14509, 6170039885052185350, 6170039885052185351, %p236;
	sub.s64 	%rd15636, %rd14509, %rd15702;
	setp.gt.u64 	%p237, %rd15702, 6170039885052185350;
	and.pred  	%p238, %p236, %p237;
	selp.b64 	%rd14510, 188021827762530520, 188021827762530521, %p238;
	sub.s64 	%rd15643, %rd14510, %rd15703;
	setp.gt.u64 	%p239, %rd15703, 188021827762530520;
	and.pred  	%p240, %p239, %p238;
	not.pred 	%p241, %p240;
	selp.b64 	%rd14511, 6481385041966929815, 6481385041966929816, %p240;
	sub.s64 	%rd15644, %rd14511, %rd15704;
	setp.lt.u64 	%p242, %rd15704, 6481385041966929816;
	or.pred  	%p243, %p242, %p241;
	@%p243 bra 	$L__BB4_225;

	add.s64 	%rd15635, %rd15635, %rd155;
	add.s64 	%rd15636, %rd15636, %rd156;
	add.s64 	%rd15643, %rd15643, %rd157;
	add.s64 	%rd15644, %rd15644, %rd154;

$L__BB4_225:
	mov.u32 	%r11235, 3;
	mov.u64 	%rd15656, 0;
	mov.u64 	%rd15655, 1;
	mov.u64 	%rd15657, %rd15656;
	mov.u64 	%rd15658, %rd15656;

$L__BB4_226:
	mul.wide.s32 	%rd14516, %r11235, 8;
	add.s64 	%rd14518, %rd13865, %rd14516;
	ld.const.u64 	%rd405, [%rd14518];
	mov.u32 	%r11236, 63;

$L__BB4_227:
	mov.u32 	%r128, %r11236;
	// begin inline asm
	mul.lo.u64 %rd15645, %rd15635, %rd15635;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14522, %rd15635, %rd15635;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14525, %rd15635, %rd15636;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14528, %rd15635, %rd15636;
	// end inline asm
	add.s64 	%rd14615, %rd14525, %rd14522;
	setp.lt.u64 	%p244, %rd14615, %rd14525;
	selp.u64 	%rd14616, 1, 0, %p244;
	add.s64 	%rd14617, %rd14528, %rd14616;
	// begin inline asm
	mul.lo.u64 %rd14531, %rd15635, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14534, %rd15635, %rd15643;
	// end inline asm
	add.s64 	%rd14618, %rd14531, %rd14617;
	setp.lt.u64 	%p245, %rd14618, %rd14531;
	selp.u64 	%rd14619, 1, 0, %p245;
	add.s64 	%rd14620, %rd14534, %rd14619;
	// begin inline asm
	mul.lo.u64 %rd14537, %rd15635, %rd15644;
	// end inline asm
	add.s64 	%rd14621, %rd14537, %rd14620;
	// begin inline asm
	mul.lo.u64 %rd14543, %rd15636, %rd15635;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14546, %rd15636, %rd15635;
	// end inline asm
	add.s64 	%rd15646, %rd14543, %rd14615;
	setp.lt.u64 	%p246, %rd15646, %rd14543;
	selp.u64 	%rd14622, 1, 0, %p246;
	add.s64 	%rd14623, %rd14546, %rd14622;
	add.s64 	%rd14624, %rd14618, %rd14623;
	setp.lt.u64 	%p247, %rd14624, %rd14618;
	selp.u64 	%rd14625, 1, 0, %p247;
	// begin inline asm
	mul.lo.u64 %rd14549, %rd15636, %rd15636;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14552, %rd15636, %rd15636;
	// end inline asm
	add.s64 	%rd14626, %rd14549, %rd14625;
	add.s64 	%rd14627, %rd14626, %rd14624;
	setp.lt.u64 	%p248, %rd14627, %rd14626;
	selp.u64 	%rd14628, 1, 0, %p248;
	add.s64 	%rd14629, %rd14552, %rd14628;
	add.s64 	%rd14630, %rd14621, %rd14629;
	setp.lt.u64 	%p249, %rd14630, %rd14621;
	selp.u64 	%rd14631, 1, 0, %p249;
	// begin inline asm
	mul.lo.u64 %rd14555, %rd15636, %rd15643;
	// end inline asm
	add.s64 	%rd14632, %rd14555, %rd14631;
	add.s64 	%rd14633, %rd14632, %rd14630;
	// begin inline asm
	mul.lo.u64 %rd14567, %rd15643, %rd15635;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14570, %rd15643, %rd15635;
	// end inline asm
	add.s64 	%rd416, %rd14567, %rd14627;
	setp.lt.u64 	%p250, %rd416, %rd14567;
	selp.u64 	%rd14634, 1, 0, %p250;
	add.s64 	%rd14635, %rd14570, %rd14634;
	add.s64 	%rd14636, %rd14633, %rd14635;
	setp.lt.u64 	%p251, %rd14636, %rd14633;
	selp.u64 	%rd14637, 1, 0, %p251;
	// begin inline asm
	mul.lo.u64 %rd14573, %rd15643, %rd15636;
	// end inline asm
	add.s64 	%rd14638, %rd14573, %rd14637;
	add.s64 	%rd14639, %rd14638, %rd14636;
	// begin inline asm
	mul.lo.u64 %rd14591, %rd15644, %rd15635;
	// end inline asm
	add.s64 	%rd15644, %rd14591, %rd14639;
	mov.u64 	%rd15643, %rd416;
	bra.uni 	$L__BB4_228;

$L__BB4_239:
	selp.u64 	%rd14646, 1, 0, %p262;
	add.s64 	%rd14647, %rd423, %rd14646;
	add.s64 	%rd15643, %rd14647, %rd157;
	setp.lt.u64 	%p274, %rd15643, %rd423;
	selp.u64 	%rd14648, 1, 0, %p274;
	add.s64 	%rd14649, %rd424, %rd14648;
	add.s64 	%rd15644, %rd14649, %rd154;
	mov.u64 	%rd15645, %rd15635;
	mov.u64 	%rd15646, %rd15636;

$L__BB4_228:
	mov.u64 	%rd15636, %rd15646;
	mov.u64 	%rd15635, %rd15645;
	setp.lt.u64 	%p252, %rd15644, %rd154;
	@%p252 bra 	$L__BB4_240;

	setp.gt.u64 	%p253, %rd15644, %rd154;
	@%p253 bra 	$L__BB4_234;

	setp.lt.u64 	%p254, %rd15643, %rd157;
	@%p254 bra 	$L__BB4_240;

	setp.gt.u64 	%p255, %rd15643, %rd157;
	@%p255 bra 	$L__BB4_234;

	setp.lt.u64 	%p256, %rd15636, %rd156;
	@%p256 bra 	$L__BB4_240;

	setp.le.u64 	%p257, %rd15636, %rd156;
	setp.lt.u64 	%p258, %rd15635, %rd155;
	and.pred  	%p259, %p257, %p258;
	@%p259 bra 	$L__BB4_240;

$L__BB4_234:
	setp.lt.u64 	%p261, %rd15635, %rd155;
	selp.u64 	%rd14640, 1, 0, %p261;
	sub.s64 	%rd14641, %rd15636, %rd156;
	sub.s64 	%rd15646, %rd14641, %rd14640;
	setp.gt.u64 	%p262, %rd15646, %rd15636;
	mov.pred 	%p436, -1;
	mov.pred 	%p435, %p436;
	@%p262 bra 	$L__BB4_236;

	setp.eq.s64 	%p264, %rd15646, %rd15636;
	and.pred  	%p435, %p261, %p264;

$L__BB4_236:
	sub.s64 	%rd14642, %rd15643, %rd157;
	selp.u64 	%rd14643, 1, 0, %p435;
	sub.s64 	%rd423, %rd14642, %rd14643;
	setp.gt.u64 	%p266, %rd423, %rd15643;
	@%p266 bra 	$L__BB4_238;

	setp.eq.s64 	%p267, %rd423, %rd15643;
	and.pred  	%p436, %p435, %p267;

$L__BB4_238:
	sub.s64 	%rd14644, %rd15644, %rd154;
	not.pred 	%p268, %p436;
	selp.u64 	%rd14645, 1, 0, %p436;
	sub.s64 	%rd424, %rd14644, %rd14645;
	setp.le.u64 	%p269, %rd424, %rd15644;
	setp.ne.s64 	%p270, %rd424, %rd15644;
	or.pred  	%p271, %p268, %p270;
	sub.s64 	%rd15645, %rd15635, %rd155;
	and.pred  	%p272, %p269, %p271;
	mov.u64 	%rd15643, %rd423;
	mov.u64 	%rd15644, %rd424;
	@%p272 bra 	$L__BB4_228;
	bra.uni 	$L__BB4_239;

$L__BB4_240:
	mov.u64 	%rd14650, 1;
	shl.b64 	%rd14651, %rd14650, %r128;
	and.b64  	%rd14652, %rd14651, %rd405;
	setp.eq.s64 	%p275, %rd14652, 0;
	@%p275 bra 	$L__BB4_249;

	// begin inline asm
	mul.lo.u64 %rd14653, %rd15655, %rd15635;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14656, %rd15655, %rd15635;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14659, %rd15655, %rd15636;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14662, %rd15655, %rd15636;
	// end inline asm
	add.s64 	%rd14749, %rd14656, %rd14659;
	// begin inline asm
	mul.lo.u64 %rd14665, %rd15655, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14668, %rd15655, %rd15643;
	// end inline asm
	add.s64 	%rd14750, %rd14662, %rd14665;
	// begin inline asm
	mul.lo.u64 %rd14671, %rd15655, %rd15644;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14674, %rd15655, %rd15644;
	// end inline asm
	add.s64 	%rd14751, %rd14668, %rd14671;
	// begin inline asm
	mul.lo.u64 %rd14677, %rd15656, %rd15635;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14680, %rd15656, %rd15635;
	// end inline asm
	add.s64 	%rd429, %rd14749, %rd14677;
	add.s64 	%rd14752, %rd14750, %rd14680;
	// begin inline asm
	mul.lo.u64 %rd14683, %rd15656, %rd15636;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14686, %rd15656, %rd15636;
	// end inline asm
	add.s64 	%rd14753, %rd14752, %rd14683;
	add.s64 	%rd14754, %rd14751, %rd14686;
	// begin inline asm
	mul.lo.u64 %rd14689, %rd15656, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14692, %rd15656, %rd15643;
	// end inline asm
	add.s64 	%rd14755, %rd14754, %rd14689;
	add.s64 	%rd14756, %rd14674, %rd14692;
	// begin inline asm
	mul.lo.u64 %rd14695, %rd15656, %rd15644;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14698, %rd15656, %rd15644;
	// end inline asm
	add.s64 	%rd14757, %rd14756, %rd14695;
	// begin inline asm
	mul.lo.u64 %rd14701, %rd15657, %rd15635;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14704, %rd15657, %rd15635;
	// end inline asm
	add.s64 	%rd430, %rd14753, %rd14701;
	add.s64 	%rd14758, %rd14755, %rd14704;
	// begin inline asm
	mul.lo.u64 %rd14707, %rd15657, %rd15636;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14710, %rd15657, %rd15636;
	// end inline asm
	add.s64 	%rd14759, %rd14758, %rd14707;
	add.s64 	%rd14760, %rd14757, %rd14710;
	// begin inline asm
	mul.lo.u64 %rd14713, %rd15657, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14716, %rd15657, %rd15643;
	// end inline asm
	add.s64 	%rd14761, %rd14760, %rd14713;
	add.s64 	%rd14762, %rd14698, %rd14716;
	// begin inline asm
	mul.lo.u64 %rd14719, %rd15657, %rd15644;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14722, %rd15657, %rd15644;
	// end inline asm
	add.s64 	%rd14763, %rd14762, %rd14719;
	// begin inline asm
	mul.lo.u64 %rd14725, %rd15658, %rd15635;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14728, %rd15658, %rd15635;
	// end inline asm
	add.s64 	%rd431, %rd14759, %rd14725;
	add.s64 	%rd14764, %rd14761, %rd14728;
	// begin inline asm
	mul.lo.u64 %rd14731, %rd15658, %rd15636;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14734, %rd15658, %rd15636;
	// end inline asm
	add.s64 	%rd15651, %rd14764, %rd14731;
	add.s64 	%rd14765, %rd14763, %rd14734;
	// begin inline asm
	mul.lo.u64 %rd14737, %rd15658, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14740, %rd15658, %rd15643;
	// end inline asm
	add.s64 	%rd15652, %rd14765, %rd14737;
	add.s64 	%rd14766, %rd14722, %rd14740;
	// begin inline asm
	mul.lo.u64 %rd14743, %rd15658, %rd15644;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15654, %rd15658, %rd15644;
	// end inline asm
	add.s64 	%rd15653, %rd14766, %rd14743;
	mov.u64 	%rd15655, %rd14653;
	mov.u64 	%rd15656, %rd429;
	mov.u64 	%rd15657, %rd430;
	mov.u64 	%rd15658, %rd431;
	bra.uni 	$L__BB4_242;

$L__BB4_248:
	setp.lt.u64 	%p286, %rd15655, %rd155;
	selp.u64 	%rd14770, 1, 0, %p286;
	sub.s64 	%rd15655, %rd15655, %rd155;
	add.s64 	%rd14771, %rd156, %rd14770;
	setp.lt.u64 	%p287, %rd15656, %rd14771;
	selp.u64 	%rd14772, 1, 0, %p287;
	sub.s64 	%rd15656, %rd15656, %rd14771;
	add.s64 	%rd14773, %rd157, %rd14772;
	setp.lt.u64 	%p288, %rd15657, %rd14773;
	selp.u64 	%rd14774, 1, 0, %p288;
	sub.s64 	%rd15657, %rd15657, %rd14773;
	add.s64 	%rd14775, %rd154, %rd14774;
	setp.lt.u64 	%p289, %rd15658, %rd14775;
	selp.u64 	%rd14776, 1, 0, %p289;
	sub.s64 	%rd15658, %rd15658, %rd14775;
	setp.lt.u64 	%p290, %rd15651, %rd14776;
	selp.u64 	%rd14777, 1, 0, %p290;
	sub.s64 	%rd15651, %rd15651, %rd14776;
	setp.lt.u64 	%p291, %rd15652, %rd14777;
	selp.u64 	%rd14778, 1, 0, %p291;
	sub.s64 	%rd15652, %rd15652, %rd14777;
	setp.lt.u64 	%p292, %rd15653, %rd14778;
	selp.u64 	%rd14779, 1, 0, %p292;
	sub.s64 	%rd15653, %rd15653, %rd14778;
	sub.s64 	%rd15654, %rd15654, %rd14779;

$L__BB4_242:
	or.b64  	%rd14767, %rd15654, %rd15653;
	or.b64  	%rd14768, %rd14767, %rd15652;
	or.b64  	%rd14769, %rd14768, %rd15651;
	setp.ne.s64 	%p276, %rd14769, 0;
	setp.gt.u64 	%p277, %rd15658, %rd154;
	or.pred  	%p278, %p276, %p277;
	@%p278 bra 	$L__BB4_248;

	setp.lt.u64 	%p279, %rd15658, %rd154;
	@%p279 bra 	$L__BB4_249;

	setp.gt.u64 	%p280, %rd15657, %rd157;
	@%p280 bra 	$L__BB4_248;

	setp.lt.u64 	%p281, %rd15657, %rd157;
	@%p281 bra 	$L__BB4_249;

	setp.gt.u64 	%p282, %rd15656, %rd156;
	@%p282 bra 	$L__BB4_248;

	setp.lt.u64 	%p283, %rd15656, %rd156;
	setp.le.u64 	%p284, %rd15655, %rd155;
	or.pred  	%p285, %p283, %p284;
	@%p285 bra 	$L__BB4_249;
	bra.uni 	$L__BB4_248;

$L__BB4_249:
	add.s32 	%r11236, %r128, -1;
	setp.gt.s32 	%p293, %r128, 0;
	@%p293 bra 	$L__BB4_227;

	add.s32 	%r130, %r11235, -1;
	setp.gt.s32 	%p294, %r11235, 0;
	mov.u32 	%r11235, %r130;
	@%p294 bra 	$L__BB4_226;

	// begin inline asm
	mul.lo.u64 %rd15659, %rd15619, %rd15655;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14783, %rd15619, %rd15655;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14786, %rd15619, %rd15656;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14789, %rd15619, %rd15656;
	// end inline asm
	add.s64 	%rd14876, %rd14783, %rd14786;
	// begin inline asm
	mul.lo.u64 %rd14792, %rd15619, %rd15657;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14795, %rd15619, %rd15657;
	// end inline asm
	add.s64 	%rd14877, %rd14789, %rd14792;
	// begin inline asm
	mul.lo.u64 %rd14798, %rd15619, %rd15658;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14801, %rd15619, %rd15658;
	// end inline asm
	add.s64 	%rd14878, %rd14795, %rd14798;
	// begin inline asm
	mul.lo.u64 %rd14804, %rd15620, %rd15655;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14807, %rd15620, %rd15655;
	// end inline asm
	add.s64 	%rd15660, %rd14876, %rd14804;
	add.s64 	%rd14879, %rd14877, %rd14807;
	// begin inline asm
	mul.lo.u64 %rd14810, %rd15620, %rd15656;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14813, %rd15620, %rd15656;
	// end inline asm
	add.s64 	%rd14880, %rd14879, %rd14810;
	add.s64 	%rd14881, %rd14878, %rd14813;
	// begin inline asm
	mul.lo.u64 %rd14816, %rd15620, %rd15657;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14819, %rd15620, %rd15657;
	// end inline asm
	add.s64 	%rd14882, %rd14881, %rd14816;
	add.s64 	%rd14883, %rd14801, %rd14819;
	// begin inline asm
	mul.lo.u64 %rd14822, %rd15620, %rd15658;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14825, %rd15620, %rd15658;
	// end inline asm
	add.s64 	%rd14884, %rd14883, %rd14822;
	// begin inline asm
	mul.lo.u64 %rd14828, %rd15621, %rd15655;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14831, %rd15621, %rd15655;
	// end inline asm
	add.s64 	%rd15661, %rd14880, %rd14828;
	add.s64 	%rd14885, %rd14882, %rd14831;
	// begin inline asm
	mul.lo.u64 %rd14834, %rd15621, %rd15656;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14837, %rd15621, %rd15656;
	// end inline asm
	add.s64 	%rd14886, %rd14885, %rd14834;
	add.s64 	%rd14887, %rd14884, %rd14837;
	// begin inline asm
	mul.lo.u64 %rd14840, %rd15621, %rd15657;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14843, %rd15621, %rd15657;
	// end inline asm
	add.s64 	%rd14888, %rd14887, %rd14840;
	add.s64 	%rd14889, %rd14825, %rd14843;
	// begin inline asm
	mul.lo.u64 %rd14846, %rd15621, %rd15658;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14849, %rd15621, %rd15658;
	// end inline asm
	add.s64 	%rd14890, %rd14889, %rd14846;
	// begin inline asm
	mul.lo.u64 %rd14852, %rd15622, %rd15655;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14855, %rd15622, %rd15655;
	// end inline asm
	add.s64 	%rd15662, %rd14886, %rd14852;
	add.s64 	%rd14891, %rd14888, %rd14855;
	// begin inline asm
	mul.lo.u64 %rd14858, %rd15622, %rd15656;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14861, %rd15622, %rd15656;
	// end inline asm
	add.s64 	%rd15663, %rd14891, %rd14858;
	add.s64 	%rd14892, %rd14890, %rd14861;
	// begin inline asm
	mul.lo.u64 %rd14864, %rd15622, %rd15657;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14867, %rd15622, %rd15657;
	// end inline asm
	add.s64 	%rd15664, %rd14892, %rd14864;
	add.s64 	%rd14893, %rd14849, %rd14867;
	// begin inline asm
	mul.lo.u64 %rd14870, %rd15622, %rd15658;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15666, %rd15622, %rd15658;
	// end inline asm
	add.s64 	%rd15665, %rd14893, %rd14870;
	bra.uni 	$L__BB4_252;

$L__BB4_292:
	setp.lt.u64 	%p370, %rd15659, %rd155;
	selp.u64 	%rd15178, 1, 0, %p370;
	sub.s64 	%rd15659, %rd15659, %rd155;
	add.s64 	%rd15179, %rd156, %rd15178;
	setp.lt.u64 	%p371, %rd15660, %rd15179;
	selp.u64 	%rd15180, 1, 0, %p371;
	sub.s64 	%rd15660, %rd15660, %rd15179;
	add.s64 	%rd15181, %rd157, %rd15180;
	setp.lt.u64 	%p372, %rd15661, %rd15181;
	selp.u64 	%rd15182, 1, 0, %p372;
	sub.s64 	%rd15661, %rd15661, %rd15181;
	add.s64 	%rd15183, %rd154, %rd15182;
	setp.lt.u64 	%p373, %rd15662, %rd15183;
	selp.u64 	%rd15184, 1, 0, %p373;
	sub.s64 	%rd15662, %rd15662, %rd15183;
	setp.lt.u64 	%p374, %rd15663, %rd15184;
	selp.u64 	%rd15185, 1, 0, %p374;
	sub.s64 	%rd15663, %rd15663, %rd15184;
	setp.lt.u64 	%p375, %rd15664, %rd15185;
	selp.u64 	%rd15186, 1, 0, %p375;
	sub.s64 	%rd15664, %rd15664, %rd15185;
	setp.lt.u64 	%p376, %rd15665, %rd15186;
	selp.u64 	%rd15187, 1, 0, %p376;
	sub.s64 	%rd15665, %rd15665, %rd15186;
	sub.s64 	%rd15666, %rd15666, %rd15187;

$L__BB4_252:
	or.b64  	%rd14894, %rd15666, %rd15665;
	or.b64  	%rd14895, %rd14894, %rd15664;
	or.b64  	%rd14896, %rd14895, %rd15663;
	setp.ne.s64 	%p295, %rd14896, 0;
	setp.gt.u64 	%p296, %rd15662, %rd154;
	or.pred  	%p297, %p295, %p296;
	@%p297 bra 	$L__BB4_292;

	setp.lt.u64 	%p298, %rd15662, %rd154;
	@%p298 bra 	$L__BB4_258;

	setp.gt.u64 	%p299, %rd15661, %rd157;
	@%p299 bra 	$L__BB4_292;

	setp.lt.u64 	%p300, %rd15661, %rd157;
	@%p300 bra 	$L__BB4_258;

	setp.gt.u64 	%p301, %rd15660, %rd156;
	@%p301 bra 	$L__BB4_292;

	setp.ge.u64 	%p302, %rd15660, %rd156;
	setp.gt.u64 	%p303, %rd15659, %rd155;
	and.pred  	%p304, %p302, %p303;
	@%p304 bra 	$L__BB4_292;

$L__BB4_258:
	// begin inline asm
	mul.lo.u64 %rd15667, %rd15659, %rd15659;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14900, %rd15659, %rd15659;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14903, %rd15659, %rd15660;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14906, %rd15659, %rd15660;
	// end inline asm
	add.s64 	%rd14993, %rd14900, %rd14903;
	// begin inline asm
	mul.lo.u64 %rd14909, %rd15659, %rd15661;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14912, %rd15659, %rd15661;
	// end inline asm
	add.s64 	%rd14994, %rd14906, %rd14909;
	// begin inline asm
	mul.lo.u64 %rd14915, %rd15659, %rd15662;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14918, %rd15659, %rd15662;
	// end inline asm
	add.s64 	%rd14995, %rd14912, %rd14915;
	// begin inline asm
	mul.lo.u64 %rd14921, %rd15660, %rd15659;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14924, %rd15660, %rd15659;
	// end inline asm
	add.s64 	%rd15668, %rd14993, %rd14921;
	add.s64 	%rd14996, %rd14994, %rd14924;
	// begin inline asm
	mul.lo.u64 %rd14927, %rd15660, %rd15660;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14930, %rd15660, %rd15660;
	// end inline asm
	add.s64 	%rd14997, %rd14996, %rd14927;
	add.s64 	%rd14998, %rd14995, %rd14930;
	// begin inline asm
	mul.lo.u64 %rd14933, %rd15660, %rd15661;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14936, %rd15660, %rd15661;
	// end inline asm
	add.s64 	%rd14999, %rd14998, %rd14933;
	add.s64 	%rd15000, %rd14918, %rd14936;
	// begin inline asm
	mul.lo.u64 %rd14939, %rd15660, %rd15662;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14942, %rd15660, %rd15662;
	// end inline asm
	add.s64 	%rd15001, %rd15000, %rd14939;
	// begin inline asm
	mul.lo.u64 %rd14945, %rd15661, %rd15659;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14948, %rd15661, %rd15659;
	// end inline asm
	add.s64 	%rd15669, %rd14997, %rd14945;
	add.s64 	%rd15002, %rd14999, %rd14948;
	// begin inline asm
	mul.lo.u64 %rd14951, %rd15661, %rd15660;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14954, %rd15661, %rd15660;
	// end inline asm
	add.s64 	%rd15003, %rd15002, %rd14951;
	add.s64 	%rd15004, %rd15001, %rd14954;
	// begin inline asm
	mul.lo.u64 %rd14957, %rd15661, %rd15661;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14960, %rd15661, %rd15661;
	// end inline asm
	add.s64 	%rd15005, %rd15004, %rd14957;
	add.s64 	%rd15006, %rd14942, %rd14960;
	// begin inline asm
	mul.lo.u64 %rd14963, %rd15661, %rd15662;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14966, %rd15661, %rd15662;
	// end inline asm
	add.s64 	%rd15007, %rd15006, %rd14963;
	// begin inline asm
	mul.lo.u64 %rd14969, %rd15662, %rd15659;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14972, %rd15662, %rd15659;
	// end inline asm
	add.s64 	%rd15670, %rd15003, %rd14969;
	add.s64 	%rd15008, %rd15005, %rd14972;
	// begin inline asm
	mul.lo.u64 %rd14975, %rd15662, %rd15660;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14978, %rd15662, %rd15660;
	// end inline asm
	add.s64 	%rd15671, %rd15008, %rd14975;
	add.s64 	%rd15009, %rd15007, %rd14978;
	// begin inline asm
	mul.lo.u64 %rd14981, %rd15662, %rd15661;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14984, %rd15662, %rd15661;
	// end inline asm
	add.s64 	%rd15672, %rd15009, %rd14981;
	add.s64 	%rd15010, %rd14966, %rd14984;
	// begin inline asm
	mul.lo.u64 %rd14987, %rd15662, %rd15662;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15674, %rd15662, %rd15662;
	// end inline asm
	add.s64 	%rd15673, %rd15010, %rd14987;
	bra.uni 	$L__BB4_259;

$L__BB4_291:
	setp.lt.u64 	%p363, %rd15667, %rd155;
	selp.u64 	%rd15168, 1, 0, %p363;
	sub.s64 	%rd15667, %rd15667, %rd155;
	add.s64 	%rd15169, %rd156, %rd15168;
	setp.lt.u64 	%p364, %rd15668, %rd15169;
	selp.u64 	%rd15170, 1, 0, %p364;
	sub.s64 	%rd15668, %rd15668, %rd15169;
	add.s64 	%rd15171, %rd157, %rd15170;
	setp.lt.u64 	%p365, %rd15669, %rd15171;
	selp.u64 	%rd15172, 1, 0, %p365;
	sub.s64 	%rd15669, %rd15669, %rd15171;
	add.s64 	%rd15173, %rd154, %rd15172;
	setp.lt.u64 	%p366, %rd15670, %rd15173;
	selp.u64 	%rd15174, 1, 0, %p366;
	sub.s64 	%rd15670, %rd15670, %rd15173;
	setp.lt.u64 	%p367, %rd15671, %rd15174;
	selp.u64 	%rd15175, 1, 0, %p367;
	sub.s64 	%rd15671, %rd15671, %rd15174;
	setp.lt.u64 	%p368, %rd15672, %rd15175;
	selp.u64 	%rd15176, 1, 0, %p368;
	sub.s64 	%rd15672, %rd15672, %rd15175;
	setp.lt.u64 	%p369, %rd15673, %rd15176;
	selp.u64 	%rd15177, 1, 0, %p369;
	sub.s64 	%rd15673, %rd15673, %rd15176;
	sub.s64 	%rd15674, %rd15674, %rd15177;

$L__BB4_259:
	or.b64  	%rd15011, %rd15674, %rd15673;
	or.b64  	%rd15012, %rd15011, %rd15672;
	or.b64  	%rd15013, %rd15012, %rd15671;
	setp.ne.s64 	%p305, %rd15013, 0;
	setp.gt.u64 	%p306, %rd15670, %rd154;
	or.pred  	%p307, %p305, %p306;
	@%p307 bra 	$L__BB4_291;

	setp.lt.u64 	%p308, %rd15670, %rd154;
	@%p308 bra 	$L__BB4_265;

	setp.gt.u64 	%p309, %rd15669, %rd157;
	@%p309 bra 	$L__BB4_291;

	setp.lt.u64 	%p310, %rd15669, %rd157;
	@%p310 bra 	$L__BB4_265;

	setp.gt.u64 	%p311, %rd15668, %rd156;
	@%p311 bra 	$L__BB4_291;

	setp.ge.u64 	%p312, %rd15668, %rd156;
	setp.gt.u64 	%p313, %rd15667, %rd155;
	and.pred  	%p314, %p312, %p313;
	@%p314 bra 	$L__BB4_291;

$L__BB4_265:
	sub.s64 	%rd15678, %rd15667, %rd15701;
	sub.s64 	%rd15679, %rd15668, %rd15702;
	setp.ge.u64 	%p315, %rd15667, %rd15701;
	mov.u16 	%rs1147, 0;
	mov.u16 	%rs1146, %rs1147;
	@%p315 bra 	$L__BB4_267;

	setp.eq.s64 	%p316, %rd15668, 0;
	not.b64 	%rd15014, %rd15702;
	add.s64 	%rd15015, %rd15668, %rd15014;
	neg.s64 	%rd15016, %rd15702;
	selp.b64 	%rd15679, %rd15016, %rd15015, %p316;
	setp.le.u64 	%p317, %rd15668, %rd15702;
	selp.u16 	%rs1146, 1, 0, %p317;

$L__BB4_267:
	setp.eq.s16 	%p318, %rs1146, 0;
	sub.s64 	%rd15680, %rd15669, %rd15703;
	@%p318 bra 	$L__BB4_269;

	setp.eq.s64 	%p319, %rd15669, 0;
	not.b64 	%rd15017, %rd15703;
	add.s64 	%rd15018, %rd15669, %rd15017;
	neg.s64 	%rd15019, %rd15703;
	selp.b64 	%rd15680, %rd15019, %rd15018, %p319;
	setp.le.u64 	%p320, %rd15669, %rd15703;
	selp.u16 	%rs1147, 1, 0, %p320;

$L__BB4_269:
	setp.eq.s16 	%p321, %rs1147, 0;
	mov.u16 	%rs1148, 0;
	sub.s64 	%rd15681, %rd15670, %rd15704;
	@%p321 bra 	$L__BB4_271;

	setp.eq.s64 	%p322, %rd15670, 0;
	not.b64 	%rd15020, %rd15704;
	add.s64 	%rd15021, %rd15670, %rd15020;
	neg.s64 	%rd15022, %rd15704;
	selp.b64 	%rd15681, %rd15022, %rd15021, %p322;
	setp.le.u64 	%p323, %rd15670, %rd15704;
	selp.u16 	%rs1148, 1, 0, %p323;

$L__BB4_271:
	setp.eq.s16 	%p324, %rs1148, 0;
	@%p324 bra 	$L__BB4_273;

	add.s64 	%rd15678, %rd15678, %rd155;
	add.s64 	%rd15679, %rd15679, %rd156;
	add.s64 	%rd15680, %rd15680, %rd157;
	add.s64 	%rd15681, %rd15681, %rd154;

$L__BB4_273:
	add.s64 	%rd15701, %rd15678, -8772561819708210092;
	add.s64 	%rd15023, %rd15679, -6170039885052185352;
	setp.eq.s64 	%p325, %rd15679, 0;
	selp.b64 	%rd15024, -6170039885052185351, %rd15023, %p325;
	setp.lt.u64 	%p326, %rd15678, 8772561819708210092;
	add.s64 	%rd15025, %rd15679, -6170039885052185351;
	selp.b64 	%rd15702, %rd15024, %rd15025, %p326;
	setp.lt.u64 	%p327, %rd15679, 6170039885052185352;
	and.pred  	%p328, %p326, %p327;
	add.s64 	%rd15026, %rd15680, -188021827762530522;
	setp.eq.s64 	%p329, %rd15680, 0;
	selp.b64 	%rd15027, -188021827762530521, %rd15026, %p329;
	add.s64 	%rd15028, %rd15680, -188021827762530521;
	selp.b64 	%rd15703, %rd15027, %rd15028, %p328;
	setp.lt.u64 	%p330, %rd15680, 188021827762530522;
	and.pred  	%p331, %p330, %p328;
	not.pred 	%p332, %p331;
	add.s64 	%rd15029, %rd15681, -6481385041966929817;
	setp.eq.s64 	%p333, %rd15681, 0;
	selp.b64 	%rd15030, -6481385041966929816, %rd15029, %p333;
	add.s64 	%rd15031, %rd15681, -6481385041966929816;
	selp.b64 	%rd15704, %rd15030, %rd15031, %p331;
	setp.gt.u64 	%p334, %rd15681, 6481385041966929816;
	or.pred  	%p335, %p334, %p332;
	@%p335 bra 	$L__BB4_275;

	add.s64 	%rd15701, %rd15701, %rd155;
	add.s64 	%rd15702, %rd15702, %rd156;
	add.s64 	%rd15703, %rd15703, %rd157;
	add.s64 	%rd15704, %rd15704, %rd154;

$L__BB4_275:
	mov.u64 	%rd15127, 0;
	// begin inline asm
	mul.lo.u64 %rd15686, %rd15659, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15035, %rd15659, %rd15127;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd15038, %rd15659, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15041, %rd15659, %rd15127;
	// end inline asm
	add.s64 	%rd15128, %rd15035, %rd15038;
	// begin inline asm
	mul.lo.u64 %rd15044, %rd15659, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15047, %rd15659, %rd15127;
	// end inline asm
	add.s64 	%rd15129, %rd15041, %rd15044;
	// begin inline asm
	mul.lo.u64 %rd15050, %rd15659, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15053, %rd15659, %rd15127;
	// end inline asm
	add.s64 	%rd15130, %rd15047, %rd15050;
	// begin inline asm
	mul.lo.u64 %rd15056, %rd15660, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15059, %rd15660, %rd15127;
	// end inline asm
	add.s64 	%rd15687, %rd15128, %rd15056;
	add.s64 	%rd15131, %rd15129, %rd15059;
	// begin inline asm
	mul.lo.u64 %rd15062, %rd15660, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15065, %rd15660, %rd15127;
	// end inline asm
	add.s64 	%rd15132, %rd15131, %rd15062;
	add.s64 	%rd15133, %rd15130, %rd15065;
	// begin inline asm
	mul.lo.u64 %rd15068, %rd15660, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15071, %rd15660, %rd15127;
	// end inline asm
	add.s64 	%rd15134, %rd15133, %rd15068;
	add.s64 	%rd15135, %rd15053, %rd15071;
	// begin inline asm
	mul.lo.u64 %rd15074, %rd15660, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15077, %rd15660, %rd15127;
	// end inline asm
	add.s64 	%rd15136, %rd15135, %rd15074;
	// begin inline asm
	mul.lo.u64 %rd15080, %rd15661, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15083, %rd15661, %rd15127;
	// end inline asm
	add.s64 	%rd15688, %rd15132, %rd15080;
	add.s64 	%rd15137, %rd15134, %rd15083;
	// begin inline asm
	mul.lo.u64 %rd15086, %rd15661, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15089, %rd15661, %rd15127;
	// end inline asm
	add.s64 	%rd15138, %rd15137, %rd15086;
	add.s64 	%rd15139, %rd15136, %rd15089;
	// begin inline asm
	mul.lo.u64 %rd15092, %rd15661, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15095, %rd15661, %rd15127;
	// end inline asm
	add.s64 	%rd15140, %rd15139, %rd15092;
	add.s64 	%rd15141, %rd15077, %rd15095;
	// begin inline asm
	mul.lo.u64 %rd15098, %rd15661, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15101, %rd15661, %rd15127;
	// end inline asm
	add.s64 	%rd15142, %rd15141, %rd15098;
	// begin inline asm
	mul.lo.u64 %rd15104, %rd15662, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15107, %rd15662, %rd15127;
	// end inline asm
	add.s64 	%rd15689, %rd15138, %rd15104;
	add.s64 	%rd15143, %rd15140, %rd15107;
	// begin inline asm
	mul.lo.u64 %rd15110, %rd15662, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15113, %rd15662, %rd15127;
	// end inline asm
	add.s64 	%rd15690, %rd15143, %rd15110;
	add.s64 	%rd15144, %rd15142, %rd15113;
	// begin inline asm
	mul.lo.u64 %rd15116, %rd15662, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15119, %rd15662, %rd15127;
	// end inline asm
	add.s64 	%rd15691, %rd15144, %rd15116;
	add.s64 	%rd15145, %rd15101, %rd15119;
	// begin inline asm
	mul.lo.u64 %rd15122, %rd15662, %rd15127;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15693, %rd15662, %rd15127;
	// end inline asm
	add.s64 	%rd15692, %rd15145, %rd15122;
	bra.uni 	$L__BB4_276;

$L__BB4_290:
	setp.lt.u64 	%p356, %rd15686, %rd155;
	selp.u64 	%rd15158, 1, 0, %p356;
	sub.s64 	%rd15686, %rd15686, %rd155;
	add.s64 	%rd15159, %rd156, %rd15158;
	setp.lt.u64 	%p357, %rd15687, %rd15159;
	selp.u64 	%rd15160, 1, 0, %p357;
	sub.s64 	%rd15687, %rd15687, %rd15159;
	add.s64 	%rd15161, %rd157, %rd15160;
	setp.lt.u64 	%p358, %rd15688, %rd15161;
	selp.u64 	%rd15162, 1, 0, %p358;
	sub.s64 	%rd15688, %rd15688, %rd15161;
	add.s64 	%rd15163, %rd154, %rd15162;
	setp.lt.u64 	%p359, %rd15689, %rd15163;
	selp.u64 	%rd15164, 1, 0, %p359;
	sub.s64 	%rd15689, %rd15689, %rd15163;
	setp.lt.u64 	%p360, %rd15690, %rd15164;
	selp.u64 	%rd15165, 1, 0, %p360;
	sub.s64 	%rd15690, %rd15690, %rd15164;
	setp.lt.u64 	%p361, %rd15691, %rd15165;
	selp.u64 	%rd15166, 1, 0, %p361;
	sub.s64 	%rd15691, %rd15691, %rd15165;
	setp.lt.u64 	%p362, %rd15692, %rd15166;
	selp.u64 	%rd15167, 1, 0, %p362;
	sub.s64 	%rd15692, %rd15692, %rd15166;
	sub.s64 	%rd15693, %rd15693, %rd15167;

$L__BB4_276:
	or.b64  	%rd15146, %rd15693, %rd15692;
	or.b64  	%rd15147, %rd15146, %rd15691;
	or.b64  	%rd15148, %rd15147, %rd15690;
	setp.ne.s64 	%p336, %rd15148, 0;
	setp.gt.u64 	%p337, %rd15689, %rd154;
	or.pred  	%p338, %p336, %p337;
	@%p338 bra 	$L__BB4_290;

	setp.lt.u64 	%p339, %rd15689, %rd154;
	@%p339 bra 	$L__BB4_282;

	setp.gt.u64 	%p340, %rd15688, %rd157;
	@%p340 bra 	$L__BB4_290;

	setp.lt.u64 	%p341, %rd15688, %rd157;
	@%p341 bra 	$L__BB4_282;

	setp.gt.u64 	%p342, %rd15687, %rd156;
	@%p342 bra 	$L__BB4_290;

	setp.ge.u64 	%p343, %rd15687, %rd156;
	setp.gt.u64 	%p344, %rd15686, %rd155;
	and.pred  	%p345, %p343, %p344;
	@%p345 bra 	$L__BB4_290;

$L__BB4_282:
	sub.s64 	%rd534, %rd15686, %rd15697;
	sub.s64 	%rd15698, %rd15687, %rd15698;
	sub.s64 	%rd15699, %rd15688, %rd15699;
	sub.s64 	%rd15700, %rd15689, %rd15700;
	setp.ge.u64 	%p346, %rd15686, %rd15697;
	mov.u16 	%rs1150, 0;
	mov.u16 	%rs1149, %rs1150;
	@%p346 bra 	$L__BB4_284;

	setp.eq.s64 	%p347, %rd15687, 0;
	not.b64 	%rd15149, %rd15698;
	add.s64 	%rd15150, %rd15687, %rd15149;
	neg.s64 	%rd15151, %rd15698;
	selp.b64 	%rd15698, %rd15151, %rd15150, %p347;
	setp.le.u64 	%p348, %rd15687, %rd15698;
	selp.u16 	%rs1149, 1, 0, %p348;

$L__BB4_284:
	setp.eq.s16 	%p349, %rs1149, 0;
	@%p349 bra 	$L__BB4_286;

	setp.eq.s64 	%p350, %rd15688, 0;
	not.b64 	%rd15152, %rd15699;
	add.s64 	%rd15153, %rd15688, %rd15152;
	neg.s64 	%rd15154, %rd15699;
	selp.b64 	%rd15699, %rd15154, %rd15153, %p350;
	setp.le.u64 	%p351, %rd15688, %rd15699;
	selp.u16 	%rs1150, 1, 0, %p351;

$L__BB4_286:
	setp.eq.s16 	%p352, %rs1150, 0;
	mov.u16 	%rs1151, 0;
	@%p352 bra 	$L__BB4_288;

	setp.eq.s64 	%p353, %rd15689, 0;
	not.b64 	%rd15155, %rd15700;
	add.s64 	%rd15156, %rd15689, %rd15155;
	neg.s64 	%rd15157, %rd15700;
	selp.b64 	%rd15700, %rd15157, %rd15156, %p353;
	setp.le.u64 	%p354, %rd15689, %rd15700;
	selp.u16 	%rs1151, 1, 0, %p354;

$L__BB4_288:
	setp.eq.s16 	%p355, %rs1151, 0;
	mov.u64 	%rd15697, %rd534;
	@%p355 bra 	$L__BB4_293;

	add.s64 	%rd15697, %rd534, %rd155;
	add.s64 	%rd15698, %rd15698, %rd156;
	add.s64 	%rd15699, %rd15699, %rd157;
	add.s64 	%rd15700, %rd15700, %rd154;

$L__BB4_293:
	add.s32 	%r11232, %r122, -1;
	setp.gt.s32 	%p377, %r122, 0;
	@%p377 bra 	$L__BB4_118;

	and.b64  	%rd15209, %rd15697, 1;
	shr.u64 	%rd15210, %rd15701, 56;
	bfi.b64 	%rd15211, %rd15210, %rd15209, 8, 56;
	shr.u64 	%rd15212, %rd15701, 32;
	and.b64  	%rd15213, %rd15212, 16711680;
	or.b64  	%rd15214, %rd15213, %rd15211;
	shr.u64 	%rd15215, %rd15701, 16;
	and.b64  	%rd15216, %rd15215, 4278190080;
	or.b64  	%rd15217, %rd15216, %rd15214;
	and.b64  	%rd15218, %rd15701, 1095216660480;
	or.b64  	%rd15219, %rd15218, %rd15217;
	shl.b64 	%rd15220, %rd15701, 16;
	and.b64  	%rd15221, %rd15220, 280375465082880;
	or.b64  	%rd15222, %rd15221, %rd15219;
	or.b64  	%rd15223, %rd15222, 2;
	shl.b64 	%rd15224, %rd15701, 32;
	and.b64  	%rd15225, %rd15224, 71776119061217280;
	xor.b64  	%rd15226, %rd15225, %rd15223;
	shl.b64 	%rd15227, %rd15701, 48;
	and.b64  	%rd15228, %rd15227, -72057594037927936;
	xor.b64  	%rd15730, %rd15228, %rd15226;
	shr.u64 	%rd15229, %rd15702, 56;
	and.b64  	%rd15230, %rd15701, 255;
	bfi.b64 	%rd15231, %rd15229, %rd15230, 8, 56;
	shr.u64 	%rd15232, %rd15702, 32;
	and.b64  	%rd15233, %rd15232, 16711680;
	or.b64  	%rd15234, %rd15233, %rd15231;
	shr.u64 	%rd15235, %rd15702, 16;
	and.b64  	%rd15236, %rd15235, 4278190080;
	or.b64  	%rd15237, %rd15236, %rd15234;
	and.b64  	%rd15238, %rd15702, 1095216660480;
	or.b64  	%rd15239, %rd15238, %rd15237;
	shl.b64 	%rd15240, %rd15702, 16;
	and.b64  	%rd15241, %rd15240, 280375465082880;
	or.b64  	%rd15242, %rd15241, %rd15239;
	shl.b64 	%rd15243, %rd15702, 32;
	and.b64  	%rd15244, %rd15243, 71776119061217280;
	xor.b64  	%rd15245, %rd15244, %rd15242;
	shl.b64 	%rd15246, %rd15702, 48;
	and.b64  	%rd15247, %rd15246, -72057594037927936;
	xor.b64  	%rd15725, %rd15247, %rd15245;
	shr.u64 	%rd15248, %rd15703, 56;
	and.b64  	%rd15249, %rd15702, 255;
	bfi.b64 	%rd15250, %rd15248, %rd15249, 8, 56;
	shr.u64 	%rd15251, %rd15703, 32;
	and.b64  	%rd15252, %rd15251, 16711680;
	or.b64  	%rd15253, %rd15252, %rd15250;
	shr.u64 	%rd15254, %rd15703, 16;
	and.b64  	%rd15255, %rd15254, 4278190080;
	or.b64  	%rd15256, %rd15255, %rd15253;
	and.b64  	%rd15257, %rd15703, 1095216660480;
	or.b64  	%rd15258, %rd15257, %rd15256;
	shl.b64 	%rd15259, %rd15703, 16;
	and.b64  	%rd15260, %rd15259, 280375465082880;
	or.b64  	%rd15261, %rd15260, %rd15258;
	shl.b64 	%rd15262, %rd15703, 32;
	and.b64  	%rd15263, %rd15262, 71776119061217280;
	xor.b64  	%rd15264, %rd15263, %rd15261;
	shl.b64 	%rd15265, %rd15703, 48;
	and.b64  	%rd15266, %rd15265, -72057594037927936;
	xor.b64  	%rd15720, %rd15266, %rd15264;
	shr.u64 	%rd15267, %rd15704, 56;
	and.b64  	%rd15268, %rd15703, 255;
	bfi.b64 	%rd15269, %rd15267, %rd15268, 8, 56;
	shr.u64 	%rd15270, %rd15704, 32;
	and.b64  	%rd15271, %rd15270, 16711680;
	or.b64  	%rd15272, %rd15271, %rd15269;
	shr.u64 	%rd15273, %rd15704, 16;
	and.b64  	%rd15274, %rd15273, 4278190080;
	or.b64  	%rd15275, %rd15274, %rd15272;
	and.b64  	%rd15276, %rd15704, 1095216660480;
	or.b64  	%rd15277, %rd15276, %rd15275;
	shl.b64 	%rd15278, %rd15704, 16;
	and.b64  	%rd15279, %rd15278, 280375465082880;
	or.b64  	%rd15280, %rd15279, %rd15277;
	shl.b64 	%rd15281, %rd15704, 32;
	and.b64  	%rd15282, %rd15281, 71776119061217280;
	xor.b64  	%rd15283, %rd15282, %rd15280;
	shl.b64 	%rd15284, %rd15704, 48;
	and.b64  	%rd15285, %rd15284, -72057594037927936;
	xor.b64  	%rd15715, %rd15285, %rd15283;
	and.b64  	%rd15286, %rd15704, 255;
	or.b64  	%rd15710, %rd15286, 256;
	mov.u64 	%rd15706, 0;
	mov.u64 	%rd15287, 32898;
	mov.u64 	%rd15288, 1;
	st.local.v2.u64 	[%rd15705], {%rd15288, %rd15287};
	mov.u64 	%rd15289, -9223372034707259392;
	mov.u64 	%rd15290, -9223372036854742902;
	st.local.v2.u64 	[%rd15705+16], {%rd15290, %rd15289};
	mov.u64 	%rd15291, 32907;
	mov.u64 	%rd15292, 2147483649;
	st.local.v2.u64 	[%rd15705+32], {%rd15291, %rd15292};
	mov.u64 	%rd15293, -9223372036854743031;
	mov.u64 	%rd15294, -9223372034707259263;
	st.local.v2.u64 	[%rd15705+48], {%rd15294, %rd15293};
	mov.u64 	%rd15295, 136;
	mov.u64 	%rd15296, 138;
	st.local.v2.u64 	[%rd15705+64], {%rd15296, %rd15295};
	mov.u64 	%rd15297, 2147483658;
	mov.u64 	%rd15298, 2147516425;
	st.local.v2.u64 	[%rd15705+80], {%rd15298, %rd15297};
	mov.u64 	%rd15299, -9223372036854775669;
	mov.u64 	%rd15300, 2147516555;
	st.local.v2.u64 	[%rd15705+96], {%rd15300, %rd15299};
	mov.u64 	%rd15301, -9223372036854743037;
	mov.u64 	%rd15302, -9223372036854742903;
	st.local.v2.u64 	[%rd15705+112], {%rd15302, %rd15301};
	mov.u64 	%rd15303, -9223372036854775680;
	mov.u64 	%rd15304, -9223372036854743038;
	st.local.v2.u64 	[%rd15705+128], {%rd15304, %rd15303};
	mov.u64 	%rd15305, -9223372034707292150;
	mov.u64 	%rd15306, 32778;
	st.local.v2.u64 	[%rd15705+144], {%rd15306, %rd15305};
	mov.u64 	%rd15307, -9223372036854742912;
	st.local.v2.u64 	[%rd15705+160], {%rd15294, %rd15307};
	mov.u64 	%rd15308, -9223372034707259384;
	st.local.v2.u64 	[%rd15705+176], {%rd15292, %rd15308};
	mov.u32 	%r11237, 0;
	mov.u64 	%rd15722, -9223372036854775808;
	mov.u64 	%rd15707, %rd15706;
	mov.u64 	%rd15708, %rd15706;
	mov.u64 	%rd15709, %rd15706;
	mov.u64 	%rd15711, %rd15706;
	mov.u64 	%rd15712, %rd15706;
	mov.u64 	%rd15713, %rd15706;
	mov.u64 	%rd15714, %rd15706;
	mov.u64 	%rd15716, %rd15706;
	mov.u64 	%rd15717, %rd15706;
	mov.u64 	%rd15718, %rd15706;
	mov.u64 	%rd15719, %rd15706;
	mov.u64 	%rd15721, %rd15706;
	mov.u64 	%rd15723, %rd15706;
	mov.u64 	%rd15724, %rd15706;
	mov.u64 	%rd15726, %rd15706;
	mov.u64 	%rd15727, %rd15706;
	mov.u64 	%rd15728, %rd15706;
	mov.u64 	%rd15729, %rd15706;

$L__BB4_295:
	xor.b64  	%rd15309, %rd15729, %rd15730;
	xor.b64  	%rd15310, %rd15309, %rd15728;
	xor.b64  	%rd15311, %rd15310, %rd15727;
	xor.b64  	%rd15312, %rd15311, %rd15726;
	xor.b64  	%rd15313, %rd15724, %rd15725;
	xor.b64  	%rd15314, %rd15313, %rd15723;
	xor.b64  	%rd15315, %rd15314, %rd15722;
	xor.b64  	%rd15316, %rd15315, %rd15721;
	xor.b64  	%rd15317, %rd15719, %rd15720;
	xor.b64  	%rd15318, %rd15317, %rd15718;
	xor.b64  	%rd15319, %rd15318, %rd15717;
	xor.b64  	%rd15320, %rd15319, %rd15716;
	xor.b64  	%rd15321, %rd15714, %rd15715;
	xor.b64  	%rd15322, %rd15321, %rd15713;
	xor.b64  	%rd15323, %rd15322, %rd15712;
	xor.b64  	%rd15324, %rd15323, %rd15711;
	xor.b64  	%rd15325, %rd15709, %rd15710;
	xor.b64  	%rd15326, %rd15325, %rd15708;
	xor.b64  	%rd15327, %rd15326, %rd15707;
	xor.b64  	%rd15328, %rd15327, %rd15706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11019,%dummy}, %rd15316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11020}, %rd15316;
	}
	shf.r.wrap.b32 	%r11021, %r11020, %r11019, 1;
	shf.r.wrap.b32 	%r11022, %r11019, %r11020, 1;
	mov.b64 	%rd15329, {%r11022, %r11021};
	xor.b64  	%rd15330, %rd15329, %rd15328;
	xor.b64  	%rd15331, %rd15330, %rd15730;
	xor.b64  	%rd15332, %rd15330, %rd15729;
	xor.b64  	%rd15333, %rd15330, %rd15728;
	xor.b64  	%rd15334, %rd15330, %rd15727;
	xor.b64  	%rd15335, %rd15330, %rd15726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11023,%dummy}, %rd15320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11024}, %rd15320;
	}
	shf.r.wrap.b32 	%r11025, %r11024, %r11023, 1;
	shf.r.wrap.b32 	%r11026, %r11023, %r11024, 1;
	mov.b64 	%rd15336, {%r11026, %r11025};
	xor.b64  	%rd15337, %rd15336, %rd15312;
	xor.b64  	%rd15338, %rd15337, %rd15725;
	xor.b64  	%rd15339, %rd15337, %rd15724;
	xor.b64  	%rd15340, %rd15337, %rd15723;
	xor.b64  	%rd15341, %rd15337, %rd15722;
	xor.b64  	%rd15342, %rd15337, %rd15721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11027,%dummy}, %rd15324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11028}, %rd15324;
	}
	shf.r.wrap.b32 	%r11029, %r11028, %r11027, 1;
	shf.r.wrap.b32 	%r11030, %r11027, %r11028, 1;
	mov.b64 	%rd15343, {%r11030, %r11029};
	xor.b64  	%rd15344, %rd15343, %rd15316;
	xor.b64  	%rd15345, %rd15344, %rd15720;
	xor.b64  	%rd15346, %rd15344, %rd15719;
	xor.b64  	%rd15347, %rd15344, %rd15718;
	xor.b64  	%rd15348, %rd15344, %rd15717;
	xor.b64  	%rd15349, %rd15344, %rd15716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11031,%dummy}, %rd15328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11032}, %rd15328;
	}
	shf.r.wrap.b32 	%r11033, %r11032, %r11031, 1;
	shf.r.wrap.b32 	%r11034, %r11031, %r11032, 1;
	mov.b64 	%rd15350, {%r11034, %r11033};
	xor.b64  	%rd15351, %rd15350, %rd15320;
	xor.b64  	%rd15352, %rd15351, %rd15715;
	xor.b64  	%rd15353, %rd15351, %rd15714;
	xor.b64  	%rd15354, %rd15351, %rd15713;
	xor.b64  	%rd15355, %rd15351, %rd15712;
	xor.b64  	%rd15356, %rd15351, %rd15711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11035,%dummy}, %rd15312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11036}, %rd15312;
	}
	shf.r.wrap.b32 	%r11037, %r11036, %r11035, 1;
	shf.r.wrap.b32 	%r11038, %r11035, %r11036, 1;
	mov.b64 	%rd15357, {%r11038, %r11037};
	xor.b64  	%rd15358, %rd15357, %rd15324;
	xor.b64  	%rd15359, %rd15358, %rd15710;
	xor.b64  	%rd15360, %rd15358, %rd15709;
	xor.b64  	%rd15361, %rd15358, %rd15708;
	xor.b64  	%rd15362, %rd15358, %rd15707;
	xor.b64  	%rd15363, %rd15358, %rd15706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11039,%dummy}, %rd15338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11040}, %rd15338;
	}
	shf.r.wrap.b32 	%r11041, %r11040, %r11039, 1;
	shf.r.wrap.b32 	%r11042, %r11039, %r11040, 1;
	mov.b64 	%rd15364, {%r11042, %r11041};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11043,%dummy}, %rd15333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11044}, %rd15333;
	}
	shf.r.wrap.b32 	%r11045, %r11044, %r11043, 3;
	shf.r.wrap.b32 	%r11046, %r11043, %r11044, 3;
	mov.b64 	%rd15365, {%r11046, %r11045};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11047,%dummy}, %rd15346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11048}, %rd15346;
	}
	shf.r.wrap.b32 	%r11049, %r11048, %r11047, 6;
	shf.r.wrap.b32 	%r11050, %r11047, %r11048, 6;
	mov.b64 	%rd15366, {%r11050, %r11049};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11051,%dummy}, %rd15340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11052}, %rd15340;
	}
	shf.r.wrap.b32 	%r11053, %r11052, %r11051, 10;
	shf.r.wrap.b32 	%r11054, %r11051, %r11052, 10;
	mov.b64 	%rd15367, {%r11054, %r11053};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11055,%dummy}, %rd15348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11056}, %rd15348;
	}
	shf.r.wrap.b32 	%r11057, %r11056, %r11055, 15;
	shf.r.wrap.b32 	%r11058, %r11055, %r11056, 15;
	mov.b64 	%rd15368, {%r11058, %r11057};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11059,%dummy}, %rd15355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11060}, %rd15355;
	}
	shf.r.wrap.b32 	%r11061, %r11060, %r11059, 21;
	shf.r.wrap.b32 	%r11062, %r11059, %r11060, 21;
	mov.b64 	%rd15369, {%r11062, %r11061};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11063,%dummy}, %rd15352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11064}, %rd15352;
	}
	shf.r.wrap.b32 	%r11065, %r11064, %r11063, 28;
	shf.r.wrap.b32 	%r11066, %r11063, %r11064, 28;
	mov.b64 	%rd15370, {%r11066, %r11065};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11067}, %rd15332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11068,%dummy}, %rd15332;
	}
	shf.l.wrap.b32 	%r11069, %r11068, %r11067, 28;
	shf.l.wrap.b32 	%r11070, %r11067, %r11068, 28;
	mov.b64 	%rd15371, {%r11070, %r11069};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11071}, %rd15341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11072,%dummy}, %rd15341;
	}
	shf.l.wrap.b32 	%r11073, %r11072, %r11071, 19;
	shf.l.wrap.b32 	%r11074, %r11071, %r11072, 19;
	mov.b64 	%rd15372, {%r11074, %r11073};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11075}, %rd15353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11076,%dummy}, %rd15353;
	}
	shf.l.wrap.b32 	%r11077, %r11076, %r11075, 9;
	shf.l.wrap.b32 	%r11078, %r11075, %r11076, 9;
	mov.b64 	%rd15373, {%r11078, %r11077};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11079,%dummy}, %rd15342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11080}, %rd15342;
	}
	shf.r.wrap.b32 	%r11081, %r11080, %r11079, 2;
	shf.r.wrap.b32 	%r11082, %r11079, %r11080, 2;
	mov.b64 	%rd15374, {%r11082, %r11081};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11083,%dummy}, %rd15363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11084}, %rd15363;
	}
	shf.r.wrap.b32 	%r11085, %r11084, %r11083, 14;
	shf.r.wrap.b32 	%r11086, %r11083, %r11084, 14;
	mov.b64 	%rd15375, {%r11086, %r11085};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11087,%dummy}, %rd15359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11088}, %rd15359;
	}
	shf.r.wrap.b32 	%r11089, %r11088, %r11087, 27;
	shf.r.wrap.b32 	%r11090, %r11087, %r11088, 27;
	mov.b64 	%rd15376, {%r11090, %r11089};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11091}, %rd15334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11092,%dummy}, %rd15334;
	}
	shf.l.wrap.b32 	%r11093, %r11092, %r11091, 23;
	shf.l.wrap.b32 	%r11094, %r11091, %r11092, 23;
	mov.b64 	%rd15377, {%r11094, %r11093};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11095}, %rd15356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11096,%dummy}, %rd15356;
	}
	shf.l.wrap.b32 	%r11097, %r11096, %r11095, 8;
	shf.l.wrap.b32 	%r11098, %r11095, %r11096, 8;
	mov.b64 	%rd15378, {%r11098, %r11097};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11099,%dummy}, %rd15362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11100}, %rd15362;
	}
	shf.r.wrap.b32 	%r11101, %r11100, %r11099, 8;
	shf.r.wrap.b32 	%r11102, %r11099, %r11100, 8;
	mov.b64 	%rd15379, {%r11102, %r11101};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11103,%dummy}, %rd15354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11104}, %rd15354;
	}
	shf.r.wrap.b32 	%r11105, %r11104, %r11103, 25;
	shf.r.wrap.b32 	%r11106, %r11103, %r11104, 25;
	mov.b64 	%rd15380, {%r11106, %r11105};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11107}, %rd15347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11108,%dummy}, %rd15347;
	}
	shf.l.wrap.b32 	%r11109, %r11108, %r11107, 21;
	shf.l.wrap.b32 	%r11110, %r11107, %r11108, 21;
	mov.b64 	%rd15381, {%r11110, %r11109};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11111}, %rd15345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11112,%dummy}, %rd15345;
	}
	shf.l.wrap.b32 	%r11113, %r11112, %r11111, 2;
	shf.l.wrap.b32 	%r11114, %r11111, %r11112, 2;
	mov.b64 	%rd15382, {%r11114, %r11113};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11115,%dummy}, %rd15335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11116}, %rd15335;
	}
	shf.r.wrap.b32 	%r11117, %r11116, %r11115, 18;
	shf.r.wrap.b32 	%r11118, %r11115, %r11116, 18;
	mov.b64 	%rd15383, {%r11118, %r11117};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11119}, %rd15361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11120,%dummy}, %rd15361;
	}
	shf.l.wrap.b32 	%r11121, %r11120, %r11119, 25;
	shf.l.wrap.b32 	%r11122, %r11119, %r11120, 25;
	mov.b64 	%rd15384, {%r11122, %r11121};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11123}, %rd15349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11124,%dummy}, %rd15349;
	}
	shf.l.wrap.b32 	%r11125, %r11124, %r11123, 3;
	shf.l.wrap.b32 	%r11126, %r11123, %r11124, 3;
	mov.b64 	%rd15385, {%r11126, %r11125};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11127,%dummy}, %rd15360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11128}, %rd15360;
	}
	shf.r.wrap.b32 	%r11129, %r11128, %r11127, 20;
	shf.r.wrap.b32 	%r11130, %r11127, %r11128, 20;
	mov.b64 	%rd15386, {%r11130, %r11129};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11131}, %rd15339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11132,%dummy}, %rd15339;
	}
	shf.l.wrap.b32 	%r11133, %r11132, %r11131, 20;
	shf.l.wrap.b32 	%r11134, %r11131, %r11132, 20;
	mov.b64 	%rd15387, {%r11134, %r11133};
	xor.b64  	%rd15388, %rd15370, %rd15331;
	xor.b64  	%rd15389, %rd15388, %rd15364;
	xor.b64  	%rd15390, %rd15389, %rd15376;
	xor.b64  	%rd15391, %rd15390, %rd15382;
	xor.b64  	%rd15392, %rd15386, %rd15387;
	xor.b64  	%rd15393, %rd15392, %rd15366;
	xor.b64  	%rd15394, %rd15393, %rd15371;
	xor.b64  	%rd15395, %rd15394, %rd15373;
	xor.b64  	%rd15396, %rd15365, %rd15381;
	xor.b64  	%rd15397, %rd15396, %rd15380;
	xor.b64  	%rd15398, %rd15397, %rd15367;
	xor.b64  	%rd15399, %rd15398, %rd15384;
	xor.b64  	%rd15400, %rd15372, %rd15369;
	xor.b64  	%rd15401, %rd15400, %rd15379;
	xor.b64  	%rd15402, %rd15401, %rd15368;
	xor.b64  	%rd15403, %rd15402, %rd15377;
	xor.b64  	%rd15404, %rd15385, %rd15375;
	xor.b64  	%rd15405, %rd15404, %rd15383;
	xor.b64  	%rd15406, %rd15405, %rd15378;
	xor.b64  	%rd15407, %rd15406, %rd15374;
	not.b64 	%rd15408, %rd15395;
	and.b64  	%rd15409, %rd15399, %rd15408;
	xor.b64  	%rd15410, %rd15331, %rd15409;
	xor.b64  	%rd15729, %rd15370, %rd15409;
	xor.b64  	%rd15728, %rd15364, %rd15409;
	xor.b64  	%rd15727, %rd15376, %rd15409;
	xor.b64  	%rd15726, %rd15382, %rd15409;
	not.b64 	%rd15411, %rd15399;
	and.b64  	%rd15412, %rd15403, %rd15411;
	xor.b64  	%rd15725, %rd15387, %rd15412;
	xor.b64  	%rd15724, %rd15386, %rd15412;
	xor.b64  	%rd15723, %rd15366, %rd15412;
	xor.b64  	%rd15722, %rd15371, %rd15412;
	xor.b64  	%rd15721, %rd15373, %rd15412;
	not.b64 	%rd15413, %rd15403;
	and.b64  	%rd15414, %rd15407, %rd15413;
	xor.b64  	%rd15720, %rd15381, %rd15414;
	xor.b64  	%rd15719, %rd15365, %rd15414;
	xor.b64  	%rd15718, %rd15380, %rd15414;
	xor.b64  	%rd15717, %rd15367, %rd15414;
	xor.b64  	%rd15716, %rd15384, %rd15414;
	not.b64 	%rd15415, %rd15407;
	and.b64  	%rd15416, %rd15391, %rd15415;
	xor.b64  	%rd15715, %rd15369, %rd15416;
	xor.b64  	%rd15714, %rd15372, %rd15416;
	xor.b64  	%rd15713, %rd15379, %rd15416;
	xor.b64  	%rd15712, %rd15368, %rd15416;
	xor.b64  	%rd15711, %rd15377, %rd15416;
	not.b64 	%rd15417, %rd15391;
	and.b64  	%rd15418, %rd15395, %rd15417;
	xor.b64  	%rd15710, %rd15375, %rd15418;
	xor.b64  	%rd15709, %rd15385, %rd15418;
	xor.b64  	%rd15708, %rd15383, %rd15418;
	xor.b64  	%rd15707, %rd15378, %rd15418;
	xor.b64  	%rd15706, %rd15374, %rd15418;
	ld.local.u64 	%rd15419, [%rd15705];
	xor.b64  	%rd15730, %rd15410, %rd15419;
	add.s64 	%rd15705, %rd15705, 8;
	add.s32 	%r11237, %r11237, 1;
	setp.ne.s32 	%p378, %r11237, 24;
	@%p378 bra 	$L__BB4_295;

	ld.param.u32 	%r11173, [search_seeds_param_8];
	shr.u64 	%rd638, %rd15725, 32;
	cvt.u32.u64 	%r11135, %rd638;
	cvt.u16.u64 	%rs157, %rd638;
	shr.u64 	%rd639, %rd15725, 40;
	cvt.u16.u64 	%rs158, %rd639;
	shr.u64 	%rd640, %rd15725, 48;
	cvt.u32.u64 	%r11136, %rd640;
	cvt.u16.u64 	%rs159, %rd640;
	shr.u64 	%rd641, %rd15725, 56;
	cvt.u16.u64 	%rs160, %rd641;
	cvt.u32.u64 	%r11137, %rd15720;
	shr.u64 	%rd642, %rd15720, 8;
	cvt.u16.u64 	%rs161, %rd642;
	shr.u64 	%rd643, %rd15720, 16;
	cvt.u32.u64 	%r11138, %rd643;
	cvt.u16.u64 	%rs162, %rd643;
	shr.u64 	%rd644, %rd15720, 24;
	cvt.u16.u64 	%rs163, %rd644;
	shr.u64 	%rd645, %rd15720, 32;
	cvt.u32.u64 	%r11139, %rd645;
	cvt.u16.u64 	%rs164, %rd645;
	shr.u64 	%rd646, %rd15720, 40;
	cvt.u16.u64 	%rs165, %rd646;
	shr.u64 	%rd647, %rd15720, 48;
	cvt.u32.u64 	%r11140, %rd647;
	cvt.u16.u64 	%rs166, %rd647;
	shr.u64 	%rd648, %rd15720, 56;
	cvt.u16.u64 	%rs167, %rd648;
	cvt.u32.u64 	%r11141, %rd15715;
	shr.u64 	%rd649, %rd15715, 8;
	cvt.u16.u64 	%rs168, %rd649;
	shr.u64 	%rd650, %rd15715, 16;
	cvt.u32.u64 	%r11142, %rd650;
	cvt.u16.u64 	%rs169, %rd650;
	shr.u64 	%rd651, %rd15715, 24;
	cvt.u16.u64 	%rs170, %rd651;
	shr.u64 	%rd652, %rd15715, 32;
	cvt.u16.u64 	%rs171, %rd652;
	shr.u64 	%rd653, %rd15715, 40;
	cvt.u16.u64 	%rs172, %rd653;
	shr.u64 	%rd654, %rd15715, 48;
	cvt.u16.u64 	%rs173, %rd654;
	shr.u64 	%rd655, %rd15715, 56;
	cvt.u16.u64 	%rs174, %rd655;
	cvt.u16.u64 	%rs175, %rd15720;
	cvt.u16.u64 	%rs176, %rd15715;
	cvt.u32.u64 	%r11143, %rd639;
	and.b32  	%r11144, %r11135, 255;
	prmt.b32 	%r11145, %r11143, %r11144, 30212;
	cvt.u32.u64 	%r11146, %rd641;
	and.b32  	%r11147, %r11136, 255;
	prmt.b32 	%r11148, %r11146, %r11147, 30212;
	and.b32  	%r11149, %r11137, 255;
	cvt.u32.u64 	%r11150, %rd642;
	prmt.b32 	%r11151, %r11150, %r11149, 30212;
	cvt.u32.u64 	%r11152, %rd644;
	and.b32  	%r11153, %r11138, 255;
	prmt.b32 	%r11154, %r11152, %r11153, 30212;
	cvt.u32.u64 	%r11155, %rd646;
	and.b32  	%r11156, %r11139, 255;
	prmt.b32 	%r11157, %r11155, %r11156, 30212;
	cvt.u32.u64 	%r11158, %rd648;
	and.b32  	%r11159, %r11140, 255;
	prmt.b32 	%r11160, %r11158, %r11159, 30212;
	and.b32  	%r11161, %r11141, 255;
	cvt.u32.u64 	%r11162, %rd649;
	prmt.b32 	%r11163, %r11162, %r11161, 30212;
	cvt.u32.u64 	%r11164, %rd651;
	and.b32  	%r11165, %r11142, 255;
	prmt.b32 	%r11166, %r11164, %r11165, 30212;
	prmt.b32 	%r11167, %r11166, %r11163, 4180;
	prmt.b32 	%r11168, %r11160, %r11157, 4180;
	prmt.b32 	%r11169, %r11154, %r11151, 4180;
	prmt.b32 	%r11170, %r11148, %r11145, 4180;
	st.local.v4.u32 	[%rd2], {%r11170, %r11169, %r11168, %r11167};
	st.local.v4.u8 	[%rd2+16], {%rs171, %rs172, %rs173, %rs174};
	setp.eq.s32 	%p379, %r11173, 0;
	@%p379 bra 	$L__BB4_302;

	ld.param.u32 	%r11174, [search_seeds_param_8];
	setp.ne.s32 	%p380, %r11174, 1;
	@%p380 bra 	$L__BB4_322;

	setp.lt.s32 	%p381, %r138, 1;
	@%p381 bra 	$L__BB4_323;

	ld.param.u64 	%rd15496, [search_seeds_param_7];
	cvta.to.global.u64 	%rd656, %rd15496;
	mov.u32 	%r11238, 0;

$L__BB4_300:
	cvt.s64.s32 	%rd15420, %r11238;
	add.s64 	%rd15421, %rd2, %rd15420;
	add.s64 	%rd15422, %rd656, %rd15420;
	ld.global.u8 	%rs1017, [%rd15422];
	ld.local.u8 	%rs1018, [%rd15421];
	setp.ne.s16 	%p382, %rs1018, %rs1017;
	add.s32 	%r11238, %r11238, 1;
	@%p382 bra 	$L__BB4_324;

	setp.lt.s32 	%p383, %r11238, %r138;
	@%p383 bra 	$L__BB4_300;
	bra.uni 	$L__BB4_323;

$L__BB4_34:
	atom.global.add.u64 	%rd756, [%rd26], 1;
	bra.uni 	$L__BB4_325;

$L__BB4_302:
	ld.param.u64 	%rd15497, [search_seeds_param_7];
	cvta.to.global.u64 	%rd15423, %rd15497;
	ld.global.u8 	%rs1019, [%rd15423];
	and.b16  	%rs1020, %rs157, 255;
	setp.ne.s16 	%p384, %rs1019, %rs1020;
	@%p384 bra 	$L__BB4_324;

	ld.global.u8 	%rs1021, [%rd15423+1];
	and.b16  	%rs1022, %rs158, 255;
	setp.ne.s16 	%p385, %rs1021, %rs1022;
	@%p385 bra 	$L__BB4_324;

	ld.global.u8 	%rs1023, [%rd15423+2];
	and.b16  	%rs1024, %rs159, 255;
	setp.ne.s16 	%p386, %rs1023, %rs1024;
	@%p386 bra 	$L__BB4_324;

	ld.global.u8 	%rs1025, [%rd15423+3];
	setp.ne.s16 	%p387, %rs1025, %rs160;
	@%p387 bra 	$L__BB4_324;

	ld.global.u8 	%rs1026, [%rd15423+4];
	and.b16  	%rs1027, %rs175, 255;
	setp.ne.s16 	%p388, %rs1026, %rs1027;
	@%p388 bra 	$L__BB4_324;

	ld.global.u8 	%rs1028, [%rd15423+5];
	and.b16  	%rs1029, %rs161, 255;
	setp.ne.s16 	%p389, %rs1028, %rs1029;
	@%p389 bra 	$L__BB4_324;

	ld.global.u8 	%rs1030, [%rd15423+6];
	and.b16  	%rs1031, %rs162, 255;
	setp.ne.s16 	%p390, %rs1030, %rs1031;
	@%p390 bra 	$L__BB4_324;

	ld.global.u8 	%rs1032, [%rd15423+7];
	and.b16  	%rs1033, %rs163, 255;
	setp.ne.s16 	%p391, %rs1032, %rs1033;
	@%p391 bra 	$L__BB4_324;

	ld.global.u8 	%rs1034, [%rd15423+8];
	and.b16  	%rs1035, %rs164, 255;
	setp.ne.s16 	%p392, %rs1034, %rs1035;
	@%p392 bra 	$L__BB4_324;

	ld.global.u8 	%rs1036, [%rd15423+9];
	and.b16  	%rs1037, %rs165, 255;
	setp.ne.s16 	%p393, %rs1036, %rs1037;
	@%p393 bra 	$L__BB4_324;

	ld.global.u8 	%rs1038, [%rd15423+10];
	and.b16  	%rs1039, %rs166, 255;
	setp.ne.s16 	%p394, %rs1038, %rs1039;
	@%p394 bra 	$L__BB4_324;

	ld.global.u8 	%rs1040, [%rd15423+11];
	setp.ne.s16 	%p395, %rs1040, %rs167;
	@%p395 bra 	$L__BB4_324;

	ld.global.u8 	%rs1041, [%rd15423+12];
	and.b16  	%rs1042, %rs176, 255;
	setp.ne.s16 	%p396, %rs1041, %rs1042;
	@%p396 bra 	$L__BB4_324;

	ld.global.u8 	%rs1043, [%rd15423+13];
	and.b16  	%rs1044, %rs168, 255;
	setp.ne.s16 	%p397, %rs1043, %rs1044;
	@%p397 bra 	$L__BB4_324;

	ld.global.u8 	%rs1045, [%rd15423+14];
	and.b16  	%rs1046, %rs169, 255;
	setp.ne.s16 	%p398, %rs1045, %rs1046;
	@%p398 bra 	$L__BB4_324;

	ld.global.u8 	%rs1047, [%rd15423+15];
	and.b16  	%rs1048, %rs170, 255;
	setp.ne.s16 	%p399, %rs1047, %rs1048;
	@%p399 bra 	$L__BB4_324;

	ld.global.u8 	%rs1049, [%rd15423+16];
	and.b16  	%rs1050, %rs171, 255;
	setp.ne.s16 	%p400, %rs1049, %rs1050;
	@%p400 bra 	$L__BB4_324;

	ld.global.u8 	%rs1051, [%rd15423+17];
	and.b16  	%rs1052, %rs172, 255;
	setp.ne.s16 	%p401, %rs1051, %rs1052;
	@%p401 bra 	$L__BB4_324;

	ld.global.u8 	%rs1053, [%rd15423+18];
	and.b16  	%rs1054, %rs173, 255;
	setp.ne.s16 	%p402, %rs1053, %rs1054;
	@%p402 bra 	$L__BB4_324;

	ld.global.u8 	%rs1055, [%rd15423+19];
	setp.eq.s16 	%p403, %rs1055, %rs174;
	@%p403 bra 	$L__BB4_323;
	bra.uni 	$L__BB4_324;

$L__BB4_322:
	or.b16  	%rs1058, %rs157, %rs158;
	or.b16  	%rs1060, %rs1058, %rs159;
	or.b16  	%rs1062, %rs1060, %rs160;
	or.b16  	%rs1064, %rs1062, %rs175;
	or.b16  	%rs1066, %rs1064, %rs161;
	or.b16  	%rs1068, %rs1066, %rs162;
	or.b16  	%rs1070, %rs1068, %rs163;
	or.b16  	%rs1072, %rs1070, %rs164;
	or.b16  	%rs1074, %rs1072, %rs165;
	or.b16  	%rs1076, %rs1074, %rs166;
	or.b16  	%rs1078, %rs1076, %rs167;
	or.b16  	%rs1080, %rs1078, %rs176;
	or.b16  	%rs1082, %rs1080, %rs168;
	or.b16  	%rs1084, %rs1082, %rs169;
	or.b16  	%rs1086, %rs1084, %rs170;
	or.b16  	%rs1088, %rs1086, %rs171;
	or.b16  	%rs1090, %rs1088, %rs172;
	or.b16  	%rs1092, %rs1090, %rs173;
	or.b16  	%rs1094, %rs1092, %rs174;
	and.b16  	%rs1095, %rs1094, 255;
	setp.ne.s16 	%p404, %rs1095, 0;
	@%p404 bra 	$L__BB4_324;

$L__BB4_323:
	ld.param.u64 	%rd15495, [search_seeds_param_1];
	add.u64 	%rd15443, %SP, 192;
	add.u64 	%rd15444, %SPL, 192;
	st.local.u64 	[%rd15444], %rd698;
	mov.u64 	%rd15446, $str$1;
	cvta.global.u64 	%rd15447, %rd15446;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd15447;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd15443;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r11172, [retval0+0];
	} // callseq 0
	cvta.to.global.u64 	%rd15448, %rd15495;
	atom.global.add.u64 	%rd15449, [%rd15448], 1;

$L__BB4_324:
	ld.param.u64 	%rd15494, [search_seeds_param_0];
	cvta.to.global.u64 	%rd15493, %rd15494;
	atom.global.add.u64 	%rd15451, [%rd15493], 1;

$L__BB4_325:
	ret;

}

