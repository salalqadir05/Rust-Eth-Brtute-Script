//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	_Z13kernel_sha256PKhiPhi
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 1 .b8 wordlist[22528];
.const .align 8 .b8 K[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
.const .align 4 .b8 K256[256] = {152, 47, 138, 66, 145, 68, 55, 113, 207, 251, 192, 181, 165, 219, 181, 233, 91, 194, 86, 57, 241, 17, 241, 89, 164, 130, 63, 146, 213, 94, 28, 171, 152, 170, 7, 216, 1, 91, 131, 18, 190, 133, 49, 36, 195, 125, 12, 85, 116, 93, 190, 114, 254, 177, 222, 128, 167, 6, 220, 155, 116, 241, 155, 193, 193, 105, 155, 228, 134, 71, 190, 239, 198, 157, 193, 15, 204, 161, 12, 36, 111, 44, 233, 45, 170, 132, 116, 74, 220, 169, 176, 92, 218, 136, 249, 118, 82, 81, 62, 152, 109, 198, 49, 168, 200, 39, 3, 176, 199, 127, 89, 191, 243, 11, 224, 198, 71, 145, 167, 213, 81, 99, 202, 6, 103, 41, 41, 20, 133, 10, 183, 39, 56, 33, 27, 46, 252, 109, 44, 77, 19, 13, 56, 83, 84, 115, 10, 101, 187, 10, 106, 118, 46, 201, 194, 129, 133, 44, 114, 146, 161, 232, 191, 162, 75, 102, 26, 168, 112, 139, 75, 194, 163, 81, 108, 199, 25, 232, 146, 209, 36, 6, 153, 214, 133, 53, 14, 244, 112, 160, 106, 16, 22, 193, 164, 25, 8, 108, 55, 30, 76, 119, 72, 39, 181, 188, 176, 52, 179, 12, 28, 57, 74, 170, 216, 78, 79, 202, 156, 91, 243, 111, 46, 104, 238, 130, 143, 116, 111, 99, 165, 120, 20, 120, 200, 132, 8, 2, 199, 140, 250, 255, 190, 144, 235, 108, 80, 164, 247, 163, 249, 190, 242, 120, 113, 198};
.const .align 8 .b8 SECP256K1_P[32] = {47, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255};
.const .align 8 .b8 EXP_P_MINUS_2[32] = {45, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255};
.global .align 1 .b8 $str$1[22] = {91, 70, 79, 85, 78, 68, 93, 32, 77, 110, 101, 109, 111, 110, 105, 99, 58, 32, 37, 115, 10, 0};

.visible .entry _Z13kernel_sha256PKhiPhi(
	.param .u64 _Z13kernel_sha256PKhiPhi_param_0,
	.param .u32 _Z13kernel_sha256PKhiPhi_param_1,
	.param .u64 _Z13kernel_sha256PKhiPhi_param_2,
	.param .u32 _Z13kernel_sha256PKhiPhi_param_3
)
{
	.local .align 16 .b8 	__local_depot0[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<92>;
	.reg .b32 	%r<2565>;
	.reg .b64 	%rd<27>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd11, [_Z13kernel_sha256PKhiPhi_param_0];
	ld.param.u32 	%r11, [_Z13kernel_sha256PKhiPhi_param_1];
	ld.param.u64 	%rd12, [_Z13kernel_sha256PKhiPhi_param_2];
	ld.param.u32 	%r12, [_Z13kernel_sha256PKhiPhi_param_3];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB0_9;

	cvta.to.global.u64 	%rd2, %rd11;
	mul.lo.s32 	%r16, %r1, %r11;
	cvt.s64.s32 	%rd3, %r16;
	mov.u32 	%r2563, 0;
	st.local.v4.u32 	[%rd1], {%r2563, %r2563, %r2563, %r2563};
	st.local.v4.u32 	[%rd1+16], {%r2563, %r2563, %r2563, %r2563};
	st.local.v4.u32 	[%rd1+32], {%r2563, %r2563, %r2563, %r2563};
	st.local.v4.u32 	[%rd1+48], {%r2563, %r2563, %r2563, %r2563};
	setp.lt.s32 	%p2, %r11, 1;
	@%p2 bra 	$L__BB0_8;

	add.s32 	%r19, %r11, -1;
	and.b32  	%r2564, %r11, 3;
	setp.lt.u32 	%p3, %r19, 3;
	@%p3 bra 	$L__BB0_5;

	sub.s32 	%r2562, %r11, %r2564;
	mov.u32 	%r2563, 0;

$L__BB0_4:
	cvt.s64.s32 	%rd14, %r2563;
	add.s64 	%rd15, %rd14, %rd3;
	add.s64 	%rd16, %rd2, %rd15;
	add.s64 	%rd17, %rd1, %rd14;
	ld.global.u8 	%rs1, [%rd16+3];
	ld.global.u8 	%rs2, [%rd16+2];
	ld.global.u8 	%rs3, [%rd16+1];
	ld.global.u8 	%rs4, [%rd16];
	st.local.v4.u8 	[%rd17], {%rs4, %rs3, %rs2, %rs1};
	add.s32 	%r2563, %r2563, 4;
	add.s32 	%r2562, %r2562, -4;
	setp.ne.s32 	%p4, %r2562, 0;
	@%p4 bra 	$L__BB0_4;

$L__BB0_5:
	setp.eq.s32 	%p5, %r2564, 0;
	@%p5 bra 	$L__BB0_8;

	cvt.s64.s32 	%rd18, %r2563;
	add.s64 	%rd26, %rd1, %rd18;
	add.s64 	%rd19, %rd18, %rd3;
	add.s64 	%rd25, %rd2, %rd19;

$L__BB0_7:
	.pragma "nounroll";
	ld.global.u8 	%rs5, [%rd25];
	st.local.u8 	[%rd26], %rs5;
	add.s64 	%rd26, %rd26, 1;
	add.s64 	%rd25, %rd25, 1;
	add.s32 	%r2564, %r2564, -1;
	setp.ne.s32 	%p6, %r2564, 0;
	@%p6 bra 	$L__BB0_7;

$L__BB0_8:
	cvt.s64.s32 	%rd20, %r11;
	add.s64 	%rd21, %rd1, %rd20;
	mov.u16 	%rs6, 128;
	st.local.u8 	[%rd21], %rs6;
	shr.u32 	%r21, %r11, 5;
	cvt.u16.u32 	%rs7, %r11;
	shl.b16 	%rs8, %rs7, 3;
	cvt.u16.u32 	%rs9, %r21;
	st.local.v2.u8 	[%rd1+62], {%rs9, %rs8};
	ld.local.v4.u32 	{%r22, %r23, %r24, %r25}, [%rd1];
	mov.b32 	{%rs10, %rs11}, %r22;
	shr.u16 	%rs12, %rs10, 8;
	shr.u16 	%rs13, %rs11, 8;
	mov.b32 	{%rs14, %rs15}, %r23;
	shr.u16 	%rs16, %rs14, 8;
	shr.u16 	%rs17, %rs15, 8;
	mov.b32 	{%rs18, %rs19}, %r24;
	shr.u16 	%rs20, %rs18, 8;
	shr.u16 	%rs21, %rs19, 8;
	mov.b32 	{%rs22, %rs23}, %r25;
	shr.u16 	%rs24, %rs22, 8;
	shr.u16 	%rs25, %rs23, 8;
	cvt.u32.u16 	%r30, %rs10;
	shl.b32 	%r31, %r30, 24;
	cvt.u32.u16 	%r32, %rs12;
	shl.b32 	%r33, %r32, 16;
	or.b32  	%r34, %r33, %r31;
	and.b16  	%rs26, %rs11, 255;
	mul.wide.u16 	%r35, %rs26, 256;
	or.b32  	%r36, %r34, %r35;
	cvt.u32.u16 	%r37, %rs13;
	or.b32  	%r38, %r36, %r37;
	cvt.u32.u16 	%r39, %rs14;
	shl.b32 	%r40, %r39, 24;
	cvt.u32.u16 	%r41, %rs16;
	shl.b32 	%r42, %r41, 16;
	or.b32  	%r43, %r42, %r40;
	and.b16  	%rs27, %rs15, 255;
	mul.wide.u16 	%r44, %rs27, 256;
	or.b32  	%r45, %r43, %r44;
	cvt.u32.u16 	%r46, %rs17;
	or.b32  	%r47, %r45, %r46;
	cvt.u32.u16 	%r48, %rs18;
	shl.b32 	%r49, %r48, 24;
	cvt.u32.u16 	%r50, %rs20;
	shl.b32 	%r51, %r50, 16;
	or.b32  	%r52, %r51, %r49;
	and.b16  	%rs28, %rs19, 255;
	mul.wide.u16 	%r53, %rs28, 256;
	or.b32  	%r54, %r52, %r53;
	cvt.u32.u16 	%r55, %rs21;
	or.b32  	%r56, %r54, %r55;
	cvt.u32.u16 	%r57, %rs22;
	shl.b32 	%r58, %r57, 24;
	cvt.u32.u16 	%r59, %rs24;
	shl.b32 	%r60, %r59, 16;
	or.b32  	%r61, %r60, %r58;
	and.b16  	%rs29, %rs23, 255;
	mul.wide.u16 	%r62, %rs29, 256;
	or.b32  	%r63, %r61, %r62;
	cvt.u32.u16 	%r64, %rs25;
	or.b32  	%r65, %r63, %r64;
	ld.local.v4.u32 	{%r66, %r67, %r68, %r69}, [%rd1+16];
	mov.b32 	{%rs30, %rs31}, %r66;
	shr.u16 	%rs32, %rs30, 8;
	shr.u16 	%rs33, %rs31, 8;
	mov.b32 	{%rs34, %rs35}, %r67;
	shr.u16 	%rs36, %rs34, 8;
	shr.u16 	%rs37, %rs35, 8;
	mov.b32 	{%rs38, %rs39}, %r68;
	shr.u16 	%rs40, %rs38, 8;
	shr.u16 	%rs41, %rs39, 8;
	mov.b32 	{%rs42, %rs43}, %r69;
	shr.u16 	%rs44, %rs42, 8;
	shr.u16 	%rs45, %rs43, 8;
	cvt.u32.u16 	%r74, %rs30;
	shl.b32 	%r75, %r74, 24;
	cvt.u32.u16 	%r76, %rs32;
	shl.b32 	%r77, %r76, 16;
	or.b32  	%r78, %r77, %r75;
	and.b16  	%rs46, %rs31, 255;
	mul.wide.u16 	%r79, %rs46, 256;
	or.b32  	%r80, %r78, %r79;
	cvt.u32.u16 	%r81, %rs33;
	or.b32  	%r82, %r80, %r81;
	cvt.u32.u16 	%r83, %rs34;
	shl.b32 	%r84, %r83, 24;
	cvt.u32.u16 	%r85, %rs36;
	shl.b32 	%r86, %r85, 16;
	or.b32  	%r87, %r86, %r84;
	and.b16  	%rs47, %rs35, 255;
	mul.wide.u16 	%r88, %rs47, 256;
	or.b32  	%r89, %r87, %r88;
	cvt.u32.u16 	%r90, %rs37;
	or.b32  	%r91, %r89, %r90;
	cvt.u32.u16 	%r92, %rs38;
	shl.b32 	%r93, %r92, 24;
	cvt.u32.u16 	%r94, %rs40;
	shl.b32 	%r95, %r94, 16;
	or.b32  	%r96, %r95, %r93;
	and.b16  	%rs48, %rs39, 255;
	mul.wide.u16 	%r97, %rs48, 256;
	or.b32  	%r98, %r96, %r97;
	cvt.u32.u16 	%r99, %rs41;
	or.b32  	%r100, %r98, %r99;
	cvt.u32.u16 	%r101, %rs42;
	shl.b32 	%r102, %r101, 24;
	cvt.u32.u16 	%r103, %rs44;
	shl.b32 	%r104, %r103, 16;
	or.b32  	%r105, %r104, %r102;
	and.b16  	%rs49, %rs43, 255;
	mul.wide.u16 	%r106, %rs49, 256;
	or.b32  	%r107, %r105, %r106;
	cvt.u32.u16 	%r108, %rs45;
	or.b32  	%r109, %r107, %r108;
	ld.local.v4.u32 	{%r110, %r111, %r112, %r113}, [%rd1+32];
	mov.b32 	{%rs50, %rs51}, %r110;
	shr.u16 	%rs52, %rs50, 8;
	shr.u16 	%rs53, %rs51, 8;
	mov.b32 	{%rs54, %rs55}, %r111;
	shr.u16 	%rs56, %rs54, 8;
	shr.u16 	%rs57, %rs55, 8;
	mov.b32 	{%rs58, %rs59}, %r112;
	shr.u16 	%rs60, %rs58, 8;
	shr.u16 	%rs61, %rs59, 8;
	mov.b32 	{%rs62, %rs63}, %r113;
	shr.u16 	%rs64, %rs62, 8;
	shr.u16 	%rs65, %rs63, 8;
	cvt.u32.u16 	%r118, %rs50;
	shl.b32 	%r119, %r118, 24;
	cvt.u32.u16 	%r120, %rs52;
	shl.b32 	%r121, %r120, 16;
	or.b32  	%r122, %r121, %r119;
	and.b16  	%rs66, %rs51, 255;
	mul.wide.u16 	%r123, %rs66, 256;
	or.b32  	%r124, %r122, %r123;
	cvt.u32.u16 	%r125, %rs53;
	or.b32  	%r126, %r124, %r125;
	cvt.u32.u16 	%r127, %rs54;
	shl.b32 	%r128, %r127, 24;
	cvt.u32.u16 	%r129, %rs56;
	shl.b32 	%r130, %r129, 16;
	or.b32  	%r131, %r130, %r128;
	and.b16  	%rs67, %rs55, 255;
	mul.wide.u16 	%r132, %rs67, 256;
	or.b32  	%r133, %r131, %r132;
	cvt.u32.u16 	%r134, %rs57;
	or.b32  	%r135, %r133, %r134;
	cvt.u32.u16 	%r136, %rs58;
	shl.b32 	%r137, %r136, 24;
	cvt.u32.u16 	%r138, %rs60;
	shl.b32 	%r139, %r138, 16;
	or.b32  	%r140, %r139, %r137;
	and.b16  	%rs68, %rs59, 255;
	mul.wide.u16 	%r141, %rs68, 256;
	or.b32  	%r142, %r140, %r141;
	cvt.u32.u16 	%r143, %rs61;
	or.b32  	%r144, %r142, %r143;
	cvt.u32.u16 	%r145, %rs62;
	shl.b32 	%r146, %r145, 24;
	cvt.u32.u16 	%r147, %rs64;
	shl.b32 	%r148, %r147, 16;
	or.b32  	%r149, %r148, %r146;
	and.b16  	%rs69, %rs63, 255;
	mul.wide.u16 	%r150, %rs69, 256;
	or.b32  	%r151, %r149, %r150;
	cvt.u32.u16 	%r152, %rs65;
	or.b32  	%r153, %r151, %r152;
	ld.local.v4.u16 	{%rs70, %rs71, %rs72, %rs73}, [%rd1+48];
	shr.u16 	%rs75, %rs70, 8;
	shr.u16 	%rs77, %rs71, 8;
	shr.u16 	%rs79, %rs72, 8;
	shr.u16 	%rs81, %rs73, 8;
	cvt.u32.u16 	%r154, %rs70;
	shl.b32 	%r155, %r154, 24;
	cvt.u32.u16 	%r156, %rs75;
	shl.b32 	%r157, %r156, 16;
	or.b32  	%r158, %r157, %r155;
	and.b16  	%rs82, %rs71, 255;
	mul.wide.u16 	%r159, %rs82, 256;
	or.b32  	%r160, %r158, %r159;
	cvt.u32.u16 	%r161, %rs77;
	or.b32  	%r162, %r160, %r161;
	cvt.u32.u16 	%r163, %rs72;
	shl.b32 	%r164, %r163, 24;
	cvt.u32.u16 	%r165, %rs79;
	shl.b32 	%r166, %r165, 16;
	or.b32  	%r167, %r166, %r164;
	and.b16  	%rs83, %rs73, 255;
	mul.wide.u16 	%r168, %rs83, 256;
	or.b32  	%r169, %r167, %r168;
	cvt.u32.u16 	%r170, %rs81;
	or.b32  	%r171, %r169, %r170;
	ld.local.v4.u8 	{%rs84, %rs85, %rs86, %rs87}, [%rd1+56];
	cvt.u32.u16 	%r172, %rs84;
	shl.b32 	%r173, %r172, 24;
	cvt.u32.u16 	%r174, %rs85;
	shl.b32 	%r175, %r174, 16;
	or.b32  	%r176, %r175, %r173;
	mul.wide.u16 	%r177, %rs86, 256;
	or.b32  	%r178, %r176, %r177;
	cvt.u32.u16 	%r179, %rs87;
	or.b32  	%r180, %r178, %r179;
	ld.local.v2.u8 	{%rs89, %rs90}, [%rd1+60];
	cvt.u32.u16 	%r181, %rs89;
	shl.b32 	%r182, %r181, 24;
	cvt.u32.u16 	%r183, %rs90;
	shl.b32 	%r184, %r183, 16;
	or.b32  	%r185, %r184, %r182;
	shl.b32 	%r186, %r11, 3;
	and.b32  	%r187, %r186, 65280;
	or.b32  	%r188, %r185, %r187;
	cvt.u32.u16 	%r189, %rs8;
	and.b32  	%r190, %r189, 248;
	or.b32  	%r191, %r188, %r190;
	shr.u32 	%r192, %r47, 7;
	shl.b32 	%r193, %r46, 25;
	or.b32  	%r194, %r193, %r192;
	shr.u32 	%r195, %r43, 18;
	shl.b32 	%r196, %r47, 14;
	or.b32  	%r197, %r196, %r195;
	shr.u32 	%r198, %r47, 3;
	xor.b32  	%r199, %r197, %r198;
	xor.b32  	%r200, %r199, %r194;
	shr.u32 	%r201, %r176, 17;
	shl.b32 	%r202, %r180, 15;
	or.b32  	%r203, %r202, %r201;
	shr.u32 	%r204, %r176, 19;
	shl.b32 	%r205, %r180, 13;
	or.b32  	%r206, %r205, %r204;
	shr.u32 	%r207, %r178, 10;
	xor.b32  	%r208, %r206, %r207;
	xor.b32  	%r209, %r208, %r203;
	add.s32 	%r210, %r135, %r38;
	add.s32 	%r211, %r210, %r200;
	add.s32 	%r212, %r211, %r209;
	shr.u32 	%r213, %r56, 7;
	shl.b32 	%r214, %r55, 25;
	or.b32  	%r215, %r214, %r213;
	shr.u32 	%r216, %r52, 18;
	shl.b32 	%r217, %r56, 14;
	or.b32  	%r218, %r217, %r216;
	shr.u32 	%r219, %r56, 3;
	xor.b32  	%r220, %r218, %r219;
	xor.b32  	%r221, %r220, %r215;
	shr.u32 	%r222, %r185, 17;
	shl.b32 	%r223, %r191, 15;
	or.b32  	%r224, %r223, %r222;
	shr.u32 	%r225, %r185, 19;
	shl.b32 	%r226, %r191, 13;
	or.b32  	%r227, %r226, %r225;
	shr.u32 	%r228, %r188, 10;
	xor.b32  	%r229, %r227, %r228;
	xor.b32  	%r230, %r229, %r224;
	add.s32 	%r231, %r144, %r47;
	add.s32 	%r232, %r231, %r221;
	add.s32 	%r233, %r232, %r230;
	shr.u32 	%r234, %r65, 7;
	shl.b32 	%r235, %r64, 25;
	or.b32  	%r236, %r235, %r234;
	shr.u32 	%r237, %r61, 18;
	shl.b32 	%r238, %r65, 14;
	or.b32  	%r239, %r238, %r237;
	shr.u32 	%r240, %r65, 3;
	xor.b32  	%r241, %r239, %r240;
	xor.b32  	%r242, %r241, %r236;
	shf.l.wrap.b32 	%r243, %r212, %r212, 15;
	shf.l.wrap.b32 	%r244, %r212, %r212, 13;
	shr.u32 	%r245, %r212, 10;
	xor.b32  	%r246, %r244, %r245;
	xor.b32  	%r247, %r246, %r243;
	add.s32 	%r248, %r153, %r56;
	add.s32 	%r249, %r248, %r242;
	add.s32 	%r250, %r249, %r247;
	shr.u32 	%r251, %r82, 7;
	shl.b32 	%r252, %r81, 25;
	or.b32  	%r253, %r252, %r251;
	shr.u32 	%r254, %r78, 18;
	shl.b32 	%r255, %r82, 14;
	or.b32  	%r256, %r255, %r254;
	shr.u32 	%r257, %r82, 3;
	xor.b32  	%r258, %r256, %r257;
	xor.b32  	%r259, %r258, %r253;
	shf.l.wrap.b32 	%r260, %r233, %r233, 15;
	shf.l.wrap.b32 	%r261, %r233, %r233, 13;
	shr.u32 	%r262, %r233, 10;
	xor.b32  	%r263, %r261, %r262;
	xor.b32  	%r264, %r263, %r260;
	add.s32 	%r265, %r162, %r65;
	add.s32 	%r266, %r265, %r259;
	add.s32 	%r267, %r266, %r264;
	shr.u32 	%r268, %r91, 7;
	shl.b32 	%r269, %r90, 25;
	or.b32  	%r270, %r269, %r268;
	shr.u32 	%r271, %r87, 18;
	shl.b32 	%r272, %r91, 14;
	or.b32  	%r273, %r272, %r271;
	shr.u32 	%r274, %r91, 3;
	xor.b32  	%r275, %r273, %r274;
	xor.b32  	%r276, %r275, %r270;
	shf.l.wrap.b32 	%r277, %r250, %r250, 15;
	shf.l.wrap.b32 	%r278, %r250, %r250, 13;
	shr.u32 	%r279, %r250, 10;
	xor.b32  	%r280, %r278, %r279;
	xor.b32  	%r281, %r280, %r277;
	add.s32 	%r282, %r171, %r82;
	add.s32 	%r283, %r282, %r276;
	add.s32 	%r284, %r283, %r281;
	shr.u32 	%r285, %r100, 7;
	shl.b32 	%r286, %r99, 25;
	or.b32  	%r287, %r286, %r285;
	shr.u32 	%r288, %r96, 18;
	shl.b32 	%r289, %r100, 14;
	or.b32  	%r290, %r289, %r288;
	shr.u32 	%r291, %r100, 3;
	xor.b32  	%r292, %r290, %r291;
	xor.b32  	%r293, %r292, %r287;
	shf.l.wrap.b32 	%r294, %r267, %r267, 15;
	shf.l.wrap.b32 	%r295, %r267, %r267, 13;
	shr.u32 	%r296, %r267, 10;
	xor.b32  	%r297, %r295, %r296;
	xor.b32  	%r298, %r297, %r294;
	add.s32 	%r299, %r180, %r91;
	add.s32 	%r300, %r299, %r293;
	add.s32 	%r301, %r300, %r298;
	shr.u32 	%r302, %r109, 7;
	shl.b32 	%r303, %r108, 25;
	or.b32  	%r304, %r303, %r302;
	shr.u32 	%r305, %r105, 18;
	shl.b32 	%r306, %r109, 14;
	or.b32  	%r307, %r306, %r305;
	shr.u32 	%r308, %r109, 3;
	xor.b32  	%r309, %r307, %r308;
	xor.b32  	%r310, %r309, %r304;
	shf.l.wrap.b32 	%r311, %r284, %r284, 15;
	shf.l.wrap.b32 	%r312, %r284, %r284, 13;
	shr.u32 	%r313, %r284, 10;
	xor.b32  	%r314, %r312, %r313;
	xor.b32  	%r315, %r314, %r311;
	add.s32 	%r316, %r191, %r100;
	add.s32 	%r317, %r316, %r310;
	add.s32 	%r318, %r317, %r315;
	shr.u32 	%r319, %r126, 7;
	shl.b32 	%r320, %r125, 25;
	or.b32  	%r321, %r320, %r319;
	shr.u32 	%r322, %r122, 18;
	shl.b32 	%r323, %r126, 14;
	or.b32  	%r324, %r323, %r322;
	shr.u32 	%r325, %r126, 3;
	xor.b32  	%r326, %r324, %r325;
	xor.b32  	%r327, %r326, %r321;
	shf.l.wrap.b32 	%r328, %r301, %r301, 15;
	shf.l.wrap.b32 	%r329, %r301, %r301, 13;
	shr.u32 	%r330, %r301, 10;
	xor.b32  	%r331, %r329, %r330;
	xor.b32  	%r332, %r331, %r328;
	add.s32 	%r333, %r212, %r109;
	add.s32 	%r334, %r333, %r327;
	add.s32 	%r335, %r334, %r332;
	shr.u32 	%r336, %r135, 7;
	shl.b32 	%r337, %r134, 25;
	or.b32  	%r338, %r337, %r336;
	shr.u32 	%r339, %r131, 18;
	shl.b32 	%r340, %r135, 14;
	or.b32  	%r341, %r340, %r339;
	shr.u32 	%r342, %r135, 3;
	xor.b32  	%r343, %r341, %r342;
	xor.b32  	%r344, %r343, %r338;
	shf.l.wrap.b32 	%r345, %r318, %r318, 15;
	shf.l.wrap.b32 	%r346, %r318, %r318, 13;
	shr.u32 	%r347, %r318, 10;
	xor.b32  	%r348, %r346, %r347;
	xor.b32  	%r349, %r348, %r345;
	add.s32 	%r350, %r233, %r126;
	add.s32 	%r351, %r350, %r344;
	add.s32 	%r352, %r351, %r349;
	shr.u32 	%r353, %r144, 7;
	shl.b32 	%r354, %r143, 25;
	or.b32  	%r355, %r354, %r353;
	shr.u32 	%r356, %r140, 18;
	shl.b32 	%r357, %r144, 14;
	or.b32  	%r358, %r357, %r356;
	shr.u32 	%r359, %r144, 3;
	xor.b32  	%r360, %r358, %r359;
	xor.b32  	%r361, %r360, %r355;
	shf.l.wrap.b32 	%r362, %r335, %r335, 15;
	shf.l.wrap.b32 	%r363, %r335, %r335, 13;
	shr.u32 	%r364, %r335, 10;
	xor.b32  	%r365, %r363, %r364;
	xor.b32  	%r366, %r365, %r362;
	add.s32 	%r367, %r250, %r135;
	add.s32 	%r368, %r367, %r361;
	add.s32 	%r369, %r368, %r366;
	shr.u32 	%r370, %r153, 7;
	shl.b32 	%r371, %r152, 25;
	or.b32  	%r372, %r371, %r370;
	shr.u32 	%r373, %r149, 18;
	shl.b32 	%r374, %r153, 14;
	or.b32  	%r375, %r374, %r373;
	shr.u32 	%r376, %r153, 3;
	xor.b32  	%r377, %r375, %r376;
	xor.b32  	%r378, %r377, %r372;
	shf.l.wrap.b32 	%r379, %r352, %r352, 15;
	shf.l.wrap.b32 	%r380, %r352, %r352, 13;
	shr.u32 	%r381, %r352, 10;
	xor.b32  	%r382, %r380, %r381;
	xor.b32  	%r383, %r382, %r379;
	add.s32 	%r384, %r267, %r144;
	add.s32 	%r385, %r384, %r378;
	add.s32 	%r386, %r385, %r383;
	shr.u32 	%r387, %r162, 7;
	shl.b32 	%r388, %r161, 25;
	or.b32  	%r389, %r388, %r387;
	shr.u32 	%r390, %r158, 18;
	shl.b32 	%r391, %r162, 14;
	or.b32  	%r392, %r391, %r390;
	shr.u32 	%r393, %r162, 3;
	xor.b32  	%r394, %r392, %r393;
	xor.b32  	%r395, %r394, %r389;
	shf.l.wrap.b32 	%r396, %r369, %r369, 15;
	shf.l.wrap.b32 	%r397, %r369, %r369, 13;
	shr.u32 	%r398, %r369, 10;
	xor.b32  	%r399, %r397, %r398;
	xor.b32  	%r400, %r399, %r396;
	add.s32 	%r401, %r284, %r153;
	add.s32 	%r402, %r401, %r395;
	add.s32 	%r403, %r402, %r400;
	shr.u32 	%r404, %r171, 7;
	shl.b32 	%r405, %r170, 25;
	or.b32  	%r406, %r405, %r404;
	shr.u32 	%r407, %r167, 18;
	shl.b32 	%r408, %r171, 14;
	or.b32  	%r409, %r408, %r407;
	shr.u32 	%r410, %r171, 3;
	xor.b32  	%r411, %r409, %r410;
	xor.b32  	%r412, %r411, %r406;
	shf.l.wrap.b32 	%r413, %r386, %r386, 15;
	shf.l.wrap.b32 	%r414, %r386, %r386, 13;
	shr.u32 	%r415, %r386, 10;
	xor.b32  	%r416, %r414, %r415;
	xor.b32  	%r417, %r416, %r413;
	add.s32 	%r418, %r301, %r162;
	add.s32 	%r419, %r418, %r412;
	add.s32 	%r420, %r419, %r417;
	shr.u32 	%r421, %r180, 7;
	shl.b32 	%r422, %r179, 25;
	or.b32  	%r423, %r422, %r421;
	shr.u32 	%r424, %r176, 18;
	shl.b32 	%r425, %r180, 14;
	or.b32  	%r426, %r425, %r424;
	shr.u32 	%r427, %r180, 3;
	xor.b32  	%r428, %r426, %r427;
	xor.b32  	%r429, %r428, %r423;
	shf.l.wrap.b32 	%r430, %r403, %r403, 15;
	shf.l.wrap.b32 	%r431, %r403, %r403, 13;
	shr.u32 	%r432, %r403, 10;
	xor.b32  	%r433, %r431, %r432;
	xor.b32  	%r434, %r433, %r430;
	add.s32 	%r435, %r318, %r171;
	add.s32 	%r436, %r435, %r429;
	add.s32 	%r437, %r436, %r434;
	shr.u32 	%r438, %r191, 7;
	shl.b32 	%r439, %r11, 28;
	or.b32  	%r440, %r439, %r438;
	shr.u32 	%r441, %r185, 18;
	shl.b32 	%r442, %r191, 14;
	or.b32  	%r443, %r442, %r441;
	shr.u32 	%r444, %r191, 3;
	xor.b32  	%r445, %r443, %r444;
	xor.b32  	%r446, %r445, %r440;
	shf.l.wrap.b32 	%r447, %r420, %r420, 15;
	shf.l.wrap.b32 	%r448, %r420, %r420, 13;
	shr.u32 	%r449, %r420, 10;
	xor.b32  	%r450, %r448, %r449;
	xor.b32  	%r451, %r450, %r447;
	add.s32 	%r452, %r335, %r180;
	add.s32 	%r453, %r452, %r446;
	add.s32 	%r454, %r453, %r451;
	shf.l.wrap.b32 	%r455, %r212, %r212, 25;
	shf.l.wrap.b32 	%r456, %r212, %r212, 14;
	shr.u32 	%r457, %r212, 3;
	xor.b32  	%r458, %r456, %r457;
	xor.b32  	%r459, %r458, %r455;
	shf.l.wrap.b32 	%r460, %r437, %r437, 15;
	shf.l.wrap.b32 	%r461, %r437, %r437, 13;
	shr.u32 	%r462, %r437, 10;
	xor.b32  	%r463, %r461, %r462;
	xor.b32  	%r464, %r463, %r460;
	add.s32 	%r465, %r352, %r191;
	add.s32 	%r466, %r465, %r459;
	add.s32 	%r467, %r466, %r464;
	shf.l.wrap.b32 	%r468, %r233, %r233, 25;
	shf.l.wrap.b32 	%r469, %r233, %r233, 14;
	shr.u32 	%r470, %r233, 3;
	xor.b32  	%r471, %r469, %r470;
	xor.b32  	%r472, %r471, %r468;
	shf.l.wrap.b32 	%r473, %r454, %r454, 15;
	shf.l.wrap.b32 	%r474, %r454, %r454, 13;
	shr.u32 	%r475, %r454, 10;
	xor.b32  	%r476, %r474, %r475;
	xor.b32  	%r477, %r476, %r473;
	add.s32 	%r478, %r369, %r212;
	add.s32 	%r479, %r478, %r472;
	add.s32 	%r480, %r479, %r477;
	shf.l.wrap.b32 	%r481, %r250, %r250, 25;
	shf.l.wrap.b32 	%r482, %r250, %r250, 14;
	shr.u32 	%r483, %r250, 3;
	xor.b32  	%r484, %r482, %r483;
	xor.b32  	%r485, %r484, %r481;
	shf.l.wrap.b32 	%r486, %r467, %r467, 15;
	shf.l.wrap.b32 	%r487, %r467, %r467, 13;
	shr.u32 	%r488, %r467, 10;
	xor.b32  	%r489, %r487, %r488;
	xor.b32  	%r490, %r489, %r486;
	add.s32 	%r491, %r386, %r233;
	add.s32 	%r492, %r491, %r485;
	add.s32 	%r493, %r492, %r490;
	shf.l.wrap.b32 	%r494, %r267, %r267, 25;
	shf.l.wrap.b32 	%r495, %r267, %r267, 14;
	shr.u32 	%r496, %r267, 3;
	xor.b32  	%r497, %r495, %r496;
	xor.b32  	%r498, %r497, %r494;
	shf.l.wrap.b32 	%r499, %r480, %r480, 15;
	shf.l.wrap.b32 	%r500, %r480, %r480, 13;
	shr.u32 	%r501, %r480, 10;
	xor.b32  	%r502, %r500, %r501;
	xor.b32  	%r503, %r502, %r499;
	add.s32 	%r504, %r403, %r250;
	add.s32 	%r505, %r504, %r498;
	add.s32 	%r506, %r505, %r503;
	shf.l.wrap.b32 	%r507, %r284, %r284, 25;
	shf.l.wrap.b32 	%r508, %r284, %r284, 14;
	shr.u32 	%r509, %r284, 3;
	xor.b32  	%r510, %r508, %r509;
	xor.b32  	%r511, %r510, %r507;
	shf.l.wrap.b32 	%r512, %r493, %r493, 15;
	shf.l.wrap.b32 	%r513, %r493, %r493, 13;
	shr.u32 	%r514, %r493, 10;
	xor.b32  	%r515, %r513, %r514;
	xor.b32  	%r516, %r515, %r512;
	add.s32 	%r517, %r420, %r267;
	add.s32 	%r518, %r517, %r511;
	add.s32 	%r519, %r518, %r516;
	shf.l.wrap.b32 	%r520, %r301, %r301, 25;
	shf.l.wrap.b32 	%r521, %r301, %r301, 14;
	shr.u32 	%r522, %r301, 3;
	xor.b32  	%r523, %r521, %r522;
	xor.b32  	%r524, %r523, %r520;
	shf.l.wrap.b32 	%r525, %r506, %r506, 15;
	shf.l.wrap.b32 	%r526, %r506, %r506, 13;
	shr.u32 	%r527, %r506, 10;
	xor.b32  	%r528, %r526, %r527;
	xor.b32  	%r529, %r528, %r525;
	add.s32 	%r530, %r437, %r284;
	add.s32 	%r531, %r530, %r524;
	add.s32 	%r532, %r531, %r529;
	shf.l.wrap.b32 	%r533, %r318, %r318, 25;
	shf.l.wrap.b32 	%r534, %r318, %r318, 14;
	shr.u32 	%r535, %r318, 3;
	xor.b32  	%r536, %r534, %r535;
	xor.b32  	%r537, %r536, %r533;
	shf.l.wrap.b32 	%r538, %r519, %r519, 15;
	shf.l.wrap.b32 	%r539, %r519, %r519, 13;
	shr.u32 	%r540, %r519, 10;
	xor.b32  	%r541, %r539, %r540;
	xor.b32  	%r542, %r541, %r538;
	add.s32 	%r543, %r454, %r301;
	add.s32 	%r544, %r543, %r537;
	add.s32 	%r545, %r544, %r542;
	shf.l.wrap.b32 	%r546, %r335, %r335, 25;
	shf.l.wrap.b32 	%r547, %r335, %r335, 14;
	shr.u32 	%r548, %r335, 3;
	xor.b32  	%r549, %r547, %r548;
	xor.b32  	%r550, %r549, %r546;
	shf.l.wrap.b32 	%r551, %r532, %r532, 15;
	shf.l.wrap.b32 	%r552, %r532, %r532, 13;
	shr.u32 	%r553, %r532, 10;
	xor.b32  	%r554, %r552, %r553;
	xor.b32  	%r555, %r554, %r551;
	add.s32 	%r556, %r467, %r318;
	add.s32 	%r557, %r556, %r550;
	add.s32 	%r558, %r557, %r555;
	shf.l.wrap.b32 	%r559, %r352, %r352, 25;
	shf.l.wrap.b32 	%r560, %r352, %r352, 14;
	shr.u32 	%r561, %r352, 3;
	xor.b32  	%r562, %r560, %r561;
	xor.b32  	%r563, %r562, %r559;
	shf.l.wrap.b32 	%r564, %r545, %r545, 15;
	shf.l.wrap.b32 	%r565, %r545, %r545, 13;
	shr.u32 	%r566, %r545, 10;
	xor.b32  	%r567, %r565, %r566;
	xor.b32  	%r568, %r567, %r564;
	add.s32 	%r569, %r480, %r335;
	add.s32 	%r570, %r569, %r563;
	add.s32 	%r571, %r570, %r568;
	shf.l.wrap.b32 	%r572, %r369, %r369, 25;
	shf.l.wrap.b32 	%r573, %r369, %r369, 14;
	shr.u32 	%r574, %r369, 3;
	xor.b32  	%r575, %r573, %r574;
	xor.b32  	%r576, %r575, %r572;
	shf.l.wrap.b32 	%r577, %r558, %r558, 15;
	shf.l.wrap.b32 	%r578, %r558, %r558, 13;
	shr.u32 	%r579, %r558, 10;
	xor.b32  	%r580, %r578, %r579;
	xor.b32  	%r581, %r580, %r577;
	add.s32 	%r582, %r493, %r352;
	add.s32 	%r583, %r582, %r576;
	add.s32 	%r584, %r583, %r581;
	shf.l.wrap.b32 	%r585, %r386, %r386, 25;
	shf.l.wrap.b32 	%r586, %r386, %r386, 14;
	shr.u32 	%r587, %r386, 3;
	xor.b32  	%r588, %r586, %r587;
	xor.b32  	%r589, %r588, %r585;
	shf.l.wrap.b32 	%r590, %r571, %r571, 15;
	shf.l.wrap.b32 	%r591, %r571, %r571, 13;
	shr.u32 	%r592, %r571, 10;
	xor.b32  	%r593, %r591, %r592;
	xor.b32  	%r594, %r593, %r590;
	add.s32 	%r595, %r506, %r369;
	add.s32 	%r596, %r595, %r589;
	add.s32 	%r597, %r596, %r594;
	shf.l.wrap.b32 	%r598, %r403, %r403, 25;
	shf.l.wrap.b32 	%r599, %r403, %r403, 14;
	shr.u32 	%r600, %r403, 3;
	xor.b32  	%r601, %r599, %r600;
	xor.b32  	%r602, %r601, %r598;
	shf.l.wrap.b32 	%r603, %r584, %r584, 15;
	shf.l.wrap.b32 	%r604, %r584, %r584, 13;
	shr.u32 	%r605, %r584, 10;
	xor.b32  	%r606, %r604, %r605;
	xor.b32  	%r607, %r606, %r603;
	add.s32 	%r608, %r519, %r386;
	add.s32 	%r609, %r608, %r602;
	add.s32 	%r610, %r609, %r607;
	shf.l.wrap.b32 	%r611, %r420, %r420, 25;
	shf.l.wrap.b32 	%r612, %r420, %r420, 14;
	shr.u32 	%r613, %r420, 3;
	xor.b32  	%r614, %r612, %r613;
	xor.b32  	%r615, %r614, %r611;
	shf.l.wrap.b32 	%r616, %r597, %r597, 15;
	shf.l.wrap.b32 	%r617, %r597, %r597, 13;
	shr.u32 	%r618, %r597, 10;
	xor.b32  	%r619, %r617, %r618;
	xor.b32  	%r620, %r619, %r616;
	add.s32 	%r621, %r532, %r403;
	add.s32 	%r622, %r621, %r615;
	add.s32 	%r623, %r622, %r620;
	shf.l.wrap.b32 	%r624, %r437, %r437, 25;
	shf.l.wrap.b32 	%r625, %r437, %r437, 14;
	shr.u32 	%r626, %r437, 3;
	xor.b32  	%r627, %r625, %r626;
	xor.b32  	%r628, %r627, %r624;
	shf.l.wrap.b32 	%r629, %r610, %r610, 15;
	shf.l.wrap.b32 	%r630, %r610, %r610, 13;
	shr.u32 	%r631, %r610, 10;
	xor.b32  	%r632, %r630, %r631;
	xor.b32  	%r633, %r632, %r629;
	add.s32 	%r634, %r545, %r420;
	add.s32 	%r635, %r634, %r628;
	add.s32 	%r636, %r635, %r633;
	shf.l.wrap.b32 	%r637, %r454, %r454, 25;
	shf.l.wrap.b32 	%r638, %r454, %r454, 14;
	shr.u32 	%r639, %r454, 3;
	xor.b32  	%r640, %r638, %r639;
	xor.b32  	%r641, %r640, %r637;
	shf.l.wrap.b32 	%r642, %r623, %r623, 15;
	shf.l.wrap.b32 	%r643, %r623, %r623, 13;
	shr.u32 	%r644, %r623, 10;
	xor.b32  	%r645, %r643, %r644;
	xor.b32  	%r646, %r645, %r642;
	add.s32 	%r647, %r558, %r437;
	add.s32 	%r648, %r647, %r641;
	add.s32 	%r649, %r648, %r646;
	shf.l.wrap.b32 	%r650, %r467, %r467, 25;
	shf.l.wrap.b32 	%r651, %r467, %r467, 14;
	shr.u32 	%r652, %r467, 3;
	xor.b32  	%r653, %r651, %r652;
	xor.b32  	%r654, %r653, %r650;
	shf.l.wrap.b32 	%r655, %r636, %r636, 15;
	shf.l.wrap.b32 	%r656, %r636, %r636, 13;
	shr.u32 	%r657, %r636, 10;
	xor.b32  	%r658, %r656, %r657;
	xor.b32  	%r659, %r658, %r655;
	add.s32 	%r660, %r571, %r454;
	add.s32 	%r661, %r660, %r654;
	add.s32 	%r662, %r661, %r659;
	shf.l.wrap.b32 	%r663, %r480, %r480, 25;
	shf.l.wrap.b32 	%r664, %r480, %r480, 14;
	shr.u32 	%r665, %r480, 3;
	xor.b32  	%r666, %r664, %r665;
	xor.b32  	%r667, %r666, %r663;
	shf.l.wrap.b32 	%r668, %r649, %r649, 15;
	shf.l.wrap.b32 	%r669, %r649, %r649, 13;
	shr.u32 	%r670, %r649, 10;
	xor.b32  	%r671, %r669, %r670;
	xor.b32  	%r672, %r671, %r668;
	add.s32 	%r673, %r584, %r467;
	add.s32 	%r674, %r673, %r667;
	add.s32 	%r675, %r674, %r672;
	shf.l.wrap.b32 	%r676, %r493, %r493, 25;
	shf.l.wrap.b32 	%r677, %r493, %r493, 14;
	shr.u32 	%r678, %r493, 3;
	xor.b32  	%r679, %r677, %r678;
	xor.b32  	%r680, %r679, %r676;
	shf.l.wrap.b32 	%r681, %r662, %r662, 15;
	shf.l.wrap.b32 	%r682, %r662, %r662, 13;
	shr.u32 	%r683, %r662, 10;
	xor.b32  	%r684, %r682, %r683;
	xor.b32  	%r685, %r684, %r681;
	add.s32 	%r686, %r597, %r480;
	add.s32 	%r687, %r686, %r680;
	add.s32 	%r688, %r687, %r685;
	shf.l.wrap.b32 	%r689, %r506, %r506, 25;
	shf.l.wrap.b32 	%r690, %r506, %r506, 14;
	shr.u32 	%r691, %r506, 3;
	xor.b32  	%r692, %r690, %r691;
	xor.b32  	%r693, %r692, %r689;
	shf.l.wrap.b32 	%r694, %r675, %r675, 15;
	shf.l.wrap.b32 	%r695, %r675, %r675, 13;
	shr.u32 	%r696, %r675, 10;
	xor.b32  	%r697, %r695, %r696;
	xor.b32  	%r698, %r697, %r694;
	add.s32 	%r699, %r610, %r493;
	add.s32 	%r700, %r699, %r693;
	add.s32 	%r701, %r700, %r698;
	shf.l.wrap.b32 	%r702, %r519, %r519, 25;
	shf.l.wrap.b32 	%r703, %r519, %r519, 14;
	shr.u32 	%r704, %r519, 3;
	xor.b32  	%r705, %r703, %r704;
	xor.b32  	%r706, %r705, %r702;
	shf.l.wrap.b32 	%r707, %r688, %r688, 15;
	shf.l.wrap.b32 	%r708, %r688, %r688, 13;
	shr.u32 	%r709, %r688, 10;
	xor.b32  	%r710, %r708, %r709;
	xor.b32  	%r711, %r710, %r707;
	add.s32 	%r712, %r623, %r506;
	add.s32 	%r713, %r712, %r706;
	add.s32 	%r714, %r713, %r711;
	shf.l.wrap.b32 	%r715, %r532, %r532, 25;
	shf.l.wrap.b32 	%r716, %r532, %r532, 14;
	shr.u32 	%r717, %r532, 3;
	xor.b32  	%r718, %r716, %r717;
	xor.b32  	%r719, %r718, %r715;
	shf.l.wrap.b32 	%r720, %r701, %r701, 15;
	shf.l.wrap.b32 	%r721, %r701, %r701, 13;
	shr.u32 	%r722, %r701, 10;
	xor.b32  	%r723, %r721, %r722;
	xor.b32  	%r724, %r723, %r720;
	add.s32 	%r725, %r636, %r519;
	add.s32 	%r726, %r725, %r719;
	add.s32 	%r727, %r726, %r724;
	shf.l.wrap.b32 	%r728, %r545, %r545, 25;
	shf.l.wrap.b32 	%r729, %r545, %r545, 14;
	shr.u32 	%r730, %r545, 3;
	xor.b32  	%r731, %r729, %r730;
	xor.b32  	%r732, %r731, %r728;
	shf.l.wrap.b32 	%r733, %r714, %r714, 15;
	shf.l.wrap.b32 	%r734, %r714, %r714, 13;
	shr.u32 	%r735, %r714, 10;
	xor.b32  	%r736, %r734, %r735;
	xor.b32  	%r737, %r736, %r733;
	add.s32 	%r738, %r649, %r532;
	add.s32 	%r739, %r738, %r732;
	add.s32 	%r740, %r739, %r737;
	shf.l.wrap.b32 	%r741, %r558, %r558, 25;
	shf.l.wrap.b32 	%r742, %r558, %r558, 14;
	shr.u32 	%r743, %r558, 3;
	xor.b32  	%r744, %r742, %r743;
	xor.b32  	%r745, %r744, %r741;
	shf.l.wrap.b32 	%r746, %r727, %r727, 15;
	shf.l.wrap.b32 	%r747, %r727, %r727, 13;
	shr.u32 	%r748, %r727, 10;
	xor.b32  	%r749, %r747, %r748;
	xor.b32  	%r750, %r749, %r746;
	add.s32 	%r751, %r662, %r545;
	add.s32 	%r752, %r751, %r745;
	add.s32 	%r753, %r752, %r750;
	shf.l.wrap.b32 	%r754, %r571, %r571, 25;
	shf.l.wrap.b32 	%r755, %r571, %r571, 14;
	shr.u32 	%r756, %r571, 3;
	xor.b32  	%r757, %r755, %r756;
	xor.b32  	%r758, %r757, %r754;
	shf.l.wrap.b32 	%r759, %r740, %r740, 15;
	shf.l.wrap.b32 	%r760, %r740, %r740, 13;
	shr.u32 	%r761, %r740, 10;
	xor.b32  	%r762, %r760, %r761;
	xor.b32  	%r763, %r762, %r759;
	add.s32 	%r764, %r675, %r558;
	add.s32 	%r765, %r764, %r758;
	add.s32 	%r766, %r765, %r763;
	shf.l.wrap.b32 	%r767, %r584, %r584, 25;
	shf.l.wrap.b32 	%r768, %r584, %r584, 14;
	shr.u32 	%r769, %r584, 3;
	xor.b32  	%r770, %r768, %r769;
	xor.b32  	%r771, %r770, %r767;
	shf.l.wrap.b32 	%r772, %r753, %r753, 15;
	shf.l.wrap.b32 	%r773, %r753, %r753, 13;
	shr.u32 	%r774, %r753, 10;
	xor.b32  	%r775, %r773, %r774;
	xor.b32  	%r776, %r775, %r772;
	add.s32 	%r777, %r688, %r571;
	add.s32 	%r778, %r777, %r771;
	add.s32 	%r779, %r778, %r776;
	shf.l.wrap.b32 	%r780, %r597, %r597, 25;
	shf.l.wrap.b32 	%r781, %r597, %r597, 14;
	shr.u32 	%r782, %r597, 3;
	xor.b32  	%r783, %r781, %r782;
	xor.b32  	%r784, %r783, %r780;
	shf.l.wrap.b32 	%r785, %r766, %r766, 15;
	shf.l.wrap.b32 	%r786, %r766, %r766, 13;
	shr.u32 	%r787, %r766, 10;
	xor.b32  	%r788, %r786, %r787;
	xor.b32  	%r789, %r788, %r785;
	add.s32 	%r790, %r701, %r584;
	add.s32 	%r791, %r790, %r784;
	add.s32 	%r792, %r791, %r789;
	shf.l.wrap.b32 	%r793, %r610, %r610, 25;
	shf.l.wrap.b32 	%r794, %r610, %r610, 14;
	shr.u32 	%r795, %r610, 3;
	xor.b32  	%r796, %r794, %r795;
	xor.b32  	%r797, %r796, %r793;
	shf.l.wrap.b32 	%r798, %r779, %r779, 15;
	shf.l.wrap.b32 	%r799, %r779, %r779, 13;
	shr.u32 	%r800, %r779, 10;
	xor.b32  	%r801, %r799, %r800;
	xor.b32  	%r802, %r801, %r798;
	add.s32 	%r803, %r714, %r597;
	add.s32 	%r804, %r803, %r797;
	add.s32 	%r805, %r804, %r802;
	shf.l.wrap.b32 	%r806, %r623, %r623, 25;
	shf.l.wrap.b32 	%r807, %r623, %r623, 14;
	shr.u32 	%r808, %r623, 3;
	xor.b32  	%r809, %r807, %r808;
	xor.b32  	%r810, %r809, %r806;
	shf.l.wrap.b32 	%r811, %r792, %r792, 15;
	shf.l.wrap.b32 	%r812, %r792, %r792, 13;
	shr.u32 	%r813, %r792, 10;
	xor.b32  	%r814, %r812, %r813;
	xor.b32  	%r815, %r814, %r811;
	add.s32 	%r816, %r727, %r610;
	add.s32 	%r817, %r816, %r810;
	add.s32 	%r818, %r817, %r815;
	shf.l.wrap.b32 	%r819, %r636, %r636, 25;
	shf.l.wrap.b32 	%r820, %r636, %r636, 14;
	shr.u32 	%r821, %r636, 3;
	xor.b32  	%r822, %r820, %r821;
	xor.b32  	%r823, %r822, %r819;
	shf.l.wrap.b32 	%r824, %r805, %r805, 15;
	shf.l.wrap.b32 	%r825, %r805, %r805, 13;
	shr.u32 	%r826, %r805, 10;
	xor.b32  	%r827, %r825, %r826;
	xor.b32  	%r828, %r827, %r824;
	add.s32 	%r829, %r740, %r623;
	add.s32 	%r830, %r829, %r823;
	add.s32 	%r831, %r830, %r828;
	shf.l.wrap.b32 	%r832, %r649, %r649, 25;
	shf.l.wrap.b32 	%r833, %r649, %r649, 14;
	shr.u32 	%r834, %r649, 3;
	xor.b32  	%r835, %r833, %r834;
	xor.b32  	%r836, %r835, %r832;
	shf.l.wrap.b32 	%r837, %r818, %r818, 15;
	shf.l.wrap.b32 	%r838, %r818, %r818, 13;
	shr.u32 	%r839, %r818, 10;
	xor.b32  	%r840, %r838, %r839;
	xor.b32  	%r841, %r840, %r837;
	add.s32 	%r842, %r753, %r636;
	add.s32 	%r843, %r842, %r836;
	add.s32 	%r844, %r843, %r841;
	shf.l.wrap.b32 	%r845, %r662, %r662, 25;
	shf.l.wrap.b32 	%r846, %r662, %r662, 14;
	shr.u32 	%r847, %r662, 3;
	xor.b32  	%r848, %r846, %r847;
	xor.b32  	%r849, %r848, %r845;
	shf.l.wrap.b32 	%r850, %r831, %r831, 15;
	shf.l.wrap.b32 	%r851, %r831, %r831, 13;
	shr.u32 	%r852, %r831, 10;
	xor.b32  	%r853, %r851, %r852;
	xor.b32  	%r854, %r853, %r850;
	add.s32 	%r855, %r766, %r649;
	add.s32 	%r856, %r855, %r849;
	add.s32 	%r857, %r856, %r854;
	shf.l.wrap.b32 	%r858, %r675, %r675, 25;
	shf.l.wrap.b32 	%r859, %r675, %r675, 14;
	shr.u32 	%r860, %r675, 3;
	xor.b32  	%r861, %r859, %r860;
	xor.b32  	%r862, %r861, %r858;
	shf.l.wrap.b32 	%r863, %r844, %r844, 15;
	shf.l.wrap.b32 	%r864, %r844, %r844, 13;
	shr.u32 	%r865, %r844, 10;
	xor.b32  	%r866, %r864, %r865;
	xor.b32  	%r867, %r866, %r863;
	add.s32 	%r868, %r779, %r662;
	add.s32 	%r869, %r868, %r862;
	add.s32 	%r870, %r869, %r867;
	shf.l.wrap.b32 	%r871, %r688, %r688, 25;
	shf.l.wrap.b32 	%r872, %r688, %r688, 14;
	shr.u32 	%r873, %r688, 3;
	xor.b32  	%r874, %r872, %r873;
	xor.b32  	%r875, %r874, %r871;
	shf.l.wrap.b32 	%r876, %r857, %r857, 15;
	shf.l.wrap.b32 	%r877, %r857, %r857, 13;
	shr.u32 	%r878, %r857, 10;
	xor.b32  	%r879, %r877, %r878;
	xor.b32  	%r880, %r879, %r876;
	add.s32 	%r881, %r792, %r675;
	add.s32 	%r882, %r881, %r875;
	add.s32 	%r883, %r882, %r880;
	ld.const.u32 	%r884, [K256];
	add.s32 	%r885, %r884, %r38;
	add.s32 	%r886, %r885, 1446884106;
	add.s32 	%r887, %r885, -1182902091;
	shf.l.wrap.b32 	%r888, %r886, %r886, 26;
	shf.l.wrap.b32 	%r889, %r886, %r886, 21;
	xor.b32  	%r890, %r888, %r889;
	shf.l.wrap.b32 	%r891, %r886, %r886, 7;
	xor.b32  	%r892, %r890, %r891;
	and.b32  	%r893, %r886, 1359893119;
	mov.u32 	%r894, -1446884107;
	sub.s32 	%r895, %r894, %r885;
	and.b32  	%r896, %r895, -1694144372;
	or.b32  	%r897, %r893, %r896;
	add.s32 	%r898, %r897, %r892;
	ld.const.u32 	%r899, [K256+4];
	add.s32 	%r900, %r898, %r899;
	add.s32 	%r901, %r900, %r47;
	shf.l.wrap.b32 	%r902, %r887, %r887, 30;
	shf.l.wrap.b32 	%r903, %r887, %r887, 19;
	xor.b32  	%r904, %r902, %r903;
	shf.l.wrap.b32 	%r905, %r887, %r887, 10;
	xor.b32  	%r906, %r904, %r905;
	and.b32  	%r907, %r887, -781301534;
	or.b32  	%r908, %r907, 704751109;
	add.s32 	%r909, %r906, %r908;
	add.s32 	%r910, %r909, %r901;
	add.s32 	%r911, %r901, 1542638877;
	add.s32 	%r912, %r910, 528734635;
	shf.l.wrap.b32 	%r913, %r911, %r911, 26;
	shf.l.wrap.b32 	%r914, %r911, %r911, 21;
	xor.b32  	%r915, %r913, %r914;
	shf.l.wrap.b32 	%r916, %r911, %r911, 7;
	xor.b32  	%r917, %r915, %r916;
	and.b32  	%r918, %r911, %r886;
	mov.u32 	%r919, 604844770;
	sub.s32 	%r920, %r919, %r901;
	and.b32  	%r921, %r920, 1359893119;
	or.b32  	%r922, %r918, %r921;
	add.s32 	%r923, %r922, %r917;
	ld.const.u32 	%r924, [K256+8];
	add.s32 	%r925, %r923, %r924;
	add.s32 	%r926, %r925, %r56;
	shf.l.wrap.b32 	%r927, %r912, %r912, 30;
	shf.l.wrap.b32 	%r928, %r912, %r912, 19;
	xor.b32  	%r929, %r927, %r928;
	shf.l.wrap.b32 	%r930, %r912, %r912, 10;
	xor.b32  	%r931, %r929, %r930;
	xor.b32  	%r932, %r887, 1779033703;
	and.b32  	%r933, %r912, %r932;
	and.b32  	%r934, %r887, 1779033703;
	xor.b32  	%r935, %r933, %r934;
	add.s32 	%r936, %r931, %r935;
	add.s32 	%r937, %r936, %r926;
	add.s32 	%r938, %r926, 1449989905;
	add.s32 	%r939, %r937, -1694144372;
	shf.l.wrap.b32 	%r940, %r938, %r938, 26;
	shf.l.wrap.b32 	%r941, %r938, %r938, 21;
	xor.b32  	%r942, %r940, %r941;
	shf.l.wrap.b32 	%r943, %r938, %r938, 7;
	xor.b32  	%r944, %r942, %r943;
	and.b32  	%r945, %r938, %r911;
	mov.u32 	%r946, -1449989906;
	sub.s32 	%r947, %r946, %r926;
	and.b32  	%r948, %r886, %r947;
	or.b32  	%r949, %r945, %r948;
	add.s32 	%r950, %r949, %r944;
	ld.const.u32 	%r951, [K256+12];
	add.s32 	%r952, %r950, %r951;
	add.s32 	%r953, %r952, %r65;
	shf.l.wrap.b32 	%r954, %r939, %r939, 30;
	shf.l.wrap.b32 	%r955, %r939, %r939, 19;
	xor.b32  	%r956, %r954, %r955;
	shf.l.wrap.b32 	%r957, %r939, %r939, 10;
	xor.b32  	%r958, %r956, %r957;
	xor.b32  	%r959, %r912, %r887;
	and.b32  	%r960, %r939, %r959;
	and.b32  	%r961, %r912, %r887;
	xor.b32  	%r962, %r960, %r961;
	add.s32 	%r963, %r958, %r962;
	add.s32 	%r964, %r963, %r953;
	add.s32 	%r965, %r953, -1156040474;
	add.s32 	%r966, %r964, 1359893119;
	shf.l.wrap.b32 	%r967, %r965, %r965, 26;
	shf.l.wrap.b32 	%r968, %r965, %r965, 21;
	xor.b32  	%r969, %r967, %r968;
	shf.l.wrap.b32 	%r970, %r965, %r965, 7;
	xor.b32  	%r971, %r969, %r970;
	and.b32  	%r972, %r965, %r938;
	mov.u32 	%r973, 1156040473;
	sub.s32 	%r974, %r973, %r953;
	and.b32  	%r975, %r911, %r974;
	or.b32  	%r976, %r972, %r975;
	add.s32 	%r977, %r976, %r886;
	add.s32 	%r978, %r977, %r971;
	ld.const.u32 	%r979, [K256+16];
	add.s32 	%r980, %r978, %r979;
	add.s32 	%r981, %r980, %r82;
	shf.l.wrap.b32 	%r982, %r966, %r966, 30;
	shf.l.wrap.b32 	%r983, %r966, %r966, 19;
	xor.b32  	%r984, %r982, %r983;
	shf.l.wrap.b32 	%r985, %r966, %r966, 10;
	xor.b32  	%r986, %r984, %r985;
	xor.b32  	%r987, %r939, %r912;
	and.b32  	%r988, %r966, %r987;
	and.b32  	%r989, %r939, %r912;
	xor.b32  	%r990, %r988, %r989;
	add.s32 	%r991, %r986, %r990;
	add.s32 	%r992, %r981, %r887;
	add.s32 	%r993, %r991, %r981;
	shf.l.wrap.b32 	%r994, %r992, %r992, 26;
	shf.l.wrap.b32 	%r995, %r992, %r992, 21;
	xor.b32  	%r996, %r994, %r995;
	shf.l.wrap.b32 	%r997, %r992, %r992, 7;
	xor.b32  	%r998, %r996, %r997;
	and.b32  	%r999, %r992, %r965;
	not.b32 	%r1000, %r992;
	and.b32  	%r1001, %r938, %r1000;
	or.b32  	%r1002, %r999, %r1001;
	add.s32 	%r1003, %r1002, %r911;
	add.s32 	%r1004, %r1003, %r998;
	ld.const.u32 	%r1005, [K256+20];
	add.s32 	%r1006, %r1004, %r1005;
	add.s32 	%r1007, %r1006, %r91;
	shf.l.wrap.b32 	%r1008, %r993, %r993, 30;
	shf.l.wrap.b32 	%r1009, %r993, %r993, 19;
	xor.b32  	%r1010, %r1008, %r1009;
	shf.l.wrap.b32 	%r1011, %r993, %r993, 10;
	xor.b32  	%r1012, %r1010, %r1011;
	xor.b32  	%r1013, %r966, %r939;
	and.b32  	%r1014, %r993, %r1013;
	and.b32  	%r1015, %r966, %r939;
	xor.b32  	%r1016, %r1014, %r1015;
	add.s32 	%r1017, %r1012, %r1016;
	add.s32 	%r1018, %r1007, %r912;
	add.s32 	%r1019, %r1017, %r1007;
	shf.l.wrap.b32 	%r1020, %r1018, %r1018, 26;
	shf.l.wrap.b32 	%r1021, %r1018, %r1018, 21;
	xor.b32  	%r1022, %r1020, %r1021;
	shf.l.wrap.b32 	%r1023, %r1018, %r1018, 7;
	xor.b32  	%r1024, %r1022, %r1023;
	and.b32  	%r1025, %r1018, %r992;
	not.b32 	%r1026, %r1018;
	and.b32  	%r1027, %r965, %r1026;
	or.b32  	%r1028, %r1025, %r1027;
	add.s32 	%r1029, %r1028, %r938;
	add.s32 	%r1030, %r1029, %r1024;
	ld.const.u32 	%r1031, [K256+24];
	add.s32 	%r1032, %r1030, %r1031;
	add.s32 	%r1033, %r1032, %r100;
	shf.l.wrap.b32 	%r1034, %r1019, %r1019, 30;
	shf.l.wrap.b32 	%r1035, %r1019, %r1019, 19;
	xor.b32  	%r1036, %r1034, %r1035;
	shf.l.wrap.b32 	%r1037, %r1019, %r1019, 10;
	xor.b32  	%r1038, %r1036, %r1037;
	xor.b32  	%r1039, %r993, %r966;
	and.b32  	%r1040, %r1019, %r1039;
	and.b32  	%r1041, %r993, %r966;
	xor.b32  	%r1042, %r1040, %r1041;
	add.s32 	%r1043, %r1038, %r1042;
	add.s32 	%r1044, %r1033, %r939;
	add.s32 	%r1045, %r1043, %r1033;
	shf.l.wrap.b32 	%r1046, %r1044, %r1044, 26;
	shf.l.wrap.b32 	%r1047, %r1044, %r1044, 21;
	xor.b32  	%r1048, %r1046, %r1047;
	shf.l.wrap.b32 	%r1049, %r1044, %r1044, 7;
	xor.b32  	%r1050, %r1048, %r1049;
	and.b32  	%r1051, %r1044, %r1018;
	not.b32 	%r1052, %r1044;
	and.b32  	%r1053, %r992, %r1052;
	or.b32  	%r1054, %r1051, %r1053;
	add.s32 	%r1055, %r1054, %r965;
	add.s32 	%r1056, %r1055, %r1050;
	ld.const.u32 	%r1057, [K256+28];
	add.s32 	%r1058, %r1056, %r1057;
	add.s32 	%r1059, %r1058, %r109;
	shf.l.wrap.b32 	%r1060, %r1045, %r1045, 30;
	shf.l.wrap.b32 	%r1061, %r1045, %r1045, 19;
	xor.b32  	%r1062, %r1060, %r1061;
	shf.l.wrap.b32 	%r1063, %r1045, %r1045, 10;
	xor.b32  	%r1064, %r1062, %r1063;
	xor.b32  	%r1065, %r1019, %r993;
	and.b32  	%r1066, %r1045, %r1065;
	and.b32  	%r1067, %r1019, %r993;
	xor.b32  	%r1068, %r1066, %r1067;
	add.s32 	%r1069, %r1064, %r1068;
	add.s32 	%r1070, %r1059, %r966;
	add.s32 	%r1071, %r1069, %r1059;
	shf.l.wrap.b32 	%r1072, %r1070, %r1070, 26;
	shf.l.wrap.b32 	%r1073, %r1070, %r1070, 21;
	xor.b32  	%r1074, %r1072, %r1073;
	shf.l.wrap.b32 	%r1075, %r1070, %r1070, 7;
	xor.b32  	%r1076, %r1074, %r1075;
	and.b32  	%r1077, %r1070, %r1044;
	not.b32 	%r1078, %r1070;
	and.b32  	%r1079, %r1018, %r1078;
	or.b32  	%r1080, %r1077, %r1079;
	add.s32 	%r1081, %r1080, %r992;
	add.s32 	%r1082, %r1081, %r1076;
	ld.const.u32 	%r1083, [K256+32];
	add.s32 	%r1084, %r1082, %r1083;
	add.s32 	%r1085, %r1084, %r126;
	shf.l.wrap.b32 	%r1086, %r1071, %r1071, 30;
	shf.l.wrap.b32 	%r1087, %r1071, %r1071, 19;
	xor.b32  	%r1088, %r1086, %r1087;
	shf.l.wrap.b32 	%r1089, %r1071, %r1071, 10;
	xor.b32  	%r1090, %r1088, %r1089;
	xor.b32  	%r1091, %r1045, %r1019;
	and.b32  	%r1092, %r1071, %r1091;
	and.b32  	%r1093, %r1045, %r1019;
	xor.b32  	%r1094, %r1092, %r1093;
	add.s32 	%r1095, %r1090, %r1094;
	add.s32 	%r1096, %r1085, %r993;
	add.s32 	%r1097, %r1095, %r1085;
	shf.l.wrap.b32 	%r1098, %r1096, %r1096, 26;
	shf.l.wrap.b32 	%r1099, %r1096, %r1096, 21;
	xor.b32  	%r1100, %r1098, %r1099;
	shf.l.wrap.b32 	%r1101, %r1096, %r1096, 7;
	xor.b32  	%r1102, %r1100, %r1101;
	and.b32  	%r1103, %r1096, %r1070;
	not.b32 	%r1104, %r1096;
	and.b32  	%r1105, %r1044, %r1104;
	or.b32  	%r1106, %r1103, %r1105;
	add.s32 	%r1107, %r1106, %r1018;
	add.s32 	%r1108, %r1107, %r1102;
	ld.const.u32 	%r1109, [K256+36];
	add.s32 	%r1110, %r1108, %r1109;
	add.s32 	%r1111, %r1110, %r135;
	shf.l.wrap.b32 	%r1112, %r1097, %r1097, 30;
	shf.l.wrap.b32 	%r1113, %r1097, %r1097, 19;
	xor.b32  	%r1114, %r1112, %r1113;
	shf.l.wrap.b32 	%r1115, %r1097, %r1097, 10;
	xor.b32  	%r1116, %r1114, %r1115;
	xor.b32  	%r1117, %r1071, %r1045;
	and.b32  	%r1118, %r1097, %r1117;
	and.b32  	%r1119, %r1071, %r1045;
	xor.b32  	%r1120, %r1118, %r1119;
	add.s32 	%r1121, %r1116, %r1120;
	add.s32 	%r1122, %r1111, %r1019;
	add.s32 	%r1123, %r1121, %r1111;
	shf.l.wrap.b32 	%r1124, %r1122, %r1122, 26;
	shf.l.wrap.b32 	%r1125, %r1122, %r1122, 21;
	xor.b32  	%r1126, %r1124, %r1125;
	shf.l.wrap.b32 	%r1127, %r1122, %r1122, 7;
	xor.b32  	%r1128, %r1126, %r1127;
	and.b32  	%r1129, %r1122, %r1096;
	not.b32 	%r1130, %r1122;
	and.b32  	%r1131, %r1070, %r1130;
	or.b32  	%r1132, %r1129, %r1131;
	add.s32 	%r1133, %r1132, %r1044;
	add.s32 	%r1134, %r1133, %r1128;
	ld.const.u32 	%r1135, [K256+40];
	add.s32 	%r1136, %r1134, %r1135;
	add.s32 	%r1137, %r1136, %r144;
	shf.l.wrap.b32 	%r1138, %r1123, %r1123, 30;
	shf.l.wrap.b32 	%r1139, %r1123, %r1123, 19;
	xor.b32  	%r1140, %r1138, %r1139;
	shf.l.wrap.b32 	%r1141, %r1123, %r1123, 10;
	xor.b32  	%r1142, %r1140, %r1141;
	xor.b32  	%r1143, %r1097, %r1071;
	and.b32  	%r1144, %r1123, %r1143;
	and.b32  	%r1145, %r1097, %r1071;
	xor.b32  	%r1146, %r1144, %r1145;
	add.s32 	%r1147, %r1142, %r1146;
	add.s32 	%r1148, %r1137, %r1045;
	add.s32 	%r1149, %r1147, %r1137;
	shf.l.wrap.b32 	%r1150, %r1148, %r1148, 26;
	shf.l.wrap.b32 	%r1151, %r1148, %r1148, 21;
	xor.b32  	%r1152, %r1150, %r1151;
	shf.l.wrap.b32 	%r1153, %r1148, %r1148, 7;
	xor.b32  	%r1154, %r1152, %r1153;
	and.b32  	%r1155, %r1148, %r1122;
	not.b32 	%r1156, %r1148;
	and.b32  	%r1157, %r1096, %r1156;
	or.b32  	%r1158, %r1155, %r1157;
	add.s32 	%r1159, %r1158, %r1070;
	add.s32 	%r1160, %r1159, %r1154;
	ld.const.u32 	%r1161, [K256+44];
	add.s32 	%r1162, %r1160, %r1161;
	add.s32 	%r1163, %r1162, %r153;
	shf.l.wrap.b32 	%r1164, %r1149, %r1149, 30;
	shf.l.wrap.b32 	%r1165, %r1149, %r1149, 19;
	xor.b32  	%r1166, %r1164, %r1165;
	shf.l.wrap.b32 	%r1167, %r1149, %r1149, 10;
	xor.b32  	%r1168, %r1166, %r1167;
	xor.b32  	%r1169, %r1123, %r1097;
	and.b32  	%r1170, %r1149, %r1169;
	and.b32  	%r1171, %r1123, %r1097;
	xor.b32  	%r1172, %r1170, %r1171;
	add.s32 	%r1173, %r1168, %r1172;
	add.s32 	%r1174, %r1163, %r1071;
	add.s32 	%r1175, %r1173, %r1163;
	shf.l.wrap.b32 	%r1176, %r1174, %r1174, 26;
	shf.l.wrap.b32 	%r1177, %r1174, %r1174, 21;
	xor.b32  	%r1178, %r1176, %r1177;
	shf.l.wrap.b32 	%r1179, %r1174, %r1174, 7;
	xor.b32  	%r1180, %r1178, %r1179;
	and.b32  	%r1181, %r1174, %r1148;
	not.b32 	%r1182, %r1174;
	and.b32  	%r1183, %r1122, %r1182;
	or.b32  	%r1184, %r1181, %r1183;
	add.s32 	%r1185, %r1184, %r1096;
	add.s32 	%r1186, %r1185, %r1180;
	ld.const.u32 	%r1187, [K256+48];
	add.s32 	%r1188, %r1186, %r1187;
	add.s32 	%r1189, %r1188, %r162;
	shf.l.wrap.b32 	%r1190, %r1175, %r1175, 30;
	shf.l.wrap.b32 	%r1191, %r1175, %r1175, 19;
	xor.b32  	%r1192, %r1190, %r1191;
	shf.l.wrap.b32 	%r1193, %r1175, %r1175, 10;
	xor.b32  	%r1194, %r1192, %r1193;
	xor.b32  	%r1195, %r1149, %r1123;
	and.b32  	%r1196, %r1175, %r1195;
	and.b32  	%r1197, %r1149, %r1123;
	xor.b32  	%r1198, %r1196, %r1197;
	add.s32 	%r1199, %r1194, %r1198;
	add.s32 	%r1200, %r1189, %r1097;
	add.s32 	%r1201, %r1199, %r1189;
	shf.l.wrap.b32 	%r1202, %r1200, %r1200, 26;
	shf.l.wrap.b32 	%r1203, %r1200, %r1200, 21;
	xor.b32  	%r1204, %r1202, %r1203;
	shf.l.wrap.b32 	%r1205, %r1200, %r1200, 7;
	xor.b32  	%r1206, %r1204, %r1205;
	and.b32  	%r1207, %r1200, %r1174;
	not.b32 	%r1208, %r1200;
	and.b32  	%r1209, %r1148, %r1208;
	or.b32  	%r1210, %r1207, %r1209;
	add.s32 	%r1211, %r1210, %r1122;
	add.s32 	%r1212, %r1211, %r1206;
	ld.const.u32 	%r1213, [K256+52];
	add.s32 	%r1214, %r1212, %r1213;
	add.s32 	%r1215, %r1214, %r171;
	shf.l.wrap.b32 	%r1216, %r1201, %r1201, 30;
	shf.l.wrap.b32 	%r1217, %r1201, %r1201, 19;
	xor.b32  	%r1218, %r1216, %r1217;
	shf.l.wrap.b32 	%r1219, %r1201, %r1201, 10;
	xor.b32  	%r1220, %r1218, %r1219;
	xor.b32  	%r1221, %r1175, %r1149;
	and.b32  	%r1222, %r1201, %r1221;
	and.b32  	%r1223, %r1175, %r1149;
	xor.b32  	%r1224, %r1222, %r1223;
	add.s32 	%r1225, %r1220, %r1224;
	add.s32 	%r1226, %r1215, %r1123;
	add.s32 	%r1227, %r1225, %r1215;
	shf.l.wrap.b32 	%r1228, %r1226, %r1226, 26;
	shf.l.wrap.b32 	%r1229, %r1226, %r1226, 21;
	xor.b32  	%r1230, %r1228, %r1229;
	shf.l.wrap.b32 	%r1231, %r1226, %r1226, 7;
	xor.b32  	%r1232, %r1230, %r1231;
	and.b32  	%r1233, %r1226, %r1200;
	not.b32 	%r1234, %r1226;
	and.b32  	%r1235, %r1174, %r1234;
	or.b32  	%r1236, %r1233, %r1235;
	add.s32 	%r1237, %r1236, %r1148;
	add.s32 	%r1238, %r1237, %r1232;
	ld.const.u32 	%r1239, [K256+56];
	add.s32 	%r1240, %r1238, %r1239;
	add.s32 	%r1241, %r1240, %r180;
	shf.l.wrap.b32 	%r1242, %r1227, %r1227, 30;
	shf.l.wrap.b32 	%r1243, %r1227, %r1227, 19;
	xor.b32  	%r1244, %r1242, %r1243;
	shf.l.wrap.b32 	%r1245, %r1227, %r1227, 10;
	xor.b32  	%r1246, %r1244, %r1245;
	xor.b32  	%r1247, %r1201, %r1175;
	and.b32  	%r1248, %r1227, %r1247;
	and.b32  	%r1249, %r1201, %r1175;
	xor.b32  	%r1250, %r1248, %r1249;
	add.s32 	%r1251, %r1246, %r1250;
	add.s32 	%r1252, %r1241, %r1149;
	add.s32 	%r1253, %r1251, %r1241;
	shf.l.wrap.b32 	%r1254, %r1252, %r1252, 26;
	shf.l.wrap.b32 	%r1255, %r1252, %r1252, 21;
	xor.b32  	%r1256, %r1254, %r1255;
	shf.l.wrap.b32 	%r1257, %r1252, %r1252, 7;
	xor.b32  	%r1258, %r1256, %r1257;
	and.b32  	%r1259, %r1252, %r1226;
	not.b32 	%r1260, %r1252;
	and.b32  	%r1261, %r1200, %r1260;
	or.b32  	%r1262, %r1259, %r1261;
	add.s32 	%r1263, %r1262, %r1174;
	add.s32 	%r1264, %r1263, %r1258;
	ld.const.u32 	%r1265, [K256+60];
	add.s32 	%r1266, %r1264, %r1265;
	add.s32 	%r1267, %r1266, %r191;
	shf.l.wrap.b32 	%r1268, %r1253, %r1253, 30;
	shf.l.wrap.b32 	%r1269, %r1253, %r1253, 19;
	xor.b32  	%r1270, %r1268, %r1269;
	shf.l.wrap.b32 	%r1271, %r1253, %r1253, 10;
	xor.b32  	%r1272, %r1270, %r1271;
	xor.b32  	%r1273, %r1227, %r1201;
	and.b32  	%r1274, %r1253, %r1273;
	and.b32  	%r1275, %r1227, %r1201;
	xor.b32  	%r1276, %r1274, %r1275;
	add.s32 	%r1277, %r1272, %r1276;
	add.s32 	%r1278, %r1267, %r1175;
	add.s32 	%r1279, %r1277, %r1267;
	shf.l.wrap.b32 	%r1280, %r1278, %r1278, 26;
	shf.l.wrap.b32 	%r1281, %r1278, %r1278, 21;
	xor.b32  	%r1282, %r1280, %r1281;
	shf.l.wrap.b32 	%r1283, %r1278, %r1278, 7;
	xor.b32  	%r1284, %r1282, %r1283;
	and.b32  	%r1285, %r1278, %r1252;
	not.b32 	%r1286, %r1278;
	and.b32  	%r1287, %r1226, %r1286;
	or.b32  	%r1288, %r1285, %r1287;
	add.s32 	%r1289, %r1288, %r1200;
	add.s32 	%r1290, %r1289, %r1284;
	ld.const.u32 	%r1291, [K256+64];
	add.s32 	%r1292, %r1290, %r1291;
	add.s32 	%r1293, %r1292, %r212;
	shf.l.wrap.b32 	%r1294, %r1279, %r1279, 30;
	shf.l.wrap.b32 	%r1295, %r1279, %r1279, 19;
	xor.b32  	%r1296, %r1294, %r1295;
	shf.l.wrap.b32 	%r1297, %r1279, %r1279, 10;
	xor.b32  	%r1298, %r1296, %r1297;
	xor.b32  	%r1299, %r1253, %r1227;
	and.b32  	%r1300, %r1279, %r1299;
	and.b32  	%r1301, %r1253, %r1227;
	xor.b32  	%r1302, %r1300, %r1301;
	add.s32 	%r1303, %r1298, %r1302;
	add.s32 	%r1304, %r1293, %r1201;
	add.s32 	%r1305, %r1303, %r1293;
	shf.l.wrap.b32 	%r1306, %r1304, %r1304, 26;
	shf.l.wrap.b32 	%r1307, %r1304, %r1304, 21;
	xor.b32  	%r1308, %r1306, %r1307;
	shf.l.wrap.b32 	%r1309, %r1304, %r1304, 7;
	xor.b32  	%r1310, %r1308, %r1309;
	and.b32  	%r1311, %r1304, %r1278;
	not.b32 	%r1312, %r1304;
	and.b32  	%r1313, %r1252, %r1312;
	or.b32  	%r1314, %r1311, %r1313;
	add.s32 	%r1315, %r1314, %r1226;
	add.s32 	%r1316, %r1315, %r1310;
	ld.const.u32 	%r1317, [K256+68];
	add.s32 	%r1318, %r1316, %r1317;
	add.s32 	%r1319, %r1318, %r233;
	shf.l.wrap.b32 	%r1320, %r1305, %r1305, 30;
	shf.l.wrap.b32 	%r1321, %r1305, %r1305, 19;
	xor.b32  	%r1322, %r1320, %r1321;
	shf.l.wrap.b32 	%r1323, %r1305, %r1305, 10;
	xor.b32  	%r1324, %r1322, %r1323;
	xor.b32  	%r1325, %r1279, %r1253;
	and.b32  	%r1326, %r1305, %r1325;
	and.b32  	%r1327, %r1279, %r1253;
	xor.b32  	%r1328, %r1326, %r1327;
	add.s32 	%r1329, %r1324, %r1328;
	add.s32 	%r1330, %r1319, %r1227;
	add.s32 	%r1331, %r1329, %r1319;
	shf.l.wrap.b32 	%r1332, %r1330, %r1330, 26;
	shf.l.wrap.b32 	%r1333, %r1330, %r1330, 21;
	xor.b32  	%r1334, %r1332, %r1333;
	shf.l.wrap.b32 	%r1335, %r1330, %r1330, 7;
	xor.b32  	%r1336, %r1334, %r1335;
	and.b32  	%r1337, %r1330, %r1304;
	not.b32 	%r1338, %r1330;
	and.b32  	%r1339, %r1278, %r1338;
	or.b32  	%r1340, %r1337, %r1339;
	add.s32 	%r1341, %r1340, %r1252;
	add.s32 	%r1342, %r1341, %r1336;
	ld.const.u32 	%r1343, [K256+72];
	add.s32 	%r1344, %r1342, %r1343;
	add.s32 	%r1345, %r1344, %r250;
	shf.l.wrap.b32 	%r1346, %r1331, %r1331, 30;
	shf.l.wrap.b32 	%r1347, %r1331, %r1331, 19;
	xor.b32  	%r1348, %r1346, %r1347;
	shf.l.wrap.b32 	%r1349, %r1331, %r1331, 10;
	xor.b32  	%r1350, %r1348, %r1349;
	xor.b32  	%r1351, %r1305, %r1279;
	and.b32  	%r1352, %r1331, %r1351;
	and.b32  	%r1353, %r1305, %r1279;
	xor.b32  	%r1354, %r1352, %r1353;
	add.s32 	%r1355, %r1350, %r1354;
	add.s32 	%r1356, %r1345, %r1253;
	add.s32 	%r1357, %r1355, %r1345;
	shf.l.wrap.b32 	%r1358, %r1356, %r1356, 26;
	shf.l.wrap.b32 	%r1359, %r1356, %r1356, 21;
	xor.b32  	%r1360, %r1358, %r1359;
	shf.l.wrap.b32 	%r1361, %r1356, %r1356, 7;
	xor.b32  	%r1362, %r1360, %r1361;
	and.b32  	%r1363, %r1356, %r1330;
	not.b32 	%r1364, %r1356;
	and.b32  	%r1365, %r1304, %r1364;
	or.b32  	%r1366, %r1363, %r1365;
	add.s32 	%r1367, %r1366, %r1278;
	add.s32 	%r1368, %r1367, %r1362;
	ld.const.u32 	%r1369, [K256+76];
	add.s32 	%r1370, %r1368, %r1369;
	add.s32 	%r1371, %r1370, %r267;
	shf.l.wrap.b32 	%r1372, %r1357, %r1357, 30;
	shf.l.wrap.b32 	%r1373, %r1357, %r1357, 19;
	xor.b32  	%r1374, %r1372, %r1373;
	shf.l.wrap.b32 	%r1375, %r1357, %r1357, 10;
	xor.b32  	%r1376, %r1374, %r1375;
	xor.b32  	%r1377, %r1331, %r1305;
	and.b32  	%r1378, %r1357, %r1377;
	and.b32  	%r1379, %r1331, %r1305;
	xor.b32  	%r1380, %r1378, %r1379;
	add.s32 	%r1381, %r1376, %r1380;
	add.s32 	%r1382, %r1371, %r1279;
	add.s32 	%r1383, %r1381, %r1371;
	shf.l.wrap.b32 	%r1384, %r1382, %r1382, 26;
	shf.l.wrap.b32 	%r1385, %r1382, %r1382, 21;
	xor.b32  	%r1386, %r1384, %r1385;
	shf.l.wrap.b32 	%r1387, %r1382, %r1382, 7;
	xor.b32  	%r1388, %r1386, %r1387;
	and.b32  	%r1389, %r1382, %r1356;
	not.b32 	%r1390, %r1382;
	and.b32  	%r1391, %r1330, %r1390;
	or.b32  	%r1392, %r1389, %r1391;
	add.s32 	%r1393, %r1392, %r1304;
	add.s32 	%r1394, %r1393, %r1388;
	ld.const.u32 	%r1395, [K256+80];
	add.s32 	%r1396, %r1394, %r1395;
	add.s32 	%r1397, %r1396, %r284;
	shf.l.wrap.b32 	%r1398, %r1383, %r1383, 30;
	shf.l.wrap.b32 	%r1399, %r1383, %r1383, 19;
	xor.b32  	%r1400, %r1398, %r1399;
	shf.l.wrap.b32 	%r1401, %r1383, %r1383, 10;
	xor.b32  	%r1402, %r1400, %r1401;
	xor.b32  	%r1403, %r1357, %r1331;
	and.b32  	%r1404, %r1383, %r1403;
	and.b32  	%r1405, %r1357, %r1331;
	xor.b32  	%r1406, %r1404, %r1405;
	add.s32 	%r1407, %r1402, %r1406;
	add.s32 	%r1408, %r1397, %r1305;
	add.s32 	%r1409, %r1407, %r1397;
	shf.l.wrap.b32 	%r1410, %r1408, %r1408, 26;
	shf.l.wrap.b32 	%r1411, %r1408, %r1408, 21;
	xor.b32  	%r1412, %r1410, %r1411;
	shf.l.wrap.b32 	%r1413, %r1408, %r1408, 7;
	xor.b32  	%r1414, %r1412, %r1413;
	and.b32  	%r1415, %r1408, %r1382;
	not.b32 	%r1416, %r1408;
	and.b32  	%r1417, %r1356, %r1416;
	or.b32  	%r1418, %r1415, %r1417;
	add.s32 	%r1419, %r1418, %r1330;
	add.s32 	%r1420, %r1419, %r1414;
	ld.const.u32 	%r1421, [K256+84];
	add.s32 	%r1422, %r1420, %r1421;
	add.s32 	%r1423, %r1422, %r301;
	shf.l.wrap.b32 	%r1424, %r1409, %r1409, 30;
	shf.l.wrap.b32 	%r1425, %r1409, %r1409, 19;
	xor.b32  	%r1426, %r1424, %r1425;
	shf.l.wrap.b32 	%r1427, %r1409, %r1409, 10;
	xor.b32  	%r1428, %r1426, %r1427;
	xor.b32  	%r1429, %r1383, %r1357;
	and.b32  	%r1430, %r1409, %r1429;
	and.b32  	%r1431, %r1383, %r1357;
	xor.b32  	%r1432, %r1430, %r1431;
	add.s32 	%r1433, %r1428, %r1432;
	add.s32 	%r1434, %r1423, %r1331;
	add.s32 	%r1435, %r1433, %r1423;
	shf.l.wrap.b32 	%r1436, %r1434, %r1434, 26;
	shf.l.wrap.b32 	%r1437, %r1434, %r1434, 21;
	xor.b32  	%r1438, %r1436, %r1437;
	shf.l.wrap.b32 	%r1439, %r1434, %r1434, 7;
	xor.b32  	%r1440, %r1438, %r1439;
	and.b32  	%r1441, %r1434, %r1408;
	not.b32 	%r1442, %r1434;
	and.b32  	%r1443, %r1382, %r1442;
	or.b32  	%r1444, %r1441, %r1443;
	add.s32 	%r1445, %r1444, %r1356;
	add.s32 	%r1446, %r1445, %r1440;
	ld.const.u32 	%r1447, [K256+88];
	add.s32 	%r1448, %r1446, %r1447;
	add.s32 	%r1449, %r1448, %r318;
	shf.l.wrap.b32 	%r1450, %r1435, %r1435, 30;
	shf.l.wrap.b32 	%r1451, %r1435, %r1435, 19;
	xor.b32  	%r1452, %r1450, %r1451;
	shf.l.wrap.b32 	%r1453, %r1435, %r1435, 10;
	xor.b32  	%r1454, %r1452, %r1453;
	xor.b32  	%r1455, %r1409, %r1383;
	and.b32  	%r1456, %r1435, %r1455;
	and.b32  	%r1457, %r1409, %r1383;
	xor.b32  	%r1458, %r1456, %r1457;
	add.s32 	%r1459, %r1454, %r1458;
	add.s32 	%r1460, %r1449, %r1357;
	add.s32 	%r1461, %r1459, %r1449;
	shf.l.wrap.b32 	%r1462, %r1460, %r1460, 26;
	shf.l.wrap.b32 	%r1463, %r1460, %r1460, 21;
	xor.b32  	%r1464, %r1462, %r1463;
	shf.l.wrap.b32 	%r1465, %r1460, %r1460, 7;
	xor.b32  	%r1466, %r1464, %r1465;
	and.b32  	%r1467, %r1460, %r1434;
	not.b32 	%r1468, %r1460;
	and.b32  	%r1469, %r1408, %r1468;
	or.b32  	%r1470, %r1467, %r1469;
	add.s32 	%r1471, %r1470, %r1382;
	add.s32 	%r1472, %r1471, %r1466;
	ld.const.u32 	%r1473, [K256+92];
	add.s32 	%r1474, %r1472, %r1473;
	add.s32 	%r1475, %r1474, %r335;
	shf.l.wrap.b32 	%r1476, %r1461, %r1461, 30;
	shf.l.wrap.b32 	%r1477, %r1461, %r1461, 19;
	xor.b32  	%r1478, %r1476, %r1477;
	shf.l.wrap.b32 	%r1479, %r1461, %r1461, 10;
	xor.b32  	%r1480, %r1478, %r1479;
	xor.b32  	%r1481, %r1435, %r1409;
	and.b32  	%r1482, %r1461, %r1481;
	and.b32  	%r1483, %r1435, %r1409;
	xor.b32  	%r1484, %r1482, %r1483;
	add.s32 	%r1485, %r1480, %r1484;
	add.s32 	%r1486, %r1475, %r1383;
	add.s32 	%r1487, %r1485, %r1475;
	shf.l.wrap.b32 	%r1488, %r1486, %r1486, 26;
	shf.l.wrap.b32 	%r1489, %r1486, %r1486, 21;
	xor.b32  	%r1490, %r1488, %r1489;
	shf.l.wrap.b32 	%r1491, %r1486, %r1486, 7;
	xor.b32  	%r1492, %r1490, %r1491;
	and.b32  	%r1493, %r1486, %r1460;
	not.b32 	%r1494, %r1486;
	and.b32  	%r1495, %r1434, %r1494;
	or.b32  	%r1496, %r1493, %r1495;
	add.s32 	%r1497, %r1496, %r1408;
	add.s32 	%r1498, %r1497, %r1492;
	ld.const.u32 	%r1499, [K256+96];
	add.s32 	%r1500, %r1498, %r1499;
	add.s32 	%r1501, %r1500, %r352;
	shf.l.wrap.b32 	%r1502, %r1487, %r1487, 30;
	shf.l.wrap.b32 	%r1503, %r1487, %r1487, 19;
	xor.b32  	%r1504, %r1502, %r1503;
	shf.l.wrap.b32 	%r1505, %r1487, %r1487, 10;
	xor.b32  	%r1506, %r1504, %r1505;
	xor.b32  	%r1507, %r1461, %r1435;
	and.b32  	%r1508, %r1487, %r1507;
	and.b32  	%r1509, %r1461, %r1435;
	xor.b32  	%r1510, %r1508, %r1509;
	add.s32 	%r1511, %r1506, %r1510;
	add.s32 	%r1512, %r1501, %r1409;
	add.s32 	%r1513, %r1511, %r1501;
	shf.l.wrap.b32 	%r1514, %r1512, %r1512, 26;
	shf.l.wrap.b32 	%r1515, %r1512, %r1512, 21;
	xor.b32  	%r1516, %r1514, %r1515;
	shf.l.wrap.b32 	%r1517, %r1512, %r1512, 7;
	xor.b32  	%r1518, %r1516, %r1517;
	and.b32  	%r1519, %r1512, %r1486;
	not.b32 	%r1520, %r1512;
	and.b32  	%r1521, %r1460, %r1520;
	or.b32  	%r1522, %r1519, %r1521;
	add.s32 	%r1523, %r1522, %r1434;
	add.s32 	%r1524, %r1523, %r1518;
	ld.const.u32 	%r1525, [K256+100];
	add.s32 	%r1526, %r1524, %r1525;
	add.s32 	%r1527, %r1526, %r369;
	shf.l.wrap.b32 	%r1528, %r1513, %r1513, 30;
	shf.l.wrap.b32 	%r1529, %r1513, %r1513, 19;
	xor.b32  	%r1530, %r1528, %r1529;
	shf.l.wrap.b32 	%r1531, %r1513, %r1513, 10;
	xor.b32  	%r1532, %r1530, %r1531;
	xor.b32  	%r1533, %r1487, %r1461;
	and.b32  	%r1534, %r1513, %r1533;
	and.b32  	%r1535, %r1487, %r1461;
	xor.b32  	%r1536, %r1534, %r1535;
	add.s32 	%r1537, %r1532, %r1536;
	add.s32 	%r1538, %r1527, %r1435;
	add.s32 	%r1539, %r1537, %r1527;
	shf.l.wrap.b32 	%r1540, %r1538, %r1538, 26;
	shf.l.wrap.b32 	%r1541, %r1538, %r1538, 21;
	xor.b32  	%r1542, %r1540, %r1541;
	shf.l.wrap.b32 	%r1543, %r1538, %r1538, 7;
	xor.b32  	%r1544, %r1542, %r1543;
	and.b32  	%r1545, %r1538, %r1512;
	not.b32 	%r1546, %r1538;
	and.b32  	%r1547, %r1486, %r1546;
	or.b32  	%r1548, %r1545, %r1547;
	add.s32 	%r1549, %r1548, %r1460;
	add.s32 	%r1550, %r1549, %r1544;
	ld.const.u32 	%r1551, [K256+104];
	add.s32 	%r1552, %r1550, %r1551;
	add.s32 	%r1553, %r1552, %r386;
	shf.l.wrap.b32 	%r1554, %r1539, %r1539, 30;
	shf.l.wrap.b32 	%r1555, %r1539, %r1539, 19;
	xor.b32  	%r1556, %r1554, %r1555;
	shf.l.wrap.b32 	%r1557, %r1539, %r1539, 10;
	xor.b32  	%r1558, %r1556, %r1557;
	xor.b32  	%r1559, %r1513, %r1487;
	and.b32  	%r1560, %r1539, %r1559;
	and.b32  	%r1561, %r1513, %r1487;
	xor.b32  	%r1562, %r1560, %r1561;
	add.s32 	%r1563, %r1558, %r1562;
	add.s32 	%r1564, %r1553, %r1461;
	add.s32 	%r1565, %r1563, %r1553;
	shf.l.wrap.b32 	%r1566, %r1564, %r1564, 26;
	shf.l.wrap.b32 	%r1567, %r1564, %r1564, 21;
	xor.b32  	%r1568, %r1566, %r1567;
	shf.l.wrap.b32 	%r1569, %r1564, %r1564, 7;
	xor.b32  	%r1570, %r1568, %r1569;
	and.b32  	%r1571, %r1564, %r1538;
	not.b32 	%r1572, %r1564;
	and.b32  	%r1573, %r1512, %r1572;
	or.b32  	%r1574, %r1571, %r1573;
	add.s32 	%r1575, %r1574, %r1486;
	add.s32 	%r1576, %r1575, %r1570;
	ld.const.u32 	%r1577, [K256+108];
	add.s32 	%r1578, %r1576, %r1577;
	add.s32 	%r1579, %r1578, %r403;
	shf.l.wrap.b32 	%r1580, %r1565, %r1565, 30;
	shf.l.wrap.b32 	%r1581, %r1565, %r1565, 19;
	xor.b32  	%r1582, %r1580, %r1581;
	shf.l.wrap.b32 	%r1583, %r1565, %r1565, 10;
	xor.b32  	%r1584, %r1582, %r1583;
	xor.b32  	%r1585, %r1539, %r1513;
	and.b32  	%r1586, %r1565, %r1585;
	and.b32  	%r1587, %r1539, %r1513;
	xor.b32  	%r1588, %r1586, %r1587;
	add.s32 	%r1589, %r1584, %r1588;
	add.s32 	%r1590, %r1579, %r1487;
	add.s32 	%r1591, %r1589, %r1579;
	shf.l.wrap.b32 	%r1592, %r1590, %r1590, 26;
	shf.l.wrap.b32 	%r1593, %r1590, %r1590, 21;
	xor.b32  	%r1594, %r1592, %r1593;
	shf.l.wrap.b32 	%r1595, %r1590, %r1590, 7;
	xor.b32  	%r1596, %r1594, %r1595;
	and.b32  	%r1597, %r1590, %r1564;
	not.b32 	%r1598, %r1590;
	and.b32  	%r1599, %r1538, %r1598;
	or.b32  	%r1600, %r1597, %r1599;
	add.s32 	%r1601, %r1600, %r1512;
	add.s32 	%r1602, %r1601, %r1596;
	ld.const.u32 	%r1603, [K256+112];
	add.s32 	%r1604, %r1602, %r1603;
	add.s32 	%r1605, %r1604, %r420;
	shf.l.wrap.b32 	%r1606, %r1591, %r1591, 30;
	shf.l.wrap.b32 	%r1607, %r1591, %r1591, 19;
	xor.b32  	%r1608, %r1606, %r1607;
	shf.l.wrap.b32 	%r1609, %r1591, %r1591, 10;
	xor.b32  	%r1610, %r1608, %r1609;
	xor.b32  	%r1611, %r1565, %r1539;
	and.b32  	%r1612, %r1591, %r1611;
	and.b32  	%r1613, %r1565, %r1539;
	xor.b32  	%r1614, %r1612, %r1613;
	add.s32 	%r1615, %r1610, %r1614;
	add.s32 	%r1616, %r1605, %r1513;
	add.s32 	%r1617, %r1615, %r1605;
	shf.l.wrap.b32 	%r1618, %r1616, %r1616, 26;
	shf.l.wrap.b32 	%r1619, %r1616, %r1616, 21;
	xor.b32  	%r1620, %r1618, %r1619;
	shf.l.wrap.b32 	%r1621, %r1616, %r1616, 7;
	xor.b32  	%r1622, %r1620, %r1621;
	and.b32  	%r1623, %r1616, %r1590;
	not.b32 	%r1624, %r1616;
	and.b32  	%r1625, %r1564, %r1624;
	or.b32  	%r1626, %r1623, %r1625;
	add.s32 	%r1627, %r1626, %r1538;
	add.s32 	%r1628, %r1627, %r1622;
	ld.const.u32 	%r1629, [K256+116];
	add.s32 	%r1630, %r1628, %r1629;
	add.s32 	%r1631, %r1630, %r437;
	shf.l.wrap.b32 	%r1632, %r1617, %r1617, 30;
	shf.l.wrap.b32 	%r1633, %r1617, %r1617, 19;
	xor.b32  	%r1634, %r1632, %r1633;
	shf.l.wrap.b32 	%r1635, %r1617, %r1617, 10;
	xor.b32  	%r1636, %r1634, %r1635;
	xor.b32  	%r1637, %r1591, %r1565;
	and.b32  	%r1638, %r1617, %r1637;
	and.b32  	%r1639, %r1591, %r1565;
	xor.b32  	%r1640, %r1638, %r1639;
	add.s32 	%r1641, %r1636, %r1640;
	add.s32 	%r1642, %r1631, %r1539;
	add.s32 	%r1643, %r1641, %r1631;
	shf.l.wrap.b32 	%r1644, %r1642, %r1642, 26;
	shf.l.wrap.b32 	%r1645, %r1642, %r1642, 21;
	xor.b32  	%r1646, %r1644, %r1645;
	shf.l.wrap.b32 	%r1647, %r1642, %r1642, 7;
	xor.b32  	%r1648, %r1646, %r1647;
	and.b32  	%r1649, %r1642, %r1616;
	not.b32 	%r1650, %r1642;
	and.b32  	%r1651, %r1590, %r1650;
	or.b32  	%r1652, %r1649, %r1651;
	add.s32 	%r1653, %r1652, %r1564;
	add.s32 	%r1654, %r1653, %r1648;
	ld.const.u32 	%r1655, [K256+120];
	add.s32 	%r1656, %r1654, %r1655;
	add.s32 	%r1657, %r1656, %r454;
	shf.l.wrap.b32 	%r1658, %r1643, %r1643, 30;
	shf.l.wrap.b32 	%r1659, %r1643, %r1643, 19;
	xor.b32  	%r1660, %r1658, %r1659;
	shf.l.wrap.b32 	%r1661, %r1643, %r1643, 10;
	xor.b32  	%r1662, %r1660, %r1661;
	xor.b32  	%r1663, %r1617, %r1591;
	and.b32  	%r1664, %r1643, %r1663;
	and.b32  	%r1665, %r1617, %r1591;
	xor.b32  	%r1666, %r1664, %r1665;
	add.s32 	%r1667, %r1662, %r1666;
	add.s32 	%r1668, %r1657, %r1565;
	add.s32 	%r1669, %r1667, %r1657;
	shf.l.wrap.b32 	%r1670, %r1668, %r1668, 26;
	shf.l.wrap.b32 	%r1671, %r1668, %r1668, 21;
	xor.b32  	%r1672, %r1670, %r1671;
	shf.l.wrap.b32 	%r1673, %r1668, %r1668, 7;
	xor.b32  	%r1674, %r1672, %r1673;
	and.b32  	%r1675, %r1668, %r1642;
	not.b32 	%r1676, %r1668;
	and.b32  	%r1677, %r1616, %r1676;
	or.b32  	%r1678, %r1675, %r1677;
	add.s32 	%r1679, %r1678, %r1590;
	add.s32 	%r1680, %r1679, %r1674;
	ld.const.u32 	%r1681, [K256+124];
	add.s32 	%r1682, %r1680, %r1681;
	add.s32 	%r1683, %r1682, %r467;
	shf.l.wrap.b32 	%r1684, %r1669, %r1669, 30;
	shf.l.wrap.b32 	%r1685, %r1669, %r1669, 19;
	xor.b32  	%r1686, %r1684, %r1685;
	shf.l.wrap.b32 	%r1687, %r1669, %r1669, 10;
	xor.b32  	%r1688, %r1686, %r1687;
	xor.b32  	%r1689, %r1643, %r1617;
	and.b32  	%r1690, %r1669, %r1689;
	and.b32  	%r1691, %r1643, %r1617;
	xor.b32  	%r1692, %r1690, %r1691;
	add.s32 	%r1693, %r1688, %r1692;
	add.s32 	%r1694, %r1683, %r1591;
	add.s32 	%r1695, %r1693, %r1683;
	shf.l.wrap.b32 	%r1696, %r1694, %r1694, 26;
	shf.l.wrap.b32 	%r1697, %r1694, %r1694, 21;
	xor.b32  	%r1698, %r1696, %r1697;
	shf.l.wrap.b32 	%r1699, %r1694, %r1694, 7;
	xor.b32  	%r1700, %r1698, %r1699;
	and.b32  	%r1701, %r1694, %r1668;
	not.b32 	%r1702, %r1694;
	and.b32  	%r1703, %r1642, %r1702;
	or.b32  	%r1704, %r1701, %r1703;
	add.s32 	%r1705, %r1704, %r1616;
	add.s32 	%r1706, %r1705, %r1700;
	ld.const.u32 	%r1707, [K256+128];
	add.s32 	%r1708, %r1706, %r1707;
	add.s32 	%r1709, %r1708, %r480;
	shf.l.wrap.b32 	%r1710, %r1695, %r1695, 30;
	shf.l.wrap.b32 	%r1711, %r1695, %r1695, 19;
	xor.b32  	%r1712, %r1710, %r1711;
	shf.l.wrap.b32 	%r1713, %r1695, %r1695, 10;
	xor.b32  	%r1714, %r1712, %r1713;
	xor.b32  	%r1715, %r1669, %r1643;
	and.b32  	%r1716, %r1695, %r1715;
	and.b32  	%r1717, %r1669, %r1643;
	xor.b32  	%r1718, %r1716, %r1717;
	add.s32 	%r1719, %r1714, %r1718;
	add.s32 	%r1720, %r1709, %r1617;
	add.s32 	%r1721, %r1719, %r1709;
	shf.l.wrap.b32 	%r1722, %r1720, %r1720, 26;
	shf.l.wrap.b32 	%r1723, %r1720, %r1720, 21;
	xor.b32  	%r1724, %r1722, %r1723;
	shf.l.wrap.b32 	%r1725, %r1720, %r1720, 7;
	xor.b32  	%r1726, %r1724, %r1725;
	and.b32  	%r1727, %r1720, %r1694;
	not.b32 	%r1728, %r1720;
	and.b32  	%r1729, %r1668, %r1728;
	or.b32  	%r1730, %r1727, %r1729;
	add.s32 	%r1731, %r1730, %r1642;
	add.s32 	%r1732, %r1731, %r1726;
	ld.const.u32 	%r1733, [K256+132];
	add.s32 	%r1734, %r1732, %r1733;
	add.s32 	%r1735, %r1734, %r493;
	shf.l.wrap.b32 	%r1736, %r1721, %r1721, 30;
	shf.l.wrap.b32 	%r1737, %r1721, %r1721, 19;
	xor.b32  	%r1738, %r1736, %r1737;
	shf.l.wrap.b32 	%r1739, %r1721, %r1721, 10;
	xor.b32  	%r1740, %r1738, %r1739;
	xor.b32  	%r1741, %r1695, %r1669;
	and.b32  	%r1742, %r1721, %r1741;
	and.b32  	%r1743, %r1695, %r1669;
	xor.b32  	%r1744, %r1742, %r1743;
	add.s32 	%r1745, %r1740, %r1744;
	add.s32 	%r1746, %r1735, %r1643;
	add.s32 	%r1747, %r1745, %r1735;
	shf.l.wrap.b32 	%r1748, %r1746, %r1746, 26;
	shf.l.wrap.b32 	%r1749, %r1746, %r1746, 21;
	xor.b32  	%r1750, %r1748, %r1749;
	shf.l.wrap.b32 	%r1751, %r1746, %r1746, 7;
	xor.b32  	%r1752, %r1750, %r1751;
	and.b32  	%r1753, %r1746, %r1720;
	not.b32 	%r1754, %r1746;
	and.b32  	%r1755, %r1694, %r1754;
	or.b32  	%r1756, %r1753, %r1755;
	add.s32 	%r1757, %r1756, %r1668;
	add.s32 	%r1758, %r1757, %r1752;
	ld.const.u32 	%r1759, [K256+136];
	add.s32 	%r1760, %r1758, %r1759;
	add.s32 	%r1761, %r1760, %r506;
	shf.l.wrap.b32 	%r1762, %r1747, %r1747, 30;
	shf.l.wrap.b32 	%r1763, %r1747, %r1747, 19;
	xor.b32  	%r1764, %r1762, %r1763;
	shf.l.wrap.b32 	%r1765, %r1747, %r1747, 10;
	xor.b32  	%r1766, %r1764, %r1765;
	xor.b32  	%r1767, %r1721, %r1695;
	and.b32  	%r1768, %r1747, %r1767;
	and.b32  	%r1769, %r1721, %r1695;
	xor.b32  	%r1770, %r1768, %r1769;
	add.s32 	%r1771, %r1766, %r1770;
	add.s32 	%r1772, %r1761, %r1669;
	add.s32 	%r1773, %r1771, %r1761;
	shf.l.wrap.b32 	%r1774, %r1772, %r1772, 26;
	shf.l.wrap.b32 	%r1775, %r1772, %r1772, 21;
	xor.b32  	%r1776, %r1774, %r1775;
	shf.l.wrap.b32 	%r1777, %r1772, %r1772, 7;
	xor.b32  	%r1778, %r1776, %r1777;
	and.b32  	%r1779, %r1772, %r1746;
	not.b32 	%r1780, %r1772;
	and.b32  	%r1781, %r1720, %r1780;
	or.b32  	%r1782, %r1779, %r1781;
	add.s32 	%r1783, %r1782, %r1694;
	add.s32 	%r1784, %r1783, %r1778;
	ld.const.u32 	%r1785, [K256+140];
	add.s32 	%r1786, %r1784, %r1785;
	add.s32 	%r1787, %r1786, %r519;
	shf.l.wrap.b32 	%r1788, %r1773, %r1773, 30;
	shf.l.wrap.b32 	%r1789, %r1773, %r1773, 19;
	xor.b32  	%r1790, %r1788, %r1789;
	shf.l.wrap.b32 	%r1791, %r1773, %r1773, 10;
	xor.b32  	%r1792, %r1790, %r1791;
	xor.b32  	%r1793, %r1747, %r1721;
	and.b32  	%r1794, %r1773, %r1793;
	and.b32  	%r1795, %r1747, %r1721;
	xor.b32  	%r1796, %r1794, %r1795;
	add.s32 	%r1797, %r1792, %r1796;
	add.s32 	%r1798, %r1787, %r1695;
	add.s32 	%r1799, %r1797, %r1787;
	shf.l.wrap.b32 	%r1800, %r1798, %r1798, 26;
	shf.l.wrap.b32 	%r1801, %r1798, %r1798, 21;
	xor.b32  	%r1802, %r1800, %r1801;
	shf.l.wrap.b32 	%r1803, %r1798, %r1798, 7;
	xor.b32  	%r1804, %r1802, %r1803;
	and.b32  	%r1805, %r1798, %r1772;
	not.b32 	%r1806, %r1798;
	and.b32  	%r1807, %r1746, %r1806;
	or.b32  	%r1808, %r1805, %r1807;
	add.s32 	%r1809, %r1808, %r1720;
	add.s32 	%r1810, %r1809, %r1804;
	ld.const.u32 	%r1811, [K256+144];
	add.s32 	%r1812, %r1810, %r1811;
	add.s32 	%r1813, %r1812, %r532;
	shf.l.wrap.b32 	%r1814, %r1799, %r1799, 30;
	shf.l.wrap.b32 	%r1815, %r1799, %r1799, 19;
	xor.b32  	%r1816, %r1814, %r1815;
	shf.l.wrap.b32 	%r1817, %r1799, %r1799, 10;
	xor.b32  	%r1818, %r1816, %r1817;
	xor.b32  	%r1819, %r1773, %r1747;
	and.b32  	%r1820, %r1799, %r1819;
	and.b32  	%r1821, %r1773, %r1747;
	xor.b32  	%r1822, %r1820, %r1821;
	add.s32 	%r1823, %r1818, %r1822;
	add.s32 	%r1824, %r1813, %r1721;
	add.s32 	%r1825, %r1823, %r1813;
	shf.l.wrap.b32 	%r1826, %r1824, %r1824, 26;
	shf.l.wrap.b32 	%r1827, %r1824, %r1824, 21;
	xor.b32  	%r1828, %r1826, %r1827;
	shf.l.wrap.b32 	%r1829, %r1824, %r1824, 7;
	xor.b32  	%r1830, %r1828, %r1829;
	and.b32  	%r1831, %r1824, %r1798;
	not.b32 	%r1832, %r1824;
	and.b32  	%r1833, %r1772, %r1832;
	or.b32  	%r1834, %r1831, %r1833;
	add.s32 	%r1835, %r1834, %r1746;
	add.s32 	%r1836, %r1835, %r1830;
	ld.const.u32 	%r1837, [K256+148];
	add.s32 	%r1838, %r1836, %r1837;
	add.s32 	%r1839, %r1838, %r545;
	shf.l.wrap.b32 	%r1840, %r1825, %r1825, 30;
	shf.l.wrap.b32 	%r1841, %r1825, %r1825, 19;
	xor.b32  	%r1842, %r1840, %r1841;
	shf.l.wrap.b32 	%r1843, %r1825, %r1825, 10;
	xor.b32  	%r1844, %r1842, %r1843;
	xor.b32  	%r1845, %r1799, %r1773;
	and.b32  	%r1846, %r1825, %r1845;
	and.b32  	%r1847, %r1799, %r1773;
	xor.b32  	%r1848, %r1846, %r1847;
	add.s32 	%r1849, %r1844, %r1848;
	add.s32 	%r1850, %r1839, %r1747;
	add.s32 	%r1851, %r1849, %r1839;
	shf.l.wrap.b32 	%r1852, %r1850, %r1850, 26;
	shf.l.wrap.b32 	%r1853, %r1850, %r1850, 21;
	xor.b32  	%r1854, %r1852, %r1853;
	shf.l.wrap.b32 	%r1855, %r1850, %r1850, 7;
	xor.b32  	%r1856, %r1854, %r1855;
	and.b32  	%r1857, %r1850, %r1824;
	not.b32 	%r1858, %r1850;
	and.b32  	%r1859, %r1798, %r1858;
	or.b32  	%r1860, %r1857, %r1859;
	add.s32 	%r1861, %r1860, %r1772;
	add.s32 	%r1862, %r1861, %r1856;
	ld.const.u32 	%r1863, [K256+152];
	add.s32 	%r1864, %r1862, %r1863;
	add.s32 	%r1865, %r1864, %r558;
	shf.l.wrap.b32 	%r1866, %r1851, %r1851, 30;
	shf.l.wrap.b32 	%r1867, %r1851, %r1851, 19;
	xor.b32  	%r1868, %r1866, %r1867;
	shf.l.wrap.b32 	%r1869, %r1851, %r1851, 10;
	xor.b32  	%r1870, %r1868, %r1869;
	xor.b32  	%r1871, %r1825, %r1799;
	and.b32  	%r1872, %r1851, %r1871;
	and.b32  	%r1873, %r1825, %r1799;
	xor.b32  	%r1874, %r1872, %r1873;
	add.s32 	%r1875, %r1870, %r1874;
	add.s32 	%r1876, %r1865, %r1773;
	add.s32 	%r1877, %r1875, %r1865;
	shf.l.wrap.b32 	%r1878, %r1876, %r1876, 26;
	shf.l.wrap.b32 	%r1879, %r1876, %r1876, 21;
	xor.b32  	%r1880, %r1878, %r1879;
	shf.l.wrap.b32 	%r1881, %r1876, %r1876, 7;
	xor.b32  	%r1882, %r1880, %r1881;
	and.b32  	%r1883, %r1876, %r1850;
	not.b32 	%r1884, %r1876;
	and.b32  	%r1885, %r1824, %r1884;
	or.b32  	%r1886, %r1883, %r1885;
	add.s32 	%r1887, %r1886, %r1798;
	add.s32 	%r1888, %r1887, %r1882;
	ld.const.u32 	%r1889, [K256+156];
	add.s32 	%r1890, %r1888, %r1889;
	add.s32 	%r1891, %r1890, %r571;
	shf.l.wrap.b32 	%r1892, %r1877, %r1877, 30;
	shf.l.wrap.b32 	%r1893, %r1877, %r1877, 19;
	xor.b32  	%r1894, %r1892, %r1893;
	shf.l.wrap.b32 	%r1895, %r1877, %r1877, 10;
	xor.b32  	%r1896, %r1894, %r1895;
	xor.b32  	%r1897, %r1851, %r1825;
	and.b32  	%r1898, %r1877, %r1897;
	and.b32  	%r1899, %r1851, %r1825;
	xor.b32  	%r1900, %r1898, %r1899;
	add.s32 	%r1901, %r1896, %r1900;
	add.s32 	%r1902, %r1891, %r1799;
	add.s32 	%r1903, %r1901, %r1891;
	shf.l.wrap.b32 	%r1904, %r1902, %r1902, 26;
	shf.l.wrap.b32 	%r1905, %r1902, %r1902, 21;
	xor.b32  	%r1906, %r1904, %r1905;
	shf.l.wrap.b32 	%r1907, %r1902, %r1902, 7;
	xor.b32  	%r1908, %r1906, %r1907;
	and.b32  	%r1909, %r1902, %r1876;
	not.b32 	%r1910, %r1902;
	and.b32  	%r1911, %r1850, %r1910;
	or.b32  	%r1912, %r1909, %r1911;
	add.s32 	%r1913, %r1912, %r1824;
	add.s32 	%r1914, %r1913, %r1908;
	ld.const.u32 	%r1915, [K256+160];
	add.s32 	%r1916, %r1914, %r1915;
	add.s32 	%r1917, %r1916, %r584;
	shf.l.wrap.b32 	%r1918, %r1903, %r1903, 30;
	shf.l.wrap.b32 	%r1919, %r1903, %r1903, 19;
	xor.b32  	%r1920, %r1918, %r1919;
	shf.l.wrap.b32 	%r1921, %r1903, %r1903, 10;
	xor.b32  	%r1922, %r1920, %r1921;
	xor.b32  	%r1923, %r1877, %r1851;
	and.b32  	%r1924, %r1903, %r1923;
	and.b32  	%r1925, %r1877, %r1851;
	xor.b32  	%r1926, %r1924, %r1925;
	add.s32 	%r1927, %r1922, %r1926;
	add.s32 	%r1928, %r1917, %r1825;
	add.s32 	%r1929, %r1927, %r1917;
	shf.l.wrap.b32 	%r1930, %r1928, %r1928, 26;
	shf.l.wrap.b32 	%r1931, %r1928, %r1928, 21;
	xor.b32  	%r1932, %r1930, %r1931;
	shf.l.wrap.b32 	%r1933, %r1928, %r1928, 7;
	xor.b32  	%r1934, %r1932, %r1933;
	and.b32  	%r1935, %r1928, %r1902;
	not.b32 	%r1936, %r1928;
	and.b32  	%r1937, %r1876, %r1936;
	or.b32  	%r1938, %r1935, %r1937;
	add.s32 	%r1939, %r1938, %r1850;
	add.s32 	%r1940, %r1939, %r1934;
	ld.const.u32 	%r1941, [K256+164];
	add.s32 	%r1942, %r1940, %r1941;
	add.s32 	%r1943, %r1942, %r597;
	shf.l.wrap.b32 	%r1944, %r1929, %r1929, 30;
	shf.l.wrap.b32 	%r1945, %r1929, %r1929, 19;
	xor.b32  	%r1946, %r1944, %r1945;
	shf.l.wrap.b32 	%r1947, %r1929, %r1929, 10;
	xor.b32  	%r1948, %r1946, %r1947;
	xor.b32  	%r1949, %r1903, %r1877;
	and.b32  	%r1950, %r1929, %r1949;
	and.b32  	%r1951, %r1903, %r1877;
	xor.b32  	%r1952, %r1950, %r1951;
	add.s32 	%r1953, %r1948, %r1952;
	add.s32 	%r1954, %r1943, %r1851;
	add.s32 	%r1955, %r1953, %r1943;
	shf.l.wrap.b32 	%r1956, %r1954, %r1954, 26;
	shf.l.wrap.b32 	%r1957, %r1954, %r1954, 21;
	xor.b32  	%r1958, %r1956, %r1957;
	shf.l.wrap.b32 	%r1959, %r1954, %r1954, 7;
	xor.b32  	%r1960, %r1958, %r1959;
	and.b32  	%r1961, %r1954, %r1928;
	not.b32 	%r1962, %r1954;
	and.b32  	%r1963, %r1902, %r1962;
	or.b32  	%r1964, %r1961, %r1963;
	add.s32 	%r1965, %r1964, %r1876;
	add.s32 	%r1966, %r1965, %r1960;
	ld.const.u32 	%r1967, [K256+168];
	add.s32 	%r1968, %r1966, %r1967;
	add.s32 	%r1969, %r1968, %r610;
	shf.l.wrap.b32 	%r1970, %r1955, %r1955, 30;
	shf.l.wrap.b32 	%r1971, %r1955, %r1955, 19;
	xor.b32  	%r1972, %r1970, %r1971;
	shf.l.wrap.b32 	%r1973, %r1955, %r1955, 10;
	xor.b32  	%r1974, %r1972, %r1973;
	xor.b32  	%r1975, %r1929, %r1903;
	and.b32  	%r1976, %r1955, %r1975;
	and.b32  	%r1977, %r1929, %r1903;
	xor.b32  	%r1978, %r1976, %r1977;
	add.s32 	%r1979, %r1974, %r1978;
	add.s32 	%r1980, %r1969, %r1877;
	add.s32 	%r1981, %r1979, %r1969;
	shf.l.wrap.b32 	%r1982, %r1980, %r1980, 26;
	shf.l.wrap.b32 	%r1983, %r1980, %r1980, 21;
	xor.b32  	%r1984, %r1982, %r1983;
	shf.l.wrap.b32 	%r1985, %r1980, %r1980, 7;
	xor.b32  	%r1986, %r1984, %r1985;
	and.b32  	%r1987, %r1980, %r1954;
	not.b32 	%r1988, %r1980;
	and.b32  	%r1989, %r1928, %r1988;
	or.b32  	%r1990, %r1987, %r1989;
	add.s32 	%r1991, %r1990, %r1902;
	add.s32 	%r1992, %r1991, %r1986;
	ld.const.u32 	%r1993, [K256+172];
	add.s32 	%r1994, %r1992, %r1993;
	add.s32 	%r1995, %r1994, %r623;
	shf.l.wrap.b32 	%r1996, %r1981, %r1981, 30;
	shf.l.wrap.b32 	%r1997, %r1981, %r1981, 19;
	xor.b32  	%r1998, %r1996, %r1997;
	shf.l.wrap.b32 	%r1999, %r1981, %r1981, 10;
	xor.b32  	%r2000, %r1998, %r1999;
	xor.b32  	%r2001, %r1955, %r1929;
	and.b32  	%r2002, %r1981, %r2001;
	and.b32  	%r2003, %r1955, %r1929;
	xor.b32  	%r2004, %r2002, %r2003;
	add.s32 	%r2005, %r2000, %r2004;
	add.s32 	%r2006, %r1995, %r1903;
	add.s32 	%r2007, %r2005, %r1995;
	shf.l.wrap.b32 	%r2008, %r2006, %r2006, 26;
	shf.l.wrap.b32 	%r2009, %r2006, %r2006, 21;
	xor.b32  	%r2010, %r2008, %r2009;
	shf.l.wrap.b32 	%r2011, %r2006, %r2006, 7;
	xor.b32  	%r2012, %r2010, %r2011;
	and.b32  	%r2013, %r2006, %r1980;
	not.b32 	%r2014, %r2006;
	and.b32  	%r2015, %r1954, %r2014;
	or.b32  	%r2016, %r2013, %r2015;
	add.s32 	%r2017, %r2016, %r1928;
	add.s32 	%r2018, %r2017, %r2012;
	ld.const.u32 	%r2019, [K256+176];
	add.s32 	%r2020, %r2018, %r2019;
	add.s32 	%r2021, %r2020, %r636;
	shf.l.wrap.b32 	%r2022, %r2007, %r2007, 30;
	shf.l.wrap.b32 	%r2023, %r2007, %r2007, 19;
	xor.b32  	%r2024, %r2022, %r2023;
	shf.l.wrap.b32 	%r2025, %r2007, %r2007, 10;
	xor.b32  	%r2026, %r2024, %r2025;
	xor.b32  	%r2027, %r1981, %r1955;
	and.b32  	%r2028, %r2007, %r2027;
	and.b32  	%r2029, %r1981, %r1955;
	xor.b32  	%r2030, %r2028, %r2029;
	add.s32 	%r2031, %r2026, %r2030;
	add.s32 	%r2032, %r2021, %r1929;
	add.s32 	%r2033, %r2031, %r2021;
	shf.l.wrap.b32 	%r2034, %r2032, %r2032, 26;
	shf.l.wrap.b32 	%r2035, %r2032, %r2032, 21;
	xor.b32  	%r2036, %r2034, %r2035;
	shf.l.wrap.b32 	%r2037, %r2032, %r2032, 7;
	xor.b32  	%r2038, %r2036, %r2037;
	and.b32  	%r2039, %r2032, %r2006;
	not.b32 	%r2040, %r2032;
	and.b32  	%r2041, %r1980, %r2040;
	or.b32  	%r2042, %r2039, %r2041;
	add.s32 	%r2043, %r2042, %r1954;
	add.s32 	%r2044, %r2043, %r2038;
	ld.const.u32 	%r2045, [K256+180];
	add.s32 	%r2046, %r2044, %r2045;
	add.s32 	%r2047, %r2046, %r649;
	shf.l.wrap.b32 	%r2048, %r2033, %r2033, 30;
	shf.l.wrap.b32 	%r2049, %r2033, %r2033, 19;
	xor.b32  	%r2050, %r2048, %r2049;
	shf.l.wrap.b32 	%r2051, %r2033, %r2033, 10;
	xor.b32  	%r2052, %r2050, %r2051;
	xor.b32  	%r2053, %r2007, %r1981;
	and.b32  	%r2054, %r2033, %r2053;
	and.b32  	%r2055, %r2007, %r1981;
	xor.b32  	%r2056, %r2054, %r2055;
	add.s32 	%r2057, %r2052, %r2056;
	add.s32 	%r2058, %r2047, %r1955;
	add.s32 	%r2059, %r2057, %r2047;
	shf.l.wrap.b32 	%r2060, %r2058, %r2058, 26;
	shf.l.wrap.b32 	%r2061, %r2058, %r2058, 21;
	xor.b32  	%r2062, %r2060, %r2061;
	shf.l.wrap.b32 	%r2063, %r2058, %r2058, 7;
	xor.b32  	%r2064, %r2062, %r2063;
	and.b32  	%r2065, %r2058, %r2032;
	not.b32 	%r2066, %r2058;
	and.b32  	%r2067, %r2006, %r2066;
	or.b32  	%r2068, %r2065, %r2067;
	add.s32 	%r2069, %r2068, %r1980;
	add.s32 	%r2070, %r2069, %r2064;
	ld.const.u32 	%r2071, [K256+184];
	add.s32 	%r2072, %r2070, %r2071;
	add.s32 	%r2073, %r2072, %r662;
	shf.l.wrap.b32 	%r2074, %r2059, %r2059, 30;
	shf.l.wrap.b32 	%r2075, %r2059, %r2059, 19;
	xor.b32  	%r2076, %r2074, %r2075;
	shf.l.wrap.b32 	%r2077, %r2059, %r2059, 10;
	xor.b32  	%r2078, %r2076, %r2077;
	xor.b32  	%r2079, %r2033, %r2007;
	and.b32  	%r2080, %r2059, %r2079;
	and.b32  	%r2081, %r2033, %r2007;
	xor.b32  	%r2082, %r2080, %r2081;
	add.s32 	%r2083, %r2078, %r2082;
	add.s32 	%r2084, %r2073, %r1981;
	add.s32 	%r2085, %r2083, %r2073;
	shf.l.wrap.b32 	%r2086, %r2084, %r2084, 26;
	shf.l.wrap.b32 	%r2087, %r2084, %r2084, 21;
	xor.b32  	%r2088, %r2086, %r2087;
	shf.l.wrap.b32 	%r2089, %r2084, %r2084, 7;
	xor.b32  	%r2090, %r2088, %r2089;
	and.b32  	%r2091, %r2084, %r2058;
	not.b32 	%r2092, %r2084;
	and.b32  	%r2093, %r2032, %r2092;
	or.b32  	%r2094, %r2091, %r2093;
	add.s32 	%r2095, %r2094, %r2006;
	add.s32 	%r2096, %r2095, %r2090;
	ld.const.u32 	%r2097, [K256+188];
	add.s32 	%r2098, %r2096, %r2097;
	add.s32 	%r2099, %r2098, %r675;
	shf.l.wrap.b32 	%r2100, %r2085, %r2085, 30;
	shf.l.wrap.b32 	%r2101, %r2085, %r2085, 19;
	xor.b32  	%r2102, %r2100, %r2101;
	shf.l.wrap.b32 	%r2103, %r2085, %r2085, 10;
	xor.b32  	%r2104, %r2102, %r2103;
	xor.b32  	%r2105, %r2059, %r2033;
	and.b32  	%r2106, %r2085, %r2105;
	and.b32  	%r2107, %r2059, %r2033;
	xor.b32  	%r2108, %r2106, %r2107;
	add.s32 	%r2109, %r2104, %r2108;
	add.s32 	%r2110, %r2099, %r2007;
	add.s32 	%r2111, %r2109, %r2099;
	shf.l.wrap.b32 	%r2112, %r2110, %r2110, 26;
	shf.l.wrap.b32 	%r2113, %r2110, %r2110, 21;
	xor.b32  	%r2114, %r2112, %r2113;
	shf.l.wrap.b32 	%r2115, %r2110, %r2110, 7;
	xor.b32  	%r2116, %r2114, %r2115;
	and.b32  	%r2117, %r2110, %r2084;
	not.b32 	%r2118, %r2110;
	and.b32  	%r2119, %r2058, %r2118;
	or.b32  	%r2120, %r2117, %r2119;
	add.s32 	%r2121, %r2120, %r2032;
	add.s32 	%r2122, %r2121, %r2116;
	ld.const.u32 	%r2123, [K256+192];
	add.s32 	%r2124, %r2122, %r2123;
	add.s32 	%r2125, %r2124, %r688;
	shf.l.wrap.b32 	%r2126, %r2111, %r2111, 30;
	shf.l.wrap.b32 	%r2127, %r2111, %r2111, 19;
	xor.b32  	%r2128, %r2126, %r2127;
	shf.l.wrap.b32 	%r2129, %r2111, %r2111, 10;
	xor.b32  	%r2130, %r2128, %r2129;
	xor.b32  	%r2131, %r2085, %r2059;
	and.b32  	%r2132, %r2111, %r2131;
	and.b32  	%r2133, %r2085, %r2059;
	xor.b32  	%r2134, %r2132, %r2133;
	add.s32 	%r2135, %r2130, %r2134;
	add.s32 	%r2136, %r2125, %r2033;
	add.s32 	%r2137, %r2135, %r2125;
	shf.l.wrap.b32 	%r2138, %r2136, %r2136, 26;
	shf.l.wrap.b32 	%r2139, %r2136, %r2136, 21;
	xor.b32  	%r2140, %r2138, %r2139;
	shf.l.wrap.b32 	%r2141, %r2136, %r2136, 7;
	xor.b32  	%r2142, %r2140, %r2141;
	and.b32  	%r2143, %r2136, %r2110;
	not.b32 	%r2144, %r2136;
	and.b32  	%r2145, %r2084, %r2144;
	or.b32  	%r2146, %r2143, %r2145;
	add.s32 	%r2147, %r2146, %r2058;
	add.s32 	%r2148, %r2147, %r2142;
	ld.const.u32 	%r2149, [K256+196];
	add.s32 	%r2150, %r2148, %r2149;
	add.s32 	%r2151, %r2150, %r701;
	shf.l.wrap.b32 	%r2152, %r2137, %r2137, 30;
	shf.l.wrap.b32 	%r2153, %r2137, %r2137, 19;
	xor.b32  	%r2154, %r2152, %r2153;
	shf.l.wrap.b32 	%r2155, %r2137, %r2137, 10;
	xor.b32  	%r2156, %r2154, %r2155;
	xor.b32  	%r2157, %r2111, %r2085;
	and.b32  	%r2158, %r2137, %r2157;
	and.b32  	%r2159, %r2111, %r2085;
	xor.b32  	%r2160, %r2158, %r2159;
	add.s32 	%r2161, %r2156, %r2160;
	add.s32 	%r2162, %r2151, %r2059;
	add.s32 	%r2163, %r2161, %r2151;
	shf.l.wrap.b32 	%r2164, %r2162, %r2162, 26;
	shf.l.wrap.b32 	%r2165, %r2162, %r2162, 21;
	xor.b32  	%r2166, %r2164, %r2165;
	shf.l.wrap.b32 	%r2167, %r2162, %r2162, 7;
	xor.b32  	%r2168, %r2166, %r2167;
	and.b32  	%r2169, %r2162, %r2136;
	not.b32 	%r2170, %r2162;
	and.b32  	%r2171, %r2110, %r2170;
	or.b32  	%r2172, %r2169, %r2171;
	add.s32 	%r2173, %r2172, %r2084;
	add.s32 	%r2174, %r2173, %r2168;
	ld.const.u32 	%r2175, [K256+200];
	add.s32 	%r2176, %r2174, %r2175;
	add.s32 	%r2177, %r2176, %r714;
	shf.l.wrap.b32 	%r2178, %r2163, %r2163, 30;
	shf.l.wrap.b32 	%r2179, %r2163, %r2163, 19;
	xor.b32  	%r2180, %r2178, %r2179;
	shf.l.wrap.b32 	%r2181, %r2163, %r2163, 10;
	xor.b32  	%r2182, %r2180, %r2181;
	xor.b32  	%r2183, %r2137, %r2111;
	and.b32  	%r2184, %r2163, %r2183;
	and.b32  	%r2185, %r2137, %r2111;
	xor.b32  	%r2186, %r2184, %r2185;
	add.s32 	%r2187, %r2182, %r2186;
	add.s32 	%r2188, %r2177, %r2085;
	add.s32 	%r2189, %r2187, %r2177;
	shf.l.wrap.b32 	%r2190, %r2188, %r2188, 26;
	shf.l.wrap.b32 	%r2191, %r2188, %r2188, 21;
	xor.b32  	%r2192, %r2190, %r2191;
	shf.l.wrap.b32 	%r2193, %r2188, %r2188, 7;
	xor.b32  	%r2194, %r2192, %r2193;
	and.b32  	%r2195, %r2188, %r2162;
	not.b32 	%r2196, %r2188;
	and.b32  	%r2197, %r2136, %r2196;
	or.b32  	%r2198, %r2195, %r2197;
	add.s32 	%r2199, %r2198, %r2110;
	add.s32 	%r2200, %r2199, %r2194;
	ld.const.u32 	%r2201, [K256+204];
	add.s32 	%r2202, %r2200, %r2201;
	add.s32 	%r2203, %r2202, %r727;
	shf.l.wrap.b32 	%r2204, %r2189, %r2189, 30;
	shf.l.wrap.b32 	%r2205, %r2189, %r2189, 19;
	xor.b32  	%r2206, %r2204, %r2205;
	shf.l.wrap.b32 	%r2207, %r2189, %r2189, 10;
	xor.b32  	%r2208, %r2206, %r2207;
	xor.b32  	%r2209, %r2163, %r2137;
	and.b32  	%r2210, %r2189, %r2209;
	and.b32  	%r2211, %r2163, %r2137;
	xor.b32  	%r2212, %r2210, %r2211;
	add.s32 	%r2213, %r2208, %r2212;
	add.s32 	%r2214, %r2203, %r2111;
	add.s32 	%r2215, %r2213, %r2203;
	shf.l.wrap.b32 	%r2216, %r2214, %r2214, 26;
	shf.l.wrap.b32 	%r2217, %r2214, %r2214, 21;
	xor.b32  	%r2218, %r2216, %r2217;
	shf.l.wrap.b32 	%r2219, %r2214, %r2214, 7;
	xor.b32  	%r2220, %r2218, %r2219;
	and.b32  	%r2221, %r2214, %r2188;
	not.b32 	%r2222, %r2214;
	and.b32  	%r2223, %r2162, %r2222;
	or.b32  	%r2224, %r2221, %r2223;
	add.s32 	%r2225, %r2224, %r2136;
	add.s32 	%r2226, %r2225, %r2220;
	ld.const.u32 	%r2227, [K256+208];
	add.s32 	%r2228, %r2226, %r2227;
	add.s32 	%r2229, %r2228, %r740;
	shf.l.wrap.b32 	%r2230, %r2215, %r2215, 30;
	shf.l.wrap.b32 	%r2231, %r2215, %r2215, 19;
	xor.b32  	%r2232, %r2230, %r2231;
	shf.l.wrap.b32 	%r2233, %r2215, %r2215, 10;
	xor.b32  	%r2234, %r2232, %r2233;
	xor.b32  	%r2235, %r2189, %r2163;
	and.b32  	%r2236, %r2215, %r2235;
	and.b32  	%r2237, %r2189, %r2163;
	xor.b32  	%r2238, %r2236, %r2237;
	add.s32 	%r2239, %r2234, %r2238;
	add.s32 	%r2240, %r2229, %r2137;
	add.s32 	%r2241, %r2239, %r2229;
	shf.l.wrap.b32 	%r2242, %r2240, %r2240, 26;
	shf.l.wrap.b32 	%r2243, %r2240, %r2240, 21;
	xor.b32  	%r2244, %r2242, %r2243;
	shf.l.wrap.b32 	%r2245, %r2240, %r2240, 7;
	xor.b32  	%r2246, %r2244, %r2245;
	and.b32  	%r2247, %r2240, %r2214;
	not.b32 	%r2248, %r2240;
	and.b32  	%r2249, %r2188, %r2248;
	or.b32  	%r2250, %r2247, %r2249;
	add.s32 	%r2251, %r2250, %r2162;
	add.s32 	%r2252, %r2251, %r2246;
	ld.const.u32 	%r2253, [K256+212];
	add.s32 	%r2254, %r2252, %r2253;
	add.s32 	%r2255, %r2254, %r753;
	shf.l.wrap.b32 	%r2256, %r2241, %r2241, 30;
	shf.l.wrap.b32 	%r2257, %r2241, %r2241, 19;
	xor.b32  	%r2258, %r2256, %r2257;
	shf.l.wrap.b32 	%r2259, %r2241, %r2241, 10;
	xor.b32  	%r2260, %r2258, %r2259;
	xor.b32  	%r2261, %r2215, %r2189;
	and.b32  	%r2262, %r2241, %r2261;
	and.b32  	%r2263, %r2215, %r2189;
	xor.b32  	%r2264, %r2262, %r2263;
	add.s32 	%r2265, %r2260, %r2264;
	add.s32 	%r2266, %r2255, %r2163;
	add.s32 	%r2267, %r2265, %r2255;
	shf.l.wrap.b32 	%r2268, %r2266, %r2266, 26;
	shf.l.wrap.b32 	%r2269, %r2266, %r2266, 21;
	xor.b32  	%r2270, %r2268, %r2269;
	shf.l.wrap.b32 	%r2271, %r2266, %r2266, 7;
	xor.b32  	%r2272, %r2270, %r2271;
	and.b32  	%r2273, %r2266, %r2240;
	not.b32 	%r2274, %r2266;
	and.b32  	%r2275, %r2214, %r2274;
	or.b32  	%r2276, %r2273, %r2275;
	add.s32 	%r2277, %r2276, %r2188;
	add.s32 	%r2278, %r2277, %r2272;
	ld.const.u32 	%r2279, [K256+216];
	add.s32 	%r2280, %r2278, %r2279;
	add.s32 	%r2281, %r2280, %r766;
	shf.l.wrap.b32 	%r2282, %r2267, %r2267, 30;
	shf.l.wrap.b32 	%r2283, %r2267, %r2267, 19;
	xor.b32  	%r2284, %r2282, %r2283;
	shf.l.wrap.b32 	%r2285, %r2267, %r2267, 10;
	xor.b32  	%r2286, %r2284, %r2285;
	xor.b32  	%r2287, %r2241, %r2215;
	and.b32  	%r2288, %r2267, %r2287;
	and.b32  	%r2289, %r2241, %r2215;
	xor.b32  	%r2290, %r2288, %r2289;
	add.s32 	%r2291, %r2286, %r2290;
	add.s32 	%r2292, %r2281, %r2189;
	add.s32 	%r2293, %r2291, %r2281;
	shf.l.wrap.b32 	%r2294, %r2292, %r2292, 26;
	shf.l.wrap.b32 	%r2295, %r2292, %r2292, 21;
	xor.b32  	%r2296, %r2294, %r2295;
	shf.l.wrap.b32 	%r2297, %r2292, %r2292, 7;
	xor.b32  	%r2298, %r2296, %r2297;
	and.b32  	%r2299, %r2292, %r2266;
	not.b32 	%r2300, %r2292;
	and.b32  	%r2301, %r2240, %r2300;
	or.b32  	%r2302, %r2299, %r2301;
	add.s32 	%r2303, %r2302, %r2214;
	add.s32 	%r2304, %r2303, %r2298;
	ld.const.u32 	%r2305, [K256+220];
	add.s32 	%r2306, %r2304, %r2305;
	add.s32 	%r2307, %r2306, %r779;
	shf.l.wrap.b32 	%r2308, %r2293, %r2293, 30;
	shf.l.wrap.b32 	%r2309, %r2293, %r2293, 19;
	xor.b32  	%r2310, %r2308, %r2309;
	shf.l.wrap.b32 	%r2311, %r2293, %r2293, 10;
	xor.b32  	%r2312, %r2310, %r2311;
	xor.b32  	%r2313, %r2267, %r2241;
	and.b32  	%r2314, %r2293, %r2313;
	and.b32  	%r2315, %r2267, %r2241;
	xor.b32  	%r2316, %r2314, %r2315;
	add.s32 	%r2317, %r2312, %r2316;
	add.s32 	%r2318, %r2307, %r2215;
	add.s32 	%r2319, %r2317, %r2307;
	shf.l.wrap.b32 	%r2320, %r2318, %r2318, 26;
	shf.l.wrap.b32 	%r2321, %r2318, %r2318, 21;
	xor.b32  	%r2322, %r2320, %r2321;
	shf.l.wrap.b32 	%r2323, %r2318, %r2318, 7;
	xor.b32  	%r2324, %r2322, %r2323;
	and.b32  	%r2325, %r2318, %r2292;
	not.b32 	%r2326, %r2318;
	and.b32  	%r2327, %r2266, %r2326;
	or.b32  	%r2328, %r2325, %r2327;
	add.s32 	%r2329, %r2328, %r2240;
	add.s32 	%r2330, %r2329, %r2324;
	ld.const.u32 	%r2331, [K256+224];
	add.s32 	%r2332, %r2330, %r2331;
	add.s32 	%r2333, %r2332, %r792;
	shf.l.wrap.b32 	%r2334, %r2319, %r2319, 30;
	shf.l.wrap.b32 	%r2335, %r2319, %r2319, 19;
	xor.b32  	%r2336, %r2334, %r2335;
	shf.l.wrap.b32 	%r2337, %r2319, %r2319, 10;
	xor.b32  	%r2338, %r2336, %r2337;
	xor.b32  	%r2339, %r2293, %r2267;
	and.b32  	%r2340, %r2319, %r2339;
	and.b32  	%r2341, %r2293, %r2267;
	xor.b32  	%r2342, %r2340, %r2341;
	add.s32 	%r2343, %r2338, %r2342;
	add.s32 	%r2344, %r2333, %r2241;
	add.s32 	%r2345, %r2343, %r2333;
	shf.l.wrap.b32 	%r2346, %r2344, %r2344, 26;
	shf.l.wrap.b32 	%r2347, %r2344, %r2344, 21;
	xor.b32  	%r2348, %r2346, %r2347;
	shf.l.wrap.b32 	%r2349, %r2344, %r2344, 7;
	xor.b32  	%r2350, %r2348, %r2349;
	and.b32  	%r2351, %r2344, %r2318;
	not.b32 	%r2352, %r2344;
	and.b32  	%r2353, %r2292, %r2352;
	or.b32  	%r2354, %r2351, %r2353;
	add.s32 	%r2355, %r2354, %r2266;
	add.s32 	%r2356, %r2355, %r2350;
	ld.const.u32 	%r2357, [K256+228];
	add.s32 	%r2358, %r2356, %r2357;
	add.s32 	%r2359, %r2358, %r805;
	shf.l.wrap.b32 	%r2360, %r2345, %r2345, 30;
	shf.l.wrap.b32 	%r2361, %r2345, %r2345, 19;
	xor.b32  	%r2362, %r2360, %r2361;
	shf.l.wrap.b32 	%r2363, %r2345, %r2345, 10;
	xor.b32  	%r2364, %r2362, %r2363;
	xor.b32  	%r2365, %r2319, %r2293;
	and.b32  	%r2366, %r2345, %r2365;
	and.b32  	%r2367, %r2319, %r2293;
	xor.b32  	%r2368, %r2366, %r2367;
	add.s32 	%r2369, %r2364, %r2368;
	add.s32 	%r2370, %r2359, %r2267;
	add.s32 	%r2371, %r2369, %r2359;
	shf.l.wrap.b32 	%r2372, %r2370, %r2370, 26;
	shf.l.wrap.b32 	%r2373, %r2370, %r2370, 21;
	xor.b32  	%r2374, %r2372, %r2373;
	shf.l.wrap.b32 	%r2375, %r2370, %r2370, 7;
	xor.b32  	%r2376, %r2374, %r2375;
	and.b32  	%r2377, %r2370, %r2344;
	not.b32 	%r2378, %r2370;
	and.b32  	%r2379, %r2318, %r2378;
	or.b32  	%r2380, %r2377, %r2379;
	add.s32 	%r2381, %r2380, %r2292;
	add.s32 	%r2382, %r2381, %r2376;
	ld.const.u32 	%r2383, [K256+232];
	add.s32 	%r2384, %r2382, %r2383;
	add.s32 	%r2385, %r2384, %r818;
	shf.l.wrap.b32 	%r2386, %r2371, %r2371, 30;
	shf.l.wrap.b32 	%r2387, %r2371, %r2371, 19;
	xor.b32  	%r2388, %r2386, %r2387;
	shf.l.wrap.b32 	%r2389, %r2371, %r2371, 10;
	xor.b32  	%r2390, %r2388, %r2389;
	xor.b32  	%r2391, %r2345, %r2319;
	and.b32  	%r2392, %r2371, %r2391;
	and.b32  	%r2393, %r2345, %r2319;
	xor.b32  	%r2394, %r2392, %r2393;
	add.s32 	%r2395, %r2390, %r2394;
	add.s32 	%r2396, %r2385, %r2293;
	add.s32 	%r2397, %r2395, %r2385;
	shf.l.wrap.b32 	%r2398, %r2396, %r2396, 26;
	shf.l.wrap.b32 	%r2399, %r2396, %r2396, 21;
	xor.b32  	%r2400, %r2398, %r2399;
	shf.l.wrap.b32 	%r2401, %r2396, %r2396, 7;
	xor.b32  	%r2402, %r2400, %r2401;
	and.b32  	%r2403, %r2396, %r2370;
	not.b32 	%r2404, %r2396;
	and.b32  	%r2405, %r2344, %r2404;
	or.b32  	%r2406, %r2403, %r2405;
	add.s32 	%r2407, %r2406, %r2318;
	add.s32 	%r2408, %r2407, %r2402;
	ld.const.u32 	%r2409, [K256+236];
	add.s32 	%r2410, %r2408, %r2409;
	add.s32 	%r2411, %r2410, %r831;
	shf.l.wrap.b32 	%r2412, %r2397, %r2397, 30;
	shf.l.wrap.b32 	%r2413, %r2397, %r2397, 19;
	xor.b32  	%r2414, %r2412, %r2413;
	shf.l.wrap.b32 	%r2415, %r2397, %r2397, 10;
	xor.b32  	%r2416, %r2414, %r2415;
	xor.b32  	%r2417, %r2371, %r2345;
	and.b32  	%r2418, %r2397, %r2417;
	and.b32  	%r2419, %r2371, %r2345;
	xor.b32  	%r2420, %r2418, %r2419;
	add.s32 	%r2421, %r2416, %r2420;
	add.s32 	%r2422, %r2411, %r2319;
	add.s32 	%r2423, %r2421, %r2411;
	shf.l.wrap.b32 	%r2424, %r2422, %r2422, 26;
	shf.l.wrap.b32 	%r2425, %r2422, %r2422, 21;
	xor.b32  	%r2426, %r2424, %r2425;
	shf.l.wrap.b32 	%r2427, %r2422, %r2422, 7;
	xor.b32  	%r2428, %r2426, %r2427;
	and.b32  	%r2429, %r2422, %r2396;
	not.b32 	%r2430, %r2422;
	and.b32  	%r2431, %r2370, %r2430;
	or.b32  	%r2432, %r2429, %r2431;
	add.s32 	%r2433, %r2432, %r2344;
	add.s32 	%r2434, %r2433, %r2428;
	ld.const.u32 	%r2435, [K256+240];
	add.s32 	%r2436, %r2434, %r2435;
	add.s32 	%r2437, %r2436, %r844;
	shf.l.wrap.b32 	%r2438, %r2423, %r2423, 30;
	shf.l.wrap.b32 	%r2439, %r2423, %r2423, 19;
	xor.b32  	%r2440, %r2438, %r2439;
	shf.l.wrap.b32 	%r2441, %r2423, %r2423, 10;
	xor.b32  	%r2442, %r2440, %r2441;
	xor.b32  	%r2443, %r2397, %r2371;
	and.b32  	%r2444, %r2423, %r2443;
	and.b32  	%r2445, %r2397, %r2371;
	xor.b32  	%r2446, %r2444, %r2445;
	add.s32 	%r2447, %r2442, %r2446;
	add.s32 	%r2448, %r2437, %r2345;
	add.s32 	%r2449, %r2447, %r2437;
	shf.l.wrap.b32 	%r2450, %r2448, %r2448, 26;
	shf.l.wrap.b32 	%r2451, %r2448, %r2448, 21;
	xor.b32  	%r2452, %r2450, %r2451;
	shf.l.wrap.b32 	%r2453, %r2448, %r2448, 7;
	xor.b32  	%r2454, %r2452, %r2453;
	and.b32  	%r2455, %r2448, %r2422;
	not.b32 	%r2456, %r2448;
	and.b32  	%r2457, %r2396, %r2456;
	or.b32  	%r2458, %r2455, %r2457;
	add.s32 	%r2459, %r2458, %r2370;
	add.s32 	%r2460, %r2459, %r2454;
	ld.const.u32 	%r2461, [K256+244];
	add.s32 	%r2462, %r2460, %r2461;
	add.s32 	%r2463, %r2462, %r857;
	shf.l.wrap.b32 	%r2464, %r2449, %r2449, 30;
	shf.l.wrap.b32 	%r2465, %r2449, %r2449, 19;
	xor.b32  	%r2466, %r2464, %r2465;
	shf.l.wrap.b32 	%r2467, %r2449, %r2449, 10;
	xor.b32  	%r2468, %r2466, %r2467;
	xor.b32  	%r2469, %r2423, %r2397;
	and.b32  	%r2470, %r2449, %r2469;
	and.b32  	%r2471, %r2423, %r2397;
	xor.b32  	%r2472, %r2470, %r2471;
	add.s32 	%r2473, %r2468, %r2472;
	add.s32 	%r2474, %r2463, %r2371;
	add.s32 	%r2475, %r2473, %r2463;
	shf.l.wrap.b32 	%r2476, %r2474, %r2474, 26;
	shf.l.wrap.b32 	%r2477, %r2474, %r2474, 21;
	xor.b32  	%r2478, %r2476, %r2477;
	shf.l.wrap.b32 	%r2479, %r2474, %r2474, 7;
	xor.b32  	%r2480, %r2478, %r2479;
	and.b32  	%r2481, %r2474, %r2448;
	not.b32 	%r2482, %r2474;
	and.b32  	%r2483, %r2422, %r2482;
	or.b32  	%r2484, %r2481, %r2483;
	add.s32 	%r2485, %r2484, %r2396;
	add.s32 	%r2486, %r2485, %r2480;
	ld.const.u32 	%r2487, [K256+248];
	add.s32 	%r2488, %r2486, %r2487;
	add.s32 	%r2489, %r2488, %r870;
	shf.l.wrap.b32 	%r2490, %r2475, %r2475, 30;
	shf.l.wrap.b32 	%r2491, %r2475, %r2475, 19;
	xor.b32  	%r2492, %r2490, %r2491;
	shf.l.wrap.b32 	%r2493, %r2475, %r2475, 10;
	xor.b32  	%r2494, %r2492, %r2493;
	xor.b32  	%r2495, %r2449, %r2423;
	and.b32  	%r2496, %r2475, %r2495;
	and.b32  	%r2497, %r2449, %r2423;
	xor.b32  	%r2498, %r2496, %r2497;
	add.s32 	%r2499, %r2494, %r2498;
	add.s32 	%r2500, %r2489, %r2397;
	add.s32 	%r2501, %r2499, %r2489;
	shf.l.wrap.b32 	%r2502, %r2500, %r2500, 26;
	shf.l.wrap.b32 	%r2503, %r2500, %r2500, 21;
	xor.b32  	%r2504, %r2502, %r2503;
	shf.l.wrap.b32 	%r2505, %r2500, %r2500, 7;
	xor.b32  	%r2506, %r2504, %r2505;
	and.b32  	%r2507, %r2500, %r2474;
	not.b32 	%r2508, %r2500;
	and.b32  	%r2509, %r2448, %r2508;
	or.b32  	%r2510, %r2507, %r2509;
	add.s32 	%r2511, %r2510, %r2422;
	add.s32 	%r2512, %r2511, %r2506;
	ld.const.u32 	%r2513, [K256+252];
	add.s32 	%r2514, %r2512, %r2513;
	add.s32 	%r2515, %r2514, %r883;
	shf.l.wrap.b32 	%r2516, %r2501, %r2501, 30;
	shf.l.wrap.b32 	%r2517, %r2501, %r2501, 19;
	xor.b32  	%r2518, %r2516, %r2517;
	shf.l.wrap.b32 	%r2519, %r2501, %r2501, 10;
	xor.b32  	%r2520, %r2518, %r2519;
	xor.b32  	%r2521, %r2475, %r2449;
	and.b32  	%r2522, %r2501, %r2521;
	and.b32  	%r2523, %r2475, %r2449;
	xor.b32  	%r2524, %r2522, %r2523;
	add.s32 	%r2525, %r2520, %r2524;
	add.s32 	%r2526, %r2515, %r2423;
	add.s32 	%r2527, %r2525, %r2515;
	add.s32 	%r2528, %r2527, 1779033703;
	add.s32 	%r2529, %r2501, -1150833019;
	add.s32 	%r2530, %r2475, 1013904242;
	add.s32 	%r2531, %r2449, -1521486534;
	add.s32 	%r2532, %r2526, 1359893119;
	add.s32 	%r2533, %r2500, -1694144372;
	add.s32 	%r2534, %r2474, 528734635;
	add.s32 	%r2535, %r2448, 1541459225;
	shr.u32 	%r2536, %r2528, 24;
	shl.b32 	%r2537, %r1, 5;
	cvt.s64.s32 	%rd22, %r2537;
	cvta.to.global.u64 	%rd23, %rd12;
	add.s64 	%rd24, %rd23, %rd22;
	st.global.u8 	[%rd24], %r2536;
	shr.u32 	%r2538, %r2528, 16;
	st.global.u8 	[%rd24+1], %r2538;
	shr.u32 	%r2539, %r2528, 8;
	st.global.u8 	[%rd24+2], %r2539;
	st.global.u8 	[%rd24+3], %r2528;
	shr.u32 	%r2540, %r2529, 24;
	st.global.u8 	[%rd24+4], %r2540;
	shr.u32 	%r2541, %r2529, 16;
	st.global.u8 	[%rd24+5], %r2541;
	shr.u32 	%r2542, %r2529, 8;
	st.global.u8 	[%rd24+6], %r2542;
	st.global.u8 	[%rd24+7], %r2529;
	shr.u32 	%r2543, %r2530, 24;
	st.global.u8 	[%rd24+8], %r2543;
	shr.u32 	%r2544, %r2530, 16;
	st.global.u8 	[%rd24+9], %r2544;
	shr.u32 	%r2545, %r2530, 8;
	st.global.u8 	[%rd24+10], %r2545;
	st.global.u8 	[%rd24+11], %r2530;
	shr.u32 	%r2546, %r2531, 24;
	st.global.u8 	[%rd24+12], %r2546;
	shr.u32 	%r2547, %r2531, 16;
	st.global.u8 	[%rd24+13], %r2547;
	shr.u32 	%r2548, %r2531, 8;
	st.global.u8 	[%rd24+14], %r2548;
	st.global.u8 	[%rd24+15], %r2531;
	shr.u32 	%r2549, %r2532, 24;
	st.global.u8 	[%rd24+16], %r2549;
	shr.u32 	%r2550, %r2532, 16;
	st.global.u8 	[%rd24+17], %r2550;
	shr.u32 	%r2551, %r2532, 8;
	st.global.u8 	[%rd24+18], %r2551;
	st.global.u8 	[%rd24+19], %r2532;
	shr.u32 	%r2552, %r2533, 24;
	st.global.u8 	[%rd24+20], %r2552;
	shr.u32 	%r2553, %r2533, 16;
	st.global.u8 	[%rd24+21], %r2553;
	shr.u32 	%r2554, %r2533, 8;
	st.global.u8 	[%rd24+22], %r2554;
	st.global.u8 	[%rd24+23], %r2533;
	shr.u32 	%r2555, %r2534, 24;
	st.global.u8 	[%rd24+24], %r2555;
	shr.u32 	%r2556, %r2534, 16;
	st.global.u8 	[%rd24+25], %r2556;
	shr.u32 	%r2557, %r2534, 8;
	st.global.u8 	[%rd24+26], %r2557;
	st.global.u8 	[%rd24+27], %r2534;
	shr.u32 	%r2558, %r2535, 24;
	st.global.u8 	[%rd24+28], %r2558;
	shr.u32 	%r2559, %r2535, 16;
	st.global.u8 	[%rd24+29], %r2559;
	shr.u32 	%r2560, %r2535, 8;
	st.global.u8 	[%rd24+30], %r2560;
	st.global.u8 	[%rd24+31], %r2535;

$L__BB0_9:
	ret;

}
	// .globl	_Z16kernel_keccak256PKhiPhi
.visible .entry _Z16kernel_keccak256PKhiPhi(
	.param .u64 _Z16kernel_keccak256PKhiPhi_param_0,
	.param .u32 _Z16kernel_keccak256PKhiPhi_param_1,
	.param .u64 _Z16kernel_keccak256PKhiPhi_param_2,
	.param .u32 _Z16kernel_keccak256PKhiPhi_param_3
)
{
	.local .align 16 .b8 	__local_depot1[400];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<170>;
	.reg .b64 	%rd<317>;


	mov.u64 	%SPL, __local_depot1;
	ld.param.u64 	%rd92, [_Z16kernel_keccak256PKhiPhi_param_0];
	ld.param.u32 	%r15, [_Z16kernel_keccak256PKhiPhi_param_1];
	ld.param.u64 	%rd93, [_Z16kernel_keccak256PKhiPhi_param_2];
	ld.param.u32 	%r16, [_Z16kernel_keccak256PKhiPhi_param_3];
	add.u64 	%rd291, %SPL, 0;
	add.u64 	%rd2, %SPL, 192;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r1, %r18, %r17, %r19;
	setp.ge.s32 	%p1, %r1, %r16;
	@%p1 bra 	$L__BB1_13;

	cvta.to.global.u64 	%rd3, %rd93;
	cvta.to.global.u64 	%rd4, %rd92;
	mul.lo.s32 	%r21, %r1, %r15;
	cvt.s64.s32 	%rd5, %r21;
	shl.b32 	%r22, %r1, 5;
	cvt.s64.s32 	%rd6, %r22;
	mov.u32 	%r20, 0;
	mov.u64 	%rd288, %rd2;
	mov.u32 	%r164, %r20;

$L__BB1_2:
	st.local.v2.u32 	[%rd288], {%r20, %r20};
	add.s64 	%rd288, %rd288, 8;
	add.s32 	%r164, %r164, 1;
	setp.lt.u32 	%p2, %r164, 25;
	@%p2 bra 	$L__BB1_2;

	setp.lt.s32 	%p3, %r15, 1;
	@%p3 bra 	$L__BB1_10;

	add.s32 	%r25, %r15, -1;
	and.b32  	%r168, %r15, 3;
	setp.lt.u32 	%p4, %r25, 3;
	mov.u32 	%r166, 0;
	@%p4 bra 	$L__BB1_7;

	sub.s32 	%r5, %r168, %r15;
	add.s64 	%rd96, %rd4, %rd5;
	add.s64 	%rd289, %rd96, 1;

$L__BB1_6:
	shl.b32 	%r27, %r166, 3;
	and.b32  	%r28, %r27, 32;
	ld.global.u8 	%rd97, [%rd289+-1];
	shl.b64 	%rd98, %rd97, %r28;
	and.b32  	%r29, %r166, -8;
	cvt.u64.u32 	%rd99, %r29;
	add.s64 	%rd100, %rd2, %rd99;
	ld.local.u64 	%rd101, [%rd100];
	xor.b64  	%rd102, %rd98, %rd101;
	st.local.u64 	[%rd100], %rd102;
	add.s32 	%r30, %r27, 8;
	and.b32  	%r31, %r30, 40;
	ld.global.u8 	%rd103, [%rd289];
	shl.b64 	%rd104, %rd103, %r31;
	xor.b64  	%rd105, %rd104, %rd102;
	st.local.u64 	[%rd100], %rd105;
	add.s32 	%r32, %r27, 16;
	and.b32  	%r33, %r32, 48;
	ld.global.u8 	%rd106, [%rd289+1];
	shl.b64 	%rd107, %rd106, %r33;
	xor.b64  	%rd108, %rd107, %rd105;
	st.local.u64 	[%rd100], %rd108;
	add.s32 	%r34, %r27, 24;
	and.b32  	%r35, %r34, 56;
	ld.global.u8 	%rd109, [%rd289+2];
	shl.b64 	%rd110, %rd109, %r35;
	xor.b64  	%rd111, %rd110, %rd108;
	st.local.u64 	[%rd100], %rd111;
	add.s32 	%r166, %r166, 4;
	add.s32 	%r36, %r5, %r166;
	add.s64 	%rd289, %rd289, 4;
	setp.ne.s32 	%p5, %r36, 0;
	@%p5 bra 	$L__BB1_6;

$L__BB1_7:
	setp.eq.s32 	%p6, %r168, 0;
	@%p6 bra 	$L__BB1_10;

	cvt.s64.s32 	%rd112, %r166;
	add.s64 	%rd113, %rd112, %rd5;
	add.s64 	%rd290, %rd4, %rd113;

$L__BB1_9:
	.pragma "nounroll";
	shl.b32 	%r37, %r166, 3;
	and.b32  	%r38, %r37, 56;
	ld.global.u8 	%rd114, [%rd290];
	shl.b64 	%rd115, %rd114, %r38;
	and.b32  	%r39, %r166, -8;
	cvt.u64.u32 	%rd116, %r39;
	add.s64 	%rd117, %rd2, %rd116;
	ld.local.u64 	%rd118, [%rd117];
	xor.b64  	%rd119, %rd115, %rd118;
	st.local.u64 	[%rd117], %rd119;
	add.s32 	%r166, %r166, 1;
	add.s64 	%rd290, %rd290, 1;
	add.s32 	%r168, %r168, -1;
	setp.ne.s32 	%p7, %r168, 0;
	@%p7 bra 	$L__BB1_9;

$L__BB1_10:
	shr.s32 	%r41, %r15, 31;
	shr.u32 	%r42, %r41, 29;
	add.s32 	%r43, %r15, %r42;
	and.b32  	%r44, %r43, 536870904;
	sub.s32 	%r45, %r15, %r44;
	shl.b32 	%r46, %r45, 3;
	mov.u64 	%rd120, 1;
	shl.b64 	%rd121, %rd120, %r46;
	shr.s32 	%r47, %r43, 3;
	mul.wide.s32 	%rd122, %r47, 8;
	add.s64 	%rd123, %rd2, %rd122;
	ld.local.u64 	%rd124, [%rd123];
	xor.b64  	%rd125, %rd124, %rd121;
	st.local.u64 	[%rd123], %rd125;
	ld.local.u64 	%rd126, [%rd2+128];
	xor.b64  	%rd308, %rd126, -9223372036854775808;
	st.local.u64 	[%rd2+128], %rd308;
	mov.u64 	%rd127, 32898;
	st.local.v2.u64 	[%rd291], {%rd120, %rd127};
	mov.u64 	%rd128, -9223372034707259392;
	mov.u64 	%rd129, -9223372036854742902;
	st.local.v2.u64 	[%rd291+16], {%rd129, %rd128};
	mov.u64 	%rd130, 32907;
	mov.u64 	%rd131, 2147483649;
	st.local.v2.u64 	[%rd291+32], {%rd130, %rd131};
	mov.u64 	%rd132, -9223372036854743031;
	mov.u64 	%rd133, -9223372034707259263;
	st.local.v2.u64 	[%rd291+48], {%rd133, %rd132};
	mov.u64 	%rd134, 136;
	mov.u64 	%rd135, 138;
	st.local.v2.u64 	[%rd291+64], {%rd135, %rd134};
	mov.u64 	%rd136, 2147483658;
	mov.u64 	%rd137, 2147516425;
	st.local.v2.u64 	[%rd291+80], {%rd137, %rd136};
	mov.u64 	%rd138, -9223372036854775669;
	mov.u64 	%rd139, 2147516555;
	st.local.v2.u64 	[%rd291+96], {%rd139, %rd138};
	mov.u64 	%rd140, -9223372036854743037;
	mov.u64 	%rd141, -9223372036854742903;
	st.local.v2.u64 	[%rd291+112], {%rd141, %rd140};
	mov.u64 	%rd142, -9223372036854775680;
	mov.u64 	%rd143, -9223372036854743038;
	st.local.v2.u64 	[%rd291+128], {%rd143, %rd142};
	mov.u64 	%rd144, -9223372034707292150;
	mov.u64 	%rd145, 32778;
	st.local.v2.u64 	[%rd291+144], {%rd145, %rd144};
	mov.u64 	%rd146, -9223372036854742912;
	st.local.v2.u64 	[%rd291+160], {%rd133, %rd146};
	mov.u64 	%rd147, -9223372034707259384;
	st.local.v2.u64 	[%rd291+176], {%rd131, %rd147};
	ld.local.u64 	%rd316, [%rd2];
	ld.local.u64 	%rd315, [%rd2+40];
	ld.local.u64 	%rd314, [%rd2+80];
	ld.local.u64 	%rd313, [%rd2+120];
	ld.local.u64 	%rd312, [%rd2+160];
	ld.local.u64 	%rd311, [%rd2+8];
	ld.local.u64 	%rd310, [%rd2+48];
	ld.local.u64 	%rd309, [%rd2+88];
	ld.local.u64 	%rd307, [%rd2+168];
	ld.local.u64 	%rd306, [%rd2+16];
	ld.local.u64 	%rd305, [%rd2+56];
	ld.local.u64 	%rd304, [%rd2+96];
	ld.local.u64 	%rd303, [%rd2+136];
	ld.local.u64 	%rd302, [%rd2+176];
	ld.local.u64 	%rd301, [%rd2+24];
	ld.local.u64 	%rd300, [%rd2+64];
	ld.local.u64 	%rd299, [%rd2+104];
	ld.local.u64 	%rd298, [%rd2+144];
	ld.local.u64 	%rd297, [%rd2+184];
	ld.local.u64 	%rd296, [%rd2+32];
	ld.local.u64 	%rd295, [%rd2+72];
	ld.local.u64 	%rd294, [%rd2+112];
	ld.local.u64 	%rd293, [%rd2+152];
	ld.local.u64 	%rd292, [%rd2+192];
	mov.u32 	%r169, 0;

$L__BB1_11:
	xor.b64  	%rd148, %rd315, %rd316;
	xor.b64  	%rd149, %rd148, %rd314;
	xor.b64  	%rd150, %rd149, %rd313;
	xor.b64  	%rd151, %rd150, %rd312;
	xor.b64  	%rd152, %rd310, %rd311;
	xor.b64  	%rd153, %rd152, %rd309;
	xor.b64  	%rd154, %rd153, %rd308;
	xor.b64  	%rd155, %rd154, %rd307;
	xor.b64  	%rd156, %rd305, %rd306;
	xor.b64  	%rd157, %rd156, %rd304;
	xor.b64  	%rd158, %rd157, %rd303;
	xor.b64  	%rd159, %rd158, %rd302;
	xor.b64  	%rd160, %rd300, %rd301;
	xor.b64  	%rd161, %rd160, %rd299;
	xor.b64  	%rd162, %rd161, %rd298;
	xor.b64  	%rd163, %rd162, %rd297;
	xor.b64  	%rd164, %rd295, %rd296;
	xor.b64  	%rd165, %rd164, %rd294;
	xor.b64  	%rd166, %rd165, %rd293;
	xor.b64  	%rd167, %rd166, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r48,%dummy}, %rd155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r49}, %rd155;
	}
	shf.r.wrap.b32 	%r50, %r49, %r48, 1;
	shf.r.wrap.b32 	%r51, %r48, %r49, 1;
	mov.b64 	%rd168, {%r51, %r50};
	xor.b64  	%rd169, %rd168, %rd167;
	xor.b64  	%rd170, %rd169, %rd316;
	xor.b64  	%rd171, %rd169, %rd315;
	xor.b64  	%rd172, %rd169, %rd314;
	xor.b64  	%rd173, %rd169, %rd313;
	xor.b64  	%rd174, %rd169, %rd312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r52,%dummy}, %rd159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r53}, %rd159;
	}
	shf.r.wrap.b32 	%r54, %r53, %r52, 1;
	shf.r.wrap.b32 	%r55, %r52, %r53, 1;
	mov.b64 	%rd175, {%r55, %r54};
	xor.b64  	%rd176, %rd175, %rd151;
	xor.b64  	%rd177, %rd176, %rd311;
	xor.b64  	%rd178, %rd176, %rd310;
	xor.b64  	%rd179, %rd176, %rd309;
	xor.b64  	%rd180, %rd176, %rd308;
	xor.b64  	%rd181, %rd176, %rd307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r56,%dummy}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r57}, %rd163;
	}
	shf.r.wrap.b32 	%r58, %r57, %r56, 1;
	shf.r.wrap.b32 	%r59, %r56, %r57, 1;
	mov.b64 	%rd182, {%r59, %r58};
	xor.b64  	%rd183, %rd182, %rd155;
	xor.b64  	%rd184, %rd183, %rd306;
	xor.b64  	%rd185, %rd183, %rd305;
	xor.b64  	%rd186, %rd183, %rd304;
	xor.b64  	%rd187, %rd183, %rd303;
	xor.b64  	%rd188, %rd183, %rd302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r60,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r61}, %rd167;
	}
	shf.r.wrap.b32 	%r62, %r61, %r60, 1;
	shf.r.wrap.b32 	%r63, %r60, %r61, 1;
	mov.b64 	%rd189, {%r63, %r62};
	xor.b64  	%rd190, %rd189, %rd159;
	xor.b64  	%rd191, %rd190, %rd301;
	xor.b64  	%rd192, %rd190, %rd300;
	xor.b64  	%rd193, %rd190, %rd299;
	xor.b64  	%rd194, %rd190, %rd298;
	xor.b64  	%rd195, %rd190, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r64,%dummy}, %rd151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r65}, %rd151;
	}
	shf.r.wrap.b32 	%r66, %r65, %r64, 1;
	shf.r.wrap.b32 	%r67, %r64, %r65, 1;
	mov.b64 	%rd196, {%r67, %r66};
	xor.b64  	%rd197, %rd196, %rd163;
	xor.b64  	%rd198, %rd197, %rd296;
	xor.b64  	%rd199, %rd197, %rd295;
	xor.b64  	%rd200, %rd197, %rd294;
	xor.b64  	%rd201, %rd197, %rd293;
	xor.b64  	%rd202, %rd197, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r68,%dummy}, %rd177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r69}, %rd177;
	}
	shf.r.wrap.b32 	%r70, %r69, %r68, 1;
	shf.r.wrap.b32 	%r71, %r68, %r69, 1;
	mov.b64 	%rd203, {%r71, %r70};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r72,%dummy}, %rd172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r73}, %rd172;
	}
	shf.r.wrap.b32 	%r74, %r73, %r72, 3;
	shf.r.wrap.b32 	%r75, %r72, %r73, 3;
	mov.b64 	%rd204, {%r75, %r74};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r76,%dummy}, %rd185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd185;
	}
	shf.r.wrap.b32 	%r78, %r77, %r76, 6;
	shf.r.wrap.b32 	%r79, %r76, %r77, 6;
	mov.b64 	%rd205, {%r79, %r78};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r80,%dummy}, %rd179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r81}, %rd179;
	}
	shf.r.wrap.b32 	%r82, %r81, %r80, 10;
	shf.r.wrap.b32 	%r83, %r80, %r81, 10;
	mov.b64 	%rd206, {%r83, %r82};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r84,%dummy}, %rd187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r85}, %rd187;
	}
	shf.r.wrap.b32 	%r86, %r85, %r84, 15;
	shf.r.wrap.b32 	%r87, %r84, %r85, 15;
	mov.b64 	%rd207, {%r87, %r86};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r88,%dummy}, %rd194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r89}, %rd194;
	}
	shf.r.wrap.b32 	%r90, %r89, %r88, 21;
	shf.r.wrap.b32 	%r91, %r88, %r89, 21;
	mov.b64 	%rd208, {%r91, %r90};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r92,%dummy}, %rd191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r93}, %rd191;
	}
	shf.r.wrap.b32 	%r94, %r93, %r92, 28;
	shf.r.wrap.b32 	%r95, %r92, %r93, 28;
	mov.b64 	%rd209, {%r95, %r94};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r96}, %rd171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd171;
	}
	shf.l.wrap.b32 	%r98, %r97, %r96, 28;
	shf.l.wrap.b32 	%r99, %r96, %r97, 28;
	mov.b64 	%rd210, {%r99, %r98};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r100}, %rd180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r101,%dummy}, %rd180;
	}
	shf.l.wrap.b32 	%r102, %r101, %r100, 19;
	shf.l.wrap.b32 	%r103, %r100, %r101, 19;
	mov.b64 	%rd211, {%r103, %r102};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r104}, %rd192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r105,%dummy}, %rd192;
	}
	shf.l.wrap.b32 	%r106, %r105, %r104, 9;
	shf.l.wrap.b32 	%r107, %r104, %r105, 9;
	mov.b64 	%rd212, {%r107, %r106};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r108,%dummy}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r109}, %rd181;
	}
	shf.r.wrap.b32 	%r110, %r109, %r108, 2;
	shf.r.wrap.b32 	%r111, %r108, %r109, 2;
	mov.b64 	%rd213, {%r111, %r110};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r112,%dummy}, %rd202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r113}, %rd202;
	}
	shf.r.wrap.b32 	%r114, %r113, %r112, 14;
	shf.r.wrap.b32 	%r115, %r112, %r113, 14;
	mov.b64 	%rd214, {%r115, %r114};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r116,%dummy}, %rd198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r117}, %rd198;
	}
	shf.r.wrap.b32 	%r118, %r117, %r116, 27;
	shf.r.wrap.b32 	%r119, %r116, %r117, 27;
	mov.b64 	%rd215, {%r119, %r118};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r120}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r121,%dummy}, %rd173;
	}
	shf.l.wrap.b32 	%r122, %r121, %r120, 23;
	shf.l.wrap.b32 	%r123, %r120, %r121, 23;
	mov.b64 	%rd216, {%r123, %r122};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r124}, %rd195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r125,%dummy}, %rd195;
	}
	shf.l.wrap.b32 	%r126, %r125, %r124, 8;
	shf.l.wrap.b32 	%r127, %r124, %r125, 8;
	mov.b64 	%rd217, {%r127, %r126};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r128,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r129}, %rd201;
	}
	shf.r.wrap.b32 	%r130, %r129, %r128, 8;
	shf.r.wrap.b32 	%r131, %r128, %r129, 8;
	mov.b64 	%rd218, {%r131, %r130};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r132,%dummy}, %rd193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r133}, %rd193;
	}
	shf.r.wrap.b32 	%r134, %r133, %r132, 25;
	shf.r.wrap.b32 	%r135, %r132, %r133, 25;
	mov.b64 	%rd219, {%r135, %r134};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r136}, %rd186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r137,%dummy}, %rd186;
	}
	shf.l.wrap.b32 	%r138, %r137, %r136, 21;
	shf.l.wrap.b32 	%r139, %r136, %r137, 21;
	mov.b64 	%rd220, {%r139, %r138};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r140}, %rd184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r141,%dummy}, %rd184;
	}
	shf.l.wrap.b32 	%r142, %r141, %r140, 2;
	shf.l.wrap.b32 	%r143, %r140, %r141, 2;
	mov.b64 	%rd221, {%r143, %r142};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r144,%dummy}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r145}, %rd174;
	}
	shf.r.wrap.b32 	%r146, %r145, %r144, 18;
	shf.r.wrap.b32 	%r147, %r144, %r145, 18;
	mov.b64 	%rd222, {%r147, %r146};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r148}, %rd200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r149,%dummy}, %rd200;
	}
	shf.l.wrap.b32 	%r150, %r149, %r148, 25;
	shf.l.wrap.b32 	%r151, %r148, %r149, 25;
	mov.b64 	%rd223, {%r151, %r150};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r152}, %rd188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd188;
	}
	shf.l.wrap.b32 	%r154, %r153, %r152, 3;
	shf.l.wrap.b32 	%r155, %r152, %r153, 3;
	mov.b64 	%rd224, {%r155, %r154};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r156,%dummy}, %rd199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r157}, %rd199;
	}
	shf.r.wrap.b32 	%r158, %r157, %r156, 20;
	shf.r.wrap.b32 	%r159, %r156, %r157, 20;
	mov.b64 	%rd225, {%r159, %r158};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r160}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r161,%dummy}, %rd178;
	}
	shf.l.wrap.b32 	%r162, %r161, %r160, 20;
	shf.l.wrap.b32 	%r163, %r160, %r161, 20;
	mov.b64 	%rd226, {%r163, %r162};
	xor.b64  	%rd227, %rd209, %rd170;
	xor.b64  	%rd228, %rd227, %rd203;
	xor.b64  	%rd229, %rd228, %rd215;
	xor.b64  	%rd230, %rd229, %rd221;
	xor.b64  	%rd231, %rd225, %rd226;
	xor.b64  	%rd232, %rd231, %rd205;
	xor.b64  	%rd233, %rd232, %rd210;
	xor.b64  	%rd234, %rd233, %rd212;
	xor.b64  	%rd235, %rd204, %rd220;
	xor.b64  	%rd236, %rd235, %rd219;
	xor.b64  	%rd237, %rd236, %rd206;
	xor.b64  	%rd238, %rd237, %rd223;
	xor.b64  	%rd239, %rd211, %rd208;
	xor.b64  	%rd240, %rd239, %rd218;
	xor.b64  	%rd241, %rd240, %rd207;
	xor.b64  	%rd242, %rd241, %rd216;
	xor.b64  	%rd243, %rd224, %rd214;
	xor.b64  	%rd244, %rd243, %rd222;
	xor.b64  	%rd245, %rd244, %rd217;
	xor.b64  	%rd246, %rd245, %rd213;
	not.b64 	%rd247, %rd234;
	and.b64  	%rd248, %rd238, %rd247;
	xor.b64  	%rd249, %rd170, %rd248;
	xor.b64  	%rd315, %rd209, %rd248;
	xor.b64  	%rd314, %rd203, %rd248;
	xor.b64  	%rd313, %rd215, %rd248;
	xor.b64  	%rd312, %rd221, %rd248;
	not.b64 	%rd250, %rd238;
	and.b64  	%rd251, %rd242, %rd250;
	xor.b64  	%rd311, %rd226, %rd251;
	xor.b64  	%rd310, %rd225, %rd251;
	xor.b64  	%rd309, %rd205, %rd251;
	xor.b64  	%rd308, %rd210, %rd251;
	xor.b64  	%rd307, %rd212, %rd251;
	not.b64 	%rd252, %rd242;
	and.b64  	%rd253, %rd246, %rd252;
	xor.b64  	%rd306, %rd220, %rd253;
	xor.b64  	%rd305, %rd204, %rd253;
	xor.b64  	%rd304, %rd219, %rd253;
	xor.b64  	%rd303, %rd206, %rd253;
	xor.b64  	%rd302, %rd223, %rd253;
	not.b64 	%rd254, %rd246;
	and.b64  	%rd255, %rd230, %rd254;
	xor.b64  	%rd301, %rd208, %rd255;
	xor.b64  	%rd300, %rd211, %rd255;
	xor.b64  	%rd299, %rd218, %rd255;
	xor.b64  	%rd298, %rd207, %rd255;
	xor.b64  	%rd297, %rd216, %rd255;
	not.b64 	%rd256, %rd230;
	and.b64  	%rd257, %rd234, %rd256;
	xor.b64  	%rd296, %rd214, %rd257;
	xor.b64  	%rd295, %rd224, %rd257;
	xor.b64  	%rd294, %rd222, %rd257;
	xor.b64  	%rd293, %rd217, %rd257;
	xor.b64  	%rd292, %rd213, %rd257;
	ld.local.u64 	%rd258, [%rd291];
	xor.b64  	%rd316, %rd249, %rd258;
	add.s64 	%rd291, %rd291, 8;
	add.s32 	%r169, %r169, 1;
	setp.ne.s32 	%p8, %r169, 24;
	@%p8 bra 	$L__BB1_11;

	add.s64 	%rd259, %rd3, %rd6;
	st.global.u8 	[%rd259], %rd316;
	shr.u64 	%rd260, %rd316, 8;
	st.global.u8 	[%rd259+1], %rd260;
	shr.u64 	%rd261, %rd316, 16;
	st.global.u8 	[%rd259+2], %rd261;
	shr.u64 	%rd262, %rd316, 24;
	st.global.u8 	[%rd259+3], %rd262;
	shr.u64 	%rd263, %rd316, 32;
	st.global.u8 	[%rd259+4], %rd263;
	shr.u64 	%rd264, %rd316, 40;
	st.global.u8 	[%rd259+5], %rd264;
	shr.u64 	%rd265, %rd316, 48;
	st.global.u8 	[%rd259+6], %rd265;
	shr.u64 	%rd266, %rd316, 56;
	st.global.u8 	[%rd259+7], %rd266;
	st.global.u8 	[%rd259+8], %rd311;
	shr.u64 	%rd267, %rd311, 8;
	st.global.u8 	[%rd259+9], %rd267;
	shr.u64 	%rd268, %rd311, 16;
	st.global.u8 	[%rd259+10], %rd268;
	shr.u64 	%rd269, %rd311, 24;
	st.global.u8 	[%rd259+11], %rd269;
	shr.u64 	%rd270, %rd311, 32;
	st.global.u8 	[%rd259+12], %rd270;
	shr.u64 	%rd271, %rd311, 40;
	st.global.u8 	[%rd259+13], %rd271;
	shr.u64 	%rd272, %rd311, 48;
	st.global.u8 	[%rd259+14], %rd272;
	shr.u64 	%rd273, %rd311, 56;
	st.global.u8 	[%rd259+15], %rd273;
	st.global.u8 	[%rd259+16], %rd306;
	shr.u64 	%rd274, %rd306, 8;
	st.global.u8 	[%rd259+17], %rd274;
	shr.u64 	%rd275, %rd306, 16;
	st.global.u8 	[%rd259+18], %rd275;
	shr.u64 	%rd276, %rd306, 24;
	st.global.u8 	[%rd259+19], %rd276;
	shr.u64 	%rd277, %rd306, 32;
	st.global.u8 	[%rd259+20], %rd277;
	shr.u64 	%rd278, %rd306, 40;
	st.global.u8 	[%rd259+21], %rd278;
	shr.u64 	%rd279, %rd306, 48;
	st.global.u8 	[%rd259+22], %rd279;
	shr.u64 	%rd280, %rd306, 56;
	st.global.u8 	[%rd259+23], %rd280;
	st.global.u8 	[%rd259+24], %rd301;
	shr.u64 	%rd281, %rd301, 8;
	st.global.u8 	[%rd259+25], %rd281;
	shr.u64 	%rd282, %rd301, 16;
	st.global.u8 	[%rd259+26], %rd282;
	shr.u64 	%rd283, %rd301, 24;
	st.global.u8 	[%rd259+27], %rd283;
	shr.u64 	%rd284, %rd301, 32;
	st.global.u8 	[%rd259+28], %rd284;
	shr.u64 	%rd285, %rd301, 40;
	st.global.u8 	[%rd259+29], %rd285;
	shr.u64 	%rd286, %rd301, 48;
	st.global.u8 	[%rd259+30], %rd286;
	shr.u64 	%rd287, %rd301, 56;
	st.global.u8 	[%rd259+31], %rd287;

$L__BB1_13:
	ret;

}
	// .globl	_Z22kernel_wordlist_lookupPciPi
.visible .entry _Z22kernel_wordlist_lookupPciPi(
	.param .u64 _Z22kernel_wordlist_lookupPciPi_param_0,
	.param .u32 _Z22kernel_wordlist_lookupPciPi_param_1,
	.param .u64 _Z22kernel_wordlist_lookupPciPi_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<16>;


	ld.param.u64 	%rd5, [_Z22kernel_wordlist_lookupPciPi_param_0];
	ld.param.u32 	%r6, [_Z22kernel_wordlist_lookupPciPi_param_1];
	ld.param.u64 	%rd6, [_Z22kernel_wordlist_lookupPciPi_param_2];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.s32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB2_7;

	cvta.to.global.u64 	%rd7, %rd6;
	mul.lo.s32 	%r11, %r1, 10;
	cvt.s64.s32 	%rd1, %r11;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd2, %rd7, %rd8;
	mov.u32 	%r12, -1;
	st.global.u32 	[%rd2], %r12;
	cvta.to.global.u64 	%rd3, %rd5;
	mov.u32 	%r10, 0;
	mov.u32 	%r14, %r10;

$L__BB2_2:
	cvt.s64.s32 	%rd4, %r14;
	mov.u32 	%r15, %r10;

$L__BB2_3:
	cvt.s64.s32 	%rd9, %r15;
	add.s64 	%rd10, %rd9, %rd1;
	add.s64 	%rd11, %rd3, %rd10;
	mul.lo.s64 	%rd12, %rd4, 11;
	mov.u64 	%rd13, wordlist;
	add.s64 	%rd14, %rd13, %rd12;
	add.s64 	%rd15, %rd14, %rd9;
	ld.const.u8 	%rs2, [%rd15];
	ld.global.u8 	%rs1, [%rd11];
	setp.eq.s16 	%p2, %rs1, %rs2;
	@%p2 bra 	$L__BB2_5;
	bra.uni 	$L__BB2_4;

$L__BB2_5:
	setp.ne.s16 	%p4, %rs1, 0;
	add.s32 	%r15, %r15, 1;
	setp.lt.u32 	%p5, %r15, 10;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB2_3;
	bra.uni 	$L__BB2_6;

$L__BB2_4:
	add.s32 	%r14, %r14, 1;
	setp.lt.u32 	%p3, %r14, 2048;
	@%p3 bra 	$L__BB2_2;
	bra.uni 	$L__BB2_7;

$L__BB2_6:
	st.global.u32 	[%rd2], %r14;

$L__BB2_7:
	ret;

}
	// .globl	_Z24kernel_validate_mnemonicPiiiS_
.visible .entry _Z24kernel_validate_mnemonicPiiiS_(
	.param .u64 _Z24kernel_validate_mnemonicPiiiS__param_0,
	.param .u32 _Z24kernel_validate_mnemonicPiiiS__param_1,
	.param .u32 _Z24kernel_validate_mnemonicPiiiS__param_2,
	.param .u64 _Z24kernel_validate_mnemonicPiiiS__param_3
)
{
	.local .align 16 .b8 	__local_depot3[96];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<118>;
	.reg .b32 	%r<2645>;
	.reg .b64 	%rd<53>;


	mov.u64 	%SPL, __local_depot3;
	ld.param.u64 	%rd12, [_Z24kernel_validate_mnemonicPiiiS__param_0];
	ld.param.u32 	%r36, [_Z24kernel_validate_mnemonicPiiiS__param_1];
	ld.param.u32 	%r37, [_Z24kernel_validate_mnemonicPiiiS__param_2];
	cvta.to.global.u64 	%rd1, %rd12;
	add.u64 	%rd2, %SPL, 0;
	add.u64 	%rd3, %SPL, 64;
	mov.u32 	%r38, %ntid.x;
	mov.u32 	%r39, %ctaid.x;
	mov.u32 	%r40, %tid.x;
	mad.lo.s32 	%r1, %r39, %r38, %r40;
	setp.ge.s32 	%p1, %r1, %r37;
	@%p1 bra 	$L__BB3_20;

	mul.lo.s32 	%r2, %r36, 11;
	mul.hi.s32 	%r41, %r36, 1431655766;
	shr.u32 	%r42, %r41, 31;
	add.s32 	%r3, %r41, %r42;
	sub.s32 	%r4, %r2, %r3;
	shr.s32 	%r43, %r4, 31;
	shr.u32 	%r44, %r43, 29;
	add.s32 	%r45, %r4, %r44;
	shr.s32 	%r5, %r45, 3;
	mov.u32 	%r46, 0;
	st.local.v4.u32 	[%rd3], {%r46, %r46, %r46, %r46};
	st.local.v4.u32 	[%rd3+16], {%r46, %r46, %r46, %r46};
	setp.lt.s32 	%p2, %r4, 1;
	@%p2 bra 	$L__BB3_8;

	mul.lo.s32 	%r6, %r1, %r36;
	not.b32 	%r48, %r3;
	add.s32 	%r49, %r2, %r48;
	and.b32  	%r2638, %r4, 3;
	setp.lt.u32 	%p3, %r49, 3;
	mov.u32 	%r2635, %r46;
	@%p3 bra 	$L__BB3_5;

	sub.s32 	%r2634, %r4, %r2638;
	mov.u32 	%r2635, 0;

$L__BB3_4:
	.pragma "nounroll";
	mul.wide.u32 	%rd15, %r2635, -1171354717;
	shr.u64 	%rd16, %rd15, 35;
	cvt.u32.u64 	%r51, %rd16;
	mul.lo.s32 	%r52, %r51, 11;
	sub.s32 	%r53, %r52, %r2635;
	add.s32 	%r54, %r53, 10;
	add.s32 	%r55, %r51, %r6;
	mul.wide.s32 	%rd17, %r55, 4;
	add.s64 	%rd18, %rd1, %rd17;
	ld.global.u32 	%r56, [%rd18];
	shr.u32 	%r57, %r56, %r54;
	and.b32  	%r58, %r2635, 4;
	xor.b32  	%r59, %r58, 7;
	shr.u32 	%r60, %r2635, 3;
	cvt.u64.u32 	%rd19, %r60;
	add.s64 	%rd20, %rd3, %rd19;
	cvt.u16.u32 	%rs1, %r57;
	and.b16  	%rs2, %rs1, 1;
	shl.b16 	%rs3, %rs2, %r59;
	ld.local.u8 	%rs4, [%rd20];
	or.b16  	%rs5, %rs4, %rs3;
	st.local.u8 	[%rd20], %rs5;
	add.s32 	%r61, %r2635, 1;
	mul.wide.u32 	%rd21, %r61, -1171354717;
	shr.u64 	%rd22, %rd21, 35;
	cvt.u32.u64 	%r62, %rd22;
	mul.lo.s32 	%r63, %r62, 11;
	sub.s32 	%r64, %r63, %r61;
	add.s32 	%r65, %r64, 10;
	add.s32 	%r66, %r62, %r6;
	mul.wide.s32 	%rd23, %r66, 4;
	add.s64 	%rd24, %rd1, %rd23;
	ld.global.u32 	%r67, [%rd24];
	shr.u32 	%r68, %r67, %r65;
	and.b32  	%r69, %r61, 4;
	xor.b32  	%r70, %r69, 6;
	cvt.u16.u32 	%rs6, %r68;
	and.b16  	%rs7, %rs6, 1;
	shl.b16 	%rs8, %rs7, %r70;
	or.b16  	%rs9, %rs5, %rs8;
	st.local.u8 	[%rd20], %rs9;
	add.s32 	%r71, %r2635, 2;
	mul.wide.u32 	%rd25, %r71, -1171354717;
	shr.u64 	%rd26, %rd25, 35;
	cvt.u32.u64 	%r72, %rd26;
	mul.lo.s32 	%r73, %r72, 11;
	sub.s32 	%r74, %r73, %r71;
	add.s32 	%r75, %r74, 10;
	add.s32 	%r76, %r72, %r6;
	mul.wide.s32 	%rd27, %r76, 4;
	add.s64 	%rd28, %rd1, %rd27;
	ld.global.u32 	%r77, [%rd28];
	shr.u32 	%r78, %r77, %r75;
	and.b32  	%r79, %r71, 4;
	xor.b32  	%r80, %r79, 5;
	cvt.u16.u32 	%rs10, %r78;
	and.b16  	%rs11, %rs10, 1;
	shl.b16 	%rs12, %rs11, %r80;
	or.b16  	%rs13, %rs9, %rs12;
	st.local.u8 	[%rd20], %rs13;
	add.s32 	%r81, %r2635, 3;
	not.b32 	%r82, %r81;
	mul.wide.u32 	%rd29, %r81, -1171354717;
	shr.u64 	%rd30, %rd29, 35;
	cvt.u32.u64 	%r83, %rd30;
	mul.lo.s32 	%r84, %r83, 11;
	sub.s32 	%r85, %r84, %r81;
	add.s32 	%r86, %r85, 10;
	add.s32 	%r87, %r83, %r6;
	mul.wide.s32 	%rd31, %r87, 4;
	add.s64 	%rd32, %rd1, %rd31;
	ld.global.u32 	%r88, [%rd32];
	shr.u32 	%r89, %r88, %r86;
	and.b32  	%r90, %r82, 4;
	cvt.u16.u32 	%rs14, %r89;
	and.b16  	%rs15, %rs14, 1;
	shl.b16 	%rs16, %rs15, %r90;
	or.b16  	%rs17, %rs13, %rs16;
	st.local.u8 	[%rd20], %rs17;
	add.s32 	%r2635, %r2635, 4;
	add.s32 	%r2634, %r2634, -4;
	setp.ne.s32 	%p4, %r2634, 0;
	@%p4 bra 	$L__BB3_4;

$L__BB3_5:
	setp.eq.s32 	%p5, %r2638, 0;
	@%p5 bra 	$L__BB3_8;

	mov.u32 	%r92, 10;
	sub.s32 	%r14, %r92, %r2635;
	mov.u32 	%r2636, 0;

$L__BB3_7:
	.pragma "nounroll";
	not.b32 	%r93, %r2635;
	mul.wide.u32 	%rd33, %r2635, -1171354717;
	shr.u64 	%rd34, %rd33, 35;
	cvt.u32.u64 	%r94, %rd34;
	mad.lo.s32 	%r95, %r94, 11, %r14;
	add.s32 	%r96, %r2636, %r95;
	add.s32 	%r97, %r94, %r6;
	mul.wide.s32 	%rd35, %r97, 4;
	add.s64 	%rd36, %rd1, %rd35;
	ld.global.u32 	%r98, [%rd36];
	shr.u32 	%r99, %r98, %r96;
	and.b32  	%r100, %r93, 7;
	shr.u32 	%r101, %r2635, 3;
	cvt.u64.u32 	%rd37, %r101;
	add.s64 	%rd38, %rd3, %rd37;
	cvt.u16.u32 	%rs18, %r99;
	and.b16  	%rs19, %rs18, 1;
	shl.b16 	%rs20, %rs19, %r100;
	ld.local.u8 	%rs21, [%rd38];
	or.b16  	%rs22, %rs21, %rs20;
	st.local.u8 	[%rd38], %rs22;
	add.s32 	%r2635, %r2635, 1;
	add.s32 	%r2636, %r2636, -1;
	add.s32 	%r2638, %r2638, -1;
	setp.ne.s32 	%p6, %r2638, 0;
	@%p6 bra 	$L__BB3_7;

$L__BB3_8:
	st.local.v4.u32 	[%rd2], {%r46, %r46, %r46, %r46};
	st.local.v4.u32 	[%rd2+16], {%r46, %r46, %r46, %r46};
	st.local.v4.u32 	[%rd2+32], {%r46, %r46, %r46, %r46};
	st.local.v4.u32 	[%rd2+48], {%r46, %r46, %r46, %r46};
	setp.lt.s32 	%p7, %r4, 8;
	@%p7 bra 	$L__BB3_15;

	add.s32 	%r104, %r5, -1;
	and.b32  	%r2642, %r5, 3;
	setp.lt.u32 	%p8, %r104, 3;
	mov.u32 	%r2641, 0;
	@%p8 bra 	$L__BB3_12;

	sub.s32 	%r2640, %r5, %r2642;

$L__BB3_11:
	cvt.s64.s32 	%rd39, %r2641;
	add.s64 	%rd40, %rd3, %rd39;
	ld.local.v4.u8 	{%rs23, %rs24, %rs25, %rs26}, [%rd40];
	add.s64 	%rd41, %rd2, %rd39;
	st.local.v4.u8 	[%rd41], {%rs23, %rs24, %rs25, %rs26};
	add.s32 	%r2641, %r2641, 4;
	add.s32 	%r2640, %r2640, -4;
	setp.ne.s32 	%p9, %r2640, 0;
	@%p9 bra 	$L__BB3_11;

$L__BB3_12:
	setp.eq.s32 	%p10, %r2642, 0;
	@%p10 bra 	$L__BB3_15;

	cvt.s64.s32 	%rd42, %r2641;
	add.s64 	%rd52, %rd2, %rd42;
	add.s64 	%rd51, %rd3, %rd42;

$L__BB3_14:
	.pragma "nounroll";
	ld.local.u8 	%rs31, [%rd51];
	st.local.u8 	[%rd52], %rs31;
	add.s64 	%rd52, %rd52, 1;
	add.s64 	%rd51, %rd51, 1;
	add.s32 	%r2642, %r2642, -1;
	setp.ne.s32 	%p11, %r2642, 0;
	@%p11 bra 	$L__BB3_14;

$L__BB3_15:
	cvt.s64.s32 	%rd43, %r5;
	add.s64 	%rd44, %rd2, %rd43;
	mov.u16 	%rs32, 128;
	st.local.u8 	[%rd44], %rs32;
	shr.u32 	%r107, %r5, 5;
	cvt.u16.u32 	%rs33, %r5;
	mov.u32 	%r106, 1;
	shl.b16 	%rs34, %rs33, 3;
	cvt.u16.u32 	%rs35, %r107;
	st.local.v2.u8 	[%rd2+62], {%rs35, %rs34};
	ld.local.v4.u32 	{%r108, %r109, %r110, %r111}, [%rd2];
	mov.b32 	{%rs36, %rs37}, %r108;
	shr.u16 	%rs38, %rs36, 8;
	shr.u16 	%rs39, %rs37, 8;
	mov.b32 	{%rs40, %rs41}, %r109;
	shr.u16 	%rs42, %rs40, 8;
	shr.u16 	%rs43, %rs41, 8;
	mov.b32 	{%rs44, %rs45}, %r110;
	shr.u16 	%rs46, %rs44, 8;
	shr.u16 	%rs47, %rs45, 8;
	mov.b32 	{%rs48, %rs49}, %r111;
	shr.u16 	%rs50, %rs48, 8;
	shr.u16 	%rs51, %rs49, 8;
	cvt.u32.u16 	%r116, %rs36;
	shl.b32 	%r117, %r116, 24;
	cvt.u32.u16 	%r118, %rs38;
	shl.b32 	%r119, %r118, 16;
	or.b32  	%r120, %r119, %r117;
	and.b16  	%rs52, %rs37, 255;
	mul.wide.u16 	%r121, %rs52, 256;
	or.b32  	%r122, %r120, %r121;
	cvt.u32.u16 	%r123, %rs39;
	or.b32  	%r124, %r122, %r123;
	cvt.u32.u16 	%r125, %rs40;
	shl.b32 	%r126, %r125, 24;
	cvt.u32.u16 	%r127, %rs42;
	shl.b32 	%r128, %r127, 16;
	or.b32  	%r129, %r128, %r126;
	and.b16  	%rs53, %rs41, 255;
	mul.wide.u16 	%r130, %rs53, 256;
	or.b32  	%r131, %r129, %r130;
	cvt.u32.u16 	%r132, %rs43;
	or.b32  	%r133, %r131, %r132;
	cvt.u32.u16 	%r134, %rs44;
	shl.b32 	%r135, %r134, 24;
	cvt.u32.u16 	%r136, %rs46;
	shl.b32 	%r137, %r136, 16;
	or.b32  	%r138, %r137, %r135;
	and.b16  	%rs54, %rs45, 255;
	mul.wide.u16 	%r139, %rs54, 256;
	or.b32  	%r140, %r138, %r139;
	cvt.u32.u16 	%r141, %rs47;
	or.b32  	%r142, %r140, %r141;
	cvt.u32.u16 	%r143, %rs48;
	shl.b32 	%r144, %r143, 24;
	cvt.u32.u16 	%r145, %rs50;
	shl.b32 	%r146, %r145, 16;
	or.b32  	%r147, %r146, %r144;
	and.b16  	%rs55, %rs49, 255;
	mul.wide.u16 	%r148, %rs55, 256;
	or.b32  	%r149, %r147, %r148;
	cvt.u32.u16 	%r150, %rs51;
	or.b32  	%r151, %r149, %r150;
	ld.local.v4.u32 	{%r152, %r153, %r154, %r155}, [%rd2+16];
	mov.b32 	{%rs56, %rs57}, %r152;
	shr.u16 	%rs58, %rs56, 8;
	shr.u16 	%rs59, %rs57, 8;
	mov.b32 	{%rs60, %rs61}, %r153;
	shr.u16 	%rs62, %rs60, 8;
	shr.u16 	%rs63, %rs61, 8;
	mov.b32 	{%rs64, %rs65}, %r154;
	shr.u16 	%rs66, %rs64, 8;
	shr.u16 	%rs67, %rs65, 8;
	mov.b32 	{%rs68, %rs69}, %r155;
	shr.u16 	%rs70, %rs68, 8;
	shr.u16 	%rs71, %rs69, 8;
	cvt.u32.u16 	%r160, %rs56;
	shl.b32 	%r161, %r160, 24;
	cvt.u32.u16 	%r162, %rs58;
	shl.b32 	%r163, %r162, 16;
	or.b32  	%r164, %r163, %r161;
	and.b16  	%rs72, %rs57, 255;
	mul.wide.u16 	%r165, %rs72, 256;
	or.b32  	%r166, %r164, %r165;
	cvt.u32.u16 	%r167, %rs59;
	or.b32  	%r168, %r166, %r167;
	cvt.u32.u16 	%r169, %rs60;
	shl.b32 	%r170, %r169, 24;
	cvt.u32.u16 	%r171, %rs62;
	shl.b32 	%r172, %r171, 16;
	or.b32  	%r173, %r172, %r170;
	and.b16  	%rs73, %rs61, 255;
	mul.wide.u16 	%r174, %rs73, 256;
	or.b32  	%r175, %r173, %r174;
	cvt.u32.u16 	%r176, %rs63;
	or.b32  	%r177, %r175, %r176;
	cvt.u32.u16 	%r178, %rs64;
	shl.b32 	%r179, %r178, 24;
	cvt.u32.u16 	%r180, %rs66;
	shl.b32 	%r181, %r180, 16;
	or.b32  	%r182, %r181, %r179;
	and.b16  	%rs74, %rs65, 255;
	mul.wide.u16 	%r183, %rs74, 256;
	or.b32  	%r184, %r182, %r183;
	cvt.u32.u16 	%r185, %rs67;
	or.b32  	%r186, %r184, %r185;
	cvt.u32.u16 	%r187, %rs68;
	shl.b32 	%r188, %r187, 24;
	cvt.u32.u16 	%r189, %rs70;
	shl.b32 	%r190, %r189, 16;
	or.b32  	%r191, %r190, %r188;
	and.b16  	%rs75, %rs69, 255;
	mul.wide.u16 	%r192, %rs75, 256;
	or.b32  	%r193, %r191, %r192;
	cvt.u32.u16 	%r194, %rs71;
	or.b32  	%r195, %r193, %r194;
	ld.local.v4.u32 	{%r196, %r197, %r198, %r199}, [%rd2+32];
	mov.b32 	{%rs76, %rs77}, %r196;
	shr.u16 	%rs78, %rs76, 8;
	shr.u16 	%rs79, %rs77, 8;
	mov.b32 	{%rs80, %rs81}, %r197;
	shr.u16 	%rs82, %rs80, 8;
	shr.u16 	%rs83, %rs81, 8;
	mov.b32 	{%rs84, %rs85}, %r198;
	shr.u16 	%rs86, %rs84, 8;
	shr.u16 	%rs87, %rs85, 8;
	mov.b32 	{%rs88, %rs89}, %r199;
	shr.u16 	%rs90, %rs88, 8;
	shr.u16 	%rs91, %rs89, 8;
	cvt.u32.u16 	%r204, %rs76;
	shl.b32 	%r205, %r204, 24;
	cvt.u32.u16 	%r206, %rs78;
	shl.b32 	%r207, %r206, 16;
	or.b32  	%r208, %r207, %r205;
	and.b16  	%rs92, %rs77, 255;
	mul.wide.u16 	%r209, %rs92, 256;
	or.b32  	%r210, %r208, %r209;
	cvt.u32.u16 	%r211, %rs79;
	or.b32  	%r212, %r210, %r211;
	cvt.u32.u16 	%r213, %rs80;
	shl.b32 	%r214, %r213, 24;
	cvt.u32.u16 	%r215, %rs82;
	shl.b32 	%r216, %r215, 16;
	or.b32  	%r217, %r216, %r214;
	and.b16  	%rs93, %rs81, 255;
	mul.wide.u16 	%r218, %rs93, 256;
	or.b32  	%r219, %r217, %r218;
	cvt.u32.u16 	%r220, %rs83;
	or.b32  	%r221, %r219, %r220;
	cvt.u32.u16 	%r222, %rs84;
	shl.b32 	%r223, %r222, 24;
	cvt.u32.u16 	%r224, %rs86;
	shl.b32 	%r225, %r224, 16;
	or.b32  	%r226, %r225, %r223;
	and.b16  	%rs94, %rs85, 255;
	mul.wide.u16 	%r227, %rs94, 256;
	or.b32  	%r228, %r226, %r227;
	cvt.u32.u16 	%r229, %rs87;
	or.b32  	%r230, %r228, %r229;
	cvt.u32.u16 	%r231, %rs88;
	shl.b32 	%r232, %r231, 24;
	cvt.u32.u16 	%r233, %rs90;
	shl.b32 	%r234, %r233, 16;
	or.b32  	%r235, %r234, %r232;
	and.b16  	%rs95, %rs89, 255;
	mul.wide.u16 	%r236, %rs95, 256;
	or.b32  	%r237, %r235, %r236;
	cvt.u32.u16 	%r238, %rs91;
	or.b32  	%r239, %r237, %r238;
	ld.local.v4.u16 	{%rs96, %rs97, %rs98, %rs99}, [%rd2+48];
	shr.u16 	%rs101, %rs96, 8;
	shr.u16 	%rs103, %rs97, 8;
	shr.u16 	%rs105, %rs98, 8;
	shr.u16 	%rs107, %rs99, 8;
	cvt.u32.u16 	%r240, %rs96;
	shl.b32 	%r241, %r240, 24;
	cvt.u32.u16 	%r242, %rs101;
	shl.b32 	%r243, %r242, 16;
	or.b32  	%r244, %r243, %r241;
	and.b16  	%rs108, %rs97, 255;
	mul.wide.u16 	%r245, %rs108, 256;
	or.b32  	%r246, %r244, %r245;
	cvt.u32.u16 	%r247, %rs103;
	or.b32  	%r248, %r246, %r247;
	cvt.u32.u16 	%r249, %rs98;
	shl.b32 	%r250, %r249, 24;
	cvt.u32.u16 	%r251, %rs105;
	shl.b32 	%r252, %r251, 16;
	or.b32  	%r253, %r252, %r250;
	and.b16  	%rs109, %rs99, 255;
	mul.wide.u16 	%r254, %rs109, 256;
	or.b32  	%r255, %r253, %r254;
	cvt.u32.u16 	%r256, %rs107;
	or.b32  	%r257, %r255, %r256;
	ld.local.v4.u8 	{%rs110, %rs111, %rs112, %rs113}, [%rd2+56];
	cvt.u32.u16 	%r258, %rs110;
	shl.b32 	%r259, %r258, 24;
	cvt.u32.u16 	%r260, %rs111;
	shl.b32 	%r261, %r260, 16;
	or.b32  	%r262, %r261, %r259;
	mul.wide.u16 	%r263, %rs112, 256;
	or.b32  	%r264, %r262, %r263;
	cvt.u32.u16 	%r265, %rs113;
	or.b32  	%r266, %r264, %r265;
	ld.local.v2.u8 	{%rs115, %rs116}, [%rd2+60];
	cvt.u32.u16 	%r267, %rs115;
	shl.b32 	%r268, %r267, 24;
	cvt.u32.u16 	%r269, %rs116;
	shl.b32 	%r270, %r269, 16;
	or.b32  	%r271, %r270, %r268;
	shl.b32 	%r272, %r5, 3;
	and.b32  	%r273, %r272, 65280;
	or.b32  	%r274, %r271, %r273;
	cvt.u32.u16 	%r275, %rs34;
	and.b32  	%r276, %r275, 248;
	or.b32  	%r277, %r274, %r276;
	shr.u32 	%r278, %r133, 7;
	shl.b32 	%r279, %r132, 25;
	or.b32  	%r280, %r279, %r278;
	shr.u32 	%r281, %r129, 18;
	shl.b32 	%r282, %r133, 14;
	or.b32  	%r283, %r282, %r281;
	shr.u32 	%r284, %r133, 3;
	xor.b32  	%r285, %r283, %r284;
	xor.b32  	%r286, %r285, %r280;
	shr.u32 	%r287, %r262, 17;
	shl.b32 	%r288, %r266, 15;
	or.b32  	%r289, %r288, %r287;
	shr.u32 	%r290, %r262, 19;
	shl.b32 	%r291, %r266, 13;
	or.b32  	%r292, %r291, %r290;
	shr.u32 	%r293, %r264, 10;
	xor.b32  	%r294, %r292, %r293;
	xor.b32  	%r295, %r294, %r289;
	add.s32 	%r296, %r221, %r124;
	add.s32 	%r297, %r296, %r286;
	add.s32 	%r298, %r297, %r295;
	shr.u32 	%r299, %r142, 7;
	shl.b32 	%r300, %r141, 25;
	or.b32  	%r301, %r300, %r299;
	shr.u32 	%r302, %r138, 18;
	shl.b32 	%r303, %r142, 14;
	or.b32  	%r304, %r303, %r302;
	shr.u32 	%r305, %r142, 3;
	xor.b32  	%r306, %r304, %r305;
	xor.b32  	%r307, %r306, %r301;
	shr.u32 	%r308, %r271, 17;
	shl.b32 	%r309, %r277, 15;
	or.b32  	%r310, %r309, %r308;
	shr.u32 	%r311, %r271, 19;
	shl.b32 	%r312, %r277, 13;
	or.b32  	%r313, %r312, %r311;
	shr.u32 	%r314, %r274, 10;
	xor.b32  	%r315, %r313, %r314;
	xor.b32  	%r316, %r315, %r310;
	add.s32 	%r317, %r230, %r133;
	add.s32 	%r318, %r317, %r307;
	add.s32 	%r319, %r318, %r316;
	shr.u32 	%r320, %r151, 7;
	shl.b32 	%r321, %r150, 25;
	or.b32  	%r322, %r321, %r320;
	shr.u32 	%r323, %r147, 18;
	shl.b32 	%r324, %r151, 14;
	or.b32  	%r325, %r324, %r323;
	shr.u32 	%r326, %r151, 3;
	xor.b32  	%r327, %r325, %r326;
	xor.b32  	%r328, %r327, %r322;
	shf.l.wrap.b32 	%r329, %r298, %r298, 15;
	shf.l.wrap.b32 	%r330, %r298, %r298, 13;
	shr.u32 	%r331, %r298, 10;
	xor.b32  	%r332, %r330, %r331;
	xor.b32  	%r333, %r332, %r329;
	add.s32 	%r334, %r239, %r142;
	add.s32 	%r335, %r334, %r328;
	add.s32 	%r336, %r335, %r333;
	shr.u32 	%r337, %r168, 7;
	shl.b32 	%r338, %r167, 25;
	or.b32  	%r339, %r338, %r337;
	shr.u32 	%r340, %r164, 18;
	shl.b32 	%r341, %r168, 14;
	or.b32  	%r342, %r341, %r340;
	shr.u32 	%r343, %r168, 3;
	xor.b32  	%r344, %r342, %r343;
	xor.b32  	%r345, %r344, %r339;
	shf.l.wrap.b32 	%r346, %r319, %r319, 15;
	shf.l.wrap.b32 	%r347, %r319, %r319, 13;
	shr.u32 	%r348, %r319, 10;
	xor.b32  	%r349, %r347, %r348;
	xor.b32  	%r350, %r349, %r346;
	add.s32 	%r351, %r248, %r151;
	add.s32 	%r352, %r351, %r345;
	add.s32 	%r353, %r352, %r350;
	shr.u32 	%r354, %r177, 7;
	shl.b32 	%r355, %r176, 25;
	or.b32  	%r356, %r355, %r354;
	shr.u32 	%r357, %r173, 18;
	shl.b32 	%r358, %r177, 14;
	or.b32  	%r359, %r358, %r357;
	shr.u32 	%r360, %r177, 3;
	xor.b32  	%r361, %r359, %r360;
	xor.b32  	%r362, %r361, %r356;
	shf.l.wrap.b32 	%r363, %r336, %r336, 15;
	shf.l.wrap.b32 	%r364, %r336, %r336, 13;
	shr.u32 	%r365, %r336, 10;
	xor.b32  	%r366, %r364, %r365;
	xor.b32  	%r367, %r366, %r363;
	add.s32 	%r368, %r257, %r168;
	add.s32 	%r369, %r368, %r362;
	add.s32 	%r370, %r369, %r367;
	shr.u32 	%r371, %r186, 7;
	shl.b32 	%r372, %r185, 25;
	or.b32  	%r373, %r372, %r371;
	shr.u32 	%r374, %r182, 18;
	shl.b32 	%r375, %r186, 14;
	or.b32  	%r376, %r375, %r374;
	shr.u32 	%r377, %r186, 3;
	xor.b32  	%r378, %r376, %r377;
	xor.b32  	%r379, %r378, %r373;
	shf.l.wrap.b32 	%r380, %r353, %r353, 15;
	shf.l.wrap.b32 	%r381, %r353, %r353, 13;
	shr.u32 	%r382, %r353, 10;
	xor.b32  	%r383, %r381, %r382;
	xor.b32  	%r384, %r383, %r380;
	add.s32 	%r385, %r266, %r177;
	add.s32 	%r386, %r385, %r379;
	add.s32 	%r387, %r386, %r384;
	shr.u32 	%r388, %r195, 7;
	shl.b32 	%r389, %r194, 25;
	or.b32  	%r390, %r389, %r388;
	shr.u32 	%r391, %r191, 18;
	shl.b32 	%r392, %r195, 14;
	or.b32  	%r393, %r392, %r391;
	shr.u32 	%r394, %r195, 3;
	xor.b32  	%r395, %r393, %r394;
	xor.b32  	%r396, %r395, %r390;
	shf.l.wrap.b32 	%r397, %r370, %r370, 15;
	shf.l.wrap.b32 	%r398, %r370, %r370, 13;
	shr.u32 	%r399, %r370, 10;
	xor.b32  	%r400, %r398, %r399;
	xor.b32  	%r401, %r400, %r397;
	add.s32 	%r402, %r277, %r186;
	add.s32 	%r403, %r402, %r396;
	add.s32 	%r404, %r403, %r401;
	shr.u32 	%r405, %r212, 7;
	shl.b32 	%r406, %r211, 25;
	or.b32  	%r407, %r406, %r405;
	shr.u32 	%r408, %r208, 18;
	shl.b32 	%r409, %r212, 14;
	or.b32  	%r410, %r409, %r408;
	shr.u32 	%r411, %r212, 3;
	xor.b32  	%r412, %r410, %r411;
	xor.b32  	%r413, %r412, %r407;
	shf.l.wrap.b32 	%r414, %r387, %r387, 15;
	shf.l.wrap.b32 	%r415, %r387, %r387, 13;
	shr.u32 	%r416, %r387, 10;
	xor.b32  	%r417, %r415, %r416;
	xor.b32  	%r418, %r417, %r414;
	add.s32 	%r419, %r298, %r195;
	add.s32 	%r420, %r419, %r413;
	add.s32 	%r421, %r420, %r418;
	shr.u32 	%r422, %r221, 7;
	shl.b32 	%r423, %r220, 25;
	or.b32  	%r424, %r423, %r422;
	shr.u32 	%r425, %r217, 18;
	shl.b32 	%r426, %r221, 14;
	or.b32  	%r427, %r426, %r425;
	shr.u32 	%r428, %r221, 3;
	xor.b32  	%r429, %r427, %r428;
	xor.b32  	%r430, %r429, %r424;
	shf.l.wrap.b32 	%r431, %r404, %r404, 15;
	shf.l.wrap.b32 	%r432, %r404, %r404, 13;
	shr.u32 	%r433, %r404, 10;
	xor.b32  	%r434, %r432, %r433;
	xor.b32  	%r435, %r434, %r431;
	add.s32 	%r436, %r319, %r212;
	add.s32 	%r437, %r436, %r430;
	add.s32 	%r438, %r437, %r435;
	shr.u32 	%r439, %r230, 7;
	shl.b32 	%r440, %r229, 25;
	or.b32  	%r441, %r440, %r439;
	shr.u32 	%r442, %r226, 18;
	shl.b32 	%r443, %r230, 14;
	or.b32  	%r444, %r443, %r442;
	shr.u32 	%r445, %r230, 3;
	xor.b32  	%r446, %r444, %r445;
	xor.b32  	%r447, %r446, %r441;
	shf.l.wrap.b32 	%r448, %r421, %r421, 15;
	shf.l.wrap.b32 	%r449, %r421, %r421, 13;
	shr.u32 	%r450, %r421, 10;
	xor.b32  	%r451, %r449, %r450;
	xor.b32  	%r452, %r451, %r448;
	add.s32 	%r453, %r336, %r221;
	add.s32 	%r454, %r453, %r447;
	add.s32 	%r455, %r454, %r452;
	shr.u32 	%r456, %r239, 7;
	shl.b32 	%r457, %r238, 25;
	or.b32  	%r458, %r457, %r456;
	shr.u32 	%r459, %r235, 18;
	shl.b32 	%r460, %r239, 14;
	or.b32  	%r461, %r460, %r459;
	shr.u32 	%r462, %r239, 3;
	xor.b32  	%r463, %r461, %r462;
	xor.b32  	%r464, %r463, %r458;
	shf.l.wrap.b32 	%r465, %r438, %r438, 15;
	shf.l.wrap.b32 	%r466, %r438, %r438, 13;
	shr.u32 	%r467, %r438, 10;
	xor.b32  	%r468, %r466, %r467;
	xor.b32  	%r469, %r468, %r465;
	add.s32 	%r470, %r353, %r230;
	add.s32 	%r471, %r470, %r464;
	add.s32 	%r472, %r471, %r469;
	shr.u32 	%r473, %r248, 7;
	shl.b32 	%r474, %r247, 25;
	or.b32  	%r475, %r474, %r473;
	shr.u32 	%r476, %r244, 18;
	shl.b32 	%r477, %r248, 14;
	or.b32  	%r478, %r477, %r476;
	shr.u32 	%r479, %r248, 3;
	xor.b32  	%r480, %r478, %r479;
	xor.b32  	%r481, %r480, %r475;
	shf.l.wrap.b32 	%r482, %r455, %r455, 15;
	shf.l.wrap.b32 	%r483, %r455, %r455, 13;
	shr.u32 	%r484, %r455, 10;
	xor.b32  	%r485, %r483, %r484;
	xor.b32  	%r486, %r485, %r482;
	add.s32 	%r487, %r370, %r239;
	add.s32 	%r488, %r487, %r481;
	add.s32 	%r489, %r488, %r486;
	shr.u32 	%r490, %r257, 7;
	shl.b32 	%r491, %r256, 25;
	or.b32  	%r492, %r491, %r490;
	shr.u32 	%r493, %r253, 18;
	shl.b32 	%r494, %r257, 14;
	or.b32  	%r495, %r494, %r493;
	shr.u32 	%r496, %r257, 3;
	xor.b32  	%r497, %r495, %r496;
	xor.b32  	%r498, %r497, %r492;
	shf.l.wrap.b32 	%r499, %r472, %r472, 15;
	shf.l.wrap.b32 	%r500, %r472, %r472, 13;
	shr.u32 	%r501, %r472, 10;
	xor.b32  	%r502, %r500, %r501;
	xor.b32  	%r503, %r502, %r499;
	add.s32 	%r504, %r387, %r248;
	add.s32 	%r505, %r504, %r498;
	add.s32 	%r506, %r505, %r503;
	shr.u32 	%r507, %r266, 7;
	shl.b32 	%r508, %r265, 25;
	or.b32  	%r509, %r508, %r507;
	shr.u32 	%r510, %r262, 18;
	shl.b32 	%r511, %r266, 14;
	or.b32  	%r512, %r511, %r510;
	shr.u32 	%r513, %r266, 3;
	xor.b32  	%r514, %r512, %r513;
	xor.b32  	%r515, %r514, %r509;
	shf.l.wrap.b32 	%r516, %r489, %r489, 15;
	shf.l.wrap.b32 	%r517, %r489, %r489, 13;
	shr.u32 	%r518, %r489, 10;
	xor.b32  	%r519, %r517, %r518;
	xor.b32  	%r520, %r519, %r516;
	add.s32 	%r521, %r404, %r257;
	add.s32 	%r522, %r521, %r515;
	add.s32 	%r523, %r522, %r520;
	shr.u32 	%r524, %r277, 7;
	shl.b32 	%r525, %r5, 28;
	or.b32  	%r526, %r525, %r524;
	shr.u32 	%r527, %r271, 18;
	shl.b32 	%r528, %r277, 14;
	or.b32  	%r529, %r528, %r527;
	shr.u32 	%r530, %r277, 3;
	xor.b32  	%r531, %r529, %r530;
	xor.b32  	%r532, %r531, %r526;
	shf.l.wrap.b32 	%r533, %r506, %r506, 15;
	shf.l.wrap.b32 	%r534, %r506, %r506, 13;
	shr.u32 	%r535, %r506, 10;
	xor.b32  	%r536, %r534, %r535;
	xor.b32  	%r537, %r536, %r533;
	add.s32 	%r538, %r421, %r266;
	add.s32 	%r539, %r538, %r532;
	add.s32 	%r540, %r539, %r537;
	shf.l.wrap.b32 	%r541, %r298, %r298, 25;
	shf.l.wrap.b32 	%r542, %r298, %r298, 14;
	shr.u32 	%r543, %r298, 3;
	xor.b32  	%r544, %r542, %r543;
	xor.b32  	%r545, %r544, %r541;
	shf.l.wrap.b32 	%r546, %r523, %r523, 15;
	shf.l.wrap.b32 	%r547, %r523, %r523, 13;
	shr.u32 	%r548, %r523, 10;
	xor.b32  	%r549, %r547, %r548;
	xor.b32  	%r550, %r549, %r546;
	add.s32 	%r551, %r438, %r277;
	add.s32 	%r552, %r551, %r545;
	add.s32 	%r553, %r552, %r550;
	shf.l.wrap.b32 	%r554, %r319, %r319, 25;
	shf.l.wrap.b32 	%r555, %r319, %r319, 14;
	shr.u32 	%r556, %r319, 3;
	xor.b32  	%r557, %r555, %r556;
	xor.b32  	%r558, %r557, %r554;
	shf.l.wrap.b32 	%r559, %r540, %r540, 15;
	shf.l.wrap.b32 	%r560, %r540, %r540, 13;
	shr.u32 	%r561, %r540, 10;
	xor.b32  	%r562, %r560, %r561;
	xor.b32  	%r563, %r562, %r559;
	add.s32 	%r564, %r455, %r298;
	add.s32 	%r565, %r564, %r558;
	add.s32 	%r566, %r565, %r563;
	shf.l.wrap.b32 	%r567, %r336, %r336, 25;
	shf.l.wrap.b32 	%r568, %r336, %r336, 14;
	shr.u32 	%r569, %r336, 3;
	xor.b32  	%r570, %r568, %r569;
	xor.b32  	%r571, %r570, %r567;
	shf.l.wrap.b32 	%r572, %r553, %r553, 15;
	shf.l.wrap.b32 	%r573, %r553, %r553, 13;
	shr.u32 	%r574, %r553, 10;
	xor.b32  	%r575, %r573, %r574;
	xor.b32  	%r576, %r575, %r572;
	add.s32 	%r577, %r472, %r319;
	add.s32 	%r578, %r577, %r571;
	add.s32 	%r579, %r578, %r576;
	shf.l.wrap.b32 	%r580, %r353, %r353, 25;
	shf.l.wrap.b32 	%r581, %r353, %r353, 14;
	shr.u32 	%r582, %r353, 3;
	xor.b32  	%r583, %r581, %r582;
	xor.b32  	%r584, %r583, %r580;
	shf.l.wrap.b32 	%r585, %r566, %r566, 15;
	shf.l.wrap.b32 	%r586, %r566, %r566, 13;
	shr.u32 	%r587, %r566, 10;
	xor.b32  	%r588, %r586, %r587;
	xor.b32  	%r589, %r588, %r585;
	add.s32 	%r590, %r489, %r336;
	add.s32 	%r591, %r590, %r584;
	add.s32 	%r592, %r591, %r589;
	shf.l.wrap.b32 	%r593, %r370, %r370, 25;
	shf.l.wrap.b32 	%r594, %r370, %r370, 14;
	shr.u32 	%r595, %r370, 3;
	xor.b32  	%r596, %r594, %r595;
	xor.b32  	%r597, %r596, %r593;
	shf.l.wrap.b32 	%r598, %r579, %r579, 15;
	shf.l.wrap.b32 	%r599, %r579, %r579, 13;
	shr.u32 	%r600, %r579, 10;
	xor.b32  	%r601, %r599, %r600;
	xor.b32  	%r602, %r601, %r598;
	add.s32 	%r603, %r506, %r353;
	add.s32 	%r604, %r603, %r597;
	add.s32 	%r605, %r604, %r602;
	shf.l.wrap.b32 	%r606, %r387, %r387, 25;
	shf.l.wrap.b32 	%r607, %r387, %r387, 14;
	shr.u32 	%r608, %r387, 3;
	xor.b32  	%r609, %r607, %r608;
	xor.b32  	%r610, %r609, %r606;
	shf.l.wrap.b32 	%r611, %r592, %r592, 15;
	shf.l.wrap.b32 	%r612, %r592, %r592, 13;
	shr.u32 	%r613, %r592, 10;
	xor.b32  	%r614, %r612, %r613;
	xor.b32  	%r615, %r614, %r611;
	add.s32 	%r616, %r523, %r370;
	add.s32 	%r617, %r616, %r610;
	add.s32 	%r618, %r617, %r615;
	shf.l.wrap.b32 	%r619, %r404, %r404, 25;
	shf.l.wrap.b32 	%r620, %r404, %r404, 14;
	shr.u32 	%r621, %r404, 3;
	xor.b32  	%r622, %r620, %r621;
	xor.b32  	%r623, %r622, %r619;
	shf.l.wrap.b32 	%r624, %r605, %r605, 15;
	shf.l.wrap.b32 	%r625, %r605, %r605, 13;
	shr.u32 	%r626, %r605, 10;
	xor.b32  	%r627, %r625, %r626;
	xor.b32  	%r628, %r627, %r624;
	add.s32 	%r629, %r540, %r387;
	add.s32 	%r630, %r629, %r623;
	add.s32 	%r631, %r630, %r628;
	shf.l.wrap.b32 	%r632, %r421, %r421, 25;
	shf.l.wrap.b32 	%r633, %r421, %r421, 14;
	shr.u32 	%r634, %r421, 3;
	xor.b32  	%r635, %r633, %r634;
	xor.b32  	%r636, %r635, %r632;
	shf.l.wrap.b32 	%r637, %r618, %r618, 15;
	shf.l.wrap.b32 	%r638, %r618, %r618, 13;
	shr.u32 	%r639, %r618, 10;
	xor.b32  	%r640, %r638, %r639;
	xor.b32  	%r641, %r640, %r637;
	add.s32 	%r642, %r553, %r404;
	add.s32 	%r643, %r642, %r636;
	add.s32 	%r644, %r643, %r641;
	shf.l.wrap.b32 	%r645, %r438, %r438, 25;
	shf.l.wrap.b32 	%r646, %r438, %r438, 14;
	shr.u32 	%r647, %r438, 3;
	xor.b32  	%r648, %r646, %r647;
	xor.b32  	%r649, %r648, %r645;
	shf.l.wrap.b32 	%r650, %r631, %r631, 15;
	shf.l.wrap.b32 	%r651, %r631, %r631, 13;
	shr.u32 	%r652, %r631, 10;
	xor.b32  	%r653, %r651, %r652;
	xor.b32  	%r654, %r653, %r650;
	add.s32 	%r655, %r566, %r421;
	add.s32 	%r656, %r655, %r649;
	add.s32 	%r657, %r656, %r654;
	shf.l.wrap.b32 	%r658, %r455, %r455, 25;
	shf.l.wrap.b32 	%r659, %r455, %r455, 14;
	shr.u32 	%r660, %r455, 3;
	xor.b32  	%r661, %r659, %r660;
	xor.b32  	%r662, %r661, %r658;
	shf.l.wrap.b32 	%r663, %r644, %r644, 15;
	shf.l.wrap.b32 	%r664, %r644, %r644, 13;
	shr.u32 	%r665, %r644, 10;
	xor.b32  	%r666, %r664, %r665;
	xor.b32  	%r667, %r666, %r663;
	add.s32 	%r668, %r579, %r438;
	add.s32 	%r669, %r668, %r662;
	add.s32 	%r670, %r669, %r667;
	shf.l.wrap.b32 	%r671, %r472, %r472, 25;
	shf.l.wrap.b32 	%r672, %r472, %r472, 14;
	shr.u32 	%r673, %r472, 3;
	xor.b32  	%r674, %r672, %r673;
	xor.b32  	%r675, %r674, %r671;
	shf.l.wrap.b32 	%r676, %r657, %r657, 15;
	shf.l.wrap.b32 	%r677, %r657, %r657, 13;
	shr.u32 	%r678, %r657, 10;
	xor.b32  	%r679, %r677, %r678;
	xor.b32  	%r680, %r679, %r676;
	add.s32 	%r681, %r592, %r455;
	add.s32 	%r682, %r681, %r675;
	add.s32 	%r683, %r682, %r680;
	shf.l.wrap.b32 	%r684, %r489, %r489, 25;
	shf.l.wrap.b32 	%r685, %r489, %r489, 14;
	shr.u32 	%r686, %r489, 3;
	xor.b32  	%r687, %r685, %r686;
	xor.b32  	%r688, %r687, %r684;
	shf.l.wrap.b32 	%r689, %r670, %r670, 15;
	shf.l.wrap.b32 	%r690, %r670, %r670, 13;
	shr.u32 	%r691, %r670, 10;
	xor.b32  	%r692, %r690, %r691;
	xor.b32  	%r693, %r692, %r689;
	add.s32 	%r694, %r605, %r472;
	add.s32 	%r695, %r694, %r688;
	add.s32 	%r696, %r695, %r693;
	shf.l.wrap.b32 	%r697, %r506, %r506, 25;
	shf.l.wrap.b32 	%r698, %r506, %r506, 14;
	shr.u32 	%r699, %r506, 3;
	xor.b32  	%r700, %r698, %r699;
	xor.b32  	%r701, %r700, %r697;
	shf.l.wrap.b32 	%r702, %r683, %r683, 15;
	shf.l.wrap.b32 	%r703, %r683, %r683, 13;
	shr.u32 	%r704, %r683, 10;
	xor.b32  	%r705, %r703, %r704;
	xor.b32  	%r706, %r705, %r702;
	add.s32 	%r707, %r618, %r489;
	add.s32 	%r708, %r707, %r701;
	add.s32 	%r709, %r708, %r706;
	shf.l.wrap.b32 	%r710, %r523, %r523, 25;
	shf.l.wrap.b32 	%r711, %r523, %r523, 14;
	shr.u32 	%r712, %r523, 3;
	xor.b32  	%r713, %r711, %r712;
	xor.b32  	%r714, %r713, %r710;
	shf.l.wrap.b32 	%r715, %r696, %r696, 15;
	shf.l.wrap.b32 	%r716, %r696, %r696, 13;
	shr.u32 	%r717, %r696, 10;
	xor.b32  	%r718, %r716, %r717;
	xor.b32  	%r719, %r718, %r715;
	add.s32 	%r720, %r631, %r506;
	add.s32 	%r721, %r720, %r714;
	add.s32 	%r722, %r721, %r719;
	shf.l.wrap.b32 	%r723, %r540, %r540, 25;
	shf.l.wrap.b32 	%r724, %r540, %r540, 14;
	shr.u32 	%r725, %r540, 3;
	xor.b32  	%r726, %r724, %r725;
	xor.b32  	%r727, %r726, %r723;
	shf.l.wrap.b32 	%r728, %r709, %r709, 15;
	shf.l.wrap.b32 	%r729, %r709, %r709, 13;
	shr.u32 	%r730, %r709, 10;
	xor.b32  	%r731, %r729, %r730;
	xor.b32  	%r732, %r731, %r728;
	add.s32 	%r733, %r644, %r523;
	add.s32 	%r734, %r733, %r727;
	add.s32 	%r735, %r734, %r732;
	shf.l.wrap.b32 	%r736, %r553, %r553, 25;
	shf.l.wrap.b32 	%r737, %r553, %r553, 14;
	shr.u32 	%r738, %r553, 3;
	xor.b32  	%r739, %r737, %r738;
	xor.b32  	%r740, %r739, %r736;
	shf.l.wrap.b32 	%r741, %r722, %r722, 15;
	shf.l.wrap.b32 	%r742, %r722, %r722, 13;
	shr.u32 	%r743, %r722, 10;
	xor.b32  	%r744, %r742, %r743;
	xor.b32  	%r745, %r744, %r741;
	add.s32 	%r746, %r657, %r540;
	add.s32 	%r747, %r746, %r740;
	add.s32 	%r748, %r747, %r745;
	shf.l.wrap.b32 	%r749, %r566, %r566, 25;
	shf.l.wrap.b32 	%r750, %r566, %r566, 14;
	shr.u32 	%r751, %r566, 3;
	xor.b32  	%r752, %r750, %r751;
	xor.b32  	%r753, %r752, %r749;
	shf.l.wrap.b32 	%r754, %r735, %r735, 15;
	shf.l.wrap.b32 	%r755, %r735, %r735, 13;
	shr.u32 	%r756, %r735, 10;
	xor.b32  	%r757, %r755, %r756;
	xor.b32  	%r758, %r757, %r754;
	add.s32 	%r759, %r670, %r553;
	add.s32 	%r760, %r759, %r753;
	add.s32 	%r761, %r760, %r758;
	shf.l.wrap.b32 	%r762, %r579, %r579, 25;
	shf.l.wrap.b32 	%r763, %r579, %r579, 14;
	shr.u32 	%r764, %r579, 3;
	xor.b32  	%r765, %r763, %r764;
	xor.b32  	%r766, %r765, %r762;
	shf.l.wrap.b32 	%r767, %r748, %r748, 15;
	shf.l.wrap.b32 	%r768, %r748, %r748, 13;
	shr.u32 	%r769, %r748, 10;
	xor.b32  	%r770, %r768, %r769;
	xor.b32  	%r771, %r770, %r767;
	add.s32 	%r772, %r683, %r566;
	add.s32 	%r773, %r772, %r766;
	add.s32 	%r774, %r773, %r771;
	shf.l.wrap.b32 	%r775, %r592, %r592, 25;
	shf.l.wrap.b32 	%r776, %r592, %r592, 14;
	shr.u32 	%r777, %r592, 3;
	xor.b32  	%r778, %r776, %r777;
	xor.b32  	%r779, %r778, %r775;
	shf.l.wrap.b32 	%r780, %r761, %r761, 15;
	shf.l.wrap.b32 	%r781, %r761, %r761, 13;
	shr.u32 	%r782, %r761, 10;
	xor.b32  	%r783, %r781, %r782;
	xor.b32  	%r784, %r783, %r780;
	add.s32 	%r785, %r696, %r579;
	add.s32 	%r786, %r785, %r779;
	add.s32 	%r787, %r786, %r784;
	shf.l.wrap.b32 	%r788, %r605, %r605, 25;
	shf.l.wrap.b32 	%r789, %r605, %r605, 14;
	shr.u32 	%r790, %r605, 3;
	xor.b32  	%r791, %r789, %r790;
	xor.b32  	%r792, %r791, %r788;
	shf.l.wrap.b32 	%r793, %r774, %r774, 15;
	shf.l.wrap.b32 	%r794, %r774, %r774, 13;
	shr.u32 	%r795, %r774, 10;
	xor.b32  	%r796, %r794, %r795;
	xor.b32  	%r797, %r796, %r793;
	add.s32 	%r798, %r709, %r592;
	add.s32 	%r799, %r798, %r792;
	add.s32 	%r800, %r799, %r797;
	shf.l.wrap.b32 	%r801, %r618, %r618, 25;
	shf.l.wrap.b32 	%r802, %r618, %r618, 14;
	shr.u32 	%r803, %r618, 3;
	xor.b32  	%r804, %r802, %r803;
	xor.b32  	%r805, %r804, %r801;
	shf.l.wrap.b32 	%r806, %r787, %r787, 15;
	shf.l.wrap.b32 	%r807, %r787, %r787, 13;
	shr.u32 	%r808, %r787, 10;
	xor.b32  	%r809, %r807, %r808;
	xor.b32  	%r810, %r809, %r806;
	add.s32 	%r811, %r722, %r605;
	add.s32 	%r812, %r811, %r805;
	add.s32 	%r813, %r812, %r810;
	shf.l.wrap.b32 	%r814, %r631, %r631, 25;
	shf.l.wrap.b32 	%r815, %r631, %r631, 14;
	shr.u32 	%r816, %r631, 3;
	xor.b32  	%r817, %r815, %r816;
	xor.b32  	%r818, %r817, %r814;
	shf.l.wrap.b32 	%r819, %r800, %r800, 15;
	shf.l.wrap.b32 	%r820, %r800, %r800, 13;
	shr.u32 	%r821, %r800, 10;
	xor.b32  	%r822, %r820, %r821;
	xor.b32  	%r823, %r822, %r819;
	add.s32 	%r824, %r735, %r618;
	add.s32 	%r825, %r824, %r818;
	add.s32 	%r826, %r825, %r823;
	shf.l.wrap.b32 	%r827, %r644, %r644, 25;
	shf.l.wrap.b32 	%r828, %r644, %r644, 14;
	shr.u32 	%r829, %r644, 3;
	xor.b32  	%r830, %r828, %r829;
	xor.b32  	%r831, %r830, %r827;
	shf.l.wrap.b32 	%r832, %r813, %r813, 15;
	shf.l.wrap.b32 	%r833, %r813, %r813, 13;
	shr.u32 	%r834, %r813, 10;
	xor.b32  	%r835, %r833, %r834;
	xor.b32  	%r836, %r835, %r832;
	add.s32 	%r837, %r748, %r631;
	add.s32 	%r838, %r837, %r831;
	add.s32 	%r839, %r838, %r836;
	shf.l.wrap.b32 	%r840, %r657, %r657, 25;
	shf.l.wrap.b32 	%r841, %r657, %r657, 14;
	shr.u32 	%r842, %r657, 3;
	xor.b32  	%r843, %r841, %r842;
	xor.b32  	%r844, %r843, %r840;
	shf.l.wrap.b32 	%r845, %r826, %r826, 15;
	shf.l.wrap.b32 	%r846, %r826, %r826, 13;
	shr.u32 	%r847, %r826, 10;
	xor.b32  	%r848, %r846, %r847;
	xor.b32  	%r849, %r848, %r845;
	add.s32 	%r850, %r761, %r644;
	add.s32 	%r851, %r850, %r844;
	add.s32 	%r852, %r851, %r849;
	shf.l.wrap.b32 	%r853, %r670, %r670, 25;
	shf.l.wrap.b32 	%r854, %r670, %r670, 14;
	shr.u32 	%r855, %r670, 3;
	xor.b32  	%r856, %r854, %r855;
	xor.b32  	%r857, %r856, %r853;
	shf.l.wrap.b32 	%r858, %r839, %r839, 15;
	shf.l.wrap.b32 	%r859, %r839, %r839, 13;
	shr.u32 	%r860, %r839, 10;
	xor.b32  	%r861, %r859, %r860;
	xor.b32  	%r862, %r861, %r858;
	add.s32 	%r863, %r774, %r657;
	add.s32 	%r864, %r863, %r857;
	add.s32 	%r865, %r864, %r862;
	shf.l.wrap.b32 	%r866, %r683, %r683, 25;
	shf.l.wrap.b32 	%r867, %r683, %r683, 14;
	shr.u32 	%r868, %r683, 3;
	xor.b32  	%r869, %r867, %r868;
	xor.b32  	%r870, %r869, %r866;
	shf.l.wrap.b32 	%r871, %r852, %r852, 15;
	shf.l.wrap.b32 	%r872, %r852, %r852, 13;
	shr.u32 	%r873, %r852, 10;
	xor.b32  	%r874, %r872, %r873;
	xor.b32  	%r875, %r874, %r871;
	add.s32 	%r876, %r787, %r670;
	add.s32 	%r877, %r876, %r870;
	add.s32 	%r878, %r877, %r875;
	shf.l.wrap.b32 	%r879, %r696, %r696, 25;
	shf.l.wrap.b32 	%r880, %r696, %r696, 14;
	shr.u32 	%r881, %r696, 3;
	xor.b32  	%r882, %r880, %r881;
	xor.b32  	%r883, %r882, %r879;
	shf.l.wrap.b32 	%r884, %r865, %r865, 15;
	shf.l.wrap.b32 	%r885, %r865, %r865, 13;
	shr.u32 	%r886, %r865, 10;
	xor.b32  	%r887, %r885, %r886;
	xor.b32  	%r888, %r887, %r884;
	add.s32 	%r889, %r800, %r683;
	add.s32 	%r890, %r889, %r883;
	add.s32 	%r891, %r890, %r888;
	shf.l.wrap.b32 	%r892, %r709, %r709, 25;
	shf.l.wrap.b32 	%r893, %r709, %r709, 14;
	shr.u32 	%r894, %r709, 3;
	xor.b32  	%r895, %r893, %r894;
	xor.b32  	%r896, %r895, %r892;
	shf.l.wrap.b32 	%r897, %r878, %r878, 15;
	shf.l.wrap.b32 	%r898, %r878, %r878, 13;
	shr.u32 	%r899, %r878, 10;
	xor.b32  	%r900, %r898, %r899;
	xor.b32  	%r901, %r900, %r897;
	add.s32 	%r902, %r813, %r696;
	add.s32 	%r903, %r902, %r896;
	add.s32 	%r904, %r903, %r901;
	shf.l.wrap.b32 	%r905, %r722, %r722, 25;
	shf.l.wrap.b32 	%r906, %r722, %r722, 14;
	shr.u32 	%r907, %r722, 3;
	xor.b32  	%r908, %r906, %r907;
	xor.b32  	%r909, %r908, %r905;
	shf.l.wrap.b32 	%r910, %r891, %r891, 15;
	shf.l.wrap.b32 	%r911, %r891, %r891, 13;
	shr.u32 	%r912, %r891, 10;
	xor.b32  	%r913, %r911, %r912;
	xor.b32  	%r914, %r913, %r910;
	add.s32 	%r915, %r826, %r709;
	add.s32 	%r916, %r915, %r909;
	add.s32 	%r917, %r916, %r914;
	shf.l.wrap.b32 	%r918, %r735, %r735, 25;
	shf.l.wrap.b32 	%r919, %r735, %r735, 14;
	shr.u32 	%r920, %r735, 3;
	xor.b32  	%r921, %r919, %r920;
	xor.b32  	%r922, %r921, %r918;
	shf.l.wrap.b32 	%r923, %r904, %r904, 15;
	shf.l.wrap.b32 	%r924, %r904, %r904, 13;
	shr.u32 	%r925, %r904, 10;
	xor.b32  	%r926, %r924, %r925;
	xor.b32  	%r927, %r926, %r923;
	add.s32 	%r928, %r839, %r722;
	add.s32 	%r929, %r928, %r922;
	add.s32 	%r930, %r929, %r927;
	shf.l.wrap.b32 	%r931, %r748, %r748, 25;
	shf.l.wrap.b32 	%r932, %r748, %r748, 14;
	shr.u32 	%r933, %r748, 3;
	xor.b32  	%r934, %r932, %r933;
	xor.b32  	%r935, %r934, %r931;
	shf.l.wrap.b32 	%r936, %r917, %r917, 15;
	shf.l.wrap.b32 	%r937, %r917, %r917, 13;
	shr.u32 	%r938, %r917, 10;
	xor.b32  	%r939, %r937, %r938;
	xor.b32  	%r940, %r939, %r936;
	add.s32 	%r941, %r852, %r735;
	add.s32 	%r942, %r941, %r935;
	add.s32 	%r943, %r942, %r940;
	shf.l.wrap.b32 	%r944, %r761, %r761, 25;
	shf.l.wrap.b32 	%r945, %r761, %r761, 14;
	shr.u32 	%r946, %r761, 3;
	xor.b32  	%r947, %r945, %r946;
	xor.b32  	%r948, %r947, %r944;
	shf.l.wrap.b32 	%r949, %r930, %r930, 15;
	shf.l.wrap.b32 	%r950, %r930, %r930, 13;
	shr.u32 	%r951, %r930, 10;
	xor.b32  	%r952, %r950, %r951;
	xor.b32  	%r953, %r952, %r949;
	add.s32 	%r954, %r865, %r748;
	add.s32 	%r955, %r954, %r948;
	add.s32 	%r956, %r955, %r953;
	shf.l.wrap.b32 	%r957, %r774, %r774, 25;
	shf.l.wrap.b32 	%r958, %r774, %r774, 14;
	shr.u32 	%r959, %r774, 3;
	xor.b32  	%r960, %r958, %r959;
	xor.b32  	%r961, %r960, %r957;
	shf.l.wrap.b32 	%r962, %r943, %r943, 15;
	shf.l.wrap.b32 	%r963, %r943, %r943, 13;
	shr.u32 	%r964, %r943, 10;
	xor.b32  	%r965, %r963, %r964;
	xor.b32  	%r966, %r965, %r962;
	add.s32 	%r967, %r878, %r761;
	add.s32 	%r968, %r967, %r961;
	add.s32 	%r969, %r968, %r966;
	ld.const.u32 	%r970, [K256];
	add.s32 	%r971, %r970, %r124;
	add.s32 	%r972, %r971, 1446884106;
	add.s32 	%r973, %r971, -1182902091;
	shf.l.wrap.b32 	%r974, %r972, %r972, 26;
	shf.l.wrap.b32 	%r975, %r972, %r972, 21;
	xor.b32  	%r976, %r974, %r975;
	shf.l.wrap.b32 	%r977, %r972, %r972, 7;
	xor.b32  	%r978, %r976, %r977;
	and.b32  	%r979, %r972, 1359893119;
	mov.u32 	%r980, -1446884107;
	sub.s32 	%r981, %r980, %r971;
	and.b32  	%r982, %r981, -1694144372;
	or.b32  	%r983, %r979, %r982;
	add.s32 	%r984, %r983, %r978;
	ld.const.u32 	%r985, [K256+4];
	add.s32 	%r986, %r984, %r985;
	add.s32 	%r987, %r986, %r133;
	shf.l.wrap.b32 	%r988, %r973, %r973, 30;
	shf.l.wrap.b32 	%r989, %r973, %r973, 19;
	xor.b32  	%r990, %r988, %r989;
	shf.l.wrap.b32 	%r991, %r973, %r973, 10;
	xor.b32  	%r992, %r990, %r991;
	and.b32  	%r993, %r973, -781301534;
	or.b32  	%r994, %r993, 704751109;
	add.s32 	%r995, %r992, %r994;
	add.s32 	%r996, %r995, %r987;
	add.s32 	%r997, %r987, 1542638877;
	add.s32 	%r998, %r996, 528734635;
	shf.l.wrap.b32 	%r999, %r997, %r997, 26;
	shf.l.wrap.b32 	%r1000, %r997, %r997, 21;
	xor.b32  	%r1001, %r999, %r1000;
	shf.l.wrap.b32 	%r1002, %r997, %r997, 7;
	xor.b32  	%r1003, %r1001, %r1002;
	and.b32  	%r1004, %r997, %r972;
	mov.u32 	%r1005, 604844770;
	sub.s32 	%r1006, %r1005, %r987;
	and.b32  	%r1007, %r1006, 1359893119;
	or.b32  	%r1008, %r1004, %r1007;
	add.s32 	%r1009, %r1008, %r1003;
	ld.const.u32 	%r1010, [K256+8];
	add.s32 	%r1011, %r1009, %r1010;
	add.s32 	%r1012, %r1011, %r142;
	shf.l.wrap.b32 	%r1013, %r998, %r998, 30;
	shf.l.wrap.b32 	%r1014, %r998, %r998, 19;
	xor.b32  	%r1015, %r1013, %r1014;
	shf.l.wrap.b32 	%r1016, %r998, %r998, 10;
	xor.b32  	%r1017, %r1015, %r1016;
	xor.b32  	%r1018, %r973, 1779033703;
	and.b32  	%r1019, %r998, %r1018;
	and.b32  	%r1020, %r973, 1779033703;
	xor.b32  	%r1021, %r1019, %r1020;
	add.s32 	%r1022, %r1017, %r1021;
	add.s32 	%r1023, %r1022, %r1012;
	add.s32 	%r1024, %r1012, 1449989905;
	add.s32 	%r1025, %r1023, -1694144372;
	shf.l.wrap.b32 	%r1026, %r1024, %r1024, 26;
	shf.l.wrap.b32 	%r1027, %r1024, %r1024, 21;
	xor.b32  	%r1028, %r1026, %r1027;
	shf.l.wrap.b32 	%r1029, %r1024, %r1024, 7;
	xor.b32  	%r1030, %r1028, %r1029;
	and.b32  	%r1031, %r1024, %r997;
	mov.u32 	%r1032, -1449989906;
	sub.s32 	%r1033, %r1032, %r1012;
	and.b32  	%r1034, %r972, %r1033;
	or.b32  	%r1035, %r1031, %r1034;
	add.s32 	%r1036, %r1035, %r1030;
	ld.const.u32 	%r1037, [K256+12];
	add.s32 	%r1038, %r1036, %r1037;
	add.s32 	%r1039, %r1038, %r151;
	shf.l.wrap.b32 	%r1040, %r1025, %r1025, 30;
	shf.l.wrap.b32 	%r1041, %r1025, %r1025, 19;
	xor.b32  	%r1042, %r1040, %r1041;
	shf.l.wrap.b32 	%r1043, %r1025, %r1025, 10;
	xor.b32  	%r1044, %r1042, %r1043;
	xor.b32  	%r1045, %r998, %r973;
	and.b32  	%r1046, %r1025, %r1045;
	and.b32  	%r1047, %r998, %r973;
	xor.b32  	%r1048, %r1046, %r1047;
	add.s32 	%r1049, %r1044, %r1048;
	add.s32 	%r1050, %r1049, %r1039;
	add.s32 	%r1051, %r1039, -1156040474;
	add.s32 	%r1052, %r1050, 1359893119;
	shf.l.wrap.b32 	%r1053, %r1051, %r1051, 26;
	shf.l.wrap.b32 	%r1054, %r1051, %r1051, 21;
	xor.b32  	%r1055, %r1053, %r1054;
	shf.l.wrap.b32 	%r1056, %r1051, %r1051, 7;
	xor.b32  	%r1057, %r1055, %r1056;
	and.b32  	%r1058, %r1051, %r1024;
	mov.u32 	%r1059, 1156040473;
	sub.s32 	%r1060, %r1059, %r1039;
	and.b32  	%r1061, %r997, %r1060;
	or.b32  	%r1062, %r1058, %r1061;
	add.s32 	%r1063, %r1062, %r972;
	add.s32 	%r1064, %r1063, %r1057;
	ld.const.u32 	%r1065, [K256+16];
	add.s32 	%r1066, %r1064, %r1065;
	add.s32 	%r1067, %r1066, %r168;
	shf.l.wrap.b32 	%r1068, %r1052, %r1052, 30;
	shf.l.wrap.b32 	%r1069, %r1052, %r1052, 19;
	xor.b32  	%r1070, %r1068, %r1069;
	shf.l.wrap.b32 	%r1071, %r1052, %r1052, 10;
	xor.b32  	%r1072, %r1070, %r1071;
	xor.b32  	%r1073, %r1025, %r998;
	and.b32  	%r1074, %r1052, %r1073;
	and.b32  	%r1075, %r1025, %r998;
	xor.b32  	%r1076, %r1074, %r1075;
	add.s32 	%r1077, %r1072, %r1076;
	add.s32 	%r1078, %r1067, %r973;
	add.s32 	%r1079, %r1077, %r1067;
	shf.l.wrap.b32 	%r1080, %r1078, %r1078, 26;
	shf.l.wrap.b32 	%r1081, %r1078, %r1078, 21;
	xor.b32  	%r1082, %r1080, %r1081;
	shf.l.wrap.b32 	%r1083, %r1078, %r1078, 7;
	xor.b32  	%r1084, %r1082, %r1083;
	and.b32  	%r1085, %r1078, %r1051;
	not.b32 	%r1086, %r1078;
	and.b32  	%r1087, %r1024, %r1086;
	or.b32  	%r1088, %r1085, %r1087;
	add.s32 	%r1089, %r1088, %r997;
	add.s32 	%r1090, %r1089, %r1084;
	ld.const.u32 	%r1091, [K256+20];
	add.s32 	%r1092, %r1090, %r1091;
	add.s32 	%r1093, %r1092, %r177;
	shf.l.wrap.b32 	%r1094, %r1079, %r1079, 30;
	shf.l.wrap.b32 	%r1095, %r1079, %r1079, 19;
	xor.b32  	%r1096, %r1094, %r1095;
	shf.l.wrap.b32 	%r1097, %r1079, %r1079, 10;
	xor.b32  	%r1098, %r1096, %r1097;
	xor.b32  	%r1099, %r1052, %r1025;
	and.b32  	%r1100, %r1079, %r1099;
	and.b32  	%r1101, %r1052, %r1025;
	xor.b32  	%r1102, %r1100, %r1101;
	add.s32 	%r1103, %r1098, %r1102;
	add.s32 	%r1104, %r1093, %r998;
	add.s32 	%r1105, %r1103, %r1093;
	shf.l.wrap.b32 	%r1106, %r1104, %r1104, 26;
	shf.l.wrap.b32 	%r1107, %r1104, %r1104, 21;
	xor.b32  	%r1108, %r1106, %r1107;
	shf.l.wrap.b32 	%r1109, %r1104, %r1104, 7;
	xor.b32  	%r1110, %r1108, %r1109;
	and.b32  	%r1111, %r1104, %r1078;
	not.b32 	%r1112, %r1104;
	and.b32  	%r1113, %r1051, %r1112;
	or.b32  	%r1114, %r1111, %r1113;
	add.s32 	%r1115, %r1114, %r1024;
	add.s32 	%r1116, %r1115, %r1110;
	ld.const.u32 	%r1117, [K256+24];
	add.s32 	%r1118, %r1116, %r1117;
	add.s32 	%r1119, %r1118, %r186;
	shf.l.wrap.b32 	%r1120, %r1105, %r1105, 30;
	shf.l.wrap.b32 	%r1121, %r1105, %r1105, 19;
	xor.b32  	%r1122, %r1120, %r1121;
	shf.l.wrap.b32 	%r1123, %r1105, %r1105, 10;
	xor.b32  	%r1124, %r1122, %r1123;
	xor.b32  	%r1125, %r1079, %r1052;
	and.b32  	%r1126, %r1105, %r1125;
	and.b32  	%r1127, %r1079, %r1052;
	xor.b32  	%r1128, %r1126, %r1127;
	add.s32 	%r1129, %r1124, %r1128;
	add.s32 	%r1130, %r1119, %r1025;
	add.s32 	%r1131, %r1129, %r1119;
	shf.l.wrap.b32 	%r1132, %r1130, %r1130, 26;
	shf.l.wrap.b32 	%r1133, %r1130, %r1130, 21;
	xor.b32  	%r1134, %r1132, %r1133;
	shf.l.wrap.b32 	%r1135, %r1130, %r1130, 7;
	xor.b32  	%r1136, %r1134, %r1135;
	and.b32  	%r1137, %r1130, %r1104;
	not.b32 	%r1138, %r1130;
	and.b32  	%r1139, %r1078, %r1138;
	or.b32  	%r1140, %r1137, %r1139;
	add.s32 	%r1141, %r1140, %r1051;
	add.s32 	%r1142, %r1141, %r1136;
	ld.const.u32 	%r1143, [K256+28];
	add.s32 	%r1144, %r1142, %r1143;
	add.s32 	%r1145, %r1144, %r195;
	shf.l.wrap.b32 	%r1146, %r1131, %r1131, 30;
	shf.l.wrap.b32 	%r1147, %r1131, %r1131, 19;
	xor.b32  	%r1148, %r1146, %r1147;
	shf.l.wrap.b32 	%r1149, %r1131, %r1131, 10;
	xor.b32  	%r1150, %r1148, %r1149;
	xor.b32  	%r1151, %r1105, %r1079;
	and.b32  	%r1152, %r1131, %r1151;
	and.b32  	%r1153, %r1105, %r1079;
	xor.b32  	%r1154, %r1152, %r1153;
	add.s32 	%r1155, %r1150, %r1154;
	add.s32 	%r1156, %r1145, %r1052;
	add.s32 	%r1157, %r1155, %r1145;
	shf.l.wrap.b32 	%r1158, %r1156, %r1156, 26;
	shf.l.wrap.b32 	%r1159, %r1156, %r1156, 21;
	xor.b32  	%r1160, %r1158, %r1159;
	shf.l.wrap.b32 	%r1161, %r1156, %r1156, 7;
	xor.b32  	%r1162, %r1160, %r1161;
	and.b32  	%r1163, %r1156, %r1130;
	not.b32 	%r1164, %r1156;
	and.b32  	%r1165, %r1104, %r1164;
	or.b32  	%r1166, %r1163, %r1165;
	add.s32 	%r1167, %r1166, %r1078;
	add.s32 	%r1168, %r1167, %r1162;
	ld.const.u32 	%r1169, [K256+32];
	add.s32 	%r1170, %r1168, %r1169;
	add.s32 	%r1171, %r1170, %r212;
	shf.l.wrap.b32 	%r1172, %r1157, %r1157, 30;
	shf.l.wrap.b32 	%r1173, %r1157, %r1157, 19;
	xor.b32  	%r1174, %r1172, %r1173;
	shf.l.wrap.b32 	%r1175, %r1157, %r1157, 10;
	xor.b32  	%r1176, %r1174, %r1175;
	xor.b32  	%r1177, %r1131, %r1105;
	and.b32  	%r1178, %r1157, %r1177;
	and.b32  	%r1179, %r1131, %r1105;
	xor.b32  	%r1180, %r1178, %r1179;
	add.s32 	%r1181, %r1176, %r1180;
	add.s32 	%r1182, %r1171, %r1079;
	add.s32 	%r1183, %r1181, %r1171;
	shf.l.wrap.b32 	%r1184, %r1182, %r1182, 26;
	shf.l.wrap.b32 	%r1185, %r1182, %r1182, 21;
	xor.b32  	%r1186, %r1184, %r1185;
	shf.l.wrap.b32 	%r1187, %r1182, %r1182, 7;
	xor.b32  	%r1188, %r1186, %r1187;
	and.b32  	%r1189, %r1182, %r1156;
	not.b32 	%r1190, %r1182;
	and.b32  	%r1191, %r1130, %r1190;
	or.b32  	%r1192, %r1189, %r1191;
	add.s32 	%r1193, %r1192, %r1104;
	add.s32 	%r1194, %r1193, %r1188;
	ld.const.u32 	%r1195, [K256+36];
	add.s32 	%r1196, %r1194, %r1195;
	add.s32 	%r1197, %r1196, %r221;
	shf.l.wrap.b32 	%r1198, %r1183, %r1183, 30;
	shf.l.wrap.b32 	%r1199, %r1183, %r1183, 19;
	xor.b32  	%r1200, %r1198, %r1199;
	shf.l.wrap.b32 	%r1201, %r1183, %r1183, 10;
	xor.b32  	%r1202, %r1200, %r1201;
	xor.b32  	%r1203, %r1157, %r1131;
	and.b32  	%r1204, %r1183, %r1203;
	and.b32  	%r1205, %r1157, %r1131;
	xor.b32  	%r1206, %r1204, %r1205;
	add.s32 	%r1207, %r1202, %r1206;
	add.s32 	%r1208, %r1197, %r1105;
	add.s32 	%r1209, %r1207, %r1197;
	shf.l.wrap.b32 	%r1210, %r1208, %r1208, 26;
	shf.l.wrap.b32 	%r1211, %r1208, %r1208, 21;
	xor.b32  	%r1212, %r1210, %r1211;
	shf.l.wrap.b32 	%r1213, %r1208, %r1208, 7;
	xor.b32  	%r1214, %r1212, %r1213;
	and.b32  	%r1215, %r1208, %r1182;
	not.b32 	%r1216, %r1208;
	and.b32  	%r1217, %r1156, %r1216;
	or.b32  	%r1218, %r1215, %r1217;
	add.s32 	%r1219, %r1218, %r1130;
	add.s32 	%r1220, %r1219, %r1214;
	ld.const.u32 	%r1221, [K256+40];
	add.s32 	%r1222, %r1220, %r1221;
	add.s32 	%r1223, %r1222, %r230;
	shf.l.wrap.b32 	%r1224, %r1209, %r1209, 30;
	shf.l.wrap.b32 	%r1225, %r1209, %r1209, 19;
	xor.b32  	%r1226, %r1224, %r1225;
	shf.l.wrap.b32 	%r1227, %r1209, %r1209, 10;
	xor.b32  	%r1228, %r1226, %r1227;
	xor.b32  	%r1229, %r1183, %r1157;
	and.b32  	%r1230, %r1209, %r1229;
	and.b32  	%r1231, %r1183, %r1157;
	xor.b32  	%r1232, %r1230, %r1231;
	add.s32 	%r1233, %r1228, %r1232;
	add.s32 	%r1234, %r1223, %r1131;
	add.s32 	%r1235, %r1233, %r1223;
	shf.l.wrap.b32 	%r1236, %r1234, %r1234, 26;
	shf.l.wrap.b32 	%r1237, %r1234, %r1234, 21;
	xor.b32  	%r1238, %r1236, %r1237;
	shf.l.wrap.b32 	%r1239, %r1234, %r1234, 7;
	xor.b32  	%r1240, %r1238, %r1239;
	and.b32  	%r1241, %r1234, %r1208;
	not.b32 	%r1242, %r1234;
	and.b32  	%r1243, %r1182, %r1242;
	or.b32  	%r1244, %r1241, %r1243;
	add.s32 	%r1245, %r1244, %r1156;
	add.s32 	%r1246, %r1245, %r1240;
	ld.const.u32 	%r1247, [K256+44];
	add.s32 	%r1248, %r1246, %r1247;
	add.s32 	%r1249, %r1248, %r239;
	shf.l.wrap.b32 	%r1250, %r1235, %r1235, 30;
	shf.l.wrap.b32 	%r1251, %r1235, %r1235, 19;
	xor.b32  	%r1252, %r1250, %r1251;
	shf.l.wrap.b32 	%r1253, %r1235, %r1235, 10;
	xor.b32  	%r1254, %r1252, %r1253;
	xor.b32  	%r1255, %r1209, %r1183;
	and.b32  	%r1256, %r1235, %r1255;
	and.b32  	%r1257, %r1209, %r1183;
	xor.b32  	%r1258, %r1256, %r1257;
	add.s32 	%r1259, %r1254, %r1258;
	add.s32 	%r1260, %r1249, %r1157;
	add.s32 	%r1261, %r1259, %r1249;
	shf.l.wrap.b32 	%r1262, %r1260, %r1260, 26;
	shf.l.wrap.b32 	%r1263, %r1260, %r1260, 21;
	xor.b32  	%r1264, %r1262, %r1263;
	shf.l.wrap.b32 	%r1265, %r1260, %r1260, 7;
	xor.b32  	%r1266, %r1264, %r1265;
	and.b32  	%r1267, %r1260, %r1234;
	not.b32 	%r1268, %r1260;
	and.b32  	%r1269, %r1208, %r1268;
	or.b32  	%r1270, %r1267, %r1269;
	add.s32 	%r1271, %r1270, %r1182;
	add.s32 	%r1272, %r1271, %r1266;
	ld.const.u32 	%r1273, [K256+48];
	add.s32 	%r1274, %r1272, %r1273;
	add.s32 	%r1275, %r1274, %r248;
	shf.l.wrap.b32 	%r1276, %r1261, %r1261, 30;
	shf.l.wrap.b32 	%r1277, %r1261, %r1261, 19;
	xor.b32  	%r1278, %r1276, %r1277;
	shf.l.wrap.b32 	%r1279, %r1261, %r1261, 10;
	xor.b32  	%r1280, %r1278, %r1279;
	xor.b32  	%r1281, %r1235, %r1209;
	and.b32  	%r1282, %r1261, %r1281;
	and.b32  	%r1283, %r1235, %r1209;
	xor.b32  	%r1284, %r1282, %r1283;
	add.s32 	%r1285, %r1280, %r1284;
	add.s32 	%r1286, %r1275, %r1183;
	add.s32 	%r1287, %r1285, %r1275;
	shf.l.wrap.b32 	%r1288, %r1286, %r1286, 26;
	shf.l.wrap.b32 	%r1289, %r1286, %r1286, 21;
	xor.b32  	%r1290, %r1288, %r1289;
	shf.l.wrap.b32 	%r1291, %r1286, %r1286, 7;
	xor.b32  	%r1292, %r1290, %r1291;
	and.b32  	%r1293, %r1286, %r1260;
	not.b32 	%r1294, %r1286;
	and.b32  	%r1295, %r1234, %r1294;
	or.b32  	%r1296, %r1293, %r1295;
	add.s32 	%r1297, %r1296, %r1208;
	add.s32 	%r1298, %r1297, %r1292;
	ld.const.u32 	%r1299, [K256+52];
	add.s32 	%r1300, %r1298, %r1299;
	add.s32 	%r1301, %r1300, %r257;
	shf.l.wrap.b32 	%r1302, %r1287, %r1287, 30;
	shf.l.wrap.b32 	%r1303, %r1287, %r1287, 19;
	xor.b32  	%r1304, %r1302, %r1303;
	shf.l.wrap.b32 	%r1305, %r1287, %r1287, 10;
	xor.b32  	%r1306, %r1304, %r1305;
	xor.b32  	%r1307, %r1261, %r1235;
	and.b32  	%r1308, %r1287, %r1307;
	and.b32  	%r1309, %r1261, %r1235;
	xor.b32  	%r1310, %r1308, %r1309;
	add.s32 	%r1311, %r1306, %r1310;
	add.s32 	%r1312, %r1301, %r1209;
	add.s32 	%r1313, %r1311, %r1301;
	shf.l.wrap.b32 	%r1314, %r1312, %r1312, 26;
	shf.l.wrap.b32 	%r1315, %r1312, %r1312, 21;
	xor.b32  	%r1316, %r1314, %r1315;
	shf.l.wrap.b32 	%r1317, %r1312, %r1312, 7;
	xor.b32  	%r1318, %r1316, %r1317;
	and.b32  	%r1319, %r1312, %r1286;
	not.b32 	%r1320, %r1312;
	and.b32  	%r1321, %r1260, %r1320;
	or.b32  	%r1322, %r1319, %r1321;
	add.s32 	%r1323, %r1322, %r1234;
	add.s32 	%r1324, %r1323, %r1318;
	ld.const.u32 	%r1325, [K256+56];
	add.s32 	%r1326, %r1324, %r1325;
	add.s32 	%r1327, %r1326, %r266;
	shf.l.wrap.b32 	%r1328, %r1313, %r1313, 30;
	shf.l.wrap.b32 	%r1329, %r1313, %r1313, 19;
	xor.b32  	%r1330, %r1328, %r1329;
	shf.l.wrap.b32 	%r1331, %r1313, %r1313, 10;
	xor.b32  	%r1332, %r1330, %r1331;
	xor.b32  	%r1333, %r1287, %r1261;
	and.b32  	%r1334, %r1313, %r1333;
	and.b32  	%r1335, %r1287, %r1261;
	xor.b32  	%r1336, %r1334, %r1335;
	add.s32 	%r1337, %r1332, %r1336;
	add.s32 	%r1338, %r1327, %r1235;
	add.s32 	%r1339, %r1337, %r1327;
	shf.l.wrap.b32 	%r1340, %r1338, %r1338, 26;
	shf.l.wrap.b32 	%r1341, %r1338, %r1338, 21;
	xor.b32  	%r1342, %r1340, %r1341;
	shf.l.wrap.b32 	%r1343, %r1338, %r1338, 7;
	xor.b32  	%r1344, %r1342, %r1343;
	and.b32  	%r1345, %r1338, %r1312;
	not.b32 	%r1346, %r1338;
	and.b32  	%r1347, %r1286, %r1346;
	or.b32  	%r1348, %r1345, %r1347;
	add.s32 	%r1349, %r1348, %r1260;
	add.s32 	%r1350, %r1349, %r1344;
	ld.const.u32 	%r1351, [K256+60];
	add.s32 	%r1352, %r1350, %r1351;
	add.s32 	%r1353, %r1352, %r277;
	shf.l.wrap.b32 	%r1354, %r1339, %r1339, 30;
	shf.l.wrap.b32 	%r1355, %r1339, %r1339, 19;
	xor.b32  	%r1356, %r1354, %r1355;
	shf.l.wrap.b32 	%r1357, %r1339, %r1339, 10;
	xor.b32  	%r1358, %r1356, %r1357;
	xor.b32  	%r1359, %r1313, %r1287;
	and.b32  	%r1360, %r1339, %r1359;
	and.b32  	%r1361, %r1313, %r1287;
	xor.b32  	%r1362, %r1360, %r1361;
	add.s32 	%r1363, %r1358, %r1362;
	add.s32 	%r1364, %r1353, %r1261;
	add.s32 	%r1365, %r1363, %r1353;
	shf.l.wrap.b32 	%r1366, %r1364, %r1364, 26;
	shf.l.wrap.b32 	%r1367, %r1364, %r1364, 21;
	xor.b32  	%r1368, %r1366, %r1367;
	shf.l.wrap.b32 	%r1369, %r1364, %r1364, 7;
	xor.b32  	%r1370, %r1368, %r1369;
	and.b32  	%r1371, %r1364, %r1338;
	not.b32 	%r1372, %r1364;
	and.b32  	%r1373, %r1312, %r1372;
	or.b32  	%r1374, %r1371, %r1373;
	add.s32 	%r1375, %r1374, %r1286;
	add.s32 	%r1376, %r1375, %r1370;
	ld.const.u32 	%r1377, [K256+64];
	add.s32 	%r1378, %r1376, %r1377;
	add.s32 	%r1379, %r1378, %r298;
	shf.l.wrap.b32 	%r1380, %r1365, %r1365, 30;
	shf.l.wrap.b32 	%r1381, %r1365, %r1365, 19;
	xor.b32  	%r1382, %r1380, %r1381;
	shf.l.wrap.b32 	%r1383, %r1365, %r1365, 10;
	xor.b32  	%r1384, %r1382, %r1383;
	xor.b32  	%r1385, %r1339, %r1313;
	and.b32  	%r1386, %r1365, %r1385;
	and.b32  	%r1387, %r1339, %r1313;
	xor.b32  	%r1388, %r1386, %r1387;
	add.s32 	%r1389, %r1384, %r1388;
	add.s32 	%r1390, %r1379, %r1287;
	add.s32 	%r1391, %r1389, %r1379;
	shf.l.wrap.b32 	%r1392, %r1390, %r1390, 26;
	shf.l.wrap.b32 	%r1393, %r1390, %r1390, 21;
	xor.b32  	%r1394, %r1392, %r1393;
	shf.l.wrap.b32 	%r1395, %r1390, %r1390, 7;
	xor.b32  	%r1396, %r1394, %r1395;
	and.b32  	%r1397, %r1390, %r1364;
	not.b32 	%r1398, %r1390;
	and.b32  	%r1399, %r1338, %r1398;
	or.b32  	%r1400, %r1397, %r1399;
	add.s32 	%r1401, %r1400, %r1312;
	add.s32 	%r1402, %r1401, %r1396;
	ld.const.u32 	%r1403, [K256+68];
	add.s32 	%r1404, %r1402, %r1403;
	add.s32 	%r1405, %r1404, %r319;
	shf.l.wrap.b32 	%r1406, %r1391, %r1391, 30;
	shf.l.wrap.b32 	%r1407, %r1391, %r1391, 19;
	xor.b32  	%r1408, %r1406, %r1407;
	shf.l.wrap.b32 	%r1409, %r1391, %r1391, 10;
	xor.b32  	%r1410, %r1408, %r1409;
	xor.b32  	%r1411, %r1365, %r1339;
	and.b32  	%r1412, %r1391, %r1411;
	and.b32  	%r1413, %r1365, %r1339;
	xor.b32  	%r1414, %r1412, %r1413;
	add.s32 	%r1415, %r1410, %r1414;
	add.s32 	%r1416, %r1405, %r1313;
	add.s32 	%r1417, %r1415, %r1405;
	shf.l.wrap.b32 	%r1418, %r1416, %r1416, 26;
	shf.l.wrap.b32 	%r1419, %r1416, %r1416, 21;
	xor.b32  	%r1420, %r1418, %r1419;
	shf.l.wrap.b32 	%r1421, %r1416, %r1416, 7;
	xor.b32  	%r1422, %r1420, %r1421;
	and.b32  	%r1423, %r1416, %r1390;
	not.b32 	%r1424, %r1416;
	and.b32  	%r1425, %r1364, %r1424;
	or.b32  	%r1426, %r1423, %r1425;
	add.s32 	%r1427, %r1426, %r1338;
	add.s32 	%r1428, %r1427, %r1422;
	ld.const.u32 	%r1429, [K256+72];
	add.s32 	%r1430, %r1428, %r1429;
	add.s32 	%r1431, %r1430, %r336;
	shf.l.wrap.b32 	%r1432, %r1417, %r1417, 30;
	shf.l.wrap.b32 	%r1433, %r1417, %r1417, 19;
	xor.b32  	%r1434, %r1432, %r1433;
	shf.l.wrap.b32 	%r1435, %r1417, %r1417, 10;
	xor.b32  	%r1436, %r1434, %r1435;
	xor.b32  	%r1437, %r1391, %r1365;
	and.b32  	%r1438, %r1417, %r1437;
	and.b32  	%r1439, %r1391, %r1365;
	xor.b32  	%r1440, %r1438, %r1439;
	add.s32 	%r1441, %r1436, %r1440;
	add.s32 	%r1442, %r1431, %r1339;
	add.s32 	%r1443, %r1441, %r1431;
	shf.l.wrap.b32 	%r1444, %r1442, %r1442, 26;
	shf.l.wrap.b32 	%r1445, %r1442, %r1442, 21;
	xor.b32  	%r1446, %r1444, %r1445;
	shf.l.wrap.b32 	%r1447, %r1442, %r1442, 7;
	xor.b32  	%r1448, %r1446, %r1447;
	and.b32  	%r1449, %r1442, %r1416;
	not.b32 	%r1450, %r1442;
	and.b32  	%r1451, %r1390, %r1450;
	or.b32  	%r1452, %r1449, %r1451;
	add.s32 	%r1453, %r1452, %r1364;
	add.s32 	%r1454, %r1453, %r1448;
	ld.const.u32 	%r1455, [K256+76];
	add.s32 	%r1456, %r1454, %r1455;
	add.s32 	%r1457, %r1456, %r353;
	shf.l.wrap.b32 	%r1458, %r1443, %r1443, 30;
	shf.l.wrap.b32 	%r1459, %r1443, %r1443, 19;
	xor.b32  	%r1460, %r1458, %r1459;
	shf.l.wrap.b32 	%r1461, %r1443, %r1443, 10;
	xor.b32  	%r1462, %r1460, %r1461;
	xor.b32  	%r1463, %r1417, %r1391;
	and.b32  	%r1464, %r1443, %r1463;
	and.b32  	%r1465, %r1417, %r1391;
	xor.b32  	%r1466, %r1464, %r1465;
	add.s32 	%r1467, %r1462, %r1466;
	add.s32 	%r1468, %r1457, %r1365;
	add.s32 	%r1469, %r1467, %r1457;
	shf.l.wrap.b32 	%r1470, %r1468, %r1468, 26;
	shf.l.wrap.b32 	%r1471, %r1468, %r1468, 21;
	xor.b32  	%r1472, %r1470, %r1471;
	shf.l.wrap.b32 	%r1473, %r1468, %r1468, 7;
	xor.b32  	%r1474, %r1472, %r1473;
	and.b32  	%r1475, %r1468, %r1442;
	not.b32 	%r1476, %r1468;
	and.b32  	%r1477, %r1416, %r1476;
	or.b32  	%r1478, %r1475, %r1477;
	add.s32 	%r1479, %r1478, %r1390;
	add.s32 	%r1480, %r1479, %r1474;
	ld.const.u32 	%r1481, [K256+80];
	add.s32 	%r1482, %r1480, %r1481;
	add.s32 	%r1483, %r1482, %r370;
	shf.l.wrap.b32 	%r1484, %r1469, %r1469, 30;
	shf.l.wrap.b32 	%r1485, %r1469, %r1469, 19;
	xor.b32  	%r1486, %r1484, %r1485;
	shf.l.wrap.b32 	%r1487, %r1469, %r1469, 10;
	xor.b32  	%r1488, %r1486, %r1487;
	xor.b32  	%r1489, %r1443, %r1417;
	and.b32  	%r1490, %r1469, %r1489;
	and.b32  	%r1491, %r1443, %r1417;
	xor.b32  	%r1492, %r1490, %r1491;
	add.s32 	%r1493, %r1488, %r1492;
	add.s32 	%r1494, %r1483, %r1391;
	add.s32 	%r1495, %r1493, %r1483;
	shf.l.wrap.b32 	%r1496, %r1494, %r1494, 26;
	shf.l.wrap.b32 	%r1497, %r1494, %r1494, 21;
	xor.b32  	%r1498, %r1496, %r1497;
	shf.l.wrap.b32 	%r1499, %r1494, %r1494, 7;
	xor.b32  	%r1500, %r1498, %r1499;
	and.b32  	%r1501, %r1494, %r1468;
	not.b32 	%r1502, %r1494;
	and.b32  	%r1503, %r1442, %r1502;
	or.b32  	%r1504, %r1501, %r1503;
	add.s32 	%r1505, %r1504, %r1416;
	add.s32 	%r1506, %r1505, %r1500;
	ld.const.u32 	%r1507, [K256+84];
	add.s32 	%r1508, %r1506, %r1507;
	add.s32 	%r1509, %r1508, %r387;
	shf.l.wrap.b32 	%r1510, %r1495, %r1495, 30;
	shf.l.wrap.b32 	%r1511, %r1495, %r1495, 19;
	xor.b32  	%r1512, %r1510, %r1511;
	shf.l.wrap.b32 	%r1513, %r1495, %r1495, 10;
	xor.b32  	%r1514, %r1512, %r1513;
	xor.b32  	%r1515, %r1469, %r1443;
	and.b32  	%r1516, %r1495, %r1515;
	and.b32  	%r1517, %r1469, %r1443;
	xor.b32  	%r1518, %r1516, %r1517;
	add.s32 	%r1519, %r1514, %r1518;
	add.s32 	%r1520, %r1509, %r1417;
	add.s32 	%r1521, %r1519, %r1509;
	shf.l.wrap.b32 	%r1522, %r1520, %r1520, 26;
	shf.l.wrap.b32 	%r1523, %r1520, %r1520, 21;
	xor.b32  	%r1524, %r1522, %r1523;
	shf.l.wrap.b32 	%r1525, %r1520, %r1520, 7;
	xor.b32  	%r1526, %r1524, %r1525;
	and.b32  	%r1527, %r1520, %r1494;
	not.b32 	%r1528, %r1520;
	and.b32  	%r1529, %r1468, %r1528;
	or.b32  	%r1530, %r1527, %r1529;
	add.s32 	%r1531, %r1530, %r1442;
	add.s32 	%r1532, %r1531, %r1526;
	ld.const.u32 	%r1533, [K256+88];
	add.s32 	%r1534, %r1532, %r1533;
	add.s32 	%r1535, %r1534, %r404;
	shf.l.wrap.b32 	%r1536, %r1521, %r1521, 30;
	shf.l.wrap.b32 	%r1537, %r1521, %r1521, 19;
	xor.b32  	%r1538, %r1536, %r1537;
	shf.l.wrap.b32 	%r1539, %r1521, %r1521, 10;
	xor.b32  	%r1540, %r1538, %r1539;
	xor.b32  	%r1541, %r1495, %r1469;
	and.b32  	%r1542, %r1521, %r1541;
	and.b32  	%r1543, %r1495, %r1469;
	xor.b32  	%r1544, %r1542, %r1543;
	add.s32 	%r1545, %r1540, %r1544;
	add.s32 	%r1546, %r1535, %r1443;
	add.s32 	%r1547, %r1545, %r1535;
	shf.l.wrap.b32 	%r1548, %r1546, %r1546, 26;
	shf.l.wrap.b32 	%r1549, %r1546, %r1546, 21;
	xor.b32  	%r1550, %r1548, %r1549;
	shf.l.wrap.b32 	%r1551, %r1546, %r1546, 7;
	xor.b32  	%r1552, %r1550, %r1551;
	and.b32  	%r1553, %r1546, %r1520;
	not.b32 	%r1554, %r1546;
	and.b32  	%r1555, %r1494, %r1554;
	or.b32  	%r1556, %r1553, %r1555;
	add.s32 	%r1557, %r1556, %r1468;
	add.s32 	%r1558, %r1557, %r1552;
	ld.const.u32 	%r1559, [K256+92];
	add.s32 	%r1560, %r1558, %r1559;
	add.s32 	%r1561, %r1560, %r421;
	shf.l.wrap.b32 	%r1562, %r1547, %r1547, 30;
	shf.l.wrap.b32 	%r1563, %r1547, %r1547, 19;
	xor.b32  	%r1564, %r1562, %r1563;
	shf.l.wrap.b32 	%r1565, %r1547, %r1547, 10;
	xor.b32  	%r1566, %r1564, %r1565;
	xor.b32  	%r1567, %r1521, %r1495;
	and.b32  	%r1568, %r1547, %r1567;
	and.b32  	%r1569, %r1521, %r1495;
	xor.b32  	%r1570, %r1568, %r1569;
	add.s32 	%r1571, %r1566, %r1570;
	add.s32 	%r1572, %r1561, %r1469;
	add.s32 	%r1573, %r1571, %r1561;
	shf.l.wrap.b32 	%r1574, %r1572, %r1572, 26;
	shf.l.wrap.b32 	%r1575, %r1572, %r1572, 21;
	xor.b32  	%r1576, %r1574, %r1575;
	shf.l.wrap.b32 	%r1577, %r1572, %r1572, 7;
	xor.b32  	%r1578, %r1576, %r1577;
	and.b32  	%r1579, %r1572, %r1546;
	not.b32 	%r1580, %r1572;
	and.b32  	%r1581, %r1520, %r1580;
	or.b32  	%r1582, %r1579, %r1581;
	add.s32 	%r1583, %r1582, %r1494;
	add.s32 	%r1584, %r1583, %r1578;
	ld.const.u32 	%r1585, [K256+96];
	add.s32 	%r1586, %r1584, %r1585;
	add.s32 	%r1587, %r1586, %r438;
	shf.l.wrap.b32 	%r1588, %r1573, %r1573, 30;
	shf.l.wrap.b32 	%r1589, %r1573, %r1573, 19;
	xor.b32  	%r1590, %r1588, %r1589;
	shf.l.wrap.b32 	%r1591, %r1573, %r1573, 10;
	xor.b32  	%r1592, %r1590, %r1591;
	xor.b32  	%r1593, %r1547, %r1521;
	and.b32  	%r1594, %r1573, %r1593;
	and.b32  	%r1595, %r1547, %r1521;
	xor.b32  	%r1596, %r1594, %r1595;
	add.s32 	%r1597, %r1592, %r1596;
	add.s32 	%r1598, %r1587, %r1495;
	add.s32 	%r1599, %r1597, %r1587;
	shf.l.wrap.b32 	%r1600, %r1598, %r1598, 26;
	shf.l.wrap.b32 	%r1601, %r1598, %r1598, 21;
	xor.b32  	%r1602, %r1600, %r1601;
	shf.l.wrap.b32 	%r1603, %r1598, %r1598, 7;
	xor.b32  	%r1604, %r1602, %r1603;
	and.b32  	%r1605, %r1598, %r1572;
	not.b32 	%r1606, %r1598;
	and.b32  	%r1607, %r1546, %r1606;
	or.b32  	%r1608, %r1605, %r1607;
	add.s32 	%r1609, %r1608, %r1520;
	add.s32 	%r1610, %r1609, %r1604;
	ld.const.u32 	%r1611, [K256+100];
	add.s32 	%r1612, %r1610, %r1611;
	add.s32 	%r1613, %r1612, %r455;
	shf.l.wrap.b32 	%r1614, %r1599, %r1599, 30;
	shf.l.wrap.b32 	%r1615, %r1599, %r1599, 19;
	xor.b32  	%r1616, %r1614, %r1615;
	shf.l.wrap.b32 	%r1617, %r1599, %r1599, 10;
	xor.b32  	%r1618, %r1616, %r1617;
	xor.b32  	%r1619, %r1573, %r1547;
	and.b32  	%r1620, %r1599, %r1619;
	and.b32  	%r1621, %r1573, %r1547;
	xor.b32  	%r1622, %r1620, %r1621;
	add.s32 	%r1623, %r1618, %r1622;
	add.s32 	%r1624, %r1613, %r1521;
	add.s32 	%r1625, %r1623, %r1613;
	shf.l.wrap.b32 	%r1626, %r1624, %r1624, 26;
	shf.l.wrap.b32 	%r1627, %r1624, %r1624, 21;
	xor.b32  	%r1628, %r1626, %r1627;
	shf.l.wrap.b32 	%r1629, %r1624, %r1624, 7;
	xor.b32  	%r1630, %r1628, %r1629;
	and.b32  	%r1631, %r1624, %r1598;
	not.b32 	%r1632, %r1624;
	and.b32  	%r1633, %r1572, %r1632;
	or.b32  	%r1634, %r1631, %r1633;
	add.s32 	%r1635, %r1634, %r1546;
	add.s32 	%r1636, %r1635, %r1630;
	ld.const.u32 	%r1637, [K256+104];
	add.s32 	%r1638, %r1636, %r1637;
	add.s32 	%r1639, %r1638, %r472;
	shf.l.wrap.b32 	%r1640, %r1625, %r1625, 30;
	shf.l.wrap.b32 	%r1641, %r1625, %r1625, 19;
	xor.b32  	%r1642, %r1640, %r1641;
	shf.l.wrap.b32 	%r1643, %r1625, %r1625, 10;
	xor.b32  	%r1644, %r1642, %r1643;
	xor.b32  	%r1645, %r1599, %r1573;
	and.b32  	%r1646, %r1625, %r1645;
	and.b32  	%r1647, %r1599, %r1573;
	xor.b32  	%r1648, %r1646, %r1647;
	add.s32 	%r1649, %r1644, %r1648;
	add.s32 	%r1650, %r1639, %r1547;
	add.s32 	%r1651, %r1649, %r1639;
	shf.l.wrap.b32 	%r1652, %r1650, %r1650, 26;
	shf.l.wrap.b32 	%r1653, %r1650, %r1650, 21;
	xor.b32  	%r1654, %r1652, %r1653;
	shf.l.wrap.b32 	%r1655, %r1650, %r1650, 7;
	xor.b32  	%r1656, %r1654, %r1655;
	and.b32  	%r1657, %r1650, %r1624;
	not.b32 	%r1658, %r1650;
	and.b32  	%r1659, %r1598, %r1658;
	or.b32  	%r1660, %r1657, %r1659;
	add.s32 	%r1661, %r1660, %r1572;
	add.s32 	%r1662, %r1661, %r1656;
	ld.const.u32 	%r1663, [K256+108];
	add.s32 	%r1664, %r1662, %r1663;
	add.s32 	%r1665, %r1664, %r489;
	shf.l.wrap.b32 	%r1666, %r1651, %r1651, 30;
	shf.l.wrap.b32 	%r1667, %r1651, %r1651, 19;
	xor.b32  	%r1668, %r1666, %r1667;
	shf.l.wrap.b32 	%r1669, %r1651, %r1651, 10;
	xor.b32  	%r1670, %r1668, %r1669;
	xor.b32  	%r1671, %r1625, %r1599;
	and.b32  	%r1672, %r1651, %r1671;
	and.b32  	%r1673, %r1625, %r1599;
	xor.b32  	%r1674, %r1672, %r1673;
	add.s32 	%r1675, %r1670, %r1674;
	add.s32 	%r1676, %r1665, %r1573;
	add.s32 	%r1677, %r1675, %r1665;
	shf.l.wrap.b32 	%r1678, %r1676, %r1676, 26;
	shf.l.wrap.b32 	%r1679, %r1676, %r1676, 21;
	xor.b32  	%r1680, %r1678, %r1679;
	shf.l.wrap.b32 	%r1681, %r1676, %r1676, 7;
	xor.b32  	%r1682, %r1680, %r1681;
	and.b32  	%r1683, %r1676, %r1650;
	not.b32 	%r1684, %r1676;
	and.b32  	%r1685, %r1624, %r1684;
	or.b32  	%r1686, %r1683, %r1685;
	add.s32 	%r1687, %r1686, %r1598;
	add.s32 	%r1688, %r1687, %r1682;
	ld.const.u32 	%r1689, [K256+112];
	add.s32 	%r1690, %r1688, %r1689;
	add.s32 	%r1691, %r1690, %r506;
	shf.l.wrap.b32 	%r1692, %r1677, %r1677, 30;
	shf.l.wrap.b32 	%r1693, %r1677, %r1677, 19;
	xor.b32  	%r1694, %r1692, %r1693;
	shf.l.wrap.b32 	%r1695, %r1677, %r1677, 10;
	xor.b32  	%r1696, %r1694, %r1695;
	xor.b32  	%r1697, %r1651, %r1625;
	and.b32  	%r1698, %r1677, %r1697;
	and.b32  	%r1699, %r1651, %r1625;
	xor.b32  	%r1700, %r1698, %r1699;
	add.s32 	%r1701, %r1696, %r1700;
	add.s32 	%r1702, %r1691, %r1599;
	add.s32 	%r1703, %r1701, %r1691;
	shf.l.wrap.b32 	%r1704, %r1702, %r1702, 26;
	shf.l.wrap.b32 	%r1705, %r1702, %r1702, 21;
	xor.b32  	%r1706, %r1704, %r1705;
	shf.l.wrap.b32 	%r1707, %r1702, %r1702, 7;
	xor.b32  	%r1708, %r1706, %r1707;
	and.b32  	%r1709, %r1702, %r1676;
	not.b32 	%r1710, %r1702;
	and.b32  	%r1711, %r1650, %r1710;
	or.b32  	%r1712, %r1709, %r1711;
	add.s32 	%r1713, %r1712, %r1624;
	add.s32 	%r1714, %r1713, %r1708;
	ld.const.u32 	%r1715, [K256+116];
	add.s32 	%r1716, %r1714, %r1715;
	add.s32 	%r1717, %r1716, %r523;
	shf.l.wrap.b32 	%r1718, %r1703, %r1703, 30;
	shf.l.wrap.b32 	%r1719, %r1703, %r1703, 19;
	xor.b32  	%r1720, %r1718, %r1719;
	shf.l.wrap.b32 	%r1721, %r1703, %r1703, 10;
	xor.b32  	%r1722, %r1720, %r1721;
	xor.b32  	%r1723, %r1677, %r1651;
	and.b32  	%r1724, %r1703, %r1723;
	and.b32  	%r1725, %r1677, %r1651;
	xor.b32  	%r1726, %r1724, %r1725;
	add.s32 	%r1727, %r1722, %r1726;
	add.s32 	%r1728, %r1717, %r1625;
	add.s32 	%r1729, %r1727, %r1717;
	shf.l.wrap.b32 	%r1730, %r1728, %r1728, 26;
	shf.l.wrap.b32 	%r1731, %r1728, %r1728, 21;
	xor.b32  	%r1732, %r1730, %r1731;
	shf.l.wrap.b32 	%r1733, %r1728, %r1728, 7;
	xor.b32  	%r1734, %r1732, %r1733;
	and.b32  	%r1735, %r1728, %r1702;
	not.b32 	%r1736, %r1728;
	and.b32  	%r1737, %r1676, %r1736;
	or.b32  	%r1738, %r1735, %r1737;
	add.s32 	%r1739, %r1738, %r1650;
	add.s32 	%r1740, %r1739, %r1734;
	ld.const.u32 	%r1741, [K256+120];
	add.s32 	%r1742, %r1740, %r1741;
	add.s32 	%r1743, %r1742, %r540;
	shf.l.wrap.b32 	%r1744, %r1729, %r1729, 30;
	shf.l.wrap.b32 	%r1745, %r1729, %r1729, 19;
	xor.b32  	%r1746, %r1744, %r1745;
	shf.l.wrap.b32 	%r1747, %r1729, %r1729, 10;
	xor.b32  	%r1748, %r1746, %r1747;
	xor.b32  	%r1749, %r1703, %r1677;
	and.b32  	%r1750, %r1729, %r1749;
	and.b32  	%r1751, %r1703, %r1677;
	xor.b32  	%r1752, %r1750, %r1751;
	add.s32 	%r1753, %r1748, %r1752;
	add.s32 	%r1754, %r1743, %r1651;
	add.s32 	%r1755, %r1753, %r1743;
	shf.l.wrap.b32 	%r1756, %r1754, %r1754, 26;
	shf.l.wrap.b32 	%r1757, %r1754, %r1754, 21;
	xor.b32  	%r1758, %r1756, %r1757;
	shf.l.wrap.b32 	%r1759, %r1754, %r1754, 7;
	xor.b32  	%r1760, %r1758, %r1759;
	and.b32  	%r1761, %r1754, %r1728;
	not.b32 	%r1762, %r1754;
	and.b32  	%r1763, %r1702, %r1762;
	or.b32  	%r1764, %r1761, %r1763;
	add.s32 	%r1765, %r1764, %r1676;
	add.s32 	%r1766, %r1765, %r1760;
	ld.const.u32 	%r1767, [K256+124];
	add.s32 	%r1768, %r1766, %r1767;
	add.s32 	%r1769, %r1768, %r553;
	shf.l.wrap.b32 	%r1770, %r1755, %r1755, 30;
	shf.l.wrap.b32 	%r1771, %r1755, %r1755, 19;
	xor.b32  	%r1772, %r1770, %r1771;
	shf.l.wrap.b32 	%r1773, %r1755, %r1755, 10;
	xor.b32  	%r1774, %r1772, %r1773;
	xor.b32  	%r1775, %r1729, %r1703;
	and.b32  	%r1776, %r1755, %r1775;
	and.b32  	%r1777, %r1729, %r1703;
	xor.b32  	%r1778, %r1776, %r1777;
	add.s32 	%r1779, %r1774, %r1778;
	add.s32 	%r1780, %r1769, %r1677;
	add.s32 	%r1781, %r1779, %r1769;
	shf.l.wrap.b32 	%r1782, %r1780, %r1780, 26;
	shf.l.wrap.b32 	%r1783, %r1780, %r1780, 21;
	xor.b32  	%r1784, %r1782, %r1783;
	shf.l.wrap.b32 	%r1785, %r1780, %r1780, 7;
	xor.b32  	%r1786, %r1784, %r1785;
	and.b32  	%r1787, %r1780, %r1754;
	not.b32 	%r1788, %r1780;
	and.b32  	%r1789, %r1728, %r1788;
	or.b32  	%r1790, %r1787, %r1789;
	add.s32 	%r1791, %r1790, %r1702;
	add.s32 	%r1792, %r1791, %r1786;
	ld.const.u32 	%r1793, [K256+128];
	add.s32 	%r1794, %r1792, %r1793;
	add.s32 	%r1795, %r1794, %r566;
	shf.l.wrap.b32 	%r1796, %r1781, %r1781, 30;
	shf.l.wrap.b32 	%r1797, %r1781, %r1781, 19;
	xor.b32  	%r1798, %r1796, %r1797;
	shf.l.wrap.b32 	%r1799, %r1781, %r1781, 10;
	xor.b32  	%r1800, %r1798, %r1799;
	xor.b32  	%r1801, %r1755, %r1729;
	and.b32  	%r1802, %r1781, %r1801;
	and.b32  	%r1803, %r1755, %r1729;
	xor.b32  	%r1804, %r1802, %r1803;
	add.s32 	%r1805, %r1800, %r1804;
	add.s32 	%r1806, %r1795, %r1703;
	add.s32 	%r1807, %r1805, %r1795;
	shf.l.wrap.b32 	%r1808, %r1806, %r1806, 26;
	shf.l.wrap.b32 	%r1809, %r1806, %r1806, 21;
	xor.b32  	%r1810, %r1808, %r1809;
	shf.l.wrap.b32 	%r1811, %r1806, %r1806, 7;
	xor.b32  	%r1812, %r1810, %r1811;
	and.b32  	%r1813, %r1806, %r1780;
	not.b32 	%r1814, %r1806;
	and.b32  	%r1815, %r1754, %r1814;
	or.b32  	%r1816, %r1813, %r1815;
	add.s32 	%r1817, %r1816, %r1728;
	add.s32 	%r1818, %r1817, %r1812;
	ld.const.u32 	%r1819, [K256+132];
	add.s32 	%r1820, %r1818, %r1819;
	add.s32 	%r1821, %r1820, %r579;
	shf.l.wrap.b32 	%r1822, %r1807, %r1807, 30;
	shf.l.wrap.b32 	%r1823, %r1807, %r1807, 19;
	xor.b32  	%r1824, %r1822, %r1823;
	shf.l.wrap.b32 	%r1825, %r1807, %r1807, 10;
	xor.b32  	%r1826, %r1824, %r1825;
	xor.b32  	%r1827, %r1781, %r1755;
	and.b32  	%r1828, %r1807, %r1827;
	and.b32  	%r1829, %r1781, %r1755;
	xor.b32  	%r1830, %r1828, %r1829;
	add.s32 	%r1831, %r1826, %r1830;
	add.s32 	%r1832, %r1821, %r1729;
	add.s32 	%r1833, %r1831, %r1821;
	shf.l.wrap.b32 	%r1834, %r1832, %r1832, 26;
	shf.l.wrap.b32 	%r1835, %r1832, %r1832, 21;
	xor.b32  	%r1836, %r1834, %r1835;
	shf.l.wrap.b32 	%r1837, %r1832, %r1832, 7;
	xor.b32  	%r1838, %r1836, %r1837;
	and.b32  	%r1839, %r1832, %r1806;
	not.b32 	%r1840, %r1832;
	and.b32  	%r1841, %r1780, %r1840;
	or.b32  	%r1842, %r1839, %r1841;
	add.s32 	%r1843, %r1842, %r1754;
	add.s32 	%r1844, %r1843, %r1838;
	ld.const.u32 	%r1845, [K256+136];
	add.s32 	%r1846, %r1844, %r1845;
	add.s32 	%r1847, %r1846, %r592;
	shf.l.wrap.b32 	%r1848, %r1833, %r1833, 30;
	shf.l.wrap.b32 	%r1849, %r1833, %r1833, 19;
	xor.b32  	%r1850, %r1848, %r1849;
	shf.l.wrap.b32 	%r1851, %r1833, %r1833, 10;
	xor.b32  	%r1852, %r1850, %r1851;
	xor.b32  	%r1853, %r1807, %r1781;
	and.b32  	%r1854, %r1833, %r1853;
	and.b32  	%r1855, %r1807, %r1781;
	xor.b32  	%r1856, %r1854, %r1855;
	add.s32 	%r1857, %r1852, %r1856;
	add.s32 	%r1858, %r1847, %r1755;
	add.s32 	%r1859, %r1857, %r1847;
	shf.l.wrap.b32 	%r1860, %r1858, %r1858, 26;
	shf.l.wrap.b32 	%r1861, %r1858, %r1858, 21;
	xor.b32  	%r1862, %r1860, %r1861;
	shf.l.wrap.b32 	%r1863, %r1858, %r1858, 7;
	xor.b32  	%r1864, %r1862, %r1863;
	and.b32  	%r1865, %r1858, %r1832;
	not.b32 	%r1866, %r1858;
	and.b32  	%r1867, %r1806, %r1866;
	or.b32  	%r1868, %r1865, %r1867;
	add.s32 	%r1869, %r1868, %r1780;
	add.s32 	%r1870, %r1869, %r1864;
	ld.const.u32 	%r1871, [K256+140];
	add.s32 	%r1872, %r1870, %r1871;
	add.s32 	%r1873, %r1872, %r605;
	shf.l.wrap.b32 	%r1874, %r1859, %r1859, 30;
	shf.l.wrap.b32 	%r1875, %r1859, %r1859, 19;
	xor.b32  	%r1876, %r1874, %r1875;
	shf.l.wrap.b32 	%r1877, %r1859, %r1859, 10;
	xor.b32  	%r1878, %r1876, %r1877;
	xor.b32  	%r1879, %r1833, %r1807;
	and.b32  	%r1880, %r1859, %r1879;
	and.b32  	%r1881, %r1833, %r1807;
	xor.b32  	%r1882, %r1880, %r1881;
	add.s32 	%r1883, %r1878, %r1882;
	add.s32 	%r1884, %r1873, %r1781;
	add.s32 	%r1885, %r1883, %r1873;
	shf.l.wrap.b32 	%r1886, %r1884, %r1884, 26;
	shf.l.wrap.b32 	%r1887, %r1884, %r1884, 21;
	xor.b32  	%r1888, %r1886, %r1887;
	shf.l.wrap.b32 	%r1889, %r1884, %r1884, 7;
	xor.b32  	%r1890, %r1888, %r1889;
	and.b32  	%r1891, %r1884, %r1858;
	not.b32 	%r1892, %r1884;
	and.b32  	%r1893, %r1832, %r1892;
	or.b32  	%r1894, %r1891, %r1893;
	add.s32 	%r1895, %r1894, %r1806;
	add.s32 	%r1896, %r1895, %r1890;
	ld.const.u32 	%r1897, [K256+144];
	add.s32 	%r1898, %r1896, %r1897;
	add.s32 	%r1899, %r1898, %r618;
	shf.l.wrap.b32 	%r1900, %r1885, %r1885, 30;
	shf.l.wrap.b32 	%r1901, %r1885, %r1885, 19;
	xor.b32  	%r1902, %r1900, %r1901;
	shf.l.wrap.b32 	%r1903, %r1885, %r1885, 10;
	xor.b32  	%r1904, %r1902, %r1903;
	xor.b32  	%r1905, %r1859, %r1833;
	and.b32  	%r1906, %r1885, %r1905;
	and.b32  	%r1907, %r1859, %r1833;
	xor.b32  	%r1908, %r1906, %r1907;
	add.s32 	%r1909, %r1904, %r1908;
	add.s32 	%r1910, %r1899, %r1807;
	add.s32 	%r1911, %r1909, %r1899;
	shf.l.wrap.b32 	%r1912, %r1910, %r1910, 26;
	shf.l.wrap.b32 	%r1913, %r1910, %r1910, 21;
	xor.b32  	%r1914, %r1912, %r1913;
	shf.l.wrap.b32 	%r1915, %r1910, %r1910, 7;
	xor.b32  	%r1916, %r1914, %r1915;
	and.b32  	%r1917, %r1910, %r1884;
	not.b32 	%r1918, %r1910;
	and.b32  	%r1919, %r1858, %r1918;
	or.b32  	%r1920, %r1917, %r1919;
	add.s32 	%r1921, %r1920, %r1832;
	add.s32 	%r1922, %r1921, %r1916;
	ld.const.u32 	%r1923, [K256+148];
	add.s32 	%r1924, %r1922, %r1923;
	add.s32 	%r1925, %r1924, %r631;
	shf.l.wrap.b32 	%r1926, %r1911, %r1911, 30;
	shf.l.wrap.b32 	%r1927, %r1911, %r1911, 19;
	xor.b32  	%r1928, %r1926, %r1927;
	shf.l.wrap.b32 	%r1929, %r1911, %r1911, 10;
	xor.b32  	%r1930, %r1928, %r1929;
	xor.b32  	%r1931, %r1885, %r1859;
	and.b32  	%r1932, %r1911, %r1931;
	and.b32  	%r1933, %r1885, %r1859;
	xor.b32  	%r1934, %r1932, %r1933;
	add.s32 	%r1935, %r1930, %r1934;
	add.s32 	%r1936, %r1925, %r1833;
	add.s32 	%r1937, %r1935, %r1925;
	shf.l.wrap.b32 	%r1938, %r1936, %r1936, 26;
	shf.l.wrap.b32 	%r1939, %r1936, %r1936, 21;
	xor.b32  	%r1940, %r1938, %r1939;
	shf.l.wrap.b32 	%r1941, %r1936, %r1936, 7;
	xor.b32  	%r1942, %r1940, %r1941;
	and.b32  	%r1943, %r1936, %r1910;
	not.b32 	%r1944, %r1936;
	and.b32  	%r1945, %r1884, %r1944;
	or.b32  	%r1946, %r1943, %r1945;
	add.s32 	%r1947, %r1946, %r1858;
	add.s32 	%r1948, %r1947, %r1942;
	ld.const.u32 	%r1949, [K256+152];
	add.s32 	%r1950, %r1948, %r1949;
	add.s32 	%r1951, %r1950, %r644;
	shf.l.wrap.b32 	%r1952, %r1937, %r1937, 30;
	shf.l.wrap.b32 	%r1953, %r1937, %r1937, 19;
	xor.b32  	%r1954, %r1952, %r1953;
	shf.l.wrap.b32 	%r1955, %r1937, %r1937, 10;
	xor.b32  	%r1956, %r1954, %r1955;
	xor.b32  	%r1957, %r1911, %r1885;
	and.b32  	%r1958, %r1937, %r1957;
	and.b32  	%r1959, %r1911, %r1885;
	xor.b32  	%r1960, %r1958, %r1959;
	add.s32 	%r1961, %r1956, %r1960;
	add.s32 	%r1962, %r1951, %r1859;
	add.s32 	%r1963, %r1961, %r1951;
	shf.l.wrap.b32 	%r1964, %r1962, %r1962, 26;
	shf.l.wrap.b32 	%r1965, %r1962, %r1962, 21;
	xor.b32  	%r1966, %r1964, %r1965;
	shf.l.wrap.b32 	%r1967, %r1962, %r1962, 7;
	xor.b32  	%r1968, %r1966, %r1967;
	and.b32  	%r1969, %r1962, %r1936;
	not.b32 	%r1970, %r1962;
	and.b32  	%r1971, %r1910, %r1970;
	or.b32  	%r1972, %r1969, %r1971;
	add.s32 	%r1973, %r1972, %r1884;
	add.s32 	%r1974, %r1973, %r1968;
	ld.const.u32 	%r1975, [K256+156];
	add.s32 	%r1976, %r1974, %r1975;
	add.s32 	%r1977, %r1976, %r657;
	shf.l.wrap.b32 	%r1978, %r1963, %r1963, 30;
	shf.l.wrap.b32 	%r1979, %r1963, %r1963, 19;
	xor.b32  	%r1980, %r1978, %r1979;
	shf.l.wrap.b32 	%r1981, %r1963, %r1963, 10;
	xor.b32  	%r1982, %r1980, %r1981;
	xor.b32  	%r1983, %r1937, %r1911;
	and.b32  	%r1984, %r1963, %r1983;
	and.b32  	%r1985, %r1937, %r1911;
	xor.b32  	%r1986, %r1984, %r1985;
	add.s32 	%r1987, %r1982, %r1986;
	add.s32 	%r1988, %r1977, %r1885;
	add.s32 	%r1989, %r1987, %r1977;
	shf.l.wrap.b32 	%r1990, %r1988, %r1988, 26;
	shf.l.wrap.b32 	%r1991, %r1988, %r1988, 21;
	xor.b32  	%r1992, %r1990, %r1991;
	shf.l.wrap.b32 	%r1993, %r1988, %r1988, 7;
	xor.b32  	%r1994, %r1992, %r1993;
	and.b32  	%r1995, %r1988, %r1962;
	not.b32 	%r1996, %r1988;
	and.b32  	%r1997, %r1936, %r1996;
	or.b32  	%r1998, %r1995, %r1997;
	add.s32 	%r1999, %r1998, %r1910;
	add.s32 	%r2000, %r1999, %r1994;
	ld.const.u32 	%r2001, [K256+160];
	add.s32 	%r2002, %r2000, %r2001;
	add.s32 	%r2003, %r2002, %r670;
	shf.l.wrap.b32 	%r2004, %r1989, %r1989, 30;
	shf.l.wrap.b32 	%r2005, %r1989, %r1989, 19;
	xor.b32  	%r2006, %r2004, %r2005;
	shf.l.wrap.b32 	%r2007, %r1989, %r1989, 10;
	xor.b32  	%r2008, %r2006, %r2007;
	xor.b32  	%r2009, %r1963, %r1937;
	and.b32  	%r2010, %r1989, %r2009;
	and.b32  	%r2011, %r1963, %r1937;
	xor.b32  	%r2012, %r2010, %r2011;
	add.s32 	%r2013, %r2008, %r2012;
	add.s32 	%r2014, %r2003, %r1911;
	add.s32 	%r2015, %r2013, %r2003;
	shf.l.wrap.b32 	%r2016, %r2014, %r2014, 26;
	shf.l.wrap.b32 	%r2017, %r2014, %r2014, 21;
	xor.b32  	%r2018, %r2016, %r2017;
	shf.l.wrap.b32 	%r2019, %r2014, %r2014, 7;
	xor.b32  	%r2020, %r2018, %r2019;
	and.b32  	%r2021, %r2014, %r1988;
	not.b32 	%r2022, %r2014;
	and.b32  	%r2023, %r1962, %r2022;
	or.b32  	%r2024, %r2021, %r2023;
	add.s32 	%r2025, %r2024, %r1936;
	add.s32 	%r2026, %r2025, %r2020;
	ld.const.u32 	%r2027, [K256+164];
	add.s32 	%r2028, %r2026, %r2027;
	add.s32 	%r2029, %r2028, %r683;
	shf.l.wrap.b32 	%r2030, %r2015, %r2015, 30;
	shf.l.wrap.b32 	%r2031, %r2015, %r2015, 19;
	xor.b32  	%r2032, %r2030, %r2031;
	shf.l.wrap.b32 	%r2033, %r2015, %r2015, 10;
	xor.b32  	%r2034, %r2032, %r2033;
	xor.b32  	%r2035, %r1989, %r1963;
	and.b32  	%r2036, %r2015, %r2035;
	and.b32  	%r2037, %r1989, %r1963;
	xor.b32  	%r2038, %r2036, %r2037;
	add.s32 	%r2039, %r2034, %r2038;
	add.s32 	%r2040, %r2029, %r1937;
	add.s32 	%r2041, %r2039, %r2029;
	shf.l.wrap.b32 	%r2042, %r2040, %r2040, 26;
	shf.l.wrap.b32 	%r2043, %r2040, %r2040, 21;
	xor.b32  	%r2044, %r2042, %r2043;
	shf.l.wrap.b32 	%r2045, %r2040, %r2040, 7;
	xor.b32  	%r2046, %r2044, %r2045;
	and.b32  	%r2047, %r2040, %r2014;
	not.b32 	%r2048, %r2040;
	and.b32  	%r2049, %r1988, %r2048;
	or.b32  	%r2050, %r2047, %r2049;
	add.s32 	%r2051, %r2050, %r1962;
	add.s32 	%r2052, %r2051, %r2046;
	ld.const.u32 	%r2053, [K256+168];
	add.s32 	%r2054, %r2052, %r2053;
	add.s32 	%r2055, %r2054, %r696;
	shf.l.wrap.b32 	%r2056, %r2041, %r2041, 30;
	shf.l.wrap.b32 	%r2057, %r2041, %r2041, 19;
	xor.b32  	%r2058, %r2056, %r2057;
	shf.l.wrap.b32 	%r2059, %r2041, %r2041, 10;
	xor.b32  	%r2060, %r2058, %r2059;
	xor.b32  	%r2061, %r2015, %r1989;
	and.b32  	%r2062, %r2041, %r2061;
	and.b32  	%r2063, %r2015, %r1989;
	xor.b32  	%r2064, %r2062, %r2063;
	add.s32 	%r2065, %r2060, %r2064;
	add.s32 	%r2066, %r2055, %r1963;
	add.s32 	%r2067, %r2065, %r2055;
	shf.l.wrap.b32 	%r2068, %r2066, %r2066, 26;
	shf.l.wrap.b32 	%r2069, %r2066, %r2066, 21;
	xor.b32  	%r2070, %r2068, %r2069;
	shf.l.wrap.b32 	%r2071, %r2066, %r2066, 7;
	xor.b32  	%r2072, %r2070, %r2071;
	and.b32  	%r2073, %r2066, %r2040;
	not.b32 	%r2074, %r2066;
	and.b32  	%r2075, %r2014, %r2074;
	or.b32  	%r2076, %r2073, %r2075;
	add.s32 	%r2077, %r2076, %r1988;
	add.s32 	%r2078, %r2077, %r2072;
	ld.const.u32 	%r2079, [K256+172];
	add.s32 	%r2080, %r2078, %r2079;
	add.s32 	%r2081, %r2080, %r709;
	shf.l.wrap.b32 	%r2082, %r2067, %r2067, 30;
	shf.l.wrap.b32 	%r2083, %r2067, %r2067, 19;
	xor.b32  	%r2084, %r2082, %r2083;
	shf.l.wrap.b32 	%r2085, %r2067, %r2067, 10;
	xor.b32  	%r2086, %r2084, %r2085;
	xor.b32  	%r2087, %r2041, %r2015;
	and.b32  	%r2088, %r2067, %r2087;
	and.b32  	%r2089, %r2041, %r2015;
	xor.b32  	%r2090, %r2088, %r2089;
	add.s32 	%r2091, %r2086, %r2090;
	add.s32 	%r2092, %r2081, %r1989;
	add.s32 	%r2093, %r2091, %r2081;
	shf.l.wrap.b32 	%r2094, %r2092, %r2092, 26;
	shf.l.wrap.b32 	%r2095, %r2092, %r2092, 21;
	xor.b32  	%r2096, %r2094, %r2095;
	shf.l.wrap.b32 	%r2097, %r2092, %r2092, 7;
	xor.b32  	%r2098, %r2096, %r2097;
	and.b32  	%r2099, %r2092, %r2066;
	not.b32 	%r2100, %r2092;
	and.b32  	%r2101, %r2040, %r2100;
	or.b32  	%r2102, %r2099, %r2101;
	add.s32 	%r2103, %r2102, %r2014;
	add.s32 	%r2104, %r2103, %r2098;
	ld.const.u32 	%r2105, [K256+176];
	add.s32 	%r2106, %r2104, %r2105;
	add.s32 	%r2107, %r2106, %r722;
	shf.l.wrap.b32 	%r2108, %r2093, %r2093, 30;
	shf.l.wrap.b32 	%r2109, %r2093, %r2093, 19;
	xor.b32  	%r2110, %r2108, %r2109;
	shf.l.wrap.b32 	%r2111, %r2093, %r2093, 10;
	xor.b32  	%r2112, %r2110, %r2111;
	xor.b32  	%r2113, %r2067, %r2041;
	and.b32  	%r2114, %r2093, %r2113;
	and.b32  	%r2115, %r2067, %r2041;
	xor.b32  	%r2116, %r2114, %r2115;
	add.s32 	%r2117, %r2112, %r2116;
	add.s32 	%r2118, %r2107, %r2015;
	add.s32 	%r2119, %r2117, %r2107;
	shf.l.wrap.b32 	%r2120, %r2118, %r2118, 26;
	shf.l.wrap.b32 	%r2121, %r2118, %r2118, 21;
	xor.b32  	%r2122, %r2120, %r2121;
	shf.l.wrap.b32 	%r2123, %r2118, %r2118, 7;
	xor.b32  	%r2124, %r2122, %r2123;
	and.b32  	%r2125, %r2118, %r2092;
	not.b32 	%r2126, %r2118;
	and.b32  	%r2127, %r2066, %r2126;
	or.b32  	%r2128, %r2125, %r2127;
	add.s32 	%r2129, %r2128, %r2040;
	add.s32 	%r2130, %r2129, %r2124;
	ld.const.u32 	%r2131, [K256+180];
	add.s32 	%r2132, %r2130, %r2131;
	add.s32 	%r2133, %r2132, %r735;
	shf.l.wrap.b32 	%r2134, %r2119, %r2119, 30;
	shf.l.wrap.b32 	%r2135, %r2119, %r2119, 19;
	xor.b32  	%r2136, %r2134, %r2135;
	shf.l.wrap.b32 	%r2137, %r2119, %r2119, 10;
	xor.b32  	%r2138, %r2136, %r2137;
	xor.b32  	%r2139, %r2093, %r2067;
	and.b32  	%r2140, %r2119, %r2139;
	and.b32  	%r2141, %r2093, %r2067;
	xor.b32  	%r2142, %r2140, %r2141;
	add.s32 	%r2143, %r2138, %r2142;
	add.s32 	%r2144, %r2133, %r2041;
	add.s32 	%r2145, %r2143, %r2133;
	shf.l.wrap.b32 	%r2146, %r2144, %r2144, 26;
	shf.l.wrap.b32 	%r2147, %r2144, %r2144, 21;
	xor.b32  	%r2148, %r2146, %r2147;
	shf.l.wrap.b32 	%r2149, %r2144, %r2144, 7;
	xor.b32  	%r2150, %r2148, %r2149;
	and.b32  	%r2151, %r2144, %r2118;
	not.b32 	%r2152, %r2144;
	and.b32  	%r2153, %r2092, %r2152;
	or.b32  	%r2154, %r2151, %r2153;
	add.s32 	%r2155, %r2154, %r2066;
	add.s32 	%r2156, %r2155, %r2150;
	ld.const.u32 	%r2157, [K256+184];
	add.s32 	%r2158, %r2156, %r2157;
	add.s32 	%r2159, %r2158, %r748;
	shf.l.wrap.b32 	%r2160, %r2145, %r2145, 30;
	shf.l.wrap.b32 	%r2161, %r2145, %r2145, 19;
	xor.b32  	%r2162, %r2160, %r2161;
	shf.l.wrap.b32 	%r2163, %r2145, %r2145, 10;
	xor.b32  	%r2164, %r2162, %r2163;
	xor.b32  	%r2165, %r2119, %r2093;
	and.b32  	%r2166, %r2145, %r2165;
	and.b32  	%r2167, %r2119, %r2093;
	xor.b32  	%r2168, %r2166, %r2167;
	add.s32 	%r2169, %r2164, %r2168;
	add.s32 	%r2170, %r2159, %r2067;
	add.s32 	%r2171, %r2169, %r2159;
	shf.l.wrap.b32 	%r2172, %r2170, %r2170, 26;
	shf.l.wrap.b32 	%r2173, %r2170, %r2170, 21;
	xor.b32  	%r2174, %r2172, %r2173;
	shf.l.wrap.b32 	%r2175, %r2170, %r2170, 7;
	xor.b32  	%r2176, %r2174, %r2175;
	and.b32  	%r2177, %r2170, %r2144;
	not.b32 	%r2178, %r2170;
	and.b32  	%r2179, %r2118, %r2178;
	or.b32  	%r2180, %r2177, %r2179;
	add.s32 	%r2181, %r2180, %r2092;
	add.s32 	%r2182, %r2181, %r2176;
	ld.const.u32 	%r2183, [K256+188];
	add.s32 	%r2184, %r2182, %r2183;
	add.s32 	%r2185, %r2184, %r761;
	shf.l.wrap.b32 	%r2186, %r2171, %r2171, 30;
	shf.l.wrap.b32 	%r2187, %r2171, %r2171, 19;
	xor.b32  	%r2188, %r2186, %r2187;
	shf.l.wrap.b32 	%r2189, %r2171, %r2171, 10;
	xor.b32  	%r2190, %r2188, %r2189;
	xor.b32  	%r2191, %r2145, %r2119;
	and.b32  	%r2192, %r2171, %r2191;
	and.b32  	%r2193, %r2145, %r2119;
	xor.b32  	%r2194, %r2192, %r2193;
	add.s32 	%r2195, %r2190, %r2194;
	add.s32 	%r2196, %r2185, %r2093;
	add.s32 	%r2197, %r2195, %r2185;
	shf.l.wrap.b32 	%r2198, %r2196, %r2196, 26;
	shf.l.wrap.b32 	%r2199, %r2196, %r2196, 21;
	xor.b32  	%r2200, %r2198, %r2199;
	shf.l.wrap.b32 	%r2201, %r2196, %r2196, 7;
	xor.b32  	%r2202, %r2200, %r2201;
	and.b32  	%r2203, %r2196, %r2170;
	not.b32 	%r2204, %r2196;
	and.b32  	%r2205, %r2144, %r2204;
	or.b32  	%r2206, %r2203, %r2205;
	add.s32 	%r2207, %r2206, %r2118;
	add.s32 	%r2208, %r2207, %r2202;
	ld.const.u32 	%r2209, [K256+192];
	add.s32 	%r2210, %r2208, %r2209;
	add.s32 	%r2211, %r2210, %r774;
	shf.l.wrap.b32 	%r2212, %r2197, %r2197, 30;
	shf.l.wrap.b32 	%r2213, %r2197, %r2197, 19;
	xor.b32  	%r2214, %r2212, %r2213;
	shf.l.wrap.b32 	%r2215, %r2197, %r2197, 10;
	xor.b32  	%r2216, %r2214, %r2215;
	xor.b32  	%r2217, %r2171, %r2145;
	and.b32  	%r2218, %r2197, %r2217;
	and.b32  	%r2219, %r2171, %r2145;
	xor.b32  	%r2220, %r2218, %r2219;
	add.s32 	%r2221, %r2216, %r2220;
	add.s32 	%r2222, %r2211, %r2119;
	add.s32 	%r2223, %r2221, %r2211;
	shf.l.wrap.b32 	%r2224, %r2222, %r2222, 26;
	shf.l.wrap.b32 	%r2225, %r2222, %r2222, 21;
	xor.b32  	%r2226, %r2224, %r2225;
	shf.l.wrap.b32 	%r2227, %r2222, %r2222, 7;
	xor.b32  	%r2228, %r2226, %r2227;
	and.b32  	%r2229, %r2222, %r2196;
	not.b32 	%r2230, %r2222;
	and.b32  	%r2231, %r2170, %r2230;
	or.b32  	%r2232, %r2229, %r2231;
	add.s32 	%r2233, %r2232, %r2144;
	add.s32 	%r2234, %r2233, %r2228;
	ld.const.u32 	%r2235, [K256+196];
	add.s32 	%r2236, %r2234, %r2235;
	add.s32 	%r2237, %r2236, %r787;
	shf.l.wrap.b32 	%r2238, %r2223, %r2223, 30;
	shf.l.wrap.b32 	%r2239, %r2223, %r2223, 19;
	xor.b32  	%r2240, %r2238, %r2239;
	shf.l.wrap.b32 	%r2241, %r2223, %r2223, 10;
	xor.b32  	%r2242, %r2240, %r2241;
	xor.b32  	%r2243, %r2197, %r2171;
	and.b32  	%r2244, %r2223, %r2243;
	and.b32  	%r2245, %r2197, %r2171;
	xor.b32  	%r2246, %r2244, %r2245;
	add.s32 	%r2247, %r2242, %r2246;
	add.s32 	%r2248, %r2237, %r2145;
	add.s32 	%r2249, %r2247, %r2237;
	shf.l.wrap.b32 	%r2250, %r2248, %r2248, 26;
	shf.l.wrap.b32 	%r2251, %r2248, %r2248, 21;
	xor.b32  	%r2252, %r2250, %r2251;
	shf.l.wrap.b32 	%r2253, %r2248, %r2248, 7;
	xor.b32  	%r2254, %r2252, %r2253;
	and.b32  	%r2255, %r2248, %r2222;
	not.b32 	%r2256, %r2248;
	and.b32  	%r2257, %r2196, %r2256;
	or.b32  	%r2258, %r2255, %r2257;
	add.s32 	%r2259, %r2258, %r2170;
	add.s32 	%r2260, %r2259, %r2254;
	ld.const.u32 	%r2261, [K256+200];
	add.s32 	%r2262, %r2260, %r2261;
	add.s32 	%r2263, %r2262, %r800;
	shf.l.wrap.b32 	%r2264, %r2249, %r2249, 30;
	shf.l.wrap.b32 	%r2265, %r2249, %r2249, 19;
	xor.b32  	%r2266, %r2264, %r2265;
	shf.l.wrap.b32 	%r2267, %r2249, %r2249, 10;
	xor.b32  	%r2268, %r2266, %r2267;
	xor.b32  	%r2269, %r2223, %r2197;
	and.b32  	%r2270, %r2249, %r2269;
	and.b32  	%r2271, %r2223, %r2197;
	xor.b32  	%r2272, %r2270, %r2271;
	add.s32 	%r2273, %r2268, %r2272;
	add.s32 	%r2274, %r2263, %r2171;
	add.s32 	%r2275, %r2273, %r2263;
	shf.l.wrap.b32 	%r2276, %r2274, %r2274, 26;
	shf.l.wrap.b32 	%r2277, %r2274, %r2274, 21;
	xor.b32  	%r2278, %r2276, %r2277;
	shf.l.wrap.b32 	%r2279, %r2274, %r2274, 7;
	xor.b32  	%r2280, %r2278, %r2279;
	and.b32  	%r2281, %r2274, %r2248;
	not.b32 	%r2282, %r2274;
	and.b32  	%r2283, %r2222, %r2282;
	or.b32  	%r2284, %r2281, %r2283;
	add.s32 	%r2285, %r2284, %r2196;
	add.s32 	%r2286, %r2285, %r2280;
	ld.const.u32 	%r2287, [K256+204];
	add.s32 	%r2288, %r2286, %r2287;
	add.s32 	%r2289, %r2288, %r813;
	shf.l.wrap.b32 	%r2290, %r2275, %r2275, 30;
	shf.l.wrap.b32 	%r2291, %r2275, %r2275, 19;
	xor.b32  	%r2292, %r2290, %r2291;
	shf.l.wrap.b32 	%r2293, %r2275, %r2275, 10;
	xor.b32  	%r2294, %r2292, %r2293;
	xor.b32  	%r2295, %r2249, %r2223;
	and.b32  	%r2296, %r2275, %r2295;
	and.b32  	%r2297, %r2249, %r2223;
	xor.b32  	%r2298, %r2296, %r2297;
	add.s32 	%r2299, %r2294, %r2298;
	add.s32 	%r2300, %r2289, %r2197;
	add.s32 	%r2301, %r2299, %r2289;
	shf.l.wrap.b32 	%r2302, %r2300, %r2300, 26;
	shf.l.wrap.b32 	%r2303, %r2300, %r2300, 21;
	xor.b32  	%r2304, %r2302, %r2303;
	shf.l.wrap.b32 	%r2305, %r2300, %r2300, 7;
	xor.b32  	%r2306, %r2304, %r2305;
	and.b32  	%r2307, %r2300, %r2274;
	not.b32 	%r2308, %r2300;
	and.b32  	%r2309, %r2248, %r2308;
	or.b32  	%r2310, %r2307, %r2309;
	add.s32 	%r2311, %r2310, %r2222;
	add.s32 	%r2312, %r2311, %r2306;
	ld.const.u32 	%r2313, [K256+208];
	add.s32 	%r2314, %r2312, %r2313;
	add.s32 	%r2315, %r2314, %r826;
	shf.l.wrap.b32 	%r2316, %r2301, %r2301, 30;
	shf.l.wrap.b32 	%r2317, %r2301, %r2301, 19;
	xor.b32  	%r2318, %r2316, %r2317;
	shf.l.wrap.b32 	%r2319, %r2301, %r2301, 10;
	xor.b32  	%r2320, %r2318, %r2319;
	xor.b32  	%r2321, %r2275, %r2249;
	and.b32  	%r2322, %r2301, %r2321;
	and.b32  	%r2323, %r2275, %r2249;
	xor.b32  	%r2324, %r2322, %r2323;
	add.s32 	%r2325, %r2320, %r2324;
	add.s32 	%r2326, %r2315, %r2223;
	add.s32 	%r2327, %r2325, %r2315;
	shf.l.wrap.b32 	%r2328, %r2326, %r2326, 26;
	shf.l.wrap.b32 	%r2329, %r2326, %r2326, 21;
	xor.b32  	%r2330, %r2328, %r2329;
	shf.l.wrap.b32 	%r2331, %r2326, %r2326, 7;
	xor.b32  	%r2332, %r2330, %r2331;
	and.b32  	%r2333, %r2326, %r2300;
	not.b32 	%r2334, %r2326;
	and.b32  	%r2335, %r2274, %r2334;
	or.b32  	%r2336, %r2333, %r2335;
	add.s32 	%r2337, %r2336, %r2248;
	add.s32 	%r2338, %r2337, %r2332;
	ld.const.u32 	%r2339, [K256+212];
	add.s32 	%r2340, %r2338, %r2339;
	add.s32 	%r2341, %r2340, %r839;
	shf.l.wrap.b32 	%r2342, %r2327, %r2327, 30;
	shf.l.wrap.b32 	%r2343, %r2327, %r2327, 19;
	xor.b32  	%r2344, %r2342, %r2343;
	shf.l.wrap.b32 	%r2345, %r2327, %r2327, 10;
	xor.b32  	%r2346, %r2344, %r2345;
	xor.b32  	%r2347, %r2301, %r2275;
	and.b32  	%r2348, %r2327, %r2347;
	and.b32  	%r2349, %r2301, %r2275;
	xor.b32  	%r2350, %r2348, %r2349;
	add.s32 	%r2351, %r2346, %r2350;
	add.s32 	%r2352, %r2341, %r2249;
	add.s32 	%r2353, %r2351, %r2341;
	shf.l.wrap.b32 	%r2354, %r2352, %r2352, 26;
	shf.l.wrap.b32 	%r2355, %r2352, %r2352, 21;
	xor.b32  	%r2356, %r2354, %r2355;
	shf.l.wrap.b32 	%r2357, %r2352, %r2352, 7;
	xor.b32  	%r2358, %r2356, %r2357;
	and.b32  	%r2359, %r2352, %r2326;
	not.b32 	%r2360, %r2352;
	and.b32  	%r2361, %r2300, %r2360;
	or.b32  	%r2362, %r2359, %r2361;
	add.s32 	%r2363, %r2362, %r2274;
	add.s32 	%r2364, %r2363, %r2358;
	ld.const.u32 	%r2365, [K256+216];
	add.s32 	%r2366, %r2364, %r2365;
	add.s32 	%r2367, %r2366, %r852;
	shf.l.wrap.b32 	%r2368, %r2353, %r2353, 30;
	shf.l.wrap.b32 	%r2369, %r2353, %r2353, 19;
	xor.b32  	%r2370, %r2368, %r2369;
	shf.l.wrap.b32 	%r2371, %r2353, %r2353, 10;
	xor.b32  	%r2372, %r2370, %r2371;
	xor.b32  	%r2373, %r2327, %r2301;
	and.b32  	%r2374, %r2353, %r2373;
	and.b32  	%r2375, %r2327, %r2301;
	xor.b32  	%r2376, %r2374, %r2375;
	add.s32 	%r2377, %r2372, %r2376;
	add.s32 	%r2378, %r2367, %r2275;
	add.s32 	%r2379, %r2377, %r2367;
	shf.l.wrap.b32 	%r2380, %r2378, %r2378, 26;
	shf.l.wrap.b32 	%r2381, %r2378, %r2378, 21;
	xor.b32  	%r2382, %r2380, %r2381;
	shf.l.wrap.b32 	%r2383, %r2378, %r2378, 7;
	xor.b32  	%r2384, %r2382, %r2383;
	and.b32  	%r2385, %r2378, %r2352;
	not.b32 	%r2386, %r2378;
	and.b32  	%r2387, %r2326, %r2386;
	or.b32  	%r2388, %r2385, %r2387;
	add.s32 	%r2389, %r2388, %r2300;
	add.s32 	%r2390, %r2389, %r2384;
	ld.const.u32 	%r2391, [K256+220];
	add.s32 	%r2392, %r2390, %r2391;
	add.s32 	%r2393, %r2392, %r865;
	shf.l.wrap.b32 	%r2394, %r2379, %r2379, 30;
	shf.l.wrap.b32 	%r2395, %r2379, %r2379, 19;
	xor.b32  	%r2396, %r2394, %r2395;
	shf.l.wrap.b32 	%r2397, %r2379, %r2379, 10;
	xor.b32  	%r2398, %r2396, %r2397;
	xor.b32  	%r2399, %r2353, %r2327;
	and.b32  	%r2400, %r2379, %r2399;
	and.b32  	%r2401, %r2353, %r2327;
	xor.b32  	%r2402, %r2400, %r2401;
	add.s32 	%r2403, %r2398, %r2402;
	add.s32 	%r2404, %r2393, %r2301;
	add.s32 	%r2405, %r2403, %r2393;
	shf.l.wrap.b32 	%r2406, %r2404, %r2404, 26;
	shf.l.wrap.b32 	%r2407, %r2404, %r2404, 21;
	xor.b32  	%r2408, %r2406, %r2407;
	shf.l.wrap.b32 	%r2409, %r2404, %r2404, 7;
	xor.b32  	%r2410, %r2408, %r2409;
	and.b32  	%r2411, %r2404, %r2378;
	not.b32 	%r2412, %r2404;
	and.b32  	%r2413, %r2352, %r2412;
	or.b32  	%r2414, %r2411, %r2413;
	add.s32 	%r2415, %r2414, %r2326;
	add.s32 	%r2416, %r2415, %r2410;
	ld.const.u32 	%r2417, [K256+224];
	add.s32 	%r2418, %r2416, %r2417;
	add.s32 	%r2419, %r2418, %r878;
	shf.l.wrap.b32 	%r2420, %r2405, %r2405, 30;
	shf.l.wrap.b32 	%r2421, %r2405, %r2405, 19;
	xor.b32  	%r2422, %r2420, %r2421;
	shf.l.wrap.b32 	%r2423, %r2405, %r2405, 10;
	xor.b32  	%r2424, %r2422, %r2423;
	xor.b32  	%r2425, %r2379, %r2353;
	and.b32  	%r2426, %r2405, %r2425;
	and.b32  	%r2427, %r2379, %r2353;
	xor.b32  	%r2428, %r2426, %r2427;
	add.s32 	%r2429, %r2424, %r2428;
	add.s32 	%r2430, %r2419, %r2327;
	add.s32 	%r2431, %r2429, %r2419;
	shf.l.wrap.b32 	%r2432, %r2430, %r2430, 26;
	shf.l.wrap.b32 	%r2433, %r2430, %r2430, 21;
	xor.b32  	%r2434, %r2432, %r2433;
	shf.l.wrap.b32 	%r2435, %r2430, %r2430, 7;
	xor.b32  	%r2436, %r2434, %r2435;
	and.b32  	%r2437, %r2430, %r2404;
	not.b32 	%r2438, %r2430;
	and.b32  	%r2439, %r2378, %r2438;
	or.b32  	%r2440, %r2437, %r2439;
	add.s32 	%r2441, %r2440, %r2352;
	add.s32 	%r2442, %r2441, %r2436;
	ld.const.u32 	%r2443, [K256+228];
	add.s32 	%r2444, %r2442, %r2443;
	add.s32 	%r2445, %r2444, %r891;
	shf.l.wrap.b32 	%r2446, %r2431, %r2431, 30;
	shf.l.wrap.b32 	%r2447, %r2431, %r2431, 19;
	xor.b32  	%r2448, %r2446, %r2447;
	shf.l.wrap.b32 	%r2449, %r2431, %r2431, 10;
	xor.b32  	%r2450, %r2448, %r2449;
	xor.b32  	%r2451, %r2405, %r2379;
	and.b32  	%r2452, %r2431, %r2451;
	and.b32  	%r2453, %r2405, %r2379;
	xor.b32  	%r2454, %r2452, %r2453;
	add.s32 	%r2455, %r2450, %r2454;
	add.s32 	%r2456, %r2445, %r2353;
	add.s32 	%r2457, %r2455, %r2445;
	shf.l.wrap.b32 	%r2458, %r2456, %r2456, 26;
	shf.l.wrap.b32 	%r2459, %r2456, %r2456, 21;
	xor.b32  	%r2460, %r2458, %r2459;
	shf.l.wrap.b32 	%r2461, %r2456, %r2456, 7;
	xor.b32  	%r2462, %r2460, %r2461;
	and.b32  	%r2463, %r2456, %r2430;
	not.b32 	%r2464, %r2456;
	and.b32  	%r2465, %r2404, %r2464;
	or.b32  	%r2466, %r2463, %r2465;
	add.s32 	%r2467, %r2466, %r2378;
	add.s32 	%r2468, %r2467, %r2462;
	ld.const.u32 	%r2469, [K256+232];
	add.s32 	%r2470, %r2468, %r2469;
	add.s32 	%r2471, %r2470, %r904;
	shf.l.wrap.b32 	%r2472, %r2457, %r2457, 30;
	shf.l.wrap.b32 	%r2473, %r2457, %r2457, 19;
	xor.b32  	%r2474, %r2472, %r2473;
	shf.l.wrap.b32 	%r2475, %r2457, %r2457, 10;
	xor.b32  	%r2476, %r2474, %r2475;
	xor.b32  	%r2477, %r2431, %r2405;
	and.b32  	%r2478, %r2457, %r2477;
	and.b32  	%r2479, %r2431, %r2405;
	xor.b32  	%r2480, %r2478, %r2479;
	add.s32 	%r2481, %r2476, %r2480;
	add.s32 	%r2482, %r2471, %r2379;
	add.s32 	%r2483, %r2481, %r2471;
	shf.l.wrap.b32 	%r2484, %r2482, %r2482, 26;
	shf.l.wrap.b32 	%r2485, %r2482, %r2482, 21;
	xor.b32  	%r2486, %r2484, %r2485;
	shf.l.wrap.b32 	%r2487, %r2482, %r2482, 7;
	xor.b32  	%r2488, %r2486, %r2487;
	and.b32  	%r2489, %r2482, %r2456;
	not.b32 	%r2490, %r2482;
	and.b32  	%r2491, %r2430, %r2490;
	or.b32  	%r2492, %r2489, %r2491;
	add.s32 	%r2493, %r2492, %r2404;
	add.s32 	%r2494, %r2493, %r2488;
	ld.const.u32 	%r2495, [K256+236];
	add.s32 	%r2496, %r2494, %r2495;
	add.s32 	%r2497, %r2496, %r917;
	shf.l.wrap.b32 	%r2498, %r2483, %r2483, 30;
	shf.l.wrap.b32 	%r2499, %r2483, %r2483, 19;
	xor.b32  	%r2500, %r2498, %r2499;
	shf.l.wrap.b32 	%r2501, %r2483, %r2483, 10;
	xor.b32  	%r2502, %r2500, %r2501;
	xor.b32  	%r2503, %r2457, %r2431;
	and.b32  	%r2504, %r2483, %r2503;
	and.b32  	%r2505, %r2457, %r2431;
	xor.b32  	%r2506, %r2504, %r2505;
	add.s32 	%r2507, %r2502, %r2506;
	add.s32 	%r2508, %r2497, %r2405;
	add.s32 	%r2509, %r2507, %r2497;
	shf.l.wrap.b32 	%r2510, %r2508, %r2508, 26;
	shf.l.wrap.b32 	%r2511, %r2508, %r2508, 21;
	xor.b32  	%r2512, %r2510, %r2511;
	shf.l.wrap.b32 	%r2513, %r2508, %r2508, 7;
	xor.b32  	%r2514, %r2512, %r2513;
	and.b32  	%r2515, %r2508, %r2482;
	not.b32 	%r2516, %r2508;
	and.b32  	%r2517, %r2456, %r2516;
	or.b32  	%r2518, %r2515, %r2517;
	add.s32 	%r2519, %r2518, %r2430;
	add.s32 	%r2520, %r2519, %r2514;
	ld.const.u32 	%r2521, [K256+240];
	add.s32 	%r2522, %r2520, %r2521;
	add.s32 	%r2523, %r2522, %r930;
	shf.l.wrap.b32 	%r2524, %r2509, %r2509, 30;
	shf.l.wrap.b32 	%r2525, %r2509, %r2509, 19;
	xor.b32  	%r2526, %r2524, %r2525;
	shf.l.wrap.b32 	%r2527, %r2509, %r2509, 10;
	xor.b32  	%r2528, %r2526, %r2527;
	xor.b32  	%r2529, %r2483, %r2457;
	and.b32  	%r2530, %r2509, %r2529;
	and.b32  	%r2531, %r2483, %r2457;
	xor.b32  	%r2532, %r2530, %r2531;
	add.s32 	%r2533, %r2528, %r2532;
	add.s32 	%r2534, %r2523, %r2431;
	add.s32 	%r2535, %r2533, %r2523;
	shf.l.wrap.b32 	%r2536, %r2534, %r2534, 26;
	shf.l.wrap.b32 	%r2537, %r2534, %r2534, 21;
	xor.b32  	%r2538, %r2536, %r2537;
	shf.l.wrap.b32 	%r2539, %r2534, %r2534, 7;
	xor.b32  	%r2540, %r2538, %r2539;
	and.b32  	%r2541, %r2534, %r2508;
	not.b32 	%r2542, %r2534;
	and.b32  	%r2543, %r2482, %r2542;
	or.b32  	%r2544, %r2541, %r2543;
	add.s32 	%r2545, %r2544, %r2456;
	add.s32 	%r2546, %r2545, %r2540;
	ld.const.u32 	%r2547, [K256+244];
	add.s32 	%r2548, %r2546, %r2547;
	add.s32 	%r2549, %r2548, %r943;
	shf.l.wrap.b32 	%r2550, %r2535, %r2535, 30;
	shf.l.wrap.b32 	%r2551, %r2535, %r2535, 19;
	xor.b32  	%r2552, %r2550, %r2551;
	shf.l.wrap.b32 	%r2553, %r2535, %r2535, 10;
	xor.b32  	%r2554, %r2552, %r2553;
	xor.b32  	%r2555, %r2509, %r2483;
	and.b32  	%r2556, %r2535, %r2555;
	and.b32  	%r2557, %r2509, %r2483;
	xor.b32  	%r2558, %r2556, %r2557;
	add.s32 	%r2559, %r2554, %r2558;
	add.s32 	%r2560, %r2549, %r2457;
	add.s32 	%r2561, %r2559, %r2549;
	shf.l.wrap.b32 	%r2562, %r2560, %r2560, 26;
	shf.l.wrap.b32 	%r2563, %r2560, %r2560, 21;
	xor.b32  	%r2564, %r2562, %r2563;
	shf.l.wrap.b32 	%r2565, %r2560, %r2560, 7;
	xor.b32  	%r2566, %r2564, %r2565;
	and.b32  	%r2567, %r2560, %r2534;
	not.b32 	%r2568, %r2560;
	and.b32  	%r2569, %r2508, %r2568;
	or.b32  	%r2570, %r2567, %r2569;
	add.s32 	%r2571, %r2570, %r2482;
	add.s32 	%r2572, %r2571, %r2566;
	ld.const.u32 	%r2573, [K256+248];
	add.s32 	%r2574, %r2572, %r2573;
	add.s32 	%r2575, %r2574, %r956;
	shf.l.wrap.b32 	%r2576, %r2561, %r2561, 30;
	shf.l.wrap.b32 	%r2577, %r2561, %r2561, 19;
	xor.b32  	%r2578, %r2576, %r2577;
	shf.l.wrap.b32 	%r2579, %r2561, %r2561, 10;
	xor.b32  	%r2580, %r2578, %r2579;
	xor.b32  	%r2581, %r2535, %r2509;
	and.b32  	%r2582, %r2561, %r2581;
	and.b32  	%r2583, %r2535, %r2509;
	xor.b32  	%r2584, %r2582, %r2583;
	add.s32 	%r2585, %r2580, %r2584;
	add.s32 	%r2586, %r2575, %r2483;
	add.s32 	%r2587, %r2585, %r2575;
	shf.l.wrap.b32 	%r2588, %r2586, %r2586, 26;
	shf.l.wrap.b32 	%r2589, %r2586, %r2586, 21;
	xor.b32  	%r2590, %r2588, %r2589;
	shf.l.wrap.b32 	%r2591, %r2586, %r2586, 7;
	xor.b32  	%r2592, %r2590, %r2591;
	and.b32  	%r2593, %r2586, %r2560;
	not.b32 	%r2594, %r2586;
	and.b32  	%r2595, %r2534, %r2594;
	or.b32  	%r2596, %r2593, %r2595;
	add.s32 	%r2597, %r2596, %r2508;
	add.s32 	%r2598, %r2597, %r2592;
	ld.const.u32 	%r2599, [K256+252];
	add.s32 	%r2600, %r2598, %r2599;
	add.s32 	%r2601, %r2600, %r969;
	shf.l.wrap.b32 	%r2602, %r2587, %r2587, 30;
	shf.l.wrap.b32 	%r2603, %r2587, %r2587, 19;
	xor.b32  	%r2604, %r2602, %r2603;
	shf.l.wrap.b32 	%r2605, %r2587, %r2587, 10;
	xor.b32  	%r2606, %r2604, %r2605;
	xor.b32  	%r2607, %r2561, %r2535;
	and.b32  	%r2608, %r2587, %r2607;
	and.b32  	%r2609, %r2561, %r2535;
	xor.b32  	%r2610, %r2608, %r2609;
	add.s32 	%r2611, %r2606, %r2610;
	add.s32 	%r30, %r2611, %r2601;
	setp.lt.s32 	%p12, %r36, 3;
	mov.u32 	%r2644, %r106;
	@%p12 bra 	$L__BB3_19;

	ld.param.u32 	%r2632, [_Z24kernel_validate_mnemonicPiiiS__param_1];
	add.s32 	%r2613, %r30, 1779033703;
	shr.u32 	%r31, %r2613, 24;
	mul.lo.s32 	%r32, %r1, %r2632;
	mov.u32 	%r2612, 0;
	mov.u32 	%r2643, %r2612;

$L__BB3_17:
	add.s32 	%r2615, %r2643, %r4;
	mul.hi.s32 	%r2616, %r2615, 780903145;
	shr.u32 	%r2617, %r2616, 31;
	shr.s32 	%r2618, %r2616, 1;
	add.s32 	%r2619, %r2618, %r2617;
	mul.lo.s32 	%r2620, %r2619, 11;
	sub.s32 	%r2621, %r2620, %r2615;
	add.s32 	%r2622, %r2621, 10;
	add.s32 	%r2623, %r2619, %r32;
	mul.wide.s32 	%rd45, %r2623, 4;
	add.s64 	%rd46, %rd1, %rd45;
	ld.global.u32 	%r2624, [%rd46];
	shr.u32 	%r2625, %r2624, %r2622;
	mov.u32 	%r2626, 7;
	sub.s32 	%r2627, %r2626, %r2643;
	shr.u32 	%r2628, %r31, %r2627;
	and.b32  	%r2629, %r2625, 1;
	setp.eq.b32 	%p13, %r2629, 1;
	and.b32  	%r2630, %r2628, 1;
	setp.eq.b32 	%p14, %r2630, 1;
	xor.pred  	%p15, %p14, %p13;
	mov.pred 	%p16, 0;
	xor.pred  	%p17, %p15, %p16;
	add.s32 	%r2643, %r2643, 1;
	mov.u32 	%r2644, %r2612;
	@%p17 bra 	$L__BB3_19;

	setp.lt.s32 	%p18, %r2643, %r3;
	mov.u32 	%r2644, %r106;
	@%p18 bra 	$L__BB3_17;

$L__BB3_19:
	ld.param.u64 	%rd50, [_Z24kernel_validate_mnemonicPiiiS__param_3];
	cvta.to.global.u64 	%rd47, %rd50;
	mul.wide.s32 	%rd48, %r1, 4;
	add.s64 	%rd49, %rd47, %rd48;
	st.global.u32 	[%rd49], %r2644;

$L__BB3_20:
	ret;

}
	// .globl	search_seeds
.visible .entry search_seeds(
	.param .u64 search_seeds_param_0,
	.param .u64 search_seeds_param_1,
	.param .u64 search_seeds_param_2,
	.param .u64 search_seeds_param_3,
	.param .u32 search_seeds_param_4,
	.param .u32 search_seeds_param_5,
	.param .u64 search_seeds_param_6,
	.param .u64 search_seeds_param_7,
	.param .u32 search_seeds_param_8,
	.param .u32 search_seeds_param_9,
	.param .u64 search_seeds_param_10
)
{
	.local .align 16 .b8 	__local_depot4[624];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<437>;
	.reg .b16 	%rs<1175>;
	.reg .b32 	%r<11242>;
	.reg .b64 	%rd<15739>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd689, [search_seeds_param_0];
	ld.param.u64 	%rd691, [search_seeds_param_2];
	ld.param.u64 	%rd694, [search_seeds_param_3];
	ld.param.u32 	%r137, [search_seeds_param_5];
	ld.param.u64 	%rd695, [search_seeds_param_6];
	cvta.to.global.u64 	%rd1, %rd695;
	add.u64 	%rd2, %SPL, 0;
	add.u64 	%rd3, %SPL, 208;
	add.u64 	%rd4, %SPL, 336;
	add.u64 	%rd699, %SP, 368;
	add.u64 	%rd15515, %SPL, 368;
	mov.u32 	%r140, %ntid.x;
	mov.u32 	%r141, %ctaid.x;
	mov.u32 	%r142, %tid.x;
	mad.lo.s32 	%r143, %r141, %r140, %r142;
	cvt.u64.u32 	%rd6, %r143;
	setp.ge.u64 	%p9, %rd6, %rd694;
	@%p9 bra 	$L__BB4_325;

	add.s64 	%rd15510, %rd6, %rd691;
	setp.lt.s32 	%p10, %r137, 1;
	@%p10 bra 	$L__BB4_8;

	add.s32 	%r145, %r137, -1;
	and.b32  	%r11181, %r137, 3;
	setp.lt.u32 	%p11, %r145, 3;
	mov.u32 	%r11180, 0;
	@%p11 bra 	$L__BB4_5;

	sub.s32 	%r11179, %r137, %r11181;

$L__BB4_4:
	.pragma "nounroll";
	mul.wide.s32 	%rd700, %r11180, 4;
	add.s64 	%rd701, %rd1, %rd700;
	ld.global.u32 	%r147, [%rd701];
	mul.wide.s32 	%rd702, %r11180, 2;
	add.s64 	%rd703, %rd4, %rd702;
	st.local.u16 	[%rd703], %r147;
	ld.global.u32 	%r148, [%rd701+4];
	st.local.u16 	[%rd703+2], %r148;
	ld.global.u32 	%r149, [%rd701+8];
	st.local.u16 	[%rd703+4], %r149;
	ld.global.u32 	%r150, [%rd701+12];
	st.local.u16 	[%rd703+6], %r150;
	add.s32 	%r11180, %r11180, 4;
	add.s32 	%r11179, %r11179, -4;
	setp.ne.s32 	%p12, %r11179, 0;
	@%p12 bra 	$L__BB4_4;

$L__BB4_5:
	setp.eq.s32 	%p13, %r11181, 0;
	@%p13 bra 	$L__BB4_8;

	mul.wide.s32 	%rd704, %r11180, 2;
	add.s64 	%rd15507, %rd4, %rd704;
	mul.wide.s32 	%rd705, %r11180, 4;
	add.s64 	%rd15506, %rd1, %rd705;

$L__BB4_7:
	.pragma "nounroll";
	ld.global.u32 	%r151, [%rd15506];
	st.local.u16 	[%rd15507], %r151;
	add.s64 	%rd15507, %rd15507, 2;
	add.s64 	%rd15506, %rd15506, 4;
	add.s32 	%r11181, %r11181, -1;
	setp.ne.s32 	%p14, %r11181, 0;
	@%p14 bra 	$L__BB4_7;

$L__BB4_8:
	setp.gt.s32 	%p15, %r137, 11;
	@%p15 bra 	$L__BB4_15;

	neg.s32 	%r152, %r137;
	and.b32  	%r11183, %r152, 3;
	setp.eq.s32 	%p16, %r11183, 0;
	mov.u32 	%r11184, %r137;
	@%p16 bra 	$L__BB4_12;

	mul.wide.s32 	%rd706, %r137, 2;
	add.s64 	%rd15508, %rd4, %rd706;
	mov.u32 	%r11184, %r137;

$L__BB4_11:
	.pragma "nounroll";
	cvt.u16.u64 	%rs178, %rd15510;
	and.b16  	%rs179, %rs178, 2047;
	st.local.u16 	[%rd15508], %rs179;
	shr.u64 	%rd15510, %rd15510, 11;
	add.s32 	%r11184, %r11184, 1;
	add.s64 	%rd15508, %rd15508, 2;
	add.s32 	%r11183, %r11183, -1;
	setp.ne.s32 	%p17, %r11183, 0;
	@%p17 bra 	$L__BB4_11;

$L__BB4_12:
	mov.u32 	%r153, 11;
	sub.s32 	%r154, %r153, %r137;
	setp.lt.u32 	%p18, %r154, 3;
	@%p18 bra 	$L__BB4_15;

	add.s32 	%r11185, %r11184, -4;
	mul.wide.s32 	%rd707, %r11184, 2;
	add.s64 	%rd708, %rd4, %rd707;
	add.s64 	%rd15511, %rd708, 4;

$L__BB4_14:
	cvt.u16.u64 	%rs180, %rd15510;
	and.b16  	%rs181, %rs180, 2047;
	st.local.u16 	[%rd15511+-4], %rs181;
	shr.u64 	%rd709, %rd15510, 11;
	cvt.u16.u64 	%rs182, %rd709;
	and.b16  	%rs183, %rs182, 2047;
	st.local.u16 	[%rd15511+-2], %rs183;
	shr.u64 	%rd710, %rd15510, 22;
	cvt.u16.u64 	%rs184, %rd710;
	and.b16  	%rs185, %rs184, 2047;
	st.local.u16 	[%rd15511], %rs185;
	shr.u64 	%rd711, %rd15510, 33;
	cvt.u16.u64 	%rs186, %rd711;
	and.b16  	%rs187, %rs186, 2047;
	st.local.u16 	[%rd15511+2], %rs187;
	shr.u64 	%rd15510, %rd15510, 44;
	add.s64 	%rd15511, %rd15511, 8;
	add.s32 	%r11185, %r11185, 4;
	setp.lt.s32 	%p19, %r11185, 8;
	@%p19 bra 	$L__BB4_14;

$L__BB4_15:
	mov.u32 	%r11186, 0;
	st.local.v4.u32 	[%rd2], {%r11186, %r11186, %r11186, %r11186};
	cvta.to.global.u64 	%rd26, %rd689;

$L__BB4_16:
	mul.wide.u32 	%rd712, %r11186, -1171354717;
	shr.u64 	%rd713, %rd712, 35;
	cvt.u32.u64 	%r156, %rd713;
	mul.lo.s32 	%r157, %r156, 11;
	sub.s32 	%r158, %r157, %r11186;
	add.s32 	%r159, %r158, 10;
	mul.wide.u32 	%rd714, %r156, 2;
	add.s64 	%rd715, %rd4, %rd714;
	ld.local.u16 	%r160, [%rd715];
	mov.u32 	%r161, 1;
	shl.b32 	%r162, %r161, %r159;
	and.b32  	%r163, %r162, %r160;
	setp.eq.s32 	%p20, %r163, 0;
	@%p20 bra 	$L__BB4_18;

	shr.u32 	%r164, %r11186, 3;
	cvt.u64.u32 	%rd716, %r164;
	add.s64 	%rd717, %rd2, %rd716;
	ld.local.u8 	%rs188, [%rd717];
	or.b16  	%rs189, %rs188, 128;
	st.local.u8 	[%rd717], %rs189;

$L__BB4_18:
	add.s32 	%r165, %r11186, 1;
	mul.wide.u32 	%rd718, %r165, -1171354717;
	shr.u64 	%rd719, %rd718, 35;
	cvt.u32.u64 	%r167, %rd719;
	mul.lo.s32 	%r168, %r167, 11;
	sub.s32 	%r169, %r168, %r165;
	add.s32 	%r170, %r169, 10;
	mul.wide.u32 	%rd720, %r167, 2;
	add.s64 	%rd721, %rd4, %rd720;
	ld.local.u16 	%r171, [%rd721];
	shl.b32 	%r172, %r161, %r170;
	and.b32  	%r173, %r172, %r171;
	setp.eq.s32 	%p21, %r173, 0;
	@%p21 bra 	$L__BB4_20;

	shr.u32 	%r174, %r11186, 3;
	cvt.u64.u32 	%rd722, %r174;
	add.s64 	%rd723, %rd2, %rd722;
	ld.local.u8 	%rs190, [%rd723];
	or.b16  	%rs191, %rs190, 64;
	st.local.u8 	[%rd723], %rs191;

$L__BB4_20:
	add.s32 	%r175, %r11186, 2;
	mul.wide.u32 	%rd724, %r175, -1171354717;
	shr.u64 	%rd725, %rd724, 35;
	cvt.u32.u64 	%r176, %rd725;
	mul.lo.s32 	%r177, %r176, 11;
	sub.s32 	%r178, %r177, %r175;
	add.s32 	%r179, %r178, 10;
	mul.wide.u32 	%rd726, %r176, 2;
	add.s64 	%rd727, %rd4, %rd726;
	ld.local.u16 	%r180, [%rd727];
	mov.u32 	%r181, 1;
	shl.b32 	%r182, %r181, %r179;
	and.b32  	%r183, %r182, %r180;
	setp.eq.s32 	%p22, %r183, 0;
	@%p22 bra 	$L__BB4_22;

	shr.u32 	%r184, %r11186, 3;
	cvt.u64.u32 	%rd728, %r184;
	add.s64 	%rd729, %rd2, %rd728;
	ld.local.u8 	%rs192, [%rd729];
	or.b16  	%rs193, %rs192, 32;
	st.local.u8 	[%rd729], %rs193;

$L__BB4_22:
	add.s32 	%r185, %r11186, 3;
	mul.wide.u32 	%rd730, %r185, -1171354717;
	shr.u64 	%rd731, %rd730, 35;
	cvt.u32.u64 	%r186, %rd731;
	mul.lo.s32 	%r187, %r186, 11;
	sub.s32 	%r188, %r187, %r185;
	add.s32 	%r189, %r188, 10;
	mul.wide.u32 	%rd732, %r186, 2;
	add.s64 	%rd733, %rd4, %rd732;
	ld.local.u16 	%r190, [%rd733];
	shl.b32 	%r192, %r181, %r189;
	and.b32  	%r193, %r192, %r190;
	setp.eq.s32 	%p23, %r193, 0;
	@%p23 bra 	$L__BB4_24;

	shr.u32 	%r194, %r11186, 3;
	cvt.u64.u32 	%rd734, %r194;
	add.s64 	%rd735, %rd2, %rd734;
	ld.local.u8 	%rs194, [%rd735];
	or.b16  	%rs195, %rs194, 16;
	st.local.u8 	[%rd735], %rs195;

$L__BB4_24:
	add.s32 	%r195, %r11186, 4;
	mul.wide.u32 	%rd736, %r195, -1171354717;
	shr.u64 	%rd737, %rd736, 35;
	cvt.u32.u64 	%r196, %rd737;
	mul.lo.s32 	%r197, %r196, 11;
	sub.s32 	%r198, %r197, %r195;
	add.s32 	%r199, %r198, 10;
	mul.wide.u32 	%rd738, %r196, 2;
	add.s64 	%rd739, %rd4, %rd738;
	ld.local.u16 	%r200, [%rd739];
	mov.u32 	%r201, 1;
	shl.b32 	%r202, %r201, %r199;
	and.b32  	%r203, %r202, %r200;
	setp.eq.s32 	%p24, %r203, 0;
	@%p24 bra 	$L__BB4_26;

	shr.u32 	%r204, %r11186, 3;
	cvt.u64.u32 	%rd740, %r204;
	add.s64 	%rd741, %rd2, %rd740;
	ld.local.u8 	%rs196, [%rd741];
	or.b16  	%rs197, %rs196, 8;
	st.local.u8 	[%rd741], %rs197;

$L__BB4_26:
	add.s32 	%r205, %r11186, 5;
	mul.wide.u32 	%rd742, %r205, -1171354717;
	shr.u64 	%rd743, %rd742, 35;
	cvt.u32.u64 	%r206, %rd743;
	mul.lo.s32 	%r207, %r206, 11;
	sub.s32 	%r208, %r207, %r205;
	add.s32 	%r209, %r208, 10;
	mul.wide.u32 	%rd744, %r206, 2;
	add.s64 	%rd745, %rd4, %rd744;
	ld.local.u16 	%r210, [%rd745];
	shl.b32 	%r212, %r201, %r209;
	and.b32  	%r213, %r212, %r210;
	setp.eq.s32 	%p25, %r213, 0;
	@%p25 bra 	$L__BB4_28;

	shr.u32 	%r214, %r11186, 3;
	cvt.u64.u32 	%rd746, %r214;
	add.s64 	%rd747, %rd2, %rd746;
	ld.local.u8 	%rs198, [%rd747];
	or.b16  	%rs199, %rs198, 4;
	st.local.u8 	[%rd747], %rs199;

$L__BB4_28:
	add.s32 	%r215, %r11186, 6;
	mul.wide.u32 	%rd748, %r215, -1171354717;
	shr.u64 	%rd749, %rd748, 35;
	cvt.u32.u64 	%r216, %rd749;
	mul.lo.s32 	%r217, %r216, 11;
	sub.s32 	%r218, %r217, %r215;
	add.s32 	%r219, %r218, 10;
	mul.wide.u32 	%rd750, %r216, 2;
	add.s64 	%rd751, %rd4, %rd750;
	ld.local.u16 	%r220, [%rd751];
	mov.u32 	%r221, 1;
	shl.b32 	%r222, %r221, %r219;
	and.b32  	%r223, %r222, %r220;
	setp.eq.s32 	%p26, %r223, 0;
	@%p26 bra 	$L__BB4_30;

	shr.u32 	%r224, %r11186, 3;
	cvt.u64.u32 	%rd752, %r224;
	add.s64 	%rd753, %rd2, %rd752;
	ld.local.u8 	%rs200, [%rd753];
	or.b16  	%rs201, %rs200, 2;
	st.local.u8 	[%rd753], %rs201;

$L__BB4_30:
	add.s32 	%r225, %r11186, 7;
	mul.wide.u32 	%rd754, %r225, -1171354717;
	shr.u64 	%rd755, %rd754, 35;
	cvt.u32.u64 	%r226, %rd755;
	mul.lo.s32 	%r227, %r226, 11;
	sub.s32 	%r228, %r227, %r225;
	add.s32 	%r229, %r228, 10;
	mul.wide.u32 	%rd756, %r226, 2;
	add.s64 	%rd757, %rd4, %rd756;
	ld.local.u16 	%r230, [%rd757];
	shl.b32 	%r232, %r221, %r229;
	and.b32  	%r233, %r232, %r230;
	setp.eq.s32 	%p27, %r233, 0;
	@%p27 bra 	$L__BB4_32;

	shr.u32 	%r234, %r11186, 3;
	cvt.u64.u32 	%rd758, %r234;
	add.s64 	%rd759, %rd2, %rd758;
	ld.local.u8 	%rs202, [%rd759];
	or.b16  	%rs203, %rs202, 1;
	st.local.u8 	[%rd759], %rs203;

$L__BB4_32:
	add.s32 	%r11186, %r11186, 8;
	setp.ne.s32 	%p28, %r11186, 128;
	@%p28 bra 	$L__BB4_16;

	ld.local.v4.u32 	{%r235, %r236, %r237, %r238}, [%rd2];
	mov.b32 	{%rs204, %rs205}, %r235;
	shr.u16 	%rs206, %rs204, 8;
	shr.u16 	%rs207, %rs205, 8;
	mov.b32 	{%rs208, %rs209}, %r236;
	shr.u16 	%rs210, %rs208, 8;
	shr.u16 	%rs211, %rs209, 8;
	mov.b32 	{%rs212, %rs213}, %r237;
	shr.u16 	%rs214, %rs212, 8;
	shr.u16 	%rs215, %rs213, 8;
	mov.b32 	{%rs216, %rs217}, %r238;
	shr.u16 	%rs218, %rs216, 8;
	shr.u16 	%rs219, %rs217, 8;
	cvt.u32.u16 	%r243, %rs204;
	shl.b32 	%r244, %r243, 24;
	cvt.u32.u16 	%r245, %rs206;
	shl.b32 	%r246, %r245, 16;
	or.b32  	%r247, %r246, %r244;
	and.b16  	%rs220, %rs205, 255;
	mul.wide.u16 	%r248, %rs220, 256;
	or.b32  	%r249, %r247, %r248;
	cvt.u32.u16 	%r250, %rs207;
	or.b32  	%r251, %r249, %r250;
	cvt.u32.u16 	%r252, %rs208;
	shl.b32 	%r253, %r252, 24;
	cvt.u32.u16 	%r254, %rs210;
	shl.b32 	%r255, %r254, 16;
	or.b32  	%r256, %r255, %r253;
	and.b16  	%rs221, %rs209, 255;
	mul.wide.u16 	%r257, %rs221, 256;
	or.b32  	%r258, %r256, %r257;
	cvt.u32.u16 	%r259, %rs211;
	or.b32  	%r260, %r258, %r259;
	cvt.u32.u16 	%r261, %rs212;
	shl.b32 	%r262, %r261, 24;
	cvt.u32.u16 	%r263, %rs214;
	shl.b32 	%r264, %r263, 16;
	or.b32  	%r265, %r264, %r262;
	and.b16  	%rs222, %rs213, 255;
	mul.wide.u16 	%r266, %rs222, 256;
	or.b32  	%r267, %r265, %r266;
	cvt.u32.u16 	%r268, %rs215;
	or.b32  	%r269, %r267, %r268;
	cvt.u32.u16 	%r270, %rs216;
	shl.b32 	%r271, %r270, 24;
	cvt.u32.u16 	%r272, %rs218;
	shl.b32 	%r273, %r272, 16;
	or.b32  	%r274, %r273, %r271;
	and.b16  	%rs223, %rs217, 255;
	mul.wide.u16 	%r275, %rs223, 256;
	or.b32  	%r276, %r274, %r275;
	cvt.u32.u16 	%r277, %rs219;
	or.b32  	%r278, %r276, %r277;
	shr.u32 	%r279, %r260, 7;
	shl.b32 	%r280, %r259, 25;
	or.b32  	%r281, %r280, %r279;
	shr.u32 	%r282, %r256, 18;
	shl.b32 	%r283, %r260, 14;
	or.b32  	%r284, %r283, %r282;
	shr.u32 	%r285, %r260, 3;
	xor.b32  	%r286, %r284, %r285;
	xor.b32  	%r287, %r286, %r281;
	add.s32 	%r288, %r251, %r287;
	shr.u32 	%r289, %r269, 7;
	shl.b32 	%r290, %r268, 25;
	or.b32  	%r291, %r290, %r289;
	shr.u32 	%r292, %r265, 18;
	shl.b32 	%r293, %r269, 14;
	or.b32  	%r294, %r293, %r292;
	shr.u32 	%r295, %r269, 3;
	xor.b32  	%r296, %r294, %r295;
	xor.b32  	%r297, %r296, %r291;
	add.s32 	%r298, %r260, %r297;
	add.s32 	%r299, %r298, 5242880;
	shr.u32 	%r300, %r278, 7;
	shl.b32 	%r301, %r277, 25;
	or.b32  	%r302, %r301, %r300;
	shr.u32 	%r303, %r274, 18;
	shl.b32 	%r304, %r278, 14;
	or.b32  	%r305, %r304, %r303;
	shr.u32 	%r306, %r278, 3;
	xor.b32  	%r307, %r305, %r306;
	xor.b32  	%r308, %r307, %r302;
	shf.l.wrap.b32 	%r309, %r288, %r288, 15;
	shf.l.wrap.b32 	%r310, %r288, %r288, 13;
	shr.u32 	%r311, %r288, 10;
	xor.b32  	%r312, %r310, %r311;
	xor.b32  	%r313, %r312, %r309;
	add.s32 	%r314, %r269, %r308;
	add.s32 	%r315, %r314, %r313;
	shf.l.wrap.b32 	%r316, %r299, %r299, 15;
	shf.l.wrap.b32 	%r317, %r299, %r299, 13;
	shr.u32 	%r318, %r299, 10;
	xor.b32  	%r319, %r317, %r318;
	xor.b32  	%r320, %r319, %r316;
	add.s32 	%r321, %r278, %r320;
	add.s32 	%r322, %r321, 285220864;
	shf.l.wrap.b32 	%r323, %r315, %r315, 15;
	shf.l.wrap.b32 	%r324, %r315, %r315, 13;
	shr.u32 	%r325, %r315, 10;
	xor.b32  	%r326, %r324, %r325;
	xor.b32  	%r327, %r326, %r323;
	xor.b32  	%r328, %r327, -2147483648;
	shf.l.wrap.b32 	%r329, %r322, %r322, 15;
	shf.l.wrap.b32 	%r330, %r322, %r322, 13;
	shr.u32 	%r331, %r322, 10;
	xor.b32  	%r332, %r330, %r331;
	xor.b32  	%r333, %r332, %r329;
	shr.u32 	%r334, %r328, 17;
	shl.b32 	%r335, %r327, 15;
	or.b32  	%r336, %r335, %r334;
	shr.u32 	%r337, %r328, 19;
	shl.b32 	%r338, %r327, 13;
	or.b32  	%r339, %r338, %r337;
	shr.u32 	%r340, %r328, 10;
	xor.b32  	%r341, %r339, %r340;
	xor.b32  	%r342, %r341, %r336;
	add.s32 	%r343, %r342, 128;
	shf.l.wrap.b32 	%r344, %r333, %r333, 15;
	shf.l.wrap.b32 	%r345, %r333, %r333, 13;
	shr.u32 	%r346, %r333, 10;
	xor.b32  	%r347, %r345, %r346;
	xor.b32  	%r348, %r347, %r344;
	add.s32 	%r349, %r288, %r348;
	shf.l.wrap.b32 	%r350, %r343, %r343, 15;
	shf.l.wrap.b32 	%r351, %r343, %r343, 13;
	shr.u32 	%r352, %r343, 10;
	xor.b32  	%r353, %r351, %r352;
	xor.b32  	%r354, %r353, %r350;
	add.s32 	%r355, %r299, %r354;
	shf.l.wrap.b32 	%r356, %r349, %r349, 15;
	shf.l.wrap.b32 	%r357, %r349, %r349, 13;
	shr.u32 	%r358, %r349, 10;
	xor.b32  	%r359, %r357, %r358;
	xor.b32  	%r360, %r359, %r356;
	add.s32 	%r361, %r315, %r360;
	shf.l.wrap.b32 	%r362, %r355, %r355, 15;
	shf.l.wrap.b32 	%r363, %r355, %r355, 13;
	shr.u32 	%r364, %r355, 10;
	xor.b32  	%r365, %r363, %r364;
	xor.b32  	%r366, %r365, %r362;
	add.s32 	%r367, %r322, %r366;
	shf.l.wrap.b32 	%r368, %r361, %r361, 15;
	shf.l.wrap.b32 	%r369, %r361, %r361, 13;
	shr.u32 	%r370, %r361, 10;
	xor.b32  	%r371, %r369, %r370;
	xor.b32  	%r372, %r371, %r368;
	add.s32 	%r373, %r328, %r372;
	shf.l.wrap.b32 	%r374, %r367, %r367, 15;
	shf.l.wrap.b32 	%r375, %r367, %r367, 13;
	shr.u32 	%r376, %r367, 10;
	xor.b32  	%r377, %r375, %r376;
	xor.b32  	%r378, %r377, %r374;
	add.s32 	%r379, %r333, %r378;
	shf.l.wrap.b32 	%r380, %r373, %r373, 15;
	shf.l.wrap.b32 	%r381, %r373, %r373, 13;
	shr.u32 	%r382, %r373, 10;
	xor.b32  	%r383, %r381, %r382;
	xor.b32  	%r384, %r383, %r380;
	add.s32 	%r385, %r343, %r384;
	shf.l.wrap.b32 	%r386, %r379, %r379, 15;
	shf.l.wrap.b32 	%r387, %r379, %r379, 13;
	shr.u32 	%r388, %r379, 10;
	xor.b32  	%r389, %r387, %r388;
	xor.b32  	%r390, %r389, %r386;
	add.s32 	%r391, %r349, %r390;
	add.s32 	%r392, %r391, 2097169;
	shf.l.wrap.b32 	%r393, %r288, %r288, 25;
	shf.l.wrap.b32 	%r394, %r288, %r288, 14;
	shr.u32 	%r395, %r288, 3;
	xor.b32  	%r396, %r394, %r395;
	xor.b32  	%r397, %r396, %r393;
	shf.l.wrap.b32 	%r398, %r385, %r385, 15;
	shf.l.wrap.b32 	%r399, %r385, %r385, 13;
	shr.u32 	%r400, %r385, 10;
	xor.b32  	%r401, %r399, %r400;
	xor.b32  	%r402, %r401, %r398;
	add.s32 	%r403, %r355, %r397;
	add.s32 	%r404, %r403, %r402;
	add.s32 	%r405, %r404, 128;
	shf.l.wrap.b32 	%r406, %r299, %r299, 25;
	shf.l.wrap.b32 	%r407, %r299, %r299, 14;
	shr.u32 	%r408, %r299, 3;
	xor.b32  	%r409, %r407, %r408;
	xor.b32  	%r410, %r409, %r406;
	shf.l.wrap.b32 	%r411, %r392, %r392, 15;
	shf.l.wrap.b32 	%r412, %r392, %r392, 13;
	shr.u32 	%r413, %r392, 10;
	xor.b32  	%r414, %r412, %r413;
	xor.b32  	%r415, %r414, %r411;
	add.s32 	%r416, %r361, %r288;
	add.s32 	%r417, %r416, %r410;
	add.s32 	%r418, %r417, %r415;
	shf.l.wrap.b32 	%r419, %r315, %r315, 25;
	shf.l.wrap.b32 	%r420, %r315, %r315, 14;
	shr.u32 	%r421, %r315, 3;
	xor.b32  	%r422, %r420, %r421;
	xor.b32  	%r423, %r422, %r419;
	shf.l.wrap.b32 	%r424, %r405, %r405, 15;
	shf.l.wrap.b32 	%r425, %r405, %r405, 13;
	shr.u32 	%r426, %r405, 10;
	xor.b32  	%r427, %r425, %r426;
	xor.b32  	%r428, %r427, %r424;
	add.s32 	%r429, %r367, %r299;
	add.s32 	%r430, %r429, %r423;
	add.s32 	%r431, %r430, %r428;
	shf.l.wrap.b32 	%r432, %r322, %r322, 25;
	shf.l.wrap.b32 	%r433, %r322, %r322, 14;
	shr.u32 	%r434, %r322, 3;
	xor.b32  	%r435, %r433, %r434;
	xor.b32  	%r436, %r435, %r432;
	shf.l.wrap.b32 	%r437, %r418, %r418, 15;
	shf.l.wrap.b32 	%r438, %r418, %r418, 13;
	shr.u32 	%r439, %r418, 10;
	xor.b32  	%r440, %r438, %r439;
	xor.b32  	%r441, %r440, %r437;
	add.s32 	%r442, %r373, %r315;
	add.s32 	%r443, %r442, %r436;
	add.s32 	%r444, %r443, %r441;
	shr.u32 	%r445, %r328, 7;
	shl.b32 	%r446, %r327, 25;
	or.b32  	%r447, %r446, %r445;
	shr.u32 	%r448, %r328, 18;
	shl.b32 	%r449, %r327, 14;
	or.b32  	%r450, %r449, %r448;
	shr.u32 	%r451, %r328, 3;
	xor.b32  	%r452, %r450, %r451;
	xor.b32  	%r453, %r452, %r447;
	shf.l.wrap.b32 	%r454, %r431, %r431, 15;
	shf.l.wrap.b32 	%r455, %r431, %r431, 13;
	shr.u32 	%r456, %r431, 10;
	xor.b32  	%r457, %r455, %r456;
	xor.b32  	%r458, %r457, %r454;
	add.s32 	%r459, %r379, %r322;
	add.s32 	%r460, %r459, %r453;
	add.s32 	%r461, %r460, %r458;
	shf.l.wrap.b32 	%r462, %r333, %r333, 25;
	shf.l.wrap.b32 	%r463, %r333, %r333, 14;
	shr.u32 	%r464, %r333, 3;
	xor.b32  	%r465, %r463, %r464;
	xor.b32  	%r466, %r465, %r462;
	shf.l.wrap.b32 	%r467, %r444, %r444, 15;
	shf.l.wrap.b32 	%r468, %r444, %r444, 13;
	shr.u32 	%r469, %r444, 10;
	xor.b32  	%r470, %r468, %r469;
	xor.b32  	%r471, %r470, %r467;
	add.s32 	%r472, %r385, %r328;
	add.s32 	%r473, %r472, %r466;
	add.s32 	%r474, %r473, %r471;
	shf.l.wrap.b32 	%r475, %r343, %r343, 25;
	shf.l.wrap.b32 	%r476, %r343, %r343, 14;
	shr.u32 	%r477, %r343, 3;
	xor.b32  	%r478, %r476, %r477;
	xor.b32  	%r479, %r478, %r475;
	shf.l.wrap.b32 	%r480, %r461, %r461, 15;
	shf.l.wrap.b32 	%r481, %r461, %r461, 13;
	shr.u32 	%r482, %r461, 10;
	xor.b32  	%r483, %r481, %r482;
	xor.b32  	%r484, %r483, %r480;
	add.s32 	%r485, %r392, %r333;
	add.s32 	%r486, %r485, %r479;
	add.s32 	%r487, %r486, %r484;
	shf.l.wrap.b32 	%r488, %r349, %r349, 25;
	shf.l.wrap.b32 	%r489, %r349, %r349, 14;
	shr.u32 	%r490, %r349, 3;
	xor.b32  	%r491, %r489, %r490;
	xor.b32  	%r492, %r491, %r488;
	shf.l.wrap.b32 	%r493, %r474, %r474, 15;
	shf.l.wrap.b32 	%r494, %r474, %r474, 13;
	shr.u32 	%r495, %r474, 10;
	xor.b32  	%r496, %r494, %r495;
	xor.b32  	%r497, %r496, %r493;
	add.s32 	%r498, %r405, %r343;
	add.s32 	%r499, %r498, %r492;
	add.s32 	%r500, %r499, %r497;
	shf.l.wrap.b32 	%r501, %r355, %r355, 25;
	shf.l.wrap.b32 	%r502, %r355, %r355, 14;
	shr.u32 	%r503, %r355, 3;
	xor.b32  	%r504, %r502, %r503;
	xor.b32  	%r505, %r504, %r501;
	shf.l.wrap.b32 	%r506, %r487, %r487, 15;
	shf.l.wrap.b32 	%r507, %r487, %r487, 13;
	shr.u32 	%r508, %r487, 10;
	xor.b32  	%r509, %r507, %r508;
	xor.b32  	%r510, %r509, %r506;
	add.s32 	%r511, %r418, %r349;
	add.s32 	%r512, %r511, %r505;
	add.s32 	%r513, %r512, %r510;
	shf.l.wrap.b32 	%r514, %r361, %r361, 25;
	shf.l.wrap.b32 	%r515, %r361, %r361, 14;
	shr.u32 	%r516, %r361, 3;
	xor.b32  	%r517, %r515, %r516;
	xor.b32  	%r518, %r517, %r514;
	shf.l.wrap.b32 	%r519, %r500, %r500, 15;
	shf.l.wrap.b32 	%r520, %r500, %r500, 13;
	shr.u32 	%r521, %r500, 10;
	xor.b32  	%r522, %r520, %r521;
	xor.b32  	%r523, %r522, %r519;
	add.s32 	%r524, %r431, %r355;
	add.s32 	%r525, %r524, %r518;
	add.s32 	%r526, %r525, %r523;
	shf.l.wrap.b32 	%r527, %r367, %r367, 25;
	shf.l.wrap.b32 	%r528, %r367, %r367, 14;
	shr.u32 	%r529, %r367, 3;
	xor.b32  	%r530, %r528, %r529;
	xor.b32  	%r531, %r530, %r527;
	shf.l.wrap.b32 	%r532, %r513, %r513, 15;
	shf.l.wrap.b32 	%r533, %r513, %r513, 13;
	shr.u32 	%r534, %r513, 10;
	xor.b32  	%r535, %r533, %r534;
	xor.b32  	%r536, %r535, %r532;
	add.s32 	%r537, %r444, %r361;
	add.s32 	%r538, %r537, %r531;
	add.s32 	%r539, %r538, %r536;
	shf.l.wrap.b32 	%r540, %r373, %r373, 25;
	shf.l.wrap.b32 	%r541, %r373, %r373, 14;
	shr.u32 	%r542, %r373, 3;
	xor.b32  	%r543, %r541, %r542;
	xor.b32  	%r544, %r543, %r540;
	shf.l.wrap.b32 	%r545, %r526, %r526, 15;
	shf.l.wrap.b32 	%r546, %r526, %r526, 13;
	shr.u32 	%r547, %r526, 10;
	xor.b32  	%r548, %r546, %r547;
	xor.b32  	%r549, %r548, %r545;
	add.s32 	%r550, %r461, %r367;
	add.s32 	%r551, %r550, %r544;
	add.s32 	%r552, %r551, %r549;
	shf.l.wrap.b32 	%r553, %r379, %r379, 25;
	shf.l.wrap.b32 	%r554, %r379, %r379, 14;
	shr.u32 	%r555, %r379, 3;
	xor.b32  	%r556, %r554, %r555;
	xor.b32  	%r557, %r556, %r553;
	shf.l.wrap.b32 	%r558, %r539, %r539, 15;
	shf.l.wrap.b32 	%r559, %r539, %r539, 13;
	shr.u32 	%r560, %r539, 10;
	xor.b32  	%r561, %r559, %r560;
	xor.b32  	%r562, %r561, %r558;
	add.s32 	%r563, %r474, %r373;
	add.s32 	%r564, %r563, %r557;
	add.s32 	%r565, %r564, %r562;
	shf.l.wrap.b32 	%r566, %r385, %r385, 25;
	shf.l.wrap.b32 	%r567, %r385, %r385, 14;
	shr.u32 	%r568, %r385, 3;
	xor.b32  	%r569, %r567, %r568;
	xor.b32  	%r570, %r569, %r566;
	shf.l.wrap.b32 	%r571, %r552, %r552, 15;
	shf.l.wrap.b32 	%r572, %r552, %r552, 13;
	shr.u32 	%r573, %r552, 10;
	xor.b32  	%r574, %r572, %r573;
	xor.b32  	%r575, %r574, %r571;
	add.s32 	%r576, %r487, %r379;
	add.s32 	%r577, %r576, %r570;
	add.s32 	%r578, %r577, %r575;
	shf.l.wrap.b32 	%r579, %r392, %r392, 25;
	shf.l.wrap.b32 	%r580, %r392, %r392, 14;
	shr.u32 	%r581, %r392, 3;
	xor.b32  	%r582, %r580, %r581;
	xor.b32  	%r583, %r582, %r579;
	shf.l.wrap.b32 	%r584, %r565, %r565, 15;
	shf.l.wrap.b32 	%r585, %r565, %r565, 13;
	shr.u32 	%r586, %r565, 10;
	xor.b32  	%r587, %r585, %r586;
	xor.b32  	%r588, %r587, %r584;
	add.s32 	%r589, %r500, %r385;
	add.s32 	%r590, %r589, %r583;
	add.s32 	%r591, %r590, %r588;
	shf.l.wrap.b32 	%r592, %r405, %r405, 25;
	shf.l.wrap.b32 	%r593, %r405, %r405, 14;
	shr.u32 	%r594, %r405, 3;
	xor.b32  	%r595, %r593, %r594;
	xor.b32  	%r596, %r595, %r592;
	shf.l.wrap.b32 	%r597, %r578, %r578, 15;
	shf.l.wrap.b32 	%r598, %r578, %r578, 13;
	shr.u32 	%r599, %r578, 10;
	xor.b32  	%r600, %r598, %r599;
	xor.b32  	%r601, %r600, %r597;
	add.s32 	%r602, %r513, %r392;
	add.s32 	%r603, %r602, %r596;
	add.s32 	%r604, %r603, %r601;
	shf.l.wrap.b32 	%r605, %r418, %r418, 25;
	shf.l.wrap.b32 	%r606, %r418, %r418, 14;
	shr.u32 	%r607, %r418, 3;
	xor.b32  	%r608, %r606, %r607;
	xor.b32  	%r609, %r608, %r605;
	shf.l.wrap.b32 	%r610, %r591, %r591, 15;
	shf.l.wrap.b32 	%r611, %r591, %r591, 13;
	shr.u32 	%r612, %r591, 10;
	xor.b32  	%r613, %r611, %r612;
	xor.b32  	%r614, %r613, %r610;
	add.s32 	%r615, %r526, %r405;
	add.s32 	%r616, %r615, %r609;
	add.s32 	%r617, %r616, %r614;
	shf.l.wrap.b32 	%r618, %r431, %r431, 25;
	shf.l.wrap.b32 	%r619, %r431, %r431, 14;
	shr.u32 	%r620, %r431, 3;
	xor.b32  	%r621, %r619, %r620;
	xor.b32  	%r622, %r621, %r618;
	shf.l.wrap.b32 	%r623, %r604, %r604, 15;
	shf.l.wrap.b32 	%r624, %r604, %r604, 13;
	shr.u32 	%r625, %r604, 10;
	xor.b32  	%r626, %r624, %r625;
	xor.b32  	%r627, %r626, %r623;
	add.s32 	%r628, %r539, %r418;
	add.s32 	%r629, %r628, %r622;
	add.s32 	%r630, %r629, %r627;
	shf.l.wrap.b32 	%r631, %r444, %r444, 25;
	shf.l.wrap.b32 	%r632, %r444, %r444, 14;
	shr.u32 	%r633, %r444, 3;
	xor.b32  	%r634, %r632, %r633;
	xor.b32  	%r635, %r634, %r631;
	shf.l.wrap.b32 	%r636, %r617, %r617, 15;
	shf.l.wrap.b32 	%r637, %r617, %r617, 13;
	shr.u32 	%r638, %r617, 10;
	xor.b32  	%r639, %r637, %r638;
	xor.b32  	%r640, %r639, %r636;
	add.s32 	%r641, %r552, %r431;
	add.s32 	%r642, %r641, %r635;
	add.s32 	%r643, %r642, %r640;
	shf.l.wrap.b32 	%r644, %r461, %r461, 25;
	shf.l.wrap.b32 	%r645, %r461, %r461, 14;
	shr.u32 	%r646, %r461, 3;
	xor.b32  	%r647, %r645, %r646;
	xor.b32  	%r648, %r647, %r644;
	shf.l.wrap.b32 	%r649, %r630, %r630, 15;
	shf.l.wrap.b32 	%r650, %r630, %r630, 13;
	shr.u32 	%r651, %r630, 10;
	xor.b32  	%r652, %r650, %r651;
	xor.b32  	%r653, %r652, %r649;
	add.s32 	%r654, %r565, %r444;
	add.s32 	%r655, %r654, %r648;
	add.s32 	%r656, %r655, %r653;
	shf.l.wrap.b32 	%r657, %r474, %r474, 25;
	shf.l.wrap.b32 	%r658, %r474, %r474, 14;
	shr.u32 	%r659, %r474, 3;
	xor.b32  	%r660, %r658, %r659;
	xor.b32  	%r661, %r660, %r657;
	shf.l.wrap.b32 	%r662, %r643, %r643, 15;
	shf.l.wrap.b32 	%r663, %r643, %r643, 13;
	shr.u32 	%r664, %r643, 10;
	xor.b32  	%r665, %r663, %r664;
	xor.b32  	%r666, %r665, %r662;
	add.s32 	%r667, %r578, %r461;
	add.s32 	%r668, %r667, %r661;
	add.s32 	%r669, %r668, %r666;
	shf.l.wrap.b32 	%r670, %r487, %r487, 25;
	shf.l.wrap.b32 	%r671, %r487, %r487, 14;
	shr.u32 	%r672, %r487, 3;
	xor.b32  	%r673, %r671, %r672;
	xor.b32  	%r674, %r673, %r670;
	shf.l.wrap.b32 	%r675, %r656, %r656, 15;
	shf.l.wrap.b32 	%r676, %r656, %r656, 13;
	shr.u32 	%r677, %r656, 10;
	xor.b32  	%r678, %r676, %r677;
	xor.b32  	%r679, %r678, %r675;
	add.s32 	%r680, %r591, %r474;
	add.s32 	%r681, %r680, %r674;
	add.s32 	%r682, %r681, %r679;
	shf.l.wrap.b32 	%r683, %r500, %r500, 25;
	shf.l.wrap.b32 	%r684, %r500, %r500, 14;
	shr.u32 	%r685, %r500, 3;
	xor.b32  	%r686, %r684, %r685;
	xor.b32  	%r687, %r686, %r683;
	shf.l.wrap.b32 	%r688, %r669, %r669, 15;
	shf.l.wrap.b32 	%r689, %r669, %r669, 13;
	shr.u32 	%r690, %r669, 10;
	xor.b32  	%r691, %r689, %r690;
	xor.b32  	%r692, %r691, %r688;
	add.s32 	%r693, %r604, %r487;
	add.s32 	%r694, %r693, %r687;
	add.s32 	%r695, %r694, %r692;
	shf.l.wrap.b32 	%r696, %r513, %r513, 25;
	shf.l.wrap.b32 	%r697, %r513, %r513, 14;
	shr.u32 	%r698, %r513, 3;
	xor.b32  	%r699, %r697, %r698;
	xor.b32  	%r700, %r699, %r696;
	shf.l.wrap.b32 	%r701, %r682, %r682, 15;
	shf.l.wrap.b32 	%r702, %r682, %r682, 13;
	shr.u32 	%r703, %r682, 10;
	xor.b32  	%r704, %r702, %r703;
	xor.b32  	%r705, %r704, %r701;
	add.s32 	%r706, %r617, %r500;
	add.s32 	%r707, %r706, %r700;
	add.s32 	%r708, %r707, %r705;
	shf.l.wrap.b32 	%r709, %r526, %r526, 25;
	shf.l.wrap.b32 	%r710, %r526, %r526, 14;
	shr.u32 	%r711, %r526, 3;
	xor.b32  	%r712, %r710, %r711;
	xor.b32  	%r713, %r712, %r709;
	shf.l.wrap.b32 	%r714, %r695, %r695, 15;
	shf.l.wrap.b32 	%r715, %r695, %r695, 13;
	shr.u32 	%r716, %r695, 10;
	xor.b32  	%r717, %r715, %r716;
	xor.b32  	%r718, %r717, %r714;
	add.s32 	%r719, %r630, %r513;
	add.s32 	%r720, %r719, %r713;
	add.s32 	%r721, %r720, %r718;
	shf.l.wrap.b32 	%r722, %r539, %r539, 25;
	shf.l.wrap.b32 	%r723, %r539, %r539, 14;
	shr.u32 	%r724, %r539, 3;
	xor.b32  	%r725, %r723, %r724;
	xor.b32  	%r726, %r725, %r722;
	shf.l.wrap.b32 	%r727, %r708, %r708, 15;
	shf.l.wrap.b32 	%r728, %r708, %r708, 13;
	shr.u32 	%r729, %r708, 10;
	xor.b32  	%r730, %r728, %r729;
	xor.b32  	%r731, %r730, %r727;
	add.s32 	%r732, %r643, %r526;
	add.s32 	%r733, %r732, %r726;
	add.s32 	%r734, %r733, %r731;
	shf.l.wrap.b32 	%r735, %r552, %r552, 25;
	shf.l.wrap.b32 	%r736, %r552, %r552, 14;
	shr.u32 	%r737, %r552, 3;
	xor.b32  	%r738, %r736, %r737;
	xor.b32  	%r739, %r738, %r735;
	shf.l.wrap.b32 	%r740, %r721, %r721, 15;
	shf.l.wrap.b32 	%r741, %r721, %r721, 13;
	shr.u32 	%r742, %r721, 10;
	xor.b32  	%r743, %r741, %r742;
	xor.b32  	%r744, %r743, %r740;
	add.s32 	%r745, %r656, %r539;
	add.s32 	%r746, %r745, %r739;
	add.s32 	%r747, %r746, %r744;
	shf.l.wrap.b32 	%r748, %r565, %r565, 25;
	shf.l.wrap.b32 	%r749, %r565, %r565, 14;
	shr.u32 	%r750, %r565, 3;
	xor.b32  	%r751, %r749, %r750;
	xor.b32  	%r752, %r751, %r748;
	shf.l.wrap.b32 	%r753, %r734, %r734, 15;
	shf.l.wrap.b32 	%r754, %r734, %r734, 13;
	shr.u32 	%r755, %r734, 10;
	xor.b32  	%r756, %r754, %r755;
	xor.b32  	%r757, %r756, %r753;
	add.s32 	%r758, %r669, %r552;
	add.s32 	%r759, %r758, %r752;
	add.s32 	%r760, %r759, %r757;
	shf.l.wrap.b32 	%r761, %r578, %r578, 25;
	shf.l.wrap.b32 	%r762, %r578, %r578, 14;
	shr.u32 	%r763, %r578, 3;
	xor.b32  	%r764, %r762, %r763;
	xor.b32  	%r765, %r764, %r761;
	shf.l.wrap.b32 	%r766, %r747, %r747, 15;
	shf.l.wrap.b32 	%r767, %r747, %r747, 13;
	shr.u32 	%r768, %r747, 10;
	xor.b32  	%r769, %r767, %r768;
	xor.b32  	%r770, %r769, %r766;
	add.s32 	%r771, %r682, %r565;
	add.s32 	%r772, %r771, %r765;
	add.s32 	%r773, %r772, %r770;
	shf.l.wrap.b32 	%r774, %r591, %r591, 25;
	shf.l.wrap.b32 	%r775, %r591, %r591, 14;
	shr.u32 	%r776, %r591, 3;
	xor.b32  	%r777, %r775, %r776;
	xor.b32  	%r778, %r777, %r774;
	shf.l.wrap.b32 	%r779, %r760, %r760, 15;
	shf.l.wrap.b32 	%r780, %r760, %r760, 13;
	shr.u32 	%r781, %r760, 10;
	xor.b32  	%r782, %r780, %r781;
	xor.b32  	%r783, %r782, %r779;
	add.s32 	%r784, %r695, %r578;
	add.s32 	%r785, %r784, %r778;
	add.s32 	%r786, %r785, %r783;
	shf.l.wrap.b32 	%r787, %r604, %r604, 25;
	shf.l.wrap.b32 	%r788, %r604, %r604, 14;
	shr.u32 	%r789, %r604, 3;
	xor.b32  	%r790, %r788, %r789;
	xor.b32  	%r791, %r790, %r787;
	shf.l.wrap.b32 	%r792, %r773, %r773, 15;
	shf.l.wrap.b32 	%r793, %r773, %r773, 13;
	shr.u32 	%r794, %r773, 10;
	xor.b32  	%r795, %r793, %r794;
	xor.b32  	%r796, %r795, %r792;
	add.s32 	%r797, %r708, %r591;
	add.s32 	%r798, %r797, %r791;
	add.s32 	%r799, %r798, %r796;
	shf.l.wrap.b32 	%r800, %r617, %r617, 25;
	shf.l.wrap.b32 	%r801, %r617, %r617, 14;
	shr.u32 	%r802, %r617, 3;
	xor.b32  	%r803, %r801, %r802;
	xor.b32  	%r804, %r803, %r800;
	shf.l.wrap.b32 	%r805, %r786, %r786, 15;
	shf.l.wrap.b32 	%r806, %r786, %r786, 13;
	shr.u32 	%r807, %r786, 10;
	xor.b32  	%r808, %r806, %r807;
	xor.b32  	%r809, %r808, %r805;
	add.s32 	%r810, %r721, %r604;
	add.s32 	%r811, %r810, %r804;
	add.s32 	%r812, %r811, %r809;
	shf.l.wrap.b32 	%r813, %r630, %r630, 25;
	shf.l.wrap.b32 	%r814, %r630, %r630, 14;
	shr.u32 	%r815, %r630, 3;
	xor.b32  	%r816, %r814, %r815;
	xor.b32  	%r817, %r816, %r813;
	shf.l.wrap.b32 	%r818, %r799, %r799, 15;
	shf.l.wrap.b32 	%r819, %r799, %r799, 13;
	shr.u32 	%r820, %r799, 10;
	xor.b32  	%r821, %r819, %r820;
	xor.b32  	%r822, %r821, %r818;
	add.s32 	%r823, %r734, %r617;
	add.s32 	%r824, %r823, %r817;
	add.s32 	%r825, %r824, %r822;
	ld.const.u32 	%r826, [K256];
	add.s32 	%r827, %r826, %r251;
	add.s32 	%r828, %r827, 1446884106;
	add.s32 	%r829, %r827, -1182902091;
	shf.l.wrap.b32 	%r830, %r828, %r828, 26;
	shf.l.wrap.b32 	%r831, %r828, %r828, 21;
	xor.b32  	%r832, %r830, %r831;
	shf.l.wrap.b32 	%r833, %r828, %r828, 7;
	xor.b32  	%r834, %r832, %r833;
	and.b32  	%r835, %r828, 1359893119;
	mov.u32 	%r836, -1446884107;
	sub.s32 	%r837, %r836, %r827;
	and.b32  	%r838, %r837, -1694144372;
	or.b32  	%r839, %r835, %r838;
	add.s32 	%r840, %r839, %r834;
	ld.const.u32 	%r841, [K256+4];
	add.s32 	%r842, %r840, %r841;
	add.s32 	%r843, %r842, %r260;
	shf.l.wrap.b32 	%r844, %r829, %r829, 30;
	shf.l.wrap.b32 	%r845, %r829, %r829, 19;
	xor.b32  	%r846, %r844, %r845;
	shf.l.wrap.b32 	%r847, %r829, %r829, 10;
	xor.b32  	%r848, %r846, %r847;
	and.b32  	%r849, %r829, -781301534;
	or.b32  	%r850, %r849, 704751109;
	add.s32 	%r851, %r848, %r850;
	add.s32 	%r852, %r851, %r843;
	add.s32 	%r853, %r843, 1542638877;
	add.s32 	%r854, %r852, 528734635;
	shf.l.wrap.b32 	%r855, %r853, %r853, 26;
	shf.l.wrap.b32 	%r856, %r853, %r853, 21;
	xor.b32  	%r857, %r855, %r856;
	shf.l.wrap.b32 	%r858, %r853, %r853, 7;
	xor.b32  	%r859, %r857, %r858;
	and.b32  	%r860, %r853, %r828;
	mov.u32 	%r861, 604844770;
	sub.s32 	%r862, %r861, %r843;
	and.b32  	%r863, %r862, 1359893119;
	or.b32  	%r864, %r860, %r863;
	add.s32 	%r865, %r864, %r859;
	ld.const.u32 	%r866, [K256+8];
	add.s32 	%r867, %r865, %r866;
	add.s32 	%r868, %r867, %r269;
	shf.l.wrap.b32 	%r869, %r854, %r854, 30;
	shf.l.wrap.b32 	%r870, %r854, %r854, 19;
	xor.b32  	%r871, %r869, %r870;
	shf.l.wrap.b32 	%r872, %r854, %r854, 10;
	xor.b32  	%r873, %r871, %r872;
	xor.b32  	%r874, %r829, 1779033703;
	and.b32  	%r875, %r854, %r874;
	and.b32  	%r876, %r829, 1779033703;
	xor.b32  	%r877, %r875, %r876;
	add.s32 	%r878, %r873, %r877;
	add.s32 	%r879, %r878, %r868;
	add.s32 	%r880, %r868, 1449989905;
	add.s32 	%r881, %r879, -1694144372;
	shf.l.wrap.b32 	%r882, %r880, %r880, 26;
	shf.l.wrap.b32 	%r883, %r880, %r880, 21;
	xor.b32  	%r884, %r882, %r883;
	shf.l.wrap.b32 	%r885, %r880, %r880, 7;
	xor.b32  	%r886, %r884, %r885;
	and.b32  	%r887, %r880, %r853;
	mov.u32 	%r888, -1449989906;
	sub.s32 	%r889, %r888, %r868;
	and.b32  	%r890, %r828, %r889;
	or.b32  	%r891, %r887, %r890;
	add.s32 	%r892, %r891, %r886;
	ld.const.u32 	%r893, [K256+12];
	add.s32 	%r894, %r892, %r893;
	add.s32 	%r895, %r894, %r278;
	shf.l.wrap.b32 	%r896, %r881, %r881, 30;
	shf.l.wrap.b32 	%r897, %r881, %r881, 19;
	xor.b32  	%r898, %r896, %r897;
	shf.l.wrap.b32 	%r899, %r881, %r881, 10;
	xor.b32  	%r900, %r898, %r899;
	xor.b32  	%r901, %r854, %r829;
	and.b32  	%r902, %r881, %r901;
	and.b32  	%r903, %r854, %r829;
	xor.b32  	%r904, %r902, %r903;
	add.s32 	%r905, %r900, %r904;
	add.s32 	%r906, %r905, %r895;
	add.s32 	%r907, %r895, -1156040474;
	add.s32 	%r908, %r906, 1359893119;
	shf.l.wrap.b32 	%r909, %r907, %r907, 26;
	shf.l.wrap.b32 	%r910, %r907, %r907, 21;
	xor.b32  	%r911, %r909, %r910;
	shf.l.wrap.b32 	%r912, %r907, %r907, 7;
	xor.b32  	%r913, %r911, %r912;
	and.b32  	%r914, %r907, %r880;
	mov.u32 	%r915, 1156040473;
	sub.s32 	%r916, %r915, %r895;
	and.b32  	%r917, %r853, %r916;
	or.b32  	%r918, %r914, %r917;
	add.s32 	%r919, %r918, %r828;
	add.s32 	%r920, %r919, %r913;
	ld.const.u32 	%r921, [K256+16];
	add.s32 	%r922, %r920, %r921;
	xor.b32  	%r923, %r922, -2147483648;
	shf.l.wrap.b32 	%r924, %r908, %r908, 30;
	shf.l.wrap.b32 	%r925, %r908, %r908, 19;
	xor.b32  	%r926, %r924, %r925;
	shf.l.wrap.b32 	%r927, %r908, %r908, 10;
	xor.b32  	%r928, %r926, %r927;
	xor.b32  	%r929, %r881, %r854;
	and.b32  	%r930, %r908, %r929;
	and.b32  	%r931, %r881, %r854;
	xor.b32  	%r932, %r930, %r931;
	add.s32 	%r933, %r928, %r932;
	add.s32 	%r934, %r923, %r829;
	add.s32 	%r935, %r933, %r923;
	shf.l.wrap.b32 	%r936, %r934, %r934, 26;
	shf.l.wrap.b32 	%r937, %r934, %r934, 21;
	xor.b32  	%r938, %r936, %r937;
	shf.l.wrap.b32 	%r939, %r934, %r934, 7;
	xor.b32  	%r940, %r938, %r939;
	and.b32  	%r941, %r934, %r907;
	not.b32 	%r942, %r934;
	and.b32  	%r943, %r880, %r942;
	or.b32  	%r944, %r941, %r943;
	add.s32 	%r945, %r944, %r853;
	add.s32 	%r946, %r945, %r940;
	ld.const.u32 	%r947, [K256+20];
	add.s32 	%r948, %r946, %r947;
	shf.l.wrap.b32 	%r949, %r935, %r935, 30;
	shf.l.wrap.b32 	%r950, %r935, %r935, 19;
	xor.b32  	%r951, %r949, %r950;
	shf.l.wrap.b32 	%r952, %r935, %r935, 10;
	xor.b32  	%r953, %r951, %r952;
	xor.b32  	%r954, %r908, %r881;
	and.b32  	%r955, %r935, %r954;
	and.b32  	%r956, %r908, %r881;
	xor.b32  	%r957, %r955, %r956;
	add.s32 	%r958, %r953, %r957;
	add.s32 	%r959, %r948, %r854;
	add.s32 	%r960, %r958, %r948;
	shf.l.wrap.b32 	%r961, %r959, %r959, 26;
	shf.l.wrap.b32 	%r962, %r959, %r959, 21;
	xor.b32  	%r963, %r961, %r962;
	shf.l.wrap.b32 	%r964, %r959, %r959, 7;
	xor.b32  	%r965, %r963, %r964;
	and.b32  	%r966, %r959, %r934;
	not.b32 	%r967, %r959;
	and.b32  	%r968, %r907, %r967;
	or.b32  	%r969, %r966, %r968;
	add.s32 	%r970, %r969, %r880;
	add.s32 	%r971, %r970, %r965;
	ld.const.u32 	%r972, [K256+24];
	add.s32 	%r973, %r971, %r972;
	shf.l.wrap.b32 	%r974, %r960, %r960, 30;
	shf.l.wrap.b32 	%r975, %r960, %r960, 19;
	xor.b32  	%r976, %r974, %r975;
	shf.l.wrap.b32 	%r977, %r960, %r960, 10;
	xor.b32  	%r978, %r976, %r977;
	xor.b32  	%r979, %r935, %r908;
	and.b32  	%r980, %r960, %r979;
	and.b32  	%r981, %r935, %r908;
	xor.b32  	%r982, %r980, %r981;
	add.s32 	%r983, %r978, %r982;
	add.s32 	%r984, %r973, %r881;
	add.s32 	%r985, %r983, %r973;
	shf.l.wrap.b32 	%r986, %r984, %r984, 26;
	shf.l.wrap.b32 	%r987, %r984, %r984, 21;
	xor.b32  	%r988, %r986, %r987;
	shf.l.wrap.b32 	%r989, %r984, %r984, 7;
	xor.b32  	%r990, %r988, %r989;
	and.b32  	%r991, %r984, %r959;
	not.b32 	%r992, %r984;
	and.b32  	%r993, %r934, %r992;
	or.b32  	%r994, %r991, %r993;
	add.s32 	%r995, %r994, %r907;
	add.s32 	%r996, %r995, %r990;
	ld.const.u32 	%r997, [K256+28];
	add.s32 	%r998, %r996, %r997;
	shf.l.wrap.b32 	%r999, %r985, %r985, 30;
	shf.l.wrap.b32 	%r1000, %r985, %r985, 19;
	xor.b32  	%r1001, %r999, %r1000;
	shf.l.wrap.b32 	%r1002, %r985, %r985, 10;
	xor.b32  	%r1003, %r1001, %r1002;
	xor.b32  	%r1004, %r960, %r935;
	and.b32  	%r1005, %r985, %r1004;
	and.b32  	%r1006, %r960, %r935;
	xor.b32  	%r1007, %r1005, %r1006;
	add.s32 	%r1008, %r1003, %r1007;
	add.s32 	%r1009, %r998, %r908;
	add.s32 	%r1010, %r1008, %r998;
	shf.l.wrap.b32 	%r1011, %r1009, %r1009, 26;
	shf.l.wrap.b32 	%r1012, %r1009, %r1009, 21;
	xor.b32  	%r1013, %r1011, %r1012;
	shf.l.wrap.b32 	%r1014, %r1009, %r1009, 7;
	xor.b32  	%r1015, %r1013, %r1014;
	and.b32  	%r1016, %r1009, %r984;
	not.b32 	%r1017, %r1009;
	and.b32  	%r1018, %r959, %r1017;
	or.b32  	%r1019, %r1016, %r1018;
	add.s32 	%r1020, %r1019, %r934;
	add.s32 	%r1021, %r1020, %r1015;
	ld.const.u32 	%r1022, [K256+32];
	add.s32 	%r1023, %r1021, %r1022;
	shf.l.wrap.b32 	%r1024, %r1010, %r1010, 30;
	shf.l.wrap.b32 	%r1025, %r1010, %r1010, 19;
	xor.b32  	%r1026, %r1024, %r1025;
	shf.l.wrap.b32 	%r1027, %r1010, %r1010, 10;
	xor.b32  	%r1028, %r1026, %r1027;
	xor.b32  	%r1029, %r985, %r960;
	and.b32  	%r1030, %r1010, %r1029;
	and.b32  	%r1031, %r985, %r960;
	xor.b32  	%r1032, %r1030, %r1031;
	add.s32 	%r1033, %r1028, %r1032;
	add.s32 	%r1034, %r1023, %r935;
	add.s32 	%r1035, %r1033, %r1023;
	shf.l.wrap.b32 	%r1036, %r1034, %r1034, 26;
	shf.l.wrap.b32 	%r1037, %r1034, %r1034, 21;
	xor.b32  	%r1038, %r1036, %r1037;
	shf.l.wrap.b32 	%r1039, %r1034, %r1034, 7;
	xor.b32  	%r1040, %r1038, %r1039;
	and.b32  	%r1041, %r1034, %r1009;
	not.b32 	%r1042, %r1034;
	and.b32  	%r1043, %r984, %r1042;
	or.b32  	%r1044, %r1041, %r1043;
	add.s32 	%r1045, %r1044, %r959;
	add.s32 	%r1046, %r1045, %r1040;
	ld.const.u32 	%r1047, [K256+36];
	add.s32 	%r1048, %r1046, %r1047;
	shf.l.wrap.b32 	%r1049, %r1035, %r1035, 30;
	shf.l.wrap.b32 	%r1050, %r1035, %r1035, 19;
	xor.b32  	%r1051, %r1049, %r1050;
	shf.l.wrap.b32 	%r1052, %r1035, %r1035, 10;
	xor.b32  	%r1053, %r1051, %r1052;
	xor.b32  	%r1054, %r1010, %r985;
	and.b32  	%r1055, %r1035, %r1054;
	and.b32  	%r1056, %r1010, %r985;
	xor.b32  	%r1057, %r1055, %r1056;
	add.s32 	%r1058, %r1053, %r1057;
	add.s32 	%r1059, %r1048, %r960;
	add.s32 	%r1060, %r1058, %r1048;
	shf.l.wrap.b32 	%r1061, %r1059, %r1059, 26;
	shf.l.wrap.b32 	%r1062, %r1059, %r1059, 21;
	xor.b32  	%r1063, %r1061, %r1062;
	shf.l.wrap.b32 	%r1064, %r1059, %r1059, 7;
	xor.b32  	%r1065, %r1063, %r1064;
	and.b32  	%r1066, %r1059, %r1034;
	not.b32 	%r1067, %r1059;
	and.b32  	%r1068, %r1009, %r1067;
	or.b32  	%r1069, %r1066, %r1068;
	add.s32 	%r1070, %r1069, %r984;
	add.s32 	%r1071, %r1070, %r1065;
	ld.const.u32 	%r1072, [K256+40];
	add.s32 	%r1073, %r1071, %r1072;
	shf.l.wrap.b32 	%r1074, %r1060, %r1060, 30;
	shf.l.wrap.b32 	%r1075, %r1060, %r1060, 19;
	xor.b32  	%r1076, %r1074, %r1075;
	shf.l.wrap.b32 	%r1077, %r1060, %r1060, 10;
	xor.b32  	%r1078, %r1076, %r1077;
	xor.b32  	%r1079, %r1035, %r1010;
	and.b32  	%r1080, %r1060, %r1079;
	and.b32  	%r1081, %r1035, %r1010;
	xor.b32  	%r1082, %r1080, %r1081;
	add.s32 	%r1083, %r1078, %r1082;
	add.s32 	%r1084, %r1073, %r985;
	add.s32 	%r1085, %r1083, %r1073;
	shf.l.wrap.b32 	%r1086, %r1084, %r1084, 26;
	shf.l.wrap.b32 	%r1087, %r1084, %r1084, 21;
	xor.b32  	%r1088, %r1086, %r1087;
	shf.l.wrap.b32 	%r1089, %r1084, %r1084, 7;
	xor.b32  	%r1090, %r1088, %r1089;
	and.b32  	%r1091, %r1084, %r1059;
	not.b32 	%r1092, %r1084;
	and.b32  	%r1093, %r1034, %r1092;
	or.b32  	%r1094, %r1091, %r1093;
	add.s32 	%r1095, %r1094, %r1009;
	add.s32 	%r1096, %r1095, %r1090;
	ld.const.u32 	%r1097, [K256+44];
	add.s32 	%r1098, %r1096, %r1097;
	shf.l.wrap.b32 	%r1099, %r1085, %r1085, 30;
	shf.l.wrap.b32 	%r1100, %r1085, %r1085, 19;
	xor.b32  	%r1101, %r1099, %r1100;
	shf.l.wrap.b32 	%r1102, %r1085, %r1085, 10;
	xor.b32  	%r1103, %r1101, %r1102;
	xor.b32  	%r1104, %r1060, %r1035;
	and.b32  	%r1105, %r1085, %r1104;
	and.b32  	%r1106, %r1060, %r1035;
	xor.b32  	%r1107, %r1105, %r1106;
	add.s32 	%r1108, %r1103, %r1107;
	add.s32 	%r1109, %r1098, %r1010;
	add.s32 	%r1110, %r1108, %r1098;
	shf.l.wrap.b32 	%r1111, %r1109, %r1109, 26;
	shf.l.wrap.b32 	%r1112, %r1109, %r1109, 21;
	xor.b32  	%r1113, %r1111, %r1112;
	shf.l.wrap.b32 	%r1114, %r1109, %r1109, 7;
	xor.b32  	%r1115, %r1113, %r1114;
	and.b32  	%r1116, %r1109, %r1084;
	not.b32 	%r1117, %r1109;
	and.b32  	%r1118, %r1059, %r1117;
	or.b32  	%r1119, %r1116, %r1118;
	add.s32 	%r1120, %r1119, %r1034;
	add.s32 	%r1121, %r1120, %r1115;
	ld.const.u32 	%r1122, [K256+48];
	add.s32 	%r1123, %r1121, %r1122;
	shf.l.wrap.b32 	%r1124, %r1110, %r1110, 30;
	shf.l.wrap.b32 	%r1125, %r1110, %r1110, 19;
	xor.b32  	%r1126, %r1124, %r1125;
	shf.l.wrap.b32 	%r1127, %r1110, %r1110, 10;
	xor.b32  	%r1128, %r1126, %r1127;
	xor.b32  	%r1129, %r1085, %r1060;
	and.b32  	%r1130, %r1110, %r1129;
	and.b32  	%r1131, %r1085, %r1060;
	xor.b32  	%r1132, %r1130, %r1131;
	add.s32 	%r1133, %r1128, %r1132;
	add.s32 	%r1134, %r1123, %r1035;
	add.s32 	%r1135, %r1133, %r1123;
	shf.l.wrap.b32 	%r1136, %r1134, %r1134, 26;
	shf.l.wrap.b32 	%r1137, %r1134, %r1134, 21;
	xor.b32  	%r1138, %r1136, %r1137;
	shf.l.wrap.b32 	%r1139, %r1134, %r1134, 7;
	xor.b32  	%r1140, %r1138, %r1139;
	and.b32  	%r1141, %r1134, %r1109;
	not.b32 	%r1142, %r1134;
	and.b32  	%r1143, %r1084, %r1142;
	or.b32  	%r1144, %r1141, %r1143;
	add.s32 	%r1145, %r1144, %r1059;
	add.s32 	%r1146, %r1145, %r1140;
	ld.const.u32 	%r1147, [K256+52];
	add.s32 	%r1148, %r1146, %r1147;
	shf.l.wrap.b32 	%r1149, %r1135, %r1135, 30;
	shf.l.wrap.b32 	%r1150, %r1135, %r1135, 19;
	xor.b32  	%r1151, %r1149, %r1150;
	shf.l.wrap.b32 	%r1152, %r1135, %r1135, 10;
	xor.b32  	%r1153, %r1151, %r1152;
	xor.b32  	%r1154, %r1110, %r1085;
	and.b32  	%r1155, %r1135, %r1154;
	and.b32  	%r1156, %r1110, %r1085;
	xor.b32  	%r1157, %r1155, %r1156;
	add.s32 	%r1158, %r1153, %r1157;
	add.s32 	%r1159, %r1148, %r1060;
	add.s32 	%r1160, %r1158, %r1148;
	shf.l.wrap.b32 	%r1161, %r1159, %r1159, 26;
	shf.l.wrap.b32 	%r1162, %r1159, %r1159, 21;
	xor.b32  	%r1163, %r1161, %r1162;
	shf.l.wrap.b32 	%r1164, %r1159, %r1159, 7;
	xor.b32  	%r1165, %r1163, %r1164;
	and.b32  	%r1166, %r1159, %r1134;
	not.b32 	%r1167, %r1159;
	and.b32  	%r1168, %r1109, %r1167;
	or.b32  	%r1169, %r1166, %r1168;
	add.s32 	%r1170, %r1169, %r1084;
	add.s32 	%r1171, %r1170, %r1165;
	ld.const.u32 	%r1172, [K256+56];
	add.s32 	%r1173, %r1171, %r1172;
	shf.l.wrap.b32 	%r1174, %r1160, %r1160, 30;
	shf.l.wrap.b32 	%r1175, %r1160, %r1160, 19;
	xor.b32  	%r1176, %r1174, %r1175;
	shf.l.wrap.b32 	%r1177, %r1160, %r1160, 10;
	xor.b32  	%r1178, %r1176, %r1177;
	xor.b32  	%r1179, %r1135, %r1110;
	and.b32  	%r1180, %r1160, %r1179;
	and.b32  	%r1181, %r1135, %r1110;
	xor.b32  	%r1182, %r1180, %r1181;
	add.s32 	%r1183, %r1178, %r1182;
	add.s32 	%r1184, %r1173, %r1085;
	add.s32 	%r1185, %r1183, %r1173;
	shf.l.wrap.b32 	%r1186, %r1184, %r1184, 26;
	shf.l.wrap.b32 	%r1187, %r1184, %r1184, 21;
	xor.b32  	%r1188, %r1186, %r1187;
	shf.l.wrap.b32 	%r1189, %r1184, %r1184, 7;
	xor.b32  	%r1190, %r1188, %r1189;
	and.b32  	%r1191, %r1184, %r1159;
	not.b32 	%r1192, %r1184;
	and.b32  	%r1193, %r1134, %r1192;
	or.b32  	%r1194, %r1191, %r1193;
	add.s32 	%r1195, %r1194, %r1109;
	add.s32 	%r1196, %r1195, %r1190;
	ld.const.u32 	%r1197, [K256+60];
	add.s32 	%r1198, %r1196, %r1197;
	add.s32 	%r1199, %r1198, 128;
	shf.l.wrap.b32 	%r1200, %r1185, %r1185, 30;
	shf.l.wrap.b32 	%r1201, %r1185, %r1185, 19;
	xor.b32  	%r1202, %r1200, %r1201;
	shf.l.wrap.b32 	%r1203, %r1185, %r1185, 10;
	xor.b32  	%r1204, %r1202, %r1203;
	xor.b32  	%r1205, %r1160, %r1135;
	and.b32  	%r1206, %r1185, %r1205;
	and.b32  	%r1207, %r1160, %r1135;
	xor.b32  	%r1208, %r1206, %r1207;
	add.s32 	%r1209, %r1204, %r1208;
	add.s32 	%r1210, %r1199, %r1110;
	add.s32 	%r1211, %r1209, %r1199;
	shf.l.wrap.b32 	%r1212, %r1210, %r1210, 26;
	shf.l.wrap.b32 	%r1213, %r1210, %r1210, 21;
	xor.b32  	%r1214, %r1212, %r1213;
	shf.l.wrap.b32 	%r1215, %r1210, %r1210, 7;
	xor.b32  	%r1216, %r1214, %r1215;
	and.b32  	%r1217, %r1210, %r1184;
	not.b32 	%r1218, %r1210;
	and.b32  	%r1219, %r1159, %r1218;
	or.b32  	%r1220, %r1217, %r1219;
	add.s32 	%r1221, %r1220, %r1134;
	add.s32 	%r1222, %r1221, %r1216;
	ld.const.u32 	%r1223, [K256+64];
	add.s32 	%r1224, %r1222, %r1223;
	add.s32 	%r1225, %r1224, %r288;
	shf.l.wrap.b32 	%r1226, %r1211, %r1211, 30;
	shf.l.wrap.b32 	%r1227, %r1211, %r1211, 19;
	xor.b32  	%r1228, %r1226, %r1227;
	shf.l.wrap.b32 	%r1229, %r1211, %r1211, 10;
	xor.b32  	%r1230, %r1228, %r1229;
	xor.b32  	%r1231, %r1185, %r1160;
	and.b32  	%r1232, %r1211, %r1231;
	and.b32  	%r1233, %r1185, %r1160;
	xor.b32  	%r1234, %r1232, %r1233;
	add.s32 	%r1235, %r1230, %r1234;
	add.s32 	%r1236, %r1225, %r1135;
	add.s32 	%r1237, %r1235, %r1225;
	shf.l.wrap.b32 	%r1238, %r1236, %r1236, 26;
	shf.l.wrap.b32 	%r1239, %r1236, %r1236, 21;
	xor.b32  	%r1240, %r1238, %r1239;
	shf.l.wrap.b32 	%r1241, %r1236, %r1236, 7;
	xor.b32  	%r1242, %r1240, %r1241;
	and.b32  	%r1243, %r1236, %r1210;
	not.b32 	%r1244, %r1236;
	and.b32  	%r1245, %r1184, %r1244;
	or.b32  	%r1246, %r1243, %r1245;
	add.s32 	%r1247, %r1246, %r1159;
	add.s32 	%r1248, %r1247, %r1242;
	ld.const.u32 	%r1249, [K256+68];
	add.s32 	%r1250, %r1248, %r1249;
	add.s32 	%r1251, %r1250, %r299;
	shf.l.wrap.b32 	%r1252, %r1237, %r1237, 30;
	shf.l.wrap.b32 	%r1253, %r1237, %r1237, 19;
	xor.b32  	%r1254, %r1252, %r1253;
	shf.l.wrap.b32 	%r1255, %r1237, %r1237, 10;
	xor.b32  	%r1256, %r1254, %r1255;
	xor.b32  	%r1257, %r1211, %r1185;
	and.b32  	%r1258, %r1237, %r1257;
	and.b32  	%r1259, %r1211, %r1185;
	xor.b32  	%r1260, %r1258, %r1259;
	add.s32 	%r1261, %r1256, %r1260;
	add.s32 	%r1262, %r1251, %r1160;
	add.s32 	%r1263, %r1261, %r1251;
	shf.l.wrap.b32 	%r1264, %r1262, %r1262, 26;
	shf.l.wrap.b32 	%r1265, %r1262, %r1262, 21;
	xor.b32  	%r1266, %r1264, %r1265;
	shf.l.wrap.b32 	%r1267, %r1262, %r1262, 7;
	xor.b32  	%r1268, %r1266, %r1267;
	and.b32  	%r1269, %r1262, %r1236;
	not.b32 	%r1270, %r1262;
	and.b32  	%r1271, %r1210, %r1270;
	or.b32  	%r1272, %r1269, %r1271;
	add.s32 	%r1273, %r1272, %r1184;
	add.s32 	%r1274, %r1273, %r1268;
	ld.const.u32 	%r1275, [K256+72];
	add.s32 	%r1276, %r1274, %r1275;
	add.s32 	%r1277, %r1276, %r315;
	shf.l.wrap.b32 	%r1278, %r1263, %r1263, 30;
	shf.l.wrap.b32 	%r1279, %r1263, %r1263, 19;
	xor.b32  	%r1280, %r1278, %r1279;
	shf.l.wrap.b32 	%r1281, %r1263, %r1263, 10;
	xor.b32  	%r1282, %r1280, %r1281;
	xor.b32  	%r1283, %r1237, %r1211;
	and.b32  	%r1284, %r1263, %r1283;
	and.b32  	%r1285, %r1237, %r1211;
	xor.b32  	%r1286, %r1284, %r1285;
	add.s32 	%r1287, %r1282, %r1286;
	add.s32 	%r1288, %r1277, %r1185;
	add.s32 	%r1289, %r1287, %r1277;
	shf.l.wrap.b32 	%r1290, %r1288, %r1288, 26;
	shf.l.wrap.b32 	%r1291, %r1288, %r1288, 21;
	xor.b32  	%r1292, %r1290, %r1291;
	shf.l.wrap.b32 	%r1293, %r1288, %r1288, 7;
	xor.b32  	%r1294, %r1292, %r1293;
	and.b32  	%r1295, %r1288, %r1262;
	not.b32 	%r1296, %r1288;
	and.b32  	%r1297, %r1236, %r1296;
	or.b32  	%r1298, %r1295, %r1297;
	add.s32 	%r1299, %r1298, %r1210;
	add.s32 	%r1300, %r1299, %r1294;
	ld.const.u32 	%r1301, [K256+76];
	add.s32 	%r1302, %r1300, %r1301;
	add.s32 	%r1303, %r1302, %r322;
	shf.l.wrap.b32 	%r1304, %r1289, %r1289, 30;
	shf.l.wrap.b32 	%r1305, %r1289, %r1289, 19;
	xor.b32  	%r1306, %r1304, %r1305;
	shf.l.wrap.b32 	%r1307, %r1289, %r1289, 10;
	xor.b32  	%r1308, %r1306, %r1307;
	xor.b32  	%r1309, %r1263, %r1237;
	and.b32  	%r1310, %r1289, %r1309;
	and.b32  	%r1311, %r1263, %r1237;
	xor.b32  	%r1312, %r1310, %r1311;
	add.s32 	%r1313, %r1308, %r1312;
	add.s32 	%r1314, %r1303, %r1211;
	add.s32 	%r1315, %r1313, %r1303;
	shf.l.wrap.b32 	%r1316, %r1314, %r1314, 26;
	shf.l.wrap.b32 	%r1317, %r1314, %r1314, 21;
	xor.b32  	%r1318, %r1316, %r1317;
	shf.l.wrap.b32 	%r1319, %r1314, %r1314, 7;
	xor.b32  	%r1320, %r1318, %r1319;
	and.b32  	%r1321, %r1314, %r1288;
	not.b32 	%r1322, %r1314;
	and.b32  	%r1323, %r1262, %r1322;
	or.b32  	%r1324, %r1321, %r1323;
	add.s32 	%r1325, %r1324, %r1236;
	add.s32 	%r1326, %r1325, %r1320;
	ld.const.u32 	%r1327, [K256+80];
	add.s32 	%r1328, %r1326, %r1327;
	add.s32 	%r1329, %r1328, %r328;
	shf.l.wrap.b32 	%r1330, %r1315, %r1315, 30;
	shf.l.wrap.b32 	%r1331, %r1315, %r1315, 19;
	xor.b32  	%r1332, %r1330, %r1331;
	shf.l.wrap.b32 	%r1333, %r1315, %r1315, 10;
	xor.b32  	%r1334, %r1332, %r1333;
	xor.b32  	%r1335, %r1289, %r1263;
	and.b32  	%r1336, %r1315, %r1335;
	and.b32  	%r1337, %r1289, %r1263;
	xor.b32  	%r1338, %r1336, %r1337;
	add.s32 	%r1339, %r1334, %r1338;
	add.s32 	%r1340, %r1329, %r1237;
	add.s32 	%r1341, %r1339, %r1329;
	shf.l.wrap.b32 	%r1342, %r1340, %r1340, 26;
	shf.l.wrap.b32 	%r1343, %r1340, %r1340, 21;
	xor.b32  	%r1344, %r1342, %r1343;
	shf.l.wrap.b32 	%r1345, %r1340, %r1340, 7;
	xor.b32  	%r1346, %r1344, %r1345;
	and.b32  	%r1347, %r1340, %r1314;
	not.b32 	%r1348, %r1340;
	and.b32  	%r1349, %r1288, %r1348;
	or.b32  	%r1350, %r1347, %r1349;
	add.s32 	%r1351, %r1350, %r1262;
	add.s32 	%r1352, %r1351, %r1346;
	ld.const.u32 	%r1353, [K256+84];
	add.s32 	%r1354, %r1352, %r1353;
	add.s32 	%r1355, %r1354, %r333;
	shf.l.wrap.b32 	%r1356, %r1341, %r1341, 30;
	shf.l.wrap.b32 	%r1357, %r1341, %r1341, 19;
	xor.b32  	%r1358, %r1356, %r1357;
	shf.l.wrap.b32 	%r1359, %r1341, %r1341, 10;
	xor.b32  	%r1360, %r1358, %r1359;
	xor.b32  	%r1361, %r1315, %r1289;
	and.b32  	%r1362, %r1341, %r1361;
	and.b32  	%r1363, %r1315, %r1289;
	xor.b32  	%r1364, %r1362, %r1363;
	add.s32 	%r1365, %r1360, %r1364;
	add.s32 	%r1366, %r1355, %r1263;
	add.s32 	%r1367, %r1365, %r1355;
	shf.l.wrap.b32 	%r1368, %r1366, %r1366, 26;
	shf.l.wrap.b32 	%r1369, %r1366, %r1366, 21;
	xor.b32  	%r1370, %r1368, %r1369;
	shf.l.wrap.b32 	%r1371, %r1366, %r1366, 7;
	xor.b32  	%r1372, %r1370, %r1371;
	and.b32  	%r1373, %r1366, %r1340;
	not.b32 	%r1374, %r1366;
	and.b32  	%r1375, %r1314, %r1374;
	or.b32  	%r1376, %r1373, %r1375;
	add.s32 	%r1377, %r1376, %r1288;
	add.s32 	%r1378, %r1377, %r1372;
	ld.const.u32 	%r1379, [K256+88];
	add.s32 	%r1380, %r1378, %r1379;
	add.s32 	%r1381, %r1380, %r343;
	shf.l.wrap.b32 	%r1382, %r1367, %r1367, 30;
	shf.l.wrap.b32 	%r1383, %r1367, %r1367, 19;
	xor.b32  	%r1384, %r1382, %r1383;
	shf.l.wrap.b32 	%r1385, %r1367, %r1367, 10;
	xor.b32  	%r1386, %r1384, %r1385;
	xor.b32  	%r1387, %r1341, %r1315;
	and.b32  	%r1388, %r1367, %r1387;
	and.b32  	%r1389, %r1341, %r1315;
	xor.b32  	%r1390, %r1388, %r1389;
	add.s32 	%r1391, %r1386, %r1390;
	add.s32 	%r1392, %r1381, %r1289;
	add.s32 	%r1393, %r1391, %r1381;
	shf.l.wrap.b32 	%r1394, %r1392, %r1392, 26;
	shf.l.wrap.b32 	%r1395, %r1392, %r1392, 21;
	xor.b32  	%r1396, %r1394, %r1395;
	shf.l.wrap.b32 	%r1397, %r1392, %r1392, 7;
	xor.b32  	%r1398, %r1396, %r1397;
	and.b32  	%r1399, %r1392, %r1366;
	not.b32 	%r1400, %r1392;
	and.b32  	%r1401, %r1340, %r1400;
	or.b32  	%r1402, %r1399, %r1401;
	add.s32 	%r1403, %r1402, %r1314;
	add.s32 	%r1404, %r1403, %r1398;
	ld.const.u32 	%r1405, [K256+92];
	add.s32 	%r1406, %r1404, %r1405;
	add.s32 	%r1407, %r1406, %r349;
	shf.l.wrap.b32 	%r1408, %r1393, %r1393, 30;
	shf.l.wrap.b32 	%r1409, %r1393, %r1393, 19;
	xor.b32  	%r1410, %r1408, %r1409;
	shf.l.wrap.b32 	%r1411, %r1393, %r1393, 10;
	xor.b32  	%r1412, %r1410, %r1411;
	xor.b32  	%r1413, %r1367, %r1341;
	and.b32  	%r1414, %r1393, %r1413;
	and.b32  	%r1415, %r1367, %r1341;
	xor.b32  	%r1416, %r1414, %r1415;
	add.s32 	%r1417, %r1412, %r1416;
	add.s32 	%r1418, %r1407, %r1315;
	add.s32 	%r1419, %r1417, %r1407;
	shf.l.wrap.b32 	%r1420, %r1418, %r1418, 26;
	shf.l.wrap.b32 	%r1421, %r1418, %r1418, 21;
	xor.b32  	%r1422, %r1420, %r1421;
	shf.l.wrap.b32 	%r1423, %r1418, %r1418, 7;
	xor.b32  	%r1424, %r1422, %r1423;
	and.b32  	%r1425, %r1418, %r1392;
	not.b32 	%r1426, %r1418;
	and.b32  	%r1427, %r1366, %r1426;
	or.b32  	%r1428, %r1425, %r1427;
	add.s32 	%r1429, %r1428, %r1340;
	add.s32 	%r1430, %r1429, %r1424;
	ld.const.u32 	%r1431, [K256+96];
	add.s32 	%r1432, %r1430, %r1431;
	add.s32 	%r1433, %r1432, %r355;
	shf.l.wrap.b32 	%r1434, %r1419, %r1419, 30;
	shf.l.wrap.b32 	%r1435, %r1419, %r1419, 19;
	xor.b32  	%r1436, %r1434, %r1435;
	shf.l.wrap.b32 	%r1437, %r1419, %r1419, 10;
	xor.b32  	%r1438, %r1436, %r1437;
	xor.b32  	%r1439, %r1393, %r1367;
	and.b32  	%r1440, %r1419, %r1439;
	and.b32  	%r1441, %r1393, %r1367;
	xor.b32  	%r1442, %r1440, %r1441;
	add.s32 	%r1443, %r1438, %r1442;
	add.s32 	%r1444, %r1433, %r1341;
	add.s32 	%r1445, %r1443, %r1433;
	shf.l.wrap.b32 	%r1446, %r1444, %r1444, 26;
	shf.l.wrap.b32 	%r1447, %r1444, %r1444, 21;
	xor.b32  	%r1448, %r1446, %r1447;
	shf.l.wrap.b32 	%r1449, %r1444, %r1444, 7;
	xor.b32  	%r1450, %r1448, %r1449;
	and.b32  	%r1451, %r1444, %r1418;
	not.b32 	%r1452, %r1444;
	and.b32  	%r1453, %r1392, %r1452;
	or.b32  	%r1454, %r1451, %r1453;
	add.s32 	%r1455, %r1454, %r1366;
	add.s32 	%r1456, %r1455, %r1450;
	ld.const.u32 	%r1457, [K256+100];
	add.s32 	%r1458, %r1456, %r1457;
	add.s32 	%r1459, %r1458, %r361;
	shf.l.wrap.b32 	%r1460, %r1445, %r1445, 30;
	shf.l.wrap.b32 	%r1461, %r1445, %r1445, 19;
	xor.b32  	%r1462, %r1460, %r1461;
	shf.l.wrap.b32 	%r1463, %r1445, %r1445, 10;
	xor.b32  	%r1464, %r1462, %r1463;
	xor.b32  	%r1465, %r1419, %r1393;
	and.b32  	%r1466, %r1445, %r1465;
	and.b32  	%r1467, %r1419, %r1393;
	xor.b32  	%r1468, %r1466, %r1467;
	add.s32 	%r1469, %r1464, %r1468;
	add.s32 	%r1470, %r1459, %r1367;
	add.s32 	%r1471, %r1469, %r1459;
	shf.l.wrap.b32 	%r1472, %r1470, %r1470, 26;
	shf.l.wrap.b32 	%r1473, %r1470, %r1470, 21;
	xor.b32  	%r1474, %r1472, %r1473;
	shf.l.wrap.b32 	%r1475, %r1470, %r1470, 7;
	xor.b32  	%r1476, %r1474, %r1475;
	and.b32  	%r1477, %r1470, %r1444;
	not.b32 	%r1478, %r1470;
	and.b32  	%r1479, %r1418, %r1478;
	or.b32  	%r1480, %r1477, %r1479;
	add.s32 	%r1481, %r1480, %r1392;
	add.s32 	%r1482, %r1481, %r1476;
	ld.const.u32 	%r1483, [K256+104];
	add.s32 	%r1484, %r1482, %r1483;
	add.s32 	%r1485, %r1484, %r367;
	shf.l.wrap.b32 	%r1486, %r1471, %r1471, 30;
	shf.l.wrap.b32 	%r1487, %r1471, %r1471, 19;
	xor.b32  	%r1488, %r1486, %r1487;
	shf.l.wrap.b32 	%r1489, %r1471, %r1471, 10;
	xor.b32  	%r1490, %r1488, %r1489;
	xor.b32  	%r1491, %r1445, %r1419;
	and.b32  	%r1492, %r1471, %r1491;
	and.b32  	%r1493, %r1445, %r1419;
	xor.b32  	%r1494, %r1492, %r1493;
	add.s32 	%r1495, %r1490, %r1494;
	add.s32 	%r1496, %r1485, %r1393;
	add.s32 	%r1497, %r1495, %r1485;
	shf.l.wrap.b32 	%r1498, %r1496, %r1496, 26;
	shf.l.wrap.b32 	%r1499, %r1496, %r1496, 21;
	xor.b32  	%r1500, %r1498, %r1499;
	shf.l.wrap.b32 	%r1501, %r1496, %r1496, 7;
	xor.b32  	%r1502, %r1500, %r1501;
	and.b32  	%r1503, %r1496, %r1470;
	not.b32 	%r1504, %r1496;
	and.b32  	%r1505, %r1444, %r1504;
	or.b32  	%r1506, %r1503, %r1505;
	add.s32 	%r1507, %r1506, %r1418;
	add.s32 	%r1508, %r1507, %r1502;
	ld.const.u32 	%r1509, [K256+108];
	add.s32 	%r1510, %r1508, %r1509;
	add.s32 	%r1511, %r1510, %r373;
	shf.l.wrap.b32 	%r1512, %r1497, %r1497, 30;
	shf.l.wrap.b32 	%r1513, %r1497, %r1497, 19;
	xor.b32  	%r1514, %r1512, %r1513;
	shf.l.wrap.b32 	%r1515, %r1497, %r1497, 10;
	xor.b32  	%r1516, %r1514, %r1515;
	xor.b32  	%r1517, %r1471, %r1445;
	and.b32  	%r1518, %r1497, %r1517;
	and.b32  	%r1519, %r1471, %r1445;
	xor.b32  	%r1520, %r1518, %r1519;
	add.s32 	%r1521, %r1516, %r1520;
	add.s32 	%r1522, %r1511, %r1419;
	add.s32 	%r1523, %r1521, %r1511;
	shf.l.wrap.b32 	%r1524, %r1522, %r1522, 26;
	shf.l.wrap.b32 	%r1525, %r1522, %r1522, 21;
	xor.b32  	%r1526, %r1524, %r1525;
	shf.l.wrap.b32 	%r1527, %r1522, %r1522, 7;
	xor.b32  	%r1528, %r1526, %r1527;
	and.b32  	%r1529, %r1522, %r1496;
	not.b32 	%r1530, %r1522;
	and.b32  	%r1531, %r1470, %r1530;
	or.b32  	%r1532, %r1529, %r1531;
	add.s32 	%r1533, %r1532, %r1444;
	add.s32 	%r1534, %r1533, %r1528;
	ld.const.u32 	%r1535, [K256+112];
	add.s32 	%r1536, %r1534, %r1535;
	add.s32 	%r1537, %r1536, %r379;
	shf.l.wrap.b32 	%r1538, %r1523, %r1523, 30;
	shf.l.wrap.b32 	%r1539, %r1523, %r1523, 19;
	xor.b32  	%r1540, %r1538, %r1539;
	shf.l.wrap.b32 	%r1541, %r1523, %r1523, 10;
	xor.b32  	%r1542, %r1540, %r1541;
	xor.b32  	%r1543, %r1497, %r1471;
	and.b32  	%r1544, %r1523, %r1543;
	and.b32  	%r1545, %r1497, %r1471;
	xor.b32  	%r1546, %r1544, %r1545;
	add.s32 	%r1547, %r1542, %r1546;
	add.s32 	%r1548, %r1537, %r1445;
	add.s32 	%r1549, %r1547, %r1537;
	shf.l.wrap.b32 	%r1550, %r1548, %r1548, 26;
	shf.l.wrap.b32 	%r1551, %r1548, %r1548, 21;
	xor.b32  	%r1552, %r1550, %r1551;
	shf.l.wrap.b32 	%r1553, %r1548, %r1548, 7;
	xor.b32  	%r1554, %r1552, %r1553;
	and.b32  	%r1555, %r1548, %r1522;
	not.b32 	%r1556, %r1548;
	and.b32  	%r1557, %r1496, %r1556;
	or.b32  	%r1558, %r1555, %r1557;
	add.s32 	%r1559, %r1558, %r1470;
	add.s32 	%r1560, %r1559, %r1554;
	ld.const.u32 	%r1561, [K256+116];
	add.s32 	%r1562, %r1560, %r1561;
	add.s32 	%r1563, %r1562, %r385;
	shf.l.wrap.b32 	%r1564, %r1549, %r1549, 30;
	shf.l.wrap.b32 	%r1565, %r1549, %r1549, 19;
	xor.b32  	%r1566, %r1564, %r1565;
	shf.l.wrap.b32 	%r1567, %r1549, %r1549, 10;
	xor.b32  	%r1568, %r1566, %r1567;
	xor.b32  	%r1569, %r1523, %r1497;
	and.b32  	%r1570, %r1549, %r1569;
	and.b32  	%r1571, %r1523, %r1497;
	xor.b32  	%r1572, %r1570, %r1571;
	add.s32 	%r1573, %r1568, %r1572;
	add.s32 	%r1574, %r1563, %r1471;
	add.s32 	%r1575, %r1573, %r1563;
	shf.l.wrap.b32 	%r1576, %r1574, %r1574, 26;
	shf.l.wrap.b32 	%r1577, %r1574, %r1574, 21;
	xor.b32  	%r1578, %r1576, %r1577;
	shf.l.wrap.b32 	%r1579, %r1574, %r1574, 7;
	xor.b32  	%r1580, %r1578, %r1579;
	and.b32  	%r1581, %r1574, %r1548;
	not.b32 	%r1582, %r1574;
	and.b32  	%r1583, %r1522, %r1582;
	or.b32  	%r1584, %r1581, %r1583;
	add.s32 	%r1585, %r1584, %r1496;
	add.s32 	%r1586, %r1585, %r1580;
	ld.const.u32 	%r1587, [K256+120];
	add.s32 	%r1588, %r1586, %r1587;
	add.s32 	%r1589, %r1588, %r392;
	shf.l.wrap.b32 	%r1590, %r1575, %r1575, 30;
	shf.l.wrap.b32 	%r1591, %r1575, %r1575, 19;
	xor.b32  	%r1592, %r1590, %r1591;
	shf.l.wrap.b32 	%r1593, %r1575, %r1575, 10;
	xor.b32  	%r1594, %r1592, %r1593;
	xor.b32  	%r1595, %r1549, %r1523;
	and.b32  	%r1596, %r1575, %r1595;
	and.b32  	%r1597, %r1549, %r1523;
	xor.b32  	%r1598, %r1596, %r1597;
	add.s32 	%r1599, %r1594, %r1598;
	add.s32 	%r1600, %r1589, %r1497;
	add.s32 	%r1601, %r1599, %r1589;
	shf.l.wrap.b32 	%r1602, %r1600, %r1600, 26;
	shf.l.wrap.b32 	%r1603, %r1600, %r1600, 21;
	xor.b32  	%r1604, %r1602, %r1603;
	shf.l.wrap.b32 	%r1605, %r1600, %r1600, 7;
	xor.b32  	%r1606, %r1604, %r1605;
	and.b32  	%r1607, %r1600, %r1574;
	not.b32 	%r1608, %r1600;
	and.b32  	%r1609, %r1548, %r1608;
	or.b32  	%r1610, %r1607, %r1609;
	add.s32 	%r1611, %r1610, %r1522;
	add.s32 	%r1612, %r1611, %r1606;
	ld.const.u32 	%r1613, [K256+124];
	add.s32 	%r1614, %r1612, %r1613;
	add.s32 	%r1615, %r1614, %r405;
	shf.l.wrap.b32 	%r1616, %r1601, %r1601, 30;
	shf.l.wrap.b32 	%r1617, %r1601, %r1601, 19;
	xor.b32  	%r1618, %r1616, %r1617;
	shf.l.wrap.b32 	%r1619, %r1601, %r1601, 10;
	xor.b32  	%r1620, %r1618, %r1619;
	xor.b32  	%r1621, %r1575, %r1549;
	and.b32  	%r1622, %r1601, %r1621;
	and.b32  	%r1623, %r1575, %r1549;
	xor.b32  	%r1624, %r1622, %r1623;
	add.s32 	%r1625, %r1620, %r1624;
	add.s32 	%r1626, %r1615, %r1523;
	add.s32 	%r1627, %r1625, %r1615;
	shf.l.wrap.b32 	%r1628, %r1626, %r1626, 26;
	shf.l.wrap.b32 	%r1629, %r1626, %r1626, 21;
	xor.b32  	%r1630, %r1628, %r1629;
	shf.l.wrap.b32 	%r1631, %r1626, %r1626, 7;
	xor.b32  	%r1632, %r1630, %r1631;
	and.b32  	%r1633, %r1626, %r1600;
	not.b32 	%r1634, %r1626;
	and.b32  	%r1635, %r1574, %r1634;
	or.b32  	%r1636, %r1633, %r1635;
	add.s32 	%r1637, %r1636, %r1548;
	add.s32 	%r1638, %r1637, %r1632;
	ld.const.u32 	%r1639, [K256+128];
	add.s32 	%r1640, %r1638, %r1639;
	add.s32 	%r1641, %r1640, %r418;
	shf.l.wrap.b32 	%r1642, %r1627, %r1627, 30;
	shf.l.wrap.b32 	%r1643, %r1627, %r1627, 19;
	xor.b32  	%r1644, %r1642, %r1643;
	shf.l.wrap.b32 	%r1645, %r1627, %r1627, 10;
	xor.b32  	%r1646, %r1644, %r1645;
	xor.b32  	%r1647, %r1601, %r1575;
	and.b32  	%r1648, %r1627, %r1647;
	and.b32  	%r1649, %r1601, %r1575;
	xor.b32  	%r1650, %r1648, %r1649;
	add.s32 	%r1651, %r1646, %r1650;
	add.s32 	%r1652, %r1641, %r1549;
	add.s32 	%r1653, %r1651, %r1641;
	shf.l.wrap.b32 	%r1654, %r1652, %r1652, 26;
	shf.l.wrap.b32 	%r1655, %r1652, %r1652, 21;
	xor.b32  	%r1656, %r1654, %r1655;
	shf.l.wrap.b32 	%r1657, %r1652, %r1652, 7;
	xor.b32  	%r1658, %r1656, %r1657;
	and.b32  	%r1659, %r1652, %r1626;
	not.b32 	%r1660, %r1652;
	and.b32  	%r1661, %r1600, %r1660;
	or.b32  	%r1662, %r1659, %r1661;
	add.s32 	%r1663, %r1662, %r1574;
	add.s32 	%r1664, %r1663, %r1658;
	ld.const.u32 	%r1665, [K256+132];
	add.s32 	%r1666, %r1664, %r1665;
	add.s32 	%r1667, %r1666, %r431;
	shf.l.wrap.b32 	%r1668, %r1653, %r1653, 30;
	shf.l.wrap.b32 	%r1669, %r1653, %r1653, 19;
	xor.b32  	%r1670, %r1668, %r1669;
	shf.l.wrap.b32 	%r1671, %r1653, %r1653, 10;
	xor.b32  	%r1672, %r1670, %r1671;
	xor.b32  	%r1673, %r1627, %r1601;
	and.b32  	%r1674, %r1653, %r1673;
	and.b32  	%r1675, %r1627, %r1601;
	xor.b32  	%r1676, %r1674, %r1675;
	add.s32 	%r1677, %r1672, %r1676;
	add.s32 	%r1678, %r1667, %r1575;
	add.s32 	%r1679, %r1677, %r1667;
	shf.l.wrap.b32 	%r1680, %r1678, %r1678, 26;
	shf.l.wrap.b32 	%r1681, %r1678, %r1678, 21;
	xor.b32  	%r1682, %r1680, %r1681;
	shf.l.wrap.b32 	%r1683, %r1678, %r1678, 7;
	xor.b32  	%r1684, %r1682, %r1683;
	and.b32  	%r1685, %r1678, %r1652;
	not.b32 	%r1686, %r1678;
	and.b32  	%r1687, %r1626, %r1686;
	or.b32  	%r1688, %r1685, %r1687;
	add.s32 	%r1689, %r1688, %r1600;
	add.s32 	%r1690, %r1689, %r1684;
	ld.const.u32 	%r1691, [K256+136];
	add.s32 	%r1692, %r1690, %r1691;
	add.s32 	%r1693, %r1692, %r444;
	shf.l.wrap.b32 	%r1694, %r1679, %r1679, 30;
	shf.l.wrap.b32 	%r1695, %r1679, %r1679, 19;
	xor.b32  	%r1696, %r1694, %r1695;
	shf.l.wrap.b32 	%r1697, %r1679, %r1679, 10;
	xor.b32  	%r1698, %r1696, %r1697;
	xor.b32  	%r1699, %r1653, %r1627;
	and.b32  	%r1700, %r1679, %r1699;
	and.b32  	%r1701, %r1653, %r1627;
	xor.b32  	%r1702, %r1700, %r1701;
	add.s32 	%r1703, %r1698, %r1702;
	add.s32 	%r1704, %r1693, %r1601;
	add.s32 	%r1705, %r1703, %r1693;
	shf.l.wrap.b32 	%r1706, %r1704, %r1704, 26;
	shf.l.wrap.b32 	%r1707, %r1704, %r1704, 21;
	xor.b32  	%r1708, %r1706, %r1707;
	shf.l.wrap.b32 	%r1709, %r1704, %r1704, 7;
	xor.b32  	%r1710, %r1708, %r1709;
	and.b32  	%r1711, %r1704, %r1678;
	not.b32 	%r1712, %r1704;
	and.b32  	%r1713, %r1652, %r1712;
	or.b32  	%r1714, %r1711, %r1713;
	add.s32 	%r1715, %r1714, %r1626;
	add.s32 	%r1716, %r1715, %r1710;
	ld.const.u32 	%r1717, [K256+140];
	add.s32 	%r1718, %r1716, %r1717;
	add.s32 	%r1719, %r1718, %r461;
	shf.l.wrap.b32 	%r1720, %r1705, %r1705, 30;
	shf.l.wrap.b32 	%r1721, %r1705, %r1705, 19;
	xor.b32  	%r1722, %r1720, %r1721;
	shf.l.wrap.b32 	%r1723, %r1705, %r1705, 10;
	xor.b32  	%r1724, %r1722, %r1723;
	xor.b32  	%r1725, %r1679, %r1653;
	and.b32  	%r1726, %r1705, %r1725;
	and.b32  	%r1727, %r1679, %r1653;
	xor.b32  	%r1728, %r1726, %r1727;
	add.s32 	%r1729, %r1724, %r1728;
	add.s32 	%r1730, %r1719, %r1627;
	add.s32 	%r1731, %r1729, %r1719;
	shf.l.wrap.b32 	%r1732, %r1730, %r1730, 26;
	shf.l.wrap.b32 	%r1733, %r1730, %r1730, 21;
	xor.b32  	%r1734, %r1732, %r1733;
	shf.l.wrap.b32 	%r1735, %r1730, %r1730, 7;
	xor.b32  	%r1736, %r1734, %r1735;
	and.b32  	%r1737, %r1730, %r1704;
	not.b32 	%r1738, %r1730;
	and.b32  	%r1739, %r1678, %r1738;
	or.b32  	%r1740, %r1737, %r1739;
	add.s32 	%r1741, %r1740, %r1652;
	add.s32 	%r1742, %r1741, %r1736;
	ld.const.u32 	%r1743, [K256+144];
	add.s32 	%r1744, %r1742, %r1743;
	add.s32 	%r1745, %r1744, %r474;
	shf.l.wrap.b32 	%r1746, %r1731, %r1731, 30;
	shf.l.wrap.b32 	%r1747, %r1731, %r1731, 19;
	xor.b32  	%r1748, %r1746, %r1747;
	shf.l.wrap.b32 	%r1749, %r1731, %r1731, 10;
	xor.b32  	%r1750, %r1748, %r1749;
	xor.b32  	%r1751, %r1705, %r1679;
	and.b32  	%r1752, %r1731, %r1751;
	and.b32  	%r1753, %r1705, %r1679;
	xor.b32  	%r1754, %r1752, %r1753;
	add.s32 	%r1755, %r1750, %r1754;
	add.s32 	%r1756, %r1745, %r1653;
	add.s32 	%r1757, %r1755, %r1745;
	shf.l.wrap.b32 	%r1758, %r1756, %r1756, 26;
	shf.l.wrap.b32 	%r1759, %r1756, %r1756, 21;
	xor.b32  	%r1760, %r1758, %r1759;
	shf.l.wrap.b32 	%r1761, %r1756, %r1756, 7;
	xor.b32  	%r1762, %r1760, %r1761;
	and.b32  	%r1763, %r1756, %r1730;
	not.b32 	%r1764, %r1756;
	and.b32  	%r1765, %r1704, %r1764;
	or.b32  	%r1766, %r1763, %r1765;
	add.s32 	%r1767, %r1766, %r1678;
	add.s32 	%r1768, %r1767, %r1762;
	ld.const.u32 	%r1769, [K256+148];
	add.s32 	%r1770, %r1768, %r1769;
	add.s32 	%r1771, %r1770, %r487;
	shf.l.wrap.b32 	%r1772, %r1757, %r1757, 30;
	shf.l.wrap.b32 	%r1773, %r1757, %r1757, 19;
	xor.b32  	%r1774, %r1772, %r1773;
	shf.l.wrap.b32 	%r1775, %r1757, %r1757, 10;
	xor.b32  	%r1776, %r1774, %r1775;
	xor.b32  	%r1777, %r1731, %r1705;
	and.b32  	%r1778, %r1757, %r1777;
	and.b32  	%r1779, %r1731, %r1705;
	xor.b32  	%r1780, %r1778, %r1779;
	add.s32 	%r1781, %r1776, %r1780;
	add.s32 	%r1782, %r1771, %r1679;
	add.s32 	%r1783, %r1781, %r1771;
	shf.l.wrap.b32 	%r1784, %r1782, %r1782, 26;
	shf.l.wrap.b32 	%r1785, %r1782, %r1782, 21;
	xor.b32  	%r1786, %r1784, %r1785;
	shf.l.wrap.b32 	%r1787, %r1782, %r1782, 7;
	xor.b32  	%r1788, %r1786, %r1787;
	and.b32  	%r1789, %r1782, %r1756;
	not.b32 	%r1790, %r1782;
	and.b32  	%r1791, %r1730, %r1790;
	or.b32  	%r1792, %r1789, %r1791;
	add.s32 	%r1793, %r1792, %r1704;
	add.s32 	%r1794, %r1793, %r1788;
	ld.const.u32 	%r1795, [K256+152];
	add.s32 	%r1796, %r1794, %r1795;
	add.s32 	%r1797, %r1796, %r500;
	shf.l.wrap.b32 	%r1798, %r1783, %r1783, 30;
	shf.l.wrap.b32 	%r1799, %r1783, %r1783, 19;
	xor.b32  	%r1800, %r1798, %r1799;
	shf.l.wrap.b32 	%r1801, %r1783, %r1783, 10;
	xor.b32  	%r1802, %r1800, %r1801;
	xor.b32  	%r1803, %r1757, %r1731;
	and.b32  	%r1804, %r1783, %r1803;
	and.b32  	%r1805, %r1757, %r1731;
	xor.b32  	%r1806, %r1804, %r1805;
	add.s32 	%r1807, %r1802, %r1806;
	add.s32 	%r1808, %r1797, %r1705;
	add.s32 	%r1809, %r1807, %r1797;
	shf.l.wrap.b32 	%r1810, %r1808, %r1808, 26;
	shf.l.wrap.b32 	%r1811, %r1808, %r1808, 21;
	xor.b32  	%r1812, %r1810, %r1811;
	shf.l.wrap.b32 	%r1813, %r1808, %r1808, 7;
	xor.b32  	%r1814, %r1812, %r1813;
	and.b32  	%r1815, %r1808, %r1782;
	not.b32 	%r1816, %r1808;
	and.b32  	%r1817, %r1756, %r1816;
	or.b32  	%r1818, %r1815, %r1817;
	add.s32 	%r1819, %r1818, %r1730;
	add.s32 	%r1820, %r1819, %r1814;
	ld.const.u32 	%r1821, [K256+156];
	add.s32 	%r1822, %r1820, %r1821;
	add.s32 	%r1823, %r1822, %r513;
	shf.l.wrap.b32 	%r1824, %r1809, %r1809, 30;
	shf.l.wrap.b32 	%r1825, %r1809, %r1809, 19;
	xor.b32  	%r1826, %r1824, %r1825;
	shf.l.wrap.b32 	%r1827, %r1809, %r1809, 10;
	xor.b32  	%r1828, %r1826, %r1827;
	xor.b32  	%r1829, %r1783, %r1757;
	and.b32  	%r1830, %r1809, %r1829;
	and.b32  	%r1831, %r1783, %r1757;
	xor.b32  	%r1832, %r1830, %r1831;
	add.s32 	%r1833, %r1828, %r1832;
	add.s32 	%r1834, %r1823, %r1731;
	add.s32 	%r1835, %r1833, %r1823;
	shf.l.wrap.b32 	%r1836, %r1834, %r1834, 26;
	shf.l.wrap.b32 	%r1837, %r1834, %r1834, 21;
	xor.b32  	%r1838, %r1836, %r1837;
	shf.l.wrap.b32 	%r1839, %r1834, %r1834, 7;
	xor.b32  	%r1840, %r1838, %r1839;
	and.b32  	%r1841, %r1834, %r1808;
	not.b32 	%r1842, %r1834;
	and.b32  	%r1843, %r1782, %r1842;
	or.b32  	%r1844, %r1841, %r1843;
	add.s32 	%r1845, %r1844, %r1756;
	add.s32 	%r1846, %r1845, %r1840;
	ld.const.u32 	%r1847, [K256+160];
	add.s32 	%r1848, %r1846, %r1847;
	add.s32 	%r1849, %r1848, %r526;
	shf.l.wrap.b32 	%r1850, %r1835, %r1835, 30;
	shf.l.wrap.b32 	%r1851, %r1835, %r1835, 19;
	xor.b32  	%r1852, %r1850, %r1851;
	shf.l.wrap.b32 	%r1853, %r1835, %r1835, 10;
	xor.b32  	%r1854, %r1852, %r1853;
	xor.b32  	%r1855, %r1809, %r1783;
	and.b32  	%r1856, %r1835, %r1855;
	and.b32  	%r1857, %r1809, %r1783;
	xor.b32  	%r1858, %r1856, %r1857;
	add.s32 	%r1859, %r1854, %r1858;
	add.s32 	%r1860, %r1849, %r1757;
	add.s32 	%r1861, %r1859, %r1849;
	shf.l.wrap.b32 	%r1862, %r1860, %r1860, 26;
	shf.l.wrap.b32 	%r1863, %r1860, %r1860, 21;
	xor.b32  	%r1864, %r1862, %r1863;
	shf.l.wrap.b32 	%r1865, %r1860, %r1860, 7;
	xor.b32  	%r1866, %r1864, %r1865;
	and.b32  	%r1867, %r1860, %r1834;
	not.b32 	%r1868, %r1860;
	and.b32  	%r1869, %r1808, %r1868;
	or.b32  	%r1870, %r1867, %r1869;
	add.s32 	%r1871, %r1870, %r1782;
	add.s32 	%r1872, %r1871, %r1866;
	ld.const.u32 	%r1873, [K256+164];
	add.s32 	%r1874, %r1872, %r1873;
	add.s32 	%r1875, %r1874, %r539;
	shf.l.wrap.b32 	%r1876, %r1861, %r1861, 30;
	shf.l.wrap.b32 	%r1877, %r1861, %r1861, 19;
	xor.b32  	%r1878, %r1876, %r1877;
	shf.l.wrap.b32 	%r1879, %r1861, %r1861, 10;
	xor.b32  	%r1880, %r1878, %r1879;
	xor.b32  	%r1881, %r1835, %r1809;
	and.b32  	%r1882, %r1861, %r1881;
	and.b32  	%r1883, %r1835, %r1809;
	xor.b32  	%r1884, %r1882, %r1883;
	add.s32 	%r1885, %r1880, %r1884;
	add.s32 	%r1886, %r1875, %r1783;
	add.s32 	%r1887, %r1885, %r1875;
	shf.l.wrap.b32 	%r1888, %r1886, %r1886, 26;
	shf.l.wrap.b32 	%r1889, %r1886, %r1886, 21;
	xor.b32  	%r1890, %r1888, %r1889;
	shf.l.wrap.b32 	%r1891, %r1886, %r1886, 7;
	xor.b32  	%r1892, %r1890, %r1891;
	and.b32  	%r1893, %r1886, %r1860;
	not.b32 	%r1894, %r1886;
	and.b32  	%r1895, %r1834, %r1894;
	or.b32  	%r1896, %r1893, %r1895;
	add.s32 	%r1897, %r1896, %r1808;
	add.s32 	%r1898, %r1897, %r1892;
	ld.const.u32 	%r1899, [K256+168];
	add.s32 	%r1900, %r1898, %r1899;
	add.s32 	%r1901, %r1900, %r552;
	shf.l.wrap.b32 	%r1902, %r1887, %r1887, 30;
	shf.l.wrap.b32 	%r1903, %r1887, %r1887, 19;
	xor.b32  	%r1904, %r1902, %r1903;
	shf.l.wrap.b32 	%r1905, %r1887, %r1887, 10;
	xor.b32  	%r1906, %r1904, %r1905;
	xor.b32  	%r1907, %r1861, %r1835;
	and.b32  	%r1908, %r1887, %r1907;
	and.b32  	%r1909, %r1861, %r1835;
	xor.b32  	%r1910, %r1908, %r1909;
	add.s32 	%r1911, %r1906, %r1910;
	add.s32 	%r1912, %r1901, %r1809;
	add.s32 	%r1913, %r1911, %r1901;
	shf.l.wrap.b32 	%r1914, %r1912, %r1912, 26;
	shf.l.wrap.b32 	%r1915, %r1912, %r1912, 21;
	xor.b32  	%r1916, %r1914, %r1915;
	shf.l.wrap.b32 	%r1917, %r1912, %r1912, 7;
	xor.b32  	%r1918, %r1916, %r1917;
	and.b32  	%r1919, %r1912, %r1886;
	not.b32 	%r1920, %r1912;
	and.b32  	%r1921, %r1860, %r1920;
	or.b32  	%r1922, %r1919, %r1921;
	add.s32 	%r1923, %r1922, %r1834;
	add.s32 	%r1924, %r1923, %r1918;
	ld.const.u32 	%r1925, [K256+172];
	add.s32 	%r1926, %r1924, %r1925;
	add.s32 	%r1927, %r1926, %r565;
	shf.l.wrap.b32 	%r1928, %r1913, %r1913, 30;
	shf.l.wrap.b32 	%r1929, %r1913, %r1913, 19;
	xor.b32  	%r1930, %r1928, %r1929;
	shf.l.wrap.b32 	%r1931, %r1913, %r1913, 10;
	xor.b32  	%r1932, %r1930, %r1931;
	xor.b32  	%r1933, %r1887, %r1861;
	and.b32  	%r1934, %r1913, %r1933;
	and.b32  	%r1935, %r1887, %r1861;
	xor.b32  	%r1936, %r1934, %r1935;
	add.s32 	%r1937, %r1932, %r1936;
	add.s32 	%r1938, %r1927, %r1835;
	add.s32 	%r1939, %r1937, %r1927;
	shf.l.wrap.b32 	%r1940, %r1938, %r1938, 26;
	shf.l.wrap.b32 	%r1941, %r1938, %r1938, 21;
	xor.b32  	%r1942, %r1940, %r1941;
	shf.l.wrap.b32 	%r1943, %r1938, %r1938, 7;
	xor.b32  	%r1944, %r1942, %r1943;
	and.b32  	%r1945, %r1938, %r1912;
	not.b32 	%r1946, %r1938;
	and.b32  	%r1947, %r1886, %r1946;
	or.b32  	%r1948, %r1945, %r1947;
	add.s32 	%r1949, %r1948, %r1860;
	add.s32 	%r1950, %r1949, %r1944;
	ld.const.u32 	%r1951, [K256+176];
	add.s32 	%r1952, %r1950, %r1951;
	add.s32 	%r1953, %r1952, %r578;
	shf.l.wrap.b32 	%r1954, %r1939, %r1939, 30;
	shf.l.wrap.b32 	%r1955, %r1939, %r1939, 19;
	xor.b32  	%r1956, %r1954, %r1955;
	shf.l.wrap.b32 	%r1957, %r1939, %r1939, 10;
	xor.b32  	%r1958, %r1956, %r1957;
	xor.b32  	%r1959, %r1913, %r1887;
	and.b32  	%r1960, %r1939, %r1959;
	and.b32  	%r1961, %r1913, %r1887;
	xor.b32  	%r1962, %r1960, %r1961;
	add.s32 	%r1963, %r1958, %r1962;
	add.s32 	%r1964, %r1953, %r1861;
	add.s32 	%r1965, %r1963, %r1953;
	shf.l.wrap.b32 	%r1966, %r1964, %r1964, 26;
	shf.l.wrap.b32 	%r1967, %r1964, %r1964, 21;
	xor.b32  	%r1968, %r1966, %r1967;
	shf.l.wrap.b32 	%r1969, %r1964, %r1964, 7;
	xor.b32  	%r1970, %r1968, %r1969;
	and.b32  	%r1971, %r1964, %r1938;
	not.b32 	%r1972, %r1964;
	and.b32  	%r1973, %r1912, %r1972;
	or.b32  	%r1974, %r1971, %r1973;
	add.s32 	%r1975, %r1974, %r1886;
	add.s32 	%r1976, %r1975, %r1970;
	ld.const.u32 	%r1977, [K256+180];
	add.s32 	%r1978, %r1976, %r1977;
	add.s32 	%r1979, %r1978, %r591;
	shf.l.wrap.b32 	%r1980, %r1965, %r1965, 30;
	shf.l.wrap.b32 	%r1981, %r1965, %r1965, 19;
	xor.b32  	%r1982, %r1980, %r1981;
	shf.l.wrap.b32 	%r1983, %r1965, %r1965, 10;
	xor.b32  	%r1984, %r1982, %r1983;
	xor.b32  	%r1985, %r1939, %r1913;
	and.b32  	%r1986, %r1965, %r1985;
	and.b32  	%r1987, %r1939, %r1913;
	xor.b32  	%r1988, %r1986, %r1987;
	add.s32 	%r1989, %r1984, %r1988;
	add.s32 	%r1990, %r1979, %r1887;
	add.s32 	%r1991, %r1989, %r1979;
	shf.l.wrap.b32 	%r1992, %r1990, %r1990, 26;
	shf.l.wrap.b32 	%r1993, %r1990, %r1990, 21;
	xor.b32  	%r1994, %r1992, %r1993;
	shf.l.wrap.b32 	%r1995, %r1990, %r1990, 7;
	xor.b32  	%r1996, %r1994, %r1995;
	and.b32  	%r1997, %r1990, %r1964;
	not.b32 	%r1998, %r1990;
	and.b32  	%r1999, %r1938, %r1998;
	or.b32  	%r2000, %r1997, %r1999;
	add.s32 	%r2001, %r2000, %r1912;
	add.s32 	%r2002, %r2001, %r1996;
	ld.const.u32 	%r2003, [K256+184];
	add.s32 	%r2004, %r2002, %r2003;
	add.s32 	%r2005, %r2004, %r604;
	shf.l.wrap.b32 	%r2006, %r1991, %r1991, 30;
	shf.l.wrap.b32 	%r2007, %r1991, %r1991, 19;
	xor.b32  	%r2008, %r2006, %r2007;
	shf.l.wrap.b32 	%r2009, %r1991, %r1991, 10;
	xor.b32  	%r2010, %r2008, %r2009;
	xor.b32  	%r2011, %r1965, %r1939;
	and.b32  	%r2012, %r1991, %r2011;
	and.b32  	%r2013, %r1965, %r1939;
	xor.b32  	%r2014, %r2012, %r2013;
	add.s32 	%r2015, %r2010, %r2014;
	add.s32 	%r2016, %r2005, %r1913;
	add.s32 	%r2017, %r2015, %r2005;
	shf.l.wrap.b32 	%r2018, %r2016, %r2016, 26;
	shf.l.wrap.b32 	%r2019, %r2016, %r2016, 21;
	xor.b32  	%r2020, %r2018, %r2019;
	shf.l.wrap.b32 	%r2021, %r2016, %r2016, 7;
	xor.b32  	%r2022, %r2020, %r2021;
	and.b32  	%r2023, %r2016, %r1990;
	not.b32 	%r2024, %r2016;
	and.b32  	%r2025, %r1964, %r2024;
	or.b32  	%r2026, %r2023, %r2025;
	add.s32 	%r2027, %r2026, %r1938;
	add.s32 	%r2028, %r2027, %r2022;
	ld.const.u32 	%r2029, [K256+188];
	add.s32 	%r2030, %r2028, %r2029;
	add.s32 	%r2031, %r2030, %r617;
	shf.l.wrap.b32 	%r2032, %r2017, %r2017, 30;
	shf.l.wrap.b32 	%r2033, %r2017, %r2017, 19;
	xor.b32  	%r2034, %r2032, %r2033;
	shf.l.wrap.b32 	%r2035, %r2017, %r2017, 10;
	xor.b32  	%r2036, %r2034, %r2035;
	xor.b32  	%r2037, %r1991, %r1965;
	and.b32  	%r2038, %r2017, %r2037;
	and.b32  	%r2039, %r1991, %r1965;
	xor.b32  	%r2040, %r2038, %r2039;
	add.s32 	%r2041, %r2036, %r2040;
	add.s32 	%r2042, %r2031, %r1939;
	add.s32 	%r2043, %r2041, %r2031;
	shf.l.wrap.b32 	%r2044, %r2042, %r2042, 26;
	shf.l.wrap.b32 	%r2045, %r2042, %r2042, 21;
	xor.b32  	%r2046, %r2044, %r2045;
	shf.l.wrap.b32 	%r2047, %r2042, %r2042, 7;
	xor.b32  	%r2048, %r2046, %r2047;
	and.b32  	%r2049, %r2042, %r2016;
	not.b32 	%r2050, %r2042;
	and.b32  	%r2051, %r1990, %r2050;
	or.b32  	%r2052, %r2049, %r2051;
	add.s32 	%r2053, %r2052, %r1964;
	add.s32 	%r2054, %r2053, %r2048;
	ld.const.u32 	%r2055, [K256+192];
	add.s32 	%r2056, %r2054, %r2055;
	add.s32 	%r2057, %r2056, %r630;
	shf.l.wrap.b32 	%r2058, %r2043, %r2043, 30;
	shf.l.wrap.b32 	%r2059, %r2043, %r2043, 19;
	xor.b32  	%r2060, %r2058, %r2059;
	shf.l.wrap.b32 	%r2061, %r2043, %r2043, 10;
	xor.b32  	%r2062, %r2060, %r2061;
	xor.b32  	%r2063, %r2017, %r1991;
	and.b32  	%r2064, %r2043, %r2063;
	and.b32  	%r2065, %r2017, %r1991;
	xor.b32  	%r2066, %r2064, %r2065;
	add.s32 	%r2067, %r2062, %r2066;
	add.s32 	%r2068, %r2057, %r1965;
	add.s32 	%r2069, %r2067, %r2057;
	shf.l.wrap.b32 	%r2070, %r2068, %r2068, 26;
	shf.l.wrap.b32 	%r2071, %r2068, %r2068, 21;
	xor.b32  	%r2072, %r2070, %r2071;
	shf.l.wrap.b32 	%r2073, %r2068, %r2068, 7;
	xor.b32  	%r2074, %r2072, %r2073;
	and.b32  	%r2075, %r2068, %r2042;
	not.b32 	%r2076, %r2068;
	and.b32  	%r2077, %r2016, %r2076;
	or.b32  	%r2078, %r2075, %r2077;
	add.s32 	%r2079, %r2078, %r1990;
	add.s32 	%r2080, %r2079, %r2074;
	ld.const.u32 	%r2081, [K256+196];
	add.s32 	%r2082, %r2080, %r2081;
	add.s32 	%r2083, %r2082, %r643;
	shf.l.wrap.b32 	%r2084, %r2069, %r2069, 30;
	shf.l.wrap.b32 	%r2085, %r2069, %r2069, 19;
	xor.b32  	%r2086, %r2084, %r2085;
	shf.l.wrap.b32 	%r2087, %r2069, %r2069, 10;
	xor.b32  	%r2088, %r2086, %r2087;
	xor.b32  	%r2089, %r2043, %r2017;
	and.b32  	%r2090, %r2069, %r2089;
	and.b32  	%r2091, %r2043, %r2017;
	xor.b32  	%r2092, %r2090, %r2091;
	add.s32 	%r2093, %r2088, %r2092;
	add.s32 	%r2094, %r2083, %r1991;
	add.s32 	%r2095, %r2093, %r2083;
	shf.l.wrap.b32 	%r2096, %r2094, %r2094, 26;
	shf.l.wrap.b32 	%r2097, %r2094, %r2094, 21;
	xor.b32  	%r2098, %r2096, %r2097;
	shf.l.wrap.b32 	%r2099, %r2094, %r2094, 7;
	xor.b32  	%r2100, %r2098, %r2099;
	and.b32  	%r2101, %r2094, %r2068;
	not.b32 	%r2102, %r2094;
	and.b32  	%r2103, %r2042, %r2102;
	or.b32  	%r2104, %r2101, %r2103;
	add.s32 	%r2105, %r2104, %r2016;
	add.s32 	%r2106, %r2105, %r2100;
	ld.const.u32 	%r2107, [K256+200];
	add.s32 	%r2108, %r2106, %r2107;
	add.s32 	%r2109, %r2108, %r656;
	shf.l.wrap.b32 	%r2110, %r2095, %r2095, 30;
	shf.l.wrap.b32 	%r2111, %r2095, %r2095, 19;
	xor.b32  	%r2112, %r2110, %r2111;
	shf.l.wrap.b32 	%r2113, %r2095, %r2095, 10;
	xor.b32  	%r2114, %r2112, %r2113;
	xor.b32  	%r2115, %r2069, %r2043;
	and.b32  	%r2116, %r2095, %r2115;
	and.b32  	%r2117, %r2069, %r2043;
	xor.b32  	%r2118, %r2116, %r2117;
	add.s32 	%r2119, %r2114, %r2118;
	add.s32 	%r2120, %r2109, %r2017;
	add.s32 	%r2121, %r2119, %r2109;
	shf.l.wrap.b32 	%r2122, %r2120, %r2120, 26;
	shf.l.wrap.b32 	%r2123, %r2120, %r2120, 21;
	xor.b32  	%r2124, %r2122, %r2123;
	shf.l.wrap.b32 	%r2125, %r2120, %r2120, 7;
	xor.b32  	%r2126, %r2124, %r2125;
	and.b32  	%r2127, %r2120, %r2094;
	not.b32 	%r2128, %r2120;
	and.b32  	%r2129, %r2068, %r2128;
	or.b32  	%r2130, %r2127, %r2129;
	add.s32 	%r2131, %r2130, %r2042;
	add.s32 	%r2132, %r2131, %r2126;
	ld.const.u32 	%r2133, [K256+204];
	add.s32 	%r2134, %r2132, %r2133;
	add.s32 	%r2135, %r2134, %r669;
	shf.l.wrap.b32 	%r2136, %r2121, %r2121, 30;
	shf.l.wrap.b32 	%r2137, %r2121, %r2121, 19;
	xor.b32  	%r2138, %r2136, %r2137;
	shf.l.wrap.b32 	%r2139, %r2121, %r2121, 10;
	xor.b32  	%r2140, %r2138, %r2139;
	xor.b32  	%r2141, %r2095, %r2069;
	and.b32  	%r2142, %r2121, %r2141;
	and.b32  	%r2143, %r2095, %r2069;
	xor.b32  	%r2144, %r2142, %r2143;
	add.s32 	%r2145, %r2140, %r2144;
	add.s32 	%r2146, %r2135, %r2043;
	add.s32 	%r2147, %r2145, %r2135;
	shf.l.wrap.b32 	%r2148, %r2146, %r2146, 26;
	shf.l.wrap.b32 	%r2149, %r2146, %r2146, 21;
	xor.b32  	%r2150, %r2148, %r2149;
	shf.l.wrap.b32 	%r2151, %r2146, %r2146, 7;
	xor.b32  	%r2152, %r2150, %r2151;
	and.b32  	%r2153, %r2146, %r2120;
	not.b32 	%r2154, %r2146;
	and.b32  	%r2155, %r2094, %r2154;
	or.b32  	%r2156, %r2153, %r2155;
	add.s32 	%r2157, %r2156, %r2068;
	add.s32 	%r2158, %r2157, %r2152;
	ld.const.u32 	%r2159, [K256+208];
	add.s32 	%r2160, %r2158, %r2159;
	add.s32 	%r2161, %r2160, %r682;
	shf.l.wrap.b32 	%r2162, %r2147, %r2147, 30;
	shf.l.wrap.b32 	%r2163, %r2147, %r2147, 19;
	xor.b32  	%r2164, %r2162, %r2163;
	shf.l.wrap.b32 	%r2165, %r2147, %r2147, 10;
	xor.b32  	%r2166, %r2164, %r2165;
	xor.b32  	%r2167, %r2121, %r2095;
	and.b32  	%r2168, %r2147, %r2167;
	and.b32  	%r2169, %r2121, %r2095;
	xor.b32  	%r2170, %r2168, %r2169;
	add.s32 	%r2171, %r2166, %r2170;
	add.s32 	%r2172, %r2161, %r2069;
	add.s32 	%r2173, %r2171, %r2161;
	shf.l.wrap.b32 	%r2174, %r2172, %r2172, 26;
	shf.l.wrap.b32 	%r2175, %r2172, %r2172, 21;
	xor.b32  	%r2176, %r2174, %r2175;
	shf.l.wrap.b32 	%r2177, %r2172, %r2172, 7;
	xor.b32  	%r2178, %r2176, %r2177;
	and.b32  	%r2179, %r2172, %r2146;
	not.b32 	%r2180, %r2172;
	and.b32  	%r2181, %r2120, %r2180;
	or.b32  	%r2182, %r2179, %r2181;
	add.s32 	%r2183, %r2182, %r2094;
	add.s32 	%r2184, %r2183, %r2178;
	ld.const.u32 	%r2185, [K256+212];
	add.s32 	%r2186, %r2184, %r2185;
	add.s32 	%r2187, %r2186, %r695;
	shf.l.wrap.b32 	%r2188, %r2173, %r2173, 30;
	shf.l.wrap.b32 	%r2189, %r2173, %r2173, 19;
	xor.b32  	%r2190, %r2188, %r2189;
	shf.l.wrap.b32 	%r2191, %r2173, %r2173, 10;
	xor.b32  	%r2192, %r2190, %r2191;
	xor.b32  	%r2193, %r2147, %r2121;
	and.b32  	%r2194, %r2173, %r2193;
	and.b32  	%r2195, %r2147, %r2121;
	xor.b32  	%r2196, %r2194, %r2195;
	add.s32 	%r2197, %r2192, %r2196;
	add.s32 	%r2198, %r2187, %r2095;
	add.s32 	%r2199, %r2197, %r2187;
	shf.l.wrap.b32 	%r2200, %r2198, %r2198, 26;
	shf.l.wrap.b32 	%r2201, %r2198, %r2198, 21;
	xor.b32  	%r2202, %r2200, %r2201;
	shf.l.wrap.b32 	%r2203, %r2198, %r2198, 7;
	xor.b32  	%r2204, %r2202, %r2203;
	and.b32  	%r2205, %r2198, %r2172;
	not.b32 	%r2206, %r2198;
	and.b32  	%r2207, %r2146, %r2206;
	or.b32  	%r2208, %r2205, %r2207;
	add.s32 	%r2209, %r2208, %r2120;
	add.s32 	%r2210, %r2209, %r2204;
	ld.const.u32 	%r2211, [K256+216];
	add.s32 	%r2212, %r2210, %r2211;
	add.s32 	%r2213, %r2212, %r708;
	shf.l.wrap.b32 	%r2214, %r2199, %r2199, 30;
	shf.l.wrap.b32 	%r2215, %r2199, %r2199, 19;
	xor.b32  	%r2216, %r2214, %r2215;
	shf.l.wrap.b32 	%r2217, %r2199, %r2199, 10;
	xor.b32  	%r2218, %r2216, %r2217;
	xor.b32  	%r2219, %r2173, %r2147;
	and.b32  	%r2220, %r2199, %r2219;
	and.b32  	%r2221, %r2173, %r2147;
	xor.b32  	%r2222, %r2220, %r2221;
	add.s32 	%r2223, %r2218, %r2222;
	add.s32 	%r2224, %r2213, %r2121;
	add.s32 	%r2225, %r2223, %r2213;
	shf.l.wrap.b32 	%r2226, %r2224, %r2224, 26;
	shf.l.wrap.b32 	%r2227, %r2224, %r2224, 21;
	xor.b32  	%r2228, %r2226, %r2227;
	shf.l.wrap.b32 	%r2229, %r2224, %r2224, 7;
	xor.b32  	%r2230, %r2228, %r2229;
	and.b32  	%r2231, %r2224, %r2198;
	not.b32 	%r2232, %r2224;
	and.b32  	%r2233, %r2172, %r2232;
	or.b32  	%r2234, %r2231, %r2233;
	add.s32 	%r2235, %r2234, %r2146;
	add.s32 	%r2236, %r2235, %r2230;
	ld.const.u32 	%r2237, [K256+220];
	add.s32 	%r2238, %r2236, %r2237;
	add.s32 	%r2239, %r2238, %r721;
	shf.l.wrap.b32 	%r2240, %r2225, %r2225, 30;
	shf.l.wrap.b32 	%r2241, %r2225, %r2225, 19;
	xor.b32  	%r2242, %r2240, %r2241;
	shf.l.wrap.b32 	%r2243, %r2225, %r2225, 10;
	xor.b32  	%r2244, %r2242, %r2243;
	xor.b32  	%r2245, %r2199, %r2173;
	and.b32  	%r2246, %r2225, %r2245;
	and.b32  	%r2247, %r2199, %r2173;
	xor.b32  	%r2248, %r2246, %r2247;
	add.s32 	%r2249, %r2244, %r2248;
	add.s32 	%r2250, %r2239, %r2147;
	add.s32 	%r2251, %r2249, %r2239;
	shf.l.wrap.b32 	%r2252, %r2250, %r2250, 26;
	shf.l.wrap.b32 	%r2253, %r2250, %r2250, 21;
	xor.b32  	%r2254, %r2252, %r2253;
	shf.l.wrap.b32 	%r2255, %r2250, %r2250, 7;
	xor.b32  	%r2256, %r2254, %r2255;
	and.b32  	%r2257, %r2250, %r2224;
	not.b32 	%r2258, %r2250;
	and.b32  	%r2259, %r2198, %r2258;
	or.b32  	%r2260, %r2257, %r2259;
	add.s32 	%r2261, %r2260, %r2172;
	add.s32 	%r2262, %r2261, %r2256;
	ld.const.u32 	%r2263, [K256+224];
	add.s32 	%r2264, %r2262, %r2263;
	add.s32 	%r2265, %r2264, %r734;
	shf.l.wrap.b32 	%r2266, %r2251, %r2251, 30;
	shf.l.wrap.b32 	%r2267, %r2251, %r2251, 19;
	xor.b32  	%r2268, %r2266, %r2267;
	shf.l.wrap.b32 	%r2269, %r2251, %r2251, 10;
	xor.b32  	%r2270, %r2268, %r2269;
	xor.b32  	%r2271, %r2225, %r2199;
	and.b32  	%r2272, %r2251, %r2271;
	and.b32  	%r2273, %r2225, %r2199;
	xor.b32  	%r2274, %r2272, %r2273;
	add.s32 	%r2275, %r2270, %r2274;
	add.s32 	%r2276, %r2265, %r2173;
	add.s32 	%r2277, %r2275, %r2265;
	shf.l.wrap.b32 	%r2278, %r2276, %r2276, 26;
	shf.l.wrap.b32 	%r2279, %r2276, %r2276, 21;
	xor.b32  	%r2280, %r2278, %r2279;
	shf.l.wrap.b32 	%r2281, %r2276, %r2276, 7;
	xor.b32  	%r2282, %r2280, %r2281;
	and.b32  	%r2283, %r2276, %r2250;
	not.b32 	%r2284, %r2276;
	and.b32  	%r2285, %r2224, %r2284;
	or.b32  	%r2286, %r2283, %r2285;
	add.s32 	%r2287, %r2286, %r2198;
	add.s32 	%r2288, %r2287, %r2282;
	ld.const.u32 	%r2289, [K256+228];
	add.s32 	%r2290, %r2288, %r2289;
	add.s32 	%r2291, %r2290, %r747;
	shf.l.wrap.b32 	%r2292, %r2277, %r2277, 30;
	shf.l.wrap.b32 	%r2293, %r2277, %r2277, 19;
	xor.b32  	%r2294, %r2292, %r2293;
	shf.l.wrap.b32 	%r2295, %r2277, %r2277, 10;
	xor.b32  	%r2296, %r2294, %r2295;
	xor.b32  	%r2297, %r2251, %r2225;
	and.b32  	%r2298, %r2277, %r2297;
	and.b32  	%r2299, %r2251, %r2225;
	xor.b32  	%r2300, %r2298, %r2299;
	add.s32 	%r2301, %r2296, %r2300;
	add.s32 	%r2302, %r2291, %r2199;
	add.s32 	%r2303, %r2301, %r2291;
	shf.l.wrap.b32 	%r2304, %r2302, %r2302, 26;
	shf.l.wrap.b32 	%r2305, %r2302, %r2302, 21;
	xor.b32  	%r2306, %r2304, %r2305;
	shf.l.wrap.b32 	%r2307, %r2302, %r2302, 7;
	xor.b32  	%r2308, %r2306, %r2307;
	and.b32  	%r2309, %r2302, %r2276;
	not.b32 	%r2310, %r2302;
	and.b32  	%r2311, %r2250, %r2310;
	or.b32  	%r2312, %r2309, %r2311;
	add.s32 	%r2313, %r2312, %r2224;
	add.s32 	%r2314, %r2313, %r2308;
	ld.const.u32 	%r2315, [K256+232];
	add.s32 	%r2316, %r2314, %r2315;
	add.s32 	%r2317, %r2316, %r760;
	shf.l.wrap.b32 	%r2318, %r2303, %r2303, 30;
	shf.l.wrap.b32 	%r2319, %r2303, %r2303, 19;
	xor.b32  	%r2320, %r2318, %r2319;
	shf.l.wrap.b32 	%r2321, %r2303, %r2303, 10;
	xor.b32  	%r2322, %r2320, %r2321;
	xor.b32  	%r2323, %r2277, %r2251;
	and.b32  	%r2324, %r2303, %r2323;
	and.b32  	%r2325, %r2277, %r2251;
	xor.b32  	%r2326, %r2324, %r2325;
	add.s32 	%r2327, %r2322, %r2326;
	add.s32 	%r2328, %r2317, %r2225;
	add.s32 	%r2329, %r2327, %r2317;
	shf.l.wrap.b32 	%r2330, %r2328, %r2328, 26;
	shf.l.wrap.b32 	%r2331, %r2328, %r2328, 21;
	xor.b32  	%r2332, %r2330, %r2331;
	shf.l.wrap.b32 	%r2333, %r2328, %r2328, 7;
	xor.b32  	%r2334, %r2332, %r2333;
	and.b32  	%r2335, %r2328, %r2302;
	not.b32 	%r2336, %r2328;
	and.b32  	%r2337, %r2276, %r2336;
	or.b32  	%r2338, %r2335, %r2337;
	add.s32 	%r2339, %r2338, %r2250;
	add.s32 	%r2340, %r2339, %r2334;
	ld.const.u32 	%r2341, [K256+236];
	add.s32 	%r2342, %r2340, %r2341;
	add.s32 	%r2343, %r2342, %r773;
	shf.l.wrap.b32 	%r2344, %r2329, %r2329, 30;
	shf.l.wrap.b32 	%r2345, %r2329, %r2329, 19;
	xor.b32  	%r2346, %r2344, %r2345;
	shf.l.wrap.b32 	%r2347, %r2329, %r2329, 10;
	xor.b32  	%r2348, %r2346, %r2347;
	xor.b32  	%r2349, %r2303, %r2277;
	and.b32  	%r2350, %r2329, %r2349;
	and.b32  	%r2351, %r2303, %r2277;
	xor.b32  	%r2352, %r2350, %r2351;
	add.s32 	%r2353, %r2348, %r2352;
	add.s32 	%r2354, %r2343, %r2251;
	add.s32 	%r2355, %r2353, %r2343;
	shf.l.wrap.b32 	%r2356, %r2354, %r2354, 26;
	shf.l.wrap.b32 	%r2357, %r2354, %r2354, 21;
	xor.b32  	%r2358, %r2356, %r2357;
	shf.l.wrap.b32 	%r2359, %r2354, %r2354, 7;
	xor.b32  	%r2360, %r2358, %r2359;
	and.b32  	%r2361, %r2354, %r2328;
	not.b32 	%r2362, %r2354;
	and.b32  	%r2363, %r2302, %r2362;
	or.b32  	%r2364, %r2361, %r2363;
	add.s32 	%r2365, %r2364, %r2276;
	add.s32 	%r2366, %r2365, %r2360;
	ld.const.u32 	%r2367, [K256+240];
	add.s32 	%r2368, %r2366, %r2367;
	add.s32 	%r2369, %r2368, %r786;
	shf.l.wrap.b32 	%r2370, %r2355, %r2355, 30;
	shf.l.wrap.b32 	%r2371, %r2355, %r2355, 19;
	xor.b32  	%r2372, %r2370, %r2371;
	shf.l.wrap.b32 	%r2373, %r2355, %r2355, 10;
	xor.b32  	%r2374, %r2372, %r2373;
	xor.b32  	%r2375, %r2329, %r2303;
	and.b32  	%r2376, %r2355, %r2375;
	and.b32  	%r2377, %r2329, %r2303;
	xor.b32  	%r2378, %r2376, %r2377;
	add.s32 	%r2379, %r2374, %r2378;
	add.s32 	%r2380, %r2369, %r2277;
	add.s32 	%r2381, %r2379, %r2369;
	shf.l.wrap.b32 	%r2382, %r2380, %r2380, 26;
	shf.l.wrap.b32 	%r2383, %r2380, %r2380, 21;
	xor.b32  	%r2384, %r2382, %r2383;
	shf.l.wrap.b32 	%r2385, %r2380, %r2380, 7;
	xor.b32  	%r2386, %r2384, %r2385;
	and.b32  	%r2387, %r2380, %r2354;
	not.b32 	%r2388, %r2380;
	and.b32  	%r2389, %r2328, %r2388;
	or.b32  	%r2390, %r2387, %r2389;
	add.s32 	%r2391, %r2390, %r2302;
	add.s32 	%r2392, %r2391, %r2386;
	ld.const.u32 	%r2393, [K256+244];
	add.s32 	%r2394, %r2392, %r2393;
	add.s32 	%r2395, %r2394, %r799;
	shf.l.wrap.b32 	%r2396, %r2381, %r2381, 30;
	shf.l.wrap.b32 	%r2397, %r2381, %r2381, 19;
	xor.b32  	%r2398, %r2396, %r2397;
	shf.l.wrap.b32 	%r2399, %r2381, %r2381, 10;
	xor.b32  	%r2400, %r2398, %r2399;
	xor.b32  	%r2401, %r2355, %r2329;
	and.b32  	%r2402, %r2381, %r2401;
	and.b32  	%r2403, %r2355, %r2329;
	xor.b32  	%r2404, %r2402, %r2403;
	add.s32 	%r2405, %r2400, %r2404;
	add.s32 	%r2406, %r2395, %r2303;
	add.s32 	%r2407, %r2405, %r2395;
	shf.l.wrap.b32 	%r2408, %r2406, %r2406, 26;
	shf.l.wrap.b32 	%r2409, %r2406, %r2406, 21;
	xor.b32  	%r2410, %r2408, %r2409;
	shf.l.wrap.b32 	%r2411, %r2406, %r2406, 7;
	xor.b32  	%r2412, %r2410, %r2411;
	and.b32  	%r2413, %r2406, %r2380;
	not.b32 	%r2414, %r2406;
	and.b32  	%r2415, %r2354, %r2414;
	or.b32  	%r2416, %r2413, %r2415;
	add.s32 	%r2417, %r2416, %r2328;
	add.s32 	%r2418, %r2417, %r2412;
	ld.const.u32 	%r2419, [K256+248];
	add.s32 	%r2420, %r2418, %r2419;
	add.s32 	%r2421, %r2420, %r812;
	shf.l.wrap.b32 	%r2422, %r2407, %r2407, 30;
	shf.l.wrap.b32 	%r2423, %r2407, %r2407, 19;
	xor.b32  	%r2424, %r2422, %r2423;
	shf.l.wrap.b32 	%r2425, %r2407, %r2407, 10;
	xor.b32  	%r2426, %r2424, %r2425;
	xor.b32  	%r2427, %r2381, %r2355;
	and.b32  	%r2428, %r2407, %r2427;
	and.b32  	%r2429, %r2381, %r2355;
	xor.b32  	%r2430, %r2428, %r2429;
	add.s32 	%r2431, %r2426, %r2430;
	add.s32 	%r2432, %r2421, %r2329;
	add.s32 	%r2433, %r2431, %r2421;
	shf.l.wrap.b32 	%r2434, %r2432, %r2432, 26;
	shf.l.wrap.b32 	%r2435, %r2432, %r2432, 21;
	xor.b32  	%r2436, %r2434, %r2435;
	shf.l.wrap.b32 	%r2437, %r2432, %r2432, 7;
	xor.b32  	%r2438, %r2436, %r2437;
	and.b32  	%r2439, %r2432, %r2406;
	not.b32 	%r2440, %r2432;
	and.b32  	%r2441, %r2380, %r2440;
	or.b32  	%r2442, %r2439, %r2441;
	add.s32 	%r2443, %r2442, %r2354;
	add.s32 	%r2444, %r2443, %r2438;
	ld.const.u32 	%r2445, [K256+252];
	add.s32 	%r2446, %r2444, %r2445;
	add.s32 	%r2447, %r2446, %r825;
	shf.l.wrap.b32 	%r2448, %r2433, %r2433, 30;
	shf.l.wrap.b32 	%r2449, %r2433, %r2433, 19;
	xor.b32  	%r2450, %r2448, %r2449;
	shf.l.wrap.b32 	%r2451, %r2433, %r2433, 10;
	xor.b32  	%r2452, %r2450, %r2451;
	xor.b32  	%r2453, %r2407, %r2381;
	and.b32  	%r2454, %r2433, %r2453;
	and.b32  	%r2455, %r2407, %r2381;
	xor.b32  	%r2456, %r2454, %r2455;
	add.s32 	%r2457, %r2452, %r2456;
	add.s32 	%r2458, %r2457, %r2447;
	add.s32 	%r2459, %r2458, 1779033703;
	shr.u32 	%r2460, %r2459, 28;
	ld.local.u16 	%rs1, [%rd4+22];
	and.b16  	%rs224, %rs1, 15;
	cvt.u32.u16 	%r2461, %rs224;
	setp.eq.s32 	%p29, %r2460, %r2461;
	@%p29 bra 	$L__BB4_35;
	bra.uni 	$L__BB4_34;

$L__BB4_35:
	ld.local.u16 	%rs225, [%rd4];
	cvt.u64.u16 	%rd28, %rs225;
	cvt.u32.u16 	%r2463, %rs225;
	mul.wide.u32 	%rd761, %r2463, 11;
	mov.u64 	%rd762, wordlist;
	add.s64 	%rd763, %rd762, %rd761;
	ld.const.u8 	%rs1119, [%rd763];
	setp.eq.s16 	%p30, %rs1119, 0;
	mov.u32 	%r11188, 0;
	@%p30 bra 	$L__BB4_38;

	mul.lo.s64 	%rd767, %rd28, 11;
	add.s64 	%rd769, %rd762, %rd767;

$L__BB4_37:
	cvt.s64.s32 	%rd764, %r11188;
	add.s64 	%rd765, %rd15515, %rd764;
	st.local.u8 	[%rd765], %rs1119;
	add.s32 	%r11188, %r11188, 1;
	cvt.s64.s32 	%rd766, %r11188;
	add.s64 	%rd770, %rd769, %rd766;
	ld.const.u8 	%rs1119, [%rd770];
	setp.ne.s16 	%p31, %rs1119, 0;
	@%p31 bra 	$L__BB4_37;

$L__BB4_38:
	add.s32 	%r11191, %r11188, 1;
	cvt.s64.s32 	%rd771, %r11188;
	add.s64 	%rd772, %rd15515, %rd771;
	mov.u16 	%rs226, 32;
	st.local.u8 	[%rd772], %rs226;
	ld.local.u16 	%rs227, [%rd4+2];
	cvt.u64.u16 	%rd29, %rs227;
	cvt.u32.u16 	%r2465, %rs227;
	mul.wide.u32 	%rd773, %r2465, 11;
	add.s64 	%rd775, %rd762, %rd773;
	ld.const.u8 	%rs1120, [%rd775];
	setp.eq.s16 	%p32, %rs1120, 0;
	@%p32 bra 	$L__BB4_41;

	mov.u32 	%r11189, 0;
	mul.lo.s64 	%rd779, %rd29, 11;
	add.s64 	%rd781, %rd762, %rd779;
	mov.u32 	%r11190, %r11191;

$L__BB4_40:
	add.s32 	%r11191, %r11190, 1;
	cvt.s64.s32 	%rd776, %r11190;
	add.s64 	%rd777, %rd15515, %rd776;
	st.local.u8 	[%rd777], %rs1120;
	add.s32 	%r11189, %r11189, 1;
	cvt.s64.s32 	%rd778, %r11189;
	add.s64 	%rd782, %rd781, %rd778;
	ld.const.u8 	%rs1120, [%rd782];
	setp.ne.s16 	%p33, %rs1120, 0;
	mov.u32 	%r11190, %r11191;
	@%p33 bra 	$L__BB4_40;

$L__BB4_41:
	add.s32 	%r11194, %r11191, 1;
	cvt.s64.s32 	%rd783, %r11191;
	add.s64 	%rd784, %rd15515, %rd783;
	st.local.u8 	[%rd784], %rs226;
	ld.local.u16 	%rs229, [%rd4+4];
	cvt.u64.u16 	%rd30, %rs229;
	cvt.u32.u16 	%r2467, %rs229;
	mul.wide.u32 	%rd785, %r2467, 11;
	add.s64 	%rd787, %rd762, %rd785;
	ld.const.u8 	%rs1121, [%rd787];
	setp.eq.s16 	%p34, %rs1121, 0;
	@%p34 bra 	$L__BB4_44;

	mov.u32 	%r11192, 0;
	mul.lo.s64 	%rd791, %rd30, 11;
	add.s64 	%rd793, %rd762, %rd791;
	mov.u32 	%r11193, %r11194;

$L__BB4_43:
	add.s32 	%r11194, %r11193, 1;
	cvt.s64.s32 	%rd788, %r11193;
	add.s64 	%rd789, %rd15515, %rd788;
	st.local.u8 	[%rd789], %rs1121;
	add.s32 	%r11192, %r11192, 1;
	cvt.s64.s32 	%rd790, %r11192;
	add.s64 	%rd794, %rd793, %rd790;
	ld.const.u8 	%rs1121, [%rd794];
	setp.ne.s16 	%p35, %rs1121, 0;
	mov.u32 	%r11193, %r11194;
	@%p35 bra 	$L__BB4_43;

$L__BB4_44:
	add.s32 	%r11197, %r11194, 1;
	cvt.s64.s32 	%rd795, %r11194;
	add.s64 	%rd796, %rd15515, %rd795;
	mov.u16 	%rs230, 32;
	st.local.u8 	[%rd796], %rs230;
	ld.local.u16 	%rs231, [%rd4+6];
	cvt.u64.u16 	%rd31, %rs231;
	cvt.u32.u16 	%r2469, %rs231;
	mul.wide.u32 	%rd797, %r2469, 11;
	add.s64 	%rd799, %rd762, %rd797;
	ld.const.u8 	%rs1122, [%rd799];
	setp.eq.s16 	%p36, %rs1122, 0;
	@%p36 bra 	$L__BB4_47;

	mov.u32 	%r11195, 0;
	mul.lo.s64 	%rd803, %rd31, 11;
	add.s64 	%rd805, %rd762, %rd803;
	mov.u32 	%r11196, %r11197;

$L__BB4_46:
	add.s32 	%r11197, %r11196, 1;
	cvt.s64.s32 	%rd800, %r11196;
	add.s64 	%rd801, %rd15515, %rd800;
	st.local.u8 	[%rd801], %rs1122;
	add.s32 	%r11195, %r11195, 1;
	cvt.s64.s32 	%rd802, %r11195;
	add.s64 	%rd806, %rd805, %rd802;
	ld.const.u8 	%rs1122, [%rd806];
	setp.ne.s16 	%p37, %rs1122, 0;
	mov.u32 	%r11196, %r11197;
	@%p37 bra 	$L__BB4_46;

$L__BB4_47:
	add.s32 	%r11200, %r11197, 1;
	cvt.s64.s32 	%rd807, %r11197;
	add.s64 	%rd808, %rd15515, %rd807;
	st.local.u8 	[%rd808], %rs230;
	ld.local.u16 	%rs233, [%rd4+8];
	cvt.u64.u16 	%rd32, %rs233;
	cvt.u32.u16 	%r2471, %rs233;
	mul.wide.u32 	%rd809, %r2471, 11;
	add.s64 	%rd811, %rd762, %rd809;
	ld.const.u8 	%rs1123, [%rd811];
	setp.eq.s16 	%p38, %rs1123, 0;
	@%p38 bra 	$L__BB4_50;

	mov.u32 	%r11198, 0;
	mul.lo.s64 	%rd815, %rd32, 11;
	add.s64 	%rd817, %rd762, %rd815;
	mov.u32 	%r11199, %r11200;

$L__BB4_49:
	add.s32 	%r11200, %r11199, 1;
	cvt.s64.s32 	%rd812, %r11199;
	add.s64 	%rd813, %rd15515, %rd812;
	st.local.u8 	[%rd813], %rs1123;
	add.s32 	%r11198, %r11198, 1;
	cvt.s64.s32 	%rd814, %r11198;
	add.s64 	%rd818, %rd817, %rd814;
	ld.const.u8 	%rs1123, [%rd818];
	setp.ne.s16 	%p39, %rs1123, 0;
	mov.u32 	%r11199, %r11200;
	@%p39 bra 	$L__BB4_49;

$L__BB4_50:
	add.s32 	%r11203, %r11200, 1;
	cvt.s64.s32 	%rd819, %r11200;
	add.s64 	%rd820, %rd15515, %rd819;
	mov.u16 	%rs234, 32;
	st.local.u8 	[%rd820], %rs234;
	ld.local.u16 	%rs235, [%rd4+10];
	cvt.u64.u16 	%rd33, %rs235;
	cvt.u32.u16 	%r2473, %rs235;
	mul.wide.u32 	%rd821, %r2473, 11;
	add.s64 	%rd823, %rd762, %rd821;
	ld.const.u8 	%rs1124, [%rd823];
	setp.eq.s16 	%p40, %rs1124, 0;
	@%p40 bra 	$L__BB4_53;

	mov.u32 	%r11201, 0;
	mul.lo.s64 	%rd827, %rd33, 11;
	add.s64 	%rd829, %rd762, %rd827;
	mov.u32 	%r11202, %r11203;

$L__BB4_52:
	add.s32 	%r11203, %r11202, 1;
	cvt.s64.s32 	%rd824, %r11202;
	add.s64 	%rd825, %rd15515, %rd824;
	st.local.u8 	[%rd825], %rs1124;
	add.s32 	%r11201, %r11201, 1;
	cvt.s64.s32 	%rd826, %r11201;
	add.s64 	%rd830, %rd829, %rd826;
	ld.const.u8 	%rs1124, [%rd830];
	setp.ne.s16 	%p41, %rs1124, 0;
	mov.u32 	%r11202, %r11203;
	@%p41 bra 	$L__BB4_52;

$L__BB4_53:
	add.s32 	%r11206, %r11203, 1;
	cvt.s64.s32 	%rd831, %r11203;
	add.s64 	%rd832, %rd15515, %rd831;
	st.local.u8 	[%rd832], %rs234;
	ld.local.u16 	%rs237, [%rd4+12];
	cvt.u64.u16 	%rd34, %rs237;
	cvt.u32.u16 	%r2475, %rs237;
	mul.wide.u32 	%rd833, %r2475, 11;
	add.s64 	%rd835, %rd762, %rd833;
	ld.const.u8 	%rs1125, [%rd835];
	setp.eq.s16 	%p42, %rs1125, 0;
	@%p42 bra 	$L__BB4_56;

	mov.u32 	%r11204, 0;
	mul.lo.s64 	%rd839, %rd34, 11;
	add.s64 	%rd841, %rd762, %rd839;
	mov.u32 	%r11205, %r11206;

$L__BB4_55:
	add.s32 	%r11206, %r11205, 1;
	cvt.s64.s32 	%rd836, %r11205;
	add.s64 	%rd837, %rd15515, %rd836;
	st.local.u8 	[%rd837], %rs1125;
	add.s32 	%r11204, %r11204, 1;
	cvt.s64.s32 	%rd838, %r11204;
	add.s64 	%rd842, %rd841, %rd838;
	ld.const.u8 	%rs1125, [%rd842];
	setp.ne.s16 	%p43, %rs1125, 0;
	mov.u32 	%r11205, %r11206;
	@%p43 bra 	$L__BB4_55;

$L__BB4_56:
	add.s32 	%r11209, %r11206, 1;
	cvt.s64.s32 	%rd843, %r11206;
	add.s64 	%rd844, %rd15515, %rd843;
	mov.u16 	%rs238, 32;
	st.local.u8 	[%rd844], %rs238;
	ld.local.u16 	%rs239, [%rd4+14];
	cvt.u64.u16 	%rd35, %rs239;
	cvt.u32.u16 	%r2477, %rs239;
	mul.wide.u32 	%rd845, %r2477, 11;
	add.s64 	%rd847, %rd762, %rd845;
	ld.const.u8 	%rs1126, [%rd847];
	setp.eq.s16 	%p44, %rs1126, 0;
	@%p44 bra 	$L__BB4_59;

	mov.u32 	%r11207, 0;
	mul.lo.s64 	%rd851, %rd35, 11;
	add.s64 	%rd853, %rd762, %rd851;
	mov.u32 	%r11208, %r11209;

$L__BB4_58:
	add.s32 	%r11209, %r11208, 1;
	cvt.s64.s32 	%rd848, %r11208;
	add.s64 	%rd849, %rd15515, %rd848;
	st.local.u8 	[%rd849], %rs1126;
	add.s32 	%r11207, %r11207, 1;
	cvt.s64.s32 	%rd850, %r11207;
	add.s64 	%rd854, %rd853, %rd850;
	ld.const.u8 	%rs1126, [%rd854];
	setp.ne.s16 	%p45, %rs1126, 0;
	mov.u32 	%r11208, %r11209;
	@%p45 bra 	$L__BB4_58;

$L__BB4_59:
	add.s32 	%r11212, %r11209, 1;
	cvt.s64.s32 	%rd855, %r11209;
	add.s64 	%rd856, %rd15515, %rd855;
	st.local.u8 	[%rd856], %rs238;
	ld.local.u16 	%rs241, [%rd4+16];
	cvt.u64.u16 	%rd36, %rs241;
	cvt.u32.u16 	%r2479, %rs241;
	mul.wide.u32 	%rd857, %r2479, 11;
	add.s64 	%rd859, %rd762, %rd857;
	ld.const.u8 	%rs1127, [%rd859];
	setp.eq.s16 	%p46, %rs1127, 0;
	@%p46 bra 	$L__BB4_62;

	mov.u32 	%r11210, 0;
	mul.lo.s64 	%rd863, %rd36, 11;
	add.s64 	%rd865, %rd762, %rd863;
	mov.u32 	%r11211, %r11212;

$L__BB4_61:
	add.s32 	%r11212, %r11211, 1;
	cvt.s64.s32 	%rd860, %r11211;
	add.s64 	%rd861, %rd15515, %rd860;
	st.local.u8 	[%rd861], %rs1127;
	add.s32 	%r11210, %r11210, 1;
	cvt.s64.s32 	%rd862, %r11210;
	add.s64 	%rd866, %rd865, %rd862;
	ld.const.u8 	%rs1127, [%rd866];
	setp.ne.s16 	%p47, %rs1127, 0;
	mov.u32 	%r11211, %r11212;
	@%p47 bra 	$L__BB4_61;

$L__BB4_62:
	add.s32 	%r11215, %r11212, 1;
	cvt.s64.s32 	%rd867, %r11212;
	add.s64 	%rd868, %rd15515, %rd867;
	mov.u16 	%rs242, 32;
	st.local.u8 	[%rd868], %rs242;
	ld.local.u16 	%rs243, [%rd4+18];
	cvt.u64.u16 	%rd37, %rs243;
	cvt.u32.u16 	%r2481, %rs243;
	mul.wide.u32 	%rd869, %r2481, 11;
	add.s64 	%rd871, %rd762, %rd869;
	ld.const.u8 	%rs1128, [%rd871];
	setp.eq.s16 	%p48, %rs1128, 0;
	@%p48 bra 	$L__BB4_65;

	mov.u32 	%r11213, 0;
	mul.lo.s64 	%rd875, %rd37, 11;
	add.s64 	%rd877, %rd762, %rd875;
	mov.u32 	%r11214, %r11215;

$L__BB4_64:
	add.s32 	%r11215, %r11214, 1;
	cvt.s64.s32 	%rd872, %r11214;
	add.s64 	%rd873, %rd15515, %rd872;
	st.local.u8 	[%rd873], %rs1128;
	add.s32 	%r11213, %r11213, 1;
	cvt.s64.s32 	%rd874, %r11213;
	add.s64 	%rd878, %rd877, %rd874;
	ld.const.u8 	%rs1128, [%rd878];
	setp.ne.s16 	%p49, %rs1128, 0;
	mov.u32 	%r11214, %r11215;
	@%p49 bra 	$L__BB4_64;

$L__BB4_65:
	add.s32 	%r11218, %r11215, 1;
	cvt.s64.s32 	%rd879, %r11215;
	add.s64 	%rd880, %rd15515, %rd879;
	st.local.u8 	[%rd880], %rs242;
	ld.local.u16 	%rs245, [%rd4+20];
	cvt.u64.u16 	%rd38, %rs245;
	cvt.u32.u16 	%r2483, %rs245;
	mul.wide.u32 	%rd881, %r2483, 11;
	add.s64 	%rd883, %rd762, %rd881;
	ld.const.u8 	%rs1129, [%rd883];
	setp.eq.s16 	%p50, %rs1129, 0;
	@%p50 bra 	$L__BB4_68;

	mov.u32 	%r11216, 0;
	mul.lo.s64 	%rd887, %rd38, 11;
	add.s64 	%rd889, %rd762, %rd887;
	mov.u32 	%r11217, %r11218;

$L__BB4_67:
	add.s32 	%r11218, %r11217, 1;
	cvt.s64.s32 	%rd884, %r11217;
	add.s64 	%rd885, %rd15515, %rd884;
	st.local.u8 	[%rd885], %rs1129;
	add.s32 	%r11216, %r11216, 1;
	cvt.s64.s32 	%rd886, %r11216;
	add.s64 	%rd890, %rd889, %rd886;
	ld.const.u8 	%rs1129, [%rd890];
	setp.ne.s16 	%p51, %rs1129, 0;
	mov.u32 	%r11217, %r11218;
	@%p51 bra 	$L__BB4_67;

$L__BB4_68:
	add.s32 	%r11221, %r11218, 1;
	cvt.s64.s32 	%rd891, %r11218;
	add.s64 	%rd892, %rd15515, %rd891;
	mov.u16 	%rs246, 32;
	st.local.u8 	[%rd892], %rs246;
	cvt.u64.u16 	%rd39, %rs1;
	cvt.u32.u16 	%r2485, %rs1;
	mul.wide.u32 	%rd893, %r2485, 11;
	add.s64 	%rd895, %rd762, %rd893;
	ld.const.u8 	%rs1130, [%rd895];
	setp.eq.s16 	%p52, %rs1130, 0;
	@%p52 bra 	$L__BB4_71;

	mov.u32 	%r11219, 0;
	mul.lo.s64 	%rd899, %rd39, 11;
	add.s64 	%rd901, %rd762, %rd899;
	mov.u32 	%r11220, %r11221;

$L__BB4_70:
	add.s32 	%r11221, %r11220, 1;
	cvt.s64.s32 	%rd896, %r11220;
	add.s64 	%rd897, %rd15515, %rd896;
	st.local.u8 	[%rd897], %rs1130;
	add.s32 	%r11219, %r11219, 1;
	cvt.s64.s32 	%rd898, %r11219;
	add.s64 	%rd902, %rd901, %rd898;
	ld.const.u8 	%rs1130, [%rd902];
	setp.ne.s16 	%p53, %rs1130, 0;
	mov.u32 	%r11220, %r11221;
	@%p53 bra 	$L__BB4_70;

$L__BB4_71:
	cvt.s64.s32 	%rd904, %r11221;
	add.s64 	%rd905, %rd15515, %rd904;
	mov.u64 	%rd15513, 0;
	mov.u16 	%rs247, 0;
	st.local.u8 	[%rd905], %rs247;
	mov.u64 	%rd906, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2487,%dummy}, %rd906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2488}, %rd906;
	}
	shf.r.wrap.b32 	%r2489, %r2488, %r2487, 18;
	shf.r.wrap.b32 	%r2490, %r2487, %r2488, 18;
	mov.b64 	%rd907, {%r2490, %r2489};
	shf.r.wrap.b32 	%r2491, %r2488, %r2487, 14;
	shf.r.wrap.b32 	%r2492, %r2487, %r2488, 14;
	mov.b64 	%rd908, {%r2492, %r2491};
	xor.b64  	%rd909, %rd908, %rd907;
	shf.l.wrap.b32 	%r2493, %r2487, %r2488, 23;
	shf.l.wrap.b32 	%r2494, %r2488, %r2487, 23;
	mov.b64 	%rd910, {%r2494, %r2493};
	xor.b64  	%rd911, %rd909, %rd910;
	ld.const.u64 	%rd912, [K];
	add.s64 	%rd913, %rd911, %rd912;
	add.s64 	%rd40, %rd913, 8891960152096595636;
	mov.u64 	%rd914, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2495}, %rd914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd914;
	}
	shf.l.wrap.b32 	%r2497, %r2496, %r2495, 30;
	shf.l.wrap.b32 	%r2498, %r2495, %r2496, 30;
	mov.b64 	%rd915, {%r2498, %r2497};
	shf.r.wrap.b32 	%r2499, %r2495, %r2496, 28;
	shf.r.wrap.b32 	%r2500, %r2496, %r2495, 28;
	mov.b64 	%rd916, {%r2500, %r2499};
	xor.b64  	%rd917, %rd916, %rd915;
	shf.l.wrap.b32 	%r2501, %r2496, %r2495, 25;
	shf.l.wrap.b32 	%r2502, %r2495, %r2496, 25;
	mov.b64 	%rd918, {%r2502, %r2501};
	xor.b64  	%rd919, %rd917, %rd918;
	ld.const.u64 	%rd41, [K+8];
	ld.const.u64 	%rd42, [K+16];
	ld.const.u64 	%rd43, [K+24];
	ld.const.u64 	%rd44, [K+32];
	ld.const.u64 	%rd45, [K+40];
	ld.const.u64 	%rd46, [K+48];
	ld.const.u64 	%rd47, [K+56];
	ld.const.u64 	%rd48, [K+64];
	ld.const.u64 	%rd49, [K+72];
	ld.const.u64 	%rd50, [K+80];
	ld.const.u64 	%rd51, [K+88];
	ld.const.u64 	%rd52, [K+96];
	ld.const.u64 	%rd53, [K+104];
	ld.const.u64 	%rd54, [K+112];
	ld.const.u64 	%rd55, [K+120];
	ld.const.u64 	%rd56, [K+128];
	ld.const.u64 	%rd57, [K+136];
	ld.const.u64 	%rd58, [K+144];
	ld.const.u64 	%rd59, [K+152];
	ld.const.u64 	%rd60, [K+160];
	ld.const.u64 	%rd61, [K+168];
	ld.const.u64 	%rd62, [K+176];
	ld.const.u64 	%rd63, [K+184];
	ld.const.u64 	%rd64, [K+192];
	ld.const.u64 	%rd65, [K+200];
	ld.const.u64 	%rd66, [K+208];
	ld.const.u64 	%rd67, [K+216];
	ld.const.u64 	%rd68, [K+224];
	ld.const.u64 	%rd69, [K+232];
	ld.const.u64 	%rd70, [K+240];
	ld.const.u64 	%rd71, [K+248];
	ld.const.u64 	%rd72, [K+256];
	ld.const.u64 	%rd73, [K+264];
	ld.const.u64 	%rd74, [K+272];
	ld.const.u64 	%rd75, [K+280];
	ld.const.u64 	%rd76, [K+288];
	ld.const.u64 	%rd77, [K+296];
	ld.const.u64 	%rd78, [K+304];
	ld.const.u64 	%rd79, [K+312];
	ld.const.u64 	%rd80, [K+320];
	ld.const.u64 	%rd81, [K+328];
	ld.const.u64 	%rd82, [K+336];
	ld.const.u64 	%rd83, [K+344];
	ld.const.u64 	%rd84, [K+352];
	ld.const.u64 	%rd85, [K+360];
	ld.const.u64 	%rd86, [K+368];
	ld.const.u64 	%rd87, [K+376];
	ld.const.u64 	%rd88, [K+384];
	ld.const.u64 	%rd89, [K+392];
	ld.const.u64 	%rd90, [K+400];
	ld.const.u64 	%rd91, [K+408];
	ld.const.u64 	%rd92, [K+416];
	ld.const.u64 	%rd93, [K+424];
	ld.const.u64 	%rd94, [K+432];
	ld.const.u64 	%rd95, [K+440];
	ld.const.u64 	%rd96, [K+448];
	ld.const.u64 	%rd97, [K+456];
	ld.const.u64 	%rd98, [K+464];
	ld.const.u64 	%rd99, [K+472];
	ld.const.u64 	%rd100, [K+480];
	ld.const.u64 	%rd101, [K+488];
	ld.const.u64 	%rd102, [K+496];
	ld.const.u64 	%rd103, [K+504];
	ld.const.u64 	%rd104, [K+512];
	ld.const.u64 	%rd105, [K+520];
	ld.const.u64 	%rd106, [K+528];
	ld.const.u64 	%rd107, [K+536];
	ld.const.u64 	%rd108, [K+544];
	ld.const.u64 	%rd109, [K+552];
	ld.const.u64 	%rd110, [K+560];
	ld.const.u64 	%rd15518, [K+568];
	ld.const.u64 	%rd15517, [K+576];
	ld.const.u64 	%rd15516, [K+584];
	ld.const.u64 	%rd114, [K+592];
	ld.const.u64 	%rd115, [K+600];
	ld.const.u64 	%rd116, [K+608];
	ld.const.u64 	%rd117, [K+616];
	ld.const.u64 	%rd118, [K+624];
	ld.const.u64 	%rd119, [K+632];
	add.s64 	%rd120, %rd919, 4210837510808201515;

$L__BB4_72:
	add.s64 	%rd920, %rd2, %rd15513;
	st.local.u8 	[%rd920], %rs247;
	add.s64 	%rd15513, %rd15513, 1;
	setp.lt.u64 	%p54, %rd15513, 128;
	@%p54 bra 	$L__BB4_72;

	mov.u64 	%rd15514, 0;

$L__BB4_74:
	add.s64 	%rd922, %rd3, %rd15514;
	mov.u16 	%rs249, 0;
	st.local.u8 	[%rd922], %rs249;
	add.s64 	%rd15514, %rd15514, 1;
	setp.lt.u64 	%p55, %rd15514, 128;
	@%p55 bra 	$L__BB4_74;

	setp.lt.s32 	%p56, %r11221, 129;
	mov.u32 	%r11222, %r11221;
	@%p56 bra 	$L__BB4_77;

	ld.local.v4.u32 	{%r2504, %r2505, %r2506, %r2507}, [%rd15515];
	mov.b32 	{%rs250, %rs251}, %r2504;
	shr.u16 	%rs252, %rs250, 8;
	shr.u16 	%rs253, %rs251, 8;
	mov.b32 	{%rs254, %rs255}, %r2505;
	shr.u16 	%rs256, %rs254, 8;
	shr.u16 	%rs257, %rs255, 8;
	mov.b32 	{%rs258, %rs259}, %r2506;
	shr.u16 	%rs260, %rs258, 8;
	shr.u16 	%rs261, %rs259, 8;
	mov.b32 	{%rs262, %rs263}, %r2507;
	shr.u16 	%rs264, %rs262, 8;
	shr.u16 	%rs265, %rs263, 8;
	cvt.u64.u16 	%rd923, %rs250;
	shl.b64 	%rd924, %rd923, 56;
	cvt.u64.u16 	%rd925, %rs252;
	shl.b64 	%rd926, %rd925, 48;
	or.b64  	%rd927, %rd926, %rd924;
	cvt.u64.u16 	%rd928, %rs251;
	shl.b64 	%rd929, %rd928, 40;
	and.b64  	%rd930, %rd929, 280375465082880;
	or.b64  	%rd931, %rd927, %rd930;
	cvt.u64.u16 	%rd932, %rs253;
	shl.b64 	%rd933, %rd932, 32;
	or.b64  	%rd934, %rd931, %rd933;
	cvt.u32.u16 	%r2512, %rs254;
	and.b32  	%r2513, %r2512, 255;
	mul.wide.u32 	%rd935, %r2513, 16777216;
	or.b64  	%rd936, %rd934, %rd935;
	cvt.u32.u16 	%r2514, %rs256;
	mul.wide.u32 	%rd937, %r2514, 65536;
	or.b64  	%rd938, %rd936, %rd937;
	cvt.u32.u16 	%r2515, %rs255;
	and.b32  	%r2516, %r2515, 255;
	mul.wide.u32 	%rd939, %r2516, 256;
	or.b64  	%rd940, %rd938, %rd939;
	cvt.u64.u16 	%rd941, %rs257;
	or.b64  	%rd942, %rd940, %rd941;
	cvt.u64.u16 	%rd943, %rs258;
	shl.b64 	%rd944, %rd943, 56;
	cvt.u64.u16 	%rd945, %rs260;
	shl.b64 	%rd946, %rd945, 48;
	or.b64  	%rd947, %rd946, %rd944;
	cvt.u64.u16 	%rd948, %rs259;
	shl.b64 	%rd949, %rd948, 40;
	and.b64  	%rd950, %rd949, 280375465082880;
	or.b64  	%rd951, %rd947, %rd950;
	cvt.u64.u16 	%rd952, %rs261;
	shl.b64 	%rd953, %rd952, 32;
	or.b64  	%rd954, %rd951, %rd953;
	cvt.u32.u16 	%r2517, %rs262;
	and.b32  	%r2518, %r2517, 255;
	mul.wide.u32 	%rd955, %r2518, 16777216;
	or.b64  	%rd956, %rd954, %rd955;
	cvt.u32.u16 	%r2519, %rs264;
	mul.wide.u32 	%rd957, %r2519, 65536;
	or.b64  	%rd958, %rd956, %rd957;
	cvt.u32.u16 	%r2520, %rs263;
	and.b32  	%r2521, %r2520, 255;
	mul.wide.u32 	%rd959, %r2521, 256;
	or.b64  	%rd960, %rd958, %rd959;
	cvt.u64.u16 	%rd961, %rs265;
	or.b64  	%rd962, %rd960, %rd961;
	ld.local.v4.u32 	{%r2522, %r2523, %r2524, %r2525}, [%rd15515+16];
	mov.b32 	{%rs266, %rs267}, %r2522;
	shr.u16 	%rs268, %rs266, 8;
	shr.u16 	%rs269, %rs267, 8;
	mov.b32 	{%rs270, %rs271}, %r2523;
	shr.u16 	%rs272, %rs270, 8;
	shr.u16 	%rs273, %rs271, 8;
	mov.b32 	{%rs274, %rs275}, %r2524;
	shr.u16 	%rs276, %rs274, 8;
	shr.u16 	%rs277, %rs275, 8;
	mov.b32 	{%rs278, %rs279}, %r2525;
	shr.u16 	%rs280, %rs278, 8;
	shr.u16 	%rs281, %rs279, 8;
	cvt.u64.u16 	%rd963, %rs266;
	shl.b64 	%rd964, %rd963, 56;
	cvt.u64.u16 	%rd965, %rs268;
	shl.b64 	%rd966, %rd965, 48;
	or.b64  	%rd967, %rd966, %rd964;
	cvt.u64.u16 	%rd968, %rs267;
	shl.b64 	%rd969, %rd968, 40;
	and.b64  	%rd970, %rd969, 280375465082880;
	or.b64  	%rd971, %rd967, %rd970;
	cvt.u64.u16 	%rd972, %rs269;
	shl.b64 	%rd973, %rd972, 32;
	or.b64  	%rd974, %rd971, %rd973;
	cvt.u32.u16 	%r2530, %rs270;
	and.b32  	%r2531, %r2530, 255;
	mul.wide.u32 	%rd975, %r2531, 16777216;
	or.b64  	%rd976, %rd974, %rd975;
	cvt.u32.u16 	%r2532, %rs272;
	mul.wide.u32 	%rd977, %r2532, 65536;
	or.b64  	%rd978, %rd976, %rd977;
	cvt.u32.u16 	%r2533, %rs271;
	and.b32  	%r2534, %r2533, 255;
	mul.wide.u32 	%rd979, %r2534, 256;
	or.b64  	%rd980, %rd978, %rd979;
	cvt.u64.u16 	%rd981, %rs273;
	or.b64  	%rd982, %rd980, %rd981;
	cvt.u64.u16 	%rd983, %rs274;
	shl.b64 	%rd984, %rd983, 56;
	cvt.u64.u16 	%rd985, %rs276;
	shl.b64 	%rd986, %rd985, 48;
	or.b64  	%rd987, %rd986, %rd984;
	cvt.u64.u16 	%rd988, %rs275;
	shl.b64 	%rd989, %rd988, 40;
	and.b64  	%rd990, %rd989, 280375465082880;
	or.b64  	%rd991, %rd987, %rd990;
	cvt.u64.u16 	%rd992, %rs277;
	shl.b64 	%rd993, %rd992, 32;
	or.b64  	%rd994, %rd991, %rd993;
	cvt.u32.u16 	%r2535, %rs278;
	and.b32  	%r2536, %r2535, 255;
	mul.wide.u32 	%rd995, %r2536, 16777216;
	or.b64  	%rd996, %rd994, %rd995;
	cvt.u32.u16 	%r2537, %rs280;
	mul.wide.u32 	%rd997, %r2537, 65536;
	or.b64  	%rd998, %rd996, %rd997;
	cvt.u32.u16 	%r2538, %rs279;
	and.b32  	%r2539, %r2538, 255;
	mul.wide.u32 	%rd999, %r2539, 256;
	or.b64  	%rd1000, %rd998, %rd999;
	cvt.u64.u16 	%rd1001, %rs281;
	or.b64  	%rd1002, %rd1000, %rd1001;
	ld.local.v4.u32 	{%r2540, %r2541, %r2542, %r2543}, [%rd15515+32];
	mov.b32 	{%rs282, %rs283}, %r2540;
	shr.u16 	%rs284, %rs282, 8;
	shr.u16 	%rs285, %rs283, 8;
	mov.b32 	{%rs286, %rs287}, %r2541;
	shr.u16 	%rs288, %rs286, 8;
	shr.u16 	%rs289, %rs287, 8;
	mov.b32 	{%rs290, %rs291}, %r2542;
	shr.u16 	%rs292, %rs290, 8;
	shr.u16 	%rs293, %rs291, 8;
	mov.b32 	{%rs294, %rs295}, %r2543;
	shr.u16 	%rs296, %rs294, 8;
	shr.u16 	%rs297, %rs295, 8;
	cvt.u64.u16 	%rd1003, %rs282;
	shl.b64 	%rd1004, %rd1003, 56;
	cvt.u64.u16 	%rd1005, %rs284;
	shl.b64 	%rd1006, %rd1005, 48;
	or.b64  	%rd1007, %rd1006, %rd1004;
	cvt.u64.u16 	%rd1008, %rs283;
	shl.b64 	%rd1009, %rd1008, 40;
	and.b64  	%rd1010, %rd1009, 280375465082880;
	or.b64  	%rd1011, %rd1007, %rd1010;
	cvt.u64.u16 	%rd1012, %rs285;
	shl.b64 	%rd1013, %rd1012, 32;
	or.b64  	%rd1014, %rd1011, %rd1013;
	cvt.u32.u16 	%r2548, %rs286;
	and.b32  	%r2549, %r2548, 255;
	mul.wide.u32 	%rd1015, %r2549, 16777216;
	or.b64  	%rd1016, %rd1014, %rd1015;
	cvt.u32.u16 	%r2550, %rs288;
	mul.wide.u32 	%rd1017, %r2550, 65536;
	or.b64  	%rd1018, %rd1016, %rd1017;
	cvt.u32.u16 	%r2551, %rs287;
	and.b32  	%r2552, %r2551, 255;
	mul.wide.u32 	%rd1019, %r2552, 256;
	or.b64  	%rd1020, %rd1018, %rd1019;
	cvt.u64.u16 	%rd1021, %rs289;
	or.b64  	%rd1022, %rd1020, %rd1021;
	cvt.u64.u16 	%rd1023, %rs290;
	shl.b64 	%rd1024, %rd1023, 56;
	cvt.u64.u16 	%rd1025, %rs292;
	shl.b64 	%rd1026, %rd1025, 48;
	or.b64  	%rd1027, %rd1026, %rd1024;
	cvt.u64.u16 	%rd1028, %rs291;
	shl.b64 	%rd1029, %rd1028, 40;
	and.b64  	%rd1030, %rd1029, 280375465082880;
	or.b64  	%rd1031, %rd1027, %rd1030;
	cvt.u64.u16 	%rd1032, %rs293;
	shl.b64 	%rd1033, %rd1032, 32;
	or.b64  	%rd1034, %rd1031, %rd1033;
	cvt.u32.u16 	%r2553, %rs294;
	and.b32  	%r2554, %r2553, 255;
	mul.wide.u32 	%rd1035, %r2554, 16777216;
	or.b64  	%rd1036, %rd1034, %rd1035;
	cvt.u32.u16 	%r2555, %rs296;
	mul.wide.u32 	%rd1037, %r2555, 65536;
	or.b64  	%rd1038, %rd1036, %rd1037;
	cvt.u32.u16 	%r2556, %rs295;
	and.b32  	%r2557, %r2556, 255;
	mul.wide.u32 	%rd1039, %r2557, 256;
	or.b64  	%rd1040, %rd1038, %rd1039;
	cvt.u64.u16 	%rd1041, %rs297;
	or.b64  	%rd1042, %rd1040, %rd1041;
	ld.local.v4.u32 	{%r2558, %r2559, %r2560, %r2561}, [%rd15515+48];
	mov.b32 	{%rs298, %rs299}, %r2558;
	shr.u16 	%rs300, %rs298, 8;
	shr.u16 	%rs301, %rs299, 8;
	mov.b32 	{%rs302, %rs303}, %r2559;
	shr.u16 	%rs304, %rs302, 8;
	shr.u16 	%rs305, %rs303, 8;
	mov.b32 	{%rs306, %rs307}, %r2560;
	shr.u16 	%rs308, %rs306, 8;
	shr.u16 	%rs309, %rs307, 8;
	mov.b32 	{%rs310, %rs311}, %r2561;
	shr.u16 	%rs312, %rs310, 8;
	shr.u16 	%rs313, %rs311, 8;
	cvt.u64.u16 	%rd1043, %rs298;
	shl.b64 	%rd1044, %rd1043, 56;
	cvt.u64.u16 	%rd1045, %rs300;
	shl.b64 	%rd1046, %rd1045, 48;
	or.b64  	%rd1047, %rd1046, %rd1044;
	cvt.u64.u16 	%rd1048, %rs299;
	shl.b64 	%rd1049, %rd1048, 40;
	and.b64  	%rd1050, %rd1049, 280375465082880;
	or.b64  	%rd1051, %rd1047, %rd1050;
	cvt.u64.u16 	%rd1052, %rs301;
	shl.b64 	%rd1053, %rd1052, 32;
	or.b64  	%rd1054, %rd1051, %rd1053;
	cvt.u32.u16 	%r2566, %rs302;
	and.b32  	%r2567, %r2566, 255;
	mul.wide.u32 	%rd1055, %r2567, 16777216;
	or.b64  	%rd1056, %rd1054, %rd1055;
	cvt.u32.u16 	%r2568, %rs304;
	mul.wide.u32 	%rd1057, %r2568, 65536;
	or.b64  	%rd1058, %rd1056, %rd1057;
	cvt.u32.u16 	%r2569, %rs303;
	and.b32  	%r2570, %r2569, 255;
	mul.wide.u32 	%rd1059, %r2570, 256;
	or.b64  	%rd1060, %rd1058, %rd1059;
	cvt.u64.u16 	%rd1061, %rs305;
	or.b64  	%rd1062, %rd1060, %rd1061;
	cvt.u64.u16 	%rd1063, %rs306;
	shl.b64 	%rd1064, %rd1063, 56;
	cvt.u64.u16 	%rd1065, %rs308;
	shl.b64 	%rd1066, %rd1065, 48;
	or.b64  	%rd1067, %rd1066, %rd1064;
	cvt.u64.u16 	%rd1068, %rs307;
	shl.b64 	%rd1069, %rd1068, 40;
	and.b64  	%rd1070, %rd1069, 280375465082880;
	or.b64  	%rd1071, %rd1067, %rd1070;
	cvt.u64.u16 	%rd1072, %rs309;
	shl.b64 	%rd1073, %rd1072, 32;
	or.b64  	%rd1074, %rd1071, %rd1073;
	cvt.u32.u16 	%r2571, %rs310;
	and.b32  	%r2572, %r2571, 255;
	mul.wide.u32 	%rd1075, %r2572, 16777216;
	or.b64  	%rd1076, %rd1074, %rd1075;
	cvt.u32.u16 	%r2573, %rs312;
	mul.wide.u32 	%rd1077, %r2573, 65536;
	or.b64  	%rd1078, %rd1076, %rd1077;
	cvt.u32.u16 	%r2574, %rs311;
	and.b32  	%r2575, %r2574, 255;
	mul.wide.u32 	%rd1079, %r2575, 256;
	or.b64  	%rd1080, %rd1078, %rd1079;
	cvt.u64.u16 	%rd1081, %rs313;
	or.b64  	%rd1082, %rd1080, %rd1081;
	ld.local.v4.u32 	{%r2576, %r2577, %r2578, %r2579}, [%rd15515+64];
	mov.b32 	{%rs314, %rs315}, %r2576;
	shr.u16 	%rs316, %rs314, 8;
	shr.u16 	%rs317, %rs315, 8;
	mov.b32 	{%rs318, %rs319}, %r2577;
	shr.u16 	%rs320, %rs318, 8;
	shr.u16 	%rs321, %rs319, 8;
	mov.b32 	{%rs322, %rs323}, %r2578;
	shr.u16 	%rs324, %rs322, 8;
	shr.u16 	%rs325, %rs323, 8;
	mov.b32 	{%rs326, %rs327}, %r2579;
	shr.u16 	%rs328, %rs326, 8;
	shr.u16 	%rs329, %rs327, 8;
	cvt.u64.u16 	%rd1083, %rs314;
	shl.b64 	%rd1084, %rd1083, 56;
	cvt.u64.u16 	%rd1085, %rs316;
	shl.b64 	%rd1086, %rd1085, 48;
	or.b64  	%rd1087, %rd1086, %rd1084;
	cvt.u64.u16 	%rd1088, %rs315;
	shl.b64 	%rd1089, %rd1088, 40;
	and.b64  	%rd1090, %rd1089, 280375465082880;
	or.b64  	%rd1091, %rd1087, %rd1090;
	cvt.u64.u16 	%rd1092, %rs317;
	shl.b64 	%rd1093, %rd1092, 32;
	or.b64  	%rd1094, %rd1091, %rd1093;
	cvt.u32.u16 	%r2584, %rs318;
	and.b32  	%r2585, %r2584, 255;
	mul.wide.u32 	%rd1095, %r2585, 16777216;
	or.b64  	%rd1096, %rd1094, %rd1095;
	cvt.u32.u16 	%r2586, %rs320;
	mul.wide.u32 	%rd1097, %r2586, 65536;
	or.b64  	%rd1098, %rd1096, %rd1097;
	cvt.u32.u16 	%r2587, %rs319;
	and.b32  	%r2588, %r2587, 255;
	mul.wide.u32 	%rd1099, %r2588, 256;
	or.b64  	%rd1100, %rd1098, %rd1099;
	cvt.u64.u16 	%rd1101, %rs321;
	or.b64  	%rd1102, %rd1100, %rd1101;
	cvt.u64.u16 	%rd1103, %rs322;
	shl.b64 	%rd1104, %rd1103, 56;
	cvt.u64.u16 	%rd1105, %rs324;
	shl.b64 	%rd1106, %rd1105, 48;
	or.b64  	%rd1107, %rd1106, %rd1104;
	cvt.u64.u16 	%rd1108, %rs323;
	shl.b64 	%rd1109, %rd1108, 40;
	and.b64  	%rd1110, %rd1109, 280375465082880;
	or.b64  	%rd1111, %rd1107, %rd1110;
	cvt.u64.u16 	%rd1112, %rs325;
	shl.b64 	%rd1113, %rd1112, 32;
	or.b64  	%rd1114, %rd1111, %rd1113;
	cvt.u32.u16 	%r2589, %rs326;
	and.b32  	%r2590, %r2589, 255;
	mul.wide.u32 	%rd1115, %r2590, 16777216;
	or.b64  	%rd1116, %rd1114, %rd1115;
	cvt.u32.u16 	%r2591, %rs328;
	mul.wide.u32 	%rd1117, %r2591, 65536;
	or.b64  	%rd1118, %rd1116, %rd1117;
	cvt.u32.u16 	%r2592, %rs327;
	and.b32  	%r2593, %r2592, 255;
	mul.wide.u32 	%rd1119, %r2593, 256;
	or.b64  	%rd1120, %rd1118, %rd1119;
	cvt.u64.u16 	%rd1121, %rs329;
	or.b64  	%rd1122, %rd1120, %rd1121;
	ld.local.v4.u32 	{%r2594, %r2595, %r2596, %r2597}, [%rd15515+80];
	mov.b32 	{%rs330, %rs331}, %r2594;
	shr.u16 	%rs332, %rs330, 8;
	shr.u16 	%rs333, %rs331, 8;
	mov.b32 	{%rs334, %rs335}, %r2595;
	shr.u16 	%rs336, %rs334, 8;
	shr.u16 	%rs337, %rs335, 8;
	mov.b32 	{%rs338, %rs339}, %r2596;
	shr.u16 	%rs340, %rs338, 8;
	shr.u16 	%rs341, %rs339, 8;
	mov.b32 	{%rs342, %rs343}, %r2597;
	shr.u16 	%rs344, %rs342, 8;
	shr.u16 	%rs345, %rs343, 8;
	cvt.u64.u16 	%rd1123, %rs330;
	shl.b64 	%rd1124, %rd1123, 56;
	cvt.u64.u16 	%rd1125, %rs332;
	shl.b64 	%rd1126, %rd1125, 48;
	or.b64  	%rd1127, %rd1126, %rd1124;
	cvt.u64.u16 	%rd1128, %rs331;
	shl.b64 	%rd1129, %rd1128, 40;
	and.b64  	%rd1130, %rd1129, 280375465082880;
	or.b64  	%rd1131, %rd1127, %rd1130;
	cvt.u64.u16 	%rd1132, %rs333;
	shl.b64 	%rd1133, %rd1132, 32;
	or.b64  	%rd1134, %rd1131, %rd1133;
	cvt.u32.u16 	%r2602, %rs334;
	and.b32  	%r2603, %r2602, 255;
	mul.wide.u32 	%rd1135, %r2603, 16777216;
	or.b64  	%rd1136, %rd1134, %rd1135;
	cvt.u32.u16 	%r2604, %rs336;
	mul.wide.u32 	%rd1137, %r2604, 65536;
	or.b64  	%rd1138, %rd1136, %rd1137;
	cvt.u32.u16 	%r2605, %rs335;
	and.b32  	%r2606, %r2605, 255;
	mul.wide.u32 	%rd1139, %r2606, 256;
	or.b64  	%rd1140, %rd1138, %rd1139;
	cvt.u64.u16 	%rd1141, %rs337;
	or.b64  	%rd1142, %rd1140, %rd1141;
	cvt.u64.u16 	%rd1143, %rs338;
	shl.b64 	%rd1144, %rd1143, 56;
	cvt.u64.u16 	%rd1145, %rs340;
	shl.b64 	%rd1146, %rd1145, 48;
	or.b64  	%rd1147, %rd1146, %rd1144;
	cvt.u64.u16 	%rd1148, %rs339;
	shl.b64 	%rd1149, %rd1148, 40;
	and.b64  	%rd1150, %rd1149, 280375465082880;
	or.b64  	%rd1151, %rd1147, %rd1150;
	cvt.u64.u16 	%rd1152, %rs341;
	shl.b64 	%rd1153, %rd1152, 32;
	or.b64  	%rd1154, %rd1151, %rd1153;
	cvt.u32.u16 	%r2607, %rs342;
	and.b32  	%r2608, %r2607, 255;
	mul.wide.u32 	%rd1155, %r2608, 16777216;
	or.b64  	%rd1156, %rd1154, %rd1155;
	cvt.u32.u16 	%r2609, %rs344;
	mul.wide.u32 	%rd1157, %r2609, 65536;
	or.b64  	%rd1158, %rd1156, %rd1157;
	cvt.u32.u16 	%r2610, %rs343;
	and.b32  	%r2611, %r2610, 255;
	mul.wide.u32 	%rd1159, %r2611, 256;
	or.b64  	%rd1160, %rd1158, %rd1159;
	cvt.u64.u16 	%rd1161, %rs345;
	or.b64  	%rd1162, %rd1160, %rd1161;
	ld.local.v4.u32 	{%r2612, %r2613, %r2614, %r2615}, [%rd15515+96];
	mov.b32 	{%rs346, %rs347}, %r2612;
	shr.u16 	%rs348, %rs346, 8;
	shr.u16 	%rs349, %rs347, 8;
	mov.b32 	{%rs350, %rs351}, %r2613;
	shr.u16 	%rs352, %rs350, 8;
	shr.u16 	%rs353, %rs351, 8;
	mov.b32 	{%rs354, %rs355}, %r2614;
	shr.u16 	%rs356, %rs354, 8;
	shr.u16 	%rs357, %rs355, 8;
	mov.b32 	{%rs358, %rs359}, %r2615;
	shr.u16 	%rs360, %rs358, 8;
	shr.u16 	%rs361, %rs359, 8;
	cvt.u64.u16 	%rd1163, %rs346;
	shl.b64 	%rd1164, %rd1163, 56;
	cvt.u64.u16 	%rd1165, %rs348;
	shl.b64 	%rd1166, %rd1165, 48;
	or.b64  	%rd1167, %rd1166, %rd1164;
	cvt.u64.u16 	%rd1168, %rs347;
	shl.b64 	%rd1169, %rd1168, 40;
	and.b64  	%rd1170, %rd1169, 280375465082880;
	or.b64  	%rd1171, %rd1167, %rd1170;
	cvt.u64.u16 	%rd1172, %rs349;
	shl.b64 	%rd1173, %rd1172, 32;
	or.b64  	%rd1174, %rd1171, %rd1173;
	cvt.u32.u16 	%r2620, %rs350;
	and.b32  	%r2621, %r2620, 255;
	mul.wide.u32 	%rd1175, %r2621, 16777216;
	or.b64  	%rd1176, %rd1174, %rd1175;
	cvt.u32.u16 	%r2622, %rs352;
	mul.wide.u32 	%rd1177, %r2622, 65536;
	or.b64  	%rd1178, %rd1176, %rd1177;
	cvt.u32.u16 	%r2623, %rs351;
	and.b32  	%r2624, %r2623, 255;
	mul.wide.u32 	%rd1179, %r2624, 256;
	or.b64  	%rd1180, %rd1178, %rd1179;
	cvt.u64.u16 	%rd1181, %rs353;
	or.b64  	%rd1182, %rd1180, %rd1181;
	cvt.u64.u16 	%rd1183, %rs354;
	shl.b64 	%rd1184, %rd1183, 56;
	cvt.u64.u16 	%rd1185, %rs356;
	shl.b64 	%rd1186, %rd1185, 48;
	or.b64  	%rd1187, %rd1186, %rd1184;
	cvt.u64.u16 	%rd1188, %rs355;
	shl.b64 	%rd1189, %rd1188, 40;
	and.b64  	%rd1190, %rd1189, 280375465082880;
	or.b64  	%rd1191, %rd1187, %rd1190;
	cvt.u64.u16 	%rd1192, %rs357;
	shl.b64 	%rd1193, %rd1192, 32;
	or.b64  	%rd1194, %rd1191, %rd1193;
	cvt.u32.u16 	%r2625, %rs358;
	and.b32  	%r2626, %r2625, 255;
	mul.wide.u32 	%rd1195, %r2626, 16777216;
	or.b64  	%rd1196, %rd1194, %rd1195;
	cvt.u32.u16 	%r2627, %rs360;
	mul.wide.u32 	%rd1197, %r2627, 65536;
	or.b64  	%rd1198, %rd1196, %rd1197;
	cvt.u32.u16 	%r2628, %rs359;
	and.b32  	%r2629, %r2628, 255;
	mul.wide.u32 	%rd1199, %r2629, 256;
	or.b64  	%rd1200, %rd1198, %rd1199;
	cvt.u64.u16 	%rd1201, %rs361;
	or.b64  	%rd1202, %rd1200, %rd1201;
	ld.local.v4.u32 	{%r2630, %r2631, %r2632, %r2633}, [%rd15515+112];
	mov.b32 	{%rs362, %rs363}, %r2630;
	shr.u16 	%rs364, %rs362, 8;
	shr.u16 	%rs365, %rs363, 8;
	mov.b32 	{%rs366, %rs367}, %r2631;
	shr.u16 	%rs368, %rs366, 8;
	shr.u16 	%rs369, %rs367, 8;
	mov.b32 	{%rs370, %rs371}, %r2632;
	shr.u16 	%rs372, %rs370, 8;
	shr.u16 	%rs373, %rs371, 8;
	mov.b32 	{%rs374, %rs375}, %r2633;
	shr.u16 	%rs376, %rs374, 8;
	shr.u16 	%rs377, %rs375, 8;
	cvt.u64.u16 	%rd1203, %rs362;
	shl.b64 	%rd1204, %rd1203, 56;
	cvt.u64.u16 	%rd1205, %rs364;
	shl.b64 	%rd1206, %rd1205, 48;
	or.b64  	%rd1207, %rd1206, %rd1204;
	cvt.u64.u16 	%rd1208, %rs363;
	shl.b64 	%rd1209, %rd1208, 40;
	and.b64  	%rd1210, %rd1209, 280375465082880;
	or.b64  	%rd1211, %rd1207, %rd1210;
	cvt.u64.u16 	%rd1212, %rs365;
	shl.b64 	%rd1213, %rd1212, 32;
	or.b64  	%rd1214, %rd1211, %rd1213;
	cvt.u32.u16 	%r2638, %rs366;
	and.b32  	%r2639, %r2638, 255;
	mul.wide.u32 	%rd1215, %r2639, 16777216;
	or.b64  	%rd1216, %rd1214, %rd1215;
	cvt.u32.u16 	%r2640, %rs368;
	mul.wide.u32 	%rd1217, %r2640, 65536;
	or.b64  	%rd1218, %rd1216, %rd1217;
	cvt.u32.u16 	%r2641, %rs367;
	and.b32  	%r2642, %r2641, 255;
	mul.wide.u32 	%rd1219, %r2642, 256;
	or.b64  	%rd1220, %rd1218, %rd1219;
	cvt.u64.u16 	%rd1221, %rs369;
	or.b64  	%rd1222, %rd1220, %rd1221;
	cvt.u64.u16 	%rd1223, %rs370;
	shl.b64 	%rd1224, %rd1223, 56;
	cvt.u64.u16 	%rd1225, %rs372;
	shl.b64 	%rd1226, %rd1225, 48;
	or.b64  	%rd1227, %rd1226, %rd1224;
	cvt.u64.u16 	%rd1228, %rs371;
	shl.b64 	%rd1229, %rd1228, 40;
	and.b64  	%rd1230, %rd1229, 280375465082880;
	or.b64  	%rd1231, %rd1227, %rd1230;
	cvt.u64.u16 	%rd1232, %rs373;
	shl.b64 	%rd1233, %rd1232, 32;
	or.b64  	%rd1234, %rd1231, %rd1233;
	cvt.u32.u16 	%r2643, %rs374;
	and.b32  	%r2644, %r2643, 255;
	mul.wide.u32 	%rd1235, %r2644, 16777216;
	or.b64  	%rd1236, %rd1234, %rd1235;
	cvt.u32.u16 	%r2645, %rs376;
	mul.wide.u32 	%rd1237, %r2645, 65536;
	or.b64  	%rd1238, %rd1236, %rd1237;
	cvt.u32.u16 	%r2646, %rs375;
	and.b32  	%r2647, %r2646, 255;
	mul.wide.u32 	%rd1239, %r2647, 256;
	or.b64  	%rd1240, %rd1238, %rd1239;
	cvt.u64.u16 	%rd1241, %rs377;
	or.b64  	%rd1242, %rd1240, %rd1241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2648,%dummy}, %rd962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2649}, %rd962;
	}
	shf.r.wrap.b32 	%r2650, %r2649, %r2648, 1;
	shf.r.wrap.b32 	%r2651, %r2648, %r2649, 1;
	mov.b64 	%rd1243, {%r2651, %r2650};
	shf.r.wrap.b32 	%r2652, %r2649, %r2648, 8;
	shf.r.wrap.b32 	%r2653, %r2648, %r2649, 8;
	mov.b64 	%rd1244, {%r2653, %r2652};
	xor.b64  	%rd1245, %rd1243, %rd1244;
	shr.u64 	%rd1246, %rd962, 7;
	xor.b64  	%rd1247, %rd1245, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2654,%dummy}, %rd1222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2655}, %rd1222;
	}
	shf.r.wrap.b32 	%r2656, %r2655, %r2654, 19;
	shf.r.wrap.b32 	%r2657, %r2654, %r2655, 19;
	mov.b64 	%rd1248, {%r2657, %r2656};
	shf.l.wrap.b32 	%r2658, %r2654, %r2655, 3;
	shf.l.wrap.b32 	%r2659, %r2655, %r2654, 3;
	mov.b64 	%rd1249, {%r2659, %r2658};
	xor.b64  	%rd1250, %rd1248, %rd1249;
	shr.u64 	%rd1251, %rd1222, 6;
	xor.b64  	%rd1252, %rd1250, %rd1251;
	add.s64 	%rd1253, %rd1247, %rd942;
	add.s64 	%rd1254, %rd1253, %rd1122;
	add.s64 	%rd1255, %rd1254, %rd1252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2660,%dummy}, %rd982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2661}, %rd982;
	}
	shf.r.wrap.b32 	%r2662, %r2661, %r2660, 1;
	shf.r.wrap.b32 	%r2663, %r2660, %r2661, 1;
	mov.b64 	%rd1256, {%r2663, %r2662};
	shf.r.wrap.b32 	%r2664, %r2661, %r2660, 8;
	shf.r.wrap.b32 	%r2665, %r2660, %r2661, 8;
	mov.b64 	%rd1257, {%r2665, %r2664};
	xor.b64  	%rd1258, %rd1256, %rd1257;
	shr.u64 	%rd1259, %rd982, 7;
	xor.b64  	%rd1260, %rd1258, %rd1259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2666,%dummy}, %rd1242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2667}, %rd1242;
	}
	shf.r.wrap.b32 	%r2668, %r2667, %r2666, 19;
	shf.r.wrap.b32 	%r2669, %r2666, %r2667, 19;
	mov.b64 	%rd1261, {%r2669, %r2668};
	shf.l.wrap.b32 	%r2670, %r2666, %r2667, 3;
	shf.l.wrap.b32 	%r2671, %r2667, %r2666, 3;
	mov.b64 	%rd1262, {%r2671, %r2670};
	xor.b64  	%rd1263, %rd1261, %rd1262;
	shr.u64 	%rd1264, %rd1242, 6;
	xor.b64  	%rd1265, %rd1263, %rd1264;
	add.s64 	%rd1266, %rd1260, %rd962;
	add.s64 	%rd1267, %rd1266, %rd1142;
	add.s64 	%rd1268, %rd1267, %rd1265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2672,%dummy}, %rd1002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2673}, %rd1002;
	}
	shf.r.wrap.b32 	%r2674, %r2673, %r2672, 1;
	shf.r.wrap.b32 	%r2675, %r2672, %r2673, 1;
	mov.b64 	%rd1269, {%r2675, %r2674};
	shf.r.wrap.b32 	%r2676, %r2673, %r2672, 8;
	shf.r.wrap.b32 	%r2677, %r2672, %r2673, 8;
	mov.b64 	%rd1270, {%r2677, %r2676};
	xor.b64  	%rd1271, %rd1269, %rd1270;
	shr.u64 	%rd1272, %rd1002, 7;
	xor.b64  	%rd1273, %rd1271, %rd1272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2678,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2679}, %rd1255;
	}
	shf.r.wrap.b32 	%r2680, %r2679, %r2678, 19;
	shf.r.wrap.b32 	%r2681, %r2678, %r2679, 19;
	mov.b64 	%rd1274, {%r2681, %r2680};
	shf.l.wrap.b32 	%r2682, %r2678, %r2679, 3;
	shf.l.wrap.b32 	%r2683, %r2679, %r2678, 3;
	mov.b64 	%rd1275, {%r2683, %r2682};
	xor.b64  	%rd1276, %rd1274, %rd1275;
	shr.u64 	%rd1277, %rd1255, 6;
	xor.b64  	%rd1278, %rd1276, %rd1277;
	add.s64 	%rd1279, %rd1273, %rd982;
	add.s64 	%rd1280, %rd1279, %rd1162;
	add.s64 	%rd1281, %rd1280, %rd1278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2684,%dummy}, %rd1022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2685}, %rd1022;
	}
	shf.r.wrap.b32 	%r2686, %r2685, %r2684, 1;
	shf.r.wrap.b32 	%r2687, %r2684, %r2685, 1;
	mov.b64 	%rd1282, {%r2687, %r2686};
	shf.r.wrap.b32 	%r2688, %r2685, %r2684, 8;
	shf.r.wrap.b32 	%r2689, %r2684, %r2685, 8;
	mov.b64 	%rd1283, {%r2689, %r2688};
	xor.b64  	%rd1284, %rd1282, %rd1283;
	shr.u64 	%rd1285, %rd1022, 7;
	xor.b64  	%rd1286, %rd1284, %rd1285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2690,%dummy}, %rd1268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2691}, %rd1268;
	}
	shf.r.wrap.b32 	%r2692, %r2691, %r2690, 19;
	shf.r.wrap.b32 	%r2693, %r2690, %r2691, 19;
	mov.b64 	%rd1287, {%r2693, %r2692};
	shf.l.wrap.b32 	%r2694, %r2690, %r2691, 3;
	shf.l.wrap.b32 	%r2695, %r2691, %r2690, 3;
	mov.b64 	%rd1288, {%r2695, %r2694};
	xor.b64  	%rd1289, %rd1287, %rd1288;
	shr.u64 	%rd1290, %rd1268, 6;
	xor.b64  	%rd1291, %rd1289, %rd1290;
	add.s64 	%rd1292, %rd1286, %rd1002;
	add.s64 	%rd1293, %rd1292, %rd1182;
	add.s64 	%rd1294, %rd1293, %rd1291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2696,%dummy}, %rd1042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2697}, %rd1042;
	}
	shf.r.wrap.b32 	%r2698, %r2697, %r2696, 1;
	shf.r.wrap.b32 	%r2699, %r2696, %r2697, 1;
	mov.b64 	%rd1295, {%r2699, %r2698};
	shf.r.wrap.b32 	%r2700, %r2697, %r2696, 8;
	shf.r.wrap.b32 	%r2701, %r2696, %r2697, 8;
	mov.b64 	%rd1296, {%r2701, %r2700};
	xor.b64  	%rd1297, %rd1295, %rd1296;
	shr.u64 	%rd1298, %rd1042, 7;
	xor.b64  	%rd1299, %rd1297, %rd1298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2702,%dummy}, %rd1281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2703}, %rd1281;
	}
	shf.r.wrap.b32 	%r2704, %r2703, %r2702, 19;
	shf.r.wrap.b32 	%r2705, %r2702, %r2703, 19;
	mov.b64 	%rd1300, {%r2705, %r2704};
	shf.l.wrap.b32 	%r2706, %r2702, %r2703, 3;
	shf.l.wrap.b32 	%r2707, %r2703, %r2702, 3;
	mov.b64 	%rd1301, {%r2707, %r2706};
	xor.b64  	%rd1302, %rd1300, %rd1301;
	shr.u64 	%rd1303, %rd1281, 6;
	xor.b64  	%rd1304, %rd1302, %rd1303;
	add.s64 	%rd1305, %rd1299, %rd1022;
	add.s64 	%rd1306, %rd1305, %rd1202;
	add.s64 	%rd1307, %rd1306, %rd1304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2708,%dummy}, %rd1062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2709}, %rd1062;
	}
	shf.r.wrap.b32 	%r2710, %r2709, %r2708, 1;
	shf.r.wrap.b32 	%r2711, %r2708, %r2709, 1;
	mov.b64 	%rd1308, {%r2711, %r2710};
	shf.r.wrap.b32 	%r2712, %r2709, %r2708, 8;
	shf.r.wrap.b32 	%r2713, %r2708, %r2709, 8;
	mov.b64 	%rd1309, {%r2713, %r2712};
	xor.b64  	%rd1310, %rd1308, %rd1309;
	shr.u64 	%rd1311, %rd1062, 7;
	xor.b64  	%rd1312, %rd1310, %rd1311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2714,%dummy}, %rd1294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2715}, %rd1294;
	}
	shf.r.wrap.b32 	%r2716, %r2715, %r2714, 19;
	shf.r.wrap.b32 	%r2717, %r2714, %r2715, 19;
	mov.b64 	%rd1313, {%r2717, %r2716};
	shf.l.wrap.b32 	%r2718, %r2714, %r2715, 3;
	shf.l.wrap.b32 	%r2719, %r2715, %r2714, 3;
	mov.b64 	%rd1314, {%r2719, %r2718};
	xor.b64  	%rd1315, %rd1313, %rd1314;
	shr.u64 	%rd1316, %rd1294, 6;
	xor.b64  	%rd1317, %rd1315, %rd1316;
	add.s64 	%rd1318, %rd1312, %rd1042;
	add.s64 	%rd1319, %rd1318, %rd1222;
	add.s64 	%rd1320, %rd1319, %rd1317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2720,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2721}, %rd1082;
	}
	shf.r.wrap.b32 	%r2722, %r2721, %r2720, 1;
	shf.r.wrap.b32 	%r2723, %r2720, %r2721, 1;
	mov.b64 	%rd1321, {%r2723, %r2722};
	shf.r.wrap.b32 	%r2724, %r2721, %r2720, 8;
	shf.r.wrap.b32 	%r2725, %r2720, %r2721, 8;
	mov.b64 	%rd1322, {%r2725, %r2724};
	xor.b64  	%rd1323, %rd1321, %rd1322;
	shr.u64 	%rd1324, %rd1082, 7;
	xor.b64  	%rd1325, %rd1323, %rd1324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2726,%dummy}, %rd1307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2727}, %rd1307;
	}
	shf.r.wrap.b32 	%r2728, %r2727, %r2726, 19;
	shf.r.wrap.b32 	%r2729, %r2726, %r2727, 19;
	mov.b64 	%rd1326, {%r2729, %r2728};
	shf.l.wrap.b32 	%r2730, %r2726, %r2727, 3;
	shf.l.wrap.b32 	%r2731, %r2727, %r2726, 3;
	mov.b64 	%rd1327, {%r2731, %r2730};
	xor.b64  	%rd1328, %rd1326, %rd1327;
	shr.u64 	%rd1329, %rd1307, 6;
	xor.b64  	%rd1330, %rd1328, %rd1329;
	add.s64 	%rd1331, %rd1325, %rd1062;
	add.s64 	%rd1332, %rd1331, %rd1242;
	add.s64 	%rd1333, %rd1332, %rd1330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2732,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2733}, %rd1102;
	}
	shf.r.wrap.b32 	%r2734, %r2733, %r2732, 1;
	shf.r.wrap.b32 	%r2735, %r2732, %r2733, 1;
	mov.b64 	%rd1334, {%r2735, %r2734};
	shf.r.wrap.b32 	%r2736, %r2733, %r2732, 8;
	shf.r.wrap.b32 	%r2737, %r2732, %r2733, 8;
	mov.b64 	%rd1335, {%r2737, %r2736};
	xor.b64  	%rd1336, %rd1334, %rd1335;
	shr.u64 	%rd1337, %rd1102, 7;
	xor.b64  	%rd1338, %rd1336, %rd1337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2738,%dummy}, %rd1320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2739}, %rd1320;
	}
	shf.r.wrap.b32 	%r2740, %r2739, %r2738, 19;
	shf.r.wrap.b32 	%r2741, %r2738, %r2739, 19;
	mov.b64 	%rd1339, {%r2741, %r2740};
	shf.l.wrap.b32 	%r2742, %r2738, %r2739, 3;
	shf.l.wrap.b32 	%r2743, %r2739, %r2738, 3;
	mov.b64 	%rd1340, {%r2743, %r2742};
	xor.b64  	%rd1341, %rd1339, %rd1340;
	shr.u64 	%rd1342, %rd1320, 6;
	xor.b64  	%rd1343, %rd1341, %rd1342;
	add.s64 	%rd1344, %rd1338, %rd1082;
	add.s64 	%rd1345, %rd1344, %rd1255;
	add.s64 	%rd1346, %rd1345, %rd1343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2744,%dummy}, %rd1122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2745}, %rd1122;
	}
	shf.r.wrap.b32 	%r2746, %r2745, %r2744, 1;
	shf.r.wrap.b32 	%r2747, %r2744, %r2745, 1;
	mov.b64 	%rd1347, {%r2747, %r2746};
	shf.r.wrap.b32 	%r2748, %r2745, %r2744, 8;
	shf.r.wrap.b32 	%r2749, %r2744, %r2745, 8;
	mov.b64 	%rd1348, {%r2749, %r2748};
	xor.b64  	%rd1349, %rd1347, %rd1348;
	shr.u64 	%rd1350, %rd1122, 7;
	xor.b64  	%rd1351, %rd1349, %rd1350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2750,%dummy}, %rd1333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2751}, %rd1333;
	}
	shf.r.wrap.b32 	%r2752, %r2751, %r2750, 19;
	shf.r.wrap.b32 	%r2753, %r2750, %r2751, 19;
	mov.b64 	%rd1352, {%r2753, %r2752};
	shf.l.wrap.b32 	%r2754, %r2750, %r2751, 3;
	shf.l.wrap.b32 	%r2755, %r2751, %r2750, 3;
	mov.b64 	%rd1353, {%r2755, %r2754};
	xor.b64  	%rd1354, %rd1352, %rd1353;
	shr.u64 	%rd1355, %rd1333, 6;
	xor.b64  	%rd1356, %rd1354, %rd1355;
	add.s64 	%rd1357, %rd1351, %rd1102;
	add.s64 	%rd1358, %rd1357, %rd1268;
	add.s64 	%rd1359, %rd1358, %rd1356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2756,%dummy}, %rd1142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2757}, %rd1142;
	}
	shf.r.wrap.b32 	%r2758, %r2757, %r2756, 1;
	shf.r.wrap.b32 	%r2759, %r2756, %r2757, 1;
	mov.b64 	%rd1360, {%r2759, %r2758};
	shf.r.wrap.b32 	%r2760, %r2757, %r2756, 8;
	shf.r.wrap.b32 	%r2761, %r2756, %r2757, 8;
	mov.b64 	%rd1361, {%r2761, %r2760};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	shr.u64 	%rd1363, %rd1142, 7;
	xor.b64  	%rd1364, %rd1362, %rd1363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2762,%dummy}, %rd1346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2763}, %rd1346;
	}
	shf.r.wrap.b32 	%r2764, %r2763, %r2762, 19;
	shf.r.wrap.b32 	%r2765, %r2762, %r2763, 19;
	mov.b64 	%rd1365, {%r2765, %r2764};
	shf.l.wrap.b32 	%r2766, %r2762, %r2763, 3;
	shf.l.wrap.b32 	%r2767, %r2763, %r2762, 3;
	mov.b64 	%rd1366, {%r2767, %r2766};
	xor.b64  	%rd1367, %rd1365, %rd1366;
	shr.u64 	%rd1368, %rd1346, 6;
	xor.b64  	%rd1369, %rd1367, %rd1368;
	add.s64 	%rd1370, %rd1364, %rd1122;
	add.s64 	%rd1371, %rd1370, %rd1281;
	add.s64 	%rd1372, %rd1371, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2768,%dummy}, %rd1162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2769}, %rd1162;
	}
	shf.r.wrap.b32 	%r2770, %r2769, %r2768, 1;
	shf.r.wrap.b32 	%r2771, %r2768, %r2769, 1;
	mov.b64 	%rd1373, {%r2771, %r2770};
	shf.r.wrap.b32 	%r2772, %r2769, %r2768, 8;
	shf.r.wrap.b32 	%r2773, %r2768, %r2769, 8;
	mov.b64 	%rd1374, {%r2773, %r2772};
	xor.b64  	%rd1375, %rd1373, %rd1374;
	shr.u64 	%rd1376, %rd1162, 7;
	xor.b64  	%rd1377, %rd1375, %rd1376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2774,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2775}, %rd1359;
	}
	shf.r.wrap.b32 	%r2776, %r2775, %r2774, 19;
	shf.r.wrap.b32 	%r2777, %r2774, %r2775, 19;
	mov.b64 	%rd1378, {%r2777, %r2776};
	shf.l.wrap.b32 	%r2778, %r2774, %r2775, 3;
	shf.l.wrap.b32 	%r2779, %r2775, %r2774, 3;
	mov.b64 	%rd1379, {%r2779, %r2778};
	xor.b64  	%rd1380, %rd1378, %rd1379;
	shr.u64 	%rd1381, %rd1359, 6;
	xor.b64  	%rd1382, %rd1380, %rd1381;
	add.s64 	%rd1383, %rd1377, %rd1142;
	add.s64 	%rd1384, %rd1383, %rd1294;
	add.s64 	%rd1385, %rd1384, %rd1382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2780,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2781}, %rd1182;
	}
	shf.r.wrap.b32 	%r2782, %r2781, %r2780, 1;
	shf.r.wrap.b32 	%r2783, %r2780, %r2781, 1;
	mov.b64 	%rd1386, {%r2783, %r2782};
	shf.r.wrap.b32 	%r2784, %r2781, %r2780, 8;
	shf.r.wrap.b32 	%r2785, %r2780, %r2781, 8;
	mov.b64 	%rd1387, {%r2785, %r2784};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	shr.u64 	%rd1389, %rd1182, 7;
	xor.b64  	%rd1390, %rd1388, %rd1389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2786,%dummy}, %rd1372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2787}, %rd1372;
	}
	shf.r.wrap.b32 	%r2788, %r2787, %r2786, 19;
	shf.r.wrap.b32 	%r2789, %r2786, %r2787, 19;
	mov.b64 	%rd1391, {%r2789, %r2788};
	shf.l.wrap.b32 	%r2790, %r2786, %r2787, 3;
	shf.l.wrap.b32 	%r2791, %r2787, %r2786, 3;
	mov.b64 	%rd1392, {%r2791, %r2790};
	xor.b64  	%rd1393, %rd1391, %rd1392;
	shr.u64 	%rd1394, %rd1372, 6;
	xor.b64  	%rd1395, %rd1393, %rd1394;
	add.s64 	%rd1396, %rd1390, %rd1162;
	add.s64 	%rd1397, %rd1396, %rd1307;
	add.s64 	%rd1398, %rd1397, %rd1395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2792,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2793}, %rd1202;
	}
	shf.r.wrap.b32 	%r2794, %r2793, %r2792, 1;
	shf.r.wrap.b32 	%r2795, %r2792, %r2793, 1;
	mov.b64 	%rd1399, {%r2795, %r2794};
	shf.r.wrap.b32 	%r2796, %r2793, %r2792, 8;
	shf.r.wrap.b32 	%r2797, %r2792, %r2793, 8;
	mov.b64 	%rd1400, {%r2797, %r2796};
	xor.b64  	%rd1401, %rd1399, %rd1400;
	shr.u64 	%rd1402, %rd1202, 7;
	xor.b64  	%rd1403, %rd1401, %rd1402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2798,%dummy}, %rd1385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2799}, %rd1385;
	}
	shf.r.wrap.b32 	%r2800, %r2799, %r2798, 19;
	shf.r.wrap.b32 	%r2801, %r2798, %r2799, 19;
	mov.b64 	%rd1404, {%r2801, %r2800};
	shf.l.wrap.b32 	%r2802, %r2798, %r2799, 3;
	shf.l.wrap.b32 	%r2803, %r2799, %r2798, 3;
	mov.b64 	%rd1405, {%r2803, %r2802};
	xor.b64  	%rd1406, %rd1404, %rd1405;
	shr.u64 	%rd1407, %rd1385, 6;
	xor.b64  	%rd1408, %rd1406, %rd1407;
	add.s64 	%rd1409, %rd1403, %rd1182;
	add.s64 	%rd1410, %rd1409, %rd1320;
	add.s64 	%rd1411, %rd1410, %rd1408;
	shf.r.wrap.b32 	%r2804, %r2655, %r2654, 1;
	shf.r.wrap.b32 	%r2805, %r2654, %r2655, 1;
	mov.b64 	%rd1412, {%r2805, %r2804};
	shf.r.wrap.b32 	%r2806, %r2655, %r2654, 8;
	shf.r.wrap.b32 	%r2807, %r2654, %r2655, 8;
	mov.b64 	%rd1413, {%r2807, %r2806};
	xor.b64  	%rd1414, %rd1412, %rd1413;
	shr.u64 	%rd1415, %rd1222, 7;
	xor.b64  	%rd1416, %rd1414, %rd1415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2808,%dummy}, %rd1398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2809}, %rd1398;
	}
	shf.r.wrap.b32 	%r2810, %r2809, %r2808, 19;
	shf.r.wrap.b32 	%r2811, %r2808, %r2809, 19;
	mov.b64 	%rd1417, {%r2811, %r2810};
	shf.l.wrap.b32 	%r2812, %r2808, %r2809, 3;
	shf.l.wrap.b32 	%r2813, %r2809, %r2808, 3;
	mov.b64 	%rd1418, {%r2813, %r2812};
	xor.b64  	%rd1419, %rd1417, %rd1418;
	shr.u64 	%rd1420, %rd1398, 6;
	xor.b64  	%rd1421, %rd1419, %rd1420;
	add.s64 	%rd1422, %rd1416, %rd1202;
	add.s64 	%rd1423, %rd1422, %rd1333;
	add.s64 	%rd1424, %rd1423, %rd1421;
	shf.r.wrap.b32 	%r2814, %r2667, %r2666, 1;
	shf.r.wrap.b32 	%r2815, %r2666, %r2667, 1;
	mov.b64 	%rd1425, {%r2815, %r2814};
	shf.r.wrap.b32 	%r2816, %r2667, %r2666, 8;
	shf.r.wrap.b32 	%r2817, %r2666, %r2667, 8;
	mov.b64 	%rd1426, {%r2817, %r2816};
	xor.b64  	%rd1427, %rd1425, %rd1426;
	shr.u64 	%rd1428, %rd1242, 7;
	xor.b64  	%rd1429, %rd1427, %rd1428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2818,%dummy}, %rd1411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2819}, %rd1411;
	}
	shf.r.wrap.b32 	%r2820, %r2819, %r2818, 19;
	shf.r.wrap.b32 	%r2821, %r2818, %r2819, 19;
	mov.b64 	%rd1430, {%r2821, %r2820};
	shf.l.wrap.b32 	%r2822, %r2818, %r2819, 3;
	shf.l.wrap.b32 	%r2823, %r2819, %r2818, 3;
	mov.b64 	%rd1431, {%r2823, %r2822};
	xor.b64  	%rd1432, %rd1430, %rd1431;
	shr.u64 	%rd1433, %rd1411, 6;
	xor.b64  	%rd1434, %rd1432, %rd1433;
	add.s64 	%rd1435, %rd1429, %rd1222;
	add.s64 	%rd1436, %rd1435, %rd1346;
	add.s64 	%rd1437, %rd1436, %rd1434;
	shf.r.wrap.b32 	%r2824, %r2679, %r2678, 1;
	shf.r.wrap.b32 	%r2825, %r2678, %r2679, 1;
	mov.b64 	%rd1438, {%r2825, %r2824};
	shf.r.wrap.b32 	%r2826, %r2679, %r2678, 8;
	shf.r.wrap.b32 	%r2827, %r2678, %r2679, 8;
	mov.b64 	%rd1439, {%r2827, %r2826};
	xor.b64  	%rd1440, %rd1438, %rd1439;
	shr.u64 	%rd1441, %rd1255, 7;
	xor.b64  	%rd1442, %rd1440, %rd1441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2828,%dummy}, %rd1424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2829}, %rd1424;
	}
	shf.r.wrap.b32 	%r2830, %r2829, %r2828, 19;
	shf.r.wrap.b32 	%r2831, %r2828, %r2829, 19;
	mov.b64 	%rd1443, {%r2831, %r2830};
	shf.l.wrap.b32 	%r2832, %r2828, %r2829, 3;
	shf.l.wrap.b32 	%r2833, %r2829, %r2828, 3;
	mov.b64 	%rd1444, {%r2833, %r2832};
	xor.b64  	%rd1445, %rd1443, %rd1444;
	shr.u64 	%rd1446, %rd1424, 6;
	xor.b64  	%rd1447, %rd1445, %rd1446;
	add.s64 	%rd1448, %rd1442, %rd1242;
	add.s64 	%rd1449, %rd1448, %rd1359;
	add.s64 	%rd1450, %rd1449, %rd1447;
	shf.r.wrap.b32 	%r2834, %r2691, %r2690, 1;
	shf.r.wrap.b32 	%r2835, %r2690, %r2691, 1;
	mov.b64 	%rd1451, {%r2835, %r2834};
	shf.r.wrap.b32 	%r2836, %r2691, %r2690, 8;
	shf.r.wrap.b32 	%r2837, %r2690, %r2691, 8;
	mov.b64 	%rd1452, {%r2837, %r2836};
	xor.b64  	%rd1453, %rd1451, %rd1452;
	shr.u64 	%rd1454, %rd1268, 7;
	xor.b64  	%rd1455, %rd1453, %rd1454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2838,%dummy}, %rd1437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2839}, %rd1437;
	}
	shf.r.wrap.b32 	%r2840, %r2839, %r2838, 19;
	shf.r.wrap.b32 	%r2841, %r2838, %r2839, 19;
	mov.b64 	%rd1456, {%r2841, %r2840};
	shf.l.wrap.b32 	%r2842, %r2838, %r2839, 3;
	shf.l.wrap.b32 	%r2843, %r2839, %r2838, 3;
	mov.b64 	%rd1457, {%r2843, %r2842};
	xor.b64  	%rd1458, %rd1456, %rd1457;
	shr.u64 	%rd1459, %rd1437, 6;
	xor.b64  	%rd1460, %rd1458, %rd1459;
	add.s64 	%rd1461, %rd1455, %rd1255;
	add.s64 	%rd1462, %rd1461, %rd1372;
	add.s64 	%rd1463, %rd1462, %rd1460;
	shf.r.wrap.b32 	%r2844, %r2703, %r2702, 1;
	shf.r.wrap.b32 	%r2845, %r2702, %r2703, 1;
	mov.b64 	%rd1464, {%r2845, %r2844};
	shf.r.wrap.b32 	%r2846, %r2703, %r2702, 8;
	shf.r.wrap.b32 	%r2847, %r2702, %r2703, 8;
	mov.b64 	%rd1465, {%r2847, %r2846};
	xor.b64  	%rd1466, %rd1464, %rd1465;
	shr.u64 	%rd1467, %rd1281, 7;
	xor.b64  	%rd1468, %rd1466, %rd1467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2848,%dummy}, %rd1450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2849}, %rd1450;
	}
	shf.r.wrap.b32 	%r2850, %r2849, %r2848, 19;
	shf.r.wrap.b32 	%r2851, %r2848, %r2849, 19;
	mov.b64 	%rd1469, {%r2851, %r2850};
	shf.l.wrap.b32 	%r2852, %r2848, %r2849, 3;
	shf.l.wrap.b32 	%r2853, %r2849, %r2848, 3;
	mov.b64 	%rd1470, {%r2853, %r2852};
	xor.b64  	%rd1471, %rd1469, %rd1470;
	shr.u64 	%rd1472, %rd1450, 6;
	xor.b64  	%rd1473, %rd1471, %rd1472;
	add.s64 	%rd1474, %rd1468, %rd1268;
	add.s64 	%rd1475, %rd1474, %rd1385;
	add.s64 	%rd1476, %rd1475, %rd1473;
	shf.r.wrap.b32 	%r2854, %r2715, %r2714, 1;
	shf.r.wrap.b32 	%r2855, %r2714, %r2715, 1;
	mov.b64 	%rd1477, {%r2855, %r2854};
	shf.r.wrap.b32 	%r2856, %r2715, %r2714, 8;
	shf.r.wrap.b32 	%r2857, %r2714, %r2715, 8;
	mov.b64 	%rd1478, {%r2857, %r2856};
	xor.b64  	%rd1479, %rd1477, %rd1478;
	shr.u64 	%rd1480, %rd1294, 7;
	xor.b64  	%rd1481, %rd1479, %rd1480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2858,%dummy}, %rd1463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2859}, %rd1463;
	}
	shf.r.wrap.b32 	%r2860, %r2859, %r2858, 19;
	shf.r.wrap.b32 	%r2861, %r2858, %r2859, 19;
	mov.b64 	%rd1482, {%r2861, %r2860};
	shf.l.wrap.b32 	%r2862, %r2858, %r2859, 3;
	shf.l.wrap.b32 	%r2863, %r2859, %r2858, 3;
	mov.b64 	%rd1483, {%r2863, %r2862};
	xor.b64  	%rd1484, %rd1482, %rd1483;
	shr.u64 	%rd1485, %rd1463, 6;
	xor.b64  	%rd1486, %rd1484, %rd1485;
	add.s64 	%rd1487, %rd1481, %rd1281;
	add.s64 	%rd1488, %rd1487, %rd1398;
	add.s64 	%rd1489, %rd1488, %rd1486;
	shf.r.wrap.b32 	%r2864, %r2727, %r2726, 1;
	shf.r.wrap.b32 	%r2865, %r2726, %r2727, 1;
	mov.b64 	%rd1490, {%r2865, %r2864};
	shf.r.wrap.b32 	%r2866, %r2727, %r2726, 8;
	shf.r.wrap.b32 	%r2867, %r2726, %r2727, 8;
	mov.b64 	%rd1491, {%r2867, %r2866};
	xor.b64  	%rd1492, %rd1490, %rd1491;
	shr.u64 	%rd1493, %rd1307, 7;
	xor.b64  	%rd1494, %rd1492, %rd1493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2868,%dummy}, %rd1476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2869}, %rd1476;
	}
	shf.r.wrap.b32 	%r2870, %r2869, %r2868, 19;
	shf.r.wrap.b32 	%r2871, %r2868, %r2869, 19;
	mov.b64 	%rd1495, {%r2871, %r2870};
	shf.l.wrap.b32 	%r2872, %r2868, %r2869, 3;
	shf.l.wrap.b32 	%r2873, %r2869, %r2868, 3;
	mov.b64 	%rd1496, {%r2873, %r2872};
	xor.b64  	%rd1497, %rd1495, %rd1496;
	shr.u64 	%rd1498, %rd1476, 6;
	xor.b64  	%rd1499, %rd1497, %rd1498;
	add.s64 	%rd1500, %rd1494, %rd1294;
	add.s64 	%rd1501, %rd1500, %rd1411;
	add.s64 	%rd1502, %rd1501, %rd1499;
	shf.r.wrap.b32 	%r2874, %r2739, %r2738, 1;
	shf.r.wrap.b32 	%r2875, %r2738, %r2739, 1;
	mov.b64 	%rd1503, {%r2875, %r2874};
	shf.r.wrap.b32 	%r2876, %r2739, %r2738, 8;
	shf.r.wrap.b32 	%r2877, %r2738, %r2739, 8;
	mov.b64 	%rd1504, {%r2877, %r2876};
	xor.b64  	%rd1505, %rd1503, %rd1504;
	shr.u64 	%rd1506, %rd1320, 7;
	xor.b64  	%rd1507, %rd1505, %rd1506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2878,%dummy}, %rd1489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2879}, %rd1489;
	}
	shf.r.wrap.b32 	%r2880, %r2879, %r2878, 19;
	shf.r.wrap.b32 	%r2881, %r2878, %r2879, 19;
	mov.b64 	%rd1508, {%r2881, %r2880};
	shf.l.wrap.b32 	%r2882, %r2878, %r2879, 3;
	shf.l.wrap.b32 	%r2883, %r2879, %r2878, 3;
	mov.b64 	%rd1509, {%r2883, %r2882};
	xor.b64  	%rd1510, %rd1508, %rd1509;
	shr.u64 	%rd1511, %rd1489, 6;
	xor.b64  	%rd1512, %rd1510, %rd1511;
	add.s64 	%rd1513, %rd1507, %rd1307;
	add.s64 	%rd1514, %rd1513, %rd1424;
	add.s64 	%rd1515, %rd1514, %rd1512;
	shf.r.wrap.b32 	%r2884, %r2751, %r2750, 1;
	shf.r.wrap.b32 	%r2885, %r2750, %r2751, 1;
	mov.b64 	%rd1516, {%r2885, %r2884};
	shf.r.wrap.b32 	%r2886, %r2751, %r2750, 8;
	shf.r.wrap.b32 	%r2887, %r2750, %r2751, 8;
	mov.b64 	%rd1517, {%r2887, %r2886};
	xor.b64  	%rd1518, %rd1516, %rd1517;
	shr.u64 	%rd1519, %rd1333, 7;
	xor.b64  	%rd1520, %rd1518, %rd1519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2888,%dummy}, %rd1502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2889}, %rd1502;
	}
	shf.r.wrap.b32 	%r2890, %r2889, %r2888, 19;
	shf.r.wrap.b32 	%r2891, %r2888, %r2889, 19;
	mov.b64 	%rd1521, {%r2891, %r2890};
	shf.l.wrap.b32 	%r2892, %r2888, %r2889, 3;
	shf.l.wrap.b32 	%r2893, %r2889, %r2888, 3;
	mov.b64 	%rd1522, {%r2893, %r2892};
	xor.b64  	%rd1523, %rd1521, %rd1522;
	shr.u64 	%rd1524, %rd1502, 6;
	xor.b64  	%rd1525, %rd1523, %rd1524;
	add.s64 	%rd1526, %rd1520, %rd1320;
	add.s64 	%rd1527, %rd1526, %rd1437;
	add.s64 	%rd1528, %rd1527, %rd1525;
	shf.r.wrap.b32 	%r2894, %r2763, %r2762, 1;
	shf.r.wrap.b32 	%r2895, %r2762, %r2763, 1;
	mov.b64 	%rd1529, {%r2895, %r2894};
	shf.r.wrap.b32 	%r2896, %r2763, %r2762, 8;
	shf.r.wrap.b32 	%r2897, %r2762, %r2763, 8;
	mov.b64 	%rd1530, {%r2897, %r2896};
	xor.b64  	%rd1531, %rd1529, %rd1530;
	shr.u64 	%rd1532, %rd1346, 7;
	xor.b64  	%rd1533, %rd1531, %rd1532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2898,%dummy}, %rd1515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2899}, %rd1515;
	}
	shf.r.wrap.b32 	%r2900, %r2899, %r2898, 19;
	shf.r.wrap.b32 	%r2901, %r2898, %r2899, 19;
	mov.b64 	%rd1534, {%r2901, %r2900};
	shf.l.wrap.b32 	%r2902, %r2898, %r2899, 3;
	shf.l.wrap.b32 	%r2903, %r2899, %r2898, 3;
	mov.b64 	%rd1535, {%r2903, %r2902};
	xor.b64  	%rd1536, %rd1534, %rd1535;
	shr.u64 	%rd1537, %rd1515, 6;
	xor.b64  	%rd1538, %rd1536, %rd1537;
	add.s64 	%rd1539, %rd1533, %rd1333;
	add.s64 	%rd1540, %rd1539, %rd1450;
	add.s64 	%rd1541, %rd1540, %rd1538;
	shf.r.wrap.b32 	%r2904, %r2775, %r2774, 1;
	shf.r.wrap.b32 	%r2905, %r2774, %r2775, 1;
	mov.b64 	%rd1542, {%r2905, %r2904};
	shf.r.wrap.b32 	%r2906, %r2775, %r2774, 8;
	shf.r.wrap.b32 	%r2907, %r2774, %r2775, 8;
	mov.b64 	%rd1543, {%r2907, %r2906};
	xor.b64  	%rd1544, %rd1542, %rd1543;
	shr.u64 	%rd1545, %rd1359, 7;
	xor.b64  	%rd1546, %rd1544, %rd1545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2908,%dummy}, %rd1528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2909}, %rd1528;
	}
	shf.r.wrap.b32 	%r2910, %r2909, %r2908, 19;
	shf.r.wrap.b32 	%r2911, %r2908, %r2909, 19;
	mov.b64 	%rd1547, {%r2911, %r2910};
	shf.l.wrap.b32 	%r2912, %r2908, %r2909, 3;
	shf.l.wrap.b32 	%r2913, %r2909, %r2908, 3;
	mov.b64 	%rd1548, {%r2913, %r2912};
	xor.b64  	%rd1549, %rd1547, %rd1548;
	shr.u64 	%rd1550, %rd1528, 6;
	xor.b64  	%rd1551, %rd1549, %rd1550;
	add.s64 	%rd1552, %rd1546, %rd1346;
	add.s64 	%rd1553, %rd1552, %rd1463;
	add.s64 	%rd1554, %rd1553, %rd1551;
	shf.r.wrap.b32 	%r2914, %r2787, %r2786, 1;
	shf.r.wrap.b32 	%r2915, %r2786, %r2787, 1;
	mov.b64 	%rd1555, {%r2915, %r2914};
	shf.r.wrap.b32 	%r2916, %r2787, %r2786, 8;
	shf.r.wrap.b32 	%r2917, %r2786, %r2787, 8;
	mov.b64 	%rd1556, {%r2917, %r2916};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	shr.u64 	%rd1558, %rd1372, 7;
	xor.b64  	%rd1559, %rd1557, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2918,%dummy}, %rd1541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2919}, %rd1541;
	}
	shf.r.wrap.b32 	%r2920, %r2919, %r2918, 19;
	shf.r.wrap.b32 	%r2921, %r2918, %r2919, 19;
	mov.b64 	%rd1560, {%r2921, %r2920};
	shf.l.wrap.b32 	%r2922, %r2918, %r2919, 3;
	shf.l.wrap.b32 	%r2923, %r2919, %r2918, 3;
	mov.b64 	%rd1561, {%r2923, %r2922};
	xor.b64  	%rd1562, %rd1560, %rd1561;
	shr.u64 	%rd1563, %rd1541, 6;
	xor.b64  	%rd1564, %rd1562, %rd1563;
	add.s64 	%rd1565, %rd1559, %rd1359;
	add.s64 	%rd1566, %rd1565, %rd1476;
	add.s64 	%rd1567, %rd1566, %rd1564;
	shf.r.wrap.b32 	%r2924, %r2799, %r2798, 1;
	shf.r.wrap.b32 	%r2925, %r2798, %r2799, 1;
	mov.b64 	%rd1568, {%r2925, %r2924};
	shf.r.wrap.b32 	%r2926, %r2799, %r2798, 8;
	shf.r.wrap.b32 	%r2927, %r2798, %r2799, 8;
	mov.b64 	%rd1569, {%r2927, %r2926};
	xor.b64  	%rd1570, %rd1568, %rd1569;
	shr.u64 	%rd1571, %rd1385, 7;
	xor.b64  	%rd1572, %rd1570, %rd1571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2928,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2929}, %rd1554;
	}
	shf.r.wrap.b32 	%r2930, %r2929, %r2928, 19;
	shf.r.wrap.b32 	%r2931, %r2928, %r2929, 19;
	mov.b64 	%rd1573, {%r2931, %r2930};
	shf.l.wrap.b32 	%r2932, %r2928, %r2929, 3;
	shf.l.wrap.b32 	%r2933, %r2929, %r2928, 3;
	mov.b64 	%rd1574, {%r2933, %r2932};
	xor.b64  	%rd1575, %rd1573, %rd1574;
	shr.u64 	%rd1576, %rd1554, 6;
	xor.b64  	%rd1577, %rd1575, %rd1576;
	add.s64 	%rd1578, %rd1572, %rd1372;
	add.s64 	%rd1579, %rd1578, %rd1489;
	add.s64 	%rd1580, %rd1579, %rd1577;
	shf.r.wrap.b32 	%r2934, %r2809, %r2808, 1;
	shf.r.wrap.b32 	%r2935, %r2808, %r2809, 1;
	mov.b64 	%rd1581, {%r2935, %r2934};
	shf.r.wrap.b32 	%r2936, %r2809, %r2808, 8;
	shf.r.wrap.b32 	%r2937, %r2808, %r2809, 8;
	mov.b64 	%rd1582, {%r2937, %r2936};
	xor.b64  	%rd1583, %rd1581, %rd1582;
	shr.u64 	%rd1584, %rd1398, 7;
	xor.b64  	%rd1585, %rd1583, %rd1584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2938,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2939}, %rd1567;
	}
	shf.r.wrap.b32 	%r2940, %r2939, %r2938, 19;
	shf.r.wrap.b32 	%r2941, %r2938, %r2939, 19;
	mov.b64 	%rd1586, {%r2941, %r2940};
	shf.l.wrap.b32 	%r2942, %r2938, %r2939, 3;
	shf.l.wrap.b32 	%r2943, %r2939, %r2938, 3;
	mov.b64 	%rd1587, {%r2943, %r2942};
	xor.b64  	%rd1588, %rd1586, %rd1587;
	shr.u64 	%rd1589, %rd1567, 6;
	xor.b64  	%rd1590, %rd1588, %rd1589;
	add.s64 	%rd1591, %rd1585, %rd1385;
	add.s64 	%rd1592, %rd1591, %rd1502;
	add.s64 	%rd1593, %rd1592, %rd1590;
	shf.r.wrap.b32 	%r2944, %r2819, %r2818, 1;
	shf.r.wrap.b32 	%r2945, %r2818, %r2819, 1;
	mov.b64 	%rd1594, {%r2945, %r2944};
	shf.r.wrap.b32 	%r2946, %r2819, %r2818, 8;
	shf.r.wrap.b32 	%r2947, %r2818, %r2819, 8;
	mov.b64 	%rd1595, {%r2947, %r2946};
	xor.b64  	%rd1596, %rd1594, %rd1595;
	shr.u64 	%rd1597, %rd1411, 7;
	xor.b64  	%rd1598, %rd1596, %rd1597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2948,%dummy}, %rd1580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2949}, %rd1580;
	}
	shf.r.wrap.b32 	%r2950, %r2949, %r2948, 19;
	shf.r.wrap.b32 	%r2951, %r2948, %r2949, 19;
	mov.b64 	%rd1599, {%r2951, %r2950};
	shf.l.wrap.b32 	%r2952, %r2948, %r2949, 3;
	shf.l.wrap.b32 	%r2953, %r2949, %r2948, 3;
	mov.b64 	%rd1600, {%r2953, %r2952};
	xor.b64  	%rd1601, %rd1599, %rd1600;
	shr.u64 	%rd1602, %rd1580, 6;
	xor.b64  	%rd1603, %rd1601, %rd1602;
	add.s64 	%rd1604, %rd1598, %rd1398;
	add.s64 	%rd1605, %rd1604, %rd1515;
	add.s64 	%rd1606, %rd1605, %rd1603;
	shf.r.wrap.b32 	%r2954, %r2829, %r2828, 1;
	shf.r.wrap.b32 	%r2955, %r2828, %r2829, 1;
	mov.b64 	%rd1607, {%r2955, %r2954};
	shf.r.wrap.b32 	%r2956, %r2829, %r2828, 8;
	shf.r.wrap.b32 	%r2957, %r2828, %r2829, 8;
	mov.b64 	%rd1608, {%r2957, %r2956};
	xor.b64  	%rd1609, %rd1607, %rd1608;
	shr.u64 	%rd1610, %rd1424, 7;
	xor.b64  	%rd1611, %rd1609, %rd1610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2958,%dummy}, %rd1593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2959}, %rd1593;
	}
	shf.r.wrap.b32 	%r2960, %r2959, %r2958, 19;
	shf.r.wrap.b32 	%r2961, %r2958, %r2959, 19;
	mov.b64 	%rd1612, {%r2961, %r2960};
	shf.l.wrap.b32 	%r2962, %r2958, %r2959, 3;
	shf.l.wrap.b32 	%r2963, %r2959, %r2958, 3;
	mov.b64 	%rd1613, {%r2963, %r2962};
	xor.b64  	%rd1614, %rd1612, %rd1613;
	shr.u64 	%rd1615, %rd1593, 6;
	xor.b64  	%rd1616, %rd1614, %rd1615;
	add.s64 	%rd1617, %rd1611, %rd1411;
	add.s64 	%rd1618, %rd1617, %rd1528;
	add.s64 	%rd1619, %rd1618, %rd1616;
	shf.r.wrap.b32 	%r2964, %r2839, %r2838, 1;
	shf.r.wrap.b32 	%r2965, %r2838, %r2839, 1;
	mov.b64 	%rd1620, {%r2965, %r2964};
	shf.r.wrap.b32 	%r2966, %r2839, %r2838, 8;
	shf.r.wrap.b32 	%r2967, %r2838, %r2839, 8;
	mov.b64 	%rd1621, {%r2967, %r2966};
	xor.b64  	%rd1622, %rd1620, %rd1621;
	shr.u64 	%rd1623, %rd1437, 7;
	xor.b64  	%rd1624, %rd1622, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2968,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2969}, %rd1606;
	}
	shf.r.wrap.b32 	%r2970, %r2969, %r2968, 19;
	shf.r.wrap.b32 	%r2971, %r2968, %r2969, 19;
	mov.b64 	%rd1625, {%r2971, %r2970};
	shf.l.wrap.b32 	%r2972, %r2968, %r2969, 3;
	shf.l.wrap.b32 	%r2973, %r2969, %r2968, 3;
	mov.b64 	%rd1626, {%r2973, %r2972};
	xor.b64  	%rd1627, %rd1625, %rd1626;
	shr.u64 	%rd1628, %rd1606, 6;
	xor.b64  	%rd1629, %rd1627, %rd1628;
	add.s64 	%rd1630, %rd1624, %rd1424;
	add.s64 	%rd1631, %rd1630, %rd1541;
	add.s64 	%rd1632, %rd1631, %rd1629;
	shf.r.wrap.b32 	%r2974, %r2849, %r2848, 1;
	shf.r.wrap.b32 	%r2975, %r2848, %r2849, 1;
	mov.b64 	%rd1633, {%r2975, %r2974};
	shf.r.wrap.b32 	%r2976, %r2849, %r2848, 8;
	shf.r.wrap.b32 	%r2977, %r2848, %r2849, 8;
	mov.b64 	%rd1634, {%r2977, %r2976};
	xor.b64  	%rd1635, %rd1633, %rd1634;
	shr.u64 	%rd1636, %rd1450, 7;
	xor.b64  	%rd1637, %rd1635, %rd1636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2978,%dummy}, %rd1619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2979}, %rd1619;
	}
	shf.r.wrap.b32 	%r2980, %r2979, %r2978, 19;
	shf.r.wrap.b32 	%r2981, %r2978, %r2979, 19;
	mov.b64 	%rd1638, {%r2981, %r2980};
	shf.l.wrap.b32 	%r2982, %r2978, %r2979, 3;
	shf.l.wrap.b32 	%r2983, %r2979, %r2978, 3;
	mov.b64 	%rd1639, {%r2983, %r2982};
	xor.b64  	%rd1640, %rd1638, %rd1639;
	shr.u64 	%rd1641, %rd1619, 6;
	xor.b64  	%rd1642, %rd1640, %rd1641;
	add.s64 	%rd1643, %rd1637, %rd1437;
	add.s64 	%rd1644, %rd1643, %rd1554;
	add.s64 	%rd1645, %rd1644, %rd1642;
	shf.r.wrap.b32 	%r2984, %r2859, %r2858, 1;
	shf.r.wrap.b32 	%r2985, %r2858, %r2859, 1;
	mov.b64 	%rd1646, {%r2985, %r2984};
	shf.r.wrap.b32 	%r2986, %r2859, %r2858, 8;
	shf.r.wrap.b32 	%r2987, %r2858, %r2859, 8;
	mov.b64 	%rd1647, {%r2987, %r2986};
	xor.b64  	%rd1648, %rd1646, %rd1647;
	shr.u64 	%rd1649, %rd1463, 7;
	xor.b64  	%rd1650, %rd1648, %rd1649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2988,%dummy}, %rd1632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2989}, %rd1632;
	}
	shf.r.wrap.b32 	%r2990, %r2989, %r2988, 19;
	shf.r.wrap.b32 	%r2991, %r2988, %r2989, 19;
	mov.b64 	%rd1651, {%r2991, %r2990};
	shf.l.wrap.b32 	%r2992, %r2988, %r2989, 3;
	shf.l.wrap.b32 	%r2993, %r2989, %r2988, 3;
	mov.b64 	%rd1652, {%r2993, %r2992};
	xor.b64  	%rd1653, %rd1651, %rd1652;
	shr.u64 	%rd1654, %rd1632, 6;
	xor.b64  	%rd1655, %rd1653, %rd1654;
	add.s64 	%rd1656, %rd1650, %rd1450;
	add.s64 	%rd1657, %rd1656, %rd1567;
	add.s64 	%rd1658, %rd1657, %rd1655;
	shf.r.wrap.b32 	%r2994, %r2869, %r2868, 1;
	shf.r.wrap.b32 	%r2995, %r2868, %r2869, 1;
	mov.b64 	%rd1659, {%r2995, %r2994};
	shf.r.wrap.b32 	%r2996, %r2869, %r2868, 8;
	shf.r.wrap.b32 	%r2997, %r2868, %r2869, 8;
	mov.b64 	%rd1660, {%r2997, %r2996};
	xor.b64  	%rd1661, %rd1659, %rd1660;
	shr.u64 	%rd1662, %rd1476, 7;
	xor.b64  	%rd1663, %rd1661, %rd1662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2998,%dummy}, %rd1645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2999}, %rd1645;
	}
	shf.r.wrap.b32 	%r3000, %r2999, %r2998, 19;
	shf.r.wrap.b32 	%r3001, %r2998, %r2999, 19;
	mov.b64 	%rd1664, {%r3001, %r3000};
	shf.l.wrap.b32 	%r3002, %r2998, %r2999, 3;
	shf.l.wrap.b32 	%r3003, %r2999, %r2998, 3;
	mov.b64 	%rd1665, {%r3003, %r3002};
	xor.b64  	%rd1666, %rd1664, %rd1665;
	shr.u64 	%rd1667, %rd1645, 6;
	xor.b64  	%rd1668, %rd1666, %rd1667;
	add.s64 	%rd1669, %rd1663, %rd1463;
	add.s64 	%rd1670, %rd1669, %rd1580;
	add.s64 	%rd1671, %rd1670, %rd1668;
	shf.r.wrap.b32 	%r3004, %r2879, %r2878, 1;
	shf.r.wrap.b32 	%r3005, %r2878, %r2879, 1;
	mov.b64 	%rd1672, {%r3005, %r3004};
	shf.r.wrap.b32 	%r3006, %r2879, %r2878, 8;
	shf.r.wrap.b32 	%r3007, %r2878, %r2879, 8;
	mov.b64 	%rd1673, {%r3007, %r3006};
	xor.b64  	%rd1674, %rd1672, %rd1673;
	shr.u64 	%rd1675, %rd1489, 7;
	xor.b64  	%rd1676, %rd1674, %rd1675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3008,%dummy}, %rd1658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3009}, %rd1658;
	}
	shf.r.wrap.b32 	%r3010, %r3009, %r3008, 19;
	shf.r.wrap.b32 	%r3011, %r3008, %r3009, 19;
	mov.b64 	%rd1677, {%r3011, %r3010};
	shf.l.wrap.b32 	%r3012, %r3008, %r3009, 3;
	shf.l.wrap.b32 	%r3013, %r3009, %r3008, 3;
	mov.b64 	%rd1678, {%r3013, %r3012};
	xor.b64  	%rd1679, %rd1677, %rd1678;
	shr.u64 	%rd1680, %rd1658, 6;
	xor.b64  	%rd1681, %rd1679, %rd1680;
	add.s64 	%rd1682, %rd1676, %rd1476;
	add.s64 	%rd1683, %rd1682, %rd1593;
	add.s64 	%rd1684, %rd1683, %rd1681;
	shf.r.wrap.b32 	%r3014, %r2889, %r2888, 1;
	shf.r.wrap.b32 	%r3015, %r2888, %r2889, 1;
	mov.b64 	%rd1685, {%r3015, %r3014};
	shf.r.wrap.b32 	%r3016, %r2889, %r2888, 8;
	shf.r.wrap.b32 	%r3017, %r2888, %r2889, 8;
	mov.b64 	%rd1686, {%r3017, %r3016};
	xor.b64  	%rd1687, %rd1685, %rd1686;
	shr.u64 	%rd1688, %rd1502, 7;
	xor.b64  	%rd1689, %rd1687, %rd1688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3018,%dummy}, %rd1671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3019}, %rd1671;
	}
	shf.r.wrap.b32 	%r3020, %r3019, %r3018, 19;
	shf.r.wrap.b32 	%r3021, %r3018, %r3019, 19;
	mov.b64 	%rd1690, {%r3021, %r3020};
	shf.l.wrap.b32 	%r3022, %r3018, %r3019, 3;
	shf.l.wrap.b32 	%r3023, %r3019, %r3018, 3;
	mov.b64 	%rd1691, {%r3023, %r3022};
	xor.b64  	%rd1692, %rd1690, %rd1691;
	shr.u64 	%rd1693, %rd1671, 6;
	xor.b64  	%rd1694, %rd1692, %rd1693;
	add.s64 	%rd1695, %rd1689, %rd1489;
	add.s64 	%rd1696, %rd1695, %rd1606;
	add.s64 	%rd1697, %rd1696, %rd1694;
	shf.r.wrap.b32 	%r3024, %r2899, %r2898, 1;
	shf.r.wrap.b32 	%r3025, %r2898, %r2899, 1;
	mov.b64 	%rd1698, {%r3025, %r3024};
	shf.r.wrap.b32 	%r3026, %r2899, %r2898, 8;
	shf.r.wrap.b32 	%r3027, %r2898, %r2899, 8;
	mov.b64 	%rd1699, {%r3027, %r3026};
	xor.b64  	%rd1700, %rd1698, %rd1699;
	shr.u64 	%rd1701, %rd1515, 7;
	xor.b64  	%rd1702, %rd1700, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3028,%dummy}, %rd1684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3029}, %rd1684;
	}
	shf.r.wrap.b32 	%r3030, %r3029, %r3028, 19;
	shf.r.wrap.b32 	%r3031, %r3028, %r3029, 19;
	mov.b64 	%rd1703, {%r3031, %r3030};
	shf.l.wrap.b32 	%r3032, %r3028, %r3029, 3;
	shf.l.wrap.b32 	%r3033, %r3029, %r3028, 3;
	mov.b64 	%rd1704, {%r3033, %r3032};
	xor.b64  	%rd1705, %rd1703, %rd1704;
	shr.u64 	%rd1706, %rd1684, 6;
	xor.b64  	%rd1707, %rd1705, %rd1706;
	add.s64 	%rd1708, %rd1702, %rd1502;
	add.s64 	%rd1709, %rd1708, %rd1619;
	add.s64 	%rd1710, %rd1709, %rd1707;
	shf.r.wrap.b32 	%r3034, %r2909, %r2908, 1;
	shf.r.wrap.b32 	%r3035, %r2908, %r2909, 1;
	mov.b64 	%rd1711, {%r3035, %r3034};
	shf.r.wrap.b32 	%r3036, %r2909, %r2908, 8;
	shf.r.wrap.b32 	%r3037, %r2908, %r2909, 8;
	mov.b64 	%rd1712, {%r3037, %r3036};
	xor.b64  	%rd1713, %rd1711, %rd1712;
	shr.u64 	%rd1714, %rd1528, 7;
	xor.b64  	%rd1715, %rd1713, %rd1714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3038,%dummy}, %rd1697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3039}, %rd1697;
	}
	shf.r.wrap.b32 	%r3040, %r3039, %r3038, 19;
	shf.r.wrap.b32 	%r3041, %r3038, %r3039, 19;
	mov.b64 	%rd1716, {%r3041, %r3040};
	shf.l.wrap.b32 	%r3042, %r3038, %r3039, 3;
	shf.l.wrap.b32 	%r3043, %r3039, %r3038, 3;
	mov.b64 	%rd1717, {%r3043, %r3042};
	xor.b64  	%rd1718, %rd1716, %rd1717;
	shr.u64 	%rd1719, %rd1697, 6;
	xor.b64  	%rd1720, %rd1718, %rd1719;
	add.s64 	%rd1721, %rd1715, %rd1515;
	add.s64 	%rd1722, %rd1721, %rd1632;
	add.s64 	%rd1723, %rd1722, %rd1720;
	shf.r.wrap.b32 	%r3044, %r2919, %r2918, 1;
	shf.r.wrap.b32 	%r3045, %r2918, %r2919, 1;
	mov.b64 	%rd1724, {%r3045, %r3044};
	shf.r.wrap.b32 	%r3046, %r2919, %r2918, 8;
	shf.r.wrap.b32 	%r3047, %r2918, %r2919, 8;
	mov.b64 	%rd1725, {%r3047, %r3046};
	xor.b64  	%rd1726, %rd1724, %rd1725;
	shr.u64 	%rd1727, %rd1541, 7;
	xor.b64  	%rd1728, %rd1726, %rd1727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3048,%dummy}, %rd1710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3049}, %rd1710;
	}
	shf.r.wrap.b32 	%r3050, %r3049, %r3048, 19;
	shf.r.wrap.b32 	%r3051, %r3048, %r3049, 19;
	mov.b64 	%rd1729, {%r3051, %r3050};
	shf.l.wrap.b32 	%r3052, %r3048, %r3049, 3;
	shf.l.wrap.b32 	%r3053, %r3049, %r3048, 3;
	mov.b64 	%rd1730, {%r3053, %r3052};
	xor.b64  	%rd1731, %rd1729, %rd1730;
	shr.u64 	%rd1732, %rd1710, 6;
	xor.b64  	%rd1733, %rd1731, %rd1732;
	add.s64 	%rd1734, %rd1728, %rd1528;
	add.s64 	%rd1735, %rd1734, %rd1645;
	add.s64 	%rd1736, %rd1735, %rd1733;
	shf.r.wrap.b32 	%r3054, %r2929, %r2928, 1;
	shf.r.wrap.b32 	%r3055, %r2928, %r2929, 1;
	mov.b64 	%rd1737, {%r3055, %r3054};
	shf.r.wrap.b32 	%r3056, %r2929, %r2928, 8;
	shf.r.wrap.b32 	%r3057, %r2928, %r2929, 8;
	mov.b64 	%rd1738, {%r3057, %r3056};
	xor.b64  	%rd1739, %rd1737, %rd1738;
	shr.u64 	%rd1740, %rd1554, 7;
	xor.b64  	%rd1741, %rd1739, %rd1740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3058,%dummy}, %rd1723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3059}, %rd1723;
	}
	shf.r.wrap.b32 	%r3060, %r3059, %r3058, 19;
	shf.r.wrap.b32 	%r3061, %r3058, %r3059, 19;
	mov.b64 	%rd1742, {%r3061, %r3060};
	shf.l.wrap.b32 	%r3062, %r3058, %r3059, 3;
	shf.l.wrap.b32 	%r3063, %r3059, %r3058, 3;
	mov.b64 	%rd1743, {%r3063, %r3062};
	xor.b64  	%rd1744, %rd1742, %rd1743;
	shr.u64 	%rd1745, %rd1723, 6;
	xor.b64  	%rd1746, %rd1744, %rd1745;
	add.s64 	%rd1747, %rd1741, %rd1541;
	add.s64 	%rd1748, %rd1747, %rd1658;
	add.s64 	%rd1749, %rd1748, %rd1746;
	shf.r.wrap.b32 	%r3064, %r2939, %r2938, 1;
	shf.r.wrap.b32 	%r3065, %r2938, %r2939, 1;
	mov.b64 	%rd1750, {%r3065, %r3064};
	shf.r.wrap.b32 	%r3066, %r2939, %r2938, 8;
	shf.r.wrap.b32 	%r3067, %r2938, %r2939, 8;
	mov.b64 	%rd1751, {%r3067, %r3066};
	xor.b64  	%rd1752, %rd1750, %rd1751;
	shr.u64 	%rd1753, %rd1567, 7;
	xor.b64  	%rd1754, %rd1752, %rd1753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3068,%dummy}, %rd1736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3069}, %rd1736;
	}
	shf.r.wrap.b32 	%r3070, %r3069, %r3068, 19;
	shf.r.wrap.b32 	%r3071, %r3068, %r3069, 19;
	mov.b64 	%rd1755, {%r3071, %r3070};
	shf.l.wrap.b32 	%r3072, %r3068, %r3069, 3;
	shf.l.wrap.b32 	%r3073, %r3069, %r3068, 3;
	mov.b64 	%rd1756, {%r3073, %r3072};
	xor.b64  	%rd1757, %rd1755, %rd1756;
	shr.u64 	%rd1758, %rd1736, 6;
	xor.b64  	%rd1759, %rd1757, %rd1758;
	add.s64 	%rd1760, %rd1754, %rd1554;
	add.s64 	%rd1761, %rd1760, %rd1671;
	add.s64 	%rd1762, %rd1761, %rd1759;
	shf.r.wrap.b32 	%r3074, %r2949, %r2948, 1;
	shf.r.wrap.b32 	%r3075, %r2948, %r2949, 1;
	mov.b64 	%rd1763, {%r3075, %r3074};
	shf.r.wrap.b32 	%r3076, %r2949, %r2948, 8;
	shf.r.wrap.b32 	%r3077, %r2948, %r2949, 8;
	mov.b64 	%rd1764, {%r3077, %r3076};
	xor.b64  	%rd1765, %rd1763, %rd1764;
	shr.u64 	%rd1766, %rd1580, 7;
	xor.b64  	%rd1767, %rd1765, %rd1766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3078,%dummy}, %rd1749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3079}, %rd1749;
	}
	shf.r.wrap.b32 	%r3080, %r3079, %r3078, 19;
	shf.r.wrap.b32 	%r3081, %r3078, %r3079, 19;
	mov.b64 	%rd1768, {%r3081, %r3080};
	shf.l.wrap.b32 	%r3082, %r3078, %r3079, 3;
	shf.l.wrap.b32 	%r3083, %r3079, %r3078, 3;
	mov.b64 	%rd1769, {%r3083, %r3082};
	xor.b64  	%rd1770, %rd1768, %rd1769;
	shr.u64 	%rd1771, %rd1749, 6;
	xor.b64  	%rd1772, %rd1770, %rd1771;
	add.s64 	%rd1773, %rd1767, %rd1567;
	add.s64 	%rd1774, %rd1773, %rd1684;
	add.s64 	%rd1775, %rd1774, %rd1772;
	shf.r.wrap.b32 	%r3084, %r2959, %r2958, 1;
	shf.r.wrap.b32 	%r3085, %r2958, %r2959, 1;
	mov.b64 	%rd1776, {%r3085, %r3084};
	shf.r.wrap.b32 	%r3086, %r2959, %r2958, 8;
	shf.r.wrap.b32 	%r3087, %r2958, %r2959, 8;
	mov.b64 	%rd1777, {%r3087, %r3086};
	xor.b64  	%rd1778, %rd1776, %rd1777;
	shr.u64 	%rd1779, %rd1593, 7;
	xor.b64  	%rd1780, %rd1778, %rd1779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3088,%dummy}, %rd1762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3089}, %rd1762;
	}
	shf.r.wrap.b32 	%r3090, %r3089, %r3088, 19;
	shf.r.wrap.b32 	%r3091, %r3088, %r3089, 19;
	mov.b64 	%rd1781, {%r3091, %r3090};
	shf.l.wrap.b32 	%r3092, %r3088, %r3089, 3;
	shf.l.wrap.b32 	%r3093, %r3089, %r3088, 3;
	mov.b64 	%rd1782, {%r3093, %r3092};
	xor.b64  	%rd1783, %rd1781, %rd1782;
	shr.u64 	%rd1784, %rd1762, 6;
	xor.b64  	%rd1785, %rd1783, %rd1784;
	add.s64 	%rd1786, %rd1780, %rd1580;
	add.s64 	%rd1787, %rd1786, %rd1697;
	add.s64 	%rd1788, %rd1787, %rd1785;
	shf.r.wrap.b32 	%r3094, %r2969, %r2968, 1;
	shf.r.wrap.b32 	%r3095, %r2968, %r2969, 1;
	mov.b64 	%rd1789, {%r3095, %r3094};
	shf.r.wrap.b32 	%r3096, %r2969, %r2968, 8;
	shf.r.wrap.b32 	%r3097, %r2968, %r2969, 8;
	mov.b64 	%rd1790, {%r3097, %r3096};
	xor.b64  	%rd1791, %rd1789, %rd1790;
	shr.u64 	%rd1792, %rd1606, 7;
	xor.b64  	%rd1793, %rd1791, %rd1792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3098,%dummy}, %rd1775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3099}, %rd1775;
	}
	shf.r.wrap.b32 	%r3100, %r3099, %r3098, 19;
	shf.r.wrap.b32 	%r3101, %r3098, %r3099, 19;
	mov.b64 	%rd1794, {%r3101, %r3100};
	shf.l.wrap.b32 	%r3102, %r3098, %r3099, 3;
	shf.l.wrap.b32 	%r3103, %r3099, %r3098, 3;
	mov.b64 	%rd1795, {%r3103, %r3102};
	xor.b64  	%rd1796, %rd1794, %rd1795;
	shr.u64 	%rd1797, %rd1775, 6;
	xor.b64  	%rd1798, %rd1796, %rd1797;
	add.s64 	%rd1799, %rd1793, %rd1593;
	add.s64 	%rd1800, %rd1799, %rd1710;
	add.s64 	%rd1801, %rd1800, %rd1798;
	shf.r.wrap.b32 	%r3104, %r2979, %r2978, 1;
	shf.r.wrap.b32 	%r3105, %r2978, %r2979, 1;
	mov.b64 	%rd1802, {%r3105, %r3104};
	shf.r.wrap.b32 	%r3106, %r2979, %r2978, 8;
	shf.r.wrap.b32 	%r3107, %r2978, %r2979, 8;
	mov.b64 	%rd1803, {%r3107, %r3106};
	xor.b64  	%rd1804, %rd1802, %rd1803;
	shr.u64 	%rd1805, %rd1619, 7;
	xor.b64  	%rd1806, %rd1804, %rd1805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3108,%dummy}, %rd1788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3109}, %rd1788;
	}
	shf.r.wrap.b32 	%r3110, %r3109, %r3108, 19;
	shf.r.wrap.b32 	%r3111, %r3108, %r3109, 19;
	mov.b64 	%rd1807, {%r3111, %r3110};
	shf.l.wrap.b32 	%r3112, %r3108, %r3109, 3;
	shf.l.wrap.b32 	%r3113, %r3109, %r3108, 3;
	mov.b64 	%rd1808, {%r3113, %r3112};
	xor.b64  	%rd1809, %rd1807, %rd1808;
	shr.u64 	%rd1810, %rd1788, 6;
	xor.b64  	%rd1811, %rd1809, %rd1810;
	add.s64 	%rd1812, %rd1806, %rd1606;
	add.s64 	%rd1813, %rd1812, %rd1723;
	add.s64 	%rd1814, %rd1813, %rd1811;
	shf.r.wrap.b32 	%r3114, %r2989, %r2988, 1;
	shf.r.wrap.b32 	%r3115, %r2988, %r2989, 1;
	mov.b64 	%rd1815, {%r3115, %r3114};
	shf.r.wrap.b32 	%r3116, %r2989, %r2988, 8;
	shf.r.wrap.b32 	%r3117, %r2988, %r2989, 8;
	mov.b64 	%rd1816, {%r3117, %r3116};
	xor.b64  	%rd1817, %rd1815, %rd1816;
	shr.u64 	%rd1818, %rd1632, 7;
	xor.b64  	%rd1819, %rd1817, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3118,%dummy}, %rd1801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3119}, %rd1801;
	}
	shf.r.wrap.b32 	%r3120, %r3119, %r3118, 19;
	shf.r.wrap.b32 	%r3121, %r3118, %r3119, 19;
	mov.b64 	%rd1820, {%r3121, %r3120};
	shf.l.wrap.b32 	%r3122, %r3118, %r3119, 3;
	shf.l.wrap.b32 	%r3123, %r3119, %r3118, 3;
	mov.b64 	%rd1821, {%r3123, %r3122};
	xor.b64  	%rd1822, %rd1820, %rd1821;
	shr.u64 	%rd1823, %rd1801, 6;
	xor.b64  	%rd1824, %rd1822, %rd1823;
	add.s64 	%rd1825, %rd1819, %rd1619;
	add.s64 	%rd1826, %rd1825, %rd1736;
	add.s64 	%rd1827, %rd1826, %rd1824;
	shf.r.wrap.b32 	%r3124, %r2999, %r2998, 1;
	shf.r.wrap.b32 	%r3125, %r2998, %r2999, 1;
	mov.b64 	%rd1828, {%r3125, %r3124};
	shf.r.wrap.b32 	%r3126, %r2999, %r2998, 8;
	shf.r.wrap.b32 	%r3127, %r2998, %r2999, 8;
	mov.b64 	%rd1829, {%r3127, %r3126};
	xor.b64  	%rd1830, %rd1828, %rd1829;
	shr.u64 	%rd1831, %rd1645, 7;
	xor.b64  	%rd1832, %rd1830, %rd1831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3128,%dummy}, %rd1814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3129}, %rd1814;
	}
	shf.r.wrap.b32 	%r3130, %r3129, %r3128, 19;
	shf.r.wrap.b32 	%r3131, %r3128, %r3129, 19;
	mov.b64 	%rd1833, {%r3131, %r3130};
	shf.l.wrap.b32 	%r3132, %r3128, %r3129, 3;
	shf.l.wrap.b32 	%r3133, %r3129, %r3128, 3;
	mov.b64 	%rd1834, {%r3133, %r3132};
	xor.b64  	%rd1835, %rd1833, %rd1834;
	shr.u64 	%rd1836, %rd1814, 6;
	xor.b64  	%rd1837, %rd1835, %rd1836;
	add.s64 	%rd1838, %rd1832, %rd1632;
	add.s64 	%rd1839, %rd1838, %rd1749;
	add.s64 	%rd1840, %rd1839, %rd1837;
	shf.r.wrap.b32 	%r3134, %r3009, %r3008, 1;
	shf.r.wrap.b32 	%r3135, %r3008, %r3009, 1;
	mov.b64 	%rd1841, {%r3135, %r3134};
	shf.r.wrap.b32 	%r3136, %r3009, %r3008, 8;
	shf.r.wrap.b32 	%r3137, %r3008, %r3009, 8;
	mov.b64 	%rd1842, {%r3137, %r3136};
	xor.b64  	%rd1843, %rd1841, %rd1842;
	shr.u64 	%rd1844, %rd1658, 7;
	xor.b64  	%rd1845, %rd1843, %rd1844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3138,%dummy}, %rd1827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3139}, %rd1827;
	}
	shf.r.wrap.b32 	%r3140, %r3139, %r3138, 19;
	shf.r.wrap.b32 	%r3141, %r3138, %r3139, 19;
	mov.b64 	%rd1846, {%r3141, %r3140};
	shf.l.wrap.b32 	%r3142, %r3138, %r3139, 3;
	shf.l.wrap.b32 	%r3143, %r3139, %r3138, 3;
	mov.b64 	%rd1847, {%r3143, %r3142};
	xor.b64  	%rd1848, %rd1846, %rd1847;
	shr.u64 	%rd1849, %rd1827, 6;
	xor.b64  	%rd1850, %rd1848, %rd1849;
	add.s64 	%rd1851, %rd1845, %rd1645;
	add.s64 	%rd1852, %rd1851, %rd1762;
	add.s64 	%rd1853, %rd1852, %rd1850;
	shf.r.wrap.b32 	%r3144, %r3019, %r3018, 1;
	shf.r.wrap.b32 	%r3145, %r3018, %r3019, 1;
	mov.b64 	%rd1854, {%r3145, %r3144};
	shf.r.wrap.b32 	%r3146, %r3019, %r3018, 8;
	shf.r.wrap.b32 	%r3147, %r3018, %r3019, 8;
	mov.b64 	%rd1855, {%r3147, %r3146};
	xor.b64  	%rd1856, %rd1854, %rd1855;
	shr.u64 	%rd1857, %rd1671, 7;
	xor.b64  	%rd1858, %rd1856, %rd1857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3148,%dummy}, %rd1840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3149}, %rd1840;
	}
	shf.r.wrap.b32 	%r3150, %r3149, %r3148, 19;
	shf.r.wrap.b32 	%r3151, %r3148, %r3149, 19;
	mov.b64 	%rd1859, {%r3151, %r3150};
	shf.l.wrap.b32 	%r3152, %r3148, %r3149, 3;
	shf.l.wrap.b32 	%r3153, %r3149, %r3148, 3;
	mov.b64 	%rd1860, {%r3153, %r3152};
	xor.b64  	%rd1861, %rd1859, %rd1860;
	shr.u64 	%rd1862, %rd1840, 6;
	xor.b64  	%rd1863, %rd1861, %rd1862;
	add.s64 	%rd1864, %rd1858, %rd1658;
	add.s64 	%rd1865, %rd1864, %rd1775;
	add.s64 	%rd1866, %rd1865, %rd1863;
	shf.r.wrap.b32 	%r3154, %r3029, %r3028, 1;
	shf.r.wrap.b32 	%r3155, %r3028, %r3029, 1;
	mov.b64 	%rd1867, {%r3155, %r3154};
	shf.r.wrap.b32 	%r3156, %r3029, %r3028, 8;
	shf.r.wrap.b32 	%r3157, %r3028, %r3029, 8;
	mov.b64 	%rd1868, {%r3157, %r3156};
	xor.b64  	%rd1869, %rd1867, %rd1868;
	shr.u64 	%rd1870, %rd1684, 7;
	xor.b64  	%rd1871, %rd1869, %rd1870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3158,%dummy}, %rd1853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3159}, %rd1853;
	}
	shf.r.wrap.b32 	%r3160, %r3159, %r3158, 19;
	shf.r.wrap.b32 	%r3161, %r3158, %r3159, 19;
	mov.b64 	%rd1872, {%r3161, %r3160};
	shf.l.wrap.b32 	%r3162, %r3158, %r3159, 3;
	shf.l.wrap.b32 	%r3163, %r3159, %r3158, 3;
	mov.b64 	%rd1873, {%r3163, %r3162};
	xor.b64  	%rd1874, %rd1872, %rd1873;
	shr.u64 	%rd1875, %rd1853, 6;
	xor.b64  	%rd1876, %rd1874, %rd1875;
	add.s64 	%rd1877, %rd1871, %rd1671;
	add.s64 	%rd1878, %rd1877, %rd1788;
	add.s64 	%rd1879, %rd1878, %rd1876;
	shf.r.wrap.b32 	%r3164, %r3039, %r3038, 1;
	shf.r.wrap.b32 	%r3165, %r3038, %r3039, 1;
	mov.b64 	%rd1880, {%r3165, %r3164};
	shf.r.wrap.b32 	%r3166, %r3039, %r3038, 8;
	shf.r.wrap.b32 	%r3167, %r3038, %r3039, 8;
	mov.b64 	%rd1881, {%r3167, %r3166};
	xor.b64  	%rd1882, %rd1880, %rd1881;
	shr.u64 	%rd1883, %rd1697, 7;
	xor.b64  	%rd1884, %rd1882, %rd1883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3168,%dummy}, %rd1866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3169}, %rd1866;
	}
	shf.r.wrap.b32 	%r3170, %r3169, %r3168, 19;
	shf.r.wrap.b32 	%r3171, %r3168, %r3169, 19;
	mov.b64 	%rd1885, {%r3171, %r3170};
	shf.l.wrap.b32 	%r3172, %r3168, %r3169, 3;
	shf.l.wrap.b32 	%r3173, %r3169, %r3168, 3;
	mov.b64 	%rd1886, {%r3173, %r3172};
	xor.b64  	%rd1887, %rd1885, %rd1886;
	shr.u64 	%rd1888, %rd1866, 6;
	xor.b64  	%rd1889, %rd1887, %rd1888;
	add.s64 	%rd1890, %rd1884, %rd1684;
	add.s64 	%rd1891, %rd1890, %rd1801;
	add.s64 	%rd1892, %rd1891, %rd1889;
	shf.r.wrap.b32 	%r3174, %r3049, %r3048, 1;
	shf.r.wrap.b32 	%r3175, %r3048, %r3049, 1;
	mov.b64 	%rd1893, {%r3175, %r3174};
	shf.r.wrap.b32 	%r3176, %r3049, %r3048, 8;
	shf.r.wrap.b32 	%r3177, %r3048, %r3049, 8;
	mov.b64 	%rd1894, {%r3177, %r3176};
	xor.b64  	%rd1895, %rd1893, %rd1894;
	shr.u64 	%rd1896, %rd1710, 7;
	xor.b64  	%rd1897, %rd1895, %rd1896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3178,%dummy}, %rd1879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3179}, %rd1879;
	}
	shf.r.wrap.b32 	%r3180, %r3179, %r3178, 19;
	shf.r.wrap.b32 	%r3181, %r3178, %r3179, 19;
	mov.b64 	%rd1898, {%r3181, %r3180};
	shf.l.wrap.b32 	%r3182, %r3178, %r3179, 3;
	shf.l.wrap.b32 	%r3183, %r3179, %r3178, 3;
	mov.b64 	%rd1899, {%r3183, %r3182};
	xor.b64  	%rd1900, %rd1898, %rd1899;
	shr.u64 	%rd1901, %rd1879, 6;
	xor.b64  	%rd1902, %rd1900, %rd1901;
	add.s64 	%rd1903, %rd1897, %rd1697;
	add.s64 	%rd1904, %rd1903, %rd1814;
	add.s64 	%rd1905, %rd1904, %rd1902;
	shf.r.wrap.b32 	%r3184, %r3059, %r3058, 1;
	shf.r.wrap.b32 	%r3185, %r3058, %r3059, 1;
	mov.b64 	%rd1906, {%r3185, %r3184};
	shf.r.wrap.b32 	%r3186, %r3059, %r3058, 8;
	shf.r.wrap.b32 	%r3187, %r3058, %r3059, 8;
	mov.b64 	%rd1907, {%r3187, %r3186};
	xor.b64  	%rd1908, %rd1906, %rd1907;
	shr.u64 	%rd1909, %rd1723, 7;
	xor.b64  	%rd1910, %rd1908, %rd1909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3188,%dummy}, %rd1892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3189}, %rd1892;
	}
	shf.r.wrap.b32 	%r3190, %r3189, %r3188, 19;
	shf.r.wrap.b32 	%r3191, %r3188, %r3189, 19;
	mov.b64 	%rd1911, {%r3191, %r3190};
	shf.l.wrap.b32 	%r3192, %r3188, %r3189, 3;
	shf.l.wrap.b32 	%r3193, %r3189, %r3188, 3;
	mov.b64 	%rd1912, {%r3193, %r3192};
	xor.b64  	%rd1913, %rd1911, %rd1912;
	shr.u64 	%rd1914, %rd1892, 6;
	xor.b64  	%rd1915, %rd1913, %rd1914;
	add.s64 	%rd1916, %rd1910, %rd1710;
	add.s64 	%rd1917, %rd1916, %rd1827;
	add.s64 	%rd1918, %rd1917, %rd1915;
	shf.r.wrap.b32 	%r3194, %r3069, %r3068, 1;
	shf.r.wrap.b32 	%r3195, %r3068, %r3069, 1;
	mov.b64 	%rd1919, {%r3195, %r3194};
	shf.r.wrap.b32 	%r3196, %r3069, %r3068, 8;
	shf.r.wrap.b32 	%r3197, %r3068, %r3069, 8;
	mov.b64 	%rd1920, {%r3197, %r3196};
	xor.b64  	%rd1921, %rd1919, %rd1920;
	shr.u64 	%rd1922, %rd1736, 7;
	xor.b64  	%rd1923, %rd1921, %rd1922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3198,%dummy}, %rd1905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3199}, %rd1905;
	}
	shf.r.wrap.b32 	%r3200, %r3199, %r3198, 19;
	shf.r.wrap.b32 	%r3201, %r3198, %r3199, 19;
	mov.b64 	%rd1924, {%r3201, %r3200};
	shf.l.wrap.b32 	%r3202, %r3198, %r3199, 3;
	shf.l.wrap.b32 	%r3203, %r3199, %r3198, 3;
	mov.b64 	%rd1925, {%r3203, %r3202};
	xor.b64  	%rd1926, %rd1924, %rd1925;
	shr.u64 	%rd1927, %rd1905, 6;
	xor.b64  	%rd1928, %rd1926, %rd1927;
	add.s64 	%rd1929, %rd1923, %rd1723;
	add.s64 	%rd1930, %rd1929, %rd1840;
	add.s64 	%rd1931, %rd1930, %rd1928;
	shf.r.wrap.b32 	%r3204, %r3079, %r3078, 1;
	shf.r.wrap.b32 	%r3205, %r3078, %r3079, 1;
	mov.b64 	%rd1932, {%r3205, %r3204};
	shf.r.wrap.b32 	%r3206, %r3079, %r3078, 8;
	shf.r.wrap.b32 	%r3207, %r3078, %r3079, 8;
	mov.b64 	%rd1933, {%r3207, %r3206};
	xor.b64  	%rd1934, %rd1932, %rd1933;
	shr.u64 	%rd1935, %rd1749, 7;
	xor.b64  	%rd1936, %rd1934, %rd1935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3208,%dummy}, %rd1918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3209}, %rd1918;
	}
	shf.r.wrap.b32 	%r3210, %r3209, %r3208, 19;
	shf.r.wrap.b32 	%r3211, %r3208, %r3209, 19;
	mov.b64 	%rd1937, {%r3211, %r3210};
	shf.l.wrap.b32 	%r3212, %r3208, %r3209, 3;
	shf.l.wrap.b32 	%r3213, %r3209, %r3208, 3;
	mov.b64 	%rd1938, {%r3213, %r3212};
	xor.b64  	%rd1939, %rd1937, %rd1938;
	shr.u64 	%rd1940, %rd1918, 6;
	xor.b64  	%rd1941, %rd1939, %rd1940;
	add.s64 	%rd1942, %rd1936, %rd1736;
	add.s64 	%rd1943, %rd1942, %rd1853;
	add.s64 	%rd1944, %rd1943, %rd1941;
	shf.r.wrap.b32 	%r3214, %r3089, %r3088, 1;
	shf.r.wrap.b32 	%r3215, %r3088, %r3089, 1;
	mov.b64 	%rd1945, {%r3215, %r3214};
	shf.r.wrap.b32 	%r3216, %r3089, %r3088, 8;
	shf.r.wrap.b32 	%r3217, %r3088, %r3089, 8;
	mov.b64 	%rd1946, {%r3217, %r3216};
	xor.b64  	%rd1947, %rd1945, %rd1946;
	shr.u64 	%rd1948, %rd1762, 7;
	xor.b64  	%rd1949, %rd1947, %rd1948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3218,%dummy}, %rd1931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3219}, %rd1931;
	}
	shf.r.wrap.b32 	%r3220, %r3219, %r3218, 19;
	shf.r.wrap.b32 	%r3221, %r3218, %r3219, 19;
	mov.b64 	%rd1950, {%r3221, %r3220};
	shf.l.wrap.b32 	%r3222, %r3218, %r3219, 3;
	shf.l.wrap.b32 	%r3223, %r3219, %r3218, 3;
	mov.b64 	%rd1951, {%r3223, %r3222};
	xor.b64  	%rd1952, %rd1950, %rd1951;
	shr.u64 	%rd1953, %rd1931, 6;
	xor.b64  	%rd1954, %rd1952, %rd1953;
	add.s64 	%rd1955, %rd1949, %rd1749;
	add.s64 	%rd1956, %rd1955, %rd1866;
	add.s64 	%rd1957, %rd1956, %rd1954;
	shf.r.wrap.b32 	%r3224, %r3099, %r3098, 1;
	shf.r.wrap.b32 	%r3225, %r3098, %r3099, 1;
	mov.b64 	%rd1958, {%r3225, %r3224};
	shf.r.wrap.b32 	%r3226, %r3099, %r3098, 8;
	shf.r.wrap.b32 	%r3227, %r3098, %r3099, 8;
	mov.b64 	%rd1959, {%r3227, %r3226};
	xor.b64  	%rd1960, %rd1958, %rd1959;
	shr.u64 	%rd1961, %rd1775, 7;
	xor.b64  	%rd1962, %rd1960, %rd1961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3228,%dummy}, %rd1944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3229}, %rd1944;
	}
	shf.r.wrap.b32 	%r3230, %r3229, %r3228, 19;
	shf.r.wrap.b32 	%r3231, %r3228, %r3229, 19;
	mov.b64 	%rd1963, {%r3231, %r3230};
	shf.l.wrap.b32 	%r3232, %r3228, %r3229, 3;
	shf.l.wrap.b32 	%r3233, %r3229, %r3228, 3;
	mov.b64 	%rd1964, {%r3233, %r3232};
	xor.b64  	%rd1965, %rd1963, %rd1964;
	shr.u64 	%rd1966, %rd1944, 6;
	xor.b64  	%rd1967, %rd1965, %rd1966;
	add.s64 	%rd1968, %rd1962, %rd1762;
	add.s64 	%rd1969, %rd1968, %rd1879;
	add.s64 	%rd1970, %rd1969, %rd1967;
	shf.r.wrap.b32 	%r3234, %r3109, %r3108, 1;
	shf.r.wrap.b32 	%r3235, %r3108, %r3109, 1;
	mov.b64 	%rd1971, {%r3235, %r3234};
	shf.r.wrap.b32 	%r3236, %r3109, %r3108, 8;
	shf.r.wrap.b32 	%r3237, %r3108, %r3109, 8;
	mov.b64 	%rd1972, {%r3237, %r3236};
	xor.b64  	%rd1973, %rd1971, %rd1972;
	shr.u64 	%rd1974, %rd1788, 7;
	xor.b64  	%rd1975, %rd1973, %rd1974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3238,%dummy}, %rd1957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3239}, %rd1957;
	}
	shf.r.wrap.b32 	%r3240, %r3239, %r3238, 19;
	shf.r.wrap.b32 	%r3241, %r3238, %r3239, 19;
	mov.b64 	%rd1976, {%r3241, %r3240};
	shf.l.wrap.b32 	%r3242, %r3238, %r3239, 3;
	shf.l.wrap.b32 	%r3243, %r3239, %r3238, 3;
	mov.b64 	%rd1977, {%r3243, %r3242};
	xor.b64  	%rd1978, %rd1976, %rd1977;
	shr.u64 	%rd1979, %rd1957, 6;
	xor.b64  	%rd1980, %rd1978, %rd1979;
	add.s64 	%rd1981, %rd1975, %rd1775;
	add.s64 	%rd1982, %rd1981, %rd1892;
	add.s64 	%rd1983, %rd1982, %rd1980;
	shf.r.wrap.b32 	%r3244, %r3119, %r3118, 1;
	shf.r.wrap.b32 	%r3245, %r3118, %r3119, 1;
	mov.b64 	%rd1984, {%r3245, %r3244};
	shf.r.wrap.b32 	%r3246, %r3119, %r3118, 8;
	shf.r.wrap.b32 	%r3247, %r3118, %r3119, 8;
	mov.b64 	%rd1985, {%r3247, %r3246};
	xor.b64  	%rd1986, %rd1984, %rd1985;
	shr.u64 	%rd1987, %rd1801, 7;
	xor.b64  	%rd1988, %rd1986, %rd1987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3248,%dummy}, %rd1970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3249}, %rd1970;
	}
	shf.r.wrap.b32 	%r3250, %r3249, %r3248, 19;
	shf.r.wrap.b32 	%r3251, %r3248, %r3249, 19;
	mov.b64 	%rd1989, {%r3251, %r3250};
	shf.l.wrap.b32 	%r3252, %r3248, %r3249, 3;
	shf.l.wrap.b32 	%r3253, %r3249, %r3248, 3;
	mov.b64 	%rd1990, {%r3253, %r3252};
	xor.b64  	%rd1991, %rd1989, %rd1990;
	shr.u64 	%rd1992, %rd1970, 6;
	xor.b64  	%rd1993, %rd1991, %rd1992;
	add.s64 	%rd1994, %rd1988, %rd1788;
	add.s64 	%rd1995, %rd1994, %rd1905;
	add.s64 	%rd1996, %rd1995, %rd1993;
	shf.r.wrap.b32 	%r3254, %r3129, %r3128, 1;
	shf.r.wrap.b32 	%r3255, %r3128, %r3129, 1;
	mov.b64 	%rd1997, {%r3255, %r3254};
	shf.r.wrap.b32 	%r3256, %r3129, %r3128, 8;
	shf.r.wrap.b32 	%r3257, %r3128, %r3129, 8;
	mov.b64 	%rd1998, {%r3257, %r3256};
	xor.b64  	%rd1999, %rd1997, %rd1998;
	shr.u64 	%rd2000, %rd1814, 7;
	xor.b64  	%rd2001, %rd1999, %rd2000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3258,%dummy}, %rd1983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3259}, %rd1983;
	}
	shf.r.wrap.b32 	%r3260, %r3259, %r3258, 19;
	shf.r.wrap.b32 	%r3261, %r3258, %r3259, 19;
	mov.b64 	%rd2002, {%r3261, %r3260};
	shf.l.wrap.b32 	%r3262, %r3258, %r3259, 3;
	shf.l.wrap.b32 	%r3263, %r3259, %r3258, 3;
	mov.b64 	%rd2003, {%r3263, %r3262};
	xor.b64  	%rd2004, %rd2002, %rd2003;
	shr.u64 	%rd2005, %rd1983, 6;
	xor.b64  	%rd2006, %rd2004, %rd2005;
	add.s64 	%rd2007, %rd2001, %rd1801;
	add.s64 	%rd2008, %rd2007, %rd1918;
	add.s64 	%rd2009, %rd2008, %rd2006;
	shf.r.wrap.b32 	%r3264, %r3139, %r3138, 1;
	shf.r.wrap.b32 	%r3265, %r3138, %r3139, 1;
	mov.b64 	%rd2010, {%r3265, %r3264};
	shf.r.wrap.b32 	%r3266, %r3139, %r3138, 8;
	shf.r.wrap.b32 	%r3267, %r3138, %r3139, 8;
	mov.b64 	%rd2011, {%r3267, %r3266};
	xor.b64  	%rd2012, %rd2010, %rd2011;
	shr.u64 	%rd2013, %rd1827, 7;
	xor.b64  	%rd2014, %rd2012, %rd2013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3268,%dummy}, %rd1996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3269}, %rd1996;
	}
	shf.r.wrap.b32 	%r3270, %r3269, %r3268, 19;
	shf.r.wrap.b32 	%r3271, %r3268, %r3269, 19;
	mov.b64 	%rd2015, {%r3271, %r3270};
	shf.l.wrap.b32 	%r3272, %r3268, %r3269, 3;
	shf.l.wrap.b32 	%r3273, %r3269, %r3268, 3;
	mov.b64 	%rd2016, {%r3273, %r3272};
	xor.b64  	%rd2017, %rd2015, %rd2016;
	shr.u64 	%rd2018, %rd1996, 6;
	xor.b64  	%rd2019, %rd2017, %rd2018;
	add.s64 	%rd2020, %rd2014, %rd1814;
	add.s64 	%rd2021, %rd2020, %rd1931;
	add.s64 	%rd2022, %rd2021, %rd2019;
	shf.r.wrap.b32 	%r3274, %r3149, %r3148, 1;
	shf.r.wrap.b32 	%r3275, %r3148, %r3149, 1;
	mov.b64 	%rd2023, {%r3275, %r3274};
	shf.r.wrap.b32 	%r3276, %r3149, %r3148, 8;
	shf.r.wrap.b32 	%r3277, %r3148, %r3149, 8;
	mov.b64 	%rd2024, {%r3277, %r3276};
	xor.b64  	%rd2025, %rd2023, %rd2024;
	shr.u64 	%rd2026, %rd1840, 7;
	xor.b64  	%rd2027, %rd2025, %rd2026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3278,%dummy}, %rd2009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3279}, %rd2009;
	}
	shf.r.wrap.b32 	%r3280, %r3279, %r3278, 19;
	shf.r.wrap.b32 	%r3281, %r3278, %r3279, 19;
	mov.b64 	%rd2028, {%r3281, %r3280};
	shf.l.wrap.b32 	%r3282, %r3278, %r3279, 3;
	shf.l.wrap.b32 	%r3283, %r3279, %r3278, 3;
	mov.b64 	%rd2029, {%r3283, %r3282};
	xor.b64  	%rd2030, %rd2028, %rd2029;
	shr.u64 	%rd2031, %rd2009, 6;
	xor.b64  	%rd2032, %rd2030, %rd2031;
	add.s64 	%rd2033, %rd2027, %rd1827;
	add.s64 	%rd2034, %rd2033, %rd1944;
	add.s64 	%rd2035, %rd2034, %rd2032;
	shf.r.wrap.b32 	%r3284, %r3159, %r3158, 1;
	shf.r.wrap.b32 	%r3285, %r3158, %r3159, 1;
	mov.b64 	%rd2036, {%r3285, %r3284};
	shf.r.wrap.b32 	%r3286, %r3159, %r3158, 8;
	shf.r.wrap.b32 	%r3287, %r3158, %r3159, 8;
	mov.b64 	%rd2037, {%r3287, %r3286};
	xor.b64  	%rd2038, %rd2036, %rd2037;
	shr.u64 	%rd2039, %rd1853, 7;
	xor.b64  	%rd2040, %rd2038, %rd2039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3288,%dummy}, %rd2022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3289}, %rd2022;
	}
	shf.r.wrap.b32 	%r3290, %r3289, %r3288, 19;
	shf.r.wrap.b32 	%r3291, %r3288, %r3289, 19;
	mov.b64 	%rd2041, {%r3291, %r3290};
	shf.l.wrap.b32 	%r3292, %r3288, %r3289, 3;
	shf.l.wrap.b32 	%r3293, %r3289, %r3288, 3;
	mov.b64 	%rd2042, {%r3293, %r3292};
	xor.b64  	%rd2043, %rd2041, %rd2042;
	shr.u64 	%rd2044, %rd2022, 6;
	xor.b64  	%rd2045, %rd2043, %rd2044;
	add.s64 	%rd2046, %rd2040, %rd1840;
	add.s64 	%rd2047, %rd2046, %rd1957;
	add.s64 	%rd2048, %rd2047, %rd2045;
	shf.r.wrap.b32 	%r3294, %r3169, %r3168, 1;
	shf.r.wrap.b32 	%r3295, %r3168, %r3169, 1;
	mov.b64 	%rd2049, {%r3295, %r3294};
	shf.r.wrap.b32 	%r3296, %r3169, %r3168, 8;
	shf.r.wrap.b32 	%r3297, %r3168, %r3169, 8;
	mov.b64 	%rd2050, {%r3297, %r3296};
	xor.b64  	%rd2051, %rd2049, %rd2050;
	shr.u64 	%rd2052, %rd1866, 7;
	xor.b64  	%rd2053, %rd2051, %rd2052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3298,%dummy}, %rd2035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3299}, %rd2035;
	}
	shf.r.wrap.b32 	%r3300, %r3299, %r3298, 19;
	shf.r.wrap.b32 	%r3301, %r3298, %r3299, 19;
	mov.b64 	%rd2054, {%r3301, %r3300};
	shf.l.wrap.b32 	%r3302, %r3298, %r3299, 3;
	shf.l.wrap.b32 	%r3303, %r3299, %r3298, 3;
	mov.b64 	%rd2055, {%r3303, %r3302};
	xor.b64  	%rd2056, %rd2054, %rd2055;
	shr.u64 	%rd2057, %rd2035, 6;
	xor.b64  	%rd2058, %rd2056, %rd2057;
	add.s64 	%rd2059, %rd2053, %rd1853;
	add.s64 	%rd2060, %rd2059, %rd1970;
	add.s64 	%rd2061, %rd2060, %rd2058;
	shf.r.wrap.b32 	%r3304, %r3179, %r3178, 1;
	shf.r.wrap.b32 	%r3305, %r3178, %r3179, 1;
	mov.b64 	%rd2062, {%r3305, %r3304};
	shf.r.wrap.b32 	%r3306, %r3179, %r3178, 8;
	shf.r.wrap.b32 	%r3307, %r3178, %r3179, 8;
	mov.b64 	%rd2063, {%r3307, %r3306};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	shr.u64 	%rd2065, %rd1879, 7;
	xor.b64  	%rd2066, %rd2064, %rd2065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3308,%dummy}, %rd2048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3309}, %rd2048;
	}
	shf.r.wrap.b32 	%r3310, %r3309, %r3308, 19;
	shf.r.wrap.b32 	%r3311, %r3308, %r3309, 19;
	mov.b64 	%rd2067, {%r3311, %r3310};
	shf.l.wrap.b32 	%r3312, %r3308, %r3309, 3;
	shf.l.wrap.b32 	%r3313, %r3309, %r3308, 3;
	mov.b64 	%rd2068, {%r3313, %r3312};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	shr.u64 	%rd2070, %rd2048, 6;
	xor.b64  	%rd2071, %rd2069, %rd2070;
	add.s64 	%rd2072, %rd2066, %rd1866;
	add.s64 	%rd2073, %rd2072, %rd1983;
	add.s64 	%rd2074, %rd2073, %rd2071;
	add.s64 	%rd2075, %rd40, %rd942;
	add.s64 	%rd2076, %rd2075, -6534734903238641935;
	add.s64 	%rd2077, %rd120, %rd2075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3314,%dummy}, %rd2076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3315}, %rd2076;
	}
	shf.r.wrap.b32 	%r3316, %r3315, %r3314, 14;
	shf.r.wrap.b32 	%r3317, %r3314, %r3315, 14;
	mov.b64 	%rd2078, {%r3317, %r3316};
	shf.r.wrap.b32 	%r3318, %r3315, %r3314, 18;
	shf.r.wrap.b32 	%r3319, %r3314, %r3315, 18;
	mov.b64 	%rd2079, {%r3319, %r3318};
	xor.b64  	%rd2080, %rd2078, %rd2079;
	shf.l.wrap.b32 	%r3320, %r3314, %r3315, 23;
	shf.l.wrap.b32 	%r3321, %r3315, %r3314, 23;
	mov.b64 	%rd2081, {%r3321, %r3320};
	xor.b64  	%rd2082, %rd2080, %rd2081;
	and.b64  	%rd2083, %rd2076, 5840696475078001361;
	mov.u64 	%rd2084, 6534734903238641934;
	sub.s64 	%rd2085, %rd2084, %rd2075;
	and.b64  	%rd2086, %rd2085, -7276294671716946913;
	or.b64  	%rd2087, %rd2083, %rd2086;
	add.s64 	%rd2088, %rd2087, %rd2082;
	add.s64 	%rd2089, %rd2088, %rd41;
	add.s64 	%rd2090, %rd2089, %rd962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3322,%dummy}, %rd2077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3323}, %rd2077;
	}
	shf.r.wrap.b32 	%r3324, %r3323, %r3322, 28;
	shf.r.wrap.b32 	%r3325, %r3322, %r3323, 28;
	mov.b64 	%rd2091, {%r3325, %r3324};
	shf.l.wrap.b32 	%r3326, %r3322, %r3323, 30;
	shf.l.wrap.b32 	%r3327, %r3323, %r3322, 30;
	mov.b64 	%rd2092, {%r3327, %r3326};
	xor.b64  	%rd2093, %rd2091, %rd2092;
	shf.l.wrap.b32 	%r3328, %r3322, %r3323, 25;
	shf.l.wrap.b32 	%r3329, %r3323, %r3322, 25;
	mov.b64 	%rd2094, {%r3329, %r3328};
	xor.b64  	%rd2095, %rd2093, %rd2094;
	and.b64  	%rd2096, %rd2077, -3355664534840381901;
	or.b64  	%rd2097, %rd2096, 3026882967131160840;
	add.s64 	%rd2098, %rd2095, %rd2097;
	add.s64 	%rd2099, %rd2098, %rd2090;
	add.s64 	%rd2100, %rd2090, 6625583534739731862;
	add.s64 	%rd2101, %rd2099, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3330,%dummy}, %rd2100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3331}, %rd2100;
	}
	shf.r.wrap.b32 	%r3332, %r3331, %r3330, 14;
	shf.r.wrap.b32 	%r3333, %r3330, %r3331, 14;
	mov.b64 	%rd2102, {%r3333, %r3332};
	shf.r.wrap.b32 	%r3334, %r3331, %r3330, 18;
	shf.r.wrap.b32 	%r3335, %r3330, %r3331, 18;
	mov.b64 	%rd2103, {%r3335, %r3334};
	xor.b64  	%rd2104, %rd2102, %rd2103;
	shf.l.wrap.b32 	%r3336, %r3330, %r3331, 23;
	shf.l.wrap.b32 	%r3337, %r3331, %r3330, 23;
	mov.b64 	%rd2105, {%r3337, %r3336};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	and.b64  	%rd2107, %rd2100, %rd2076;
	mov.u64 	%rd2108, 2597788502115043945;
	sub.s64 	%rd2109, %rd2108, %rd2090;
	and.b64  	%rd2110, %rd2109, 5840696475078001361;
	or.b64  	%rd2111, %rd2107, %rd2110;
	add.s64 	%rd2112, %rd2111, %rd2106;
	add.s64 	%rd2113, %rd2112, %rd42;
	add.s64 	%rd2114, %rd2113, %rd982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3338,%dummy}, %rd2101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3339}, %rd2101;
	}
	shf.r.wrap.b32 	%r3340, %r3339, %r3338, 28;
	shf.r.wrap.b32 	%r3341, %r3338, %r3339, 28;
	mov.b64 	%rd2115, {%r3341, %r3340};
	shf.l.wrap.b32 	%r3342, %r3338, %r3339, 30;
	shf.l.wrap.b32 	%r3343, %r3339, %r3338, 30;
	mov.b64 	%rd2116, {%r3343, %r3342};
	xor.b64  	%rd2117, %rd2115, %rd2116;
	shf.l.wrap.b32 	%r3344, %r3338, %r3339, 25;
	shf.l.wrap.b32 	%r3345, %r3339, %r3338, 25;
	mov.b64 	%rd2118, {%r3345, %r3344};
	xor.b64  	%rd2119, %rd2117, %rd2118;
	xor.b64  	%rd2120, %rd2077, 7640891576956012808;
	and.b64  	%rd2121, %rd2101, %rd2120;
	and.b64  	%rd2122, %rd2077, 7640891576956012808;
	xor.b64  	%rd2123, %rd2121, %rd2122;
	add.s64 	%rd2124, %rd2119, %rd2123;
	add.s64 	%rd2125, %rd2124, %rd2114;
	add.s64 	%rd2126, %rd2114, 6227659224458531674;
	add.s64 	%rd2127, %rd2125, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3346,%dummy}, %rd2126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3347}, %rd2126;
	}
	shf.r.wrap.b32 	%r3348, %r3347, %r3346, 14;
	shf.r.wrap.b32 	%r3349, %r3346, %r3347, 14;
	mov.b64 	%rd2128, {%r3349, %r3348};
	shf.r.wrap.b32 	%r3350, %r3347, %r3346, 18;
	shf.r.wrap.b32 	%r3351, %r3346, %r3347, 18;
	mov.b64 	%rd2129, {%r3351, %r3350};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	shf.l.wrap.b32 	%r3352, %r3346, %r3347, 23;
	shf.l.wrap.b32 	%r3353, %r3347, %r3346, 23;
	mov.b64 	%rd2131, {%r3353, %r3352};
	xor.b64  	%rd2132, %rd2130, %rd2131;
	and.b64  	%rd2133, %rd2126, %rd2100;
	mov.u64 	%rd2134, -6227659224458531675;
	sub.s64 	%rd2135, %rd2134, %rd2114;
	and.b64  	%rd2136, %rd2076, %rd2135;
	or.b64  	%rd2137, %rd2133, %rd2136;
	add.s64 	%rd2138, %rd2137, %rd2132;
	add.s64 	%rd2139, %rd2138, %rd43;
	add.s64 	%rd2140, %rd2139, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3354,%dummy}, %rd2127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3355}, %rd2127;
	}
	shf.r.wrap.b32 	%r3356, %r3355, %r3354, 28;
	shf.r.wrap.b32 	%r3357, %r3354, %r3355, 28;
	mov.b64 	%rd2141, {%r3357, %r3356};
	shf.l.wrap.b32 	%r3358, %r3354, %r3355, 30;
	shf.l.wrap.b32 	%r3359, %r3355, %r3354, 30;
	mov.b64 	%rd2142, {%r3359, %r3358};
	xor.b64  	%rd2143, %rd2141, %rd2142;
	shf.l.wrap.b32 	%r3360, %r3354, %r3355, 25;
	shf.l.wrap.b32 	%r3361, %r3355, %r3354, 25;
	mov.b64 	%rd2144, {%r3361, %r3360};
	xor.b64  	%rd2145, %rd2143, %rd2144;
	xor.b64  	%rd2146, %rd2101, %rd2077;
	and.b64  	%rd2147, %rd2127, %rd2146;
	and.b64  	%rd2148, %rd2101, %rd2077;
	xor.b64  	%rd2149, %rd2147, %rd2148;
	add.s64 	%rd2150, %rd2145, %rd2149;
	add.s64 	%rd2151, %rd2150, %rd2140;
	add.s64 	%rd2152, %rd2140, -4965156021675537447;
	add.s64 	%rd2153, %rd2151, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3362,%dummy}, %rd2152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3363}, %rd2152;
	}
	shf.r.wrap.b32 	%r3364, %r3363, %r3362, 14;
	shf.r.wrap.b32 	%r3365, %r3362, %r3363, 14;
	mov.b64 	%rd2154, {%r3365, %r3364};
	shf.r.wrap.b32 	%r3366, %r3363, %r3362, 18;
	shf.r.wrap.b32 	%r3367, %r3362, %r3363, 18;
	mov.b64 	%rd2155, {%r3367, %r3366};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	shf.l.wrap.b32 	%r3368, %r3362, %r3363, 23;
	shf.l.wrap.b32 	%r3369, %r3363, %r3362, 23;
	mov.b64 	%rd2157, {%r3369, %r3368};
	xor.b64  	%rd2158, %rd2156, %rd2157;
	and.b64  	%rd2159, %rd2152, %rd2126;
	mov.u64 	%rd2160, 4965156021675537446;
	sub.s64 	%rd2161, %rd2160, %rd2140;
	and.b64  	%rd2162, %rd2100, %rd2161;
	or.b64  	%rd2163, %rd2159, %rd2162;
	add.s64 	%rd2164, %rd2163, %rd2076;
	add.s64 	%rd2165, %rd2164, %rd2158;
	add.s64 	%rd2166, %rd2165, %rd44;
	add.s64 	%rd2167, %rd2166, %rd1022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3370,%dummy}, %rd2153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3371}, %rd2153;
	}
	shf.r.wrap.b32 	%r3372, %r3371, %r3370, 28;
	shf.r.wrap.b32 	%r3373, %r3370, %r3371, 28;
	mov.b64 	%rd2168, {%r3373, %r3372};
	shf.l.wrap.b32 	%r3374, %r3370, %r3371, 30;
	shf.l.wrap.b32 	%r3375, %r3371, %r3370, 30;
	mov.b64 	%rd2169, {%r3375, %r3374};
	xor.b64  	%rd2170, %rd2168, %rd2169;
	shf.l.wrap.b32 	%r3376, %r3370, %r3371, 25;
	shf.l.wrap.b32 	%r3377, %r3371, %r3370, 25;
	mov.b64 	%rd2171, {%r3377, %r3376};
	xor.b64  	%rd2172, %rd2170, %rd2171;
	xor.b64  	%rd2173, %rd2127, %rd2101;
	and.b64  	%rd2174, %rd2153, %rd2173;
	and.b64  	%rd2175, %rd2127, %rd2101;
	xor.b64  	%rd2176, %rd2174, %rd2175;
	add.s64 	%rd2177, %rd2172, %rd2176;
	add.s64 	%rd2178, %rd2167, %rd2077;
	add.s64 	%rd2179, %rd2177, %rd2167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3378,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3379}, %rd2178;
	}
	shf.r.wrap.b32 	%r3380, %r3379, %r3378, 14;
	shf.r.wrap.b32 	%r3381, %r3378, %r3379, 14;
	mov.b64 	%rd2180, {%r3381, %r3380};
	shf.r.wrap.b32 	%r3382, %r3379, %r3378, 18;
	shf.r.wrap.b32 	%r3383, %r3378, %r3379, 18;
	mov.b64 	%rd2181, {%r3383, %r3382};
	xor.b64  	%rd2182, %rd2180, %rd2181;
	shf.l.wrap.b32 	%r3384, %r3378, %r3379, 23;
	shf.l.wrap.b32 	%r3385, %r3379, %r3378, 23;
	mov.b64 	%rd2183, {%r3385, %r3384};
	xor.b64  	%rd2184, %rd2182, %rd2183;
	and.b64  	%rd2185, %rd2178, %rd2152;
	not.b64 	%rd2186, %rd2178;
	and.b64  	%rd2187, %rd2126, %rd2186;
	or.b64  	%rd2188, %rd2185, %rd2187;
	add.s64 	%rd2189, %rd2188, %rd2100;
	add.s64 	%rd2190, %rd2189, %rd2184;
	add.s64 	%rd2191, %rd2190, %rd45;
	add.s64 	%rd2192, %rd2191, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3386,%dummy}, %rd2179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3387}, %rd2179;
	}
	shf.r.wrap.b32 	%r3388, %r3387, %r3386, 28;
	shf.r.wrap.b32 	%r3389, %r3386, %r3387, 28;
	mov.b64 	%rd2193, {%r3389, %r3388};
	shf.l.wrap.b32 	%r3390, %r3386, %r3387, 30;
	shf.l.wrap.b32 	%r3391, %r3387, %r3386, 30;
	mov.b64 	%rd2194, {%r3391, %r3390};
	xor.b64  	%rd2195, %rd2193, %rd2194;
	shf.l.wrap.b32 	%r3392, %r3386, %r3387, 25;
	shf.l.wrap.b32 	%r3393, %r3387, %r3386, 25;
	mov.b64 	%rd2196, {%r3393, %r3392};
	xor.b64  	%rd2197, %rd2195, %rd2196;
	xor.b64  	%rd2198, %rd2153, %rd2127;
	and.b64  	%rd2199, %rd2179, %rd2198;
	and.b64  	%rd2200, %rd2153, %rd2127;
	xor.b64  	%rd2201, %rd2199, %rd2200;
	add.s64 	%rd2202, %rd2197, %rd2201;
	add.s64 	%rd2203, %rd2192, %rd2101;
	add.s64 	%rd2204, %rd2202, %rd2192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3394,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3395}, %rd2203;
	}
	shf.r.wrap.b32 	%r3396, %r3395, %r3394, 14;
	shf.r.wrap.b32 	%r3397, %r3394, %r3395, 14;
	mov.b64 	%rd2205, {%r3397, %r3396};
	shf.r.wrap.b32 	%r3398, %r3395, %r3394, 18;
	shf.r.wrap.b32 	%r3399, %r3394, %r3395, 18;
	mov.b64 	%rd2206, {%r3399, %r3398};
	xor.b64  	%rd2207, %rd2205, %rd2206;
	shf.l.wrap.b32 	%r3400, %r3394, %r3395, 23;
	shf.l.wrap.b32 	%r3401, %r3395, %r3394, 23;
	mov.b64 	%rd2208, {%r3401, %r3400};
	xor.b64  	%rd2209, %rd2207, %rd2208;
	and.b64  	%rd2210, %rd2203, %rd2178;
	not.b64 	%rd2211, %rd2203;
	and.b64  	%rd2212, %rd2152, %rd2211;
	or.b64  	%rd2213, %rd2210, %rd2212;
	add.s64 	%rd2214, %rd2213, %rd2126;
	add.s64 	%rd2215, %rd2214, %rd2209;
	add.s64 	%rd2216, %rd2215, %rd46;
	add.s64 	%rd2217, %rd2216, %rd1062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3402,%dummy}, %rd2204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3403}, %rd2204;
	}
	shf.r.wrap.b32 	%r3404, %r3403, %r3402, 28;
	shf.r.wrap.b32 	%r3405, %r3402, %r3403, 28;
	mov.b64 	%rd2218, {%r3405, %r3404};
	shf.l.wrap.b32 	%r3406, %r3402, %r3403, 30;
	shf.l.wrap.b32 	%r3407, %r3403, %r3402, 30;
	mov.b64 	%rd2219, {%r3407, %r3406};
	xor.b64  	%rd2220, %rd2218, %rd2219;
	shf.l.wrap.b32 	%r3408, %r3402, %r3403, 25;
	shf.l.wrap.b32 	%r3409, %r3403, %r3402, 25;
	mov.b64 	%rd2221, {%r3409, %r3408};
	xor.b64  	%rd2222, %rd2220, %rd2221;
	xor.b64  	%rd2223, %rd2179, %rd2153;
	and.b64  	%rd2224, %rd2204, %rd2223;
	and.b64  	%rd2225, %rd2179, %rd2153;
	xor.b64  	%rd2226, %rd2224, %rd2225;
	add.s64 	%rd2227, %rd2222, %rd2226;
	add.s64 	%rd2228, %rd2217, %rd2127;
	add.s64 	%rd2229, %rd2227, %rd2217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3410,%dummy}, %rd2228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3411}, %rd2228;
	}
	shf.r.wrap.b32 	%r3412, %r3411, %r3410, 14;
	shf.r.wrap.b32 	%r3413, %r3410, %r3411, 14;
	mov.b64 	%rd2230, {%r3413, %r3412};
	shf.r.wrap.b32 	%r3414, %r3411, %r3410, 18;
	shf.r.wrap.b32 	%r3415, %r3410, %r3411, 18;
	mov.b64 	%rd2231, {%r3415, %r3414};
	xor.b64  	%rd2232, %rd2230, %rd2231;
	shf.l.wrap.b32 	%r3416, %r3410, %r3411, 23;
	shf.l.wrap.b32 	%r3417, %r3411, %r3410, 23;
	mov.b64 	%rd2233, {%r3417, %r3416};
	xor.b64  	%rd2234, %rd2232, %rd2233;
	and.b64  	%rd2235, %rd2228, %rd2203;
	not.b64 	%rd2236, %rd2228;
	and.b64  	%rd2237, %rd2178, %rd2236;
	or.b64  	%rd2238, %rd2235, %rd2237;
	add.s64 	%rd2239, %rd2238, %rd2152;
	add.s64 	%rd2240, %rd2239, %rd2234;
	add.s64 	%rd2241, %rd2240, %rd47;
	add.s64 	%rd2242, %rd2241, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3418,%dummy}, %rd2229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3419}, %rd2229;
	}
	shf.r.wrap.b32 	%r3420, %r3419, %r3418, 28;
	shf.r.wrap.b32 	%r3421, %r3418, %r3419, 28;
	mov.b64 	%rd2243, {%r3421, %r3420};
	shf.l.wrap.b32 	%r3422, %r3418, %r3419, 30;
	shf.l.wrap.b32 	%r3423, %r3419, %r3418, 30;
	mov.b64 	%rd2244, {%r3423, %r3422};
	xor.b64  	%rd2245, %rd2243, %rd2244;
	shf.l.wrap.b32 	%r3424, %r3418, %r3419, 25;
	shf.l.wrap.b32 	%r3425, %r3419, %r3418, 25;
	mov.b64 	%rd2246, {%r3425, %r3424};
	xor.b64  	%rd2247, %rd2245, %rd2246;
	xor.b64  	%rd2248, %rd2204, %rd2179;
	and.b64  	%rd2249, %rd2229, %rd2248;
	and.b64  	%rd2250, %rd2204, %rd2179;
	xor.b64  	%rd2251, %rd2249, %rd2250;
	add.s64 	%rd2252, %rd2247, %rd2251;
	add.s64 	%rd2253, %rd2242, %rd2153;
	add.s64 	%rd2254, %rd2252, %rd2242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3426,%dummy}, %rd2253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3427}, %rd2253;
	}
	shf.r.wrap.b32 	%r3428, %r3427, %r3426, 14;
	shf.r.wrap.b32 	%r3429, %r3426, %r3427, 14;
	mov.b64 	%rd2255, {%r3429, %r3428};
	shf.r.wrap.b32 	%r3430, %r3427, %r3426, 18;
	shf.r.wrap.b32 	%r3431, %r3426, %r3427, 18;
	mov.b64 	%rd2256, {%r3431, %r3430};
	xor.b64  	%rd2257, %rd2255, %rd2256;
	shf.l.wrap.b32 	%r3432, %r3426, %r3427, 23;
	shf.l.wrap.b32 	%r3433, %r3427, %r3426, 23;
	mov.b64 	%rd2258, {%r3433, %r3432};
	xor.b64  	%rd2259, %rd2257, %rd2258;
	and.b64  	%rd2260, %rd2253, %rd2228;
	not.b64 	%rd2261, %rd2253;
	and.b64  	%rd2262, %rd2203, %rd2261;
	or.b64  	%rd2263, %rd2260, %rd2262;
	add.s64 	%rd2264, %rd2263, %rd2178;
	add.s64 	%rd2265, %rd2264, %rd2259;
	add.s64 	%rd2266, %rd2265, %rd48;
	add.s64 	%rd2267, %rd2266, %rd1102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3434,%dummy}, %rd2254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3435}, %rd2254;
	}
	shf.r.wrap.b32 	%r3436, %r3435, %r3434, 28;
	shf.r.wrap.b32 	%r3437, %r3434, %r3435, 28;
	mov.b64 	%rd2268, {%r3437, %r3436};
	shf.l.wrap.b32 	%r3438, %r3434, %r3435, 30;
	shf.l.wrap.b32 	%r3439, %r3435, %r3434, 30;
	mov.b64 	%rd2269, {%r3439, %r3438};
	xor.b64  	%rd2270, %rd2268, %rd2269;
	shf.l.wrap.b32 	%r3440, %r3434, %r3435, 25;
	shf.l.wrap.b32 	%r3441, %r3435, %r3434, 25;
	mov.b64 	%rd2271, {%r3441, %r3440};
	xor.b64  	%rd2272, %rd2270, %rd2271;
	xor.b64  	%rd2273, %rd2229, %rd2204;
	and.b64  	%rd2274, %rd2254, %rd2273;
	and.b64  	%rd2275, %rd2229, %rd2204;
	xor.b64  	%rd2276, %rd2274, %rd2275;
	add.s64 	%rd2277, %rd2272, %rd2276;
	add.s64 	%rd2278, %rd2267, %rd2179;
	add.s64 	%rd2279, %rd2277, %rd2267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3442,%dummy}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3443}, %rd2278;
	}
	shf.r.wrap.b32 	%r3444, %r3443, %r3442, 14;
	shf.r.wrap.b32 	%r3445, %r3442, %r3443, 14;
	mov.b64 	%rd2280, {%r3445, %r3444};
	shf.r.wrap.b32 	%r3446, %r3443, %r3442, 18;
	shf.r.wrap.b32 	%r3447, %r3442, %r3443, 18;
	mov.b64 	%rd2281, {%r3447, %r3446};
	xor.b64  	%rd2282, %rd2280, %rd2281;
	shf.l.wrap.b32 	%r3448, %r3442, %r3443, 23;
	shf.l.wrap.b32 	%r3449, %r3443, %r3442, 23;
	mov.b64 	%rd2283, {%r3449, %r3448};
	xor.b64  	%rd2284, %rd2282, %rd2283;
	and.b64  	%rd2285, %rd2278, %rd2253;
	not.b64 	%rd2286, %rd2278;
	and.b64  	%rd2287, %rd2228, %rd2286;
	or.b64  	%rd2288, %rd2285, %rd2287;
	add.s64 	%rd2289, %rd2288, %rd2203;
	add.s64 	%rd2290, %rd2289, %rd2284;
	add.s64 	%rd2291, %rd2290, %rd49;
	add.s64 	%rd2292, %rd2291, %rd1122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3450,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3451}, %rd2279;
	}
	shf.r.wrap.b32 	%r3452, %r3451, %r3450, 28;
	shf.r.wrap.b32 	%r3453, %r3450, %r3451, 28;
	mov.b64 	%rd2293, {%r3453, %r3452};
	shf.l.wrap.b32 	%r3454, %r3450, %r3451, 30;
	shf.l.wrap.b32 	%r3455, %r3451, %r3450, 30;
	mov.b64 	%rd2294, {%r3455, %r3454};
	xor.b64  	%rd2295, %rd2293, %rd2294;
	shf.l.wrap.b32 	%r3456, %r3450, %r3451, 25;
	shf.l.wrap.b32 	%r3457, %r3451, %r3450, 25;
	mov.b64 	%rd2296, {%r3457, %r3456};
	xor.b64  	%rd2297, %rd2295, %rd2296;
	xor.b64  	%rd2298, %rd2254, %rd2229;
	and.b64  	%rd2299, %rd2279, %rd2298;
	and.b64  	%rd2300, %rd2254, %rd2229;
	xor.b64  	%rd2301, %rd2299, %rd2300;
	add.s64 	%rd2302, %rd2297, %rd2301;
	add.s64 	%rd2303, %rd2292, %rd2204;
	add.s64 	%rd2304, %rd2302, %rd2292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3458,%dummy}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3459}, %rd2303;
	}
	shf.r.wrap.b32 	%r3460, %r3459, %r3458, 14;
	shf.r.wrap.b32 	%r3461, %r3458, %r3459, 14;
	mov.b64 	%rd2305, {%r3461, %r3460};
	shf.r.wrap.b32 	%r3462, %r3459, %r3458, 18;
	shf.r.wrap.b32 	%r3463, %r3458, %r3459, 18;
	mov.b64 	%rd2306, {%r3463, %r3462};
	xor.b64  	%rd2307, %rd2305, %rd2306;
	shf.l.wrap.b32 	%r3464, %r3458, %r3459, 23;
	shf.l.wrap.b32 	%r3465, %r3459, %r3458, 23;
	mov.b64 	%rd2308, {%r3465, %r3464};
	xor.b64  	%rd2309, %rd2307, %rd2308;
	and.b64  	%rd2310, %rd2303, %rd2278;
	not.b64 	%rd2311, %rd2303;
	and.b64  	%rd2312, %rd2253, %rd2311;
	or.b64  	%rd2313, %rd2310, %rd2312;
	add.s64 	%rd2314, %rd2313, %rd2228;
	add.s64 	%rd2315, %rd2314, %rd2309;
	add.s64 	%rd2316, %rd2315, %rd50;
	add.s64 	%rd2317, %rd2316, %rd1142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3466,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3467}, %rd2304;
	}
	shf.r.wrap.b32 	%r3468, %r3467, %r3466, 28;
	shf.r.wrap.b32 	%r3469, %r3466, %r3467, 28;
	mov.b64 	%rd2318, {%r3469, %r3468};
	shf.l.wrap.b32 	%r3470, %r3466, %r3467, 30;
	shf.l.wrap.b32 	%r3471, %r3467, %r3466, 30;
	mov.b64 	%rd2319, {%r3471, %r3470};
	xor.b64  	%rd2320, %rd2318, %rd2319;
	shf.l.wrap.b32 	%r3472, %r3466, %r3467, 25;
	shf.l.wrap.b32 	%r3473, %r3467, %r3466, 25;
	mov.b64 	%rd2321, {%r3473, %r3472};
	xor.b64  	%rd2322, %rd2320, %rd2321;
	xor.b64  	%rd2323, %rd2279, %rd2254;
	and.b64  	%rd2324, %rd2304, %rd2323;
	and.b64  	%rd2325, %rd2279, %rd2254;
	xor.b64  	%rd2326, %rd2324, %rd2325;
	add.s64 	%rd2327, %rd2322, %rd2326;
	add.s64 	%rd2328, %rd2317, %rd2229;
	add.s64 	%rd2329, %rd2327, %rd2317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3474,%dummy}, %rd2328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3475}, %rd2328;
	}
	shf.r.wrap.b32 	%r3476, %r3475, %r3474, 14;
	shf.r.wrap.b32 	%r3477, %r3474, %r3475, 14;
	mov.b64 	%rd2330, {%r3477, %r3476};
	shf.r.wrap.b32 	%r3478, %r3475, %r3474, 18;
	shf.r.wrap.b32 	%r3479, %r3474, %r3475, 18;
	mov.b64 	%rd2331, {%r3479, %r3478};
	xor.b64  	%rd2332, %rd2330, %rd2331;
	shf.l.wrap.b32 	%r3480, %r3474, %r3475, 23;
	shf.l.wrap.b32 	%r3481, %r3475, %r3474, 23;
	mov.b64 	%rd2333, {%r3481, %r3480};
	xor.b64  	%rd2334, %rd2332, %rd2333;
	and.b64  	%rd2335, %rd2328, %rd2303;
	not.b64 	%rd2336, %rd2328;
	and.b64  	%rd2337, %rd2278, %rd2336;
	or.b64  	%rd2338, %rd2335, %rd2337;
	add.s64 	%rd2339, %rd2338, %rd2253;
	add.s64 	%rd2340, %rd2339, %rd2334;
	add.s64 	%rd2341, %rd2340, %rd51;
	add.s64 	%rd2342, %rd2341, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3482,%dummy}, %rd2329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3483}, %rd2329;
	}
	shf.r.wrap.b32 	%r3484, %r3483, %r3482, 28;
	shf.r.wrap.b32 	%r3485, %r3482, %r3483, 28;
	mov.b64 	%rd2343, {%r3485, %r3484};
	shf.l.wrap.b32 	%r3486, %r3482, %r3483, 30;
	shf.l.wrap.b32 	%r3487, %r3483, %r3482, 30;
	mov.b64 	%rd2344, {%r3487, %r3486};
	xor.b64  	%rd2345, %rd2343, %rd2344;
	shf.l.wrap.b32 	%r3488, %r3482, %r3483, 25;
	shf.l.wrap.b32 	%r3489, %r3483, %r3482, 25;
	mov.b64 	%rd2346, {%r3489, %r3488};
	xor.b64  	%rd2347, %rd2345, %rd2346;
	xor.b64  	%rd2348, %rd2304, %rd2279;
	and.b64  	%rd2349, %rd2329, %rd2348;
	and.b64  	%rd2350, %rd2304, %rd2279;
	xor.b64  	%rd2351, %rd2349, %rd2350;
	add.s64 	%rd2352, %rd2347, %rd2351;
	add.s64 	%rd2353, %rd2342, %rd2254;
	add.s64 	%rd2354, %rd2352, %rd2342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3490,%dummy}, %rd2353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3491}, %rd2353;
	}
	shf.r.wrap.b32 	%r3492, %r3491, %r3490, 14;
	shf.r.wrap.b32 	%r3493, %r3490, %r3491, 14;
	mov.b64 	%rd2355, {%r3493, %r3492};
	shf.r.wrap.b32 	%r3494, %r3491, %r3490, 18;
	shf.r.wrap.b32 	%r3495, %r3490, %r3491, 18;
	mov.b64 	%rd2356, {%r3495, %r3494};
	xor.b64  	%rd2357, %rd2355, %rd2356;
	shf.l.wrap.b32 	%r3496, %r3490, %r3491, 23;
	shf.l.wrap.b32 	%r3497, %r3491, %r3490, 23;
	mov.b64 	%rd2358, {%r3497, %r3496};
	xor.b64  	%rd2359, %rd2357, %rd2358;
	and.b64  	%rd2360, %rd2353, %rd2328;
	not.b64 	%rd2361, %rd2353;
	and.b64  	%rd2362, %rd2303, %rd2361;
	or.b64  	%rd2363, %rd2360, %rd2362;
	add.s64 	%rd2364, %rd2363, %rd2278;
	add.s64 	%rd2365, %rd2364, %rd2359;
	add.s64 	%rd2366, %rd2365, %rd52;
	add.s64 	%rd2367, %rd2366, %rd1182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3498,%dummy}, %rd2354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3499}, %rd2354;
	}
	shf.r.wrap.b32 	%r3500, %r3499, %r3498, 28;
	shf.r.wrap.b32 	%r3501, %r3498, %r3499, 28;
	mov.b64 	%rd2368, {%r3501, %r3500};
	shf.l.wrap.b32 	%r3502, %r3498, %r3499, 30;
	shf.l.wrap.b32 	%r3503, %r3499, %r3498, 30;
	mov.b64 	%rd2369, {%r3503, %r3502};
	xor.b64  	%rd2370, %rd2368, %rd2369;
	shf.l.wrap.b32 	%r3504, %r3498, %r3499, 25;
	shf.l.wrap.b32 	%r3505, %r3499, %r3498, 25;
	mov.b64 	%rd2371, {%r3505, %r3504};
	xor.b64  	%rd2372, %rd2370, %rd2371;
	xor.b64  	%rd2373, %rd2329, %rd2304;
	and.b64  	%rd2374, %rd2354, %rd2373;
	and.b64  	%rd2375, %rd2329, %rd2304;
	xor.b64  	%rd2376, %rd2374, %rd2375;
	add.s64 	%rd2377, %rd2372, %rd2376;
	add.s64 	%rd2378, %rd2367, %rd2279;
	add.s64 	%rd2379, %rd2377, %rd2367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3506,%dummy}, %rd2378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3507}, %rd2378;
	}
	shf.r.wrap.b32 	%r3508, %r3507, %r3506, 14;
	shf.r.wrap.b32 	%r3509, %r3506, %r3507, 14;
	mov.b64 	%rd2380, {%r3509, %r3508};
	shf.r.wrap.b32 	%r3510, %r3507, %r3506, 18;
	shf.r.wrap.b32 	%r3511, %r3506, %r3507, 18;
	mov.b64 	%rd2381, {%r3511, %r3510};
	xor.b64  	%rd2382, %rd2380, %rd2381;
	shf.l.wrap.b32 	%r3512, %r3506, %r3507, 23;
	shf.l.wrap.b32 	%r3513, %r3507, %r3506, 23;
	mov.b64 	%rd2383, {%r3513, %r3512};
	xor.b64  	%rd2384, %rd2382, %rd2383;
	and.b64  	%rd2385, %rd2378, %rd2353;
	not.b64 	%rd2386, %rd2378;
	and.b64  	%rd2387, %rd2328, %rd2386;
	or.b64  	%rd2388, %rd2385, %rd2387;
	add.s64 	%rd2389, %rd2388, %rd2303;
	add.s64 	%rd2390, %rd2389, %rd2384;
	add.s64 	%rd2391, %rd2390, %rd53;
	add.s64 	%rd2392, %rd2391, %rd1202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3514,%dummy}, %rd2379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3515}, %rd2379;
	}
	shf.r.wrap.b32 	%r3516, %r3515, %r3514, 28;
	shf.r.wrap.b32 	%r3517, %r3514, %r3515, 28;
	mov.b64 	%rd2393, {%r3517, %r3516};
	shf.l.wrap.b32 	%r3518, %r3514, %r3515, 30;
	shf.l.wrap.b32 	%r3519, %r3515, %r3514, 30;
	mov.b64 	%rd2394, {%r3519, %r3518};
	xor.b64  	%rd2395, %rd2393, %rd2394;
	shf.l.wrap.b32 	%r3520, %r3514, %r3515, 25;
	shf.l.wrap.b32 	%r3521, %r3515, %r3514, 25;
	mov.b64 	%rd2396, {%r3521, %r3520};
	xor.b64  	%rd2397, %rd2395, %rd2396;
	xor.b64  	%rd2398, %rd2354, %rd2329;
	and.b64  	%rd2399, %rd2379, %rd2398;
	and.b64  	%rd2400, %rd2354, %rd2329;
	xor.b64  	%rd2401, %rd2399, %rd2400;
	add.s64 	%rd2402, %rd2397, %rd2401;
	add.s64 	%rd2403, %rd2392, %rd2304;
	add.s64 	%rd2404, %rd2402, %rd2392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3522,%dummy}, %rd2403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3523}, %rd2403;
	}
	shf.r.wrap.b32 	%r3524, %r3523, %r3522, 14;
	shf.r.wrap.b32 	%r3525, %r3522, %r3523, 14;
	mov.b64 	%rd2405, {%r3525, %r3524};
	shf.r.wrap.b32 	%r3526, %r3523, %r3522, 18;
	shf.r.wrap.b32 	%r3527, %r3522, %r3523, 18;
	mov.b64 	%rd2406, {%r3527, %r3526};
	xor.b64  	%rd2407, %rd2405, %rd2406;
	shf.l.wrap.b32 	%r3528, %r3522, %r3523, 23;
	shf.l.wrap.b32 	%r3529, %r3523, %r3522, 23;
	mov.b64 	%rd2408, {%r3529, %r3528};
	xor.b64  	%rd2409, %rd2407, %rd2408;
	and.b64  	%rd2410, %rd2403, %rd2378;
	not.b64 	%rd2411, %rd2403;
	and.b64  	%rd2412, %rd2353, %rd2411;
	or.b64  	%rd2413, %rd2410, %rd2412;
	add.s64 	%rd2414, %rd2413, %rd2328;
	add.s64 	%rd2415, %rd2414, %rd2409;
	add.s64 	%rd2416, %rd2415, %rd54;
	add.s64 	%rd2417, %rd2416, %rd1222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3530,%dummy}, %rd2404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3531}, %rd2404;
	}
	shf.r.wrap.b32 	%r3532, %r3531, %r3530, 28;
	shf.r.wrap.b32 	%r3533, %r3530, %r3531, 28;
	mov.b64 	%rd2418, {%r3533, %r3532};
	shf.l.wrap.b32 	%r3534, %r3530, %r3531, 30;
	shf.l.wrap.b32 	%r3535, %r3531, %r3530, 30;
	mov.b64 	%rd2419, {%r3535, %r3534};
	xor.b64  	%rd2420, %rd2418, %rd2419;
	shf.l.wrap.b32 	%r3536, %r3530, %r3531, 25;
	shf.l.wrap.b32 	%r3537, %r3531, %r3530, 25;
	mov.b64 	%rd2421, {%r3537, %r3536};
	xor.b64  	%rd2422, %rd2420, %rd2421;
	xor.b64  	%rd2423, %rd2379, %rd2354;
	and.b64  	%rd2424, %rd2404, %rd2423;
	and.b64  	%rd2425, %rd2379, %rd2354;
	xor.b64  	%rd2426, %rd2424, %rd2425;
	add.s64 	%rd2427, %rd2422, %rd2426;
	add.s64 	%rd2428, %rd2417, %rd2329;
	add.s64 	%rd2429, %rd2427, %rd2417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3538,%dummy}, %rd2428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3539}, %rd2428;
	}
	shf.r.wrap.b32 	%r3540, %r3539, %r3538, 14;
	shf.r.wrap.b32 	%r3541, %r3538, %r3539, 14;
	mov.b64 	%rd2430, {%r3541, %r3540};
	shf.r.wrap.b32 	%r3542, %r3539, %r3538, 18;
	shf.r.wrap.b32 	%r3543, %r3538, %r3539, 18;
	mov.b64 	%rd2431, {%r3543, %r3542};
	xor.b64  	%rd2432, %rd2430, %rd2431;
	shf.l.wrap.b32 	%r3544, %r3538, %r3539, 23;
	shf.l.wrap.b32 	%r3545, %r3539, %r3538, 23;
	mov.b64 	%rd2433, {%r3545, %r3544};
	xor.b64  	%rd2434, %rd2432, %rd2433;
	and.b64  	%rd2435, %rd2428, %rd2403;
	not.b64 	%rd2436, %rd2428;
	and.b64  	%rd2437, %rd2378, %rd2436;
	or.b64  	%rd2438, %rd2435, %rd2437;
	add.s64 	%rd2439, %rd2438, %rd2353;
	add.s64 	%rd2440, %rd2439, %rd2434;
	add.s64 	%rd2441, %rd2440, %rd55;
	add.s64 	%rd2442, %rd2441, %rd1242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3546,%dummy}, %rd2429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3547}, %rd2429;
	}
	shf.r.wrap.b32 	%r3548, %r3547, %r3546, 28;
	shf.r.wrap.b32 	%r3549, %r3546, %r3547, 28;
	mov.b64 	%rd2443, {%r3549, %r3548};
	shf.l.wrap.b32 	%r3550, %r3546, %r3547, 30;
	shf.l.wrap.b32 	%r3551, %r3547, %r3546, 30;
	mov.b64 	%rd2444, {%r3551, %r3550};
	xor.b64  	%rd2445, %rd2443, %rd2444;
	shf.l.wrap.b32 	%r3552, %r3546, %r3547, 25;
	shf.l.wrap.b32 	%r3553, %r3547, %r3546, 25;
	mov.b64 	%rd2446, {%r3553, %r3552};
	xor.b64  	%rd2447, %rd2445, %rd2446;
	xor.b64  	%rd2448, %rd2404, %rd2379;
	and.b64  	%rd2449, %rd2429, %rd2448;
	and.b64  	%rd2450, %rd2404, %rd2379;
	xor.b64  	%rd2451, %rd2449, %rd2450;
	add.s64 	%rd2452, %rd2447, %rd2451;
	add.s64 	%rd2453, %rd2442, %rd2354;
	add.s64 	%rd2454, %rd2452, %rd2442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3554,%dummy}, %rd2453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3555}, %rd2453;
	}
	shf.r.wrap.b32 	%r3556, %r3555, %r3554, 14;
	shf.r.wrap.b32 	%r3557, %r3554, %r3555, 14;
	mov.b64 	%rd2455, {%r3557, %r3556};
	shf.r.wrap.b32 	%r3558, %r3555, %r3554, 18;
	shf.r.wrap.b32 	%r3559, %r3554, %r3555, 18;
	mov.b64 	%rd2456, {%r3559, %r3558};
	xor.b64  	%rd2457, %rd2455, %rd2456;
	shf.l.wrap.b32 	%r3560, %r3554, %r3555, 23;
	shf.l.wrap.b32 	%r3561, %r3555, %r3554, 23;
	mov.b64 	%rd2458, {%r3561, %r3560};
	xor.b64  	%rd2459, %rd2457, %rd2458;
	and.b64  	%rd2460, %rd2453, %rd2428;
	not.b64 	%rd2461, %rd2453;
	and.b64  	%rd2462, %rd2403, %rd2461;
	or.b64  	%rd2463, %rd2460, %rd2462;
	add.s64 	%rd2464, %rd2463, %rd2378;
	add.s64 	%rd2465, %rd2464, %rd2459;
	add.s64 	%rd2466, %rd2465, %rd56;
	add.s64 	%rd2467, %rd2466, %rd1255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3562,%dummy}, %rd2454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3563}, %rd2454;
	}
	shf.r.wrap.b32 	%r3564, %r3563, %r3562, 28;
	shf.r.wrap.b32 	%r3565, %r3562, %r3563, 28;
	mov.b64 	%rd2468, {%r3565, %r3564};
	shf.l.wrap.b32 	%r3566, %r3562, %r3563, 30;
	shf.l.wrap.b32 	%r3567, %r3563, %r3562, 30;
	mov.b64 	%rd2469, {%r3567, %r3566};
	xor.b64  	%rd2470, %rd2468, %rd2469;
	shf.l.wrap.b32 	%r3568, %r3562, %r3563, 25;
	shf.l.wrap.b32 	%r3569, %r3563, %r3562, 25;
	mov.b64 	%rd2471, {%r3569, %r3568};
	xor.b64  	%rd2472, %rd2470, %rd2471;
	xor.b64  	%rd2473, %rd2429, %rd2404;
	and.b64  	%rd2474, %rd2454, %rd2473;
	and.b64  	%rd2475, %rd2429, %rd2404;
	xor.b64  	%rd2476, %rd2474, %rd2475;
	add.s64 	%rd2477, %rd2472, %rd2476;
	add.s64 	%rd2478, %rd2467, %rd2379;
	add.s64 	%rd2479, %rd2477, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3570,%dummy}, %rd2478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3571}, %rd2478;
	}
	shf.r.wrap.b32 	%r3572, %r3571, %r3570, 14;
	shf.r.wrap.b32 	%r3573, %r3570, %r3571, 14;
	mov.b64 	%rd2480, {%r3573, %r3572};
	shf.r.wrap.b32 	%r3574, %r3571, %r3570, 18;
	shf.r.wrap.b32 	%r3575, %r3570, %r3571, 18;
	mov.b64 	%rd2481, {%r3575, %r3574};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	shf.l.wrap.b32 	%r3576, %r3570, %r3571, 23;
	shf.l.wrap.b32 	%r3577, %r3571, %r3570, 23;
	mov.b64 	%rd2483, {%r3577, %r3576};
	xor.b64  	%rd2484, %rd2482, %rd2483;
	and.b64  	%rd2485, %rd2478, %rd2453;
	not.b64 	%rd2486, %rd2478;
	and.b64  	%rd2487, %rd2428, %rd2486;
	or.b64  	%rd2488, %rd2485, %rd2487;
	add.s64 	%rd2489, %rd2488, %rd2403;
	add.s64 	%rd2490, %rd2489, %rd2484;
	add.s64 	%rd2491, %rd2490, %rd57;
	add.s64 	%rd2492, %rd2491, %rd1268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3578,%dummy}, %rd2479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3579}, %rd2479;
	}
	shf.r.wrap.b32 	%r3580, %r3579, %r3578, 28;
	shf.r.wrap.b32 	%r3581, %r3578, %r3579, 28;
	mov.b64 	%rd2493, {%r3581, %r3580};
	shf.l.wrap.b32 	%r3582, %r3578, %r3579, 30;
	shf.l.wrap.b32 	%r3583, %r3579, %r3578, 30;
	mov.b64 	%rd2494, {%r3583, %r3582};
	xor.b64  	%rd2495, %rd2493, %rd2494;
	shf.l.wrap.b32 	%r3584, %r3578, %r3579, 25;
	shf.l.wrap.b32 	%r3585, %r3579, %r3578, 25;
	mov.b64 	%rd2496, {%r3585, %r3584};
	xor.b64  	%rd2497, %rd2495, %rd2496;
	xor.b64  	%rd2498, %rd2454, %rd2429;
	and.b64  	%rd2499, %rd2479, %rd2498;
	and.b64  	%rd2500, %rd2454, %rd2429;
	xor.b64  	%rd2501, %rd2499, %rd2500;
	add.s64 	%rd2502, %rd2497, %rd2501;
	add.s64 	%rd2503, %rd2492, %rd2404;
	add.s64 	%rd2504, %rd2502, %rd2492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3586,%dummy}, %rd2503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3587}, %rd2503;
	}
	shf.r.wrap.b32 	%r3588, %r3587, %r3586, 14;
	shf.r.wrap.b32 	%r3589, %r3586, %r3587, 14;
	mov.b64 	%rd2505, {%r3589, %r3588};
	shf.r.wrap.b32 	%r3590, %r3587, %r3586, 18;
	shf.r.wrap.b32 	%r3591, %r3586, %r3587, 18;
	mov.b64 	%rd2506, {%r3591, %r3590};
	xor.b64  	%rd2507, %rd2505, %rd2506;
	shf.l.wrap.b32 	%r3592, %r3586, %r3587, 23;
	shf.l.wrap.b32 	%r3593, %r3587, %r3586, 23;
	mov.b64 	%rd2508, {%r3593, %r3592};
	xor.b64  	%rd2509, %rd2507, %rd2508;
	and.b64  	%rd2510, %rd2503, %rd2478;
	not.b64 	%rd2511, %rd2503;
	and.b64  	%rd2512, %rd2453, %rd2511;
	or.b64  	%rd2513, %rd2510, %rd2512;
	add.s64 	%rd2514, %rd2513, %rd2428;
	add.s64 	%rd2515, %rd2514, %rd2509;
	add.s64 	%rd2516, %rd2515, %rd58;
	add.s64 	%rd2517, %rd2516, %rd1281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3594,%dummy}, %rd2504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3595}, %rd2504;
	}
	shf.r.wrap.b32 	%r3596, %r3595, %r3594, 28;
	shf.r.wrap.b32 	%r3597, %r3594, %r3595, 28;
	mov.b64 	%rd2518, {%r3597, %r3596};
	shf.l.wrap.b32 	%r3598, %r3594, %r3595, 30;
	shf.l.wrap.b32 	%r3599, %r3595, %r3594, 30;
	mov.b64 	%rd2519, {%r3599, %r3598};
	xor.b64  	%rd2520, %rd2518, %rd2519;
	shf.l.wrap.b32 	%r3600, %r3594, %r3595, 25;
	shf.l.wrap.b32 	%r3601, %r3595, %r3594, 25;
	mov.b64 	%rd2521, {%r3601, %r3600};
	xor.b64  	%rd2522, %rd2520, %rd2521;
	xor.b64  	%rd2523, %rd2479, %rd2454;
	and.b64  	%rd2524, %rd2504, %rd2523;
	and.b64  	%rd2525, %rd2479, %rd2454;
	xor.b64  	%rd2526, %rd2524, %rd2525;
	add.s64 	%rd2527, %rd2522, %rd2526;
	add.s64 	%rd2528, %rd2517, %rd2429;
	add.s64 	%rd2529, %rd2527, %rd2517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3602,%dummy}, %rd2528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3603}, %rd2528;
	}
	shf.r.wrap.b32 	%r3604, %r3603, %r3602, 14;
	shf.r.wrap.b32 	%r3605, %r3602, %r3603, 14;
	mov.b64 	%rd2530, {%r3605, %r3604};
	shf.r.wrap.b32 	%r3606, %r3603, %r3602, 18;
	shf.r.wrap.b32 	%r3607, %r3602, %r3603, 18;
	mov.b64 	%rd2531, {%r3607, %r3606};
	xor.b64  	%rd2532, %rd2530, %rd2531;
	shf.l.wrap.b32 	%r3608, %r3602, %r3603, 23;
	shf.l.wrap.b32 	%r3609, %r3603, %r3602, 23;
	mov.b64 	%rd2533, {%r3609, %r3608};
	xor.b64  	%rd2534, %rd2532, %rd2533;
	and.b64  	%rd2535, %rd2528, %rd2503;
	not.b64 	%rd2536, %rd2528;
	and.b64  	%rd2537, %rd2478, %rd2536;
	or.b64  	%rd2538, %rd2535, %rd2537;
	add.s64 	%rd2539, %rd2538, %rd2453;
	add.s64 	%rd2540, %rd2539, %rd2534;
	add.s64 	%rd2541, %rd2540, %rd59;
	add.s64 	%rd2542, %rd2541, %rd1294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3610,%dummy}, %rd2529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3611}, %rd2529;
	}
	shf.r.wrap.b32 	%r3612, %r3611, %r3610, 28;
	shf.r.wrap.b32 	%r3613, %r3610, %r3611, 28;
	mov.b64 	%rd2543, {%r3613, %r3612};
	shf.l.wrap.b32 	%r3614, %r3610, %r3611, 30;
	shf.l.wrap.b32 	%r3615, %r3611, %r3610, 30;
	mov.b64 	%rd2544, {%r3615, %r3614};
	xor.b64  	%rd2545, %rd2543, %rd2544;
	shf.l.wrap.b32 	%r3616, %r3610, %r3611, 25;
	shf.l.wrap.b32 	%r3617, %r3611, %r3610, 25;
	mov.b64 	%rd2546, {%r3617, %r3616};
	xor.b64  	%rd2547, %rd2545, %rd2546;
	xor.b64  	%rd2548, %rd2504, %rd2479;
	and.b64  	%rd2549, %rd2529, %rd2548;
	and.b64  	%rd2550, %rd2504, %rd2479;
	xor.b64  	%rd2551, %rd2549, %rd2550;
	add.s64 	%rd2552, %rd2547, %rd2551;
	add.s64 	%rd2553, %rd2542, %rd2454;
	add.s64 	%rd2554, %rd2552, %rd2542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3618,%dummy}, %rd2553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3619}, %rd2553;
	}
	shf.r.wrap.b32 	%r3620, %r3619, %r3618, 14;
	shf.r.wrap.b32 	%r3621, %r3618, %r3619, 14;
	mov.b64 	%rd2555, {%r3621, %r3620};
	shf.r.wrap.b32 	%r3622, %r3619, %r3618, 18;
	shf.r.wrap.b32 	%r3623, %r3618, %r3619, 18;
	mov.b64 	%rd2556, {%r3623, %r3622};
	xor.b64  	%rd2557, %rd2555, %rd2556;
	shf.l.wrap.b32 	%r3624, %r3618, %r3619, 23;
	shf.l.wrap.b32 	%r3625, %r3619, %r3618, 23;
	mov.b64 	%rd2558, {%r3625, %r3624};
	xor.b64  	%rd2559, %rd2557, %rd2558;
	and.b64  	%rd2560, %rd2553, %rd2528;
	not.b64 	%rd2561, %rd2553;
	and.b64  	%rd2562, %rd2503, %rd2561;
	or.b64  	%rd2563, %rd2560, %rd2562;
	add.s64 	%rd2564, %rd2563, %rd2478;
	add.s64 	%rd2565, %rd2564, %rd2559;
	add.s64 	%rd2566, %rd2565, %rd60;
	add.s64 	%rd2567, %rd2566, %rd1307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3626,%dummy}, %rd2554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3627}, %rd2554;
	}
	shf.r.wrap.b32 	%r3628, %r3627, %r3626, 28;
	shf.r.wrap.b32 	%r3629, %r3626, %r3627, 28;
	mov.b64 	%rd2568, {%r3629, %r3628};
	shf.l.wrap.b32 	%r3630, %r3626, %r3627, 30;
	shf.l.wrap.b32 	%r3631, %r3627, %r3626, 30;
	mov.b64 	%rd2569, {%r3631, %r3630};
	xor.b64  	%rd2570, %rd2568, %rd2569;
	shf.l.wrap.b32 	%r3632, %r3626, %r3627, 25;
	shf.l.wrap.b32 	%r3633, %r3627, %r3626, 25;
	mov.b64 	%rd2571, {%r3633, %r3632};
	xor.b64  	%rd2572, %rd2570, %rd2571;
	xor.b64  	%rd2573, %rd2529, %rd2504;
	and.b64  	%rd2574, %rd2554, %rd2573;
	and.b64  	%rd2575, %rd2529, %rd2504;
	xor.b64  	%rd2576, %rd2574, %rd2575;
	add.s64 	%rd2577, %rd2572, %rd2576;
	add.s64 	%rd2578, %rd2567, %rd2479;
	add.s64 	%rd2579, %rd2577, %rd2567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3634,%dummy}, %rd2578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3635}, %rd2578;
	}
	shf.r.wrap.b32 	%r3636, %r3635, %r3634, 14;
	shf.r.wrap.b32 	%r3637, %r3634, %r3635, 14;
	mov.b64 	%rd2580, {%r3637, %r3636};
	shf.r.wrap.b32 	%r3638, %r3635, %r3634, 18;
	shf.r.wrap.b32 	%r3639, %r3634, %r3635, 18;
	mov.b64 	%rd2581, {%r3639, %r3638};
	xor.b64  	%rd2582, %rd2580, %rd2581;
	shf.l.wrap.b32 	%r3640, %r3634, %r3635, 23;
	shf.l.wrap.b32 	%r3641, %r3635, %r3634, 23;
	mov.b64 	%rd2583, {%r3641, %r3640};
	xor.b64  	%rd2584, %rd2582, %rd2583;
	and.b64  	%rd2585, %rd2578, %rd2553;
	not.b64 	%rd2586, %rd2578;
	and.b64  	%rd2587, %rd2528, %rd2586;
	or.b64  	%rd2588, %rd2585, %rd2587;
	add.s64 	%rd2589, %rd2588, %rd2503;
	add.s64 	%rd2590, %rd2589, %rd2584;
	add.s64 	%rd2591, %rd2590, %rd61;
	add.s64 	%rd2592, %rd2591, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3642,%dummy}, %rd2579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3643}, %rd2579;
	}
	shf.r.wrap.b32 	%r3644, %r3643, %r3642, 28;
	shf.r.wrap.b32 	%r3645, %r3642, %r3643, 28;
	mov.b64 	%rd2593, {%r3645, %r3644};
	shf.l.wrap.b32 	%r3646, %r3642, %r3643, 30;
	shf.l.wrap.b32 	%r3647, %r3643, %r3642, 30;
	mov.b64 	%rd2594, {%r3647, %r3646};
	xor.b64  	%rd2595, %rd2593, %rd2594;
	shf.l.wrap.b32 	%r3648, %r3642, %r3643, 25;
	shf.l.wrap.b32 	%r3649, %r3643, %r3642, 25;
	mov.b64 	%rd2596, {%r3649, %r3648};
	xor.b64  	%rd2597, %rd2595, %rd2596;
	xor.b64  	%rd2598, %rd2554, %rd2529;
	and.b64  	%rd2599, %rd2579, %rd2598;
	and.b64  	%rd2600, %rd2554, %rd2529;
	xor.b64  	%rd2601, %rd2599, %rd2600;
	add.s64 	%rd2602, %rd2597, %rd2601;
	add.s64 	%rd2603, %rd2592, %rd2504;
	add.s64 	%rd2604, %rd2602, %rd2592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3650,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3651}, %rd2603;
	}
	shf.r.wrap.b32 	%r3652, %r3651, %r3650, 14;
	shf.r.wrap.b32 	%r3653, %r3650, %r3651, 14;
	mov.b64 	%rd2605, {%r3653, %r3652};
	shf.r.wrap.b32 	%r3654, %r3651, %r3650, 18;
	shf.r.wrap.b32 	%r3655, %r3650, %r3651, 18;
	mov.b64 	%rd2606, {%r3655, %r3654};
	xor.b64  	%rd2607, %rd2605, %rd2606;
	shf.l.wrap.b32 	%r3656, %r3650, %r3651, 23;
	shf.l.wrap.b32 	%r3657, %r3651, %r3650, 23;
	mov.b64 	%rd2608, {%r3657, %r3656};
	xor.b64  	%rd2609, %rd2607, %rd2608;
	and.b64  	%rd2610, %rd2603, %rd2578;
	not.b64 	%rd2611, %rd2603;
	and.b64  	%rd2612, %rd2553, %rd2611;
	or.b64  	%rd2613, %rd2610, %rd2612;
	add.s64 	%rd2614, %rd2613, %rd2528;
	add.s64 	%rd2615, %rd2614, %rd2609;
	add.s64 	%rd2616, %rd2615, %rd62;
	add.s64 	%rd2617, %rd2616, %rd1333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3658,%dummy}, %rd2604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3659}, %rd2604;
	}
	shf.r.wrap.b32 	%r3660, %r3659, %r3658, 28;
	shf.r.wrap.b32 	%r3661, %r3658, %r3659, 28;
	mov.b64 	%rd2618, {%r3661, %r3660};
	shf.l.wrap.b32 	%r3662, %r3658, %r3659, 30;
	shf.l.wrap.b32 	%r3663, %r3659, %r3658, 30;
	mov.b64 	%rd2619, {%r3663, %r3662};
	xor.b64  	%rd2620, %rd2618, %rd2619;
	shf.l.wrap.b32 	%r3664, %r3658, %r3659, 25;
	shf.l.wrap.b32 	%r3665, %r3659, %r3658, 25;
	mov.b64 	%rd2621, {%r3665, %r3664};
	xor.b64  	%rd2622, %rd2620, %rd2621;
	xor.b64  	%rd2623, %rd2579, %rd2554;
	and.b64  	%rd2624, %rd2604, %rd2623;
	and.b64  	%rd2625, %rd2579, %rd2554;
	xor.b64  	%rd2626, %rd2624, %rd2625;
	add.s64 	%rd2627, %rd2622, %rd2626;
	add.s64 	%rd2628, %rd2617, %rd2529;
	add.s64 	%rd2629, %rd2627, %rd2617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3666,%dummy}, %rd2628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3667}, %rd2628;
	}
	shf.r.wrap.b32 	%r3668, %r3667, %r3666, 14;
	shf.r.wrap.b32 	%r3669, %r3666, %r3667, 14;
	mov.b64 	%rd2630, {%r3669, %r3668};
	shf.r.wrap.b32 	%r3670, %r3667, %r3666, 18;
	shf.r.wrap.b32 	%r3671, %r3666, %r3667, 18;
	mov.b64 	%rd2631, {%r3671, %r3670};
	xor.b64  	%rd2632, %rd2630, %rd2631;
	shf.l.wrap.b32 	%r3672, %r3666, %r3667, 23;
	shf.l.wrap.b32 	%r3673, %r3667, %r3666, 23;
	mov.b64 	%rd2633, {%r3673, %r3672};
	xor.b64  	%rd2634, %rd2632, %rd2633;
	and.b64  	%rd2635, %rd2628, %rd2603;
	not.b64 	%rd2636, %rd2628;
	and.b64  	%rd2637, %rd2578, %rd2636;
	or.b64  	%rd2638, %rd2635, %rd2637;
	add.s64 	%rd2639, %rd2638, %rd2553;
	add.s64 	%rd2640, %rd2639, %rd2634;
	add.s64 	%rd2641, %rd2640, %rd63;
	add.s64 	%rd2642, %rd2641, %rd1346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3674,%dummy}, %rd2629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3675}, %rd2629;
	}
	shf.r.wrap.b32 	%r3676, %r3675, %r3674, 28;
	shf.r.wrap.b32 	%r3677, %r3674, %r3675, 28;
	mov.b64 	%rd2643, {%r3677, %r3676};
	shf.l.wrap.b32 	%r3678, %r3674, %r3675, 30;
	shf.l.wrap.b32 	%r3679, %r3675, %r3674, 30;
	mov.b64 	%rd2644, {%r3679, %r3678};
	xor.b64  	%rd2645, %rd2643, %rd2644;
	shf.l.wrap.b32 	%r3680, %r3674, %r3675, 25;
	shf.l.wrap.b32 	%r3681, %r3675, %r3674, 25;
	mov.b64 	%rd2646, {%r3681, %r3680};
	xor.b64  	%rd2647, %rd2645, %rd2646;
	xor.b64  	%rd2648, %rd2604, %rd2579;
	and.b64  	%rd2649, %rd2629, %rd2648;
	and.b64  	%rd2650, %rd2604, %rd2579;
	xor.b64  	%rd2651, %rd2649, %rd2650;
	add.s64 	%rd2652, %rd2647, %rd2651;
	add.s64 	%rd2653, %rd2642, %rd2554;
	add.s64 	%rd2654, %rd2652, %rd2642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3682,%dummy}, %rd2653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3683}, %rd2653;
	}
	shf.r.wrap.b32 	%r3684, %r3683, %r3682, 14;
	shf.r.wrap.b32 	%r3685, %r3682, %r3683, 14;
	mov.b64 	%rd2655, {%r3685, %r3684};
	shf.r.wrap.b32 	%r3686, %r3683, %r3682, 18;
	shf.r.wrap.b32 	%r3687, %r3682, %r3683, 18;
	mov.b64 	%rd2656, {%r3687, %r3686};
	xor.b64  	%rd2657, %rd2655, %rd2656;
	shf.l.wrap.b32 	%r3688, %r3682, %r3683, 23;
	shf.l.wrap.b32 	%r3689, %r3683, %r3682, 23;
	mov.b64 	%rd2658, {%r3689, %r3688};
	xor.b64  	%rd2659, %rd2657, %rd2658;
	and.b64  	%rd2660, %rd2653, %rd2628;
	not.b64 	%rd2661, %rd2653;
	and.b64  	%rd2662, %rd2603, %rd2661;
	or.b64  	%rd2663, %rd2660, %rd2662;
	add.s64 	%rd2664, %rd2663, %rd2578;
	add.s64 	%rd2665, %rd2664, %rd2659;
	add.s64 	%rd2666, %rd2665, %rd64;
	add.s64 	%rd2667, %rd2666, %rd1359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3690,%dummy}, %rd2654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3691}, %rd2654;
	}
	shf.r.wrap.b32 	%r3692, %r3691, %r3690, 28;
	shf.r.wrap.b32 	%r3693, %r3690, %r3691, 28;
	mov.b64 	%rd2668, {%r3693, %r3692};
	shf.l.wrap.b32 	%r3694, %r3690, %r3691, 30;
	shf.l.wrap.b32 	%r3695, %r3691, %r3690, 30;
	mov.b64 	%rd2669, {%r3695, %r3694};
	xor.b64  	%rd2670, %rd2668, %rd2669;
	shf.l.wrap.b32 	%r3696, %r3690, %r3691, 25;
	shf.l.wrap.b32 	%r3697, %r3691, %r3690, 25;
	mov.b64 	%rd2671, {%r3697, %r3696};
	xor.b64  	%rd2672, %rd2670, %rd2671;
	xor.b64  	%rd2673, %rd2629, %rd2604;
	and.b64  	%rd2674, %rd2654, %rd2673;
	and.b64  	%rd2675, %rd2629, %rd2604;
	xor.b64  	%rd2676, %rd2674, %rd2675;
	add.s64 	%rd2677, %rd2672, %rd2676;
	add.s64 	%rd2678, %rd2667, %rd2579;
	add.s64 	%rd2679, %rd2677, %rd2667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3698,%dummy}, %rd2678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3699}, %rd2678;
	}
	shf.r.wrap.b32 	%r3700, %r3699, %r3698, 14;
	shf.r.wrap.b32 	%r3701, %r3698, %r3699, 14;
	mov.b64 	%rd2680, {%r3701, %r3700};
	shf.r.wrap.b32 	%r3702, %r3699, %r3698, 18;
	shf.r.wrap.b32 	%r3703, %r3698, %r3699, 18;
	mov.b64 	%rd2681, {%r3703, %r3702};
	xor.b64  	%rd2682, %rd2680, %rd2681;
	shf.l.wrap.b32 	%r3704, %r3698, %r3699, 23;
	shf.l.wrap.b32 	%r3705, %r3699, %r3698, 23;
	mov.b64 	%rd2683, {%r3705, %r3704};
	xor.b64  	%rd2684, %rd2682, %rd2683;
	and.b64  	%rd2685, %rd2678, %rd2653;
	not.b64 	%rd2686, %rd2678;
	and.b64  	%rd2687, %rd2628, %rd2686;
	or.b64  	%rd2688, %rd2685, %rd2687;
	add.s64 	%rd2689, %rd2688, %rd2603;
	add.s64 	%rd2690, %rd2689, %rd2684;
	add.s64 	%rd2691, %rd2690, %rd65;
	add.s64 	%rd2692, %rd2691, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3706,%dummy}, %rd2679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3707}, %rd2679;
	}
	shf.r.wrap.b32 	%r3708, %r3707, %r3706, 28;
	shf.r.wrap.b32 	%r3709, %r3706, %r3707, 28;
	mov.b64 	%rd2693, {%r3709, %r3708};
	shf.l.wrap.b32 	%r3710, %r3706, %r3707, 30;
	shf.l.wrap.b32 	%r3711, %r3707, %r3706, 30;
	mov.b64 	%rd2694, {%r3711, %r3710};
	xor.b64  	%rd2695, %rd2693, %rd2694;
	shf.l.wrap.b32 	%r3712, %r3706, %r3707, 25;
	shf.l.wrap.b32 	%r3713, %r3707, %r3706, 25;
	mov.b64 	%rd2696, {%r3713, %r3712};
	xor.b64  	%rd2697, %rd2695, %rd2696;
	xor.b64  	%rd2698, %rd2654, %rd2629;
	and.b64  	%rd2699, %rd2679, %rd2698;
	and.b64  	%rd2700, %rd2654, %rd2629;
	xor.b64  	%rd2701, %rd2699, %rd2700;
	add.s64 	%rd2702, %rd2697, %rd2701;
	add.s64 	%rd2703, %rd2692, %rd2604;
	add.s64 	%rd2704, %rd2702, %rd2692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3714,%dummy}, %rd2703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3715}, %rd2703;
	}
	shf.r.wrap.b32 	%r3716, %r3715, %r3714, 14;
	shf.r.wrap.b32 	%r3717, %r3714, %r3715, 14;
	mov.b64 	%rd2705, {%r3717, %r3716};
	shf.r.wrap.b32 	%r3718, %r3715, %r3714, 18;
	shf.r.wrap.b32 	%r3719, %r3714, %r3715, 18;
	mov.b64 	%rd2706, {%r3719, %r3718};
	xor.b64  	%rd2707, %rd2705, %rd2706;
	shf.l.wrap.b32 	%r3720, %r3714, %r3715, 23;
	shf.l.wrap.b32 	%r3721, %r3715, %r3714, 23;
	mov.b64 	%rd2708, {%r3721, %r3720};
	xor.b64  	%rd2709, %rd2707, %rd2708;
	and.b64  	%rd2710, %rd2703, %rd2678;
	not.b64 	%rd2711, %rd2703;
	and.b64  	%rd2712, %rd2653, %rd2711;
	or.b64  	%rd2713, %rd2710, %rd2712;
	add.s64 	%rd2714, %rd2713, %rd2628;
	add.s64 	%rd2715, %rd2714, %rd2709;
	add.s64 	%rd2716, %rd2715, %rd66;
	add.s64 	%rd2717, %rd2716, %rd1385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3722,%dummy}, %rd2704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3723}, %rd2704;
	}
	shf.r.wrap.b32 	%r3724, %r3723, %r3722, 28;
	shf.r.wrap.b32 	%r3725, %r3722, %r3723, 28;
	mov.b64 	%rd2718, {%r3725, %r3724};
	shf.l.wrap.b32 	%r3726, %r3722, %r3723, 30;
	shf.l.wrap.b32 	%r3727, %r3723, %r3722, 30;
	mov.b64 	%rd2719, {%r3727, %r3726};
	xor.b64  	%rd2720, %rd2718, %rd2719;
	shf.l.wrap.b32 	%r3728, %r3722, %r3723, 25;
	shf.l.wrap.b32 	%r3729, %r3723, %r3722, 25;
	mov.b64 	%rd2721, {%r3729, %r3728};
	xor.b64  	%rd2722, %rd2720, %rd2721;
	xor.b64  	%rd2723, %rd2679, %rd2654;
	and.b64  	%rd2724, %rd2704, %rd2723;
	and.b64  	%rd2725, %rd2679, %rd2654;
	xor.b64  	%rd2726, %rd2724, %rd2725;
	add.s64 	%rd2727, %rd2722, %rd2726;
	add.s64 	%rd2728, %rd2717, %rd2629;
	add.s64 	%rd2729, %rd2727, %rd2717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3730,%dummy}, %rd2728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3731}, %rd2728;
	}
	shf.r.wrap.b32 	%r3732, %r3731, %r3730, 14;
	shf.r.wrap.b32 	%r3733, %r3730, %r3731, 14;
	mov.b64 	%rd2730, {%r3733, %r3732};
	shf.r.wrap.b32 	%r3734, %r3731, %r3730, 18;
	shf.r.wrap.b32 	%r3735, %r3730, %r3731, 18;
	mov.b64 	%rd2731, {%r3735, %r3734};
	xor.b64  	%rd2732, %rd2730, %rd2731;
	shf.l.wrap.b32 	%r3736, %r3730, %r3731, 23;
	shf.l.wrap.b32 	%r3737, %r3731, %r3730, 23;
	mov.b64 	%rd2733, {%r3737, %r3736};
	xor.b64  	%rd2734, %rd2732, %rd2733;
	and.b64  	%rd2735, %rd2728, %rd2703;
	not.b64 	%rd2736, %rd2728;
	and.b64  	%rd2737, %rd2678, %rd2736;
	or.b64  	%rd2738, %rd2735, %rd2737;
	add.s64 	%rd2739, %rd2738, %rd2653;
	add.s64 	%rd2740, %rd2739, %rd2734;
	add.s64 	%rd2741, %rd2740, %rd67;
	add.s64 	%rd2742, %rd2741, %rd1398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3738,%dummy}, %rd2729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3739}, %rd2729;
	}
	shf.r.wrap.b32 	%r3740, %r3739, %r3738, 28;
	shf.r.wrap.b32 	%r3741, %r3738, %r3739, 28;
	mov.b64 	%rd2743, {%r3741, %r3740};
	shf.l.wrap.b32 	%r3742, %r3738, %r3739, 30;
	shf.l.wrap.b32 	%r3743, %r3739, %r3738, 30;
	mov.b64 	%rd2744, {%r3743, %r3742};
	xor.b64  	%rd2745, %rd2743, %rd2744;
	shf.l.wrap.b32 	%r3744, %r3738, %r3739, 25;
	shf.l.wrap.b32 	%r3745, %r3739, %r3738, 25;
	mov.b64 	%rd2746, {%r3745, %r3744};
	xor.b64  	%rd2747, %rd2745, %rd2746;
	xor.b64  	%rd2748, %rd2704, %rd2679;
	and.b64  	%rd2749, %rd2729, %rd2748;
	and.b64  	%rd2750, %rd2704, %rd2679;
	xor.b64  	%rd2751, %rd2749, %rd2750;
	add.s64 	%rd2752, %rd2747, %rd2751;
	add.s64 	%rd2753, %rd2742, %rd2654;
	add.s64 	%rd2754, %rd2752, %rd2742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3746,%dummy}, %rd2753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3747}, %rd2753;
	}
	shf.r.wrap.b32 	%r3748, %r3747, %r3746, 14;
	shf.r.wrap.b32 	%r3749, %r3746, %r3747, 14;
	mov.b64 	%rd2755, {%r3749, %r3748};
	shf.r.wrap.b32 	%r3750, %r3747, %r3746, 18;
	shf.r.wrap.b32 	%r3751, %r3746, %r3747, 18;
	mov.b64 	%rd2756, {%r3751, %r3750};
	xor.b64  	%rd2757, %rd2755, %rd2756;
	shf.l.wrap.b32 	%r3752, %r3746, %r3747, 23;
	shf.l.wrap.b32 	%r3753, %r3747, %r3746, 23;
	mov.b64 	%rd2758, {%r3753, %r3752};
	xor.b64  	%rd2759, %rd2757, %rd2758;
	and.b64  	%rd2760, %rd2753, %rd2728;
	not.b64 	%rd2761, %rd2753;
	and.b64  	%rd2762, %rd2703, %rd2761;
	or.b64  	%rd2763, %rd2760, %rd2762;
	add.s64 	%rd2764, %rd2763, %rd2678;
	add.s64 	%rd2765, %rd2764, %rd2759;
	add.s64 	%rd2766, %rd2765, %rd68;
	add.s64 	%rd2767, %rd2766, %rd1411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3754,%dummy}, %rd2754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3755}, %rd2754;
	}
	shf.r.wrap.b32 	%r3756, %r3755, %r3754, 28;
	shf.r.wrap.b32 	%r3757, %r3754, %r3755, 28;
	mov.b64 	%rd2768, {%r3757, %r3756};
	shf.l.wrap.b32 	%r3758, %r3754, %r3755, 30;
	shf.l.wrap.b32 	%r3759, %r3755, %r3754, 30;
	mov.b64 	%rd2769, {%r3759, %r3758};
	xor.b64  	%rd2770, %rd2768, %rd2769;
	shf.l.wrap.b32 	%r3760, %r3754, %r3755, 25;
	shf.l.wrap.b32 	%r3761, %r3755, %r3754, 25;
	mov.b64 	%rd2771, {%r3761, %r3760};
	xor.b64  	%rd2772, %rd2770, %rd2771;
	xor.b64  	%rd2773, %rd2729, %rd2704;
	and.b64  	%rd2774, %rd2754, %rd2773;
	and.b64  	%rd2775, %rd2729, %rd2704;
	xor.b64  	%rd2776, %rd2774, %rd2775;
	add.s64 	%rd2777, %rd2772, %rd2776;
	add.s64 	%rd2778, %rd2767, %rd2679;
	add.s64 	%rd2779, %rd2777, %rd2767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3762,%dummy}, %rd2778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3763}, %rd2778;
	}
	shf.r.wrap.b32 	%r3764, %r3763, %r3762, 14;
	shf.r.wrap.b32 	%r3765, %r3762, %r3763, 14;
	mov.b64 	%rd2780, {%r3765, %r3764};
	shf.r.wrap.b32 	%r3766, %r3763, %r3762, 18;
	shf.r.wrap.b32 	%r3767, %r3762, %r3763, 18;
	mov.b64 	%rd2781, {%r3767, %r3766};
	xor.b64  	%rd2782, %rd2780, %rd2781;
	shf.l.wrap.b32 	%r3768, %r3762, %r3763, 23;
	shf.l.wrap.b32 	%r3769, %r3763, %r3762, 23;
	mov.b64 	%rd2783, {%r3769, %r3768};
	xor.b64  	%rd2784, %rd2782, %rd2783;
	and.b64  	%rd2785, %rd2778, %rd2753;
	not.b64 	%rd2786, %rd2778;
	and.b64  	%rd2787, %rd2728, %rd2786;
	or.b64  	%rd2788, %rd2785, %rd2787;
	add.s64 	%rd2789, %rd2788, %rd2703;
	add.s64 	%rd2790, %rd2789, %rd2784;
	add.s64 	%rd2791, %rd2790, %rd69;
	add.s64 	%rd2792, %rd2791, %rd1424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3770,%dummy}, %rd2779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3771}, %rd2779;
	}
	shf.r.wrap.b32 	%r3772, %r3771, %r3770, 28;
	shf.r.wrap.b32 	%r3773, %r3770, %r3771, 28;
	mov.b64 	%rd2793, {%r3773, %r3772};
	shf.l.wrap.b32 	%r3774, %r3770, %r3771, 30;
	shf.l.wrap.b32 	%r3775, %r3771, %r3770, 30;
	mov.b64 	%rd2794, {%r3775, %r3774};
	xor.b64  	%rd2795, %rd2793, %rd2794;
	shf.l.wrap.b32 	%r3776, %r3770, %r3771, 25;
	shf.l.wrap.b32 	%r3777, %r3771, %r3770, 25;
	mov.b64 	%rd2796, {%r3777, %r3776};
	xor.b64  	%rd2797, %rd2795, %rd2796;
	xor.b64  	%rd2798, %rd2754, %rd2729;
	and.b64  	%rd2799, %rd2779, %rd2798;
	and.b64  	%rd2800, %rd2754, %rd2729;
	xor.b64  	%rd2801, %rd2799, %rd2800;
	add.s64 	%rd2802, %rd2797, %rd2801;
	add.s64 	%rd2803, %rd2792, %rd2704;
	add.s64 	%rd2804, %rd2802, %rd2792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3778,%dummy}, %rd2803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3779}, %rd2803;
	}
	shf.r.wrap.b32 	%r3780, %r3779, %r3778, 14;
	shf.r.wrap.b32 	%r3781, %r3778, %r3779, 14;
	mov.b64 	%rd2805, {%r3781, %r3780};
	shf.r.wrap.b32 	%r3782, %r3779, %r3778, 18;
	shf.r.wrap.b32 	%r3783, %r3778, %r3779, 18;
	mov.b64 	%rd2806, {%r3783, %r3782};
	xor.b64  	%rd2807, %rd2805, %rd2806;
	shf.l.wrap.b32 	%r3784, %r3778, %r3779, 23;
	shf.l.wrap.b32 	%r3785, %r3779, %r3778, 23;
	mov.b64 	%rd2808, {%r3785, %r3784};
	xor.b64  	%rd2809, %rd2807, %rd2808;
	and.b64  	%rd2810, %rd2803, %rd2778;
	not.b64 	%rd2811, %rd2803;
	and.b64  	%rd2812, %rd2753, %rd2811;
	or.b64  	%rd2813, %rd2810, %rd2812;
	add.s64 	%rd2814, %rd2813, %rd2728;
	add.s64 	%rd2815, %rd2814, %rd2809;
	add.s64 	%rd2816, %rd2815, %rd70;
	add.s64 	%rd2817, %rd2816, %rd1437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3786,%dummy}, %rd2804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3787}, %rd2804;
	}
	shf.r.wrap.b32 	%r3788, %r3787, %r3786, 28;
	shf.r.wrap.b32 	%r3789, %r3786, %r3787, 28;
	mov.b64 	%rd2818, {%r3789, %r3788};
	shf.l.wrap.b32 	%r3790, %r3786, %r3787, 30;
	shf.l.wrap.b32 	%r3791, %r3787, %r3786, 30;
	mov.b64 	%rd2819, {%r3791, %r3790};
	xor.b64  	%rd2820, %rd2818, %rd2819;
	shf.l.wrap.b32 	%r3792, %r3786, %r3787, 25;
	shf.l.wrap.b32 	%r3793, %r3787, %r3786, 25;
	mov.b64 	%rd2821, {%r3793, %r3792};
	xor.b64  	%rd2822, %rd2820, %rd2821;
	xor.b64  	%rd2823, %rd2779, %rd2754;
	and.b64  	%rd2824, %rd2804, %rd2823;
	and.b64  	%rd2825, %rd2779, %rd2754;
	xor.b64  	%rd2826, %rd2824, %rd2825;
	add.s64 	%rd2827, %rd2822, %rd2826;
	add.s64 	%rd2828, %rd2817, %rd2729;
	add.s64 	%rd2829, %rd2827, %rd2817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3794,%dummy}, %rd2828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3795}, %rd2828;
	}
	shf.r.wrap.b32 	%r3796, %r3795, %r3794, 14;
	shf.r.wrap.b32 	%r3797, %r3794, %r3795, 14;
	mov.b64 	%rd2830, {%r3797, %r3796};
	shf.r.wrap.b32 	%r3798, %r3795, %r3794, 18;
	shf.r.wrap.b32 	%r3799, %r3794, %r3795, 18;
	mov.b64 	%rd2831, {%r3799, %r3798};
	xor.b64  	%rd2832, %rd2830, %rd2831;
	shf.l.wrap.b32 	%r3800, %r3794, %r3795, 23;
	shf.l.wrap.b32 	%r3801, %r3795, %r3794, 23;
	mov.b64 	%rd2833, {%r3801, %r3800};
	xor.b64  	%rd2834, %rd2832, %rd2833;
	and.b64  	%rd2835, %rd2828, %rd2803;
	not.b64 	%rd2836, %rd2828;
	and.b64  	%rd2837, %rd2778, %rd2836;
	or.b64  	%rd2838, %rd2835, %rd2837;
	add.s64 	%rd2839, %rd2838, %rd2753;
	add.s64 	%rd2840, %rd2839, %rd2834;
	add.s64 	%rd2841, %rd2840, %rd71;
	add.s64 	%rd2842, %rd2841, %rd1450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3802,%dummy}, %rd2829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3803}, %rd2829;
	}
	shf.r.wrap.b32 	%r3804, %r3803, %r3802, 28;
	shf.r.wrap.b32 	%r3805, %r3802, %r3803, 28;
	mov.b64 	%rd2843, {%r3805, %r3804};
	shf.l.wrap.b32 	%r3806, %r3802, %r3803, 30;
	shf.l.wrap.b32 	%r3807, %r3803, %r3802, 30;
	mov.b64 	%rd2844, {%r3807, %r3806};
	xor.b64  	%rd2845, %rd2843, %rd2844;
	shf.l.wrap.b32 	%r3808, %r3802, %r3803, 25;
	shf.l.wrap.b32 	%r3809, %r3803, %r3802, 25;
	mov.b64 	%rd2846, {%r3809, %r3808};
	xor.b64  	%rd2847, %rd2845, %rd2846;
	xor.b64  	%rd2848, %rd2804, %rd2779;
	and.b64  	%rd2849, %rd2829, %rd2848;
	and.b64  	%rd2850, %rd2804, %rd2779;
	xor.b64  	%rd2851, %rd2849, %rd2850;
	add.s64 	%rd2852, %rd2847, %rd2851;
	add.s64 	%rd2853, %rd2842, %rd2754;
	add.s64 	%rd2854, %rd2852, %rd2842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3810,%dummy}, %rd2853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3811}, %rd2853;
	}
	shf.r.wrap.b32 	%r3812, %r3811, %r3810, 14;
	shf.r.wrap.b32 	%r3813, %r3810, %r3811, 14;
	mov.b64 	%rd2855, {%r3813, %r3812};
	shf.r.wrap.b32 	%r3814, %r3811, %r3810, 18;
	shf.r.wrap.b32 	%r3815, %r3810, %r3811, 18;
	mov.b64 	%rd2856, {%r3815, %r3814};
	xor.b64  	%rd2857, %rd2855, %rd2856;
	shf.l.wrap.b32 	%r3816, %r3810, %r3811, 23;
	shf.l.wrap.b32 	%r3817, %r3811, %r3810, 23;
	mov.b64 	%rd2858, {%r3817, %r3816};
	xor.b64  	%rd2859, %rd2857, %rd2858;
	and.b64  	%rd2860, %rd2853, %rd2828;
	not.b64 	%rd2861, %rd2853;
	and.b64  	%rd2862, %rd2803, %rd2861;
	or.b64  	%rd2863, %rd2860, %rd2862;
	add.s64 	%rd2864, %rd2863, %rd2778;
	add.s64 	%rd2865, %rd2864, %rd2859;
	add.s64 	%rd2866, %rd2865, %rd72;
	add.s64 	%rd2867, %rd2866, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3818,%dummy}, %rd2854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3819}, %rd2854;
	}
	shf.r.wrap.b32 	%r3820, %r3819, %r3818, 28;
	shf.r.wrap.b32 	%r3821, %r3818, %r3819, 28;
	mov.b64 	%rd2868, {%r3821, %r3820};
	shf.l.wrap.b32 	%r3822, %r3818, %r3819, 30;
	shf.l.wrap.b32 	%r3823, %r3819, %r3818, 30;
	mov.b64 	%rd2869, {%r3823, %r3822};
	xor.b64  	%rd2870, %rd2868, %rd2869;
	shf.l.wrap.b32 	%r3824, %r3818, %r3819, 25;
	shf.l.wrap.b32 	%r3825, %r3819, %r3818, 25;
	mov.b64 	%rd2871, {%r3825, %r3824};
	xor.b64  	%rd2872, %rd2870, %rd2871;
	xor.b64  	%rd2873, %rd2829, %rd2804;
	and.b64  	%rd2874, %rd2854, %rd2873;
	and.b64  	%rd2875, %rd2829, %rd2804;
	xor.b64  	%rd2876, %rd2874, %rd2875;
	add.s64 	%rd2877, %rd2872, %rd2876;
	add.s64 	%rd2878, %rd2867, %rd2779;
	add.s64 	%rd2879, %rd2877, %rd2867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3826,%dummy}, %rd2878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3827}, %rd2878;
	}
	shf.r.wrap.b32 	%r3828, %r3827, %r3826, 14;
	shf.r.wrap.b32 	%r3829, %r3826, %r3827, 14;
	mov.b64 	%rd2880, {%r3829, %r3828};
	shf.r.wrap.b32 	%r3830, %r3827, %r3826, 18;
	shf.r.wrap.b32 	%r3831, %r3826, %r3827, 18;
	mov.b64 	%rd2881, {%r3831, %r3830};
	xor.b64  	%rd2882, %rd2880, %rd2881;
	shf.l.wrap.b32 	%r3832, %r3826, %r3827, 23;
	shf.l.wrap.b32 	%r3833, %r3827, %r3826, 23;
	mov.b64 	%rd2883, {%r3833, %r3832};
	xor.b64  	%rd2884, %rd2882, %rd2883;
	and.b64  	%rd2885, %rd2878, %rd2853;
	not.b64 	%rd2886, %rd2878;
	and.b64  	%rd2887, %rd2828, %rd2886;
	or.b64  	%rd2888, %rd2885, %rd2887;
	add.s64 	%rd2889, %rd2888, %rd2803;
	add.s64 	%rd2890, %rd2889, %rd2884;
	add.s64 	%rd2891, %rd2890, %rd73;
	add.s64 	%rd2892, %rd2891, %rd1476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3834,%dummy}, %rd2879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3835}, %rd2879;
	}
	shf.r.wrap.b32 	%r3836, %r3835, %r3834, 28;
	shf.r.wrap.b32 	%r3837, %r3834, %r3835, 28;
	mov.b64 	%rd2893, {%r3837, %r3836};
	shf.l.wrap.b32 	%r3838, %r3834, %r3835, 30;
	shf.l.wrap.b32 	%r3839, %r3835, %r3834, 30;
	mov.b64 	%rd2894, {%r3839, %r3838};
	xor.b64  	%rd2895, %rd2893, %rd2894;
	shf.l.wrap.b32 	%r3840, %r3834, %r3835, 25;
	shf.l.wrap.b32 	%r3841, %r3835, %r3834, 25;
	mov.b64 	%rd2896, {%r3841, %r3840};
	xor.b64  	%rd2897, %rd2895, %rd2896;
	xor.b64  	%rd2898, %rd2854, %rd2829;
	and.b64  	%rd2899, %rd2879, %rd2898;
	and.b64  	%rd2900, %rd2854, %rd2829;
	xor.b64  	%rd2901, %rd2899, %rd2900;
	add.s64 	%rd2902, %rd2897, %rd2901;
	add.s64 	%rd2903, %rd2892, %rd2804;
	add.s64 	%rd2904, %rd2902, %rd2892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3842,%dummy}, %rd2903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3843}, %rd2903;
	}
	shf.r.wrap.b32 	%r3844, %r3843, %r3842, 14;
	shf.r.wrap.b32 	%r3845, %r3842, %r3843, 14;
	mov.b64 	%rd2905, {%r3845, %r3844};
	shf.r.wrap.b32 	%r3846, %r3843, %r3842, 18;
	shf.r.wrap.b32 	%r3847, %r3842, %r3843, 18;
	mov.b64 	%rd2906, {%r3847, %r3846};
	xor.b64  	%rd2907, %rd2905, %rd2906;
	shf.l.wrap.b32 	%r3848, %r3842, %r3843, 23;
	shf.l.wrap.b32 	%r3849, %r3843, %r3842, 23;
	mov.b64 	%rd2908, {%r3849, %r3848};
	xor.b64  	%rd2909, %rd2907, %rd2908;
	and.b64  	%rd2910, %rd2903, %rd2878;
	not.b64 	%rd2911, %rd2903;
	and.b64  	%rd2912, %rd2853, %rd2911;
	or.b64  	%rd2913, %rd2910, %rd2912;
	add.s64 	%rd2914, %rd2913, %rd2828;
	add.s64 	%rd2915, %rd2914, %rd2909;
	add.s64 	%rd2916, %rd2915, %rd74;
	add.s64 	%rd2917, %rd2916, %rd1489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3850,%dummy}, %rd2904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3851}, %rd2904;
	}
	shf.r.wrap.b32 	%r3852, %r3851, %r3850, 28;
	shf.r.wrap.b32 	%r3853, %r3850, %r3851, 28;
	mov.b64 	%rd2918, {%r3853, %r3852};
	shf.l.wrap.b32 	%r3854, %r3850, %r3851, 30;
	shf.l.wrap.b32 	%r3855, %r3851, %r3850, 30;
	mov.b64 	%rd2919, {%r3855, %r3854};
	xor.b64  	%rd2920, %rd2918, %rd2919;
	shf.l.wrap.b32 	%r3856, %r3850, %r3851, 25;
	shf.l.wrap.b32 	%r3857, %r3851, %r3850, 25;
	mov.b64 	%rd2921, {%r3857, %r3856};
	xor.b64  	%rd2922, %rd2920, %rd2921;
	xor.b64  	%rd2923, %rd2879, %rd2854;
	and.b64  	%rd2924, %rd2904, %rd2923;
	and.b64  	%rd2925, %rd2879, %rd2854;
	xor.b64  	%rd2926, %rd2924, %rd2925;
	add.s64 	%rd2927, %rd2922, %rd2926;
	add.s64 	%rd2928, %rd2917, %rd2829;
	add.s64 	%rd2929, %rd2927, %rd2917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3858,%dummy}, %rd2928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3859}, %rd2928;
	}
	shf.r.wrap.b32 	%r3860, %r3859, %r3858, 14;
	shf.r.wrap.b32 	%r3861, %r3858, %r3859, 14;
	mov.b64 	%rd2930, {%r3861, %r3860};
	shf.r.wrap.b32 	%r3862, %r3859, %r3858, 18;
	shf.r.wrap.b32 	%r3863, %r3858, %r3859, 18;
	mov.b64 	%rd2931, {%r3863, %r3862};
	xor.b64  	%rd2932, %rd2930, %rd2931;
	shf.l.wrap.b32 	%r3864, %r3858, %r3859, 23;
	shf.l.wrap.b32 	%r3865, %r3859, %r3858, 23;
	mov.b64 	%rd2933, {%r3865, %r3864};
	xor.b64  	%rd2934, %rd2932, %rd2933;
	and.b64  	%rd2935, %rd2928, %rd2903;
	not.b64 	%rd2936, %rd2928;
	and.b64  	%rd2937, %rd2878, %rd2936;
	or.b64  	%rd2938, %rd2935, %rd2937;
	add.s64 	%rd2939, %rd2938, %rd2853;
	add.s64 	%rd2940, %rd2939, %rd2934;
	add.s64 	%rd2941, %rd2940, %rd75;
	add.s64 	%rd2942, %rd2941, %rd1502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3866,%dummy}, %rd2929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3867}, %rd2929;
	}
	shf.r.wrap.b32 	%r3868, %r3867, %r3866, 28;
	shf.r.wrap.b32 	%r3869, %r3866, %r3867, 28;
	mov.b64 	%rd2943, {%r3869, %r3868};
	shf.l.wrap.b32 	%r3870, %r3866, %r3867, 30;
	shf.l.wrap.b32 	%r3871, %r3867, %r3866, 30;
	mov.b64 	%rd2944, {%r3871, %r3870};
	xor.b64  	%rd2945, %rd2943, %rd2944;
	shf.l.wrap.b32 	%r3872, %r3866, %r3867, 25;
	shf.l.wrap.b32 	%r3873, %r3867, %r3866, 25;
	mov.b64 	%rd2946, {%r3873, %r3872};
	xor.b64  	%rd2947, %rd2945, %rd2946;
	xor.b64  	%rd2948, %rd2904, %rd2879;
	and.b64  	%rd2949, %rd2929, %rd2948;
	and.b64  	%rd2950, %rd2904, %rd2879;
	xor.b64  	%rd2951, %rd2949, %rd2950;
	add.s64 	%rd2952, %rd2947, %rd2951;
	add.s64 	%rd2953, %rd2942, %rd2854;
	add.s64 	%rd2954, %rd2952, %rd2942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3874,%dummy}, %rd2953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3875}, %rd2953;
	}
	shf.r.wrap.b32 	%r3876, %r3875, %r3874, 14;
	shf.r.wrap.b32 	%r3877, %r3874, %r3875, 14;
	mov.b64 	%rd2955, {%r3877, %r3876};
	shf.r.wrap.b32 	%r3878, %r3875, %r3874, 18;
	shf.r.wrap.b32 	%r3879, %r3874, %r3875, 18;
	mov.b64 	%rd2956, {%r3879, %r3878};
	xor.b64  	%rd2957, %rd2955, %rd2956;
	shf.l.wrap.b32 	%r3880, %r3874, %r3875, 23;
	shf.l.wrap.b32 	%r3881, %r3875, %r3874, 23;
	mov.b64 	%rd2958, {%r3881, %r3880};
	xor.b64  	%rd2959, %rd2957, %rd2958;
	and.b64  	%rd2960, %rd2953, %rd2928;
	not.b64 	%rd2961, %rd2953;
	and.b64  	%rd2962, %rd2903, %rd2961;
	or.b64  	%rd2963, %rd2960, %rd2962;
	add.s64 	%rd2964, %rd2963, %rd2878;
	add.s64 	%rd2965, %rd2964, %rd2959;
	add.s64 	%rd2966, %rd2965, %rd76;
	add.s64 	%rd2967, %rd2966, %rd1515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3882,%dummy}, %rd2954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3883}, %rd2954;
	}
	shf.r.wrap.b32 	%r3884, %r3883, %r3882, 28;
	shf.r.wrap.b32 	%r3885, %r3882, %r3883, 28;
	mov.b64 	%rd2968, {%r3885, %r3884};
	shf.l.wrap.b32 	%r3886, %r3882, %r3883, 30;
	shf.l.wrap.b32 	%r3887, %r3883, %r3882, 30;
	mov.b64 	%rd2969, {%r3887, %r3886};
	xor.b64  	%rd2970, %rd2968, %rd2969;
	shf.l.wrap.b32 	%r3888, %r3882, %r3883, 25;
	shf.l.wrap.b32 	%r3889, %r3883, %r3882, 25;
	mov.b64 	%rd2971, {%r3889, %r3888};
	xor.b64  	%rd2972, %rd2970, %rd2971;
	xor.b64  	%rd2973, %rd2929, %rd2904;
	and.b64  	%rd2974, %rd2954, %rd2973;
	and.b64  	%rd2975, %rd2929, %rd2904;
	xor.b64  	%rd2976, %rd2974, %rd2975;
	add.s64 	%rd2977, %rd2972, %rd2976;
	add.s64 	%rd2978, %rd2967, %rd2879;
	add.s64 	%rd2979, %rd2977, %rd2967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3890,%dummy}, %rd2978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3891}, %rd2978;
	}
	shf.r.wrap.b32 	%r3892, %r3891, %r3890, 14;
	shf.r.wrap.b32 	%r3893, %r3890, %r3891, 14;
	mov.b64 	%rd2980, {%r3893, %r3892};
	shf.r.wrap.b32 	%r3894, %r3891, %r3890, 18;
	shf.r.wrap.b32 	%r3895, %r3890, %r3891, 18;
	mov.b64 	%rd2981, {%r3895, %r3894};
	xor.b64  	%rd2982, %rd2980, %rd2981;
	shf.l.wrap.b32 	%r3896, %r3890, %r3891, 23;
	shf.l.wrap.b32 	%r3897, %r3891, %r3890, 23;
	mov.b64 	%rd2983, {%r3897, %r3896};
	xor.b64  	%rd2984, %rd2982, %rd2983;
	and.b64  	%rd2985, %rd2978, %rd2953;
	not.b64 	%rd2986, %rd2978;
	and.b64  	%rd2987, %rd2928, %rd2986;
	or.b64  	%rd2988, %rd2985, %rd2987;
	add.s64 	%rd2989, %rd2988, %rd2903;
	add.s64 	%rd2990, %rd2989, %rd2984;
	add.s64 	%rd2991, %rd2990, %rd77;
	add.s64 	%rd2992, %rd2991, %rd1528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3898,%dummy}, %rd2979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3899}, %rd2979;
	}
	shf.r.wrap.b32 	%r3900, %r3899, %r3898, 28;
	shf.r.wrap.b32 	%r3901, %r3898, %r3899, 28;
	mov.b64 	%rd2993, {%r3901, %r3900};
	shf.l.wrap.b32 	%r3902, %r3898, %r3899, 30;
	shf.l.wrap.b32 	%r3903, %r3899, %r3898, 30;
	mov.b64 	%rd2994, {%r3903, %r3902};
	xor.b64  	%rd2995, %rd2993, %rd2994;
	shf.l.wrap.b32 	%r3904, %r3898, %r3899, 25;
	shf.l.wrap.b32 	%r3905, %r3899, %r3898, 25;
	mov.b64 	%rd2996, {%r3905, %r3904};
	xor.b64  	%rd2997, %rd2995, %rd2996;
	xor.b64  	%rd2998, %rd2954, %rd2929;
	and.b64  	%rd2999, %rd2979, %rd2998;
	and.b64  	%rd3000, %rd2954, %rd2929;
	xor.b64  	%rd3001, %rd2999, %rd3000;
	add.s64 	%rd3002, %rd2997, %rd3001;
	add.s64 	%rd3003, %rd2992, %rd2904;
	add.s64 	%rd3004, %rd3002, %rd2992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3906,%dummy}, %rd3003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3907}, %rd3003;
	}
	shf.r.wrap.b32 	%r3908, %r3907, %r3906, 14;
	shf.r.wrap.b32 	%r3909, %r3906, %r3907, 14;
	mov.b64 	%rd3005, {%r3909, %r3908};
	shf.r.wrap.b32 	%r3910, %r3907, %r3906, 18;
	shf.r.wrap.b32 	%r3911, %r3906, %r3907, 18;
	mov.b64 	%rd3006, {%r3911, %r3910};
	xor.b64  	%rd3007, %rd3005, %rd3006;
	shf.l.wrap.b32 	%r3912, %r3906, %r3907, 23;
	shf.l.wrap.b32 	%r3913, %r3907, %r3906, 23;
	mov.b64 	%rd3008, {%r3913, %r3912};
	xor.b64  	%rd3009, %rd3007, %rd3008;
	and.b64  	%rd3010, %rd3003, %rd2978;
	not.b64 	%rd3011, %rd3003;
	and.b64  	%rd3012, %rd2953, %rd3011;
	or.b64  	%rd3013, %rd3010, %rd3012;
	add.s64 	%rd3014, %rd3013, %rd2928;
	add.s64 	%rd3015, %rd3014, %rd3009;
	add.s64 	%rd3016, %rd3015, %rd78;
	add.s64 	%rd3017, %rd3016, %rd1541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3914,%dummy}, %rd3004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3915}, %rd3004;
	}
	shf.r.wrap.b32 	%r3916, %r3915, %r3914, 28;
	shf.r.wrap.b32 	%r3917, %r3914, %r3915, 28;
	mov.b64 	%rd3018, {%r3917, %r3916};
	shf.l.wrap.b32 	%r3918, %r3914, %r3915, 30;
	shf.l.wrap.b32 	%r3919, %r3915, %r3914, 30;
	mov.b64 	%rd3019, {%r3919, %r3918};
	xor.b64  	%rd3020, %rd3018, %rd3019;
	shf.l.wrap.b32 	%r3920, %r3914, %r3915, 25;
	shf.l.wrap.b32 	%r3921, %r3915, %r3914, 25;
	mov.b64 	%rd3021, {%r3921, %r3920};
	xor.b64  	%rd3022, %rd3020, %rd3021;
	xor.b64  	%rd3023, %rd2979, %rd2954;
	and.b64  	%rd3024, %rd3004, %rd3023;
	and.b64  	%rd3025, %rd2979, %rd2954;
	xor.b64  	%rd3026, %rd3024, %rd3025;
	add.s64 	%rd3027, %rd3022, %rd3026;
	add.s64 	%rd3028, %rd3017, %rd2929;
	add.s64 	%rd3029, %rd3027, %rd3017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3922,%dummy}, %rd3028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3923}, %rd3028;
	}
	shf.r.wrap.b32 	%r3924, %r3923, %r3922, 14;
	shf.r.wrap.b32 	%r3925, %r3922, %r3923, 14;
	mov.b64 	%rd3030, {%r3925, %r3924};
	shf.r.wrap.b32 	%r3926, %r3923, %r3922, 18;
	shf.r.wrap.b32 	%r3927, %r3922, %r3923, 18;
	mov.b64 	%rd3031, {%r3927, %r3926};
	xor.b64  	%rd3032, %rd3030, %rd3031;
	shf.l.wrap.b32 	%r3928, %r3922, %r3923, 23;
	shf.l.wrap.b32 	%r3929, %r3923, %r3922, 23;
	mov.b64 	%rd3033, {%r3929, %r3928};
	xor.b64  	%rd3034, %rd3032, %rd3033;
	and.b64  	%rd3035, %rd3028, %rd3003;
	not.b64 	%rd3036, %rd3028;
	and.b64  	%rd3037, %rd2978, %rd3036;
	or.b64  	%rd3038, %rd3035, %rd3037;
	add.s64 	%rd3039, %rd3038, %rd2953;
	add.s64 	%rd3040, %rd3039, %rd3034;
	add.s64 	%rd3041, %rd3040, %rd79;
	add.s64 	%rd3042, %rd3041, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3930,%dummy}, %rd3029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3931}, %rd3029;
	}
	shf.r.wrap.b32 	%r3932, %r3931, %r3930, 28;
	shf.r.wrap.b32 	%r3933, %r3930, %r3931, 28;
	mov.b64 	%rd3043, {%r3933, %r3932};
	shf.l.wrap.b32 	%r3934, %r3930, %r3931, 30;
	shf.l.wrap.b32 	%r3935, %r3931, %r3930, 30;
	mov.b64 	%rd3044, {%r3935, %r3934};
	xor.b64  	%rd3045, %rd3043, %rd3044;
	shf.l.wrap.b32 	%r3936, %r3930, %r3931, 25;
	shf.l.wrap.b32 	%r3937, %r3931, %r3930, 25;
	mov.b64 	%rd3046, {%r3937, %r3936};
	xor.b64  	%rd3047, %rd3045, %rd3046;
	xor.b64  	%rd3048, %rd3004, %rd2979;
	and.b64  	%rd3049, %rd3029, %rd3048;
	and.b64  	%rd3050, %rd3004, %rd2979;
	xor.b64  	%rd3051, %rd3049, %rd3050;
	add.s64 	%rd3052, %rd3047, %rd3051;
	add.s64 	%rd3053, %rd3042, %rd2954;
	add.s64 	%rd3054, %rd3052, %rd3042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3938,%dummy}, %rd3053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3939}, %rd3053;
	}
	shf.r.wrap.b32 	%r3940, %r3939, %r3938, 14;
	shf.r.wrap.b32 	%r3941, %r3938, %r3939, 14;
	mov.b64 	%rd3055, {%r3941, %r3940};
	shf.r.wrap.b32 	%r3942, %r3939, %r3938, 18;
	shf.r.wrap.b32 	%r3943, %r3938, %r3939, 18;
	mov.b64 	%rd3056, {%r3943, %r3942};
	xor.b64  	%rd3057, %rd3055, %rd3056;
	shf.l.wrap.b32 	%r3944, %r3938, %r3939, 23;
	shf.l.wrap.b32 	%r3945, %r3939, %r3938, 23;
	mov.b64 	%rd3058, {%r3945, %r3944};
	xor.b64  	%rd3059, %rd3057, %rd3058;
	and.b64  	%rd3060, %rd3053, %rd3028;
	not.b64 	%rd3061, %rd3053;
	and.b64  	%rd3062, %rd3003, %rd3061;
	or.b64  	%rd3063, %rd3060, %rd3062;
	add.s64 	%rd3064, %rd3063, %rd2978;
	add.s64 	%rd3065, %rd3064, %rd3059;
	add.s64 	%rd3066, %rd3065, %rd80;
	add.s64 	%rd3067, %rd3066, %rd1567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3946,%dummy}, %rd3054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3947}, %rd3054;
	}
	shf.r.wrap.b32 	%r3948, %r3947, %r3946, 28;
	shf.r.wrap.b32 	%r3949, %r3946, %r3947, 28;
	mov.b64 	%rd3068, {%r3949, %r3948};
	shf.l.wrap.b32 	%r3950, %r3946, %r3947, 30;
	shf.l.wrap.b32 	%r3951, %r3947, %r3946, 30;
	mov.b64 	%rd3069, {%r3951, %r3950};
	xor.b64  	%rd3070, %rd3068, %rd3069;
	shf.l.wrap.b32 	%r3952, %r3946, %r3947, 25;
	shf.l.wrap.b32 	%r3953, %r3947, %r3946, 25;
	mov.b64 	%rd3071, {%r3953, %r3952};
	xor.b64  	%rd3072, %rd3070, %rd3071;
	xor.b64  	%rd3073, %rd3029, %rd3004;
	and.b64  	%rd3074, %rd3054, %rd3073;
	and.b64  	%rd3075, %rd3029, %rd3004;
	xor.b64  	%rd3076, %rd3074, %rd3075;
	add.s64 	%rd3077, %rd3072, %rd3076;
	add.s64 	%rd3078, %rd3067, %rd2979;
	add.s64 	%rd3079, %rd3077, %rd3067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3954,%dummy}, %rd3078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3955}, %rd3078;
	}
	shf.r.wrap.b32 	%r3956, %r3955, %r3954, 14;
	shf.r.wrap.b32 	%r3957, %r3954, %r3955, 14;
	mov.b64 	%rd3080, {%r3957, %r3956};
	shf.r.wrap.b32 	%r3958, %r3955, %r3954, 18;
	shf.r.wrap.b32 	%r3959, %r3954, %r3955, 18;
	mov.b64 	%rd3081, {%r3959, %r3958};
	xor.b64  	%rd3082, %rd3080, %rd3081;
	shf.l.wrap.b32 	%r3960, %r3954, %r3955, 23;
	shf.l.wrap.b32 	%r3961, %r3955, %r3954, 23;
	mov.b64 	%rd3083, {%r3961, %r3960};
	xor.b64  	%rd3084, %rd3082, %rd3083;
	and.b64  	%rd3085, %rd3078, %rd3053;
	not.b64 	%rd3086, %rd3078;
	and.b64  	%rd3087, %rd3028, %rd3086;
	or.b64  	%rd3088, %rd3085, %rd3087;
	add.s64 	%rd3089, %rd3088, %rd3003;
	add.s64 	%rd3090, %rd3089, %rd3084;
	add.s64 	%rd3091, %rd3090, %rd81;
	add.s64 	%rd3092, %rd3091, %rd1580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3962,%dummy}, %rd3079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3963}, %rd3079;
	}
	shf.r.wrap.b32 	%r3964, %r3963, %r3962, 28;
	shf.r.wrap.b32 	%r3965, %r3962, %r3963, 28;
	mov.b64 	%rd3093, {%r3965, %r3964};
	shf.l.wrap.b32 	%r3966, %r3962, %r3963, 30;
	shf.l.wrap.b32 	%r3967, %r3963, %r3962, 30;
	mov.b64 	%rd3094, {%r3967, %r3966};
	xor.b64  	%rd3095, %rd3093, %rd3094;
	shf.l.wrap.b32 	%r3968, %r3962, %r3963, 25;
	shf.l.wrap.b32 	%r3969, %r3963, %r3962, 25;
	mov.b64 	%rd3096, {%r3969, %r3968};
	xor.b64  	%rd3097, %rd3095, %rd3096;
	xor.b64  	%rd3098, %rd3054, %rd3029;
	and.b64  	%rd3099, %rd3079, %rd3098;
	and.b64  	%rd3100, %rd3054, %rd3029;
	xor.b64  	%rd3101, %rd3099, %rd3100;
	add.s64 	%rd3102, %rd3097, %rd3101;
	add.s64 	%rd3103, %rd3092, %rd3004;
	add.s64 	%rd3104, %rd3102, %rd3092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3970,%dummy}, %rd3103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3971}, %rd3103;
	}
	shf.r.wrap.b32 	%r3972, %r3971, %r3970, 14;
	shf.r.wrap.b32 	%r3973, %r3970, %r3971, 14;
	mov.b64 	%rd3105, {%r3973, %r3972};
	shf.r.wrap.b32 	%r3974, %r3971, %r3970, 18;
	shf.r.wrap.b32 	%r3975, %r3970, %r3971, 18;
	mov.b64 	%rd3106, {%r3975, %r3974};
	xor.b64  	%rd3107, %rd3105, %rd3106;
	shf.l.wrap.b32 	%r3976, %r3970, %r3971, 23;
	shf.l.wrap.b32 	%r3977, %r3971, %r3970, 23;
	mov.b64 	%rd3108, {%r3977, %r3976};
	xor.b64  	%rd3109, %rd3107, %rd3108;
	and.b64  	%rd3110, %rd3103, %rd3078;
	not.b64 	%rd3111, %rd3103;
	and.b64  	%rd3112, %rd3053, %rd3111;
	or.b64  	%rd3113, %rd3110, %rd3112;
	add.s64 	%rd3114, %rd3113, %rd3028;
	add.s64 	%rd3115, %rd3114, %rd3109;
	add.s64 	%rd3116, %rd3115, %rd82;
	add.s64 	%rd3117, %rd3116, %rd1593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3978,%dummy}, %rd3104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3979}, %rd3104;
	}
	shf.r.wrap.b32 	%r3980, %r3979, %r3978, 28;
	shf.r.wrap.b32 	%r3981, %r3978, %r3979, 28;
	mov.b64 	%rd3118, {%r3981, %r3980};
	shf.l.wrap.b32 	%r3982, %r3978, %r3979, 30;
	shf.l.wrap.b32 	%r3983, %r3979, %r3978, 30;
	mov.b64 	%rd3119, {%r3983, %r3982};
	xor.b64  	%rd3120, %rd3118, %rd3119;
	shf.l.wrap.b32 	%r3984, %r3978, %r3979, 25;
	shf.l.wrap.b32 	%r3985, %r3979, %r3978, 25;
	mov.b64 	%rd3121, {%r3985, %r3984};
	xor.b64  	%rd3122, %rd3120, %rd3121;
	xor.b64  	%rd3123, %rd3079, %rd3054;
	and.b64  	%rd3124, %rd3104, %rd3123;
	and.b64  	%rd3125, %rd3079, %rd3054;
	xor.b64  	%rd3126, %rd3124, %rd3125;
	add.s64 	%rd3127, %rd3122, %rd3126;
	add.s64 	%rd3128, %rd3117, %rd3029;
	add.s64 	%rd3129, %rd3127, %rd3117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3986,%dummy}, %rd3128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3987}, %rd3128;
	}
	shf.r.wrap.b32 	%r3988, %r3987, %r3986, 14;
	shf.r.wrap.b32 	%r3989, %r3986, %r3987, 14;
	mov.b64 	%rd3130, {%r3989, %r3988};
	shf.r.wrap.b32 	%r3990, %r3987, %r3986, 18;
	shf.r.wrap.b32 	%r3991, %r3986, %r3987, 18;
	mov.b64 	%rd3131, {%r3991, %r3990};
	xor.b64  	%rd3132, %rd3130, %rd3131;
	shf.l.wrap.b32 	%r3992, %r3986, %r3987, 23;
	shf.l.wrap.b32 	%r3993, %r3987, %r3986, 23;
	mov.b64 	%rd3133, {%r3993, %r3992};
	xor.b64  	%rd3134, %rd3132, %rd3133;
	and.b64  	%rd3135, %rd3128, %rd3103;
	not.b64 	%rd3136, %rd3128;
	and.b64  	%rd3137, %rd3078, %rd3136;
	or.b64  	%rd3138, %rd3135, %rd3137;
	add.s64 	%rd3139, %rd3138, %rd3053;
	add.s64 	%rd3140, %rd3139, %rd3134;
	add.s64 	%rd3141, %rd3140, %rd83;
	add.s64 	%rd3142, %rd3141, %rd1606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3994,%dummy}, %rd3129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3995}, %rd3129;
	}
	shf.r.wrap.b32 	%r3996, %r3995, %r3994, 28;
	shf.r.wrap.b32 	%r3997, %r3994, %r3995, 28;
	mov.b64 	%rd3143, {%r3997, %r3996};
	shf.l.wrap.b32 	%r3998, %r3994, %r3995, 30;
	shf.l.wrap.b32 	%r3999, %r3995, %r3994, 30;
	mov.b64 	%rd3144, {%r3999, %r3998};
	xor.b64  	%rd3145, %rd3143, %rd3144;
	shf.l.wrap.b32 	%r4000, %r3994, %r3995, 25;
	shf.l.wrap.b32 	%r4001, %r3995, %r3994, 25;
	mov.b64 	%rd3146, {%r4001, %r4000};
	xor.b64  	%rd3147, %rd3145, %rd3146;
	xor.b64  	%rd3148, %rd3104, %rd3079;
	and.b64  	%rd3149, %rd3129, %rd3148;
	and.b64  	%rd3150, %rd3104, %rd3079;
	xor.b64  	%rd3151, %rd3149, %rd3150;
	add.s64 	%rd3152, %rd3147, %rd3151;
	add.s64 	%rd3153, %rd3142, %rd3054;
	add.s64 	%rd3154, %rd3152, %rd3142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4002,%dummy}, %rd3153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4003}, %rd3153;
	}
	shf.r.wrap.b32 	%r4004, %r4003, %r4002, 14;
	shf.r.wrap.b32 	%r4005, %r4002, %r4003, 14;
	mov.b64 	%rd3155, {%r4005, %r4004};
	shf.r.wrap.b32 	%r4006, %r4003, %r4002, 18;
	shf.r.wrap.b32 	%r4007, %r4002, %r4003, 18;
	mov.b64 	%rd3156, {%r4007, %r4006};
	xor.b64  	%rd3157, %rd3155, %rd3156;
	shf.l.wrap.b32 	%r4008, %r4002, %r4003, 23;
	shf.l.wrap.b32 	%r4009, %r4003, %r4002, 23;
	mov.b64 	%rd3158, {%r4009, %r4008};
	xor.b64  	%rd3159, %rd3157, %rd3158;
	and.b64  	%rd3160, %rd3153, %rd3128;
	not.b64 	%rd3161, %rd3153;
	and.b64  	%rd3162, %rd3103, %rd3161;
	or.b64  	%rd3163, %rd3160, %rd3162;
	add.s64 	%rd3164, %rd3163, %rd3078;
	add.s64 	%rd3165, %rd3164, %rd3159;
	add.s64 	%rd3166, %rd3165, %rd84;
	add.s64 	%rd3167, %rd3166, %rd1619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4010,%dummy}, %rd3154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4011}, %rd3154;
	}
	shf.r.wrap.b32 	%r4012, %r4011, %r4010, 28;
	shf.r.wrap.b32 	%r4013, %r4010, %r4011, 28;
	mov.b64 	%rd3168, {%r4013, %r4012};
	shf.l.wrap.b32 	%r4014, %r4010, %r4011, 30;
	shf.l.wrap.b32 	%r4015, %r4011, %r4010, 30;
	mov.b64 	%rd3169, {%r4015, %r4014};
	xor.b64  	%rd3170, %rd3168, %rd3169;
	shf.l.wrap.b32 	%r4016, %r4010, %r4011, 25;
	shf.l.wrap.b32 	%r4017, %r4011, %r4010, 25;
	mov.b64 	%rd3171, {%r4017, %r4016};
	xor.b64  	%rd3172, %rd3170, %rd3171;
	xor.b64  	%rd3173, %rd3129, %rd3104;
	and.b64  	%rd3174, %rd3154, %rd3173;
	and.b64  	%rd3175, %rd3129, %rd3104;
	xor.b64  	%rd3176, %rd3174, %rd3175;
	add.s64 	%rd3177, %rd3172, %rd3176;
	add.s64 	%rd3178, %rd3167, %rd3079;
	add.s64 	%rd3179, %rd3177, %rd3167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4018,%dummy}, %rd3178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4019}, %rd3178;
	}
	shf.r.wrap.b32 	%r4020, %r4019, %r4018, 14;
	shf.r.wrap.b32 	%r4021, %r4018, %r4019, 14;
	mov.b64 	%rd3180, {%r4021, %r4020};
	shf.r.wrap.b32 	%r4022, %r4019, %r4018, 18;
	shf.r.wrap.b32 	%r4023, %r4018, %r4019, 18;
	mov.b64 	%rd3181, {%r4023, %r4022};
	xor.b64  	%rd3182, %rd3180, %rd3181;
	shf.l.wrap.b32 	%r4024, %r4018, %r4019, 23;
	shf.l.wrap.b32 	%r4025, %r4019, %r4018, 23;
	mov.b64 	%rd3183, {%r4025, %r4024};
	xor.b64  	%rd3184, %rd3182, %rd3183;
	and.b64  	%rd3185, %rd3178, %rd3153;
	not.b64 	%rd3186, %rd3178;
	and.b64  	%rd3187, %rd3128, %rd3186;
	or.b64  	%rd3188, %rd3185, %rd3187;
	add.s64 	%rd3189, %rd3188, %rd3103;
	add.s64 	%rd3190, %rd3189, %rd3184;
	add.s64 	%rd3191, %rd3190, %rd85;
	add.s64 	%rd3192, %rd3191, %rd1632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4026,%dummy}, %rd3179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4027}, %rd3179;
	}
	shf.r.wrap.b32 	%r4028, %r4027, %r4026, 28;
	shf.r.wrap.b32 	%r4029, %r4026, %r4027, 28;
	mov.b64 	%rd3193, {%r4029, %r4028};
	shf.l.wrap.b32 	%r4030, %r4026, %r4027, 30;
	shf.l.wrap.b32 	%r4031, %r4027, %r4026, 30;
	mov.b64 	%rd3194, {%r4031, %r4030};
	xor.b64  	%rd3195, %rd3193, %rd3194;
	shf.l.wrap.b32 	%r4032, %r4026, %r4027, 25;
	shf.l.wrap.b32 	%r4033, %r4027, %r4026, 25;
	mov.b64 	%rd3196, {%r4033, %r4032};
	xor.b64  	%rd3197, %rd3195, %rd3196;
	xor.b64  	%rd3198, %rd3154, %rd3129;
	and.b64  	%rd3199, %rd3179, %rd3198;
	and.b64  	%rd3200, %rd3154, %rd3129;
	xor.b64  	%rd3201, %rd3199, %rd3200;
	add.s64 	%rd3202, %rd3197, %rd3201;
	add.s64 	%rd3203, %rd3192, %rd3104;
	add.s64 	%rd3204, %rd3202, %rd3192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4034,%dummy}, %rd3203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4035}, %rd3203;
	}
	shf.r.wrap.b32 	%r4036, %r4035, %r4034, 14;
	shf.r.wrap.b32 	%r4037, %r4034, %r4035, 14;
	mov.b64 	%rd3205, {%r4037, %r4036};
	shf.r.wrap.b32 	%r4038, %r4035, %r4034, 18;
	shf.r.wrap.b32 	%r4039, %r4034, %r4035, 18;
	mov.b64 	%rd3206, {%r4039, %r4038};
	xor.b64  	%rd3207, %rd3205, %rd3206;
	shf.l.wrap.b32 	%r4040, %r4034, %r4035, 23;
	shf.l.wrap.b32 	%r4041, %r4035, %r4034, 23;
	mov.b64 	%rd3208, {%r4041, %r4040};
	xor.b64  	%rd3209, %rd3207, %rd3208;
	and.b64  	%rd3210, %rd3203, %rd3178;
	not.b64 	%rd3211, %rd3203;
	and.b64  	%rd3212, %rd3153, %rd3211;
	or.b64  	%rd3213, %rd3210, %rd3212;
	add.s64 	%rd3214, %rd3213, %rd3128;
	add.s64 	%rd3215, %rd3214, %rd3209;
	add.s64 	%rd3216, %rd3215, %rd86;
	add.s64 	%rd3217, %rd3216, %rd1645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4042,%dummy}, %rd3204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4043}, %rd3204;
	}
	shf.r.wrap.b32 	%r4044, %r4043, %r4042, 28;
	shf.r.wrap.b32 	%r4045, %r4042, %r4043, 28;
	mov.b64 	%rd3218, {%r4045, %r4044};
	shf.l.wrap.b32 	%r4046, %r4042, %r4043, 30;
	shf.l.wrap.b32 	%r4047, %r4043, %r4042, 30;
	mov.b64 	%rd3219, {%r4047, %r4046};
	xor.b64  	%rd3220, %rd3218, %rd3219;
	shf.l.wrap.b32 	%r4048, %r4042, %r4043, 25;
	shf.l.wrap.b32 	%r4049, %r4043, %r4042, 25;
	mov.b64 	%rd3221, {%r4049, %r4048};
	xor.b64  	%rd3222, %rd3220, %rd3221;
	xor.b64  	%rd3223, %rd3179, %rd3154;
	and.b64  	%rd3224, %rd3204, %rd3223;
	and.b64  	%rd3225, %rd3179, %rd3154;
	xor.b64  	%rd3226, %rd3224, %rd3225;
	add.s64 	%rd3227, %rd3222, %rd3226;
	add.s64 	%rd3228, %rd3217, %rd3129;
	add.s64 	%rd3229, %rd3227, %rd3217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4050,%dummy}, %rd3228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4051}, %rd3228;
	}
	shf.r.wrap.b32 	%r4052, %r4051, %r4050, 14;
	shf.r.wrap.b32 	%r4053, %r4050, %r4051, 14;
	mov.b64 	%rd3230, {%r4053, %r4052};
	shf.r.wrap.b32 	%r4054, %r4051, %r4050, 18;
	shf.r.wrap.b32 	%r4055, %r4050, %r4051, 18;
	mov.b64 	%rd3231, {%r4055, %r4054};
	xor.b64  	%rd3232, %rd3230, %rd3231;
	shf.l.wrap.b32 	%r4056, %r4050, %r4051, 23;
	shf.l.wrap.b32 	%r4057, %r4051, %r4050, 23;
	mov.b64 	%rd3233, {%r4057, %r4056};
	xor.b64  	%rd3234, %rd3232, %rd3233;
	and.b64  	%rd3235, %rd3228, %rd3203;
	not.b64 	%rd3236, %rd3228;
	and.b64  	%rd3237, %rd3178, %rd3236;
	or.b64  	%rd3238, %rd3235, %rd3237;
	add.s64 	%rd3239, %rd3238, %rd3153;
	add.s64 	%rd3240, %rd3239, %rd3234;
	add.s64 	%rd3241, %rd3240, %rd87;
	add.s64 	%rd3242, %rd3241, %rd1658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4058,%dummy}, %rd3229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4059}, %rd3229;
	}
	shf.r.wrap.b32 	%r4060, %r4059, %r4058, 28;
	shf.r.wrap.b32 	%r4061, %r4058, %r4059, 28;
	mov.b64 	%rd3243, {%r4061, %r4060};
	shf.l.wrap.b32 	%r4062, %r4058, %r4059, 30;
	shf.l.wrap.b32 	%r4063, %r4059, %r4058, 30;
	mov.b64 	%rd3244, {%r4063, %r4062};
	xor.b64  	%rd3245, %rd3243, %rd3244;
	shf.l.wrap.b32 	%r4064, %r4058, %r4059, 25;
	shf.l.wrap.b32 	%r4065, %r4059, %r4058, 25;
	mov.b64 	%rd3246, {%r4065, %r4064};
	xor.b64  	%rd3247, %rd3245, %rd3246;
	xor.b64  	%rd3248, %rd3204, %rd3179;
	and.b64  	%rd3249, %rd3229, %rd3248;
	and.b64  	%rd3250, %rd3204, %rd3179;
	xor.b64  	%rd3251, %rd3249, %rd3250;
	add.s64 	%rd3252, %rd3247, %rd3251;
	add.s64 	%rd3253, %rd3242, %rd3154;
	add.s64 	%rd3254, %rd3252, %rd3242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4066,%dummy}, %rd3253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4067}, %rd3253;
	}
	shf.r.wrap.b32 	%r4068, %r4067, %r4066, 14;
	shf.r.wrap.b32 	%r4069, %r4066, %r4067, 14;
	mov.b64 	%rd3255, {%r4069, %r4068};
	shf.r.wrap.b32 	%r4070, %r4067, %r4066, 18;
	shf.r.wrap.b32 	%r4071, %r4066, %r4067, 18;
	mov.b64 	%rd3256, {%r4071, %r4070};
	xor.b64  	%rd3257, %rd3255, %rd3256;
	shf.l.wrap.b32 	%r4072, %r4066, %r4067, 23;
	shf.l.wrap.b32 	%r4073, %r4067, %r4066, 23;
	mov.b64 	%rd3258, {%r4073, %r4072};
	xor.b64  	%rd3259, %rd3257, %rd3258;
	and.b64  	%rd3260, %rd3253, %rd3228;
	not.b64 	%rd3261, %rd3253;
	and.b64  	%rd3262, %rd3203, %rd3261;
	or.b64  	%rd3263, %rd3260, %rd3262;
	add.s64 	%rd3264, %rd3263, %rd3178;
	add.s64 	%rd3265, %rd3264, %rd3259;
	add.s64 	%rd3266, %rd3265, %rd88;
	add.s64 	%rd3267, %rd3266, %rd1671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4074,%dummy}, %rd3254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4075}, %rd3254;
	}
	shf.r.wrap.b32 	%r4076, %r4075, %r4074, 28;
	shf.r.wrap.b32 	%r4077, %r4074, %r4075, 28;
	mov.b64 	%rd3268, {%r4077, %r4076};
	shf.l.wrap.b32 	%r4078, %r4074, %r4075, 30;
	shf.l.wrap.b32 	%r4079, %r4075, %r4074, 30;
	mov.b64 	%rd3269, {%r4079, %r4078};
	xor.b64  	%rd3270, %rd3268, %rd3269;
	shf.l.wrap.b32 	%r4080, %r4074, %r4075, 25;
	shf.l.wrap.b32 	%r4081, %r4075, %r4074, 25;
	mov.b64 	%rd3271, {%r4081, %r4080};
	xor.b64  	%rd3272, %rd3270, %rd3271;
	xor.b64  	%rd3273, %rd3229, %rd3204;
	and.b64  	%rd3274, %rd3254, %rd3273;
	and.b64  	%rd3275, %rd3229, %rd3204;
	xor.b64  	%rd3276, %rd3274, %rd3275;
	add.s64 	%rd3277, %rd3272, %rd3276;
	add.s64 	%rd3278, %rd3267, %rd3179;
	add.s64 	%rd3279, %rd3277, %rd3267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4082,%dummy}, %rd3278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4083}, %rd3278;
	}
	shf.r.wrap.b32 	%r4084, %r4083, %r4082, 14;
	shf.r.wrap.b32 	%r4085, %r4082, %r4083, 14;
	mov.b64 	%rd3280, {%r4085, %r4084};
	shf.r.wrap.b32 	%r4086, %r4083, %r4082, 18;
	shf.r.wrap.b32 	%r4087, %r4082, %r4083, 18;
	mov.b64 	%rd3281, {%r4087, %r4086};
	xor.b64  	%rd3282, %rd3280, %rd3281;
	shf.l.wrap.b32 	%r4088, %r4082, %r4083, 23;
	shf.l.wrap.b32 	%r4089, %r4083, %r4082, 23;
	mov.b64 	%rd3283, {%r4089, %r4088};
	xor.b64  	%rd3284, %rd3282, %rd3283;
	and.b64  	%rd3285, %rd3278, %rd3253;
	not.b64 	%rd3286, %rd3278;
	and.b64  	%rd3287, %rd3228, %rd3286;
	or.b64  	%rd3288, %rd3285, %rd3287;
	add.s64 	%rd3289, %rd3288, %rd3203;
	add.s64 	%rd3290, %rd3289, %rd3284;
	add.s64 	%rd3291, %rd3290, %rd89;
	add.s64 	%rd3292, %rd3291, %rd1684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4090,%dummy}, %rd3279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4091}, %rd3279;
	}
	shf.r.wrap.b32 	%r4092, %r4091, %r4090, 28;
	shf.r.wrap.b32 	%r4093, %r4090, %r4091, 28;
	mov.b64 	%rd3293, {%r4093, %r4092};
	shf.l.wrap.b32 	%r4094, %r4090, %r4091, 30;
	shf.l.wrap.b32 	%r4095, %r4091, %r4090, 30;
	mov.b64 	%rd3294, {%r4095, %r4094};
	xor.b64  	%rd3295, %rd3293, %rd3294;
	shf.l.wrap.b32 	%r4096, %r4090, %r4091, 25;
	shf.l.wrap.b32 	%r4097, %r4091, %r4090, 25;
	mov.b64 	%rd3296, {%r4097, %r4096};
	xor.b64  	%rd3297, %rd3295, %rd3296;
	xor.b64  	%rd3298, %rd3254, %rd3229;
	and.b64  	%rd3299, %rd3279, %rd3298;
	and.b64  	%rd3300, %rd3254, %rd3229;
	xor.b64  	%rd3301, %rd3299, %rd3300;
	add.s64 	%rd3302, %rd3297, %rd3301;
	add.s64 	%rd3303, %rd3292, %rd3204;
	add.s64 	%rd3304, %rd3302, %rd3292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4098,%dummy}, %rd3303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4099}, %rd3303;
	}
	shf.r.wrap.b32 	%r4100, %r4099, %r4098, 14;
	shf.r.wrap.b32 	%r4101, %r4098, %r4099, 14;
	mov.b64 	%rd3305, {%r4101, %r4100};
	shf.r.wrap.b32 	%r4102, %r4099, %r4098, 18;
	shf.r.wrap.b32 	%r4103, %r4098, %r4099, 18;
	mov.b64 	%rd3306, {%r4103, %r4102};
	xor.b64  	%rd3307, %rd3305, %rd3306;
	shf.l.wrap.b32 	%r4104, %r4098, %r4099, 23;
	shf.l.wrap.b32 	%r4105, %r4099, %r4098, 23;
	mov.b64 	%rd3308, {%r4105, %r4104};
	xor.b64  	%rd3309, %rd3307, %rd3308;
	and.b64  	%rd3310, %rd3303, %rd3278;
	not.b64 	%rd3311, %rd3303;
	and.b64  	%rd3312, %rd3253, %rd3311;
	or.b64  	%rd3313, %rd3310, %rd3312;
	add.s64 	%rd3314, %rd3313, %rd3228;
	add.s64 	%rd3315, %rd3314, %rd3309;
	add.s64 	%rd3316, %rd3315, %rd90;
	add.s64 	%rd3317, %rd3316, %rd1697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4106,%dummy}, %rd3304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4107}, %rd3304;
	}
	shf.r.wrap.b32 	%r4108, %r4107, %r4106, 28;
	shf.r.wrap.b32 	%r4109, %r4106, %r4107, 28;
	mov.b64 	%rd3318, {%r4109, %r4108};
	shf.l.wrap.b32 	%r4110, %r4106, %r4107, 30;
	shf.l.wrap.b32 	%r4111, %r4107, %r4106, 30;
	mov.b64 	%rd3319, {%r4111, %r4110};
	xor.b64  	%rd3320, %rd3318, %rd3319;
	shf.l.wrap.b32 	%r4112, %r4106, %r4107, 25;
	shf.l.wrap.b32 	%r4113, %r4107, %r4106, 25;
	mov.b64 	%rd3321, {%r4113, %r4112};
	xor.b64  	%rd3322, %rd3320, %rd3321;
	xor.b64  	%rd3323, %rd3279, %rd3254;
	and.b64  	%rd3324, %rd3304, %rd3323;
	and.b64  	%rd3325, %rd3279, %rd3254;
	xor.b64  	%rd3326, %rd3324, %rd3325;
	add.s64 	%rd3327, %rd3322, %rd3326;
	add.s64 	%rd3328, %rd3317, %rd3229;
	add.s64 	%rd3329, %rd3327, %rd3317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4114,%dummy}, %rd3328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4115}, %rd3328;
	}
	shf.r.wrap.b32 	%r4116, %r4115, %r4114, 14;
	shf.r.wrap.b32 	%r4117, %r4114, %r4115, 14;
	mov.b64 	%rd3330, {%r4117, %r4116};
	shf.r.wrap.b32 	%r4118, %r4115, %r4114, 18;
	shf.r.wrap.b32 	%r4119, %r4114, %r4115, 18;
	mov.b64 	%rd3331, {%r4119, %r4118};
	xor.b64  	%rd3332, %rd3330, %rd3331;
	shf.l.wrap.b32 	%r4120, %r4114, %r4115, 23;
	shf.l.wrap.b32 	%r4121, %r4115, %r4114, 23;
	mov.b64 	%rd3333, {%r4121, %r4120};
	xor.b64  	%rd3334, %rd3332, %rd3333;
	and.b64  	%rd3335, %rd3328, %rd3303;
	not.b64 	%rd3336, %rd3328;
	and.b64  	%rd3337, %rd3278, %rd3336;
	or.b64  	%rd3338, %rd3335, %rd3337;
	add.s64 	%rd3339, %rd3338, %rd3253;
	add.s64 	%rd3340, %rd3339, %rd3334;
	add.s64 	%rd3341, %rd3340, %rd91;
	add.s64 	%rd3342, %rd3341, %rd1710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4122,%dummy}, %rd3329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4123}, %rd3329;
	}
	shf.r.wrap.b32 	%r4124, %r4123, %r4122, 28;
	shf.r.wrap.b32 	%r4125, %r4122, %r4123, 28;
	mov.b64 	%rd3343, {%r4125, %r4124};
	shf.l.wrap.b32 	%r4126, %r4122, %r4123, 30;
	shf.l.wrap.b32 	%r4127, %r4123, %r4122, 30;
	mov.b64 	%rd3344, {%r4127, %r4126};
	xor.b64  	%rd3345, %rd3343, %rd3344;
	shf.l.wrap.b32 	%r4128, %r4122, %r4123, 25;
	shf.l.wrap.b32 	%r4129, %r4123, %r4122, 25;
	mov.b64 	%rd3346, {%r4129, %r4128};
	xor.b64  	%rd3347, %rd3345, %rd3346;
	xor.b64  	%rd3348, %rd3304, %rd3279;
	and.b64  	%rd3349, %rd3329, %rd3348;
	and.b64  	%rd3350, %rd3304, %rd3279;
	xor.b64  	%rd3351, %rd3349, %rd3350;
	add.s64 	%rd3352, %rd3347, %rd3351;
	add.s64 	%rd3353, %rd3342, %rd3254;
	add.s64 	%rd3354, %rd3352, %rd3342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4130,%dummy}, %rd3353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4131}, %rd3353;
	}
	shf.r.wrap.b32 	%r4132, %r4131, %r4130, 14;
	shf.r.wrap.b32 	%r4133, %r4130, %r4131, 14;
	mov.b64 	%rd3355, {%r4133, %r4132};
	shf.r.wrap.b32 	%r4134, %r4131, %r4130, 18;
	shf.r.wrap.b32 	%r4135, %r4130, %r4131, 18;
	mov.b64 	%rd3356, {%r4135, %r4134};
	xor.b64  	%rd3357, %rd3355, %rd3356;
	shf.l.wrap.b32 	%r4136, %r4130, %r4131, 23;
	shf.l.wrap.b32 	%r4137, %r4131, %r4130, 23;
	mov.b64 	%rd3358, {%r4137, %r4136};
	xor.b64  	%rd3359, %rd3357, %rd3358;
	and.b64  	%rd3360, %rd3353, %rd3328;
	not.b64 	%rd3361, %rd3353;
	and.b64  	%rd3362, %rd3303, %rd3361;
	or.b64  	%rd3363, %rd3360, %rd3362;
	add.s64 	%rd3364, %rd3363, %rd3278;
	add.s64 	%rd3365, %rd3364, %rd3359;
	add.s64 	%rd3366, %rd3365, %rd92;
	add.s64 	%rd3367, %rd3366, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4138,%dummy}, %rd3354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4139}, %rd3354;
	}
	shf.r.wrap.b32 	%r4140, %r4139, %r4138, 28;
	shf.r.wrap.b32 	%r4141, %r4138, %r4139, 28;
	mov.b64 	%rd3368, {%r4141, %r4140};
	shf.l.wrap.b32 	%r4142, %r4138, %r4139, 30;
	shf.l.wrap.b32 	%r4143, %r4139, %r4138, 30;
	mov.b64 	%rd3369, {%r4143, %r4142};
	xor.b64  	%rd3370, %rd3368, %rd3369;
	shf.l.wrap.b32 	%r4144, %r4138, %r4139, 25;
	shf.l.wrap.b32 	%r4145, %r4139, %r4138, 25;
	mov.b64 	%rd3371, {%r4145, %r4144};
	xor.b64  	%rd3372, %rd3370, %rd3371;
	xor.b64  	%rd3373, %rd3329, %rd3304;
	and.b64  	%rd3374, %rd3354, %rd3373;
	and.b64  	%rd3375, %rd3329, %rd3304;
	xor.b64  	%rd3376, %rd3374, %rd3375;
	add.s64 	%rd3377, %rd3372, %rd3376;
	add.s64 	%rd3378, %rd3367, %rd3279;
	add.s64 	%rd3379, %rd3377, %rd3367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4146,%dummy}, %rd3378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4147}, %rd3378;
	}
	shf.r.wrap.b32 	%r4148, %r4147, %r4146, 14;
	shf.r.wrap.b32 	%r4149, %r4146, %r4147, 14;
	mov.b64 	%rd3380, {%r4149, %r4148};
	shf.r.wrap.b32 	%r4150, %r4147, %r4146, 18;
	shf.r.wrap.b32 	%r4151, %r4146, %r4147, 18;
	mov.b64 	%rd3381, {%r4151, %r4150};
	xor.b64  	%rd3382, %rd3380, %rd3381;
	shf.l.wrap.b32 	%r4152, %r4146, %r4147, 23;
	shf.l.wrap.b32 	%r4153, %r4147, %r4146, 23;
	mov.b64 	%rd3383, {%r4153, %r4152};
	xor.b64  	%rd3384, %rd3382, %rd3383;
	and.b64  	%rd3385, %rd3378, %rd3353;
	not.b64 	%rd3386, %rd3378;
	and.b64  	%rd3387, %rd3328, %rd3386;
	or.b64  	%rd3388, %rd3385, %rd3387;
	add.s64 	%rd3389, %rd3388, %rd3303;
	add.s64 	%rd3390, %rd3389, %rd3384;
	add.s64 	%rd3391, %rd3390, %rd93;
	add.s64 	%rd3392, %rd3391, %rd1736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4154,%dummy}, %rd3379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4155}, %rd3379;
	}
	shf.r.wrap.b32 	%r4156, %r4155, %r4154, 28;
	shf.r.wrap.b32 	%r4157, %r4154, %r4155, 28;
	mov.b64 	%rd3393, {%r4157, %r4156};
	shf.l.wrap.b32 	%r4158, %r4154, %r4155, 30;
	shf.l.wrap.b32 	%r4159, %r4155, %r4154, 30;
	mov.b64 	%rd3394, {%r4159, %r4158};
	xor.b64  	%rd3395, %rd3393, %rd3394;
	shf.l.wrap.b32 	%r4160, %r4154, %r4155, 25;
	shf.l.wrap.b32 	%r4161, %r4155, %r4154, 25;
	mov.b64 	%rd3396, {%r4161, %r4160};
	xor.b64  	%rd3397, %rd3395, %rd3396;
	xor.b64  	%rd3398, %rd3354, %rd3329;
	and.b64  	%rd3399, %rd3379, %rd3398;
	and.b64  	%rd3400, %rd3354, %rd3329;
	xor.b64  	%rd3401, %rd3399, %rd3400;
	add.s64 	%rd3402, %rd3397, %rd3401;
	add.s64 	%rd3403, %rd3392, %rd3304;
	add.s64 	%rd3404, %rd3402, %rd3392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4162,%dummy}, %rd3403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4163}, %rd3403;
	}
	shf.r.wrap.b32 	%r4164, %r4163, %r4162, 14;
	shf.r.wrap.b32 	%r4165, %r4162, %r4163, 14;
	mov.b64 	%rd3405, {%r4165, %r4164};
	shf.r.wrap.b32 	%r4166, %r4163, %r4162, 18;
	shf.r.wrap.b32 	%r4167, %r4162, %r4163, 18;
	mov.b64 	%rd3406, {%r4167, %r4166};
	xor.b64  	%rd3407, %rd3405, %rd3406;
	shf.l.wrap.b32 	%r4168, %r4162, %r4163, 23;
	shf.l.wrap.b32 	%r4169, %r4163, %r4162, 23;
	mov.b64 	%rd3408, {%r4169, %r4168};
	xor.b64  	%rd3409, %rd3407, %rd3408;
	and.b64  	%rd3410, %rd3403, %rd3378;
	not.b64 	%rd3411, %rd3403;
	and.b64  	%rd3412, %rd3353, %rd3411;
	or.b64  	%rd3413, %rd3410, %rd3412;
	add.s64 	%rd3414, %rd3413, %rd3328;
	add.s64 	%rd3415, %rd3414, %rd3409;
	add.s64 	%rd3416, %rd3415, %rd94;
	add.s64 	%rd3417, %rd3416, %rd1749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4170,%dummy}, %rd3404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4171}, %rd3404;
	}
	shf.r.wrap.b32 	%r4172, %r4171, %r4170, 28;
	shf.r.wrap.b32 	%r4173, %r4170, %r4171, 28;
	mov.b64 	%rd3418, {%r4173, %r4172};
	shf.l.wrap.b32 	%r4174, %r4170, %r4171, 30;
	shf.l.wrap.b32 	%r4175, %r4171, %r4170, 30;
	mov.b64 	%rd3419, {%r4175, %r4174};
	xor.b64  	%rd3420, %rd3418, %rd3419;
	shf.l.wrap.b32 	%r4176, %r4170, %r4171, 25;
	shf.l.wrap.b32 	%r4177, %r4171, %r4170, 25;
	mov.b64 	%rd3421, {%r4177, %r4176};
	xor.b64  	%rd3422, %rd3420, %rd3421;
	xor.b64  	%rd3423, %rd3379, %rd3354;
	and.b64  	%rd3424, %rd3404, %rd3423;
	and.b64  	%rd3425, %rd3379, %rd3354;
	xor.b64  	%rd3426, %rd3424, %rd3425;
	add.s64 	%rd3427, %rd3422, %rd3426;
	add.s64 	%rd3428, %rd3417, %rd3329;
	add.s64 	%rd3429, %rd3427, %rd3417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4178,%dummy}, %rd3428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4179}, %rd3428;
	}
	shf.r.wrap.b32 	%r4180, %r4179, %r4178, 14;
	shf.r.wrap.b32 	%r4181, %r4178, %r4179, 14;
	mov.b64 	%rd3430, {%r4181, %r4180};
	shf.r.wrap.b32 	%r4182, %r4179, %r4178, 18;
	shf.r.wrap.b32 	%r4183, %r4178, %r4179, 18;
	mov.b64 	%rd3431, {%r4183, %r4182};
	xor.b64  	%rd3432, %rd3430, %rd3431;
	shf.l.wrap.b32 	%r4184, %r4178, %r4179, 23;
	shf.l.wrap.b32 	%r4185, %r4179, %r4178, 23;
	mov.b64 	%rd3433, {%r4185, %r4184};
	xor.b64  	%rd3434, %rd3432, %rd3433;
	and.b64  	%rd3435, %rd3428, %rd3403;
	not.b64 	%rd3436, %rd3428;
	and.b64  	%rd3437, %rd3378, %rd3436;
	or.b64  	%rd3438, %rd3435, %rd3437;
	add.s64 	%rd3439, %rd3438, %rd3353;
	add.s64 	%rd3440, %rd3439, %rd3434;
	add.s64 	%rd3441, %rd3440, %rd95;
	add.s64 	%rd3442, %rd3441, %rd1762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4186,%dummy}, %rd3429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4187}, %rd3429;
	}
	shf.r.wrap.b32 	%r4188, %r4187, %r4186, 28;
	shf.r.wrap.b32 	%r4189, %r4186, %r4187, 28;
	mov.b64 	%rd3443, {%r4189, %r4188};
	shf.l.wrap.b32 	%r4190, %r4186, %r4187, 30;
	shf.l.wrap.b32 	%r4191, %r4187, %r4186, 30;
	mov.b64 	%rd3444, {%r4191, %r4190};
	xor.b64  	%rd3445, %rd3443, %rd3444;
	shf.l.wrap.b32 	%r4192, %r4186, %r4187, 25;
	shf.l.wrap.b32 	%r4193, %r4187, %r4186, 25;
	mov.b64 	%rd3446, {%r4193, %r4192};
	xor.b64  	%rd3447, %rd3445, %rd3446;
	xor.b64  	%rd3448, %rd3404, %rd3379;
	and.b64  	%rd3449, %rd3429, %rd3448;
	and.b64  	%rd3450, %rd3404, %rd3379;
	xor.b64  	%rd3451, %rd3449, %rd3450;
	add.s64 	%rd3452, %rd3447, %rd3451;
	add.s64 	%rd3453, %rd3442, %rd3354;
	add.s64 	%rd3454, %rd3452, %rd3442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4194,%dummy}, %rd3453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4195}, %rd3453;
	}
	shf.r.wrap.b32 	%r4196, %r4195, %r4194, 14;
	shf.r.wrap.b32 	%r4197, %r4194, %r4195, 14;
	mov.b64 	%rd3455, {%r4197, %r4196};
	shf.r.wrap.b32 	%r4198, %r4195, %r4194, 18;
	shf.r.wrap.b32 	%r4199, %r4194, %r4195, 18;
	mov.b64 	%rd3456, {%r4199, %r4198};
	xor.b64  	%rd3457, %rd3455, %rd3456;
	shf.l.wrap.b32 	%r4200, %r4194, %r4195, 23;
	shf.l.wrap.b32 	%r4201, %r4195, %r4194, 23;
	mov.b64 	%rd3458, {%r4201, %r4200};
	xor.b64  	%rd3459, %rd3457, %rd3458;
	and.b64  	%rd3460, %rd3453, %rd3428;
	not.b64 	%rd3461, %rd3453;
	and.b64  	%rd3462, %rd3403, %rd3461;
	or.b64  	%rd3463, %rd3460, %rd3462;
	add.s64 	%rd3464, %rd3463, %rd3378;
	add.s64 	%rd3465, %rd3464, %rd3459;
	add.s64 	%rd3466, %rd3465, %rd96;
	add.s64 	%rd3467, %rd3466, %rd1775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4202,%dummy}, %rd3454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4203}, %rd3454;
	}
	shf.r.wrap.b32 	%r4204, %r4203, %r4202, 28;
	shf.r.wrap.b32 	%r4205, %r4202, %r4203, 28;
	mov.b64 	%rd3468, {%r4205, %r4204};
	shf.l.wrap.b32 	%r4206, %r4202, %r4203, 30;
	shf.l.wrap.b32 	%r4207, %r4203, %r4202, 30;
	mov.b64 	%rd3469, {%r4207, %r4206};
	xor.b64  	%rd3470, %rd3468, %rd3469;
	shf.l.wrap.b32 	%r4208, %r4202, %r4203, 25;
	shf.l.wrap.b32 	%r4209, %r4203, %r4202, 25;
	mov.b64 	%rd3471, {%r4209, %r4208};
	xor.b64  	%rd3472, %rd3470, %rd3471;
	xor.b64  	%rd3473, %rd3429, %rd3404;
	and.b64  	%rd3474, %rd3454, %rd3473;
	and.b64  	%rd3475, %rd3429, %rd3404;
	xor.b64  	%rd3476, %rd3474, %rd3475;
	add.s64 	%rd3477, %rd3472, %rd3476;
	add.s64 	%rd3478, %rd3467, %rd3379;
	add.s64 	%rd3479, %rd3477, %rd3467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4210,%dummy}, %rd3478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4211}, %rd3478;
	}
	shf.r.wrap.b32 	%r4212, %r4211, %r4210, 14;
	shf.r.wrap.b32 	%r4213, %r4210, %r4211, 14;
	mov.b64 	%rd3480, {%r4213, %r4212};
	shf.r.wrap.b32 	%r4214, %r4211, %r4210, 18;
	shf.r.wrap.b32 	%r4215, %r4210, %r4211, 18;
	mov.b64 	%rd3481, {%r4215, %r4214};
	xor.b64  	%rd3482, %rd3480, %rd3481;
	shf.l.wrap.b32 	%r4216, %r4210, %r4211, 23;
	shf.l.wrap.b32 	%r4217, %r4211, %r4210, 23;
	mov.b64 	%rd3483, {%r4217, %r4216};
	xor.b64  	%rd3484, %rd3482, %rd3483;
	and.b64  	%rd3485, %rd3478, %rd3453;
	not.b64 	%rd3486, %rd3478;
	and.b64  	%rd3487, %rd3428, %rd3486;
	or.b64  	%rd3488, %rd3485, %rd3487;
	add.s64 	%rd3489, %rd3488, %rd3403;
	add.s64 	%rd3490, %rd3489, %rd3484;
	add.s64 	%rd3491, %rd3490, %rd97;
	add.s64 	%rd3492, %rd3491, %rd1788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4218,%dummy}, %rd3479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4219}, %rd3479;
	}
	shf.r.wrap.b32 	%r4220, %r4219, %r4218, 28;
	shf.r.wrap.b32 	%r4221, %r4218, %r4219, 28;
	mov.b64 	%rd3493, {%r4221, %r4220};
	shf.l.wrap.b32 	%r4222, %r4218, %r4219, 30;
	shf.l.wrap.b32 	%r4223, %r4219, %r4218, 30;
	mov.b64 	%rd3494, {%r4223, %r4222};
	xor.b64  	%rd3495, %rd3493, %rd3494;
	shf.l.wrap.b32 	%r4224, %r4218, %r4219, 25;
	shf.l.wrap.b32 	%r4225, %r4219, %r4218, 25;
	mov.b64 	%rd3496, {%r4225, %r4224};
	xor.b64  	%rd3497, %rd3495, %rd3496;
	xor.b64  	%rd3498, %rd3454, %rd3429;
	and.b64  	%rd3499, %rd3479, %rd3498;
	and.b64  	%rd3500, %rd3454, %rd3429;
	xor.b64  	%rd3501, %rd3499, %rd3500;
	add.s64 	%rd3502, %rd3497, %rd3501;
	add.s64 	%rd3503, %rd3492, %rd3404;
	add.s64 	%rd3504, %rd3502, %rd3492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4226,%dummy}, %rd3503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4227}, %rd3503;
	}
	shf.r.wrap.b32 	%r4228, %r4227, %r4226, 14;
	shf.r.wrap.b32 	%r4229, %r4226, %r4227, 14;
	mov.b64 	%rd3505, {%r4229, %r4228};
	shf.r.wrap.b32 	%r4230, %r4227, %r4226, 18;
	shf.r.wrap.b32 	%r4231, %r4226, %r4227, 18;
	mov.b64 	%rd3506, {%r4231, %r4230};
	xor.b64  	%rd3507, %rd3505, %rd3506;
	shf.l.wrap.b32 	%r4232, %r4226, %r4227, 23;
	shf.l.wrap.b32 	%r4233, %r4227, %r4226, 23;
	mov.b64 	%rd3508, {%r4233, %r4232};
	xor.b64  	%rd3509, %rd3507, %rd3508;
	and.b64  	%rd3510, %rd3503, %rd3478;
	not.b64 	%rd3511, %rd3503;
	and.b64  	%rd3512, %rd3453, %rd3511;
	or.b64  	%rd3513, %rd3510, %rd3512;
	add.s64 	%rd3514, %rd3513, %rd3428;
	add.s64 	%rd3515, %rd3514, %rd3509;
	add.s64 	%rd3516, %rd3515, %rd98;
	add.s64 	%rd3517, %rd3516, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4234,%dummy}, %rd3504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4235}, %rd3504;
	}
	shf.r.wrap.b32 	%r4236, %r4235, %r4234, 28;
	shf.r.wrap.b32 	%r4237, %r4234, %r4235, 28;
	mov.b64 	%rd3518, {%r4237, %r4236};
	shf.l.wrap.b32 	%r4238, %r4234, %r4235, 30;
	shf.l.wrap.b32 	%r4239, %r4235, %r4234, 30;
	mov.b64 	%rd3519, {%r4239, %r4238};
	xor.b64  	%rd3520, %rd3518, %rd3519;
	shf.l.wrap.b32 	%r4240, %r4234, %r4235, 25;
	shf.l.wrap.b32 	%r4241, %r4235, %r4234, 25;
	mov.b64 	%rd3521, {%r4241, %r4240};
	xor.b64  	%rd3522, %rd3520, %rd3521;
	xor.b64  	%rd3523, %rd3479, %rd3454;
	and.b64  	%rd3524, %rd3504, %rd3523;
	and.b64  	%rd3525, %rd3479, %rd3454;
	xor.b64  	%rd3526, %rd3524, %rd3525;
	add.s64 	%rd3527, %rd3522, %rd3526;
	add.s64 	%rd3528, %rd3517, %rd3429;
	add.s64 	%rd3529, %rd3527, %rd3517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4242,%dummy}, %rd3528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4243}, %rd3528;
	}
	shf.r.wrap.b32 	%r4244, %r4243, %r4242, 14;
	shf.r.wrap.b32 	%r4245, %r4242, %r4243, 14;
	mov.b64 	%rd3530, {%r4245, %r4244};
	shf.r.wrap.b32 	%r4246, %r4243, %r4242, 18;
	shf.r.wrap.b32 	%r4247, %r4242, %r4243, 18;
	mov.b64 	%rd3531, {%r4247, %r4246};
	xor.b64  	%rd3532, %rd3530, %rd3531;
	shf.l.wrap.b32 	%r4248, %r4242, %r4243, 23;
	shf.l.wrap.b32 	%r4249, %r4243, %r4242, 23;
	mov.b64 	%rd3533, {%r4249, %r4248};
	xor.b64  	%rd3534, %rd3532, %rd3533;
	and.b64  	%rd3535, %rd3528, %rd3503;
	not.b64 	%rd3536, %rd3528;
	and.b64  	%rd3537, %rd3478, %rd3536;
	or.b64  	%rd3538, %rd3535, %rd3537;
	add.s64 	%rd3539, %rd3538, %rd3453;
	add.s64 	%rd3540, %rd3539, %rd3534;
	add.s64 	%rd3541, %rd3540, %rd99;
	add.s64 	%rd3542, %rd3541, %rd1814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4250,%dummy}, %rd3529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4251}, %rd3529;
	}
	shf.r.wrap.b32 	%r4252, %r4251, %r4250, 28;
	shf.r.wrap.b32 	%r4253, %r4250, %r4251, 28;
	mov.b64 	%rd3543, {%r4253, %r4252};
	shf.l.wrap.b32 	%r4254, %r4250, %r4251, 30;
	shf.l.wrap.b32 	%r4255, %r4251, %r4250, 30;
	mov.b64 	%rd3544, {%r4255, %r4254};
	xor.b64  	%rd3545, %rd3543, %rd3544;
	shf.l.wrap.b32 	%r4256, %r4250, %r4251, 25;
	shf.l.wrap.b32 	%r4257, %r4251, %r4250, 25;
	mov.b64 	%rd3546, {%r4257, %r4256};
	xor.b64  	%rd3547, %rd3545, %rd3546;
	xor.b64  	%rd3548, %rd3504, %rd3479;
	and.b64  	%rd3549, %rd3529, %rd3548;
	and.b64  	%rd3550, %rd3504, %rd3479;
	xor.b64  	%rd3551, %rd3549, %rd3550;
	add.s64 	%rd3552, %rd3547, %rd3551;
	add.s64 	%rd3553, %rd3542, %rd3454;
	add.s64 	%rd3554, %rd3552, %rd3542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4258,%dummy}, %rd3553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4259}, %rd3553;
	}
	shf.r.wrap.b32 	%r4260, %r4259, %r4258, 14;
	shf.r.wrap.b32 	%r4261, %r4258, %r4259, 14;
	mov.b64 	%rd3555, {%r4261, %r4260};
	shf.r.wrap.b32 	%r4262, %r4259, %r4258, 18;
	shf.r.wrap.b32 	%r4263, %r4258, %r4259, 18;
	mov.b64 	%rd3556, {%r4263, %r4262};
	xor.b64  	%rd3557, %rd3555, %rd3556;
	shf.l.wrap.b32 	%r4264, %r4258, %r4259, 23;
	shf.l.wrap.b32 	%r4265, %r4259, %r4258, 23;
	mov.b64 	%rd3558, {%r4265, %r4264};
	xor.b64  	%rd3559, %rd3557, %rd3558;
	and.b64  	%rd3560, %rd3553, %rd3528;
	not.b64 	%rd3561, %rd3553;
	and.b64  	%rd3562, %rd3503, %rd3561;
	or.b64  	%rd3563, %rd3560, %rd3562;
	add.s64 	%rd3564, %rd3563, %rd3478;
	add.s64 	%rd3565, %rd3564, %rd3559;
	add.s64 	%rd3566, %rd3565, %rd100;
	add.s64 	%rd3567, %rd3566, %rd1827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4266,%dummy}, %rd3554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4267}, %rd3554;
	}
	shf.r.wrap.b32 	%r4268, %r4267, %r4266, 28;
	shf.r.wrap.b32 	%r4269, %r4266, %r4267, 28;
	mov.b64 	%rd3568, {%r4269, %r4268};
	shf.l.wrap.b32 	%r4270, %r4266, %r4267, 30;
	shf.l.wrap.b32 	%r4271, %r4267, %r4266, 30;
	mov.b64 	%rd3569, {%r4271, %r4270};
	xor.b64  	%rd3570, %rd3568, %rd3569;
	shf.l.wrap.b32 	%r4272, %r4266, %r4267, 25;
	shf.l.wrap.b32 	%r4273, %r4267, %r4266, 25;
	mov.b64 	%rd3571, {%r4273, %r4272};
	xor.b64  	%rd3572, %rd3570, %rd3571;
	xor.b64  	%rd3573, %rd3529, %rd3504;
	and.b64  	%rd3574, %rd3554, %rd3573;
	and.b64  	%rd3575, %rd3529, %rd3504;
	xor.b64  	%rd3576, %rd3574, %rd3575;
	add.s64 	%rd3577, %rd3572, %rd3576;
	add.s64 	%rd3578, %rd3567, %rd3479;
	add.s64 	%rd3579, %rd3577, %rd3567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4274,%dummy}, %rd3578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4275}, %rd3578;
	}
	shf.r.wrap.b32 	%r4276, %r4275, %r4274, 14;
	shf.r.wrap.b32 	%r4277, %r4274, %r4275, 14;
	mov.b64 	%rd3580, {%r4277, %r4276};
	shf.r.wrap.b32 	%r4278, %r4275, %r4274, 18;
	shf.r.wrap.b32 	%r4279, %r4274, %r4275, 18;
	mov.b64 	%rd3581, {%r4279, %r4278};
	xor.b64  	%rd3582, %rd3580, %rd3581;
	shf.l.wrap.b32 	%r4280, %r4274, %r4275, 23;
	shf.l.wrap.b32 	%r4281, %r4275, %r4274, 23;
	mov.b64 	%rd3583, {%r4281, %r4280};
	xor.b64  	%rd3584, %rd3582, %rd3583;
	and.b64  	%rd3585, %rd3578, %rd3553;
	not.b64 	%rd3586, %rd3578;
	and.b64  	%rd3587, %rd3528, %rd3586;
	or.b64  	%rd3588, %rd3585, %rd3587;
	add.s64 	%rd3589, %rd3588, %rd3503;
	add.s64 	%rd3590, %rd3589, %rd3584;
	add.s64 	%rd3591, %rd3590, %rd101;
	add.s64 	%rd3592, %rd3591, %rd1840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4282,%dummy}, %rd3579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4283}, %rd3579;
	}
	shf.r.wrap.b32 	%r4284, %r4283, %r4282, 28;
	shf.r.wrap.b32 	%r4285, %r4282, %r4283, 28;
	mov.b64 	%rd3593, {%r4285, %r4284};
	shf.l.wrap.b32 	%r4286, %r4282, %r4283, 30;
	shf.l.wrap.b32 	%r4287, %r4283, %r4282, 30;
	mov.b64 	%rd3594, {%r4287, %r4286};
	xor.b64  	%rd3595, %rd3593, %rd3594;
	shf.l.wrap.b32 	%r4288, %r4282, %r4283, 25;
	shf.l.wrap.b32 	%r4289, %r4283, %r4282, 25;
	mov.b64 	%rd3596, {%r4289, %r4288};
	xor.b64  	%rd3597, %rd3595, %rd3596;
	xor.b64  	%rd3598, %rd3554, %rd3529;
	and.b64  	%rd3599, %rd3579, %rd3598;
	and.b64  	%rd3600, %rd3554, %rd3529;
	xor.b64  	%rd3601, %rd3599, %rd3600;
	add.s64 	%rd3602, %rd3597, %rd3601;
	add.s64 	%rd3603, %rd3592, %rd3504;
	add.s64 	%rd3604, %rd3602, %rd3592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4290,%dummy}, %rd3603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4291}, %rd3603;
	}
	shf.r.wrap.b32 	%r4292, %r4291, %r4290, 14;
	shf.r.wrap.b32 	%r4293, %r4290, %r4291, 14;
	mov.b64 	%rd3605, {%r4293, %r4292};
	shf.r.wrap.b32 	%r4294, %r4291, %r4290, 18;
	shf.r.wrap.b32 	%r4295, %r4290, %r4291, 18;
	mov.b64 	%rd3606, {%r4295, %r4294};
	xor.b64  	%rd3607, %rd3605, %rd3606;
	shf.l.wrap.b32 	%r4296, %r4290, %r4291, 23;
	shf.l.wrap.b32 	%r4297, %r4291, %r4290, 23;
	mov.b64 	%rd3608, {%r4297, %r4296};
	xor.b64  	%rd3609, %rd3607, %rd3608;
	and.b64  	%rd3610, %rd3603, %rd3578;
	not.b64 	%rd3611, %rd3603;
	and.b64  	%rd3612, %rd3553, %rd3611;
	or.b64  	%rd3613, %rd3610, %rd3612;
	add.s64 	%rd3614, %rd3613, %rd3528;
	add.s64 	%rd3615, %rd3614, %rd3609;
	add.s64 	%rd3616, %rd3615, %rd102;
	add.s64 	%rd3617, %rd3616, %rd1853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4298,%dummy}, %rd3604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4299}, %rd3604;
	}
	shf.r.wrap.b32 	%r4300, %r4299, %r4298, 28;
	shf.r.wrap.b32 	%r4301, %r4298, %r4299, 28;
	mov.b64 	%rd3618, {%r4301, %r4300};
	shf.l.wrap.b32 	%r4302, %r4298, %r4299, 30;
	shf.l.wrap.b32 	%r4303, %r4299, %r4298, 30;
	mov.b64 	%rd3619, {%r4303, %r4302};
	xor.b64  	%rd3620, %rd3618, %rd3619;
	shf.l.wrap.b32 	%r4304, %r4298, %r4299, 25;
	shf.l.wrap.b32 	%r4305, %r4299, %r4298, 25;
	mov.b64 	%rd3621, {%r4305, %r4304};
	xor.b64  	%rd3622, %rd3620, %rd3621;
	xor.b64  	%rd3623, %rd3579, %rd3554;
	and.b64  	%rd3624, %rd3604, %rd3623;
	and.b64  	%rd3625, %rd3579, %rd3554;
	xor.b64  	%rd3626, %rd3624, %rd3625;
	add.s64 	%rd3627, %rd3622, %rd3626;
	add.s64 	%rd3628, %rd3617, %rd3529;
	add.s64 	%rd3629, %rd3627, %rd3617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4306,%dummy}, %rd3628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4307}, %rd3628;
	}
	shf.r.wrap.b32 	%r4308, %r4307, %r4306, 14;
	shf.r.wrap.b32 	%r4309, %r4306, %r4307, 14;
	mov.b64 	%rd3630, {%r4309, %r4308};
	shf.r.wrap.b32 	%r4310, %r4307, %r4306, 18;
	shf.r.wrap.b32 	%r4311, %r4306, %r4307, 18;
	mov.b64 	%rd3631, {%r4311, %r4310};
	xor.b64  	%rd3632, %rd3630, %rd3631;
	shf.l.wrap.b32 	%r4312, %r4306, %r4307, 23;
	shf.l.wrap.b32 	%r4313, %r4307, %r4306, 23;
	mov.b64 	%rd3633, {%r4313, %r4312};
	xor.b64  	%rd3634, %rd3632, %rd3633;
	and.b64  	%rd3635, %rd3628, %rd3603;
	not.b64 	%rd3636, %rd3628;
	and.b64  	%rd3637, %rd3578, %rd3636;
	or.b64  	%rd3638, %rd3635, %rd3637;
	add.s64 	%rd3639, %rd3638, %rd3553;
	add.s64 	%rd3640, %rd3639, %rd3634;
	add.s64 	%rd3641, %rd3640, %rd103;
	add.s64 	%rd3642, %rd3641, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4314,%dummy}, %rd3629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4315}, %rd3629;
	}
	shf.r.wrap.b32 	%r4316, %r4315, %r4314, 28;
	shf.r.wrap.b32 	%r4317, %r4314, %r4315, 28;
	mov.b64 	%rd3643, {%r4317, %r4316};
	shf.l.wrap.b32 	%r4318, %r4314, %r4315, 30;
	shf.l.wrap.b32 	%r4319, %r4315, %r4314, 30;
	mov.b64 	%rd3644, {%r4319, %r4318};
	xor.b64  	%rd3645, %rd3643, %rd3644;
	shf.l.wrap.b32 	%r4320, %r4314, %r4315, 25;
	shf.l.wrap.b32 	%r4321, %r4315, %r4314, 25;
	mov.b64 	%rd3646, {%r4321, %r4320};
	xor.b64  	%rd3647, %rd3645, %rd3646;
	xor.b64  	%rd3648, %rd3604, %rd3579;
	and.b64  	%rd3649, %rd3629, %rd3648;
	and.b64  	%rd3650, %rd3604, %rd3579;
	xor.b64  	%rd3651, %rd3649, %rd3650;
	add.s64 	%rd3652, %rd3647, %rd3651;
	add.s64 	%rd3653, %rd3642, %rd3554;
	add.s64 	%rd3654, %rd3652, %rd3642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4322,%dummy}, %rd3653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4323}, %rd3653;
	}
	shf.r.wrap.b32 	%r4324, %r4323, %r4322, 14;
	shf.r.wrap.b32 	%r4325, %r4322, %r4323, 14;
	mov.b64 	%rd3655, {%r4325, %r4324};
	shf.r.wrap.b32 	%r4326, %r4323, %r4322, 18;
	shf.r.wrap.b32 	%r4327, %r4322, %r4323, 18;
	mov.b64 	%rd3656, {%r4327, %r4326};
	xor.b64  	%rd3657, %rd3655, %rd3656;
	shf.l.wrap.b32 	%r4328, %r4322, %r4323, 23;
	shf.l.wrap.b32 	%r4329, %r4323, %r4322, 23;
	mov.b64 	%rd3658, {%r4329, %r4328};
	xor.b64  	%rd3659, %rd3657, %rd3658;
	and.b64  	%rd3660, %rd3653, %rd3628;
	not.b64 	%rd3661, %rd3653;
	and.b64  	%rd3662, %rd3603, %rd3661;
	or.b64  	%rd3663, %rd3660, %rd3662;
	add.s64 	%rd3664, %rd3663, %rd3578;
	add.s64 	%rd3665, %rd3664, %rd3659;
	add.s64 	%rd3666, %rd3665, %rd104;
	add.s64 	%rd3667, %rd3666, %rd1879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4330,%dummy}, %rd3654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4331}, %rd3654;
	}
	shf.r.wrap.b32 	%r4332, %r4331, %r4330, 28;
	shf.r.wrap.b32 	%r4333, %r4330, %r4331, 28;
	mov.b64 	%rd3668, {%r4333, %r4332};
	shf.l.wrap.b32 	%r4334, %r4330, %r4331, 30;
	shf.l.wrap.b32 	%r4335, %r4331, %r4330, 30;
	mov.b64 	%rd3669, {%r4335, %r4334};
	xor.b64  	%rd3670, %rd3668, %rd3669;
	shf.l.wrap.b32 	%r4336, %r4330, %r4331, 25;
	shf.l.wrap.b32 	%r4337, %r4331, %r4330, 25;
	mov.b64 	%rd3671, {%r4337, %r4336};
	xor.b64  	%rd3672, %rd3670, %rd3671;
	xor.b64  	%rd3673, %rd3629, %rd3604;
	and.b64  	%rd3674, %rd3654, %rd3673;
	and.b64  	%rd3675, %rd3629, %rd3604;
	xor.b64  	%rd3676, %rd3674, %rd3675;
	add.s64 	%rd3677, %rd3672, %rd3676;
	add.s64 	%rd3678, %rd3667, %rd3579;
	add.s64 	%rd3679, %rd3677, %rd3667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4338,%dummy}, %rd3678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4339}, %rd3678;
	}
	shf.r.wrap.b32 	%r4340, %r4339, %r4338, 14;
	shf.r.wrap.b32 	%r4341, %r4338, %r4339, 14;
	mov.b64 	%rd3680, {%r4341, %r4340};
	shf.r.wrap.b32 	%r4342, %r4339, %r4338, 18;
	shf.r.wrap.b32 	%r4343, %r4338, %r4339, 18;
	mov.b64 	%rd3681, {%r4343, %r4342};
	xor.b64  	%rd3682, %rd3680, %rd3681;
	shf.l.wrap.b32 	%r4344, %r4338, %r4339, 23;
	shf.l.wrap.b32 	%r4345, %r4339, %r4338, 23;
	mov.b64 	%rd3683, {%r4345, %r4344};
	xor.b64  	%rd3684, %rd3682, %rd3683;
	and.b64  	%rd3685, %rd3678, %rd3653;
	not.b64 	%rd3686, %rd3678;
	and.b64  	%rd3687, %rd3628, %rd3686;
	or.b64  	%rd3688, %rd3685, %rd3687;
	add.s64 	%rd3689, %rd3688, %rd3603;
	add.s64 	%rd3690, %rd3689, %rd3684;
	add.s64 	%rd3691, %rd3690, %rd105;
	add.s64 	%rd3692, %rd3691, %rd1892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4346,%dummy}, %rd3679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4347}, %rd3679;
	}
	shf.r.wrap.b32 	%r4348, %r4347, %r4346, 28;
	shf.r.wrap.b32 	%r4349, %r4346, %r4347, 28;
	mov.b64 	%rd3693, {%r4349, %r4348};
	shf.l.wrap.b32 	%r4350, %r4346, %r4347, 30;
	shf.l.wrap.b32 	%r4351, %r4347, %r4346, 30;
	mov.b64 	%rd3694, {%r4351, %r4350};
	xor.b64  	%rd3695, %rd3693, %rd3694;
	shf.l.wrap.b32 	%r4352, %r4346, %r4347, 25;
	shf.l.wrap.b32 	%r4353, %r4347, %r4346, 25;
	mov.b64 	%rd3696, {%r4353, %r4352};
	xor.b64  	%rd3697, %rd3695, %rd3696;
	xor.b64  	%rd3698, %rd3654, %rd3629;
	and.b64  	%rd3699, %rd3679, %rd3698;
	and.b64  	%rd3700, %rd3654, %rd3629;
	xor.b64  	%rd3701, %rd3699, %rd3700;
	add.s64 	%rd3702, %rd3697, %rd3701;
	add.s64 	%rd3703, %rd3692, %rd3604;
	add.s64 	%rd3704, %rd3702, %rd3692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4354,%dummy}, %rd3703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4355}, %rd3703;
	}
	shf.r.wrap.b32 	%r4356, %r4355, %r4354, 14;
	shf.r.wrap.b32 	%r4357, %r4354, %r4355, 14;
	mov.b64 	%rd3705, {%r4357, %r4356};
	shf.r.wrap.b32 	%r4358, %r4355, %r4354, 18;
	shf.r.wrap.b32 	%r4359, %r4354, %r4355, 18;
	mov.b64 	%rd3706, {%r4359, %r4358};
	xor.b64  	%rd3707, %rd3705, %rd3706;
	shf.l.wrap.b32 	%r4360, %r4354, %r4355, 23;
	shf.l.wrap.b32 	%r4361, %r4355, %r4354, 23;
	mov.b64 	%rd3708, {%r4361, %r4360};
	xor.b64  	%rd3709, %rd3707, %rd3708;
	and.b64  	%rd3710, %rd3703, %rd3678;
	not.b64 	%rd3711, %rd3703;
	and.b64  	%rd3712, %rd3653, %rd3711;
	or.b64  	%rd3713, %rd3710, %rd3712;
	add.s64 	%rd3714, %rd3713, %rd3628;
	add.s64 	%rd3715, %rd3714, %rd3709;
	add.s64 	%rd3716, %rd3715, %rd106;
	add.s64 	%rd3717, %rd3716, %rd1905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4362,%dummy}, %rd3704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4363}, %rd3704;
	}
	shf.r.wrap.b32 	%r4364, %r4363, %r4362, 28;
	shf.r.wrap.b32 	%r4365, %r4362, %r4363, 28;
	mov.b64 	%rd3718, {%r4365, %r4364};
	shf.l.wrap.b32 	%r4366, %r4362, %r4363, 30;
	shf.l.wrap.b32 	%r4367, %r4363, %r4362, 30;
	mov.b64 	%rd3719, {%r4367, %r4366};
	xor.b64  	%rd3720, %rd3718, %rd3719;
	shf.l.wrap.b32 	%r4368, %r4362, %r4363, 25;
	shf.l.wrap.b32 	%r4369, %r4363, %r4362, 25;
	mov.b64 	%rd3721, {%r4369, %r4368};
	xor.b64  	%rd3722, %rd3720, %rd3721;
	xor.b64  	%rd3723, %rd3679, %rd3654;
	and.b64  	%rd3724, %rd3704, %rd3723;
	and.b64  	%rd3725, %rd3679, %rd3654;
	xor.b64  	%rd3726, %rd3724, %rd3725;
	add.s64 	%rd3727, %rd3722, %rd3726;
	add.s64 	%rd3728, %rd3717, %rd3629;
	add.s64 	%rd3729, %rd3727, %rd3717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4370,%dummy}, %rd3728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4371}, %rd3728;
	}
	shf.r.wrap.b32 	%r4372, %r4371, %r4370, 14;
	shf.r.wrap.b32 	%r4373, %r4370, %r4371, 14;
	mov.b64 	%rd3730, {%r4373, %r4372};
	shf.r.wrap.b32 	%r4374, %r4371, %r4370, 18;
	shf.r.wrap.b32 	%r4375, %r4370, %r4371, 18;
	mov.b64 	%rd3731, {%r4375, %r4374};
	xor.b64  	%rd3732, %rd3730, %rd3731;
	shf.l.wrap.b32 	%r4376, %r4370, %r4371, 23;
	shf.l.wrap.b32 	%r4377, %r4371, %r4370, 23;
	mov.b64 	%rd3733, {%r4377, %r4376};
	xor.b64  	%rd3734, %rd3732, %rd3733;
	and.b64  	%rd3735, %rd3728, %rd3703;
	not.b64 	%rd3736, %rd3728;
	and.b64  	%rd3737, %rd3678, %rd3736;
	or.b64  	%rd3738, %rd3735, %rd3737;
	add.s64 	%rd3739, %rd3738, %rd3653;
	add.s64 	%rd3740, %rd3739, %rd3734;
	add.s64 	%rd3741, %rd3740, %rd107;
	add.s64 	%rd3742, %rd3741, %rd1918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4378,%dummy}, %rd3729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4379}, %rd3729;
	}
	shf.r.wrap.b32 	%r4380, %r4379, %r4378, 28;
	shf.r.wrap.b32 	%r4381, %r4378, %r4379, 28;
	mov.b64 	%rd3743, {%r4381, %r4380};
	shf.l.wrap.b32 	%r4382, %r4378, %r4379, 30;
	shf.l.wrap.b32 	%r4383, %r4379, %r4378, 30;
	mov.b64 	%rd3744, {%r4383, %r4382};
	xor.b64  	%rd3745, %rd3743, %rd3744;
	shf.l.wrap.b32 	%r4384, %r4378, %r4379, 25;
	shf.l.wrap.b32 	%r4385, %r4379, %r4378, 25;
	mov.b64 	%rd3746, {%r4385, %r4384};
	xor.b64  	%rd3747, %rd3745, %rd3746;
	xor.b64  	%rd3748, %rd3704, %rd3679;
	and.b64  	%rd3749, %rd3729, %rd3748;
	and.b64  	%rd3750, %rd3704, %rd3679;
	xor.b64  	%rd3751, %rd3749, %rd3750;
	add.s64 	%rd3752, %rd3747, %rd3751;
	add.s64 	%rd3753, %rd3742, %rd3654;
	add.s64 	%rd3754, %rd3752, %rd3742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4386,%dummy}, %rd3753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4387}, %rd3753;
	}
	shf.r.wrap.b32 	%r4388, %r4387, %r4386, 14;
	shf.r.wrap.b32 	%r4389, %r4386, %r4387, 14;
	mov.b64 	%rd3755, {%r4389, %r4388};
	shf.r.wrap.b32 	%r4390, %r4387, %r4386, 18;
	shf.r.wrap.b32 	%r4391, %r4386, %r4387, 18;
	mov.b64 	%rd3756, {%r4391, %r4390};
	xor.b64  	%rd3757, %rd3755, %rd3756;
	shf.l.wrap.b32 	%r4392, %r4386, %r4387, 23;
	shf.l.wrap.b32 	%r4393, %r4387, %r4386, 23;
	mov.b64 	%rd3758, {%r4393, %r4392};
	xor.b64  	%rd3759, %rd3757, %rd3758;
	and.b64  	%rd3760, %rd3753, %rd3728;
	not.b64 	%rd3761, %rd3753;
	and.b64  	%rd3762, %rd3703, %rd3761;
	or.b64  	%rd3763, %rd3760, %rd3762;
	add.s64 	%rd3764, %rd3763, %rd3678;
	add.s64 	%rd3765, %rd3764, %rd3759;
	add.s64 	%rd3766, %rd3765, %rd108;
	add.s64 	%rd3767, %rd3766, %rd1931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4394,%dummy}, %rd3754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4395}, %rd3754;
	}
	shf.r.wrap.b32 	%r4396, %r4395, %r4394, 28;
	shf.r.wrap.b32 	%r4397, %r4394, %r4395, 28;
	mov.b64 	%rd3768, {%r4397, %r4396};
	shf.l.wrap.b32 	%r4398, %r4394, %r4395, 30;
	shf.l.wrap.b32 	%r4399, %r4395, %r4394, 30;
	mov.b64 	%rd3769, {%r4399, %r4398};
	xor.b64  	%rd3770, %rd3768, %rd3769;
	shf.l.wrap.b32 	%r4400, %r4394, %r4395, 25;
	shf.l.wrap.b32 	%r4401, %r4395, %r4394, 25;
	mov.b64 	%rd3771, {%r4401, %r4400};
	xor.b64  	%rd3772, %rd3770, %rd3771;
	xor.b64  	%rd3773, %rd3729, %rd3704;
	and.b64  	%rd3774, %rd3754, %rd3773;
	and.b64  	%rd3775, %rd3729, %rd3704;
	xor.b64  	%rd3776, %rd3774, %rd3775;
	add.s64 	%rd3777, %rd3772, %rd3776;
	add.s64 	%rd3778, %rd3767, %rd3679;
	add.s64 	%rd3779, %rd3777, %rd3767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4402,%dummy}, %rd3778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4403}, %rd3778;
	}
	shf.r.wrap.b32 	%r4404, %r4403, %r4402, 14;
	shf.r.wrap.b32 	%r4405, %r4402, %r4403, 14;
	mov.b64 	%rd3780, {%r4405, %r4404};
	shf.r.wrap.b32 	%r4406, %r4403, %r4402, 18;
	shf.r.wrap.b32 	%r4407, %r4402, %r4403, 18;
	mov.b64 	%rd3781, {%r4407, %r4406};
	xor.b64  	%rd3782, %rd3780, %rd3781;
	shf.l.wrap.b32 	%r4408, %r4402, %r4403, 23;
	shf.l.wrap.b32 	%r4409, %r4403, %r4402, 23;
	mov.b64 	%rd3783, {%r4409, %r4408};
	xor.b64  	%rd3784, %rd3782, %rd3783;
	and.b64  	%rd3785, %rd3778, %rd3753;
	not.b64 	%rd3786, %rd3778;
	and.b64  	%rd3787, %rd3728, %rd3786;
	or.b64  	%rd3788, %rd3785, %rd3787;
	add.s64 	%rd3789, %rd3788, %rd3703;
	add.s64 	%rd3790, %rd3789, %rd3784;
	add.s64 	%rd3791, %rd3790, %rd109;
	add.s64 	%rd3792, %rd3791, %rd1944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4410,%dummy}, %rd3779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4411}, %rd3779;
	}
	shf.r.wrap.b32 	%r4412, %r4411, %r4410, 28;
	shf.r.wrap.b32 	%r4413, %r4410, %r4411, 28;
	mov.b64 	%rd3793, {%r4413, %r4412};
	shf.l.wrap.b32 	%r4414, %r4410, %r4411, 30;
	shf.l.wrap.b32 	%r4415, %r4411, %r4410, 30;
	mov.b64 	%rd3794, {%r4415, %r4414};
	xor.b64  	%rd3795, %rd3793, %rd3794;
	shf.l.wrap.b32 	%r4416, %r4410, %r4411, 25;
	shf.l.wrap.b32 	%r4417, %r4411, %r4410, 25;
	mov.b64 	%rd3796, {%r4417, %r4416};
	xor.b64  	%rd3797, %rd3795, %rd3796;
	xor.b64  	%rd3798, %rd3754, %rd3729;
	and.b64  	%rd3799, %rd3779, %rd3798;
	and.b64  	%rd3800, %rd3754, %rd3729;
	xor.b64  	%rd3801, %rd3799, %rd3800;
	add.s64 	%rd3802, %rd3797, %rd3801;
	add.s64 	%rd3803, %rd3792, %rd3704;
	add.s64 	%rd3804, %rd3802, %rd3792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4418,%dummy}, %rd3803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4419}, %rd3803;
	}
	shf.r.wrap.b32 	%r4420, %r4419, %r4418, 14;
	shf.r.wrap.b32 	%r4421, %r4418, %r4419, 14;
	mov.b64 	%rd3805, {%r4421, %r4420};
	shf.r.wrap.b32 	%r4422, %r4419, %r4418, 18;
	shf.r.wrap.b32 	%r4423, %r4418, %r4419, 18;
	mov.b64 	%rd3806, {%r4423, %r4422};
	xor.b64  	%rd3807, %rd3805, %rd3806;
	shf.l.wrap.b32 	%r4424, %r4418, %r4419, 23;
	shf.l.wrap.b32 	%r4425, %r4419, %r4418, 23;
	mov.b64 	%rd3808, {%r4425, %r4424};
	xor.b64  	%rd3809, %rd3807, %rd3808;
	and.b64  	%rd3810, %rd3803, %rd3778;
	not.b64 	%rd3811, %rd3803;
	and.b64  	%rd3812, %rd3753, %rd3811;
	or.b64  	%rd3813, %rd3810, %rd3812;
	add.s64 	%rd3814, %rd3813, %rd3728;
	add.s64 	%rd3815, %rd3814, %rd3809;
	add.s64 	%rd3816, %rd3815, %rd110;
	add.s64 	%rd3817, %rd3816, %rd1957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4426,%dummy}, %rd3804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4427}, %rd3804;
	}
	shf.r.wrap.b32 	%r4428, %r4427, %r4426, 28;
	shf.r.wrap.b32 	%r4429, %r4426, %r4427, 28;
	mov.b64 	%rd3818, {%r4429, %r4428};
	shf.l.wrap.b32 	%r4430, %r4426, %r4427, 30;
	shf.l.wrap.b32 	%r4431, %r4427, %r4426, 30;
	mov.b64 	%rd3819, {%r4431, %r4430};
	xor.b64  	%rd3820, %rd3818, %rd3819;
	shf.l.wrap.b32 	%r4432, %r4426, %r4427, 25;
	shf.l.wrap.b32 	%r4433, %r4427, %r4426, 25;
	mov.b64 	%rd3821, {%r4433, %r4432};
	xor.b64  	%rd3822, %rd3820, %rd3821;
	xor.b64  	%rd3823, %rd3779, %rd3754;
	and.b64  	%rd3824, %rd3804, %rd3823;
	and.b64  	%rd3825, %rd3779, %rd3754;
	xor.b64  	%rd3826, %rd3824, %rd3825;
	add.s64 	%rd3827, %rd3822, %rd3826;
	add.s64 	%rd3828, %rd3817, %rd3729;
	add.s64 	%rd3829, %rd3827, %rd3817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4434,%dummy}, %rd3828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4435}, %rd3828;
	}
	shf.r.wrap.b32 	%r4436, %r4435, %r4434, 14;
	shf.r.wrap.b32 	%r4437, %r4434, %r4435, 14;
	mov.b64 	%rd3830, {%r4437, %r4436};
	shf.r.wrap.b32 	%r4438, %r4435, %r4434, 18;
	shf.r.wrap.b32 	%r4439, %r4434, %r4435, 18;
	mov.b64 	%rd3831, {%r4439, %r4438};
	xor.b64  	%rd3832, %rd3830, %rd3831;
	shf.l.wrap.b32 	%r4440, %r4434, %r4435, 23;
	shf.l.wrap.b32 	%r4441, %r4435, %r4434, 23;
	mov.b64 	%rd3833, {%r4441, %r4440};
	xor.b64  	%rd3834, %rd3832, %rd3833;
	and.b64  	%rd3835, %rd3828, %rd3803;
	not.b64 	%rd3836, %rd3828;
	and.b64  	%rd3837, %rd3778, %rd3836;
	or.b64  	%rd3838, %rd3835, %rd3837;
	add.s64 	%rd3839, %rd3838, %rd3753;
	add.s64 	%rd3840, %rd3839, %rd3834;
	add.s64 	%rd3841, %rd3840, %rd15518;
	add.s64 	%rd3842, %rd3841, %rd1970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4442,%dummy}, %rd3829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4443}, %rd3829;
	}
	shf.r.wrap.b32 	%r4444, %r4443, %r4442, 28;
	shf.r.wrap.b32 	%r4445, %r4442, %r4443, 28;
	mov.b64 	%rd3843, {%r4445, %r4444};
	shf.l.wrap.b32 	%r4446, %r4442, %r4443, 30;
	shf.l.wrap.b32 	%r4447, %r4443, %r4442, 30;
	mov.b64 	%rd3844, {%r4447, %r4446};
	xor.b64  	%rd3845, %rd3843, %rd3844;
	shf.l.wrap.b32 	%r4448, %r4442, %r4443, 25;
	shf.l.wrap.b32 	%r4449, %r4443, %r4442, 25;
	mov.b64 	%rd3846, {%r4449, %r4448};
	xor.b64  	%rd3847, %rd3845, %rd3846;
	xor.b64  	%rd3848, %rd3804, %rd3779;
	and.b64  	%rd3849, %rd3829, %rd3848;
	and.b64  	%rd3850, %rd3804, %rd3779;
	xor.b64  	%rd3851, %rd3849, %rd3850;
	add.s64 	%rd3852, %rd3847, %rd3851;
	add.s64 	%rd3853, %rd3842, %rd3754;
	add.s64 	%rd3854, %rd3852, %rd3842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4450,%dummy}, %rd3853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4451}, %rd3853;
	}
	shf.r.wrap.b32 	%r4452, %r4451, %r4450, 14;
	shf.r.wrap.b32 	%r4453, %r4450, %r4451, 14;
	mov.b64 	%rd3855, {%r4453, %r4452};
	shf.r.wrap.b32 	%r4454, %r4451, %r4450, 18;
	shf.r.wrap.b32 	%r4455, %r4450, %r4451, 18;
	mov.b64 	%rd3856, {%r4455, %r4454};
	xor.b64  	%rd3857, %rd3855, %rd3856;
	shf.l.wrap.b32 	%r4456, %r4450, %r4451, 23;
	shf.l.wrap.b32 	%r4457, %r4451, %r4450, 23;
	mov.b64 	%rd3858, {%r4457, %r4456};
	xor.b64  	%rd3859, %rd3857, %rd3858;
	and.b64  	%rd3860, %rd3853, %rd3828;
	not.b64 	%rd3861, %rd3853;
	and.b64  	%rd3862, %rd3803, %rd3861;
	or.b64  	%rd3863, %rd3860, %rd3862;
	add.s64 	%rd3864, %rd3863, %rd3778;
	add.s64 	%rd3865, %rd3864, %rd3859;
	add.s64 	%rd3866, %rd3865, %rd15517;
	add.s64 	%rd3867, %rd3866, %rd1983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4458,%dummy}, %rd3854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4459}, %rd3854;
	}
	shf.r.wrap.b32 	%r4460, %r4459, %r4458, 28;
	shf.r.wrap.b32 	%r4461, %r4458, %r4459, 28;
	mov.b64 	%rd3868, {%r4461, %r4460};
	shf.l.wrap.b32 	%r4462, %r4458, %r4459, 30;
	shf.l.wrap.b32 	%r4463, %r4459, %r4458, 30;
	mov.b64 	%rd3869, {%r4463, %r4462};
	xor.b64  	%rd3870, %rd3868, %rd3869;
	shf.l.wrap.b32 	%r4464, %r4458, %r4459, 25;
	shf.l.wrap.b32 	%r4465, %r4459, %r4458, 25;
	mov.b64 	%rd3871, {%r4465, %r4464};
	xor.b64  	%rd3872, %rd3870, %rd3871;
	xor.b64  	%rd3873, %rd3829, %rd3804;
	and.b64  	%rd3874, %rd3854, %rd3873;
	and.b64  	%rd3875, %rd3829, %rd3804;
	xor.b64  	%rd3876, %rd3874, %rd3875;
	add.s64 	%rd3877, %rd3872, %rd3876;
	add.s64 	%rd3878, %rd3867, %rd3779;
	add.s64 	%rd3879, %rd3877, %rd3867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4466,%dummy}, %rd3878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4467}, %rd3878;
	}
	shf.r.wrap.b32 	%r4468, %r4467, %r4466, 14;
	shf.r.wrap.b32 	%r4469, %r4466, %r4467, 14;
	mov.b64 	%rd3880, {%r4469, %r4468};
	shf.r.wrap.b32 	%r4470, %r4467, %r4466, 18;
	shf.r.wrap.b32 	%r4471, %r4466, %r4467, 18;
	mov.b64 	%rd3881, {%r4471, %r4470};
	xor.b64  	%rd3882, %rd3880, %rd3881;
	shf.l.wrap.b32 	%r4472, %r4466, %r4467, 23;
	shf.l.wrap.b32 	%r4473, %r4467, %r4466, 23;
	mov.b64 	%rd3883, {%r4473, %r4472};
	xor.b64  	%rd3884, %rd3882, %rd3883;
	and.b64  	%rd3885, %rd3878, %rd3853;
	not.b64 	%rd3886, %rd3878;
	and.b64  	%rd3887, %rd3828, %rd3886;
	or.b64  	%rd3888, %rd3885, %rd3887;
	add.s64 	%rd3889, %rd3888, %rd3803;
	add.s64 	%rd3890, %rd3889, %rd3884;
	add.s64 	%rd3891, %rd3890, %rd15516;
	add.s64 	%rd3892, %rd3891, %rd1996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4474,%dummy}, %rd3879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4475}, %rd3879;
	}
	shf.r.wrap.b32 	%r4476, %r4475, %r4474, 28;
	shf.r.wrap.b32 	%r4477, %r4474, %r4475, 28;
	mov.b64 	%rd3893, {%r4477, %r4476};
	shf.l.wrap.b32 	%r4478, %r4474, %r4475, 30;
	shf.l.wrap.b32 	%r4479, %r4475, %r4474, 30;
	mov.b64 	%rd3894, {%r4479, %r4478};
	xor.b64  	%rd3895, %rd3893, %rd3894;
	shf.l.wrap.b32 	%r4480, %r4474, %r4475, 25;
	shf.l.wrap.b32 	%r4481, %r4475, %r4474, 25;
	mov.b64 	%rd3896, {%r4481, %r4480};
	xor.b64  	%rd3897, %rd3895, %rd3896;
	xor.b64  	%rd3898, %rd3854, %rd3829;
	and.b64  	%rd3899, %rd3879, %rd3898;
	and.b64  	%rd3900, %rd3854, %rd3829;
	xor.b64  	%rd3901, %rd3899, %rd3900;
	add.s64 	%rd3902, %rd3897, %rd3901;
	add.s64 	%rd3903, %rd3892, %rd3804;
	add.s64 	%rd3904, %rd3902, %rd3892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4482,%dummy}, %rd3903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4483}, %rd3903;
	}
	shf.r.wrap.b32 	%r4484, %r4483, %r4482, 14;
	shf.r.wrap.b32 	%r4485, %r4482, %r4483, 14;
	mov.b64 	%rd3905, {%r4485, %r4484};
	shf.r.wrap.b32 	%r4486, %r4483, %r4482, 18;
	shf.r.wrap.b32 	%r4487, %r4482, %r4483, 18;
	mov.b64 	%rd3906, {%r4487, %r4486};
	xor.b64  	%rd3907, %rd3905, %rd3906;
	shf.l.wrap.b32 	%r4488, %r4482, %r4483, 23;
	shf.l.wrap.b32 	%r4489, %r4483, %r4482, 23;
	mov.b64 	%rd3908, {%r4489, %r4488};
	xor.b64  	%rd3909, %rd3907, %rd3908;
	and.b64  	%rd3910, %rd3903, %rd3878;
	not.b64 	%rd3911, %rd3903;
	and.b64  	%rd3912, %rd3853, %rd3911;
	or.b64  	%rd3913, %rd3910, %rd3912;
	add.s64 	%rd3914, %rd3913, %rd3828;
	add.s64 	%rd3915, %rd3914, %rd3909;
	add.s64 	%rd3916, %rd3915, %rd114;
	add.s64 	%rd3917, %rd3916, %rd2009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4490,%dummy}, %rd3904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4491}, %rd3904;
	}
	shf.r.wrap.b32 	%r4492, %r4491, %r4490, 28;
	shf.r.wrap.b32 	%r4493, %r4490, %r4491, 28;
	mov.b64 	%rd3918, {%r4493, %r4492};
	shf.l.wrap.b32 	%r4494, %r4490, %r4491, 30;
	shf.l.wrap.b32 	%r4495, %r4491, %r4490, 30;
	mov.b64 	%rd3919, {%r4495, %r4494};
	xor.b64  	%rd3920, %rd3918, %rd3919;
	shf.l.wrap.b32 	%r4496, %r4490, %r4491, 25;
	shf.l.wrap.b32 	%r4497, %r4491, %r4490, 25;
	mov.b64 	%rd3921, {%r4497, %r4496};
	xor.b64  	%rd3922, %rd3920, %rd3921;
	xor.b64  	%rd3923, %rd3879, %rd3854;
	and.b64  	%rd3924, %rd3904, %rd3923;
	and.b64  	%rd3925, %rd3879, %rd3854;
	xor.b64  	%rd3926, %rd3924, %rd3925;
	add.s64 	%rd3927, %rd3922, %rd3926;
	add.s64 	%rd3928, %rd3917, %rd3829;
	add.s64 	%rd3929, %rd3927, %rd3917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4498,%dummy}, %rd3928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4499}, %rd3928;
	}
	shf.r.wrap.b32 	%r4500, %r4499, %r4498, 14;
	shf.r.wrap.b32 	%r4501, %r4498, %r4499, 14;
	mov.b64 	%rd3930, {%r4501, %r4500};
	shf.r.wrap.b32 	%r4502, %r4499, %r4498, 18;
	shf.r.wrap.b32 	%r4503, %r4498, %r4499, 18;
	mov.b64 	%rd3931, {%r4503, %r4502};
	xor.b64  	%rd3932, %rd3930, %rd3931;
	shf.l.wrap.b32 	%r4504, %r4498, %r4499, 23;
	shf.l.wrap.b32 	%r4505, %r4499, %r4498, 23;
	mov.b64 	%rd3933, {%r4505, %r4504};
	xor.b64  	%rd3934, %rd3932, %rd3933;
	and.b64  	%rd3935, %rd3928, %rd3903;
	not.b64 	%rd3936, %rd3928;
	and.b64  	%rd3937, %rd3878, %rd3936;
	or.b64  	%rd3938, %rd3935, %rd3937;
	add.s64 	%rd3939, %rd3938, %rd3853;
	add.s64 	%rd3940, %rd3939, %rd3934;
	add.s64 	%rd3941, %rd3940, %rd115;
	add.s64 	%rd3942, %rd3941, %rd2022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4506,%dummy}, %rd3929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4507}, %rd3929;
	}
	shf.r.wrap.b32 	%r4508, %r4507, %r4506, 28;
	shf.r.wrap.b32 	%r4509, %r4506, %r4507, 28;
	mov.b64 	%rd3943, {%r4509, %r4508};
	shf.l.wrap.b32 	%r4510, %r4506, %r4507, 30;
	shf.l.wrap.b32 	%r4511, %r4507, %r4506, 30;
	mov.b64 	%rd3944, {%r4511, %r4510};
	xor.b64  	%rd3945, %rd3943, %rd3944;
	shf.l.wrap.b32 	%r4512, %r4506, %r4507, 25;
	shf.l.wrap.b32 	%r4513, %r4507, %r4506, 25;
	mov.b64 	%rd3946, {%r4513, %r4512};
	xor.b64  	%rd3947, %rd3945, %rd3946;
	xor.b64  	%rd3948, %rd3904, %rd3879;
	and.b64  	%rd3949, %rd3929, %rd3948;
	and.b64  	%rd3950, %rd3904, %rd3879;
	xor.b64  	%rd3951, %rd3949, %rd3950;
	add.s64 	%rd3952, %rd3947, %rd3951;
	add.s64 	%rd3953, %rd3942, %rd3854;
	add.s64 	%rd3954, %rd3952, %rd3942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4514,%dummy}, %rd3953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4515}, %rd3953;
	}
	shf.r.wrap.b32 	%r4516, %r4515, %r4514, 14;
	shf.r.wrap.b32 	%r4517, %r4514, %r4515, 14;
	mov.b64 	%rd3955, {%r4517, %r4516};
	shf.r.wrap.b32 	%r4518, %r4515, %r4514, 18;
	shf.r.wrap.b32 	%r4519, %r4514, %r4515, 18;
	mov.b64 	%rd3956, {%r4519, %r4518};
	xor.b64  	%rd3957, %rd3955, %rd3956;
	shf.l.wrap.b32 	%r4520, %r4514, %r4515, 23;
	shf.l.wrap.b32 	%r4521, %r4515, %r4514, 23;
	mov.b64 	%rd3958, {%r4521, %r4520};
	xor.b64  	%rd3959, %rd3957, %rd3958;
	and.b64  	%rd3960, %rd3953, %rd3928;
	not.b64 	%rd3961, %rd3953;
	and.b64  	%rd3962, %rd3903, %rd3961;
	or.b64  	%rd3963, %rd3960, %rd3962;
	add.s64 	%rd3964, %rd3963, %rd3878;
	add.s64 	%rd3965, %rd3964, %rd3959;
	add.s64 	%rd3966, %rd3965, %rd116;
	add.s64 	%rd3967, %rd3966, %rd2035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4522,%dummy}, %rd3954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4523}, %rd3954;
	}
	shf.r.wrap.b32 	%r4524, %r4523, %r4522, 28;
	shf.r.wrap.b32 	%r4525, %r4522, %r4523, 28;
	mov.b64 	%rd3968, {%r4525, %r4524};
	shf.l.wrap.b32 	%r4526, %r4522, %r4523, 30;
	shf.l.wrap.b32 	%r4527, %r4523, %r4522, 30;
	mov.b64 	%rd3969, {%r4527, %r4526};
	xor.b64  	%rd3970, %rd3968, %rd3969;
	shf.l.wrap.b32 	%r4528, %r4522, %r4523, 25;
	shf.l.wrap.b32 	%r4529, %r4523, %r4522, 25;
	mov.b64 	%rd3971, {%r4529, %r4528};
	xor.b64  	%rd3972, %rd3970, %rd3971;
	xor.b64  	%rd3973, %rd3929, %rd3904;
	and.b64  	%rd3974, %rd3954, %rd3973;
	and.b64  	%rd3975, %rd3929, %rd3904;
	xor.b64  	%rd3976, %rd3974, %rd3975;
	add.s64 	%rd3977, %rd3972, %rd3976;
	add.s64 	%rd3978, %rd3967, %rd3879;
	add.s64 	%rd3979, %rd3977, %rd3967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4530,%dummy}, %rd3978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4531}, %rd3978;
	}
	shf.r.wrap.b32 	%r4532, %r4531, %r4530, 14;
	shf.r.wrap.b32 	%r4533, %r4530, %r4531, 14;
	mov.b64 	%rd3980, {%r4533, %r4532};
	shf.r.wrap.b32 	%r4534, %r4531, %r4530, 18;
	shf.r.wrap.b32 	%r4535, %r4530, %r4531, 18;
	mov.b64 	%rd3981, {%r4535, %r4534};
	xor.b64  	%rd3982, %rd3980, %rd3981;
	shf.l.wrap.b32 	%r4536, %r4530, %r4531, 23;
	shf.l.wrap.b32 	%r4537, %r4531, %r4530, 23;
	mov.b64 	%rd3983, {%r4537, %r4536};
	xor.b64  	%rd3984, %rd3982, %rd3983;
	and.b64  	%rd3985, %rd3978, %rd3953;
	not.b64 	%rd3986, %rd3978;
	and.b64  	%rd3987, %rd3928, %rd3986;
	or.b64  	%rd3988, %rd3985, %rd3987;
	add.s64 	%rd3989, %rd3988, %rd3903;
	add.s64 	%rd3990, %rd3989, %rd3984;
	add.s64 	%rd3991, %rd3990, %rd117;
	add.s64 	%rd3992, %rd3991, %rd2048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4538,%dummy}, %rd3979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4539}, %rd3979;
	}
	shf.r.wrap.b32 	%r4540, %r4539, %r4538, 28;
	shf.r.wrap.b32 	%r4541, %r4538, %r4539, 28;
	mov.b64 	%rd3993, {%r4541, %r4540};
	shf.l.wrap.b32 	%r4542, %r4538, %r4539, 30;
	shf.l.wrap.b32 	%r4543, %r4539, %r4538, 30;
	mov.b64 	%rd3994, {%r4543, %r4542};
	xor.b64  	%rd3995, %rd3993, %rd3994;
	shf.l.wrap.b32 	%r4544, %r4538, %r4539, 25;
	shf.l.wrap.b32 	%r4545, %r4539, %r4538, 25;
	mov.b64 	%rd3996, {%r4545, %r4544};
	xor.b64  	%rd3997, %rd3995, %rd3996;
	xor.b64  	%rd3998, %rd3954, %rd3929;
	and.b64  	%rd3999, %rd3979, %rd3998;
	and.b64  	%rd4000, %rd3954, %rd3929;
	xor.b64  	%rd4001, %rd3999, %rd4000;
	add.s64 	%rd4002, %rd3997, %rd4001;
	add.s64 	%rd4003, %rd3992, %rd3904;
	add.s64 	%rd4004, %rd4002, %rd3992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4546,%dummy}, %rd4003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4547}, %rd4003;
	}
	shf.r.wrap.b32 	%r4548, %r4547, %r4546, 14;
	shf.r.wrap.b32 	%r4549, %r4546, %r4547, 14;
	mov.b64 	%rd4005, {%r4549, %r4548};
	shf.r.wrap.b32 	%r4550, %r4547, %r4546, 18;
	shf.r.wrap.b32 	%r4551, %r4546, %r4547, 18;
	mov.b64 	%rd4006, {%r4551, %r4550};
	xor.b64  	%rd4007, %rd4005, %rd4006;
	shf.l.wrap.b32 	%r4552, %r4546, %r4547, 23;
	shf.l.wrap.b32 	%r4553, %r4547, %r4546, 23;
	mov.b64 	%rd4008, {%r4553, %r4552};
	xor.b64  	%rd4009, %rd4007, %rd4008;
	and.b64  	%rd4010, %rd4003, %rd3978;
	not.b64 	%rd4011, %rd4003;
	and.b64  	%rd4012, %rd3953, %rd4011;
	or.b64  	%rd4013, %rd4010, %rd4012;
	add.s64 	%rd4014, %rd4013, %rd3928;
	add.s64 	%rd4015, %rd4014, %rd4009;
	add.s64 	%rd4016, %rd4015, %rd118;
	add.s64 	%rd4017, %rd4016, %rd2061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4554,%dummy}, %rd4004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4555}, %rd4004;
	}
	shf.r.wrap.b32 	%r4556, %r4555, %r4554, 28;
	shf.r.wrap.b32 	%r4557, %r4554, %r4555, 28;
	mov.b64 	%rd4018, {%r4557, %r4556};
	shf.l.wrap.b32 	%r4558, %r4554, %r4555, 30;
	shf.l.wrap.b32 	%r4559, %r4555, %r4554, 30;
	mov.b64 	%rd4019, {%r4559, %r4558};
	xor.b64  	%rd4020, %rd4018, %rd4019;
	shf.l.wrap.b32 	%r4560, %r4554, %r4555, 25;
	shf.l.wrap.b32 	%r4561, %r4555, %r4554, 25;
	mov.b64 	%rd4021, {%r4561, %r4560};
	xor.b64  	%rd4022, %rd4020, %rd4021;
	xor.b64  	%rd4023, %rd3979, %rd3954;
	and.b64  	%rd4024, %rd4004, %rd4023;
	and.b64  	%rd4025, %rd3979, %rd3954;
	xor.b64  	%rd4026, %rd4024, %rd4025;
	add.s64 	%rd4027, %rd4022, %rd4026;
	add.s64 	%rd4028, %rd4017, %rd3929;
	add.s64 	%rd4029, %rd4027, %rd4017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4562,%dummy}, %rd4028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4563}, %rd4028;
	}
	shf.r.wrap.b32 	%r4564, %r4563, %r4562, 14;
	shf.r.wrap.b32 	%r4565, %r4562, %r4563, 14;
	mov.b64 	%rd4030, {%r4565, %r4564};
	shf.r.wrap.b32 	%r4566, %r4563, %r4562, 18;
	shf.r.wrap.b32 	%r4567, %r4562, %r4563, 18;
	mov.b64 	%rd4031, {%r4567, %r4566};
	xor.b64  	%rd4032, %rd4030, %rd4031;
	shf.l.wrap.b32 	%r4568, %r4562, %r4563, 23;
	shf.l.wrap.b32 	%r4569, %r4563, %r4562, 23;
	mov.b64 	%rd4033, {%r4569, %r4568};
	xor.b64  	%rd4034, %rd4032, %rd4033;
	and.b64  	%rd4035, %rd4028, %rd4003;
	not.b64 	%rd4036, %rd4028;
	and.b64  	%rd4037, %rd3978, %rd4036;
	or.b64  	%rd4038, %rd4035, %rd4037;
	add.s64 	%rd4039, %rd4038, %rd3953;
	add.s64 	%rd4040, %rd4039, %rd4034;
	add.s64 	%rd4041, %rd4040, %rd119;
	add.s64 	%rd4042, %rd4041, %rd2074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4570,%dummy}, %rd4029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4571}, %rd4029;
	}
	shf.r.wrap.b32 	%r4572, %r4571, %r4570, 28;
	shf.r.wrap.b32 	%r4573, %r4570, %r4571, 28;
	mov.b64 	%rd4043, {%r4573, %r4572};
	shf.l.wrap.b32 	%r4574, %r4570, %r4571, 30;
	shf.l.wrap.b32 	%r4575, %r4571, %r4570, 30;
	mov.b64 	%rd4044, {%r4575, %r4574};
	xor.b64  	%rd4045, %rd4043, %rd4044;
	shf.l.wrap.b32 	%r4576, %r4570, %r4571, 25;
	shf.l.wrap.b32 	%r4577, %r4571, %r4570, 25;
	mov.b64 	%rd4046, {%r4577, %r4576};
	xor.b64  	%rd4047, %rd4045, %rd4046;
	xor.b64  	%rd4048, %rd4004, %rd3979;
	and.b64  	%rd4049, %rd4029, %rd4048;
	and.b64  	%rd4050, %rd4004, %rd3979;
	xor.b64  	%rd4051, %rd4049, %rd4050;
	add.s64 	%rd4052, %rd4047, %rd4051;
	add.s64 	%rd4053, %rd4042, %rd3954;
	add.s64 	%rd4054, %rd4052, %rd4042;
	add.s64 	%rd4055, %rd4054, 7640891576956012808;
	add.s64 	%rd4056, %rd4029, -4942790177534073029;
	add.s64 	%rd4057, %rd4004, 4354685564936845355;
	add.s64 	%rd4058, %rd3979, -6534734903238641935;
	add.s64 	%rd4059, %rd4053, 5840696475078001361;
	add.s64 	%rd4060, %rd4028, -7276294671716946913;
	add.s64 	%rd4061, %rd4003, 2270897969802886507;
	add.s64 	%rd4062, %rd3978, 6620516959819538809;
	shr.u64 	%rd4063, %rd4055, 56;
	shr.u64 	%rd4064, %rd4055, 48;
	shr.u64 	%rd4065, %rd4055, 40;
	cvt.u32.u64 	%r4578, %rd4065;
	shr.u64 	%rd4066, %rd4055, 32;
	cvt.u32.u64 	%r4579, %rd4055;
	shr.u64 	%rd4067, %rd4055, 16;
	shr.u64 	%rd4068, %rd4056, 56;
	shr.u64 	%rd4069, %rd4056, 48;
	shr.u64 	%rd4070, %rd4056, 40;
	cvt.u32.u64 	%r4580, %rd4070;
	shr.u64 	%rd4071, %rd4056, 32;
	cvt.u32.u64 	%r4581, %rd4056;
	shr.u64 	%rd4072, %rd4056, 16;
	cvt.u16.u64 	%rs378, %rd4063;
	cvt.u16.u64 	%rs379, %rd4064;
	shl.b16 	%rs380, %rs379, 8;
	or.b16  	%rs381, %rs378, %rs380;
	cvt.u32.u64 	%r4582, %rd4066;
	and.b32  	%r4583, %r4578, 255;
	prmt.b32 	%r4584, %r4582, %r4583, 30212;
	cvt.u16.u32 	%rs382, %r4584;
	cvt.u16.u64 	%rs383, %rd4055;
	shl.b16 	%rs384, %rs383, 8;
	shr.u16 	%rs385, %rs383, 8;
	or.b16  	%rs386, %rs385, %rs384;
	shr.u32 	%r4585, %r4579, 24;
	cvt.u32.u64 	%r4586, %rd4067;
	prmt.b32 	%r4587, %r4586, %r4585, 30212;
	cvt.u16.u32 	%rs387, %r4587;
	cvt.u16.u64 	%rs388, %rd4068;
	cvt.u16.u64 	%rs389, %rd4069;
	shl.b16 	%rs390, %rs389, 8;
	or.b16  	%rs391, %rs388, %rs390;
	cvt.u32.u64 	%r4588, %rd4071;
	and.b32  	%r4589, %r4580, 255;
	prmt.b32 	%r4590, %r4588, %r4589, 30212;
	cvt.u16.u32 	%rs392, %r4590;
	cvt.u16.u64 	%rs393, %rd4056;
	shl.b16 	%rs394, %rs393, 8;
	shr.u16 	%rs395, %rs393, 8;
	or.b16  	%rs396, %rs395, %rs394;
	shr.u32 	%r4591, %r4581, 24;
	cvt.u32.u64 	%r4592, %rd4072;
	prmt.b32 	%r4593, %r4592, %r4591, 30212;
	cvt.u16.u32 	%rs397, %r4593;
	mov.b32 	%r4594, {%rs387, %rs386};
	mov.b32 	%r4595, {%rs381, %rs382};
	mov.b32 	%r4596, {%rs397, %rs396};
	mov.b32 	%r4597, {%rs391, %rs392};
	st.local.v4.u32 	[%rd2], {%r4595, %r4594, %r4597, %r4596};
	shr.u64 	%rd4073, %rd4057, 56;
	shr.u64 	%rd4074, %rd4057, 48;
	shr.u64 	%rd4075, %rd4057, 40;
	cvt.u32.u64 	%r4598, %rd4075;
	shr.u64 	%rd4076, %rd4057, 32;
	cvt.u32.u64 	%r4599, %rd4057;
	shr.u64 	%rd4077, %rd4057, 16;
	shr.u64 	%rd4078, %rd4058, 56;
	shr.u64 	%rd4079, %rd4058, 48;
	shr.u64 	%rd4080, %rd4058, 40;
	cvt.u32.u64 	%r4600, %rd4080;
	shr.u64 	%rd4081, %rd4058, 32;
	cvt.u32.u64 	%r4601, %rd4058;
	shr.u64 	%rd4082, %rd4058, 16;
	cvt.u16.u64 	%rs398, %rd4073;
	cvt.u16.u64 	%rs399, %rd4074;
	shl.b16 	%rs400, %rs399, 8;
	or.b16  	%rs401, %rs398, %rs400;
	cvt.u32.u64 	%r4602, %rd4076;
	and.b32  	%r4603, %r4598, 255;
	prmt.b32 	%r4604, %r4602, %r4603, 30212;
	cvt.u16.u32 	%rs402, %r4604;
	cvt.u16.u64 	%rs403, %rd4057;
	shl.b16 	%rs404, %rs403, 8;
	shr.u16 	%rs405, %rs403, 8;
	or.b16  	%rs406, %rs405, %rs404;
	shr.u32 	%r4605, %r4599, 24;
	cvt.u32.u64 	%r4606, %rd4077;
	prmt.b32 	%r4607, %r4606, %r4605, 30212;
	cvt.u16.u32 	%rs407, %r4607;
	cvt.u16.u64 	%rs408, %rd4078;
	cvt.u16.u64 	%rs409, %rd4079;
	shl.b16 	%rs410, %rs409, 8;
	or.b16  	%rs411, %rs408, %rs410;
	cvt.u32.u64 	%r4608, %rd4081;
	and.b32  	%r4609, %r4600, 255;
	prmt.b32 	%r4610, %r4608, %r4609, 30212;
	cvt.u16.u32 	%rs412, %r4610;
	cvt.u16.u64 	%rs413, %rd4058;
	shl.b16 	%rs414, %rs413, 8;
	shr.u16 	%rs415, %rs413, 8;
	or.b16  	%rs416, %rs415, %rs414;
	shr.u32 	%r4611, %r4601, 24;
	cvt.u32.u64 	%r4612, %rd4082;
	prmt.b32 	%r4613, %r4612, %r4611, 30212;
	cvt.u16.u32 	%rs417, %r4613;
	mov.b32 	%r4614, {%rs407, %rs406};
	mov.b32 	%r4615, {%rs401, %rs402};
	mov.b32 	%r4616, {%rs417, %rs416};
	mov.b32 	%r4617, {%rs411, %rs412};
	st.local.v4.u32 	[%rd2+16], {%r4615, %r4614, %r4617, %r4616};
	shr.u64 	%rd4083, %rd4059, 56;
	shr.u64 	%rd4084, %rd4059, 48;
	shr.u64 	%rd4085, %rd4059, 40;
	cvt.u32.u64 	%r4618, %rd4085;
	shr.u64 	%rd4086, %rd4059, 32;
	cvt.u32.u64 	%r4619, %rd4059;
	shr.u64 	%rd4087, %rd4059, 16;
	shr.u64 	%rd4088, %rd4060, 56;
	shr.u64 	%rd4089, %rd4060, 48;
	shr.u64 	%rd4090, %rd4060, 40;
	cvt.u32.u64 	%r4620, %rd4090;
	shr.u64 	%rd4091, %rd4060, 32;
	cvt.u32.u64 	%r4621, %rd4060;
	shr.u64 	%rd4092, %rd4060, 16;
	cvt.u16.u64 	%rs418, %rd4083;
	cvt.u16.u64 	%rs419, %rd4084;
	shl.b16 	%rs420, %rs419, 8;
	or.b16  	%rs421, %rs418, %rs420;
	cvt.u32.u64 	%r4622, %rd4086;
	and.b32  	%r4623, %r4618, 255;
	prmt.b32 	%r4624, %r4622, %r4623, 30212;
	cvt.u16.u32 	%rs422, %r4624;
	cvt.u16.u64 	%rs423, %rd4059;
	shl.b16 	%rs424, %rs423, 8;
	shr.u16 	%rs425, %rs423, 8;
	or.b16  	%rs426, %rs425, %rs424;
	shr.u32 	%r4625, %r4619, 24;
	cvt.u32.u64 	%r4626, %rd4087;
	prmt.b32 	%r4627, %r4626, %r4625, 30212;
	cvt.u16.u32 	%rs427, %r4627;
	cvt.u16.u64 	%rs428, %rd4088;
	cvt.u16.u64 	%rs429, %rd4089;
	shl.b16 	%rs430, %rs429, 8;
	or.b16  	%rs431, %rs428, %rs430;
	cvt.u32.u64 	%r4628, %rd4091;
	and.b32  	%r4629, %r4620, 255;
	prmt.b32 	%r4630, %r4628, %r4629, 30212;
	cvt.u16.u32 	%rs432, %r4630;
	cvt.u16.u64 	%rs433, %rd4060;
	shl.b16 	%rs434, %rs433, 8;
	shr.u16 	%rs435, %rs433, 8;
	or.b16  	%rs436, %rs435, %rs434;
	shr.u32 	%r4631, %r4621, 24;
	cvt.u32.u64 	%r4632, %rd4092;
	prmt.b32 	%r4633, %r4632, %r4631, 30212;
	cvt.u16.u32 	%rs437, %r4633;
	mov.b32 	%r4634, {%rs427, %rs426};
	mov.b32 	%r4635, {%rs421, %rs422};
	mov.b32 	%r4636, {%rs437, %rs436};
	mov.b32 	%r4637, {%rs431, %rs432};
	st.local.v4.u32 	[%rd2+32], {%r4635, %r4634, %r4637, %r4636};
	shr.u64 	%rd4093, %rd4061, 56;
	shr.u64 	%rd4094, %rd4061, 48;
	shr.u64 	%rd4095, %rd4061, 40;
	cvt.u32.u64 	%r4638, %rd4095;
	shr.u64 	%rd4096, %rd4061, 32;
	cvt.u32.u64 	%r4639, %rd4061;
	shr.u64 	%rd4097, %rd4061, 16;
	shr.u64 	%rd4098, %rd4062, 56;
	shr.u64 	%rd4099, %rd4062, 48;
	shr.u64 	%rd4100, %rd4062, 40;
	cvt.u32.u64 	%r4640, %rd4100;
	shr.u64 	%rd4101, %rd4062, 32;
	cvt.u32.u64 	%r4641, %rd4062;
	shr.u64 	%rd4102, %rd4062, 16;
	cvt.u16.u64 	%rs438, %rd4093;
	cvt.u16.u64 	%rs439, %rd4094;
	shl.b16 	%rs440, %rs439, 8;
	or.b16  	%rs441, %rs438, %rs440;
	cvt.u32.u64 	%r4642, %rd4096;
	and.b32  	%r4643, %r4638, 255;
	prmt.b32 	%r4644, %r4642, %r4643, 30212;
	cvt.u16.u32 	%rs442, %r4644;
	cvt.u16.u64 	%rs443, %rd4061;
	shl.b16 	%rs444, %rs443, 8;
	shr.u16 	%rs445, %rs443, 8;
	or.b16  	%rs446, %rs445, %rs444;
	shr.u32 	%r4645, %r4639, 24;
	cvt.u32.u64 	%r4646, %rd4097;
	prmt.b32 	%r4647, %r4646, %r4645, 30212;
	cvt.u16.u32 	%rs447, %r4647;
	cvt.u16.u64 	%rs448, %rd4098;
	cvt.u16.u64 	%rs449, %rd4099;
	shl.b16 	%rs450, %rs449, 8;
	or.b16  	%rs451, %rs448, %rs450;
	cvt.u32.u64 	%r4648, %rd4101;
	and.b32  	%r4649, %r4640, 255;
	prmt.b32 	%r4650, %r4648, %r4649, 30212;
	cvt.u16.u32 	%rs452, %r4650;
	cvt.u16.u64 	%rs453, %rd4062;
	shl.b16 	%rs454, %rs453, 8;
	shr.u16 	%rs455, %rs453, 8;
	or.b16  	%rs456, %rs455, %rs454;
	shr.u32 	%r4651, %r4641, 24;
	cvt.u32.u64 	%r4652, %rd4102;
	prmt.b32 	%r4653, %r4652, %r4651, 30212;
	cvt.u16.u32 	%rs457, %r4653;
	mov.b32 	%r4654, {%rs447, %rs446};
	mov.b32 	%r4655, {%rs441, %rs442};
	mov.b32 	%r4656, {%rs457, %rs456};
	mov.b32 	%r4657, {%rs451, %rs452};
	st.local.v4.u32 	[%rd2+48], {%r4655, %r4654, %r4657, %r4656};
	mov.u32 	%r11222, 64;
	mov.u64 	%rd15515, %rd2;

$L__BB4_77:
	setp.lt.s32 	%p57, %r11222, 1;
	@%p57 bra 	$L__BB4_85;

	add.s32 	%r4659, %r11222, -1;
	and.b32  	%r91, %r11222, 3;
	setp.lt.u32 	%p58, %r4659, 3;
	mov.u32 	%r11225, 0;
	@%p58 bra 	$L__BB4_81;

	sub.s32 	%r11224, %r11222, %r91;

$L__BB4_80:
	cvt.s64.s32 	%rd4103, %r11225;
	add.s64 	%rd4104, %rd15515, %rd4103;
	ld.local.u8 	%rs458, [%rd4104];
	xor.b16  	%rs459, %rs458, 54;
	add.s64 	%rd4105, %rd2, %rd4103;
	st.local.u8 	[%rd4105], %rs459;
	ld.local.u8 	%rs460, [%rd4104];
	add.s64 	%rd4106, %rd3, %rd4103;
	ld.local.u8 	%rs461, [%rd4104+1];
	xor.b16  	%rs462, %rs461, 54;
	st.local.u8 	[%rd4105+1], %rs462;
	ld.local.u8 	%rs463, [%rd4104+1];
	ld.local.u8 	%rs464, [%rd4104+2];
	xor.b16  	%rs465, %rs464, 54;
	st.local.u8 	[%rd4105+2], %rs465;
	ld.local.u8 	%rs466, [%rd4104+2];
	ld.local.u8 	%rs467, [%rd4104+3];
	xor.b16  	%rs468, %rs467, 54;
	st.local.u8 	[%rd4105+3], %rs468;
	ld.local.u8 	%rs469, [%rd4104+3];
	xor.b16  	%rs470, %rs460, 92;
	xor.b16  	%rs471, %rs463, 92;
	xor.b16  	%rs472, %rs466, 92;
	xor.b16  	%rs473, %rs469, 92;
	st.local.v4.u8 	[%rd4106], {%rs470, %rs471, %rs472, %rs473};
	add.s32 	%r11225, %r11225, 4;
	add.s32 	%r11224, %r11224, -4;
	setp.ne.s32 	%p59, %r11224, 0;
	@%p59 bra 	$L__BB4_80;

$L__BB4_81:
	setp.eq.s32 	%p60, %r91, 0;
	@%p60 bra 	$L__BB4_85;

	cvt.s64.s32 	%rd4107, %r11225;
	add.s64 	%rd128, %rd15515, %rd4107;
	ld.local.u8 	%rs474, [%rd128];
	xor.b16  	%rs475, %rs474, 54;
	add.s64 	%rd129, %rd2, %rd4107;
	st.local.u8 	[%rd129], %rs475;
	ld.local.u8 	%rs476, [%rd128];
	xor.b16  	%rs477, %rs476, 92;
	add.s64 	%rd130, %rd3, %rd4107;
	st.local.u8 	[%rd130], %rs477;
	setp.eq.s32 	%p61, %r91, 1;
	@%p61 bra 	$L__BB4_85;

	ld.local.u8 	%rs478, [%rd128+1];
	xor.b16  	%rs479, %rs478, 54;
	st.local.u8 	[%rd129+1], %rs479;
	ld.local.u8 	%rs480, [%rd128+1];
	xor.b16  	%rs481, %rs480, 92;
	st.local.u8 	[%rd130+1], %rs481;
	setp.eq.s32 	%p62, %r91, 2;
	@%p62 bra 	$L__BB4_85;

	ld.local.u8 	%rs482, [%rd128+2];
	xor.b16  	%rs483, %rs482, 54;
	st.local.u8 	[%rd129+2], %rs483;
	ld.local.u8 	%rs484, [%rd128+2];
	xor.b16  	%rs485, %rs484, 92;
	st.local.u8 	[%rd130+2], %rs485;

$L__BB4_85:
	setp.gt.s32 	%p63, %r11222, 127;
	@%p63 bra 	$L__BB4_93;

	neg.s32 	%r4661, %r11222;
	and.b32  	%r98, %r4661, 3;
	setp.eq.s32 	%p64, %r98, 0;
	mov.u32 	%r11226, %r11222;
	@%p64 bra 	$L__BB4_90;

	cvt.s64.s32 	%rd4108, %r11222;
	add.s64 	%rd131, %rd2, %rd4108;
	mov.u16 	%rs486, 54;
	st.local.u8 	[%rd131], %rs486;
	add.s64 	%rd132, %rd3, %rd4108;
	mov.u16 	%rs487, 92;
	st.local.u8 	[%rd132], %rs487;
	add.s32 	%r11226, %r11222, 1;
	setp.eq.s32 	%p65, %r98, 1;
	@%p65 bra 	$L__BB4_90;

	st.local.u8 	[%rd131+1], %rs486;
	st.local.u8 	[%rd132+1], %rs487;
	add.s32 	%r11226, %r11222, 2;
	setp.eq.s32 	%p66, %r98, 2;
	@%p66 bra 	$L__BB4_90;

	mov.u16 	%rs490, 54;
	st.local.u8 	[%rd131+2], %rs490;
	mov.u16 	%rs491, 92;
	st.local.u8 	[%rd132+2], %rs491;
	add.s32 	%r11226, %r11222, 3;

$L__BB4_90:
	mov.u32 	%r4662, 127;
	sub.s32 	%r4663, %r4662, %r11222;
	setp.lt.u32 	%p67, %r4663, 3;
	@%p67 bra 	$L__BB4_93;

$L__BB4_92:
	cvt.s64.s32 	%rd4109, %r11226;
	add.s64 	%rd4110, %rd2, %rd4109;
	mov.u16 	%rs492, 54;
	st.local.u8 	[%rd4110], %rs492;
	add.s64 	%rd4111, %rd3, %rd4109;
	mov.u16 	%rs493, 92;
	st.local.u8 	[%rd4111], %rs493;
	st.local.u8 	[%rd4110+1], %rs492;
	st.local.u8 	[%rd4111+1], %rs493;
	st.local.u8 	[%rd4110+2], %rs492;
	st.local.u8 	[%rd4111+2], %rs493;
	st.local.u8 	[%rd4110+3], %rs492;
	st.local.u8 	[%rd4111+3], %rs493;
	add.s32 	%r104, %r11226, 4;
	setp.lt.s32 	%p68, %r11226, 124;
	mov.u32 	%r11226, %r104;
	@%p68 bra 	$L__BB4_92;

$L__BB4_93:
	ld.local.v4.u32 	{%r4665, %r4666, %r4667, %r4668}, [%rd3];
	mov.b32 	{%rs494, %rs495}, %r4665;
	shr.u16 	%rs496, %rs494, 8;
	mov.u32 	%r11228, 1;
	shr.u16 	%rs497, %rs495, 8;
	mov.b32 	{%rs498, %rs499}, %r4666;
	shr.u16 	%rs500, %rs498, 8;
	shr.u16 	%rs501, %rs499, 8;
	mov.b32 	{%rs502, %rs503}, %r4667;
	shr.u16 	%rs504, %rs502, 8;
	shr.u16 	%rs505, %rs503, 8;
	mov.b32 	{%rs506, %rs507}, %r4668;
	shr.u16 	%rs508, %rs506, 8;
	shr.u16 	%rs509, %rs507, 8;
	ld.local.v4.u32 	{%r4673, %r4674, %r4675, %r4676}, [%rd3+16];
	mov.b32 	{%rs510, %rs511}, %r4673;
	shr.u16 	%rs512, %rs510, 8;
	shr.u16 	%rs513, %rs511, 8;
	mov.b32 	{%rs514, %rs515}, %r4674;
	shr.u16 	%rs516, %rs514, 8;
	shr.u16 	%rs517, %rs515, 8;
	mov.b32 	{%rs518, %rs519}, %r4675;
	shr.u16 	%rs520, %rs518, 8;
	shr.u16 	%rs521, %rs519, 8;
	mov.b32 	{%rs522, %rs523}, %r4676;
	shr.u16 	%rs524, %rs522, 8;
	shr.u16 	%rs525, %rs523, 8;
	ld.local.v4.u32 	{%r4681, %r4682, %r4683, %r4684}, [%rd3+32];
	mov.b32 	{%rs526, %rs527}, %r4681;
	shr.u16 	%rs528, %rs526, 8;
	shr.u16 	%rs529, %rs527, 8;
	mov.b32 	{%rs530, %rs531}, %r4682;
	shr.u16 	%rs532, %rs530, 8;
	shr.u16 	%rs533, %rs531, 8;
	mov.b32 	{%rs534, %rs535}, %r4683;
	shr.u16 	%rs536, %rs534, 8;
	shr.u16 	%rs537, %rs535, 8;
	mov.b32 	{%rs538, %rs539}, %r4684;
	shr.u16 	%rs540, %rs538, 8;
	shr.u16 	%rs541, %rs539, 8;
	ld.local.v4.u32 	{%r4689, %r4690, %r4691, %r4692}, [%rd3+48];
	mov.b32 	{%rs542, %rs543}, %r4689;
	shr.u16 	%rs544, %rs542, 8;
	shr.u16 	%rs545, %rs543, 8;
	mov.b32 	{%rs546, %rs547}, %r4690;
	shr.u16 	%rs548, %rs546, 8;
	shr.u16 	%rs549, %rs547, 8;
	mov.b32 	{%rs550, %rs551}, %r4691;
	shr.u16 	%rs552, %rs550, 8;
	shr.u16 	%rs553, %rs551, 8;
	mov.b32 	{%rs554, %rs555}, %r4692;
	shr.u16 	%rs556, %rs554, 8;
	shr.u16 	%rs557, %rs555, 8;
	ld.local.v4.u32 	{%r4697, %r4698, %r4699, %r4700}, [%rd3+64];
	mov.b32 	{%rs558, %rs559}, %r4697;
	shr.u16 	%rs560, %rs558, 8;
	shr.u16 	%rs561, %rs559, 8;
	mov.b32 	{%rs562, %rs563}, %r4698;
	shr.u16 	%rs564, %rs562, 8;
	shr.u16 	%rs565, %rs563, 8;
	mov.b32 	{%rs566, %rs567}, %r4699;
	shr.u16 	%rs568, %rs566, 8;
	shr.u16 	%rs569, %rs567, 8;
	mov.b32 	{%rs570, %rs571}, %r4700;
	shr.u16 	%rs572, %rs570, 8;
	shr.u16 	%rs573, %rs571, 8;
	ld.local.v4.u32 	{%r4705, %r4706, %r4707, %r4708}, [%rd3+80];
	mov.b32 	{%rs574, %rs575}, %r4705;
	shr.u16 	%rs576, %rs574, 8;
	shr.u16 	%rs577, %rs575, 8;
	mov.b32 	{%rs578, %rs579}, %r4706;
	shr.u16 	%rs580, %rs578, 8;
	shr.u16 	%rs581, %rs579, 8;
	mov.b32 	{%rs582, %rs583}, %r4707;
	shr.u16 	%rs584, %rs582, 8;
	shr.u16 	%rs585, %rs583, 8;
	mov.b32 	{%rs586, %rs587}, %r4708;
	shr.u16 	%rs588, %rs586, 8;
	shr.u16 	%rs589, %rs587, 8;
	ld.local.v4.u32 	{%r4713, %r4714, %r4715, %r4716}, [%rd3+96];
	mov.b32 	{%rs590, %rs591}, %r4713;
	shr.u16 	%rs592, %rs590, 8;
	shr.u16 	%rs593, %rs591, 8;
	mov.b32 	{%rs594, %rs595}, %r4714;
	shr.u16 	%rs596, %rs594, 8;
	shr.u16 	%rs597, %rs595, 8;
	mov.b32 	{%rs598, %rs599}, %r4715;
	shr.u16 	%rs600, %rs598, 8;
	shr.u16 	%rs601, %rs599, 8;
	mov.b32 	{%rs602, %rs603}, %r4716;
	shr.u16 	%rs604, %rs602, 8;
	shr.u16 	%rs605, %rs603, 8;
	ld.local.v4.u32 	{%r4721, %r4722, %r4723, %r4724}, [%rd3+112];
	mov.b32 	{%rs606, %rs607}, %r4721;
	shr.u16 	%rs608, %rs606, 8;
	shr.u16 	%rs609, %rs607, 8;
	mov.b32 	{%rs610, %rs611}, %r4722;
	shr.u16 	%rs612, %rs610, 8;
	shr.u16 	%rs613, %rs611, 8;
	mov.b32 	{%rs614, %rs615}, %r4723;
	shr.u16 	%rs616, %rs614, 8;
	shr.u16 	%rs617, %rs615, 8;
	mov.b32 	{%rs618, %rs619}, %r4724;
	shr.u16 	%rs620, %rs618, 8;
	shr.u16 	%rs621, %rs619, 8;
	cvt.u64.u16 	%rd4112, %rs494;
	shl.b64 	%rd4113, %rd4112, 56;
	cvt.u64.u16 	%rd4114, %rs496;
	shl.b64 	%rd4115, %rd4114, 48;
	or.b64  	%rd4116, %rd4115, %rd4113;
	cvt.u64.u16 	%rd4117, %rs495;
	shl.b64 	%rd4118, %rd4117, 40;
	and.b64  	%rd4119, %rd4118, 280375465082880;
	or.b64  	%rd4120, %rd4116, %rd4119;
	cvt.u64.u16 	%rd4121, %rs497;
	shl.b64 	%rd4122, %rd4121, 32;
	or.b64  	%rd4123, %rd4120, %rd4122;
	cvt.u32.u16 	%r4729, %rs498;
	and.b32  	%r4730, %r4729, 255;
	mul.wide.u32 	%rd4124, %r4730, 16777216;
	or.b64  	%rd4125, %rd4123, %rd4124;
	cvt.u32.u16 	%r4731, %rs500;
	mul.wide.u32 	%rd4126, %r4731, 65536;
	or.b64  	%rd4127, %rd4125, %rd4126;
	cvt.u32.u16 	%r4732, %rs499;
	and.b32  	%r4733, %r4732, 255;
	mul.wide.u32 	%rd4128, %r4733, 256;
	or.b64  	%rd4129, %rd4127, %rd4128;
	cvt.u64.u16 	%rd4130, %rs501;
	or.b64  	%rd4131, %rd4129, %rd4130;
	cvt.u64.u16 	%rd4132, %rs502;
	shl.b64 	%rd4133, %rd4132, 56;
	cvt.u64.u16 	%rd4134, %rs504;
	shl.b64 	%rd4135, %rd4134, 48;
	or.b64  	%rd4136, %rd4135, %rd4133;
	cvt.u64.u16 	%rd4137, %rs503;
	shl.b64 	%rd4138, %rd4137, 40;
	and.b64  	%rd4139, %rd4138, 280375465082880;
	or.b64  	%rd4140, %rd4136, %rd4139;
	cvt.u64.u16 	%rd4141, %rs505;
	shl.b64 	%rd4142, %rd4141, 32;
	or.b64  	%rd4143, %rd4140, %rd4142;
	cvt.u32.u16 	%r4734, %rs506;
	and.b32  	%r4735, %r4734, 255;
	mul.wide.u32 	%rd4144, %r4735, 16777216;
	or.b64  	%rd4145, %rd4143, %rd4144;
	cvt.u32.u16 	%r4736, %rs508;
	mul.wide.u32 	%rd4146, %r4736, 65536;
	or.b64  	%rd4147, %rd4145, %rd4146;
	cvt.u32.u16 	%r4737, %rs507;
	and.b32  	%r4738, %r4737, 255;
	mul.wide.u32 	%rd4148, %r4738, 256;
	or.b64  	%rd4149, %rd4147, %rd4148;
	cvt.u64.u16 	%rd4150, %rs509;
	or.b64  	%rd4151, %rd4149, %rd4150;
	cvt.u64.u16 	%rd4152, %rs510;
	shl.b64 	%rd4153, %rd4152, 56;
	cvt.u64.u16 	%rd4154, %rs512;
	shl.b64 	%rd4155, %rd4154, 48;
	or.b64  	%rd4156, %rd4155, %rd4153;
	cvt.u64.u16 	%rd4157, %rs511;
	shl.b64 	%rd4158, %rd4157, 40;
	and.b64  	%rd4159, %rd4158, 280375465082880;
	or.b64  	%rd4160, %rd4156, %rd4159;
	cvt.u64.u16 	%rd4161, %rs513;
	shl.b64 	%rd4162, %rd4161, 32;
	or.b64  	%rd4163, %rd4160, %rd4162;
	cvt.u32.u16 	%r4739, %rs514;
	and.b32  	%r4740, %r4739, 255;
	mul.wide.u32 	%rd4164, %r4740, 16777216;
	or.b64  	%rd4165, %rd4163, %rd4164;
	cvt.u32.u16 	%r4741, %rs516;
	mul.wide.u32 	%rd4166, %r4741, 65536;
	or.b64  	%rd4167, %rd4165, %rd4166;
	cvt.u32.u16 	%r4742, %rs515;
	and.b32  	%r4743, %r4742, 255;
	mul.wide.u32 	%rd4168, %r4743, 256;
	or.b64  	%rd4169, %rd4167, %rd4168;
	cvt.u64.u16 	%rd4170, %rs517;
	or.b64  	%rd4171, %rd4169, %rd4170;
	cvt.u64.u16 	%rd4172, %rs518;
	shl.b64 	%rd4173, %rd4172, 56;
	cvt.u64.u16 	%rd4174, %rs520;
	shl.b64 	%rd4175, %rd4174, 48;
	or.b64  	%rd4176, %rd4175, %rd4173;
	cvt.u64.u16 	%rd4177, %rs519;
	shl.b64 	%rd4178, %rd4177, 40;
	and.b64  	%rd4179, %rd4178, 280375465082880;
	or.b64  	%rd4180, %rd4176, %rd4179;
	cvt.u64.u16 	%rd4181, %rs521;
	shl.b64 	%rd4182, %rd4181, 32;
	or.b64  	%rd4183, %rd4180, %rd4182;
	cvt.u32.u16 	%r4744, %rs522;
	and.b32  	%r4745, %r4744, 255;
	mul.wide.u32 	%rd4184, %r4745, 16777216;
	or.b64  	%rd4185, %rd4183, %rd4184;
	cvt.u32.u16 	%r4746, %rs524;
	mul.wide.u32 	%rd4186, %r4746, 65536;
	or.b64  	%rd4187, %rd4185, %rd4186;
	cvt.u32.u16 	%r4747, %rs523;
	and.b32  	%r4748, %r4747, 255;
	mul.wide.u32 	%rd4188, %r4748, 256;
	or.b64  	%rd4189, %rd4187, %rd4188;
	cvt.u64.u16 	%rd4190, %rs525;
	or.b64  	%rd4191, %rd4189, %rd4190;
	cvt.u64.u16 	%rd4192, %rs526;
	shl.b64 	%rd4193, %rd4192, 56;
	cvt.u64.u16 	%rd4194, %rs528;
	shl.b64 	%rd4195, %rd4194, 48;
	or.b64  	%rd4196, %rd4195, %rd4193;
	cvt.u64.u16 	%rd4197, %rs527;
	shl.b64 	%rd4198, %rd4197, 40;
	and.b64  	%rd4199, %rd4198, 280375465082880;
	or.b64  	%rd4200, %rd4196, %rd4199;
	cvt.u64.u16 	%rd4201, %rs529;
	shl.b64 	%rd4202, %rd4201, 32;
	or.b64  	%rd4203, %rd4200, %rd4202;
	cvt.u32.u16 	%r4749, %rs530;
	and.b32  	%r4750, %r4749, 255;
	mul.wide.u32 	%rd4204, %r4750, 16777216;
	or.b64  	%rd4205, %rd4203, %rd4204;
	cvt.u32.u16 	%r4751, %rs532;
	mul.wide.u32 	%rd4206, %r4751, 65536;
	or.b64  	%rd4207, %rd4205, %rd4206;
	cvt.u32.u16 	%r4752, %rs531;
	and.b32  	%r4753, %r4752, 255;
	mul.wide.u32 	%rd4208, %r4753, 256;
	or.b64  	%rd4209, %rd4207, %rd4208;
	cvt.u64.u16 	%rd4210, %rs533;
	or.b64  	%rd4211, %rd4209, %rd4210;
	cvt.u64.u16 	%rd4212, %rs534;
	shl.b64 	%rd4213, %rd4212, 56;
	cvt.u64.u16 	%rd4214, %rs536;
	shl.b64 	%rd4215, %rd4214, 48;
	or.b64  	%rd4216, %rd4215, %rd4213;
	cvt.u64.u16 	%rd4217, %rs535;
	shl.b64 	%rd4218, %rd4217, 40;
	and.b64  	%rd4219, %rd4218, 280375465082880;
	or.b64  	%rd4220, %rd4216, %rd4219;
	cvt.u64.u16 	%rd4221, %rs537;
	shl.b64 	%rd4222, %rd4221, 32;
	or.b64  	%rd4223, %rd4220, %rd4222;
	cvt.u32.u16 	%r4754, %rs538;
	and.b32  	%r4755, %r4754, 255;
	mul.wide.u32 	%rd4224, %r4755, 16777216;
	or.b64  	%rd4225, %rd4223, %rd4224;
	cvt.u32.u16 	%r4756, %rs540;
	mul.wide.u32 	%rd4226, %r4756, 65536;
	or.b64  	%rd4227, %rd4225, %rd4226;
	cvt.u32.u16 	%r4757, %rs539;
	and.b32  	%r4758, %r4757, 255;
	mul.wide.u32 	%rd4228, %r4758, 256;
	or.b64  	%rd4229, %rd4227, %rd4228;
	cvt.u64.u16 	%rd4230, %rs541;
	or.b64  	%rd4231, %rd4229, %rd4230;
	cvt.u64.u16 	%rd4232, %rs542;
	shl.b64 	%rd4233, %rd4232, 56;
	cvt.u64.u16 	%rd4234, %rs544;
	shl.b64 	%rd4235, %rd4234, 48;
	or.b64  	%rd4236, %rd4235, %rd4233;
	cvt.u64.u16 	%rd4237, %rs543;
	shl.b64 	%rd4238, %rd4237, 40;
	and.b64  	%rd4239, %rd4238, 280375465082880;
	or.b64  	%rd4240, %rd4236, %rd4239;
	cvt.u64.u16 	%rd4241, %rs545;
	shl.b64 	%rd4242, %rd4241, 32;
	or.b64  	%rd4243, %rd4240, %rd4242;
	cvt.u32.u16 	%r4759, %rs546;
	and.b32  	%r4760, %r4759, 255;
	mul.wide.u32 	%rd4244, %r4760, 16777216;
	or.b64  	%rd4245, %rd4243, %rd4244;
	cvt.u32.u16 	%r4761, %rs548;
	mul.wide.u32 	%rd4246, %r4761, 65536;
	or.b64  	%rd4247, %rd4245, %rd4246;
	cvt.u32.u16 	%r4762, %rs547;
	and.b32  	%r4763, %r4762, 255;
	mul.wide.u32 	%rd4248, %r4763, 256;
	or.b64  	%rd4249, %rd4247, %rd4248;
	cvt.u64.u16 	%rd4250, %rs549;
	or.b64  	%rd4251, %rd4249, %rd4250;
	cvt.u64.u16 	%rd4252, %rs550;
	shl.b64 	%rd4253, %rd4252, 56;
	cvt.u64.u16 	%rd4254, %rs552;
	shl.b64 	%rd4255, %rd4254, 48;
	or.b64  	%rd4256, %rd4255, %rd4253;
	cvt.u64.u16 	%rd4257, %rs551;
	shl.b64 	%rd4258, %rd4257, 40;
	and.b64  	%rd4259, %rd4258, 280375465082880;
	or.b64  	%rd4260, %rd4256, %rd4259;
	cvt.u64.u16 	%rd4261, %rs553;
	shl.b64 	%rd4262, %rd4261, 32;
	or.b64  	%rd4263, %rd4260, %rd4262;
	cvt.u32.u16 	%r4764, %rs554;
	and.b32  	%r4765, %r4764, 255;
	mul.wide.u32 	%rd4264, %r4765, 16777216;
	or.b64  	%rd4265, %rd4263, %rd4264;
	cvt.u32.u16 	%r4766, %rs556;
	mul.wide.u32 	%rd4266, %r4766, 65536;
	or.b64  	%rd4267, %rd4265, %rd4266;
	cvt.u32.u16 	%r4767, %rs555;
	and.b32  	%r4768, %r4767, 255;
	mul.wide.u32 	%rd4268, %r4768, 256;
	or.b64  	%rd4269, %rd4267, %rd4268;
	cvt.u64.u16 	%rd4270, %rs557;
	or.b64  	%rd4271, %rd4269, %rd4270;
	cvt.u64.u16 	%rd4272, %rs558;
	shl.b64 	%rd4273, %rd4272, 56;
	cvt.u64.u16 	%rd4274, %rs560;
	shl.b64 	%rd4275, %rd4274, 48;
	or.b64  	%rd4276, %rd4275, %rd4273;
	cvt.u64.u16 	%rd4277, %rs559;
	shl.b64 	%rd4278, %rd4277, 40;
	and.b64  	%rd4279, %rd4278, 280375465082880;
	or.b64  	%rd4280, %rd4276, %rd4279;
	cvt.u64.u16 	%rd4281, %rs561;
	shl.b64 	%rd4282, %rd4281, 32;
	or.b64  	%rd4283, %rd4280, %rd4282;
	cvt.u32.u16 	%r4769, %rs562;
	and.b32  	%r4770, %r4769, 255;
	mul.wide.u32 	%rd4284, %r4770, 16777216;
	or.b64  	%rd4285, %rd4283, %rd4284;
	cvt.u32.u16 	%r4771, %rs564;
	mul.wide.u32 	%rd4286, %r4771, 65536;
	or.b64  	%rd4287, %rd4285, %rd4286;
	cvt.u32.u16 	%r4772, %rs563;
	and.b32  	%r4773, %r4772, 255;
	mul.wide.u32 	%rd4288, %r4773, 256;
	or.b64  	%rd4289, %rd4287, %rd4288;
	cvt.u64.u16 	%rd4290, %rs565;
	or.b64  	%rd4291, %rd4289, %rd4290;
	cvt.u64.u16 	%rd4292, %rs566;
	shl.b64 	%rd4293, %rd4292, 56;
	cvt.u64.u16 	%rd4294, %rs568;
	shl.b64 	%rd4295, %rd4294, 48;
	or.b64  	%rd4296, %rd4295, %rd4293;
	cvt.u64.u16 	%rd4297, %rs567;
	shl.b64 	%rd4298, %rd4297, 40;
	and.b64  	%rd4299, %rd4298, 280375465082880;
	or.b64  	%rd4300, %rd4296, %rd4299;
	cvt.u64.u16 	%rd4301, %rs569;
	shl.b64 	%rd4302, %rd4301, 32;
	or.b64  	%rd4303, %rd4300, %rd4302;
	cvt.u32.u16 	%r4774, %rs570;
	and.b32  	%r4775, %r4774, 255;
	mul.wide.u32 	%rd4304, %r4775, 16777216;
	or.b64  	%rd4305, %rd4303, %rd4304;
	cvt.u32.u16 	%r4776, %rs572;
	mul.wide.u32 	%rd4306, %r4776, 65536;
	or.b64  	%rd4307, %rd4305, %rd4306;
	cvt.u32.u16 	%r4777, %rs571;
	and.b32  	%r4778, %r4777, 255;
	mul.wide.u32 	%rd4308, %r4778, 256;
	or.b64  	%rd4309, %rd4307, %rd4308;
	cvt.u64.u16 	%rd4310, %rs573;
	or.b64  	%rd4311, %rd4309, %rd4310;
	cvt.u64.u16 	%rd4312, %rs574;
	shl.b64 	%rd4313, %rd4312, 56;
	cvt.u64.u16 	%rd4314, %rs576;
	shl.b64 	%rd4315, %rd4314, 48;
	or.b64  	%rd4316, %rd4315, %rd4313;
	cvt.u64.u16 	%rd4317, %rs575;
	shl.b64 	%rd4318, %rd4317, 40;
	and.b64  	%rd4319, %rd4318, 280375465082880;
	or.b64  	%rd4320, %rd4316, %rd4319;
	cvt.u64.u16 	%rd4321, %rs577;
	shl.b64 	%rd4322, %rd4321, 32;
	or.b64  	%rd4323, %rd4320, %rd4322;
	cvt.u32.u16 	%r4779, %rs578;
	and.b32  	%r4780, %r4779, 255;
	mul.wide.u32 	%rd4324, %r4780, 16777216;
	or.b64  	%rd4325, %rd4323, %rd4324;
	cvt.u32.u16 	%r4781, %rs580;
	mul.wide.u32 	%rd4326, %r4781, 65536;
	or.b64  	%rd4327, %rd4325, %rd4326;
	cvt.u32.u16 	%r4782, %rs579;
	and.b32  	%r4783, %r4782, 255;
	mul.wide.u32 	%rd4328, %r4783, 256;
	or.b64  	%rd4329, %rd4327, %rd4328;
	cvt.u64.u16 	%rd4330, %rs581;
	or.b64  	%rd4331, %rd4329, %rd4330;
	cvt.u64.u16 	%rd4332, %rs582;
	shl.b64 	%rd4333, %rd4332, 56;
	cvt.u64.u16 	%rd4334, %rs584;
	shl.b64 	%rd4335, %rd4334, 48;
	or.b64  	%rd4336, %rd4335, %rd4333;
	cvt.u64.u16 	%rd4337, %rs583;
	shl.b64 	%rd4338, %rd4337, 40;
	and.b64  	%rd4339, %rd4338, 280375465082880;
	or.b64  	%rd4340, %rd4336, %rd4339;
	cvt.u64.u16 	%rd4341, %rs585;
	shl.b64 	%rd4342, %rd4341, 32;
	or.b64  	%rd4343, %rd4340, %rd4342;
	cvt.u32.u16 	%r4784, %rs586;
	and.b32  	%r4785, %r4784, 255;
	mul.wide.u32 	%rd4344, %r4785, 16777216;
	or.b64  	%rd4345, %rd4343, %rd4344;
	cvt.u32.u16 	%r4786, %rs588;
	mul.wide.u32 	%rd4346, %r4786, 65536;
	or.b64  	%rd4347, %rd4345, %rd4346;
	cvt.u32.u16 	%r4787, %rs587;
	and.b32  	%r4788, %r4787, 255;
	mul.wide.u32 	%rd4348, %r4788, 256;
	or.b64  	%rd4349, %rd4347, %rd4348;
	cvt.u64.u16 	%rd4350, %rs589;
	or.b64  	%rd4351, %rd4349, %rd4350;
	cvt.u64.u16 	%rd4352, %rs590;
	shl.b64 	%rd4353, %rd4352, 56;
	cvt.u64.u16 	%rd4354, %rs592;
	shl.b64 	%rd4355, %rd4354, 48;
	or.b64  	%rd4356, %rd4355, %rd4353;
	cvt.u64.u16 	%rd4357, %rs591;
	shl.b64 	%rd4358, %rd4357, 40;
	and.b64  	%rd4359, %rd4358, 280375465082880;
	or.b64  	%rd4360, %rd4356, %rd4359;
	cvt.u64.u16 	%rd4361, %rs593;
	shl.b64 	%rd4362, %rd4361, 32;
	or.b64  	%rd4363, %rd4360, %rd4362;
	cvt.u32.u16 	%r4789, %rs594;
	and.b32  	%r4790, %r4789, 255;
	mul.wide.u32 	%rd4364, %r4790, 16777216;
	or.b64  	%rd4365, %rd4363, %rd4364;
	cvt.u32.u16 	%r4791, %rs596;
	mul.wide.u32 	%rd4366, %r4791, 65536;
	or.b64  	%rd4367, %rd4365, %rd4366;
	cvt.u32.u16 	%r4792, %rs595;
	and.b32  	%r4793, %r4792, 255;
	mul.wide.u32 	%rd4368, %r4793, 256;
	or.b64  	%rd4369, %rd4367, %rd4368;
	cvt.u64.u16 	%rd4370, %rs597;
	or.b64  	%rd4371, %rd4369, %rd4370;
	cvt.u64.u16 	%rd4372, %rs598;
	shl.b64 	%rd4373, %rd4372, 56;
	cvt.u64.u16 	%rd4374, %rs600;
	shl.b64 	%rd4375, %rd4374, 48;
	or.b64  	%rd4376, %rd4375, %rd4373;
	cvt.u64.u16 	%rd4377, %rs599;
	shl.b64 	%rd4378, %rd4377, 40;
	and.b64  	%rd4379, %rd4378, 280375465082880;
	or.b64  	%rd4380, %rd4376, %rd4379;
	cvt.u64.u16 	%rd4381, %rs601;
	shl.b64 	%rd4382, %rd4381, 32;
	or.b64  	%rd4383, %rd4380, %rd4382;
	cvt.u32.u16 	%r4794, %rs602;
	and.b32  	%r4795, %r4794, 255;
	mul.wide.u32 	%rd4384, %r4795, 16777216;
	or.b64  	%rd4385, %rd4383, %rd4384;
	cvt.u32.u16 	%r4796, %rs604;
	mul.wide.u32 	%rd4386, %r4796, 65536;
	or.b64  	%rd4387, %rd4385, %rd4386;
	cvt.u32.u16 	%r4797, %rs603;
	and.b32  	%r4798, %r4797, 255;
	mul.wide.u32 	%rd4388, %r4798, 256;
	or.b64  	%rd4389, %rd4387, %rd4388;
	cvt.u64.u16 	%rd4390, %rs605;
	or.b64  	%rd4391, %rd4389, %rd4390;
	cvt.u64.u16 	%rd4392, %rs606;
	shl.b64 	%rd4393, %rd4392, 56;
	cvt.u64.u16 	%rd4394, %rs608;
	shl.b64 	%rd4395, %rd4394, 48;
	or.b64  	%rd4396, %rd4395, %rd4393;
	cvt.u64.u16 	%rd4397, %rs607;
	shl.b64 	%rd4398, %rd4397, 40;
	and.b64  	%rd4399, %rd4398, 280375465082880;
	or.b64  	%rd4400, %rd4396, %rd4399;
	cvt.u64.u16 	%rd4401, %rs609;
	shl.b64 	%rd4402, %rd4401, 32;
	or.b64  	%rd4403, %rd4400, %rd4402;
	cvt.u32.u16 	%r4799, %rs610;
	and.b32  	%r4800, %r4799, 255;
	mul.wide.u32 	%rd4404, %r4800, 16777216;
	or.b64  	%rd4405, %rd4403, %rd4404;
	cvt.u32.u16 	%r4801, %rs612;
	mul.wide.u32 	%rd4406, %r4801, 65536;
	or.b64  	%rd4407, %rd4405, %rd4406;
	cvt.u32.u16 	%r4802, %rs611;
	and.b32  	%r4803, %r4802, 255;
	mul.wide.u32 	%rd4408, %r4803, 256;
	or.b64  	%rd4409, %rd4407, %rd4408;
	cvt.u64.u16 	%rd4410, %rs613;
	or.b64  	%rd4411, %rd4409, %rd4410;
	cvt.u64.u16 	%rd4412, %rs614;
	shl.b64 	%rd4413, %rd4412, 56;
	cvt.u64.u16 	%rd4414, %rs616;
	shl.b64 	%rd4415, %rd4414, 48;
	or.b64  	%rd4416, %rd4415, %rd4413;
	cvt.u64.u16 	%rd4417, %rs615;
	shl.b64 	%rd4418, %rd4417, 40;
	and.b64  	%rd4419, %rd4418, 280375465082880;
	or.b64  	%rd4420, %rd4416, %rd4419;
	cvt.u64.u16 	%rd4421, %rs617;
	shl.b64 	%rd4422, %rd4421, 32;
	or.b64  	%rd4423, %rd4420, %rd4422;
	cvt.u32.u16 	%r4804, %rs618;
	and.b32  	%r4805, %r4804, 255;
	mul.wide.u32 	%rd4424, %r4805, 16777216;
	or.b64  	%rd4425, %rd4423, %rd4424;
	cvt.u32.u16 	%r4806, %rs620;
	mul.wide.u32 	%rd4426, %r4806, 65536;
	or.b64  	%rd4427, %rd4425, %rd4426;
	cvt.u32.u16 	%r4807, %rs619;
	and.b32  	%r4808, %r4807, 255;
	mul.wide.u32 	%rd4428, %r4808, 256;
	or.b64  	%rd4429, %rd4427, %rd4428;
	cvt.u64.u16 	%rd4430, %rs621;
	or.b64  	%rd4431, %rd4429, %rd4430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4809,%dummy}, %rd4151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4810}, %rd4151;
	}
	shf.r.wrap.b32 	%r4811, %r4810, %r4809, 1;
	shf.r.wrap.b32 	%r4812, %r4809, %r4810, 1;
	mov.b64 	%rd4432, {%r4812, %r4811};
	shf.r.wrap.b32 	%r4813, %r4810, %r4809, 8;
	shf.r.wrap.b32 	%r4814, %r4809, %r4810, 8;
	mov.b64 	%rd4433, {%r4814, %r4813};
	xor.b64  	%rd4434, %rd4432, %rd4433;
	shr.u64 	%rd4435, %rd4151, 7;
	xor.b64  	%rd4436, %rd4434, %rd4435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4815,%dummy}, %rd4411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4816}, %rd4411;
	}
	shf.r.wrap.b32 	%r4817, %r4816, %r4815, 19;
	shf.r.wrap.b32 	%r4818, %r4815, %r4816, 19;
	mov.b64 	%rd4437, {%r4818, %r4817};
	shf.l.wrap.b32 	%r4819, %r4815, %r4816, 3;
	shf.l.wrap.b32 	%r4820, %r4816, %r4815, 3;
	mov.b64 	%rd4438, {%r4820, %r4819};
	xor.b64  	%rd4439, %rd4437, %rd4438;
	shr.u64 	%rd4440, %rd4411, 6;
	xor.b64  	%rd4441, %rd4439, %rd4440;
	add.s64 	%rd4442, %rd4436, %rd4131;
	add.s64 	%rd4443, %rd4442, %rd4311;
	add.s64 	%rd4444, %rd4443, %rd4441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4821,%dummy}, %rd4171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4822}, %rd4171;
	}
	shf.r.wrap.b32 	%r4823, %r4822, %r4821, 1;
	shf.r.wrap.b32 	%r4824, %r4821, %r4822, 1;
	mov.b64 	%rd4445, {%r4824, %r4823};
	shf.r.wrap.b32 	%r4825, %r4822, %r4821, 8;
	shf.r.wrap.b32 	%r4826, %r4821, %r4822, 8;
	mov.b64 	%rd4446, {%r4826, %r4825};
	xor.b64  	%rd4447, %rd4445, %rd4446;
	shr.u64 	%rd4448, %rd4171, 7;
	xor.b64  	%rd4449, %rd4447, %rd4448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4827,%dummy}, %rd4431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4828}, %rd4431;
	}
	shf.r.wrap.b32 	%r4829, %r4828, %r4827, 19;
	shf.r.wrap.b32 	%r4830, %r4827, %r4828, 19;
	mov.b64 	%rd4450, {%r4830, %r4829};
	shf.l.wrap.b32 	%r4831, %r4827, %r4828, 3;
	shf.l.wrap.b32 	%r4832, %r4828, %r4827, 3;
	mov.b64 	%rd4451, {%r4832, %r4831};
	xor.b64  	%rd4452, %rd4450, %rd4451;
	shr.u64 	%rd4453, %rd4431, 6;
	xor.b64  	%rd4454, %rd4452, %rd4453;
	add.s64 	%rd4455, %rd4449, %rd4151;
	add.s64 	%rd4456, %rd4455, %rd4331;
	add.s64 	%rd4457, %rd4456, %rd4454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4833,%dummy}, %rd4191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4834}, %rd4191;
	}
	shf.r.wrap.b32 	%r4835, %r4834, %r4833, 1;
	shf.r.wrap.b32 	%r4836, %r4833, %r4834, 1;
	mov.b64 	%rd4458, {%r4836, %r4835};
	shf.r.wrap.b32 	%r4837, %r4834, %r4833, 8;
	shf.r.wrap.b32 	%r4838, %r4833, %r4834, 8;
	mov.b64 	%rd4459, {%r4838, %r4837};
	xor.b64  	%rd4460, %rd4458, %rd4459;
	shr.u64 	%rd4461, %rd4191, 7;
	xor.b64  	%rd4462, %rd4460, %rd4461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4839,%dummy}, %rd4444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4840}, %rd4444;
	}
	shf.r.wrap.b32 	%r4841, %r4840, %r4839, 19;
	shf.r.wrap.b32 	%r4842, %r4839, %r4840, 19;
	mov.b64 	%rd4463, {%r4842, %r4841};
	shf.l.wrap.b32 	%r4843, %r4839, %r4840, 3;
	shf.l.wrap.b32 	%r4844, %r4840, %r4839, 3;
	mov.b64 	%rd4464, {%r4844, %r4843};
	xor.b64  	%rd4465, %rd4463, %rd4464;
	shr.u64 	%rd4466, %rd4444, 6;
	xor.b64  	%rd4467, %rd4465, %rd4466;
	add.s64 	%rd4468, %rd4462, %rd4171;
	add.s64 	%rd4469, %rd4468, %rd4351;
	add.s64 	%rd4470, %rd4469, %rd4467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4845,%dummy}, %rd4211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4846}, %rd4211;
	}
	shf.r.wrap.b32 	%r4847, %r4846, %r4845, 1;
	shf.r.wrap.b32 	%r4848, %r4845, %r4846, 1;
	mov.b64 	%rd4471, {%r4848, %r4847};
	shf.r.wrap.b32 	%r4849, %r4846, %r4845, 8;
	shf.r.wrap.b32 	%r4850, %r4845, %r4846, 8;
	mov.b64 	%rd4472, {%r4850, %r4849};
	xor.b64  	%rd4473, %rd4471, %rd4472;
	shr.u64 	%rd4474, %rd4211, 7;
	xor.b64  	%rd4475, %rd4473, %rd4474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4851,%dummy}, %rd4457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4852}, %rd4457;
	}
	shf.r.wrap.b32 	%r4853, %r4852, %r4851, 19;
	shf.r.wrap.b32 	%r4854, %r4851, %r4852, 19;
	mov.b64 	%rd4476, {%r4854, %r4853};
	shf.l.wrap.b32 	%r4855, %r4851, %r4852, 3;
	shf.l.wrap.b32 	%r4856, %r4852, %r4851, 3;
	mov.b64 	%rd4477, {%r4856, %r4855};
	xor.b64  	%rd4478, %rd4476, %rd4477;
	shr.u64 	%rd4479, %rd4457, 6;
	xor.b64  	%rd4480, %rd4478, %rd4479;
	add.s64 	%rd4481, %rd4475, %rd4191;
	add.s64 	%rd4482, %rd4481, %rd4371;
	add.s64 	%rd4483, %rd4482, %rd4480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4857,%dummy}, %rd4231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4858}, %rd4231;
	}
	shf.r.wrap.b32 	%r4859, %r4858, %r4857, 1;
	shf.r.wrap.b32 	%r4860, %r4857, %r4858, 1;
	mov.b64 	%rd4484, {%r4860, %r4859};
	shf.r.wrap.b32 	%r4861, %r4858, %r4857, 8;
	shf.r.wrap.b32 	%r4862, %r4857, %r4858, 8;
	mov.b64 	%rd4485, {%r4862, %r4861};
	xor.b64  	%rd4486, %rd4484, %rd4485;
	shr.u64 	%rd4487, %rd4231, 7;
	xor.b64  	%rd4488, %rd4486, %rd4487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4863,%dummy}, %rd4470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4864}, %rd4470;
	}
	shf.r.wrap.b32 	%r4865, %r4864, %r4863, 19;
	shf.r.wrap.b32 	%r4866, %r4863, %r4864, 19;
	mov.b64 	%rd4489, {%r4866, %r4865};
	shf.l.wrap.b32 	%r4867, %r4863, %r4864, 3;
	shf.l.wrap.b32 	%r4868, %r4864, %r4863, 3;
	mov.b64 	%rd4490, {%r4868, %r4867};
	xor.b64  	%rd4491, %rd4489, %rd4490;
	shr.u64 	%rd4492, %rd4470, 6;
	xor.b64  	%rd4493, %rd4491, %rd4492;
	add.s64 	%rd4494, %rd4488, %rd4211;
	add.s64 	%rd4495, %rd4494, %rd4391;
	add.s64 	%rd4496, %rd4495, %rd4493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4869,%dummy}, %rd4251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4870}, %rd4251;
	}
	shf.r.wrap.b32 	%r4871, %r4870, %r4869, 1;
	shf.r.wrap.b32 	%r4872, %r4869, %r4870, 1;
	mov.b64 	%rd4497, {%r4872, %r4871};
	shf.r.wrap.b32 	%r4873, %r4870, %r4869, 8;
	shf.r.wrap.b32 	%r4874, %r4869, %r4870, 8;
	mov.b64 	%rd4498, {%r4874, %r4873};
	xor.b64  	%rd4499, %rd4497, %rd4498;
	shr.u64 	%rd4500, %rd4251, 7;
	xor.b64  	%rd4501, %rd4499, %rd4500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4875,%dummy}, %rd4483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4876}, %rd4483;
	}
	shf.r.wrap.b32 	%r4877, %r4876, %r4875, 19;
	shf.r.wrap.b32 	%r4878, %r4875, %r4876, 19;
	mov.b64 	%rd4502, {%r4878, %r4877};
	shf.l.wrap.b32 	%r4879, %r4875, %r4876, 3;
	shf.l.wrap.b32 	%r4880, %r4876, %r4875, 3;
	mov.b64 	%rd4503, {%r4880, %r4879};
	xor.b64  	%rd4504, %rd4502, %rd4503;
	shr.u64 	%rd4505, %rd4483, 6;
	xor.b64  	%rd4506, %rd4504, %rd4505;
	add.s64 	%rd4507, %rd4501, %rd4231;
	add.s64 	%rd4508, %rd4507, %rd4411;
	add.s64 	%rd4509, %rd4508, %rd4506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4881,%dummy}, %rd4271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4882}, %rd4271;
	}
	shf.r.wrap.b32 	%r4883, %r4882, %r4881, 1;
	shf.r.wrap.b32 	%r4884, %r4881, %r4882, 1;
	mov.b64 	%rd4510, {%r4884, %r4883};
	shf.r.wrap.b32 	%r4885, %r4882, %r4881, 8;
	shf.r.wrap.b32 	%r4886, %r4881, %r4882, 8;
	mov.b64 	%rd4511, {%r4886, %r4885};
	xor.b64  	%rd4512, %rd4510, %rd4511;
	shr.u64 	%rd4513, %rd4271, 7;
	xor.b64  	%rd4514, %rd4512, %rd4513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4887,%dummy}, %rd4496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4888}, %rd4496;
	}
	shf.r.wrap.b32 	%r4889, %r4888, %r4887, 19;
	shf.r.wrap.b32 	%r4890, %r4887, %r4888, 19;
	mov.b64 	%rd4515, {%r4890, %r4889};
	shf.l.wrap.b32 	%r4891, %r4887, %r4888, 3;
	shf.l.wrap.b32 	%r4892, %r4888, %r4887, 3;
	mov.b64 	%rd4516, {%r4892, %r4891};
	xor.b64  	%rd4517, %rd4515, %rd4516;
	shr.u64 	%rd4518, %rd4496, 6;
	xor.b64  	%rd4519, %rd4517, %rd4518;
	add.s64 	%rd4520, %rd4514, %rd4251;
	add.s64 	%rd4521, %rd4520, %rd4431;
	add.s64 	%rd4522, %rd4521, %rd4519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4893,%dummy}, %rd4291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4894}, %rd4291;
	}
	shf.r.wrap.b32 	%r4895, %r4894, %r4893, 1;
	shf.r.wrap.b32 	%r4896, %r4893, %r4894, 1;
	mov.b64 	%rd4523, {%r4896, %r4895};
	shf.r.wrap.b32 	%r4897, %r4894, %r4893, 8;
	shf.r.wrap.b32 	%r4898, %r4893, %r4894, 8;
	mov.b64 	%rd4524, {%r4898, %r4897};
	xor.b64  	%rd4525, %rd4523, %rd4524;
	shr.u64 	%rd4526, %rd4291, 7;
	xor.b64  	%rd4527, %rd4525, %rd4526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4899,%dummy}, %rd4509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4900}, %rd4509;
	}
	shf.r.wrap.b32 	%r4901, %r4900, %r4899, 19;
	shf.r.wrap.b32 	%r4902, %r4899, %r4900, 19;
	mov.b64 	%rd4528, {%r4902, %r4901};
	shf.l.wrap.b32 	%r4903, %r4899, %r4900, 3;
	shf.l.wrap.b32 	%r4904, %r4900, %r4899, 3;
	mov.b64 	%rd4529, {%r4904, %r4903};
	xor.b64  	%rd4530, %rd4528, %rd4529;
	shr.u64 	%rd4531, %rd4509, 6;
	xor.b64  	%rd4532, %rd4530, %rd4531;
	add.s64 	%rd4533, %rd4527, %rd4271;
	add.s64 	%rd4534, %rd4533, %rd4444;
	add.s64 	%rd4535, %rd4534, %rd4532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4905,%dummy}, %rd4311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4906}, %rd4311;
	}
	shf.r.wrap.b32 	%r4907, %r4906, %r4905, 1;
	shf.r.wrap.b32 	%r4908, %r4905, %r4906, 1;
	mov.b64 	%rd4536, {%r4908, %r4907};
	shf.r.wrap.b32 	%r4909, %r4906, %r4905, 8;
	shf.r.wrap.b32 	%r4910, %r4905, %r4906, 8;
	mov.b64 	%rd4537, {%r4910, %r4909};
	xor.b64  	%rd4538, %rd4536, %rd4537;
	shr.u64 	%rd4539, %rd4311, 7;
	xor.b64  	%rd4540, %rd4538, %rd4539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4911,%dummy}, %rd4522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4912}, %rd4522;
	}
	shf.r.wrap.b32 	%r4913, %r4912, %r4911, 19;
	shf.r.wrap.b32 	%r4914, %r4911, %r4912, 19;
	mov.b64 	%rd4541, {%r4914, %r4913};
	shf.l.wrap.b32 	%r4915, %r4911, %r4912, 3;
	shf.l.wrap.b32 	%r4916, %r4912, %r4911, 3;
	mov.b64 	%rd4542, {%r4916, %r4915};
	xor.b64  	%rd4543, %rd4541, %rd4542;
	shr.u64 	%rd4544, %rd4522, 6;
	xor.b64  	%rd4545, %rd4543, %rd4544;
	add.s64 	%rd4546, %rd4540, %rd4291;
	add.s64 	%rd4547, %rd4546, %rd4457;
	add.s64 	%rd4548, %rd4547, %rd4545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4917,%dummy}, %rd4331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4918}, %rd4331;
	}
	shf.r.wrap.b32 	%r4919, %r4918, %r4917, 1;
	shf.r.wrap.b32 	%r4920, %r4917, %r4918, 1;
	mov.b64 	%rd4549, {%r4920, %r4919};
	shf.r.wrap.b32 	%r4921, %r4918, %r4917, 8;
	shf.r.wrap.b32 	%r4922, %r4917, %r4918, 8;
	mov.b64 	%rd4550, {%r4922, %r4921};
	xor.b64  	%rd4551, %rd4549, %rd4550;
	shr.u64 	%rd4552, %rd4331, 7;
	xor.b64  	%rd4553, %rd4551, %rd4552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4923,%dummy}, %rd4535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4924}, %rd4535;
	}
	shf.r.wrap.b32 	%r4925, %r4924, %r4923, 19;
	shf.r.wrap.b32 	%r4926, %r4923, %r4924, 19;
	mov.b64 	%rd4554, {%r4926, %r4925};
	shf.l.wrap.b32 	%r4927, %r4923, %r4924, 3;
	shf.l.wrap.b32 	%r4928, %r4924, %r4923, 3;
	mov.b64 	%rd4555, {%r4928, %r4927};
	xor.b64  	%rd4556, %rd4554, %rd4555;
	shr.u64 	%rd4557, %rd4535, 6;
	xor.b64  	%rd4558, %rd4556, %rd4557;
	add.s64 	%rd4559, %rd4553, %rd4311;
	add.s64 	%rd4560, %rd4559, %rd4470;
	add.s64 	%rd4561, %rd4560, %rd4558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4929,%dummy}, %rd4351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4930}, %rd4351;
	}
	shf.r.wrap.b32 	%r4931, %r4930, %r4929, 1;
	shf.r.wrap.b32 	%r4932, %r4929, %r4930, 1;
	mov.b64 	%rd4562, {%r4932, %r4931};
	shf.r.wrap.b32 	%r4933, %r4930, %r4929, 8;
	shf.r.wrap.b32 	%r4934, %r4929, %r4930, 8;
	mov.b64 	%rd4563, {%r4934, %r4933};
	xor.b64  	%rd4564, %rd4562, %rd4563;
	shr.u64 	%rd4565, %rd4351, 7;
	xor.b64  	%rd4566, %rd4564, %rd4565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4935,%dummy}, %rd4548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4936}, %rd4548;
	}
	shf.r.wrap.b32 	%r4937, %r4936, %r4935, 19;
	shf.r.wrap.b32 	%r4938, %r4935, %r4936, 19;
	mov.b64 	%rd4567, {%r4938, %r4937};
	shf.l.wrap.b32 	%r4939, %r4935, %r4936, 3;
	shf.l.wrap.b32 	%r4940, %r4936, %r4935, 3;
	mov.b64 	%rd4568, {%r4940, %r4939};
	xor.b64  	%rd4569, %rd4567, %rd4568;
	shr.u64 	%rd4570, %rd4548, 6;
	xor.b64  	%rd4571, %rd4569, %rd4570;
	add.s64 	%rd4572, %rd4566, %rd4331;
	add.s64 	%rd4573, %rd4572, %rd4483;
	add.s64 	%rd4574, %rd4573, %rd4571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4941,%dummy}, %rd4371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4942}, %rd4371;
	}
	shf.r.wrap.b32 	%r4943, %r4942, %r4941, 1;
	shf.r.wrap.b32 	%r4944, %r4941, %r4942, 1;
	mov.b64 	%rd4575, {%r4944, %r4943};
	shf.r.wrap.b32 	%r4945, %r4942, %r4941, 8;
	shf.r.wrap.b32 	%r4946, %r4941, %r4942, 8;
	mov.b64 	%rd4576, {%r4946, %r4945};
	xor.b64  	%rd4577, %rd4575, %rd4576;
	shr.u64 	%rd4578, %rd4371, 7;
	xor.b64  	%rd4579, %rd4577, %rd4578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4947,%dummy}, %rd4561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4948}, %rd4561;
	}
	shf.r.wrap.b32 	%r4949, %r4948, %r4947, 19;
	shf.r.wrap.b32 	%r4950, %r4947, %r4948, 19;
	mov.b64 	%rd4580, {%r4950, %r4949};
	shf.l.wrap.b32 	%r4951, %r4947, %r4948, 3;
	shf.l.wrap.b32 	%r4952, %r4948, %r4947, 3;
	mov.b64 	%rd4581, {%r4952, %r4951};
	xor.b64  	%rd4582, %rd4580, %rd4581;
	shr.u64 	%rd4583, %rd4561, 6;
	xor.b64  	%rd4584, %rd4582, %rd4583;
	add.s64 	%rd4585, %rd4579, %rd4351;
	add.s64 	%rd4586, %rd4585, %rd4496;
	add.s64 	%rd4587, %rd4586, %rd4584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4953,%dummy}, %rd4391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4954}, %rd4391;
	}
	shf.r.wrap.b32 	%r4955, %r4954, %r4953, 1;
	shf.r.wrap.b32 	%r4956, %r4953, %r4954, 1;
	mov.b64 	%rd4588, {%r4956, %r4955};
	shf.r.wrap.b32 	%r4957, %r4954, %r4953, 8;
	shf.r.wrap.b32 	%r4958, %r4953, %r4954, 8;
	mov.b64 	%rd4589, {%r4958, %r4957};
	xor.b64  	%rd4590, %rd4588, %rd4589;
	shr.u64 	%rd4591, %rd4391, 7;
	xor.b64  	%rd4592, %rd4590, %rd4591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4959,%dummy}, %rd4574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4960}, %rd4574;
	}
	shf.r.wrap.b32 	%r4961, %r4960, %r4959, 19;
	shf.r.wrap.b32 	%r4962, %r4959, %r4960, 19;
	mov.b64 	%rd4593, {%r4962, %r4961};
	shf.l.wrap.b32 	%r4963, %r4959, %r4960, 3;
	shf.l.wrap.b32 	%r4964, %r4960, %r4959, 3;
	mov.b64 	%rd4594, {%r4964, %r4963};
	xor.b64  	%rd4595, %rd4593, %rd4594;
	shr.u64 	%rd4596, %rd4574, 6;
	xor.b64  	%rd4597, %rd4595, %rd4596;
	add.s64 	%rd4598, %rd4592, %rd4371;
	add.s64 	%rd4599, %rd4598, %rd4509;
	add.s64 	%rd4600, %rd4599, %rd4597;
	shf.r.wrap.b32 	%r4965, %r4816, %r4815, 1;
	shf.r.wrap.b32 	%r4966, %r4815, %r4816, 1;
	mov.b64 	%rd4601, {%r4966, %r4965};
	shf.r.wrap.b32 	%r4967, %r4816, %r4815, 8;
	shf.r.wrap.b32 	%r4968, %r4815, %r4816, 8;
	mov.b64 	%rd4602, {%r4968, %r4967};
	xor.b64  	%rd4603, %rd4601, %rd4602;
	shr.u64 	%rd4604, %rd4411, 7;
	xor.b64  	%rd4605, %rd4603, %rd4604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4969,%dummy}, %rd4587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4970}, %rd4587;
	}
	shf.r.wrap.b32 	%r4971, %r4970, %r4969, 19;
	shf.r.wrap.b32 	%r4972, %r4969, %r4970, 19;
	mov.b64 	%rd4606, {%r4972, %r4971};
	shf.l.wrap.b32 	%r4973, %r4969, %r4970, 3;
	shf.l.wrap.b32 	%r4974, %r4970, %r4969, 3;
	mov.b64 	%rd4607, {%r4974, %r4973};
	xor.b64  	%rd4608, %rd4606, %rd4607;
	shr.u64 	%rd4609, %rd4587, 6;
	xor.b64  	%rd4610, %rd4608, %rd4609;
	add.s64 	%rd4611, %rd4605, %rd4391;
	add.s64 	%rd4612, %rd4611, %rd4522;
	add.s64 	%rd4613, %rd4612, %rd4610;
	shf.r.wrap.b32 	%r4975, %r4828, %r4827, 1;
	shf.r.wrap.b32 	%r4976, %r4827, %r4828, 1;
	mov.b64 	%rd4614, {%r4976, %r4975};
	shf.r.wrap.b32 	%r4977, %r4828, %r4827, 8;
	shf.r.wrap.b32 	%r4978, %r4827, %r4828, 8;
	mov.b64 	%rd4615, {%r4978, %r4977};
	xor.b64  	%rd4616, %rd4614, %rd4615;
	shr.u64 	%rd4617, %rd4431, 7;
	xor.b64  	%rd4618, %rd4616, %rd4617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4979,%dummy}, %rd4600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4980}, %rd4600;
	}
	shf.r.wrap.b32 	%r4981, %r4980, %r4979, 19;
	shf.r.wrap.b32 	%r4982, %r4979, %r4980, 19;
	mov.b64 	%rd4619, {%r4982, %r4981};
	shf.l.wrap.b32 	%r4983, %r4979, %r4980, 3;
	shf.l.wrap.b32 	%r4984, %r4980, %r4979, 3;
	mov.b64 	%rd4620, {%r4984, %r4983};
	xor.b64  	%rd4621, %rd4619, %rd4620;
	shr.u64 	%rd4622, %rd4600, 6;
	xor.b64  	%rd4623, %rd4621, %rd4622;
	add.s64 	%rd4624, %rd4618, %rd4411;
	add.s64 	%rd4625, %rd4624, %rd4535;
	add.s64 	%rd4626, %rd4625, %rd4623;
	shf.r.wrap.b32 	%r4985, %r4840, %r4839, 1;
	shf.r.wrap.b32 	%r4986, %r4839, %r4840, 1;
	mov.b64 	%rd4627, {%r4986, %r4985};
	shf.r.wrap.b32 	%r4987, %r4840, %r4839, 8;
	shf.r.wrap.b32 	%r4988, %r4839, %r4840, 8;
	mov.b64 	%rd4628, {%r4988, %r4987};
	xor.b64  	%rd4629, %rd4627, %rd4628;
	shr.u64 	%rd4630, %rd4444, 7;
	xor.b64  	%rd4631, %rd4629, %rd4630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4989,%dummy}, %rd4613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4990}, %rd4613;
	}
	shf.r.wrap.b32 	%r4991, %r4990, %r4989, 19;
	shf.r.wrap.b32 	%r4992, %r4989, %r4990, 19;
	mov.b64 	%rd4632, {%r4992, %r4991};
	shf.l.wrap.b32 	%r4993, %r4989, %r4990, 3;
	shf.l.wrap.b32 	%r4994, %r4990, %r4989, 3;
	mov.b64 	%rd4633, {%r4994, %r4993};
	xor.b64  	%rd4634, %rd4632, %rd4633;
	shr.u64 	%rd4635, %rd4613, 6;
	xor.b64  	%rd4636, %rd4634, %rd4635;
	add.s64 	%rd4637, %rd4631, %rd4431;
	add.s64 	%rd4638, %rd4637, %rd4548;
	add.s64 	%rd4639, %rd4638, %rd4636;
	shf.r.wrap.b32 	%r4995, %r4852, %r4851, 1;
	shf.r.wrap.b32 	%r4996, %r4851, %r4852, 1;
	mov.b64 	%rd4640, {%r4996, %r4995};
	shf.r.wrap.b32 	%r4997, %r4852, %r4851, 8;
	shf.r.wrap.b32 	%r4998, %r4851, %r4852, 8;
	mov.b64 	%rd4641, {%r4998, %r4997};
	xor.b64  	%rd4642, %rd4640, %rd4641;
	shr.u64 	%rd4643, %rd4457, 7;
	xor.b64  	%rd4644, %rd4642, %rd4643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4999,%dummy}, %rd4626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5000}, %rd4626;
	}
	shf.r.wrap.b32 	%r5001, %r5000, %r4999, 19;
	shf.r.wrap.b32 	%r5002, %r4999, %r5000, 19;
	mov.b64 	%rd4645, {%r5002, %r5001};
	shf.l.wrap.b32 	%r5003, %r4999, %r5000, 3;
	shf.l.wrap.b32 	%r5004, %r5000, %r4999, 3;
	mov.b64 	%rd4646, {%r5004, %r5003};
	xor.b64  	%rd4647, %rd4645, %rd4646;
	shr.u64 	%rd4648, %rd4626, 6;
	xor.b64  	%rd4649, %rd4647, %rd4648;
	add.s64 	%rd4650, %rd4644, %rd4444;
	add.s64 	%rd4651, %rd4650, %rd4561;
	add.s64 	%rd4652, %rd4651, %rd4649;
	shf.r.wrap.b32 	%r5005, %r4864, %r4863, 1;
	shf.r.wrap.b32 	%r5006, %r4863, %r4864, 1;
	mov.b64 	%rd4653, {%r5006, %r5005};
	shf.r.wrap.b32 	%r5007, %r4864, %r4863, 8;
	shf.r.wrap.b32 	%r5008, %r4863, %r4864, 8;
	mov.b64 	%rd4654, {%r5008, %r5007};
	xor.b64  	%rd4655, %rd4653, %rd4654;
	shr.u64 	%rd4656, %rd4470, 7;
	xor.b64  	%rd4657, %rd4655, %rd4656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5009,%dummy}, %rd4639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5010}, %rd4639;
	}
	shf.r.wrap.b32 	%r5011, %r5010, %r5009, 19;
	shf.r.wrap.b32 	%r5012, %r5009, %r5010, 19;
	mov.b64 	%rd4658, {%r5012, %r5011};
	shf.l.wrap.b32 	%r5013, %r5009, %r5010, 3;
	shf.l.wrap.b32 	%r5014, %r5010, %r5009, 3;
	mov.b64 	%rd4659, {%r5014, %r5013};
	xor.b64  	%rd4660, %rd4658, %rd4659;
	shr.u64 	%rd4661, %rd4639, 6;
	xor.b64  	%rd4662, %rd4660, %rd4661;
	add.s64 	%rd4663, %rd4657, %rd4457;
	add.s64 	%rd4664, %rd4663, %rd4574;
	add.s64 	%rd4665, %rd4664, %rd4662;
	shf.r.wrap.b32 	%r5015, %r4876, %r4875, 1;
	shf.r.wrap.b32 	%r5016, %r4875, %r4876, 1;
	mov.b64 	%rd4666, {%r5016, %r5015};
	shf.r.wrap.b32 	%r5017, %r4876, %r4875, 8;
	shf.r.wrap.b32 	%r5018, %r4875, %r4876, 8;
	mov.b64 	%rd4667, {%r5018, %r5017};
	xor.b64  	%rd4668, %rd4666, %rd4667;
	shr.u64 	%rd4669, %rd4483, 7;
	xor.b64  	%rd4670, %rd4668, %rd4669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5019,%dummy}, %rd4652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5020}, %rd4652;
	}
	shf.r.wrap.b32 	%r5021, %r5020, %r5019, 19;
	shf.r.wrap.b32 	%r5022, %r5019, %r5020, 19;
	mov.b64 	%rd4671, {%r5022, %r5021};
	shf.l.wrap.b32 	%r5023, %r5019, %r5020, 3;
	shf.l.wrap.b32 	%r5024, %r5020, %r5019, 3;
	mov.b64 	%rd4672, {%r5024, %r5023};
	xor.b64  	%rd4673, %rd4671, %rd4672;
	shr.u64 	%rd4674, %rd4652, 6;
	xor.b64  	%rd4675, %rd4673, %rd4674;
	add.s64 	%rd4676, %rd4670, %rd4470;
	add.s64 	%rd4677, %rd4676, %rd4587;
	add.s64 	%rd4678, %rd4677, %rd4675;
	shf.r.wrap.b32 	%r5025, %r4888, %r4887, 1;
	shf.r.wrap.b32 	%r5026, %r4887, %r4888, 1;
	mov.b64 	%rd4679, {%r5026, %r5025};
	shf.r.wrap.b32 	%r5027, %r4888, %r4887, 8;
	shf.r.wrap.b32 	%r5028, %r4887, %r4888, 8;
	mov.b64 	%rd4680, {%r5028, %r5027};
	xor.b64  	%rd4681, %rd4679, %rd4680;
	shr.u64 	%rd4682, %rd4496, 7;
	xor.b64  	%rd4683, %rd4681, %rd4682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5029,%dummy}, %rd4665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5030}, %rd4665;
	}
	shf.r.wrap.b32 	%r5031, %r5030, %r5029, 19;
	shf.r.wrap.b32 	%r5032, %r5029, %r5030, 19;
	mov.b64 	%rd4684, {%r5032, %r5031};
	shf.l.wrap.b32 	%r5033, %r5029, %r5030, 3;
	shf.l.wrap.b32 	%r5034, %r5030, %r5029, 3;
	mov.b64 	%rd4685, {%r5034, %r5033};
	xor.b64  	%rd4686, %rd4684, %rd4685;
	shr.u64 	%rd4687, %rd4665, 6;
	xor.b64  	%rd4688, %rd4686, %rd4687;
	add.s64 	%rd4689, %rd4683, %rd4483;
	add.s64 	%rd4690, %rd4689, %rd4600;
	add.s64 	%rd4691, %rd4690, %rd4688;
	shf.r.wrap.b32 	%r5035, %r4900, %r4899, 1;
	shf.r.wrap.b32 	%r5036, %r4899, %r4900, 1;
	mov.b64 	%rd4692, {%r5036, %r5035};
	shf.r.wrap.b32 	%r5037, %r4900, %r4899, 8;
	shf.r.wrap.b32 	%r5038, %r4899, %r4900, 8;
	mov.b64 	%rd4693, {%r5038, %r5037};
	xor.b64  	%rd4694, %rd4692, %rd4693;
	shr.u64 	%rd4695, %rd4509, 7;
	xor.b64  	%rd4696, %rd4694, %rd4695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5039,%dummy}, %rd4678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5040}, %rd4678;
	}
	shf.r.wrap.b32 	%r5041, %r5040, %r5039, 19;
	shf.r.wrap.b32 	%r5042, %r5039, %r5040, 19;
	mov.b64 	%rd4697, {%r5042, %r5041};
	shf.l.wrap.b32 	%r5043, %r5039, %r5040, 3;
	shf.l.wrap.b32 	%r5044, %r5040, %r5039, 3;
	mov.b64 	%rd4698, {%r5044, %r5043};
	xor.b64  	%rd4699, %rd4697, %rd4698;
	shr.u64 	%rd4700, %rd4678, 6;
	xor.b64  	%rd4701, %rd4699, %rd4700;
	add.s64 	%rd4702, %rd4696, %rd4496;
	add.s64 	%rd4703, %rd4702, %rd4613;
	add.s64 	%rd4704, %rd4703, %rd4701;
	shf.r.wrap.b32 	%r5045, %r4912, %r4911, 1;
	shf.r.wrap.b32 	%r5046, %r4911, %r4912, 1;
	mov.b64 	%rd4705, {%r5046, %r5045};
	shf.r.wrap.b32 	%r5047, %r4912, %r4911, 8;
	shf.r.wrap.b32 	%r5048, %r4911, %r4912, 8;
	mov.b64 	%rd4706, {%r5048, %r5047};
	xor.b64  	%rd4707, %rd4705, %rd4706;
	shr.u64 	%rd4708, %rd4522, 7;
	xor.b64  	%rd4709, %rd4707, %rd4708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5049,%dummy}, %rd4691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5050}, %rd4691;
	}
	shf.r.wrap.b32 	%r5051, %r5050, %r5049, 19;
	shf.r.wrap.b32 	%r5052, %r5049, %r5050, 19;
	mov.b64 	%rd4710, {%r5052, %r5051};
	shf.l.wrap.b32 	%r5053, %r5049, %r5050, 3;
	shf.l.wrap.b32 	%r5054, %r5050, %r5049, 3;
	mov.b64 	%rd4711, {%r5054, %r5053};
	xor.b64  	%rd4712, %rd4710, %rd4711;
	shr.u64 	%rd4713, %rd4691, 6;
	xor.b64  	%rd4714, %rd4712, %rd4713;
	add.s64 	%rd4715, %rd4709, %rd4509;
	add.s64 	%rd4716, %rd4715, %rd4626;
	add.s64 	%rd4717, %rd4716, %rd4714;
	shf.r.wrap.b32 	%r5055, %r4924, %r4923, 1;
	shf.r.wrap.b32 	%r5056, %r4923, %r4924, 1;
	mov.b64 	%rd4718, {%r5056, %r5055};
	shf.r.wrap.b32 	%r5057, %r4924, %r4923, 8;
	shf.r.wrap.b32 	%r5058, %r4923, %r4924, 8;
	mov.b64 	%rd4719, {%r5058, %r5057};
	xor.b64  	%rd4720, %rd4718, %rd4719;
	shr.u64 	%rd4721, %rd4535, 7;
	xor.b64  	%rd4722, %rd4720, %rd4721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5059,%dummy}, %rd4704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5060}, %rd4704;
	}
	shf.r.wrap.b32 	%r5061, %r5060, %r5059, 19;
	shf.r.wrap.b32 	%r5062, %r5059, %r5060, 19;
	mov.b64 	%rd4723, {%r5062, %r5061};
	shf.l.wrap.b32 	%r5063, %r5059, %r5060, 3;
	shf.l.wrap.b32 	%r5064, %r5060, %r5059, 3;
	mov.b64 	%rd4724, {%r5064, %r5063};
	xor.b64  	%rd4725, %rd4723, %rd4724;
	shr.u64 	%rd4726, %rd4704, 6;
	xor.b64  	%rd4727, %rd4725, %rd4726;
	add.s64 	%rd4728, %rd4722, %rd4522;
	add.s64 	%rd4729, %rd4728, %rd4639;
	add.s64 	%rd4730, %rd4729, %rd4727;
	shf.r.wrap.b32 	%r5065, %r4936, %r4935, 1;
	shf.r.wrap.b32 	%r5066, %r4935, %r4936, 1;
	mov.b64 	%rd4731, {%r5066, %r5065};
	shf.r.wrap.b32 	%r5067, %r4936, %r4935, 8;
	shf.r.wrap.b32 	%r5068, %r4935, %r4936, 8;
	mov.b64 	%rd4732, {%r5068, %r5067};
	xor.b64  	%rd4733, %rd4731, %rd4732;
	shr.u64 	%rd4734, %rd4548, 7;
	xor.b64  	%rd4735, %rd4733, %rd4734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5069,%dummy}, %rd4717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5070}, %rd4717;
	}
	shf.r.wrap.b32 	%r5071, %r5070, %r5069, 19;
	shf.r.wrap.b32 	%r5072, %r5069, %r5070, 19;
	mov.b64 	%rd4736, {%r5072, %r5071};
	shf.l.wrap.b32 	%r5073, %r5069, %r5070, 3;
	shf.l.wrap.b32 	%r5074, %r5070, %r5069, 3;
	mov.b64 	%rd4737, {%r5074, %r5073};
	xor.b64  	%rd4738, %rd4736, %rd4737;
	shr.u64 	%rd4739, %rd4717, 6;
	xor.b64  	%rd4740, %rd4738, %rd4739;
	add.s64 	%rd4741, %rd4735, %rd4535;
	add.s64 	%rd4742, %rd4741, %rd4652;
	add.s64 	%rd4743, %rd4742, %rd4740;
	shf.r.wrap.b32 	%r5075, %r4948, %r4947, 1;
	shf.r.wrap.b32 	%r5076, %r4947, %r4948, 1;
	mov.b64 	%rd4744, {%r5076, %r5075};
	shf.r.wrap.b32 	%r5077, %r4948, %r4947, 8;
	shf.r.wrap.b32 	%r5078, %r4947, %r4948, 8;
	mov.b64 	%rd4745, {%r5078, %r5077};
	xor.b64  	%rd4746, %rd4744, %rd4745;
	shr.u64 	%rd4747, %rd4561, 7;
	xor.b64  	%rd4748, %rd4746, %rd4747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5079,%dummy}, %rd4730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5080}, %rd4730;
	}
	shf.r.wrap.b32 	%r5081, %r5080, %r5079, 19;
	shf.r.wrap.b32 	%r5082, %r5079, %r5080, 19;
	mov.b64 	%rd4749, {%r5082, %r5081};
	shf.l.wrap.b32 	%r5083, %r5079, %r5080, 3;
	shf.l.wrap.b32 	%r5084, %r5080, %r5079, 3;
	mov.b64 	%rd4750, {%r5084, %r5083};
	xor.b64  	%rd4751, %rd4749, %rd4750;
	shr.u64 	%rd4752, %rd4730, 6;
	xor.b64  	%rd4753, %rd4751, %rd4752;
	add.s64 	%rd4754, %rd4748, %rd4548;
	add.s64 	%rd4755, %rd4754, %rd4665;
	add.s64 	%rd4756, %rd4755, %rd4753;
	shf.r.wrap.b32 	%r5085, %r4960, %r4959, 1;
	shf.r.wrap.b32 	%r5086, %r4959, %r4960, 1;
	mov.b64 	%rd4757, {%r5086, %r5085};
	shf.r.wrap.b32 	%r5087, %r4960, %r4959, 8;
	shf.r.wrap.b32 	%r5088, %r4959, %r4960, 8;
	mov.b64 	%rd4758, {%r5088, %r5087};
	xor.b64  	%rd4759, %rd4757, %rd4758;
	shr.u64 	%rd4760, %rd4574, 7;
	xor.b64  	%rd4761, %rd4759, %rd4760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5089,%dummy}, %rd4743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5090}, %rd4743;
	}
	shf.r.wrap.b32 	%r5091, %r5090, %r5089, 19;
	shf.r.wrap.b32 	%r5092, %r5089, %r5090, 19;
	mov.b64 	%rd4762, {%r5092, %r5091};
	shf.l.wrap.b32 	%r5093, %r5089, %r5090, 3;
	shf.l.wrap.b32 	%r5094, %r5090, %r5089, 3;
	mov.b64 	%rd4763, {%r5094, %r5093};
	xor.b64  	%rd4764, %rd4762, %rd4763;
	shr.u64 	%rd4765, %rd4743, 6;
	xor.b64  	%rd4766, %rd4764, %rd4765;
	add.s64 	%rd4767, %rd4761, %rd4561;
	add.s64 	%rd4768, %rd4767, %rd4678;
	add.s64 	%rd4769, %rd4768, %rd4766;
	shf.r.wrap.b32 	%r5095, %r4970, %r4969, 1;
	shf.r.wrap.b32 	%r5096, %r4969, %r4970, 1;
	mov.b64 	%rd4770, {%r5096, %r5095};
	shf.r.wrap.b32 	%r5097, %r4970, %r4969, 8;
	shf.r.wrap.b32 	%r5098, %r4969, %r4970, 8;
	mov.b64 	%rd4771, {%r5098, %r5097};
	xor.b64  	%rd4772, %rd4770, %rd4771;
	shr.u64 	%rd4773, %rd4587, 7;
	xor.b64  	%rd4774, %rd4772, %rd4773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5099,%dummy}, %rd4756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5100}, %rd4756;
	}
	shf.r.wrap.b32 	%r5101, %r5100, %r5099, 19;
	shf.r.wrap.b32 	%r5102, %r5099, %r5100, 19;
	mov.b64 	%rd4775, {%r5102, %r5101};
	shf.l.wrap.b32 	%r5103, %r5099, %r5100, 3;
	shf.l.wrap.b32 	%r5104, %r5100, %r5099, 3;
	mov.b64 	%rd4776, {%r5104, %r5103};
	xor.b64  	%rd4777, %rd4775, %rd4776;
	shr.u64 	%rd4778, %rd4756, 6;
	xor.b64  	%rd4779, %rd4777, %rd4778;
	add.s64 	%rd4780, %rd4774, %rd4574;
	add.s64 	%rd4781, %rd4780, %rd4691;
	add.s64 	%rd4782, %rd4781, %rd4779;
	shf.r.wrap.b32 	%r5105, %r4980, %r4979, 1;
	shf.r.wrap.b32 	%r5106, %r4979, %r4980, 1;
	mov.b64 	%rd4783, {%r5106, %r5105};
	shf.r.wrap.b32 	%r5107, %r4980, %r4979, 8;
	shf.r.wrap.b32 	%r5108, %r4979, %r4980, 8;
	mov.b64 	%rd4784, {%r5108, %r5107};
	xor.b64  	%rd4785, %rd4783, %rd4784;
	shr.u64 	%rd4786, %rd4600, 7;
	xor.b64  	%rd4787, %rd4785, %rd4786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5109,%dummy}, %rd4769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5110}, %rd4769;
	}
	shf.r.wrap.b32 	%r5111, %r5110, %r5109, 19;
	shf.r.wrap.b32 	%r5112, %r5109, %r5110, 19;
	mov.b64 	%rd4788, {%r5112, %r5111};
	shf.l.wrap.b32 	%r5113, %r5109, %r5110, 3;
	shf.l.wrap.b32 	%r5114, %r5110, %r5109, 3;
	mov.b64 	%rd4789, {%r5114, %r5113};
	xor.b64  	%rd4790, %rd4788, %rd4789;
	shr.u64 	%rd4791, %rd4769, 6;
	xor.b64  	%rd4792, %rd4790, %rd4791;
	add.s64 	%rd4793, %rd4787, %rd4587;
	add.s64 	%rd4794, %rd4793, %rd4704;
	add.s64 	%rd4795, %rd4794, %rd4792;
	shf.r.wrap.b32 	%r5115, %r4990, %r4989, 1;
	shf.r.wrap.b32 	%r5116, %r4989, %r4990, 1;
	mov.b64 	%rd4796, {%r5116, %r5115};
	shf.r.wrap.b32 	%r5117, %r4990, %r4989, 8;
	shf.r.wrap.b32 	%r5118, %r4989, %r4990, 8;
	mov.b64 	%rd4797, {%r5118, %r5117};
	xor.b64  	%rd4798, %rd4796, %rd4797;
	shr.u64 	%rd4799, %rd4613, 7;
	xor.b64  	%rd4800, %rd4798, %rd4799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5119,%dummy}, %rd4782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5120}, %rd4782;
	}
	shf.r.wrap.b32 	%r5121, %r5120, %r5119, 19;
	shf.r.wrap.b32 	%r5122, %r5119, %r5120, 19;
	mov.b64 	%rd4801, {%r5122, %r5121};
	shf.l.wrap.b32 	%r5123, %r5119, %r5120, 3;
	shf.l.wrap.b32 	%r5124, %r5120, %r5119, 3;
	mov.b64 	%rd4802, {%r5124, %r5123};
	xor.b64  	%rd4803, %rd4801, %rd4802;
	shr.u64 	%rd4804, %rd4782, 6;
	xor.b64  	%rd4805, %rd4803, %rd4804;
	add.s64 	%rd4806, %rd4800, %rd4600;
	add.s64 	%rd4807, %rd4806, %rd4717;
	add.s64 	%rd4808, %rd4807, %rd4805;
	shf.r.wrap.b32 	%r5125, %r5000, %r4999, 1;
	shf.r.wrap.b32 	%r5126, %r4999, %r5000, 1;
	mov.b64 	%rd4809, {%r5126, %r5125};
	shf.r.wrap.b32 	%r5127, %r5000, %r4999, 8;
	shf.r.wrap.b32 	%r5128, %r4999, %r5000, 8;
	mov.b64 	%rd4810, {%r5128, %r5127};
	xor.b64  	%rd4811, %rd4809, %rd4810;
	shr.u64 	%rd4812, %rd4626, 7;
	xor.b64  	%rd4813, %rd4811, %rd4812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5129,%dummy}, %rd4795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5130}, %rd4795;
	}
	shf.r.wrap.b32 	%r5131, %r5130, %r5129, 19;
	shf.r.wrap.b32 	%r5132, %r5129, %r5130, 19;
	mov.b64 	%rd4814, {%r5132, %r5131};
	shf.l.wrap.b32 	%r5133, %r5129, %r5130, 3;
	shf.l.wrap.b32 	%r5134, %r5130, %r5129, 3;
	mov.b64 	%rd4815, {%r5134, %r5133};
	xor.b64  	%rd4816, %rd4814, %rd4815;
	shr.u64 	%rd4817, %rd4795, 6;
	xor.b64  	%rd4818, %rd4816, %rd4817;
	add.s64 	%rd4819, %rd4813, %rd4613;
	add.s64 	%rd4820, %rd4819, %rd4730;
	add.s64 	%rd4821, %rd4820, %rd4818;
	shf.r.wrap.b32 	%r5135, %r5010, %r5009, 1;
	shf.r.wrap.b32 	%r5136, %r5009, %r5010, 1;
	mov.b64 	%rd4822, {%r5136, %r5135};
	shf.r.wrap.b32 	%r5137, %r5010, %r5009, 8;
	shf.r.wrap.b32 	%r5138, %r5009, %r5010, 8;
	mov.b64 	%rd4823, {%r5138, %r5137};
	xor.b64  	%rd4824, %rd4822, %rd4823;
	shr.u64 	%rd4825, %rd4639, 7;
	xor.b64  	%rd4826, %rd4824, %rd4825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5139,%dummy}, %rd4808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5140}, %rd4808;
	}
	shf.r.wrap.b32 	%r5141, %r5140, %r5139, 19;
	shf.r.wrap.b32 	%r5142, %r5139, %r5140, 19;
	mov.b64 	%rd4827, {%r5142, %r5141};
	shf.l.wrap.b32 	%r5143, %r5139, %r5140, 3;
	shf.l.wrap.b32 	%r5144, %r5140, %r5139, 3;
	mov.b64 	%rd4828, {%r5144, %r5143};
	xor.b64  	%rd4829, %rd4827, %rd4828;
	shr.u64 	%rd4830, %rd4808, 6;
	xor.b64  	%rd4831, %rd4829, %rd4830;
	add.s64 	%rd4832, %rd4826, %rd4626;
	add.s64 	%rd4833, %rd4832, %rd4743;
	add.s64 	%rd4834, %rd4833, %rd4831;
	shf.r.wrap.b32 	%r5145, %r5020, %r5019, 1;
	shf.r.wrap.b32 	%r5146, %r5019, %r5020, 1;
	mov.b64 	%rd4835, {%r5146, %r5145};
	shf.r.wrap.b32 	%r5147, %r5020, %r5019, 8;
	shf.r.wrap.b32 	%r5148, %r5019, %r5020, 8;
	mov.b64 	%rd4836, {%r5148, %r5147};
	xor.b64  	%rd4837, %rd4835, %rd4836;
	shr.u64 	%rd4838, %rd4652, 7;
	xor.b64  	%rd4839, %rd4837, %rd4838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5149,%dummy}, %rd4821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5150}, %rd4821;
	}
	shf.r.wrap.b32 	%r5151, %r5150, %r5149, 19;
	shf.r.wrap.b32 	%r5152, %r5149, %r5150, 19;
	mov.b64 	%rd4840, {%r5152, %r5151};
	shf.l.wrap.b32 	%r5153, %r5149, %r5150, 3;
	shf.l.wrap.b32 	%r5154, %r5150, %r5149, 3;
	mov.b64 	%rd4841, {%r5154, %r5153};
	xor.b64  	%rd4842, %rd4840, %rd4841;
	shr.u64 	%rd4843, %rd4821, 6;
	xor.b64  	%rd4844, %rd4842, %rd4843;
	add.s64 	%rd4845, %rd4839, %rd4639;
	add.s64 	%rd4846, %rd4845, %rd4756;
	add.s64 	%rd4847, %rd4846, %rd4844;
	shf.r.wrap.b32 	%r5155, %r5030, %r5029, 1;
	shf.r.wrap.b32 	%r5156, %r5029, %r5030, 1;
	mov.b64 	%rd4848, {%r5156, %r5155};
	shf.r.wrap.b32 	%r5157, %r5030, %r5029, 8;
	shf.r.wrap.b32 	%r5158, %r5029, %r5030, 8;
	mov.b64 	%rd4849, {%r5158, %r5157};
	xor.b64  	%rd4850, %rd4848, %rd4849;
	shr.u64 	%rd4851, %rd4665, 7;
	xor.b64  	%rd4852, %rd4850, %rd4851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5159,%dummy}, %rd4834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5160}, %rd4834;
	}
	shf.r.wrap.b32 	%r5161, %r5160, %r5159, 19;
	shf.r.wrap.b32 	%r5162, %r5159, %r5160, 19;
	mov.b64 	%rd4853, {%r5162, %r5161};
	shf.l.wrap.b32 	%r5163, %r5159, %r5160, 3;
	shf.l.wrap.b32 	%r5164, %r5160, %r5159, 3;
	mov.b64 	%rd4854, {%r5164, %r5163};
	xor.b64  	%rd4855, %rd4853, %rd4854;
	shr.u64 	%rd4856, %rd4834, 6;
	xor.b64  	%rd4857, %rd4855, %rd4856;
	add.s64 	%rd4858, %rd4852, %rd4652;
	add.s64 	%rd4859, %rd4858, %rd4769;
	add.s64 	%rd4860, %rd4859, %rd4857;
	shf.r.wrap.b32 	%r5165, %r5040, %r5039, 1;
	shf.r.wrap.b32 	%r5166, %r5039, %r5040, 1;
	mov.b64 	%rd4861, {%r5166, %r5165};
	shf.r.wrap.b32 	%r5167, %r5040, %r5039, 8;
	shf.r.wrap.b32 	%r5168, %r5039, %r5040, 8;
	mov.b64 	%rd4862, {%r5168, %r5167};
	xor.b64  	%rd4863, %rd4861, %rd4862;
	shr.u64 	%rd4864, %rd4678, 7;
	xor.b64  	%rd4865, %rd4863, %rd4864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5169,%dummy}, %rd4847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5170}, %rd4847;
	}
	shf.r.wrap.b32 	%r5171, %r5170, %r5169, 19;
	shf.r.wrap.b32 	%r5172, %r5169, %r5170, 19;
	mov.b64 	%rd4866, {%r5172, %r5171};
	shf.l.wrap.b32 	%r5173, %r5169, %r5170, 3;
	shf.l.wrap.b32 	%r5174, %r5170, %r5169, 3;
	mov.b64 	%rd4867, {%r5174, %r5173};
	xor.b64  	%rd4868, %rd4866, %rd4867;
	shr.u64 	%rd4869, %rd4847, 6;
	xor.b64  	%rd4870, %rd4868, %rd4869;
	add.s64 	%rd4871, %rd4865, %rd4665;
	add.s64 	%rd4872, %rd4871, %rd4782;
	add.s64 	%rd4873, %rd4872, %rd4870;
	shf.r.wrap.b32 	%r5175, %r5050, %r5049, 1;
	shf.r.wrap.b32 	%r5176, %r5049, %r5050, 1;
	mov.b64 	%rd4874, {%r5176, %r5175};
	shf.r.wrap.b32 	%r5177, %r5050, %r5049, 8;
	shf.r.wrap.b32 	%r5178, %r5049, %r5050, 8;
	mov.b64 	%rd4875, {%r5178, %r5177};
	xor.b64  	%rd4876, %rd4874, %rd4875;
	shr.u64 	%rd4877, %rd4691, 7;
	xor.b64  	%rd4878, %rd4876, %rd4877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5179,%dummy}, %rd4860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5180}, %rd4860;
	}
	shf.r.wrap.b32 	%r5181, %r5180, %r5179, 19;
	shf.r.wrap.b32 	%r5182, %r5179, %r5180, 19;
	mov.b64 	%rd4879, {%r5182, %r5181};
	shf.l.wrap.b32 	%r5183, %r5179, %r5180, 3;
	shf.l.wrap.b32 	%r5184, %r5180, %r5179, 3;
	mov.b64 	%rd4880, {%r5184, %r5183};
	xor.b64  	%rd4881, %rd4879, %rd4880;
	shr.u64 	%rd4882, %rd4860, 6;
	xor.b64  	%rd4883, %rd4881, %rd4882;
	add.s64 	%rd4884, %rd4878, %rd4678;
	add.s64 	%rd4885, %rd4884, %rd4795;
	add.s64 	%rd4886, %rd4885, %rd4883;
	shf.r.wrap.b32 	%r5185, %r5060, %r5059, 1;
	shf.r.wrap.b32 	%r5186, %r5059, %r5060, 1;
	mov.b64 	%rd4887, {%r5186, %r5185};
	shf.r.wrap.b32 	%r5187, %r5060, %r5059, 8;
	shf.r.wrap.b32 	%r5188, %r5059, %r5060, 8;
	mov.b64 	%rd4888, {%r5188, %r5187};
	xor.b64  	%rd4889, %rd4887, %rd4888;
	shr.u64 	%rd4890, %rd4704, 7;
	xor.b64  	%rd4891, %rd4889, %rd4890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5189,%dummy}, %rd4873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5190}, %rd4873;
	}
	shf.r.wrap.b32 	%r5191, %r5190, %r5189, 19;
	shf.r.wrap.b32 	%r5192, %r5189, %r5190, 19;
	mov.b64 	%rd4892, {%r5192, %r5191};
	shf.l.wrap.b32 	%r5193, %r5189, %r5190, 3;
	shf.l.wrap.b32 	%r5194, %r5190, %r5189, 3;
	mov.b64 	%rd4893, {%r5194, %r5193};
	xor.b64  	%rd4894, %rd4892, %rd4893;
	shr.u64 	%rd4895, %rd4873, 6;
	xor.b64  	%rd4896, %rd4894, %rd4895;
	add.s64 	%rd4897, %rd4891, %rd4691;
	add.s64 	%rd4898, %rd4897, %rd4808;
	add.s64 	%rd4899, %rd4898, %rd4896;
	shf.r.wrap.b32 	%r5195, %r5070, %r5069, 1;
	shf.r.wrap.b32 	%r5196, %r5069, %r5070, 1;
	mov.b64 	%rd4900, {%r5196, %r5195};
	shf.r.wrap.b32 	%r5197, %r5070, %r5069, 8;
	shf.r.wrap.b32 	%r5198, %r5069, %r5070, 8;
	mov.b64 	%rd4901, {%r5198, %r5197};
	xor.b64  	%rd4902, %rd4900, %rd4901;
	shr.u64 	%rd4903, %rd4717, 7;
	xor.b64  	%rd4904, %rd4902, %rd4903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5199,%dummy}, %rd4886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5200}, %rd4886;
	}
	shf.r.wrap.b32 	%r5201, %r5200, %r5199, 19;
	shf.r.wrap.b32 	%r5202, %r5199, %r5200, 19;
	mov.b64 	%rd4905, {%r5202, %r5201};
	shf.l.wrap.b32 	%r5203, %r5199, %r5200, 3;
	shf.l.wrap.b32 	%r5204, %r5200, %r5199, 3;
	mov.b64 	%rd4906, {%r5204, %r5203};
	xor.b64  	%rd4907, %rd4905, %rd4906;
	shr.u64 	%rd4908, %rd4886, 6;
	xor.b64  	%rd4909, %rd4907, %rd4908;
	add.s64 	%rd4910, %rd4904, %rd4704;
	add.s64 	%rd4911, %rd4910, %rd4821;
	add.s64 	%rd4912, %rd4911, %rd4909;
	shf.r.wrap.b32 	%r5205, %r5080, %r5079, 1;
	shf.r.wrap.b32 	%r5206, %r5079, %r5080, 1;
	mov.b64 	%rd4913, {%r5206, %r5205};
	shf.r.wrap.b32 	%r5207, %r5080, %r5079, 8;
	shf.r.wrap.b32 	%r5208, %r5079, %r5080, 8;
	mov.b64 	%rd4914, {%r5208, %r5207};
	xor.b64  	%rd4915, %rd4913, %rd4914;
	shr.u64 	%rd4916, %rd4730, 7;
	xor.b64  	%rd4917, %rd4915, %rd4916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5209,%dummy}, %rd4899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5210}, %rd4899;
	}
	shf.r.wrap.b32 	%r5211, %r5210, %r5209, 19;
	shf.r.wrap.b32 	%r5212, %r5209, %r5210, 19;
	mov.b64 	%rd4918, {%r5212, %r5211};
	shf.l.wrap.b32 	%r5213, %r5209, %r5210, 3;
	shf.l.wrap.b32 	%r5214, %r5210, %r5209, 3;
	mov.b64 	%rd4919, {%r5214, %r5213};
	xor.b64  	%rd4920, %rd4918, %rd4919;
	shr.u64 	%rd4921, %rd4899, 6;
	xor.b64  	%rd4922, %rd4920, %rd4921;
	add.s64 	%rd4923, %rd4917, %rd4717;
	add.s64 	%rd4924, %rd4923, %rd4834;
	add.s64 	%rd4925, %rd4924, %rd4922;
	shf.r.wrap.b32 	%r5215, %r5090, %r5089, 1;
	shf.r.wrap.b32 	%r5216, %r5089, %r5090, 1;
	mov.b64 	%rd4926, {%r5216, %r5215};
	shf.r.wrap.b32 	%r5217, %r5090, %r5089, 8;
	shf.r.wrap.b32 	%r5218, %r5089, %r5090, 8;
	mov.b64 	%rd4927, {%r5218, %r5217};
	xor.b64  	%rd4928, %rd4926, %rd4927;
	shr.u64 	%rd4929, %rd4743, 7;
	xor.b64  	%rd4930, %rd4928, %rd4929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5219,%dummy}, %rd4912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5220}, %rd4912;
	}
	shf.r.wrap.b32 	%r5221, %r5220, %r5219, 19;
	shf.r.wrap.b32 	%r5222, %r5219, %r5220, 19;
	mov.b64 	%rd4931, {%r5222, %r5221};
	shf.l.wrap.b32 	%r5223, %r5219, %r5220, 3;
	shf.l.wrap.b32 	%r5224, %r5220, %r5219, 3;
	mov.b64 	%rd4932, {%r5224, %r5223};
	xor.b64  	%rd4933, %rd4931, %rd4932;
	shr.u64 	%rd4934, %rd4912, 6;
	xor.b64  	%rd4935, %rd4933, %rd4934;
	add.s64 	%rd4936, %rd4930, %rd4730;
	add.s64 	%rd4937, %rd4936, %rd4847;
	add.s64 	%rd4938, %rd4937, %rd4935;
	shf.r.wrap.b32 	%r5225, %r5100, %r5099, 1;
	shf.r.wrap.b32 	%r5226, %r5099, %r5100, 1;
	mov.b64 	%rd4939, {%r5226, %r5225};
	shf.r.wrap.b32 	%r5227, %r5100, %r5099, 8;
	shf.r.wrap.b32 	%r5228, %r5099, %r5100, 8;
	mov.b64 	%rd4940, {%r5228, %r5227};
	xor.b64  	%rd4941, %rd4939, %rd4940;
	shr.u64 	%rd4942, %rd4756, 7;
	xor.b64  	%rd4943, %rd4941, %rd4942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5229,%dummy}, %rd4925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5230}, %rd4925;
	}
	shf.r.wrap.b32 	%r5231, %r5230, %r5229, 19;
	shf.r.wrap.b32 	%r5232, %r5229, %r5230, 19;
	mov.b64 	%rd4944, {%r5232, %r5231};
	shf.l.wrap.b32 	%r5233, %r5229, %r5230, 3;
	shf.l.wrap.b32 	%r5234, %r5230, %r5229, 3;
	mov.b64 	%rd4945, {%r5234, %r5233};
	xor.b64  	%rd4946, %rd4944, %rd4945;
	shr.u64 	%rd4947, %rd4925, 6;
	xor.b64  	%rd4948, %rd4946, %rd4947;
	add.s64 	%rd4949, %rd4943, %rd4743;
	add.s64 	%rd4950, %rd4949, %rd4860;
	add.s64 	%rd4951, %rd4950, %rd4948;
	shf.r.wrap.b32 	%r5235, %r5110, %r5109, 1;
	shf.r.wrap.b32 	%r5236, %r5109, %r5110, 1;
	mov.b64 	%rd4952, {%r5236, %r5235};
	shf.r.wrap.b32 	%r5237, %r5110, %r5109, 8;
	shf.r.wrap.b32 	%r5238, %r5109, %r5110, 8;
	mov.b64 	%rd4953, {%r5238, %r5237};
	xor.b64  	%rd4954, %rd4952, %rd4953;
	shr.u64 	%rd4955, %rd4769, 7;
	xor.b64  	%rd4956, %rd4954, %rd4955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5239,%dummy}, %rd4938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5240}, %rd4938;
	}
	shf.r.wrap.b32 	%r5241, %r5240, %r5239, 19;
	shf.r.wrap.b32 	%r5242, %r5239, %r5240, 19;
	mov.b64 	%rd4957, {%r5242, %r5241};
	shf.l.wrap.b32 	%r5243, %r5239, %r5240, 3;
	shf.l.wrap.b32 	%r5244, %r5240, %r5239, 3;
	mov.b64 	%rd4958, {%r5244, %r5243};
	xor.b64  	%rd4959, %rd4957, %rd4958;
	shr.u64 	%rd4960, %rd4938, 6;
	xor.b64  	%rd4961, %rd4959, %rd4960;
	add.s64 	%rd4962, %rd4956, %rd4756;
	add.s64 	%rd4963, %rd4962, %rd4873;
	add.s64 	%rd4964, %rd4963, %rd4961;
	shf.r.wrap.b32 	%r5245, %r5120, %r5119, 1;
	shf.r.wrap.b32 	%r5246, %r5119, %r5120, 1;
	mov.b64 	%rd4965, {%r5246, %r5245};
	shf.r.wrap.b32 	%r5247, %r5120, %r5119, 8;
	shf.r.wrap.b32 	%r5248, %r5119, %r5120, 8;
	mov.b64 	%rd4966, {%r5248, %r5247};
	xor.b64  	%rd4967, %rd4965, %rd4966;
	shr.u64 	%rd4968, %rd4782, 7;
	xor.b64  	%rd4969, %rd4967, %rd4968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5249,%dummy}, %rd4951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5250}, %rd4951;
	}
	shf.r.wrap.b32 	%r5251, %r5250, %r5249, 19;
	shf.r.wrap.b32 	%r5252, %r5249, %r5250, 19;
	mov.b64 	%rd4970, {%r5252, %r5251};
	shf.l.wrap.b32 	%r5253, %r5249, %r5250, 3;
	shf.l.wrap.b32 	%r5254, %r5250, %r5249, 3;
	mov.b64 	%rd4971, {%r5254, %r5253};
	xor.b64  	%rd4972, %rd4970, %rd4971;
	shr.u64 	%rd4973, %rd4951, 6;
	xor.b64  	%rd4974, %rd4972, %rd4973;
	add.s64 	%rd4975, %rd4969, %rd4769;
	add.s64 	%rd4976, %rd4975, %rd4886;
	add.s64 	%rd4977, %rd4976, %rd4974;
	shf.r.wrap.b32 	%r5255, %r5130, %r5129, 1;
	shf.r.wrap.b32 	%r5256, %r5129, %r5130, 1;
	mov.b64 	%rd4978, {%r5256, %r5255};
	shf.r.wrap.b32 	%r5257, %r5130, %r5129, 8;
	shf.r.wrap.b32 	%r5258, %r5129, %r5130, 8;
	mov.b64 	%rd4979, {%r5258, %r5257};
	xor.b64  	%rd4980, %rd4978, %rd4979;
	shr.u64 	%rd4981, %rd4795, 7;
	xor.b64  	%rd4982, %rd4980, %rd4981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5259,%dummy}, %rd4964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5260}, %rd4964;
	}
	shf.r.wrap.b32 	%r5261, %r5260, %r5259, 19;
	shf.r.wrap.b32 	%r5262, %r5259, %r5260, 19;
	mov.b64 	%rd4983, {%r5262, %r5261};
	shf.l.wrap.b32 	%r5263, %r5259, %r5260, 3;
	shf.l.wrap.b32 	%r5264, %r5260, %r5259, 3;
	mov.b64 	%rd4984, {%r5264, %r5263};
	xor.b64  	%rd4985, %rd4983, %rd4984;
	shr.u64 	%rd4986, %rd4964, 6;
	xor.b64  	%rd4987, %rd4985, %rd4986;
	add.s64 	%rd4988, %rd4982, %rd4782;
	add.s64 	%rd4989, %rd4988, %rd4899;
	add.s64 	%rd4990, %rd4989, %rd4987;
	shf.r.wrap.b32 	%r5265, %r5140, %r5139, 1;
	shf.r.wrap.b32 	%r5266, %r5139, %r5140, 1;
	mov.b64 	%rd4991, {%r5266, %r5265};
	shf.r.wrap.b32 	%r5267, %r5140, %r5139, 8;
	shf.r.wrap.b32 	%r5268, %r5139, %r5140, 8;
	mov.b64 	%rd4992, {%r5268, %r5267};
	xor.b64  	%rd4993, %rd4991, %rd4992;
	shr.u64 	%rd4994, %rd4808, 7;
	xor.b64  	%rd4995, %rd4993, %rd4994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5269,%dummy}, %rd4977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5270}, %rd4977;
	}
	shf.r.wrap.b32 	%r5271, %r5270, %r5269, 19;
	shf.r.wrap.b32 	%r5272, %r5269, %r5270, 19;
	mov.b64 	%rd4996, {%r5272, %r5271};
	shf.l.wrap.b32 	%r5273, %r5269, %r5270, 3;
	shf.l.wrap.b32 	%r5274, %r5270, %r5269, 3;
	mov.b64 	%rd4997, {%r5274, %r5273};
	xor.b64  	%rd4998, %rd4996, %rd4997;
	shr.u64 	%rd4999, %rd4977, 6;
	xor.b64  	%rd5000, %rd4998, %rd4999;
	add.s64 	%rd5001, %rd4995, %rd4795;
	add.s64 	%rd5002, %rd5001, %rd4912;
	add.s64 	%rd5003, %rd5002, %rd5000;
	shf.r.wrap.b32 	%r5275, %r5150, %r5149, 1;
	shf.r.wrap.b32 	%r5276, %r5149, %r5150, 1;
	mov.b64 	%rd5004, {%r5276, %r5275};
	shf.r.wrap.b32 	%r5277, %r5150, %r5149, 8;
	shf.r.wrap.b32 	%r5278, %r5149, %r5150, 8;
	mov.b64 	%rd5005, {%r5278, %r5277};
	xor.b64  	%rd5006, %rd5004, %rd5005;
	shr.u64 	%rd5007, %rd4821, 7;
	xor.b64  	%rd5008, %rd5006, %rd5007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5279,%dummy}, %rd4990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5280}, %rd4990;
	}
	shf.r.wrap.b32 	%r5281, %r5280, %r5279, 19;
	shf.r.wrap.b32 	%r5282, %r5279, %r5280, 19;
	mov.b64 	%rd5009, {%r5282, %r5281};
	shf.l.wrap.b32 	%r5283, %r5279, %r5280, 3;
	shf.l.wrap.b32 	%r5284, %r5280, %r5279, 3;
	mov.b64 	%rd5010, {%r5284, %r5283};
	xor.b64  	%rd5011, %rd5009, %rd5010;
	shr.u64 	%rd5012, %rd4990, 6;
	xor.b64  	%rd5013, %rd5011, %rd5012;
	add.s64 	%rd5014, %rd5008, %rd4808;
	add.s64 	%rd5015, %rd5014, %rd4925;
	add.s64 	%rd5016, %rd5015, %rd5013;
	shf.r.wrap.b32 	%r5285, %r5160, %r5159, 1;
	shf.r.wrap.b32 	%r5286, %r5159, %r5160, 1;
	mov.b64 	%rd5017, {%r5286, %r5285};
	shf.r.wrap.b32 	%r5287, %r5160, %r5159, 8;
	shf.r.wrap.b32 	%r5288, %r5159, %r5160, 8;
	mov.b64 	%rd5018, {%r5288, %r5287};
	xor.b64  	%rd5019, %rd5017, %rd5018;
	shr.u64 	%rd5020, %rd4834, 7;
	xor.b64  	%rd5021, %rd5019, %rd5020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5289,%dummy}, %rd5003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5290}, %rd5003;
	}
	shf.r.wrap.b32 	%r5291, %r5290, %r5289, 19;
	shf.r.wrap.b32 	%r5292, %r5289, %r5290, 19;
	mov.b64 	%rd5022, {%r5292, %r5291};
	shf.l.wrap.b32 	%r5293, %r5289, %r5290, 3;
	shf.l.wrap.b32 	%r5294, %r5290, %r5289, 3;
	mov.b64 	%rd5023, {%r5294, %r5293};
	xor.b64  	%rd5024, %rd5022, %rd5023;
	shr.u64 	%rd5025, %rd5003, 6;
	xor.b64  	%rd5026, %rd5024, %rd5025;
	add.s64 	%rd5027, %rd5021, %rd4821;
	add.s64 	%rd5028, %rd5027, %rd4938;
	add.s64 	%rd5029, %rd5028, %rd5026;
	shf.r.wrap.b32 	%r5295, %r5170, %r5169, 1;
	shf.r.wrap.b32 	%r5296, %r5169, %r5170, 1;
	mov.b64 	%rd5030, {%r5296, %r5295};
	shf.r.wrap.b32 	%r5297, %r5170, %r5169, 8;
	shf.r.wrap.b32 	%r5298, %r5169, %r5170, 8;
	mov.b64 	%rd5031, {%r5298, %r5297};
	xor.b64  	%rd5032, %rd5030, %rd5031;
	shr.u64 	%rd5033, %rd4847, 7;
	xor.b64  	%rd5034, %rd5032, %rd5033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5299,%dummy}, %rd5016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5300}, %rd5016;
	}
	shf.r.wrap.b32 	%r5301, %r5300, %r5299, 19;
	shf.r.wrap.b32 	%r5302, %r5299, %r5300, 19;
	mov.b64 	%rd5035, {%r5302, %r5301};
	shf.l.wrap.b32 	%r5303, %r5299, %r5300, 3;
	shf.l.wrap.b32 	%r5304, %r5300, %r5299, 3;
	mov.b64 	%rd5036, {%r5304, %r5303};
	xor.b64  	%rd5037, %rd5035, %rd5036;
	shr.u64 	%rd5038, %rd5016, 6;
	xor.b64  	%rd5039, %rd5037, %rd5038;
	add.s64 	%rd5040, %rd5034, %rd4834;
	add.s64 	%rd5041, %rd5040, %rd4951;
	add.s64 	%rd5042, %rd5041, %rd5039;
	shf.r.wrap.b32 	%r5305, %r5180, %r5179, 1;
	shf.r.wrap.b32 	%r5306, %r5179, %r5180, 1;
	mov.b64 	%rd5043, {%r5306, %r5305};
	shf.r.wrap.b32 	%r5307, %r5180, %r5179, 8;
	shf.r.wrap.b32 	%r5308, %r5179, %r5180, 8;
	mov.b64 	%rd5044, {%r5308, %r5307};
	xor.b64  	%rd5045, %rd5043, %rd5044;
	shr.u64 	%rd5046, %rd4860, 7;
	xor.b64  	%rd5047, %rd5045, %rd5046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5309,%dummy}, %rd5029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5310}, %rd5029;
	}
	shf.r.wrap.b32 	%r5311, %r5310, %r5309, 19;
	shf.r.wrap.b32 	%r5312, %r5309, %r5310, 19;
	mov.b64 	%rd5048, {%r5312, %r5311};
	shf.l.wrap.b32 	%r5313, %r5309, %r5310, 3;
	shf.l.wrap.b32 	%r5314, %r5310, %r5309, 3;
	mov.b64 	%rd5049, {%r5314, %r5313};
	xor.b64  	%rd5050, %rd5048, %rd5049;
	shr.u64 	%rd5051, %rd5029, 6;
	xor.b64  	%rd5052, %rd5050, %rd5051;
	add.s64 	%rd5053, %rd5047, %rd4847;
	add.s64 	%rd5054, %rd5053, %rd4964;
	add.s64 	%rd5055, %rd5054, %rd5052;
	shf.r.wrap.b32 	%r5315, %r5190, %r5189, 1;
	shf.r.wrap.b32 	%r5316, %r5189, %r5190, 1;
	mov.b64 	%rd5056, {%r5316, %r5315};
	shf.r.wrap.b32 	%r5317, %r5190, %r5189, 8;
	shf.r.wrap.b32 	%r5318, %r5189, %r5190, 8;
	mov.b64 	%rd5057, {%r5318, %r5317};
	xor.b64  	%rd5058, %rd5056, %rd5057;
	shr.u64 	%rd5059, %rd4873, 7;
	xor.b64  	%rd5060, %rd5058, %rd5059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5319,%dummy}, %rd5042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5320}, %rd5042;
	}
	shf.r.wrap.b32 	%r5321, %r5320, %r5319, 19;
	shf.r.wrap.b32 	%r5322, %r5319, %r5320, 19;
	mov.b64 	%rd5061, {%r5322, %r5321};
	shf.l.wrap.b32 	%r5323, %r5319, %r5320, 3;
	shf.l.wrap.b32 	%r5324, %r5320, %r5319, 3;
	mov.b64 	%rd5062, {%r5324, %r5323};
	xor.b64  	%rd5063, %rd5061, %rd5062;
	shr.u64 	%rd5064, %rd5042, 6;
	xor.b64  	%rd5065, %rd5063, %rd5064;
	add.s64 	%rd5066, %rd5060, %rd4860;
	add.s64 	%rd5067, %rd5066, %rd4977;
	add.s64 	%rd5068, %rd5067, %rd5065;
	shf.r.wrap.b32 	%r5325, %r5200, %r5199, 1;
	shf.r.wrap.b32 	%r5326, %r5199, %r5200, 1;
	mov.b64 	%rd5069, {%r5326, %r5325};
	shf.r.wrap.b32 	%r5327, %r5200, %r5199, 8;
	shf.r.wrap.b32 	%r5328, %r5199, %r5200, 8;
	mov.b64 	%rd5070, {%r5328, %r5327};
	xor.b64  	%rd5071, %rd5069, %rd5070;
	shr.u64 	%rd5072, %rd4886, 7;
	xor.b64  	%rd5073, %rd5071, %rd5072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5329,%dummy}, %rd5055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5330}, %rd5055;
	}
	shf.r.wrap.b32 	%r5331, %r5330, %r5329, 19;
	shf.r.wrap.b32 	%r5332, %r5329, %r5330, 19;
	mov.b64 	%rd5074, {%r5332, %r5331};
	shf.l.wrap.b32 	%r5333, %r5329, %r5330, 3;
	shf.l.wrap.b32 	%r5334, %r5330, %r5329, 3;
	mov.b64 	%rd5075, {%r5334, %r5333};
	xor.b64  	%rd5076, %rd5074, %rd5075;
	shr.u64 	%rd5077, %rd5055, 6;
	xor.b64  	%rd5078, %rd5076, %rd5077;
	add.s64 	%rd5079, %rd5073, %rd4873;
	add.s64 	%rd5080, %rd5079, %rd4990;
	add.s64 	%rd5081, %rd5080, %rd5078;
	shf.r.wrap.b32 	%r5335, %r5210, %r5209, 1;
	shf.r.wrap.b32 	%r5336, %r5209, %r5210, 1;
	mov.b64 	%rd5082, {%r5336, %r5335};
	shf.r.wrap.b32 	%r5337, %r5210, %r5209, 8;
	shf.r.wrap.b32 	%r5338, %r5209, %r5210, 8;
	mov.b64 	%rd5083, {%r5338, %r5337};
	xor.b64  	%rd5084, %rd5082, %rd5083;
	shr.u64 	%rd5085, %rd4899, 7;
	xor.b64  	%rd5086, %rd5084, %rd5085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5339,%dummy}, %rd5068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5340}, %rd5068;
	}
	shf.r.wrap.b32 	%r5341, %r5340, %r5339, 19;
	shf.r.wrap.b32 	%r5342, %r5339, %r5340, 19;
	mov.b64 	%rd5087, {%r5342, %r5341};
	shf.l.wrap.b32 	%r5343, %r5339, %r5340, 3;
	shf.l.wrap.b32 	%r5344, %r5340, %r5339, 3;
	mov.b64 	%rd5088, {%r5344, %r5343};
	xor.b64  	%rd5089, %rd5087, %rd5088;
	shr.u64 	%rd5090, %rd5068, 6;
	xor.b64  	%rd5091, %rd5089, %rd5090;
	add.s64 	%rd5092, %rd5086, %rd4886;
	add.s64 	%rd5093, %rd5092, %rd5003;
	add.s64 	%rd5094, %rd5093, %rd5091;
	shf.r.wrap.b32 	%r5345, %r5220, %r5219, 1;
	shf.r.wrap.b32 	%r5346, %r5219, %r5220, 1;
	mov.b64 	%rd5095, {%r5346, %r5345};
	shf.r.wrap.b32 	%r5347, %r5220, %r5219, 8;
	shf.r.wrap.b32 	%r5348, %r5219, %r5220, 8;
	mov.b64 	%rd5096, {%r5348, %r5347};
	xor.b64  	%rd5097, %rd5095, %rd5096;
	shr.u64 	%rd5098, %rd4912, 7;
	xor.b64  	%rd5099, %rd5097, %rd5098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5349,%dummy}, %rd5081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5350}, %rd5081;
	}
	shf.r.wrap.b32 	%r5351, %r5350, %r5349, 19;
	shf.r.wrap.b32 	%r5352, %r5349, %r5350, 19;
	mov.b64 	%rd5100, {%r5352, %r5351};
	shf.l.wrap.b32 	%r5353, %r5349, %r5350, 3;
	shf.l.wrap.b32 	%r5354, %r5350, %r5349, 3;
	mov.b64 	%rd5101, {%r5354, %r5353};
	xor.b64  	%rd5102, %rd5100, %rd5101;
	shr.u64 	%rd5103, %rd5081, 6;
	xor.b64  	%rd5104, %rd5102, %rd5103;
	add.s64 	%rd5105, %rd5099, %rd4899;
	add.s64 	%rd5106, %rd5105, %rd5016;
	add.s64 	%rd5107, %rd5106, %rd5104;
	shf.r.wrap.b32 	%r5355, %r5230, %r5229, 1;
	shf.r.wrap.b32 	%r5356, %r5229, %r5230, 1;
	mov.b64 	%rd5108, {%r5356, %r5355};
	shf.r.wrap.b32 	%r5357, %r5230, %r5229, 8;
	shf.r.wrap.b32 	%r5358, %r5229, %r5230, 8;
	mov.b64 	%rd5109, {%r5358, %r5357};
	xor.b64  	%rd5110, %rd5108, %rd5109;
	shr.u64 	%rd5111, %rd4925, 7;
	xor.b64  	%rd5112, %rd5110, %rd5111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5359,%dummy}, %rd5094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5360}, %rd5094;
	}
	shf.r.wrap.b32 	%r5361, %r5360, %r5359, 19;
	shf.r.wrap.b32 	%r5362, %r5359, %r5360, 19;
	mov.b64 	%rd5113, {%r5362, %r5361};
	shf.l.wrap.b32 	%r5363, %r5359, %r5360, 3;
	shf.l.wrap.b32 	%r5364, %r5360, %r5359, 3;
	mov.b64 	%rd5114, {%r5364, %r5363};
	xor.b64  	%rd5115, %rd5113, %rd5114;
	shr.u64 	%rd5116, %rd5094, 6;
	xor.b64  	%rd5117, %rd5115, %rd5116;
	add.s64 	%rd5118, %rd5112, %rd4912;
	add.s64 	%rd5119, %rd5118, %rd5029;
	add.s64 	%rd5120, %rd5119, %rd5117;
	shf.r.wrap.b32 	%r5365, %r5240, %r5239, 1;
	shf.r.wrap.b32 	%r5366, %r5239, %r5240, 1;
	mov.b64 	%rd5121, {%r5366, %r5365};
	shf.r.wrap.b32 	%r5367, %r5240, %r5239, 8;
	shf.r.wrap.b32 	%r5368, %r5239, %r5240, 8;
	mov.b64 	%rd5122, {%r5368, %r5367};
	xor.b64  	%rd5123, %rd5121, %rd5122;
	shr.u64 	%rd5124, %rd4938, 7;
	xor.b64  	%rd5125, %rd5123, %rd5124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5369,%dummy}, %rd5107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5370}, %rd5107;
	}
	shf.r.wrap.b32 	%r5371, %r5370, %r5369, 19;
	shf.r.wrap.b32 	%r5372, %r5369, %r5370, 19;
	mov.b64 	%rd5126, {%r5372, %r5371};
	shf.l.wrap.b32 	%r5373, %r5369, %r5370, 3;
	shf.l.wrap.b32 	%r5374, %r5370, %r5369, 3;
	mov.b64 	%rd5127, {%r5374, %r5373};
	xor.b64  	%rd5128, %rd5126, %rd5127;
	shr.u64 	%rd5129, %rd5107, 6;
	xor.b64  	%rd5130, %rd5128, %rd5129;
	add.s64 	%rd5131, %rd5125, %rd4925;
	add.s64 	%rd5132, %rd5131, %rd5042;
	add.s64 	%rd5133, %rd5132, %rd5130;
	shf.r.wrap.b32 	%r5375, %r5250, %r5249, 1;
	shf.r.wrap.b32 	%r5376, %r5249, %r5250, 1;
	mov.b64 	%rd5134, {%r5376, %r5375};
	shf.r.wrap.b32 	%r5377, %r5250, %r5249, 8;
	shf.r.wrap.b32 	%r5378, %r5249, %r5250, 8;
	mov.b64 	%rd5135, {%r5378, %r5377};
	xor.b64  	%rd5136, %rd5134, %rd5135;
	shr.u64 	%rd5137, %rd4951, 7;
	xor.b64  	%rd5138, %rd5136, %rd5137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5379,%dummy}, %rd5120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5380}, %rd5120;
	}
	shf.r.wrap.b32 	%r5381, %r5380, %r5379, 19;
	shf.r.wrap.b32 	%r5382, %r5379, %r5380, 19;
	mov.b64 	%rd5139, {%r5382, %r5381};
	shf.l.wrap.b32 	%r5383, %r5379, %r5380, 3;
	shf.l.wrap.b32 	%r5384, %r5380, %r5379, 3;
	mov.b64 	%rd5140, {%r5384, %r5383};
	xor.b64  	%rd5141, %rd5139, %rd5140;
	shr.u64 	%rd5142, %rd5120, 6;
	xor.b64  	%rd5143, %rd5141, %rd5142;
	add.s64 	%rd5144, %rd5138, %rd4938;
	add.s64 	%rd5145, %rd5144, %rd5055;
	add.s64 	%rd5146, %rd5145, %rd5143;
	shf.r.wrap.b32 	%r5385, %r5260, %r5259, 1;
	shf.r.wrap.b32 	%r5386, %r5259, %r5260, 1;
	mov.b64 	%rd5147, {%r5386, %r5385};
	shf.r.wrap.b32 	%r5387, %r5260, %r5259, 8;
	shf.r.wrap.b32 	%r5388, %r5259, %r5260, 8;
	mov.b64 	%rd5148, {%r5388, %r5387};
	xor.b64  	%rd5149, %rd5147, %rd5148;
	shr.u64 	%rd5150, %rd4964, 7;
	xor.b64  	%rd5151, %rd5149, %rd5150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5389,%dummy}, %rd5133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5390}, %rd5133;
	}
	shf.r.wrap.b32 	%r5391, %r5390, %r5389, 19;
	shf.r.wrap.b32 	%r5392, %r5389, %r5390, 19;
	mov.b64 	%rd5152, {%r5392, %r5391};
	shf.l.wrap.b32 	%r5393, %r5389, %r5390, 3;
	shf.l.wrap.b32 	%r5394, %r5390, %r5389, 3;
	mov.b64 	%rd5153, {%r5394, %r5393};
	xor.b64  	%rd5154, %rd5152, %rd5153;
	shr.u64 	%rd5155, %rd5133, 6;
	xor.b64  	%rd5156, %rd5154, %rd5155;
	add.s64 	%rd5157, %rd5151, %rd4951;
	add.s64 	%rd5158, %rd5157, %rd5068;
	add.s64 	%rd5159, %rd5158, %rd5156;
	shf.r.wrap.b32 	%r5395, %r5270, %r5269, 1;
	shf.r.wrap.b32 	%r5396, %r5269, %r5270, 1;
	mov.b64 	%rd5160, {%r5396, %r5395};
	shf.r.wrap.b32 	%r5397, %r5270, %r5269, 8;
	shf.r.wrap.b32 	%r5398, %r5269, %r5270, 8;
	mov.b64 	%rd5161, {%r5398, %r5397};
	xor.b64  	%rd5162, %rd5160, %rd5161;
	shr.u64 	%rd5163, %rd4977, 7;
	xor.b64  	%rd5164, %rd5162, %rd5163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5399,%dummy}, %rd5146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5400}, %rd5146;
	}
	shf.r.wrap.b32 	%r5401, %r5400, %r5399, 19;
	shf.r.wrap.b32 	%r5402, %r5399, %r5400, 19;
	mov.b64 	%rd5165, {%r5402, %r5401};
	shf.l.wrap.b32 	%r5403, %r5399, %r5400, 3;
	shf.l.wrap.b32 	%r5404, %r5400, %r5399, 3;
	mov.b64 	%rd5166, {%r5404, %r5403};
	xor.b64  	%rd5167, %rd5165, %rd5166;
	shr.u64 	%rd5168, %rd5146, 6;
	xor.b64  	%rd5169, %rd5167, %rd5168;
	add.s64 	%rd5170, %rd5164, %rd4964;
	add.s64 	%rd5171, %rd5170, %rd5081;
	add.s64 	%rd5172, %rd5171, %rd5169;
	shf.r.wrap.b32 	%r5405, %r5280, %r5279, 1;
	shf.r.wrap.b32 	%r5406, %r5279, %r5280, 1;
	mov.b64 	%rd5173, {%r5406, %r5405};
	shf.r.wrap.b32 	%r5407, %r5280, %r5279, 8;
	shf.r.wrap.b32 	%r5408, %r5279, %r5280, 8;
	mov.b64 	%rd5174, {%r5408, %r5407};
	xor.b64  	%rd5175, %rd5173, %rd5174;
	shr.u64 	%rd5176, %rd4990, 7;
	xor.b64  	%rd5177, %rd5175, %rd5176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5409,%dummy}, %rd5159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5410}, %rd5159;
	}
	shf.r.wrap.b32 	%r5411, %r5410, %r5409, 19;
	shf.r.wrap.b32 	%r5412, %r5409, %r5410, 19;
	mov.b64 	%rd5178, {%r5412, %r5411};
	shf.l.wrap.b32 	%r5413, %r5409, %r5410, 3;
	shf.l.wrap.b32 	%r5414, %r5410, %r5409, 3;
	mov.b64 	%rd5179, {%r5414, %r5413};
	xor.b64  	%rd5180, %rd5178, %rd5179;
	shr.u64 	%rd5181, %rd5159, 6;
	xor.b64  	%rd5182, %rd5180, %rd5181;
	add.s64 	%rd5183, %rd5177, %rd4977;
	add.s64 	%rd5184, %rd5183, %rd5094;
	add.s64 	%rd5185, %rd5184, %rd5182;
	shf.r.wrap.b32 	%r5415, %r5290, %r5289, 1;
	shf.r.wrap.b32 	%r5416, %r5289, %r5290, 1;
	mov.b64 	%rd5186, {%r5416, %r5415};
	shf.r.wrap.b32 	%r5417, %r5290, %r5289, 8;
	shf.r.wrap.b32 	%r5418, %r5289, %r5290, 8;
	mov.b64 	%rd5187, {%r5418, %r5417};
	xor.b64  	%rd5188, %rd5186, %rd5187;
	shr.u64 	%rd5189, %rd5003, 7;
	xor.b64  	%rd5190, %rd5188, %rd5189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5419,%dummy}, %rd5172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5420}, %rd5172;
	}
	shf.r.wrap.b32 	%r5421, %r5420, %r5419, 19;
	shf.r.wrap.b32 	%r5422, %r5419, %r5420, 19;
	mov.b64 	%rd5191, {%r5422, %r5421};
	shf.l.wrap.b32 	%r5423, %r5419, %r5420, 3;
	shf.l.wrap.b32 	%r5424, %r5420, %r5419, 3;
	mov.b64 	%rd5192, {%r5424, %r5423};
	xor.b64  	%rd5193, %rd5191, %rd5192;
	shr.u64 	%rd5194, %rd5172, 6;
	xor.b64  	%rd5195, %rd5193, %rd5194;
	add.s64 	%rd5196, %rd5190, %rd4990;
	add.s64 	%rd5197, %rd5196, %rd5107;
	add.s64 	%rd5198, %rd5197, %rd5195;
	shf.r.wrap.b32 	%r5425, %r5300, %r5299, 1;
	shf.r.wrap.b32 	%r5426, %r5299, %r5300, 1;
	mov.b64 	%rd5199, {%r5426, %r5425};
	shf.r.wrap.b32 	%r5427, %r5300, %r5299, 8;
	shf.r.wrap.b32 	%r5428, %r5299, %r5300, 8;
	mov.b64 	%rd5200, {%r5428, %r5427};
	xor.b64  	%rd5201, %rd5199, %rd5200;
	shr.u64 	%rd5202, %rd5016, 7;
	xor.b64  	%rd5203, %rd5201, %rd5202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5429,%dummy}, %rd5185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5430}, %rd5185;
	}
	shf.r.wrap.b32 	%r5431, %r5430, %r5429, 19;
	shf.r.wrap.b32 	%r5432, %r5429, %r5430, 19;
	mov.b64 	%rd5204, {%r5432, %r5431};
	shf.l.wrap.b32 	%r5433, %r5429, %r5430, 3;
	shf.l.wrap.b32 	%r5434, %r5430, %r5429, 3;
	mov.b64 	%rd5205, {%r5434, %r5433};
	xor.b64  	%rd5206, %rd5204, %rd5205;
	shr.u64 	%rd5207, %rd5185, 6;
	xor.b64  	%rd5208, %rd5206, %rd5207;
	add.s64 	%rd5209, %rd5203, %rd5003;
	add.s64 	%rd5210, %rd5209, %rd5120;
	add.s64 	%rd5211, %rd5210, %rd5208;
	shf.r.wrap.b32 	%r5435, %r5310, %r5309, 1;
	shf.r.wrap.b32 	%r5436, %r5309, %r5310, 1;
	mov.b64 	%rd5212, {%r5436, %r5435};
	shf.r.wrap.b32 	%r5437, %r5310, %r5309, 8;
	shf.r.wrap.b32 	%r5438, %r5309, %r5310, 8;
	mov.b64 	%rd5213, {%r5438, %r5437};
	xor.b64  	%rd5214, %rd5212, %rd5213;
	shr.u64 	%rd5215, %rd5029, 7;
	xor.b64  	%rd5216, %rd5214, %rd5215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5439,%dummy}, %rd5198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5440}, %rd5198;
	}
	shf.r.wrap.b32 	%r5441, %r5440, %r5439, 19;
	shf.r.wrap.b32 	%r5442, %r5439, %r5440, 19;
	mov.b64 	%rd5217, {%r5442, %r5441};
	shf.l.wrap.b32 	%r5443, %r5439, %r5440, 3;
	shf.l.wrap.b32 	%r5444, %r5440, %r5439, 3;
	mov.b64 	%rd5218, {%r5444, %r5443};
	xor.b64  	%rd5219, %rd5217, %rd5218;
	shr.u64 	%rd5220, %rd5198, 6;
	xor.b64  	%rd5221, %rd5219, %rd5220;
	add.s64 	%rd5222, %rd5216, %rd5016;
	add.s64 	%rd5223, %rd5222, %rd5133;
	add.s64 	%rd5224, %rd5223, %rd5221;
	shf.r.wrap.b32 	%r5445, %r5320, %r5319, 1;
	shf.r.wrap.b32 	%r5446, %r5319, %r5320, 1;
	mov.b64 	%rd5225, {%r5446, %r5445};
	shf.r.wrap.b32 	%r5447, %r5320, %r5319, 8;
	shf.r.wrap.b32 	%r5448, %r5319, %r5320, 8;
	mov.b64 	%rd5226, {%r5448, %r5447};
	xor.b64  	%rd5227, %rd5225, %rd5226;
	shr.u64 	%rd5228, %rd5042, 7;
	xor.b64  	%rd5229, %rd5227, %rd5228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5449,%dummy}, %rd5211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5450}, %rd5211;
	}
	shf.r.wrap.b32 	%r5451, %r5450, %r5449, 19;
	shf.r.wrap.b32 	%r5452, %r5449, %r5450, 19;
	mov.b64 	%rd5230, {%r5452, %r5451};
	shf.l.wrap.b32 	%r5453, %r5449, %r5450, 3;
	shf.l.wrap.b32 	%r5454, %r5450, %r5449, 3;
	mov.b64 	%rd5231, {%r5454, %r5453};
	xor.b64  	%rd5232, %rd5230, %rd5231;
	shr.u64 	%rd5233, %rd5211, 6;
	xor.b64  	%rd5234, %rd5232, %rd5233;
	add.s64 	%rd5235, %rd5229, %rd5029;
	add.s64 	%rd5236, %rd5235, %rd5146;
	add.s64 	%rd5237, %rd5236, %rd5234;
	shf.r.wrap.b32 	%r5455, %r5330, %r5329, 1;
	shf.r.wrap.b32 	%r5456, %r5329, %r5330, 1;
	mov.b64 	%rd5238, {%r5456, %r5455};
	shf.r.wrap.b32 	%r5457, %r5330, %r5329, 8;
	shf.r.wrap.b32 	%r5458, %r5329, %r5330, 8;
	mov.b64 	%rd5239, {%r5458, %r5457};
	xor.b64  	%rd5240, %rd5238, %rd5239;
	shr.u64 	%rd5241, %rd5055, 7;
	xor.b64  	%rd5242, %rd5240, %rd5241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5459,%dummy}, %rd5224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5460}, %rd5224;
	}
	shf.r.wrap.b32 	%r5461, %r5460, %r5459, 19;
	shf.r.wrap.b32 	%r5462, %r5459, %r5460, 19;
	mov.b64 	%rd5243, {%r5462, %r5461};
	shf.l.wrap.b32 	%r5463, %r5459, %r5460, 3;
	shf.l.wrap.b32 	%r5464, %r5460, %r5459, 3;
	mov.b64 	%rd5244, {%r5464, %r5463};
	xor.b64  	%rd5245, %rd5243, %rd5244;
	shr.u64 	%rd5246, %rd5224, 6;
	xor.b64  	%rd5247, %rd5245, %rd5246;
	add.s64 	%rd5248, %rd5242, %rd5042;
	add.s64 	%rd5249, %rd5248, %rd5159;
	add.s64 	%rd5250, %rd5249, %rd5247;
	shf.r.wrap.b32 	%r5465, %r5340, %r5339, 1;
	shf.r.wrap.b32 	%r5466, %r5339, %r5340, 1;
	mov.b64 	%rd5251, {%r5466, %r5465};
	shf.r.wrap.b32 	%r5467, %r5340, %r5339, 8;
	shf.r.wrap.b32 	%r5468, %r5339, %r5340, 8;
	mov.b64 	%rd5252, {%r5468, %r5467};
	xor.b64  	%rd5253, %rd5251, %rd5252;
	shr.u64 	%rd5254, %rd5068, 7;
	xor.b64  	%rd5255, %rd5253, %rd5254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5469,%dummy}, %rd5237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5470}, %rd5237;
	}
	shf.r.wrap.b32 	%r5471, %r5470, %r5469, 19;
	shf.r.wrap.b32 	%r5472, %r5469, %r5470, 19;
	mov.b64 	%rd5256, {%r5472, %r5471};
	shf.l.wrap.b32 	%r5473, %r5469, %r5470, 3;
	shf.l.wrap.b32 	%r5474, %r5470, %r5469, 3;
	mov.b64 	%rd5257, {%r5474, %r5473};
	xor.b64  	%rd5258, %rd5256, %rd5257;
	shr.u64 	%rd5259, %rd5237, 6;
	xor.b64  	%rd5260, %rd5258, %rd5259;
	add.s64 	%rd5261, %rd5255, %rd5055;
	add.s64 	%rd5262, %rd5261, %rd5172;
	add.s64 	%rd5263, %rd5262, %rd5260;
	add.s64 	%rd5264, %rd40, %rd4131;
	add.s64 	%rd5265, %rd5264, -6534734903238641935;
	add.s64 	%rd5266, %rd120, %rd5264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5475,%dummy}, %rd5265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5476}, %rd5265;
	}
	shf.r.wrap.b32 	%r5477, %r5476, %r5475, 14;
	shf.r.wrap.b32 	%r5478, %r5475, %r5476, 14;
	mov.b64 	%rd5267, {%r5478, %r5477};
	shf.r.wrap.b32 	%r5479, %r5476, %r5475, 18;
	shf.r.wrap.b32 	%r5480, %r5475, %r5476, 18;
	mov.b64 	%rd5268, {%r5480, %r5479};
	xor.b64  	%rd5269, %rd5267, %rd5268;
	shf.l.wrap.b32 	%r5481, %r5475, %r5476, 23;
	shf.l.wrap.b32 	%r5482, %r5476, %r5475, 23;
	mov.b64 	%rd5270, {%r5482, %r5481};
	xor.b64  	%rd5271, %rd5269, %rd5270;
	and.b64  	%rd5272, %rd5265, 5840696475078001361;
	mov.u64 	%rd5273, 6534734903238641934;
	sub.s64 	%rd5274, %rd5273, %rd5264;
	and.b64  	%rd5275, %rd5274, -7276294671716946913;
	or.b64  	%rd5276, %rd5272, %rd5275;
	add.s64 	%rd5277, %rd5276, %rd5271;
	add.s64 	%rd5278, %rd5277, %rd41;
	add.s64 	%rd5279, %rd5278, %rd4151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5483,%dummy}, %rd5266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5484}, %rd5266;
	}
	shf.r.wrap.b32 	%r5485, %r5484, %r5483, 28;
	shf.r.wrap.b32 	%r5486, %r5483, %r5484, 28;
	mov.b64 	%rd5280, {%r5486, %r5485};
	shf.l.wrap.b32 	%r5487, %r5483, %r5484, 30;
	shf.l.wrap.b32 	%r5488, %r5484, %r5483, 30;
	mov.b64 	%rd5281, {%r5488, %r5487};
	xor.b64  	%rd5282, %rd5280, %rd5281;
	shf.l.wrap.b32 	%r5489, %r5483, %r5484, 25;
	shf.l.wrap.b32 	%r5490, %r5484, %r5483, 25;
	mov.b64 	%rd5283, {%r5490, %r5489};
	xor.b64  	%rd5284, %rd5282, %rd5283;
	and.b64  	%rd5285, %rd5266, -3355664534840381901;
	or.b64  	%rd5286, %rd5285, 3026882967131160840;
	add.s64 	%rd5287, %rd5284, %rd5286;
	add.s64 	%rd5288, %rd5287, %rd5279;
	add.s64 	%rd5289, %rd5279, 6625583534739731862;
	add.s64 	%rd5290, %rd5288, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5491,%dummy}, %rd5289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5492}, %rd5289;
	}
	shf.r.wrap.b32 	%r5493, %r5492, %r5491, 14;
	shf.r.wrap.b32 	%r5494, %r5491, %r5492, 14;
	mov.b64 	%rd5291, {%r5494, %r5493};
	shf.r.wrap.b32 	%r5495, %r5492, %r5491, 18;
	shf.r.wrap.b32 	%r5496, %r5491, %r5492, 18;
	mov.b64 	%rd5292, {%r5496, %r5495};
	xor.b64  	%rd5293, %rd5291, %rd5292;
	shf.l.wrap.b32 	%r5497, %r5491, %r5492, 23;
	shf.l.wrap.b32 	%r5498, %r5492, %r5491, 23;
	mov.b64 	%rd5294, {%r5498, %r5497};
	xor.b64  	%rd5295, %rd5293, %rd5294;
	and.b64  	%rd5296, %rd5289, %rd5265;
	mov.u64 	%rd5297, 2597788502115043945;
	sub.s64 	%rd5298, %rd5297, %rd5279;
	and.b64  	%rd5299, %rd5298, 5840696475078001361;
	or.b64  	%rd5300, %rd5296, %rd5299;
	add.s64 	%rd5301, %rd5300, %rd5295;
	add.s64 	%rd5302, %rd5301, %rd42;
	add.s64 	%rd5303, %rd5302, %rd4171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5499,%dummy}, %rd5290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5500}, %rd5290;
	}
	shf.r.wrap.b32 	%r5501, %r5500, %r5499, 28;
	shf.r.wrap.b32 	%r5502, %r5499, %r5500, 28;
	mov.b64 	%rd5304, {%r5502, %r5501};
	shf.l.wrap.b32 	%r5503, %r5499, %r5500, 30;
	shf.l.wrap.b32 	%r5504, %r5500, %r5499, 30;
	mov.b64 	%rd5305, {%r5504, %r5503};
	xor.b64  	%rd5306, %rd5304, %rd5305;
	shf.l.wrap.b32 	%r5505, %r5499, %r5500, 25;
	shf.l.wrap.b32 	%r5506, %r5500, %r5499, 25;
	mov.b64 	%rd5307, {%r5506, %r5505};
	xor.b64  	%rd5308, %rd5306, %rd5307;
	xor.b64  	%rd5309, %rd5266, 7640891576956012808;
	and.b64  	%rd5310, %rd5290, %rd5309;
	and.b64  	%rd5311, %rd5266, 7640891576956012808;
	xor.b64  	%rd5312, %rd5310, %rd5311;
	add.s64 	%rd5313, %rd5308, %rd5312;
	add.s64 	%rd5314, %rd5313, %rd5303;
	add.s64 	%rd5315, %rd5303, 6227659224458531674;
	add.s64 	%rd5316, %rd5314, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5507,%dummy}, %rd5315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5508}, %rd5315;
	}
	shf.r.wrap.b32 	%r5509, %r5508, %r5507, 14;
	shf.r.wrap.b32 	%r5510, %r5507, %r5508, 14;
	mov.b64 	%rd5317, {%r5510, %r5509};
	shf.r.wrap.b32 	%r5511, %r5508, %r5507, 18;
	shf.r.wrap.b32 	%r5512, %r5507, %r5508, 18;
	mov.b64 	%rd5318, {%r5512, %r5511};
	xor.b64  	%rd5319, %rd5317, %rd5318;
	shf.l.wrap.b32 	%r5513, %r5507, %r5508, 23;
	shf.l.wrap.b32 	%r5514, %r5508, %r5507, 23;
	mov.b64 	%rd5320, {%r5514, %r5513};
	xor.b64  	%rd5321, %rd5319, %rd5320;
	and.b64  	%rd5322, %rd5315, %rd5289;
	mov.u64 	%rd5323, -6227659224458531675;
	sub.s64 	%rd5324, %rd5323, %rd5303;
	and.b64  	%rd5325, %rd5265, %rd5324;
	or.b64  	%rd5326, %rd5322, %rd5325;
	add.s64 	%rd5327, %rd5326, %rd5321;
	add.s64 	%rd5328, %rd5327, %rd43;
	add.s64 	%rd5329, %rd5328, %rd4191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5515,%dummy}, %rd5316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5516}, %rd5316;
	}
	shf.r.wrap.b32 	%r5517, %r5516, %r5515, 28;
	shf.r.wrap.b32 	%r5518, %r5515, %r5516, 28;
	mov.b64 	%rd5330, {%r5518, %r5517};
	shf.l.wrap.b32 	%r5519, %r5515, %r5516, 30;
	shf.l.wrap.b32 	%r5520, %r5516, %r5515, 30;
	mov.b64 	%rd5331, {%r5520, %r5519};
	xor.b64  	%rd5332, %rd5330, %rd5331;
	shf.l.wrap.b32 	%r5521, %r5515, %r5516, 25;
	shf.l.wrap.b32 	%r5522, %r5516, %r5515, 25;
	mov.b64 	%rd5333, {%r5522, %r5521};
	xor.b64  	%rd5334, %rd5332, %rd5333;
	xor.b64  	%rd5335, %rd5290, %rd5266;
	and.b64  	%rd5336, %rd5316, %rd5335;
	and.b64  	%rd5337, %rd5290, %rd5266;
	xor.b64  	%rd5338, %rd5336, %rd5337;
	add.s64 	%rd5339, %rd5334, %rd5338;
	add.s64 	%rd5340, %rd5339, %rd5329;
	add.s64 	%rd5341, %rd5329, -4965156021675537447;
	add.s64 	%rd5342, %rd5340, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5523,%dummy}, %rd5341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5524}, %rd5341;
	}
	shf.r.wrap.b32 	%r5525, %r5524, %r5523, 14;
	shf.r.wrap.b32 	%r5526, %r5523, %r5524, 14;
	mov.b64 	%rd5343, {%r5526, %r5525};
	shf.r.wrap.b32 	%r5527, %r5524, %r5523, 18;
	shf.r.wrap.b32 	%r5528, %r5523, %r5524, 18;
	mov.b64 	%rd5344, {%r5528, %r5527};
	xor.b64  	%rd5345, %rd5343, %rd5344;
	shf.l.wrap.b32 	%r5529, %r5523, %r5524, 23;
	shf.l.wrap.b32 	%r5530, %r5524, %r5523, 23;
	mov.b64 	%rd5346, {%r5530, %r5529};
	xor.b64  	%rd5347, %rd5345, %rd5346;
	and.b64  	%rd5348, %rd5341, %rd5315;
	mov.u64 	%rd5349, 4965156021675537446;
	sub.s64 	%rd5350, %rd5349, %rd5329;
	and.b64  	%rd5351, %rd5289, %rd5350;
	or.b64  	%rd5352, %rd5348, %rd5351;
	add.s64 	%rd5353, %rd5352, %rd5265;
	add.s64 	%rd5354, %rd5353, %rd5347;
	add.s64 	%rd5355, %rd5354, %rd44;
	add.s64 	%rd5356, %rd5355, %rd4211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5531,%dummy}, %rd5342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5532}, %rd5342;
	}
	shf.r.wrap.b32 	%r5533, %r5532, %r5531, 28;
	shf.r.wrap.b32 	%r5534, %r5531, %r5532, 28;
	mov.b64 	%rd5357, {%r5534, %r5533};
	shf.l.wrap.b32 	%r5535, %r5531, %r5532, 30;
	shf.l.wrap.b32 	%r5536, %r5532, %r5531, 30;
	mov.b64 	%rd5358, {%r5536, %r5535};
	xor.b64  	%rd5359, %rd5357, %rd5358;
	shf.l.wrap.b32 	%r5537, %r5531, %r5532, 25;
	shf.l.wrap.b32 	%r5538, %r5532, %r5531, 25;
	mov.b64 	%rd5360, {%r5538, %r5537};
	xor.b64  	%rd5361, %rd5359, %rd5360;
	xor.b64  	%rd5362, %rd5316, %rd5290;
	and.b64  	%rd5363, %rd5342, %rd5362;
	and.b64  	%rd5364, %rd5316, %rd5290;
	xor.b64  	%rd5365, %rd5363, %rd5364;
	add.s64 	%rd5366, %rd5361, %rd5365;
	add.s64 	%rd5367, %rd5356, %rd5266;
	add.s64 	%rd5368, %rd5366, %rd5356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5539,%dummy}, %rd5367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5540}, %rd5367;
	}
	shf.r.wrap.b32 	%r5541, %r5540, %r5539, 14;
	shf.r.wrap.b32 	%r5542, %r5539, %r5540, 14;
	mov.b64 	%rd5369, {%r5542, %r5541};
	shf.r.wrap.b32 	%r5543, %r5540, %r5539, 18;
	shf.r.wrap.b32 	%r5544, %r5539, %r5540, 18;
	mov.b64 	%rd5370, {%r5544, %r5543};
	xor.b64  	%rd5371, %rd5369, %rd5370;
	shf.l.wrap.b32 	%r5545, %r5539, %r5540, 23;
	shf.l.wrap.b32 	%r5546, %r5540, %r5539, 23;
	mov.b64 	%rd5372, {%r5546, %r5545};
	xor.b64  	%rd5373, %rd5371, %rd5372;
	and.b64  	%rd5374, %rd5367, %rd5341;
	not.b64 	%rd5375, %rd5367;
	and.b64  	%rd5376, %rd5315, %rd5375;
	or.b64  	%rd5377, %rd5374, %rd5376;
	add.s64 	%rd5378, %rd5377, %rd5289;
	add.s64 	%rd5379, %rd5378, %rd5373;
	add.s64 	%rd5380, %rd5379, %rd45;
	add.s64 	%rd5381, %rd5380, %rd4231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5547,%dummy}, %rd5368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5548}, %rd5368;
	}
	shf.r.wrap.b32 	%r5549, %r5548, %r5547, 28;
	shf.r.wrap.b32 	%r5550, %r5547, %r5548, 28;
	mov.b64 	%rd5382, {%r5550, %r5549};
	shf.l.wrap.b32 	%r5551, %r5547, %r5548, 30;
	shf.l.wrap.b32 	%r5552, %r5548, %r5547, 30;
	mov.b64 	%rd5383, {%r5552, %r5551};
	xor.b64  	%rd5384, %rd5382, %rd5383;
	shf.l.wrap.b32 	%r5553, %r5547, %r5548, 25;
	shf.l.wrap.b32 	%r5554, %r5548, %r5547, 25;
	mov.b64 	%rd5385, {%r5554, %r5553};
	xor.b64  	%rd5386, %rd5384, %rd5385;
	xor.b64  	%rd5387, %rd5342, %rd5316;
	and.b64  	%rd5388, %rd5368, %rd5387;
	and.b64  	%rd5389, %rd5342, %rd5316;
	xor.b64  	%rd5390, %rd5388, %rd5389;
	add.s64 	%rd5391, %rd5386, %rd5390;
	add.s64 	%rd5392, %rd5381, %rd5290;
	add.s64 	%rd5393, %rd5391, %rd5381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5555,%dummy}, %rd5392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5556}, %rd5392;
	}
	shf.r.wrap.b32 	%r5557, %r5556, %r5555, 14;
	shf.r.wrap.b32 	%r5558, %r5555, %r5556, 14;
	mov.b64 	%rd5394, {%r5558, %r5557};
	shf.r.wrap.b32 	%r5559, %r5556, %r5555, 18;
	shf.r.wrap.b32 	%r5560, %r5555, %r5556, 18;
	mov.b64 	%rd5395, {%r5560, %r5559};
	xor.b64  	%rd5396, %rd5394, %rd5395;
	shf.l.wrap.b32 	%r5561, %r5555, %r5556, 23;
	shf.l.wrap.b32 	%r5562, %r5556, %r5555, 23;
	mov.b64 	%rd5397, {%r5562, %r5561};
	xor.b64  	%rd5398, %rd5396, %rd5397;
	and.b64  	%rd5399, %rd5392, %rd5367;
	not.b64 	%rd5400, %rd5392;
	and.b64  	%rd5401, %rd5341, %rd5400;
	or.b64  	%rd5402, %rd5399, %rd5401;
	add.s64 	%rd5403, %rd5402, %rd5315;
	add.s64 	%rd5404, %rd5403, %rd5398;
	add.s64 	%rd5405, %rd5404, %rd46;
	add.s64 	%rd5406, %rd5405, %rd4251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5563,%dummy}, %rd5393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5564}, %rd5393;
	}
	shf.r.wrap.b32 	%r5565, %r5564, %r5563, 28;
	shf.r.wrap.b32 	%r5566, %r5563, %r5564, 28;
	mov.b64 	%rd5407, {%r5566, %r5565};
	shf.l.wrap.b32 	%r5567, %r5563, %r5564, 30;
	shf.l.wrap.b32 	%r5568, %r5564, %r5563, 30;
	mov.b64 	%rd5408, {%r5568, %r5567};
	xor.b64  	%rd5409, %rd5407, %rd5408;
	shf.l.wrap.b32 	%r5569, %r5563, %r5564, 25;
	shf.l.wrap.b32 	%r5570, %r5564, %r5563, 25;
	mov.b64 	%rd5410, {%r5570, %r5569};
	xor.b64  	%rd5411, %rd5409, %rd5410;
	xor.b64  	%rd5412, %rd5368, %rd5342;
	and.b64  	%rd5413, %rd5393, %rd5412;
	and.b64  	%rd5414, %rd5368, %rd5342;
	xor.b64  	%rd5415, %rd5413, %rd5414;
	add.s64 	%rd5416, %rd5411, %rd5415;
	add.s64 	%rd5417, %rd5406, %rd5316;
	add.s64 	%rd5418, %rd5416, %rd5406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5571,%dummy}, %rd5417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5572}, %rd5417;
	}
	shf.r.wrap.b32 	%r5573, %r5572, %r5571, 14;
	shf.r.wrap.b32 	%r5574, %r5571, %r5572, 14;
	mov.b64 	%rd5419, {%r5574, %r5573};
	shf.r.wrap.b32 	%r5575, %r5572, %r5571, 18;
	shf.r.wrap.b32 	%r5576, %r5571, %r5572, 18;
	mov.b64 	%rd5420, {%r5576, %r5575};
	xor.b64  	%rd5421, %rd5419, %rd5420;
	shf.l.wrap.b32 	%r5577, %r5571, %r5572, 23;
	shf.l.wrap.b32 	%r5578, %r5572, %r5571, 23;
	mov.b64 	%rd5422, {%r5578, %r5577};
	xor.b64  	%rd5423, %rd5421, %rd5422;
	and.b64  	%rd5424, %rd5417, %rd5392;
	not.b64 	%rd5425, %rd5417;
	and.b64  	%rd5426, %rd5367, %rd5425;
	or.b64  	%rd5427, %rd5424, %rd5426;
	add.s64 	%rd5428, %rd5427, %rd5341;
	add.s64 	%rd5429, %rd5428, %rd5423;
	add.s64 	%rd5430, %rd5429, %rd47;
	add.s64 	%rd5431, %rd5430, %rd4271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5579,%dummy}, %rd5418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5580}, %rd5418;
	}
	shf.r.wrap.b32 	%r5581, %r5580, %r5579, 28;
	shf.r.wrap.b32 	%r5582, %r5579, %r5580, 28;
	mov.b64 	%rd5432, {%r5582, %r5581};
	shf.l.wrap.b32 	%r5583, %r5579, %r5580, 30;
	shf.l.wrap.b32 	%r5584, %r5580, %r5579, 30;
	mov.b64 	%rd5433, {%r5584, %r5583};
	xor.b64  	%rd5434, %rd5432, %rd5433;
	shf.l.wrap.b32 	%r5585, %r5579, %r5580, 25;
	shf.l.wrap.b32 	%r5586, %r5580, %r5579, 25;
	mov.b64 	%rd5435, {%r5586, %r5585};
	xor.b64  	%rd5436, %rd5434, %rd5435;
	xor.b64  	%rd5437, %rd5393, %rd5368;
	and.b64  	%rd5438, %rd5418, %rd5437;
	and.b64  	%rd5439, %rd5393, %rd5368;
	xor.b64  	%rd5440, %rd5438, %rd5439;
	add.s64 	%rd5441, %rd5436, %rd5440;
	add.s64 	%rd5442, %rd5431, %rd5342;
	add.s64 	%rd5443, %rd5441, %rd5431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5587,%dummy}, %rd5442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5588}, %rd5442;
	}
	shf.r.wrap.b32 	%r5589, %r5588, %r5587, 14;
	shf.r.wrap.b32 	%r5590, %r5587, %r5588, 14;
	mov.b64 	%rd5444, {%r5590, %r5589};
	shf.r.wrap.b32 	%r5591, %r5588, %r5587, 18;
	shf.r.wrap.b32 	%r5592, %r5587, %r5588, 18;
	mov.b64 	%rd5445, {%r5592, %r5591};
	xor.b64  	%rd5446, %rd5444, %rd5445;
	shf.l.wrap.b32 	%r5593, %r5587, %r5588, 23;
	shf.l.wrap.b32 	%r5594, %r5588, %r5587, 23;
	mov.b64 	%rd5447, {%r5594, %r5593};
	xor.b64  	%rd5448, %rd5446, %rd5447;
	and.b64  	%rd5449, %rd5442, %rd5417;
	not.b64 	%rd5450, %rd5442;
	and.b64  	%rd5451, %rd5392, %rd5450;
	or.b64  	%rd5452, %rd5449, %rd5451;
	add.s64 	%rd5453, %rd5452, %rd5367;
	add.s64 	%rd5454, %rd5453, %rd5448;
	add.s64 	%rd5455, %rd5454, %rd48;
	add.s64 	%rd5456, %rd5455, %rd4291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5595,%dummy}, %rd5443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5596}, %rd5443;
	}
	shf.r.wrap.b32 	%r5597, %r5596, %r5595, 28;
	shf.r.wrap.b32 	%r5598, %r5595, %r5596, 28;
	mov.b64 	%rd5457, {%r5598, %r5597};
	shf.l.wrap.b32 	%r5599, %r5595, %r5596, 30;
	shf.l.wrap.b32 	%r5600, %r5596, %r5595, 30;
	mov.b64 	%rd5458, {%r5600, %r5599};
	xor.b64  	%rd5459, %rd5457, %rd5458;
	shf.l.wrap.b32 	%r5601, %r5595, %r5596, 25;
	shf.l.wrap.b32 	%r5602, %r5596, %r5595, 25;
	mov.b64 	%rd5460, {%r5602, %r5601};
	xor.b64  	%rd5461, %rd5459, %rd5460;
	xor.b64  	%rd5462, %rd5418, %rd5393;
	and.b64  	%rd5463, %rd5443, %rd5462;
	and.b64  	%rd5464, %rd5418, %rd5393;
	xor.b64  	%rd5465, %rd5463, %rd5464;
	add.s64 	%rd5466, %rd5461, %rd5465;
	add.s64 	%rd5467, %rd5456, %rd5368;
	add.s64 	%rd5468, %rd5466, %rd5456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5603,%dummy}, %rd5467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5604}, %rd5467;
	}
	shf.r.wrap.b32 	%r5605, %r5604, %r5603, 14;
	shf.r.wrap.b32 	%r5606, %r5603, %r5604, 14;
	mov.b64 	%rd5469, {%r5606, %r5605};
	shf.r.wrap.b32 	%r5607, %r5604, %r5603, 18;
	shf.r.wrap.b32 	%r5608, %r5603, %r5604, 18;
	mov.b64 	%rd5470, {%r5608, %r5607};
	xor.b64  	%rd5471, %rd5469, %rd5470;
	shf.l.wrap.b32 	%r5609, %r5603, %r5604, 23;
	shf.l.wrap.b32 	%r5610, %r5604, %r5603, 23;
	mov.b64 	%rd5472, {%r5610, %r5609};
	xor.b64  	%rd5473, %rd5471, %rd5472;
	and.b64  	%rd5474, %rd5467, %rd5442;
	not.b64 	%rd5475, %rd5467;
	and.b64  	%rd5476, %rd5417, %rd5475;
	or.b64  	%rd5477, %rd5474, %rd5476;
	add.s64 	%rd5478, %rd5477, %rd5392;
	add.s64 	%rd5479, %rd5478, %rd5473;
	add.s64 	%rd5480, %rd5479, %rd49;
	add.s64 	%rd5481, %rd5480, %rd4311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5611,%dummy}, %rd5468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5612}, %rd5468;
	}
	shf.r.wrap.b32 	%r5613, %r5612, %r5611, 28;
	shf.r.wrap.b32 	%r5614, %r5611, %r5612, 28;
	mov.b64 	%rd5482, {%r5614, %r5613};
	shf.l.wrap.b32 	%r5615, %r5611, %r5612, 30;
	shf.l.wrap.b32 	%r5616, %r5612, %r5611, 30;
	mov.b64 	%rd5483, {%r5616, %r5615};
	xor.b64  	%rd5484, %rd5482, %rd5483;
	shf.l.wrap.b32 	%r5617, %r5611, %r5612, 25;
	shf.l.wrap.b32 	%r5618, %r5612, %r5611, 25;
	mov.b64 	%rd5485, {%r5618, %r5617};
	xor.b64  	%rd5486, %rd5484, %rd5485;
	xor.b64  	%rd5487, %rd5443, %rd5418;
	and.b64  	%rd5488, %rd5468, %rd5487;
	and.b64  	%rd5489, %rd5443, %rd5418;
	xor.b64  	%rd5490, %rd5488, %rd5489;
	add.s64 	%rd5491, %rd5486, %rd5490;
	add.s64 	%rd5492, %rd5481, %rd5393;
	add.s64 	%rd5493, %rd5491, %rd5481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5619,%dummy}, %rd5492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5620}, %rd5492;
	}
	shf.r.wrap.b32 	%r5621, %r5620, %r5619, 14;
	shf.r.wrap.b32 	%r5622, %r5619, %r5620, 14;
	mov.b64 	%rd5494, {%r5622, %r5621};
	shf.r.wrap.b32 	%r5623, %r5620, %r5619, 18;
	shf.r.wrap.b32 	%r5624, %r5619, %r5620, 18;
	mov.b64 	%rd5495, {%r5624, %r5623};
	xor.b64  	%rd5496, %rd5494, %rd5495;
	shf.l.wrap.b32 	%r5625, %r5619, %r5620, 23;
	shf.l.wrap.b32 	%r5626, %r5620, %r5619, 23;
	mov.b64 	%rd5497, {%r5626, %r5625};
	xor.b64  	%rd5498, %rd5496, %rd5497;
	and.b64  	%rd5499, %rd5492, %rd5467;
	not.b64 	%rd5500, %rd5492;
	and.b64  	%rd5501, %rd5442, %rd5500;
	or.b64  	%rd5502, %rd5499, %rd5501;
	add.s64 	%rd5503, %rd5502, %rd5417;
	add.s64 	%rd5504, %rd5503, %rd5498;
	add.s64 	%rd5505, %rd5504, %rd50;
	add.s64 	%rd5506, %rd5505, %rd4331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5627,%dummy}, %rd5493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5628}, %rd5493;
	}
	shf.r.wrap.b32 	%r5629, %r5628, %r5627, 28;
	shf.r.wrap.b32 	%r5630, %r5627, %r5628, 28;
	mov.b64 	%rd5507, {%r5630, %r5629};
	shf.l.wrap.b32 	%r5631, %r5627, %r5628, 30;
	shf.l.wrap.b32 	%r5632, %r5628, %r5627, 30;
	mov.b64 	%rd5508, {%r5632, %r5631};
	xor.b64  	%rd5509, %rd5507, %rd5508;
	shf.l.wrap.b32 	%r5633, %r5627, %r5628, 25;
	shf.l.wrap.b32 	%r5634, %r5628, %r5627, 25;
	mov.b64 	%rd5510, {%r5634, %r5633};
	xor.b64  	%rd5511, %rd5509, %rd5510;
	xor.b64  	%rd5512, %rd5468, %rd5443;
	and.b64  	%rd5513, %rd5493, %rd5512;
	and.b64  	%rd5514, %rd5468, %rd5443;
	xor.b64  	%rd5515, %rd5513, %rd5514;
	add.s64 	%rd5516, %rd5511, %rd5515;
	add.s64 	%rd5517, %rd5506, %rd5418;
	add.s64 	%rd5518, %rd5516, %rd5506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5635,%dummy}, %rd5517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5636}, %rd5517;
	}
	shf.r.wrap.b32 	%r5637, %r5636, %r5635, 14;
	shf.r.wrap.b32 	%r5638, %r5635, %r5636, 14;
	mov.b64 	%rd5519, {%r5638, %r5637};
	shf.r.wrap.b32 	%r5639, %r5636, %r5635, 18;
	shf.r.wrap.b32 	%r5640, %r5635, %r5636, 18;
	mov.b64 	%rd5520, {%r5640, %r5639};
	xor.b64  	%rd5521, %rd5519, %rd5520;
	shf.l.wrap.b32 	%r5641, %r5635, %r5636, 23;
	shf.l.wrap.b32 	%r5642, %r5636, %r5635, 23;
	mov.b64 	%rd5522, {%r5642, %r5641};
	xor.b64  	%rd5523, %rd5521, %rd5522;
	and.b64  	%rd5524, %rd5517, %rd5492;
	not.b64 	%rd5525, %rd5517;
	and.b64  	%rd5526, %rd5467, %rd5525;
	or.b64  	%rd5527, %rd5524, %rd5526;
	add.s64 	%rd5528, %rd5527, %rd5442;
	add.s64 	%rd5529, %rd5528, %rd5523;
	add.s64 	%rd5530, %rd5529, %rd51;
	add.s64 	%rd5531, %rd5530, %rd4351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5643,%dummy}, %rd5518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5644}, %rd5518;
	}
	shf.r.wrap.b32 	%r5645, %r5644, %r5643, 28;
	shf.r.wrap.b32 	%r5646, %r5643, %r5644, 28;
	mov.b64 	%rd5532, {%r5646, %r5645};
	shf.l.wrap.b32 	%r5647, %r5643, %r5644, 30;
	shf.l.wrap.b32 	%r5648, %r5644, %r5643, 30;
	mov.b64 	%rd5533, {%r5648, %r5647};
	xor.b64  	%rd5534, %rd5532, %rd5533;
	shf.l.wrap.b32 	%r5649, %r5643, %r5644, 25;
	shf.l.wrap.b32 	%r5650, %r5644, %r5643, 25;
	mov.b64 	%rd5535, {%r5650, %r5649};
	xor.b64  	%rd5536, %rd5534, %rd5535;
	xor.b64  	%rd5537, %rd5493, %rd5468;
	and.b64  	%rd5538, %rd5518, %rd5537;
	and.b64  	%rd5539, %rd5493, %rd5468;
	xor.b64  	%rd5540, %rd5538, %rd5539;
	add.s64 	%rd5541, %rd5536, %rd5540;
	add.s64 	%rd5542, %rd5531, %rd5443;
	add.s64 	%rd5543, %rd5541, %rd5531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5651,%dummy}, %rd5542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5652}, %rd5542;
	}
	shf.r.wrap.b32 	%r5653, %r5652, %r5651, 14;
	shf.r.wrap.b32 	%r5654, %r5651, %r5652, 14;
	mov.b64 	%rd5544, {%r5654, %r5653};
	shf.r.wrap.b32 	%r5655, %r5652, %r5651, 18;
	shf.r.wrap.b32 	%r5656, %r5651, %r5652, 18;
	mov.b64 	%rd5545, {%r5656, %r5655};
	xor.b64  	%rd5546, %rd5544, %rd5545;
	shf.l.wrap.b32 	%r5657, %r5651, %r5652, 23;
	shf.l.wrap.b32 	%r5658, %r5652, %r5651, 23;
	mov.b64 	%rd5547, {%r5658, %r5657};
	xor.b64  	%rd5548, %rd5546, %rd5547;
	and.b64  	%rd5549, %rd5542, %rd5517;
	not.b64 	%rd5550, %rd5542;
	and.b64  	%rd5551, %rd5492, %rd5550;
	or.b64  	%rd5552, %rd5549, %rd5551;
	add.s64 	%rd5553, %rd5552, %rd5467;
	add.s64 	%rd5554, %rd5553, %rd5548;
	add.s64 	%rd5555, %rd5554, %rd52;
	add.s64 	%rd5556, %rd5555, %rd4371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5659,%dummy}, %rd5543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5660}, %rd5543;
	}
	shf.r.wrap.b32 	%r5661, %r5660, %r5659, 28;
	shf.r.wrap.b32 	%r5662, %r5659, %r5660, 28;
	mov.b64 	%rd5557, {%r5662, %r5661};
	shf.l.wrap.b32 	%r5663, %r5659, %r5660, 30;
	shf.l.wrap.b32 	%r5664, %r5660, %r5659, 30;
	mov.b64 	%rd5558, {%r5664, %r5663};
	xor.b64  	%rd5559, %rd5557, %rd5558;
	shf.l.wrap.b32 	%r5665, %r5659, %r5660, 25;
	shf.l.wrap.b32 	%r5666, %r5660, %r5659, 25;
	mov.b64 	%rd5560, {%r5666, %r5665};
	xor.b64  	%rd5561, %rd5559, %rd5560;
	xor.b64  	%rd5562, %rd5518, %rd5493;
	and.b64  	%rd5563, %rd5543, %rd5562;
	and.b64  	%rd5564, %rd5518, %rd5493;
	xor.b64  	%rd5565, %rd5563, %rd5564;
	add.s64 	%rd5566, %rd5561, %rd5565;
	add.s64 	%rd5567, %rd5556, %rd5468;
	add.s64 	%rd5568, %rd5566, %rd5556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5667,%dummy}, %rd5567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5668}, %rd5567;
	}
	shf.r.wrap.b32 	%r5669, %r5668, %r5667, 14;
	shf.r.wrap.b32 	%r5670, %r5667, %r5668, 14;
	mov.b64 	%rd5569, {%r5670, %r5669};
	shf.r.wrap.b32 	%r5671, %r5668, %r5667, 18;
	shf.r.wrap.b32 	%r5672, %r5667, %r5668, 18;
	mov.b64 	%rd5570, {%r5672, %r5671};
	xor.b64  	%rd5571, %rd5569, %rd5570;
	shf.l.wrap.b32 	%r5673, %r5667, %r5668, 23;
	shf.l.wrap.b32 	%r5674, %r5668, %r5667, 23;
	mov.b64 	%rd5572, {%r5674, %r5673};
	xor.b64  	%rd5573, %rd5571, %rd5572;
	and.b64  	%rd5574, %rd5567, %rd5542;
	not.b64 	%rd5575, %rd5567;
	and.b64  	%rd5576, %rd5517, %rd5575;
	or.b64  	%rd5577, %rd5574, %rd5576;
	add.s64 	%rd5578, %rd5577, %rd5492;
	add.s64 	%rd5579, %rd5578, %rd5573;
	add.s64 	%rd5580, %rd5579, %rd53;
	add.s64 	%rd5581, %rd5580, %rd4391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5675,%dummy}, %rd5568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5676}, %rd5568;
	}
	shf.r.wrap.b32 	%r5677, %r5676, %r5675, 28;
	shf.r.wrap.b32 	%r5678, %r5675, %r5676, 28;
	mov.b64 	%rd5582, {%r5678, %r5677};
	shf.l.wrap.b32 	%r5679, %r5675, %r5676, 30;
	shf.l.wrap.b32 	%r5680, %r5676, %r5675, 30;
	mov.b64 	%rd5583, {%r5680, %r5679};
	xor.b64  	%rd5584, %rd5582, %rd5583;
	shf.l.wrap.b32 	%r5681, %r5675, %r5676, 25;
	shf.l.wrap.b32 	%r5682, %r5676, %r5675, 25;
	mov.b64 	%rd5585, {%r5682, %r5681};
	xor.b64  	%rd5586, %rd5584, %rd5585;
	xor.b64  	%rd5587, %rd5543, %rd5518;
	and.b64  	%rd5588, %rd5568, %rd5587;
	and.b64  	%rd5589, %rd5543, %rd5518;
	xor.b64  	%rd5590, %rd5588, %rd5589;
	add.s64 	%rd5591, %rd5586, %rd5590;
	add.s64 	%rd5592, %rd5581, %rd5493;
	add.s64 	%rd5593, %rd5591, %rd5581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5683,%dummy}, %rd5592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5684}, %rd5592;
	}
	shf.r.wrap.b32 	%r5685, %r5684, %r5683, 14;
	shf.r.wrap.b32 	%r5686, %r5683, %r5684, 14;
	mov.b64 	%rd5594, {%r5686, %r5685};
	shf.r.wrap.b32 	%r5687, %r5684, %r5683, 18;
	shf.r.wrap.b32 	%r5688, %r5683, %r5684, 18;
	mov.b64 	%rd5595, {%r5688, %r5687};
	xor.b64  	%rd5596, %rd5594, %rd5595;
	shf.l.wrap.b32 	%r5689, %r5683, %r5684, 23;
	shf.l.wrap.b32 	%r5690, %r5684, %r5683, 23;
	mov.b64 	%rd5597, {%r5690, %r5689};
	xor.b64  	%rd5598, %rd5596, %rd5597;
	and.b64  	%rd5599, %rd5592, %rd5567;
	not.b64 	%rd5600, %rd5592;
	and.b64  	%rd5601, %rd5542, %rd5600;
	or.b64  	%rd5602, %rd5599, %rd5601;
	add.s64 	%rd5603, %rd5602, %rd5517;
	add.s64 	%rd5604, %rd5603, %rd5598;
	add.s64 	%rd5605, %rd5604, %rd54;
	add.s64 	%rd5606, %rd5605, %rd4411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5691,%dummy}, %rd5593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5692}, %rd5593;
	}
	shf.r.wrap.b32 	%r5693, %r5692, %r5691, 28;
	shf.r.wrap.b32 	%r5694, %r5691, %r5692, 28;
	mov.b64 	%rd5607, {%r5694, %r5693};
	shf.l.wrap.b32 	%r5695, %r5691, %r5692, 30;
	shf.l.wrap.b32 	%r5696, %r5692, %r5691, 30;
	mov.b64 	%rd5608, {%r5696, %r5695};
	xor.b64  	%rd5609, %rd5607, %rd5608;
	shf.l.wrap.b32 	%r5697, %r5691, %r5692, 25;
	shf.l.wrap.b32 	%r5698, %r5692, %r5691, 25;
	mov.b64 	%rd5610, {%r5698, %r5697};
	xor.b64  	%rd5611, %rd5609, %rd5610;
	xor.b64  	%rd5612, %rd5568, %rd5543;
	and.b64  	%rd5613, %rd5593, %rd5612;
	and.b64  	%rd5614, %rd5568, %rd5543;
	xor.b64  	%rd5615, %rd5613, %rd5614;
	add.s64 	%rd5616, %rd5611, %rd5615;
	add.s64 	%rd5617, %rd5606, %rd5518;
	add.s64 	%rd5618, %rd5616, %rd5606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5699,%dummy}, %rd5617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5700}, %rd5617;
	}
	shf.r.wrap.b32 	%r5701, %r5700, %r5699, 14;
	shf.r.wrap.b32 	%r5702, %r5699, %r5700, 14;
	mov.b64 	%rd5619, {%r5702, %r5701};
	shf.r.wrap.b32 	%r5703, %r5700, %r5699, 18;
	shf.r.wrap.b32 	%r5704, %r5699, %r5700, 18;
	mov.b64 	%rd5620, {%r5704, %r5703};
	xor.b64  	%rd5621, %rd5619, %rd5620;
	shf.l.wrap.b32 	%r5705, %r5699, %r5700, 23;
	shf.l.wrap.b32 	%r5706, %r5700, %r5699, 23;
	mov.b64 	%rd5622, {%r5706, %r5705};
	xor.b64  	%rd5623, %rd5621, %rd5622;
	and.b64  	%rd5624, %rd5617, %rd5592;
	not.b64 	%rd5625, %rd5617;
	and.b64  	%rd5626, %rd5567, %rd5625;
	or.b64  	%rd5627, %rd5624, %rd5626;
	add.s64 	%rd5628, %rd5627, %rd5542;
	add.s64 	%rd5629, %rd5628, %rd5623;
	add.s64 	%rd5630, %rd5629, %rd55;
	add.s64 	%rd5631, %rd5630, %rd4431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5707,%dummy}, %rd5618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5708}, %rd5618;
	}
	shf.r.wrap.b32 	%r5709, %r5708, %r5707, 28;
	shf.r.wrap.b32 	%r5710, %r5707, %r5708, 28;
	mov.b64 	%rd5632, {%r5710, %r5709};
	shf.l.wrap.b32 	%r5711, %r5707, %r5708, 30;
	shf.l.wrap.b32 	%r5712, %r5708, %r5707, 30;
	mov.b64 	%rd5633, {%r5712, %r5711};
	xor.b64  	%rd5634, %rd5632, %rd5633;
	shf.l.wrap.b32 	%r5713, %r5707, %r5708, 25;
	shf.l.wrap.b32 	%r5714, %r5708, %r5707, 25;
	mov.b64 	%rd5635, {%r5714, %r5713};
	xor.b64  	%rd5636, %rd5634, %rd5635;
	xor.b64  	%rd5637, %rd5593, %rd5568;
	and.b64  	%rd5638, %rd5618, %rd5637;
	and.b64  	%rd5639, %rd5593, %rd5568;
	xor.b64  	%rd5640, %rd5638, %rd5639;
	add.s64 	%rd5641, %rd5636, %rd5640;
	add.s64 	%rd5642, %rd5631, %rd5543;
	add.s64 	%rd5643, %rd5641, %rd5631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5715,%dummy}, %rd5642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5716}, %rd5642;
	}
	shf.r.wrap.b32 	%r5717, %r5716, %r5715, 14;
	shf.r.wrap.b32 	%r5718, %r5715, %r5716, 14;
	mov.b64 	%rd5644, {%r5718, %r5717};
	shf.r.wrap.b32 	%r5719, %r5716, %r5715, 18;
	shf.r.wrap.b32 	%r5720, %r5715, %r5716, 18;
	mov.b64 	%rd5645, {%r5720, %r5719};
	xor.b64  	%rd5646, %rd5644, %rd5645;
	shf.l.wrap.b32 	%r5721, %r5715, %r5716, 23;
	shf.l.wrap.b32 	%r5722, %r5716, %r5715, 23;
	mov.b64 	%rd5647, {%r5722, %r5721};
	xor.b64  	%rd5648, %rd5646, %rd5647;
	and.b64  	%rd5649, %rd5642, %rd5617;
	not.b64 	%rd5650, %rd5642;
	and.b64  	%rd5651, %rd5592, %rd5650;
	or.b64  	%rd5652, %rd5649, %rd5651;
	add.s64 	%rd5653, %rd5652, %rd5567;
	add.s64 	%rd5654, %rd5653, %rd5648;
	add.s64 	%rd5655, %rd5654, %rd56;
	add.s64 	%rd5656, %rd5655, %rd4444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5723,%dummy}, %rd5643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5724}, %rd5643;
	}
	shf.r.wrap.b32 	%r5725, %r5724, %r5723, 28;
	shf.r.wrap.b32 	%r5726, %r5723, %r5724, 28;
	mov.b64 	%rd5657, {%r5726, %r5725};
	shf.l.wrap.b32 	%r5727, %r5723, %r5724, 30;
	shf.l.wrap.b32 	%r5728, %r5724, %r5723, 30;
	mov.b64 	%rd5658, {%r5728, %r5727};
	xor.b64  	%rd5659, %rd5657, %rd5658;
	shf.l.wrap.b32 	%r5729, %r5723, %r5724, 25;
	shf.l.wrap.b32 	%r5730, %r5724, %r5723, 25;
	mov.b64 	%rd5660, {%r5730, %r5729};
	xor.b64  	%rd5661, %rd5659, %rd5660;
	xor.b64  	%rd5662, %rd5618, %rd5593;
	and.b64  	%rd5663, %rd5643, %rd5662;
	and.b64  	%rd5664, %rd5618, %rd5593;
	xor.b64  	%rd5665, %rd5663, %rd5664;
	add.s64 	%rd5666, %rd5661, %rd5665;
	add.s64 	%rd5667, %rd5656, %rd5568;
	add.s64 	%rd5668, %rd5666, %rd5656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5731,%dummy}, %rd5667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5732}, %rd5667;
	}
	shf.r.wrap.b32 	%r5733, %r5732, %r5731, 14;
	shf.r.wrap.b32 	%r5734, %r5731, %r5732, 14;
	mov.b64 	%rd5669, {%r5734, %r5733};
	shf.r.wrap.b32 	%r5735, %r5732, %r5731, 18;
	shf.r.wrap.b32 	%r5736, %r5731, %r5732, 18;
	mov.b64 	%rd5670, {%r5736, %r5735};
	xor.b64  	%rd5671, %rd5669, %rd5670;
	shf.l.wrap.b32 	%r5737, %r5731, %r5732, 23;
	shf.l.wrap.b32 	%r5738, %r5732, %r5731, 23;
	mov.b64 	%rd5672, {%r5738, %r5737};
	xor.b64  	%rd5673, %rd5671, %rd5672;
	and.b64  	%rd5674, %rd5667, %rd5642;
	not.b64 	%rd5675, %rd5667;
	and.b64  	%rd5676, %rd5617, %rd5675;
	or.b64  	%rd5677, %rd5674, %rd5676;
	add.s64 	%rd5678, %rd5677, %rd5592;
	add.s64 	%rd5679, %rd5678, %rd5673;
	add.s64 	%rd5680, %rd5679, %rd57;
	add.s64 	%rd5681, %rd5680, %rd4457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5739,%dummy}, %rd5668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5740}, %rd5668;
	}
	shf.r.wrap.b32 	%r5741, %r5740, %r5739, 28;
	shf.r.wrap.b32 	%r5742, %r5739, %r5740, 28;
	mov.b64 	%rd5682, {%r5742, %r5741};
	shf.l.wrap.b32 	%r5743, %r5739, %r5740, 30;
	shf.l.wrap.b32 	%r5744, %r5740, %r5739, 30;
	mov.b64 	%rd5683, {%r5744, %r5743};
	xor.b64  	%rd5684, %rd5682, %rd5683;
	shf.l.wrap.b32 	%r5745, %r5739, %r5740, 25;
	shf.l.wrap.b32 	%r5746, %r5740, %r5739, 25;
	mov.b64 	%rd5685, {%r5746, %r5745};
	xor.b64  	%rd5686, %rd5684, %rd5685;
	xor.b64  	%rd5687, %rd5643, %rd5618;
	and.b64  	%rd5688, %rd5668, %rd5687;
	and.b64  	%rd5689, %rd5643, %rd5618;
	xor.b64  	%rd5690, %rd5688, %rd5689;
	add.s64 	%rd5691, %rd5686, %rd5690;
	add.s64 	%rd5692, %rd5681, %rd5593;
	add.s64 	%rd5693, %rd5691, %rd5681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5747,%dummy}, %rd5692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5748}, %rd5692;
	}
	shf.r.wrap.b32 	%r5749, %r5748, %r5747, 14;
	shf.r.wrap.b32 	%r5750, %r5747, %r5748, 14;
	mov.b64 	%rd5694, {%r5750, %r5749};
	shf.r.wrap.b32 	%r5751, %r5748, %r5747, 18;
	shf.r.wrap.b32 	%r5752, %r5747, %r5748, 18;
	mov.b64 	%rd5695, {%r5752, %r5751};
	xor.b64  	%rd5696, %rd5694, %rd5695;
	shf.l.wrap.b32 	%r5753, %r5747, %r5748, 23;
	shf.l.wrap.b32 	%r5754, %r5748, %r5747, 23;
	mov.b64 	%rd5697, {%r5754, %r5753};
	xor.b64  	%rd5698, %rd5696, %rd5697;
	and.b64  	%rd5699, %rd5692, %rd5667;
	not.b64 	%rd5700, %rd5692;
	and.b64  	%rd5701, %rd5642, %rd5700;
	or.b64  	%rd5702, %rd5699, %rd5701;
	add.s64 	%rd5703, %rd5702, %rd5617;
	add.s64 	%rd5704, %rd5703, %rd5698;
	add.s64 	%rd5705, %rd5704, %rd58;
	add.s64 	%rd5706, %rd5705, %rd4470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5755,%dummy}, %rd5693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5756}, %rd5693;
	}
	shf.r.wrap.b32 	%r5757, %r5756, %r5755, 28;
	shf.r.wrap.b32 	%r5758, %r5755, %r5756, 28;
	mov.b64 	%rd5707, {%r5758, %r5757};
	shf.l.wrap.b32 	%r5759, %r5755, %r5756, 30;
	shf.l.wrap.b32 	%r5760, %r5756, %r5755, 30;
	mov.b64 	%rd5708, {%r5760, %r5759};
	xor.b64  	%rd5709, %rd5707, %rd5708;
	shf.l.wrap.b32 	%r5761, %r5755, %r5756, 25;
	shf.l.wrap.b32 	%r5762, %r5756, %r5755, 25;
	mov.b64 	%rd5710, {%r5762, %r5761};
	xor.b64  	%rd5711, %rd5709, %rd5710;
	xor.b64  	%rd5712, %rd5668, %rd5643;
	and.b64  	%rd5713, %rd5693, %rd5712;
	and.b64  	%rd5714, %rd5668, %rd5643;
	xor.b64  	%rd5715, %rd5713, %rd5714;
	add.s64 	%rd5716, %rd5711, %rd5715;
	add.s64 	%rd5717, %rd5706, %rd5618;
	add.s64 	%rd5718, %rd5716, %rd5706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5763,%dummy}, %rd5717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5764}, %rd5717;
	}
	shf.r.wrap.b32 	%r5765, %r5764, %r5763, 14;
	shf.r.wrap.b32 	%r5766, %r5763, %r5764, 14;
	mov.b64 	%rd5719, {%r5766, %r5765};
	shf.r.wrap.b32 	%r5767, %r5764, %r5763, 18;
	shf.r.wrap.b32 	%r5768, %r5763, %r5764, 18;
	mov.b64 	%rd5720, {%r5768, %r5767};
	xor.b64  	%rd5721, %rd5719, %rd5720;
	shf.l.wrap.b32 	%r5769, %r5763, %r5764, 23;
	shf.l.wrap.b32 	%r5770, %r5764, %r5763, 23;
	mov.b64 	%rd5722, {%r5770, %r5769};
	xor.b64  	%rd5723, %rd5721, %rd5722;
	and.b64  	%rd5724, %rd5717, %rd5692;
	not.b64 	%rd5725, %rd5717;
	and.b64  	%rd5726, %rd5667, %rd5725;
	or.b64  	%rd5727, %rd5724, %rd5726;
	add.s64 	%rd5728, %rd5727, %rd5642;
	add.s64 	%rd5729, %rd5728, %rd5723;
	add.s64 	%rd5730, %rd5729, %rd59;
	add.s64 	%rd5731, %rd5730, %rd4483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5771,%dummy}, %rd5718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5772}, %rd5718;
	}
	shf.r.wrap.b32 	%r5773, %r5772, %r5771, 28;
	shf.r.wrap.b32 	%r5774, %r5771, %r5772, 28;
	mov.b64 	%rd5732, {%r5774, %r5773};
	shf.l.wrap.b32 	%r5775, %r5771, %r5772, 30;
	shf.l.wrap.b32 	%r5776, %r5772, %r5771, 30;
	mov.b64 	%rd5733, {%r5776, %r5775};
	xor.b64  	%rd5734, %rd5732, %rd5733;
	shf.l.wrap.b32 	%r5777, %r5771, %r5772, 25;
	shf.l.wrap.b32 	%r5778, %r5772, %r5771, 25;
	mov.b64 	%rd5735, {%r5778, %r5777};
	xor.b64  	%rd5736, %rd5734, %rd5735;
	xor.b64  	%rd5737, %rd5693, %rd5668;
	and.b64  	%rd5738, %rd5718, %rd5737;
	and.b64  	%rd5739, %rd5693, %rd5668;
	xor.b64  	%rd5740, %rd5738, %rd5739;
	add.s64 	%rd5741, %rd5736, %rd5740;
	add.s64 	%rd5742, %rd5731, %rd5643;
	add.s64 	%rd5743, %rd5741, %rd5731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5779,%dummy}, %rd5742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5780}, %rd5742;
	}
	shf.r.wrap.b32 	%r5781, %r5780, %r5779, 14;
	shf.r.wrap.b32 	%r5782, %r5779, %r5780, 14;
	mov.b64 	%rd5744, {%r5782, %r5781};
	shf.r.wrap.b32 	%r5783, %r5780, %r5779, 18;
	shf.r.wrap.b32 	%r5784, %r5779, %r5780, 18;
	mov.b64 	%rd5745, {%r5784, %r5783};
	xor.b64  	%rd5746, %rd5744, %rd5745;
	shf.l.wrap.b32 	%r5785, %r5779, %r5780, 23;
	shf.l.wrap.b32 	%r5786, %r5780, %r5779, 23;
	mov.b64 	%rd5747, {%r5786, %r5785};
	xor.b64  	%rd5748, %rd5746, %rd5747;
	and.b64  	%rd5749, %rd5742, %rd5717;
	not.b64 	%rd5750, %rd5742;
	and.b64  	%rd5751, %rd5692, %rd5750;
	or.b64  	%rd5752, %rd5749, %rd5751;
	add.s64 	%rd5753, %rd5752, %rd5667;
	add.s64 	%rd5754, %rd5753, %rd5748;
	add.s64 	%rd5755, %rd5754, %rd60;
	add.s64 	%rd5756, %rd5755, %rd4496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5787,%dummy}, %rd5743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5788}, %rd5743;
	}
	shf.r.wrap.b32 	%r5789, %r5788, %r5787, 28;
	shf.r.wrap.b32 	%r5790, %r5787, %r5788, 28;
	mov.b64 	%rd5757, {%r5790, %r5789};
	shf.l.wrap.b32 	%r5791, %r5787, %r5788, 30;
	shf.l.wrap.b32 	%r5792, %r5788, %r5787, 30;
	mov.b64 	%rd5758, {%r5792, %r5791};
	xor.b64  	%rd5759, %rd5757, %rd5758;
	shf.l.wrap.b32 	%r5793, %r5787, %r5788, 25;
	shf.l.wrap.b32 	%r5794, %r5788, %r5787, 25;
	mov.b64 	%rd5760, {%r5794, %r5793};
	xor.b64  	%rd5761, %rd5759, %rd5760;
	xor.b64  	%rd5762, %rd5718, %rd5693;
	and.b64  	%rd5763, %rd5743, %rd5762;
	and.b64  	%rd5764, %rd5718, %rd5693;
	xor.b64  	%rd5765, %rd5763, %rd5764;
	add.s64 	%rd5766, %rd5761, %rd5765;
	add.s64 	%rd5767, %rd5756, %rd5668;
	add.s64 	%rd5768, %rd5766, %rd5756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5795,%dummy}, %rd5767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5796}, %rd5767;
	}
	shf.r.wrap.b32 	%r5797, %r5796, %r5795, 14;
	shf.r.wrap.b32 	%r5798, %r5795, %r5796, 14;
	mov.b64 	%rd5769, {%r5798, %r5797};
	shf.r.wrap.b32 	%r5799, %r5796, %r5795, 18;
	shf.r.wrap.b32 	%r5800, %r5795, %r5796, 18;
	mov.b64 	%rd5770, {%r5800, %r5799};
	xor.b64  	%rd5771, %rd5769, %rd5770;
	shf.l.wrap.b32 	%r5801, %r5795, %r5796, 23;
	shf.l.wrap.b32 	%r5802, %r5796, %r5795, 23;
	mov.b64 	%rd5772, {%r5802, %r5801};
	xor.b64  	%rd5773, %rd5771, %rd5772;
	and.b64  	%rd5774, %rd5767, %rd5742;
	not.b64 	%rd5775, %rd5767;
	and.b64  	%rd5776, %rd5717, %rd5775;
	or.b64  	%rd5777, %rd5774, %rd5776;
	add.s64 	%rd5778, %rd5777, %rd5692;
	add.s64 	%rd5779, %rd5778, %rd5773;
	add.s64 	%rd5780, %rd5779, %rd61;
	add.s64 	%rd5781, %rd5780, %rd4509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5803,%dummy}, %rd5768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5804}, %rd5768;
	}
	shf.r.wrap.b32 	%r5805, %r5804, %r5803, 28;
	shf.r.wrap.b32 	%r5806, %r5803, %r5804, 28;
	mov.b64 	%rd5782, {%r5806, %r5805};
	shf.l.wrap.b32 	%r5807, %r5803, %r5804, 30;
	shf.l.wrap.b32 	%r5808, %r5804, %r5803, 30;
	mov.b64 	%rd5783, {%r5808, %r5807};
	xor.b64  	%rd5784, %rd5782, %rd5783;
	shf.l.wrap.b32 	%r5809, %r5803, %r5804, 25;
	shf.l.wrap.b32 	%r5810, %r5804, %r5803, 25;
	mov.b64 	%rd5785, {%r5810, %r5809};
	xor.b64  	%rd5786, %rd5784, %rd5785;
	xor.b64  	%rd5787, %rd5743, %rd5718;
	and.b64  	%rd5788, %rd5768, %rd5787;
	and.b64  	%rd5789, %rd5743, %rd5718;
	xor.b64  	%rd5790, %rd5788, %rd5789;
	add.s64 	%rd5791, %rd5786, %rd5790;
	add.s64 	%rd5792, %rd5781, %rd5693;
	add.s64 	%rd5793, %rd5791, %rd5781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5811,%dummy}, %rd5792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5812}, %rd5792;
	}
	shf.r.wrap.b32 	%r5813, %r5812, %r5811, 14;
	shf.r.wrap.b32 	%r5814, %r5811, %r5812, 14;
	mov.b64 	%rd5794, {%r5814, %r5813};
	shf.r.wrap.b32 	%r5815, %r5812, %r5811, 18;
	shf.r.wrap.b32 	%r5816, %r5811, %r5812, 18;
	mov.b64 	%rd5795, {%r5816, %r5815};
	xor.b64  	%rd5796, %rd5794, %rd5795;
	shf.l.wrap.b32 	%r5817, %r5811, %r5812, 23;
	shf.l.wrap.b32 	%r5818, %r5812, %r5811, 23;
	mov.b64 	%rd5797, {%r5818, %r5817};
	xor.b64  	%rd5798, %rd5796, %rd5797;
	and.b64  	%rd5799, %rd5792, %rd5767;
	not.b64 	%rd5800, %rd5792;
	and.b64  	%rd5801, %rd5742, %rd5800;
	or.b64  	%rd5802, %rd5799, %rd5801;
	add.s64 	%rd5803, %rd5802, %rd5717;
	add.s64 	%rd5804, %rd5803, %rd5798;
	add.s64 	%rd5805, %rd5804, %rd62;
	add.s64 	%rd5806, %rd5805, %rd4522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5819,%dummy}, %rd5793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5820}, %rd5793;
	}
	shf.r.wrap.b32 	%r5821, %r5820, %r5819, 28;
	shf.r.wrap.b32 	%r5822, %r5819, %r5820, 28;
	mov.b64 	%rd5807, {%r5822, %r5821};
	shf.l.wrap.b32 	%r5823, %r5819, %r5820, 30;
	shf.l.wrap.b32 	%r5824, %r5820, %r5819, 30;
	mov.b64 	%rd5808, {%r5824, %r5823};
	xor.b64  	%rd5809, %rd5807, %rd5808;
	shf.l.wrap.b32 	%r5825, %r5819, %r5820, 25;
	shf.l.wrap.b32 	%r5826, %r5820, %r5819, 25;
	mov.b64 	%rd5810, {%r5826, %r5825};
	xor.b64  	%rd5811, %rd5809, %rd5810;
	xor.b64  	%rd5812, %rd5768, %rd5743;
	and.b64  	%rd5813, %rd5793, %rd5812;
	and.b64  	%rd5814, %rd5768, %rd5743;
	xor.b64  	%rd5815, %rd5813, %rd5814;
	add.s64 	%rd5816, %rd5811, %rd5815;
	add.s64 	%rd5817, %rd5806, %rd5718;
	add.s64 	%rd5818, %rd5816, %rd5806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5827,%dummy}, %rd5817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5828}, %rd5817;
	}
	shf.r.wrap.b32 	%r5829, %r5828, %r5827, 14;
	shf.r.wrap.b32 	%r5830, %r5827, %r5828, 14;
	mov.b64 	%rd5819, {%r5830, %r5829};
	shf.r.wrap.b32 	%r5831, %r5828, %r5827, 18;
	shf.r.wrap.b32 	%r5832, %r5827, %r5828, 18;
	mov.b64 	%rd5820, {%r5832, %r5831};
	xor.b64  	%rd5821, %rd5819, %rd5820;
	shf.l.wrap.b32 	%r5833, %r5827, %r5828, 23;
	shf.l.wrap.b32 	%r5834, %r5828, %r5827, 23;
	mov.b64 	%rd5822, {%r5834, %r5833};
	xor.b64  	%rd5823, %rd5821, %rd5822;
	and.b64  	%rd5824, %rd5817, %rd5792;
	not.b64 	%rd5825, %rd5817;
	and.b64  	%rd5826, %rd5767, %rd5825;
	or.b64  	%rd5827, %rd5824, %rd5826;
	add.s64 	%rd5828, %rd5827, %rd5742;
	add.s64 	%rd5829, %rd5828, %rd5823;
	add.s64 	%rd5830, %rd5829, %rd63;
	add.s64 	%rd5831, %rd5830, %rd4535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5835,%dummy}, %rd5818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5836}, %rd5818;
	}
	shf.r.wrap.b32 	%r5837, %r5836, %r5835, 28;
	shf.r.wrap.b32 	%r5838, %r5835, %r5836, 28;
	mov.b64 	%rd5832, {%r5838, %r5837};
	shf.l.wrap.b32 	%r5839, %r5835, %r5836, 30;
	shf.l.wrap.b32 	%r5840, %r5836, %r5835, 30;
	mov.b64 	%rd5833, {%r5840, %r5839};
	xor.b64  	%rd5834, %rd5832, %rd5833;
	shf.l.wrap.b32 	%r5841, %r5835, %r5836, 25;
	shf.l.wrap.b32 	%r5842, %r5836, %r5835, 25;
	mov.b64 	%rd5835, {%r5842, %r5841};
	xor.b64  	%rd5836, %rd5834, %rd5835;
	xor.b64  	%rd5837, %rd5793, %rd5768;
	and.b64  	%rd5838, %rd5818, %rd5837;
	and.b64  	%rd5839, %rd5793, %rd5768;
	xor.b64  	%rd5840, %rd5838, %rd5839;
	add.s64 	%rd5841, %rd5836, %rd5840;
	add.s64 	%rd5842, %rd5831, %rd5743;
	add.s64 	%rd5843, %rd5841, %rd5831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5843,%dummy}, %rd5842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5844}, %rd5842;
	}
	shf.r.wrap.b32 	%r5845, %r5844, %r5843, 14;
	shf.r.wrap.b32 	%r5846, %r5843, %r5844, 14;
	mov.b64 	%rd5844, {%r5846, %r5845};
	shf.r.wrap.b32 	%r5847, %r5844, %r5843, 18;
	shf.r.wrap.b32 	%r5848, %r5843, %r5844, 18;
	mov.b64 	%rd5845, {%r5848, %r5847};
	xor.b64  	%rd5846, %rd5844, %rd5845;
	shf.l.wrap.b32 	%r5849, %r5843, %r5844, 23;
	shf.l.wrap.b32 	%r5850, %r5844, %r5843, 23;
	mov.b64 	%rd5847, {%r5850, %r5849};
	xor.b64  	%rd5848, %rd5846, %rd5847;
	and.b64  	%rd5849, %rd5842, %rd5817;
	not.b64 	%rd5850, %rd5842;
	and.b64  	%rd5851, %rd5792, %rd5850;
	or.b64  	%rd5852, %rd5849, %rd5851;
	add.s64 	%rd5853, %rd5852, %rd5767;
	add.s64 	%rd5854, %rd5853, %rd5848;
	add.s64 	%rd5855, %rd5854, %rd64;
	add.s64 	%rd5856, %rd5855, %rd4548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5851,%dummy}, %rd5843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5852}, %rd5843;
	}
	shf.r.wrap.b32 	%r5853, %r5852, %r5851, 28;
	shf.r.wrap.b32 	%r5854, %r5851, %r5852, 28;
	mov.b64 	%rd5857, {%r5854, %r5853};
	shf.l.wrap.b32 	%r5855, %r5851, %r5852, 30;
	shf.l.wrap.b32 	%r5856, %r5852, %r5851, 30;
	mov.b64 	%rd5858, {%r5856, %r5855};
	xor.b64  	%rd5859, %rd5857, %rd5858;
	shf.l.wrap.b32 	%r5857, %r5851, %r5852, 25;
	shf.l.wrap.b32 	%r5858, %r5852, %r5851, 25;
	mov.b64 	%rd5860, {%r5858, %r5857};
	xor.b64  	%rd5861, %rd5859, %rd5860;
	xor.b64  	%rd5862, %rd5818, %rd5793;
	and.b64  	%rd5863, %rd5843, %rd5862;
	and.b64  	%rd5864, %rd5818, %rd5793;
	xor.b64  	%rd5865, %rd5863, %rd5864;
	add.s64 	%rd5866, %rd5861, %rd5865;
	add.s64 	%rd5867, %rd5856, %rd5768;
	add.s64 	%rd5868, %rd5866, %rd5856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5859,%dummy}, %rd5867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5860}, %rd5867;
	}
	shf.r.wrap.b32 	%r5861, %r5860, %r5859, 14;
	shf.r.wrap.b32 	%r5862, %r5859, %r5860, 14;
	mov.b64 	%rd5869, {%r5862, %r5861};
	shf.r.wrap.b32 	%r5863, %r5860, %r5859, 18;
	shf.r.wrap.b32 	%r5864, %r5859, %r5860, 18;
	mov.b64 	%rd5870, {%r5864, %r5863};
	xor.b64  	%rd5871, %rd5869, %rd5870;
	shf.l.wrap.b32 	%r5865, %r5859, %r5860, 23;
	shf.l.wrap.b32 	%r5866, %r5860, %r5859, 23;
	mov.b64 	%rd5872, {%r5866, %r5865};
	xor.b64  	%rd5873, %rd5871, %rd5872;
	and.b64  	%rd5874, %rd5867, %rd5842;
	not.b64 	%rd5875, %rd5867;
	and.b64  	%rd5876, %rd5817, %rd5875;
	or.b64  	%rd5877, %rd5874, %rd5876;
	add.s64 	%rd5878, %rd5877, %rd5792;
	add.s64 	%rd5879, %rd5878, %rd5873;
	add.s64 	%rd5880, %rd5879, %rd65;
	add.s64 	%rd5881, %rd5880, %rd4561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5867,%dummy}, %rd5868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5868}, %rd5868;
	}
	shf.r.wrap.b32 	%r5869, %r5868, %r5867, 28;
	shf.r.wrap.b32 	%r5870, %r5867, %r5868, 28;
	mov.b64 	%rd5882, {%r5870, %r5869};
	shf.l.wrap.b32 	%r5871, %r5867, %r5868, 30;
	shf.l.wrap.b32 	%r5872, %r5868, %r5867, 30;
	mov.b64 	%rd5883, {%r5872, %r5871};
	xor.b64  	%rd5884, %rd5882, %rd5883;
	shf.l.wrap.b32 	%r5873, %r5867, %r5868, 25;
	shf.l.wrap.b32 	%r5874, %r5868, %r5867, 25;
	mov.b64 	%rd5885, {%r5874, %r5873};
	xor.b64  	%rd5886, %rd5884, %rd5885;
	xor.b64  	%rd5887, %rd5843, %rd5818;
	and.b64  	%rd5888, %rd5868, %rd5887;
	and.b64  	%rd5889, %rd5843, %rd5818;
	xor.b64  	%rd5890, %rd5888, %rd5889;
	add.s64 	%rd5891, %rd5886, %rd5890;
	add.s64 	%rd5892, %rd5881, %rd5793;
	add.s64 	%rd5893, %rd5891, %rd5881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5875,%dummy}, %rd5892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5876}, %rd5892;
	}
	shf.r.wrap.b32 	%r5877, %r5876, %r5875, 14;
	shf.r.wrap.b32 	%r5878, %r5875, %r5876, 14;
	mov.b64 	%rd5894, {%r5878, %r5877};
	shf.r.wrap.b32 	%r5879, %r5876, %r5875, 18;
	shf.r.wrap.b32 	%r5880, %r5875, %r5876, 18;
	mov.b64 	%rd5895, {%r5880, %r5879};
	xor.b64  	%rd5896, %rd5894, %rd5895;
	shf.l.wrap.b32 	%r5881, %r5875, %r5876, 23;
	shf.l.wrap.b32 	%r5882, %r5876, %r5875, 23;
	mov.b64 	%rd5897, {%r5882, %r5881};
	xor.b64  	%rd5898, %rd5896, %rd5897;
	and.b64  	%rd5899, %rd5892, %rd5867;
	not.b64 	%rd5900, %rd5892;
	and.b64  	%rd5901, %rd5842, %rd5900;
	or.b64  	%rd5902, %rd5899, %rd5901;
	add.s64 	%rd5903, %rd5902, %rd5817;
	add.s64 	%rd5904, %rd5903, %rd5898;
	add.s64 	%rd5905, %rd5904, %rd66;
	add.s64 	%rd5906, %rd5905, %rd4574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5883,%dummy}, %rd5893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5884}, %rd5893;
	}
	shf.r.wrap.b32 	%r5885, %r5884, %r5883, 28;
	shf.r.wrap.b32 	%r5886, %r5883, %r5884, 28;
	mov.b64 	%rd5907, {%r5886, %r5885};
	shf.l.wrap.b32 	%r5887, %r5883, %r5884, 30;
	shf.l.wrap.b32 	%r5888, %r5884, %r5883, 30;
	mov.b64 	%rd5908, {%r5888, %r5887};
	xor.b64  	%rd5909, %rd5907, %rd5908;
	shf.l.wrap.b32 	%r5889, %r5883, %r5884, 25;
	shf.l.wrap.b32 	%r5890, %r5884, %r5883, 25;
	mov.b64 	%rd5910, {%r5890, %r5889};
	xor.b64  	%rd5911, %rd5909, %rd5910;
	xor.b64  	%rd5912, %rd5868, %rd5843;
	and.b64  	%rd5913, %rd5893, %rd5912;
	and.b64  	%rd5914, %rd5868, %rd5843;
	xor.b64  	%rd5915, %rd5913, %rd5914;
	add.s64 	%rd5916, %rd5911, %rd5915;
	add.s64 	%rd5917, %rd5906, %rd5818;
	add.s64 	%rd5918, %rd5916, %rd5906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5891,%dummy}, %rd5917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5892}, %rd5917;
	}
	shf.r.wrap.b32 	%r5893, %r5892, %r5891, 14;
	shf.r.wrap.b32 	%r5894, %r5891, %r5892, 14;
	mov.b64 	%rd5919, {%r5894, %r5893};
	shf.r.wrap.b32 	%r5895, %r5892, %r5891, 18;
	shf.r.wrap.b32 	%r5896, %r5891, %r5892, 18;
	mov.b64 	%rd5920, {%r5896, %r5895};
	xor.b64  	%rd5921, %rd5919, %rd5920;
	shf.l.wrap.b32 	%r5897, %r5891, %r5892, 23;
	shf.l.wrap.b32 	%r5898, %r5892, %r5891, 23;
	mov.b64 	%rd5922, {%r5898, %r5897};
	xor.b64  	%rd5923, %rd5921, %rd5922;
	and.b64  	%rd5924, %rd5917, %rd5892;
	not.b64 	%rd5925, %rd5917;
	and.b64  	%rd5926, %rd5867, %rd5925;
	or.b64  	%rd5927, %rd5924, %rd5926;
	add.s64 	%rd5928, %rd5927, %rd5842;
	add.s64 	%rd5929, %rd5928, %rd5923;
	add.s64 	%rd5930, %rd5929, %rd67;
	add.s64 	%rd5931, %rd5930, %rd4587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5899,%dummy}, %rd5918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5900}, %rd5918;
	}
	shf.r.wrap.b32 	%r5901, %r5900, %r5899, 28;
	shf.r.wrap.b32 	%r5902, %r5899, %r5900, 28;
	mov.b64 	%rd5932, {%r5902, %r5901};
	shf.l.wrap.b32 	%r5903, %r5899, %r5900, 30;
	shf.l.wrap.b32 	%r5904, %r5900, %r5899, 30;
	mov.b64 	%rd5933, {%r5904, %r5903};
	xor.b64  	%rd5934, %rd5932, %rd5933;
	shf.l.wrap.b32 	%r5905, %r5899, %r5900, 25;
	shf.l.wrap.b32 	%r5906, %r5900, %r5899, 25;
	mov.b64 	%rd5935, {%r5906, %r5905};
	xor.b64  	%rd5936, %rd5934, %rd5935;
	xor.b64  	%rd5937, %rd5893, %rd5868;
	and.b64  	%rd5938, %rd5918, %rd5937;
	and.b64  	%rd5939, %rd5893, %rd5868;
	xor.b64  	%rd5940, %rd5938, %rd5939;
	add.s64 	%rd5941, %rd5936, %rd5940;
	add.s64 	%rd5942, %rd5931, %rd5843;
	add.s64 	%rd5943, %rd5941, %rd5931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5907,%dummy}, %rd5942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5908}, %rd5942;
	}
	shf.r.wrap.b32 	%r5909, %r5908, %r5907, 14;
	shf.r.wrap.b32 	%r5910, %r5907, %r5908, 14;
	mov.b64 	%rd5944, {%r5910, %r5909};
	shf.r.wrap.b32 	%r5911, %r5908, %r5907, 18;
	shf.r.wrap.b32 	%r5912, %r5907, %r5908, 18;
	mov.b64 	%rd5945, {%r5912, %r5911};
	xor.b64  	%rd5946, %rd5944, %rd5945;
	shf.l.wrap.b32 	%r5913, %r5907, %r5908, 23;
	shf.l.wrap.b32 	%r5914, %r5908, %r5907, 23;
	mov.b64 	%rd5947, {%r5914, %r5913};
	xor.b64  	%rd5948, %rd5946, %rd5947;
	and.b64  	%rd5949, %rd5942, %rd5917;
	not.b64 	%rd5950, %rd5942;
	and.b64  	%rd5951, %rd5892, %rd5950;
	or.b64  	%rd5952, %rd5949, %rd5951;
	add.s64 	%rd5953, %rd5952, %rd5867;
	add.s64 	%rd5954, %rd5953, %rd5948;
	add.s64 	%rd5955, %rd5954, %rd68;
	add.s64 	%rd5956, %rd5955, %rd4600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5915,%dummy}, %rd5943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5916}, %rd5943;
	}
	shf.r.wrap.b32 	%r5917, %r5916, %r5915, 28;
	shf.r.wrap.b32 	%r5918, %r5915, %r5916, 28;
	mov.b64 	%rd5957, {%r5918, %r5917};
	shf.l.wrap.b32 	%r5919, %r5915, %r5916, 30;
	shf.l.wrap.b32 	%r5920, %r5916, %r5915, 30;
	mov.b64 	%rd5958, {%r5920, %r5919};
	xor.b64  	%rd5959, %rd5957, %rd5958;
	shf.l.wrap.b32 	%r5921, %r5915, %r5916, 25;
	shf.l.wrap.b32 	%r5922, %r5916, %r5915, 25;
	mov.b64 	%rd5960, {%r5922, %r5921};
	xor.b64  	%rd5961, %rd5959, %rd5960;
	xor.b64  	%rd5962, %rd5918, %rd5893;
	and.b64  	%rd5963, %rd5943, %rd5962;
	and.b64  	%rd5964, %rd5918, %rd5893;
	xor.b64  	%rd5965, %rd5963, %rd5964;
	add.s64 	%rd5966, %rd5961, %rd5965;
	add.s64 	%rd5967, %rd5956, %rd5868;
	add.s64 	%rd5968, %rd5966, %rd5956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5923,%dummy}, %rd5967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5924}, %rd5967;
	}
	shf.r.wrap.b32 	%r5925, %r5924, %r5923, 14;
	shf.r.wrap.b32 	%r5926, %r5923, %r5924, 14;
	mov.b64 	%rd5969, {%r5926, %r5925};
	shf.r.wrap.b32 	%r5927, %r5924, %r5923, 18;
	shf.r.wrap.b32 	%r5928, %r5923, %r5924, 18;
	mov.b64 	%rd5970, {%r5928, %r5927};
	xor.b64  	%rd5971, %rd5969, %rd5970;
	shf.l.wrap.b32 	%r5929, %r5923, %r5924, 23;
	shf.l.wrap.b32 	%r5930, %r5924, %r5923, 23;
	mov.b64 	%rd5972, {%r5930, %r5929};
	xor.b64  	%rd5973, %rd5971, %rd5972;
	and.b64  	%rd5974, %rd5967, %rd5942;
	not.b64 	%rd5975, %rd5967;
	and.b64  	%rd5976, %rd5917, %rd5975;
	or.b64  	%rd5977, %rd5974, %rd5976;
	add.s64 	%rd5978, %rd5977, %rd5892;
	add.s64 	%rd5979, %rd5978, %rd5973;
	add.s64 	%rd5980, %rd5979, %rd69;
	add.s64 	%rd5981, %rd5980, %rd4613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5931,%dummy}, %rd5968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5932}, %rd5968;
	}
	shf.r.wrap.b32 	%r5933, %r5932, %r5931, 28;
	shf.r.wrap.b32 	%r5934, %r5931, %r5932, 28;
	mov.b64 	%rd5982, {%r5934, %r5933};
	shf.l.wrap.b32 	%r5935, %r5931, %r5932, 30;
	shf.l.wrap.b32 	%r5936, %r5932, %r5931, 30;
	mov.b64 	%rd5983, {%r5936, %r5935};
	xor.b64  	%rd5984, %rd5982, %rd5983;
	shf.l.wrap.b32 	%r5937, %r5931, %r5932, 25;
	shf.l.wrap.b32 	%r5938, %r5932, %r5931, 25;
	mov.b64 	%rd5985, {%r5938, %r5937};
	xor.b64  	%rd5986, %rd5984, %rd5985;
	xor.b64  	%rd5987, %rd5943, %rd5918;
	and.b64  	%rd5988, %rd5968, %rd5987;
	and.b64  	%rd5989, %rd5943, %rd5918;
	xor.b64  	%rd5990, %rd5988, %rd5989;
	add.s64 	%rd5991, %rd5986, %rd5990;
	add.s64 	%rd5992, %rd5981, %rd5893;
	add.s64 	%rd5993, %rd5991, %rd5981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5939,%dummy}, %rd5992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5940}, %rd5992;
	}
	shf.r.wrap.b32 	%r5941, %r5940, %r5939, 14;
	shf.r.wrap.b32 	%r5942, %r5939, %r5940, 14;
	mov.b64 	%rd5994, {%r5942, %r5941};
	shf.r.wrap.b32 	%r5943, %r5940, %r5939, 18;
	shf.r.wrap.b32 	%r5944, %r5939, %r5940, 18;
	mov.b64 	%rd5995, {%r5944, %r5943};
	xor.b64  	%rd5996, %rd5994, %rd5995;
	shf.l.wrap.b32 	%r5945, %r5939, %r5940, 23;
	shf.l.wrap.b32 	%r5946, %r5940, %r5939, 23;
	mov.b64 	%rd5997, {%r5946, %r5945};
	xor.b64  	%rd5998, %rd5996, %rd5997;
	and.b64  	%rd5999, %rd5992, %rd5967;
	not.b64 	%rd6000, %rd5992;
	and.b64  	%rd6001, %rd5942, %rd6000;
	or.b64  	%rd6002, %rd5999, %rd6001;
	add.s64 	%rd6003, %rd6002, %rd5917;
	add.s64 	%rd6004, %rd6003, %rd5998;
	add.s64 	%rd6005, %rd6004, %rd70;
	add.s64 	%rd6006, %rd6005, %rd4626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5947,%dummy}, %rd5993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5948}, %rd5993;
	}
	shf.r.wrap.b32 	%r5949, %r5948, %r5947, 28;
	shf.r.wrap.b32 	%r5950, %r5947, %r5948, 28;
	mov.b64 	%rd6007, {%r5950, %r5949};
	shf.l.wrap.b32 	%r5951, %r5947, %r5948, 30;
	shf.l.wrap.b32 	%r5952, %r5948, %r5947, 30;
	mov.b64 	%rd6008, {%r5952, %r5951};
	xor.b64  	%rd6009, %rd6007, %rd6008;
	shf.l.wrap.b32 	%r5953, %r5947, %r5948, 25;
	shf.l.wrap.b32 	%r5954, %r5948, %r5947, 25;
	mov.b64 	%rd6010, {%r5954, %r5953};
	xor.b64  	%rd6011, %rd6009, %rd6010;
	xor.b64  	%rd6012, %rd5968, %rd5943;
	and.b64  	%rd6013, %rd5993, %rd6012;
	and.b64  	%rd6014, %rd5968, %rd5943;
	xor.b64  	%rd6015, %rd6013, %rd6014;
	add.s64 	%rd6016, %rd6011, %rd6015;
	add.s64 	%rd6017, %rd6006, %rd5918;
	add.s64 	%rd6018, %rd6016, %rd6006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5955,%dummy}, %rd6017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5956}, %rd6017;
	}
	shf.r.wrap.b32 	%r5957, %r5956, %r5955, 14;
	shf.r.wrap.b32 	%r5958, %r5955, %r5956, 14;
	mov.b64 	%rd6019, {%r5958, %r5957};
	shf.r.wrap.b32 	%r5959, %r5956, %r5955, 18;
	shf.r.wrap.b32 	%r5960, %r5955, %r5956, 18;
	mov.b64 	%rd6020, {%r5960, %r5959};
	xor.b64  	%rd6021, %rd6019, %rd6020;
	shf.l.wrap.b32 	%r5961, %r5955, %r5956, 23;
	shf.l.wrap.b32 	%r5962, %r5956, %r5955, 23;
	mov.b64 	%rd6022, {%r5962, %r5961};
	xor.b64  	%rd6023, %rd6021, %rd6022;
	and.b64  	%rd6024, %rd6017, %rd5992;
	not.b64 	%rd6025, %rd6017;
	and.b64  	%rd6026, %rd5967, %rd6025;
	or.b64  	%rd6027, %rd6024, %rd6026;
	add.s64 	%rd6028, %rd6027, %rd5942;
	add.s64 	%rd6029, %rd6028, %rd6023;
	add.s64 	%rd6030, %rd6029, %rd71;
	add.s64 	%rd6031, %rd6030, %rd4639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5963,%dummy}, %rd6018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5964}, %rd6018;
	}
	shf.r.wrap.b32 	%r5965, %r5964, %r5963, 28;
	shf.r.wrap.b32 	%r5966, %r5963, %r5964, 28;
	mov.b64 	%rd6032, {%r5966, %r5965};
	shf.l.wrap.b32 	%r5967, %r5963, %r5964, 30;
	shf.l.wrap.b32 	%r5968, %r5964, %r5963, 30;
	mov.b64 	%rd6033, {%r5968, %r5967};
	xor.b64  	%rd6034, %rd6032, %rd6033;
	shf.l.wrap.b32 	%r5969, %r5963, %r5964, 25;
	shf.l.wrap.b32 	%r5970, %r5964, %r5963, 25;
	mov.b64 	%rd6035, {%r5970, %r5969};
	xor.b64  	%rd6036, %rd6034, %rd6035;
	xor.b64  	%rd6037, %rd5993, %rd5968;
	and.b64  	%rd6038, %rd6018, %rd6037;
	and.b64  	%rd6039, %rd5993, %rd5968;
	xor.b64  	%rd6040, %rd6038, %rd6039;
	add.s64 	%rd6041, %rd6036, %rd6040;
	add.s64 	%rd6042, %rd6031, %rd5943;
	add.s64 	%rd6043, %rd6041, %rd6031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5971,%dummy}, %rd6042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5972}, %rd6042;
	}
	shf.r.wrap.b32 	%r5973, %r5972, %r5971, 14;
	shf.r.wrap.b32 	%r5974, %r5971, %r5972, 14;
	mov.b64 	%rd6044, {%r5974, %r5973};
	shf.r.wrap.b32 	%r5975, %r5972, %r5971, 18;
	shf.r.wrap.b32 	%r5976, %r5971, %r5972, 18;
	mov.b64 	%rd6045, {%r5976, %r5975};
	xor.b64  	%rd6046, %rd6044, %rd6045;
	shf.l.wrap.b32 	%r5977, %r5971, %r5972, 23;
	shf.l.wrap.b32 	%r5978, %r5972, %r5971, 23;
	mov.b64 	%rd6047, {%r5978, %r5977};
	xor.b64  	%rd6048, %rd6046, %rd6047;
	and.b64  	%rd6049, %rd6042, %rd6017;
	not.b64 	%rd6050, %rd6042;
	and.b64  	%rd6051, %rd5992, %rd6050;
	or.b64  	%rd6052, %rd6049, %rd6051;
	add.s64 	%rd6053, %rd6052, %rd5967;
	add.s64 	%rd6054, %rd6053, %rd6048;
	add.s64 	%rd6055, %rd6054, %rd72;
	add.s64 	%rd6056, %rd6055, %rd4652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5979,%dummy}, %rd6043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5980}, %rd6043;
	}
	shf.r.wrap.b32 	%r5981, %r5980, %r5979, 28;
	shf.r.wrap.b32 	%r5982, %r5979, %r5980, 28;
	mov.b64 	%rd6057, {%r5982, %r5981};
	shf.l.wrap.b32 	%r5983, %r5979, %r5980, 30;
	shf.l.wrap.b32 	%r5984, %r5980, %r5979, 30;
	mov.b64 	%rd6058, {%r5984, %r5983};
	xor.b64  	%rd6059, %rd6057, %rd6058;
	shf.l.wrap.b32 	%r5985, %r5979, %r5980, 25;
	shf.l.wrap.b32 	%r5986, %r5980, %r5979, 25;
	mov.b64 	%rd6060, {%r5986, %r5985};
	xor.b64  	%rd6061, %rd6059, %rd6060;
	xor.b64  	%rd6062, %rd6018, %rd5993;
	and.b64  	%rd6063, %rd6043, %rd6062;
	and.b64  	%rd6064, %rd6018, %rd5993;
	xor.b64  	%rd6065, %rd6063, %rd6064;
	add.s64 	%rd6066, %rd6061, %rd6065;
	add.s64 	%rd6067, %rd6056, %rd5968;
	add.s64 	%rd6068, %rd6066, %rd6056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5987,%dummy}, %rd6067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5988}, %rd6067;
	}
	shf.r.wrap.b32 	%r5989, %r5988, %r5987, 14;
	shf.r.wrap.b32 	%r5990, %r5987, %r5988, 14;
	mov.b64 	%rd6069, {%r5990, %r5989};
	shf.r.wrap.b32 	%r5991, %r5988, %r5987, 18;
	shf.r.wrap.b32 	%r5992, %r5987, %r5988, 18;
	mov.b64 	%rd6070, {%r5992, %r5991};
	xor.b64  	%rd6071, %rd6069, %rd6070;
	shf.l.wrap.b32 	%r5993, %r5987, %r5988, 23;
	shf.l.wrap.b32 	%r5994, %r5988, %r5987, 23;
	mov.b64 	%rd6072, {%r5994, %r5993};
	xor.b64  	%rd6073, %rd6071, %rd6072;
	and.b64  	%rd6074, %rd6067, %rd6042;
	not.b64 	%rd6075, %rd6067;
	and.b64  	%rd6076, %rd6017, %rd6075;
	or.b64  	%rd6077, %rd6074, %rd6076;
	add.s64 	%rd6078, %rd6077, %rd5992;
	add.s64 	%rd6079, %rd6078, %rd6073;
	add.s64 	%rd6080, %rd6079, %rd73;
	add.s64 	%rd6081, %rd6080, %rd4665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5995,%dummy}, %rd6068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5996}, %rd6068;
	}
	shf.r.wrap.b32 	%r5997, %r5996, %r5995, 28;
	shf.r.wrap.b32 	%r5998, %r5995, %r5996, 28;
	mov.b64 	%rd6082, {%r5998, %r5997};
	shf.l.wrap.b32 	%r5999, %r5995, %r5996, 30;
	shf.l.wrap.b32 	%r6000, %r5996, %r5995, 30;
	mov.b64 	%rd6083, {%r6000, %r5999};
	xor.b64  	%rd6084, %rd6082, %rd6083;
	shf.l.wrap.b32 	%r6001, %r5995, %r5996, 25;
	shf.l.wrap.b32 	%r6002, %r5996, %r5995, 25;
	mov.b64 	%rd6085, {%r6002, %r6001};
	xor.b64  	%rd6086, %rd6084, %rd6085;
	xor.b64  	%rd6087, %rd6043, %rd6018;
	and.b64  	%rd6088, %rd6068, %rd6087;
	and.b64  	%rd6089, %rd6043, %rd6018;
	xor.b64  	%rd6090, %rd6088, %rd6089;
	add.s64 	%rd6091, %rd6086, %rd6090;
	add.s64 	%rd6092, %rd6081, %rd5993;
	add.s64 	%rd6093, %rd6091, %rd6081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6003,%dummy}, %rd6092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6004}, %rd6092;
	}
	shf.r.wrap.b32 	%r6005, %r6004, %r6003, 14;
	shf.r.wrap.b32 	%r6006, %r6003, %r6004, 14;
	mov.b64 	%rd6094, {%r6006, %r6005};
	shf.r.wrap.b32 	%r6007, %r6004, %r6003, 18;
	shf.r.wrap.b32 	%r6008, %r6003, %r6004, 18;
	mov.b64 	%rd6095, {%r6008, %r6007};
	xor.b64  	%rd6096, %rd6094, %rd6095;
	shf.l.wrap.b32 	%r6009, %r6003, %r6004, 23;
	shf.l.wrap.b32 	%r6010, %r6004, %r6003, 23;
	mov.b64 	%rd6097, {%r6010, %r6009};
	xor.b64  	%rd6098, %rd6096, %rd6097;
	and.b64  	%rd6099, %rd6092, %rd6067;
	not.b64 	%rd6100, %rd6092;
	and.b64  	%rd6101, %rd6042, %rd6100;
	or.b64  	%rd6102, %rd6099, %rd6101;
	add.s64 	%rd6103, %rd6102, %rd6017;
	add.s64 	%rd6104, %rd6103, %rd6098;
	add.s64 	%rd6105, %rd6104, %rd74;
	add.s64 	%rd6106, %rd6105, %rd4678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6011,%dummy}, %rd6093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6012}, %rd6093;
	}
	shf.r.wrap.b32 	%r6013, %r6012, %r6011, 28;
	shf.r.wrap.b32 	%r6014, %r6011, %r6012, 28;
	mov.b64 	%rd6107, {%r6014, %r6013};
	shf.l.wrap.b32 	%r6015, %r6011, %r6012, 30;
	shf.l.wrap.b32 	%r6016, %r6012, %r6011, 30;
	mov.b64 	%rd6108, {%r6016, %r6015};
	xor.b64  	%rd6109, %rd6107, %rd6108;
	shf.l.wrap.b32 	%r6017, %r6011, %r6012, 25;
	shf.l.wrap.b32 	%r6018, %r6012, %r6011, 25;
	mov.b64 	%rd6110, {%r6018, %r6017};
	xor.b64  	%rd6111, %rd6109, %rd6110;
	xor.b64  	%rd6112, %rd6068, %rd6043;
	and.b64  	%rd6113, %rd6093, %rd6112;
	and.b64  	%rd6114, %rd6068, %rd6043;
	xor.b64  	%rd6115, %rd6113, %rd6114;
	add.s64 	%rd6116, %rd6111, %rd6115;
	add.s64 	%rd6117, %rd6106, %rd6018;
	add.s64 	%rd6118, %rd6116, %rd6106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6019,%dummy}, %rd6117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6020}, %rd6117;
	}
	shf.r.wrap.b32 	%r6021, %r6020, %r6019, 14;
	shf.r.wrap.b32 	%r6022, %r6019, %r6020, 14;
	mov.b64 	%rd6119, {%r6022, %r6021};
	shf.r.wrap.b32 	%r6023, %r6020, %r6019, 18;
	shf.r.wrap.b32 	%r6024, %r6019, %r6020, 18;
	mov.b64 	%rd6120, {%r6024, %r6023};
	xor.b64  	%rd6121, %rd6119, %rd6120;
	shf.l.wrap.b32 	%r6025, %r6019, %r6020, 23;
	shf.l.wrap.b32 	%r6026, %r6020, %r6019, 23;
	mov.b64 	%rd6122, {%r6026, %r6025};
	xor.b64  	%rd6123, %rd6121, %rd6122;
	and.b64  	%rd6124, %rd6117, %rd6092;
	not.b64 	%rd6125, %rd6117;
	and.b64  	%rd6126, %rd6067, %rd6125;
	or.b64  	%rd6127, %rd6124, %rd6126;
	add.s64 	%rd6128, %rd6127, %rd6042;
	add.s64 	%rd6129, %rd6128, %rd6123;
	add.s64 	%rd6130, %rd6129, %rd75;
	add.s64 	%rd6131, %rd6130, %rd4691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6027,%dummy}, %rd6118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6028}, %rd6118;
	}
	shf.r.wrap.b32 	%r6029, %r6028, %r6027, 28;
	shf.r.wrap.b32 	%r6030, %r6027, %r6028, 28;
	mov.b64 	%rd6132, {%r6030, %r6029};
	shf.l.wrap.b32 	%r6031, %r6027, %r6028, 30;
	shf.l.wrap.b32 	%r6032, %r6028, %r6027, 30;
	mov.b64 	%rd6133, {%r6032, %r6031};
	xor.b64  	%rd6134, %rd6132, %rd6133;
	shf.l.wrap.b32 	%r6033, %r6027, %r6028, 25;
	shf.l.wrap.b32 	%r6034, %r6028, %r6027, 25;
	mov.b64 	%rd6135, {%r6034, %r6033};
	xor.b64  	%rd6136, %rd6134, %rd6135;
	xor.b64  	%rd6137, %rd6093, %rd6068;
	and.b64  	%rd6138, %rd6118, %rd6137;
	and.b64  	%rd6139, %rd6093, %rd6068;
	xor.b64  	%rd6140, %rd6138, %rd6139;
	add.s64 	%rd6141, %rd6136, %rd6140;
	add.s64 	%rd6142, %rd6131, %rd6043;
	add.s64 	%rd6143, %rd6141, %rd6131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6035,%dummy}, %rd6142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6036}, %rd6142;
	}
	shf.r.wrap.b32 	%r6037, %r6036, %r6035, 14;
	shf.r.wrap.b32 	%r6038, %r6035, %r6036, 14;
	mov.b64 	%rd6144, {%r6038, %r6037};
	shf.r.wrap.b32 	%r6039, %r6036, %r6035, 18;
	shf.r.wrap.b32 	%r6040, %r6035, %r6036, 18;
	mov.b64 	%rd6145, {%r6040, %r6039};
	xor.b64  	%rd6146, %rd6144, %rd6145;
	shf.l.wrap.b32 	%r6041, %r6035, %r6036, 23;
	shf.l.wrap.b32 	%r6042, %r6036, %r6035, 23;
	mov.b64 	%rd6147, {%r6042, %r6041};
	xor.b64  	%rd6148, %rd6146, %rd6147;
	and.b64  	%rd6149, %rd6142, %rd6117;
	not.b64 	%rd6150, %rd6142;
	and.b64  	%rd6151, %rd6092, %rd6150;
	or.b64  	%rd6152, %rd6149, %rd6151;
	add.s64 	%rd6153, %rd6152, %rd6067;
	add.s64 	%rd6154, %rd6153, %rd6148;
	add.s64 	%rd6155, %rd6154, %rd76;
	add.s64 	%rd6156, %rd6155, %rd4704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6043,%dummy}, %rd6143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6044}, %rd6143;
	}
	shf.r.wrap.b32 	%r6045, %r6044, %r6043, 28;
	shf.r.wrap.b32 	%r6046, %r6043, %r6044, 28;
	mov.b64 	%rd6157, {%r6046, %r6045};
	shf.l.wrap.b32 	%r6047, %r6043, %r6044, 30;
	shf.l.wrap.b32 	%r6048, %r6044, %r6043, 30;
	mov.b64 	%rd6158, {%r6048, %r6047};
	xor.b64  	%rd6159, %rd6157, %rd6158;
	shf.l.wrap.b32 	%r6049, %r6043, %r6044, 25;
	shf.l.wrap.b32 	%r6050, %r6044, %r6043, 25;
	mov.b64 	%rd6160, {%r6050, %r6049};
	xor.b64  	%rd6161, %rd6159, %rd6160;
	xor.b64  	%rd6162, %rd6118, %rd6093;
	and.b64  	%rd6163, %rd6143, %rd6162;
	and.b64  	%rd6164, %rd6118, %rd6093;
	xor.b64  	%rd6165, %rd6163, %rd6164;
	add.s64 	%rd6166, %rd6161, %rd6165;
	add.s64 	%rd6167, %rd6156, %rd6068;
	add.s64 	%rd6168, %rd6166, %rd6156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6051,%dummy}, %rd6167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6052}, %rd6167;
	}
	shf.r.wrap.b32 	%r6053, %r6052, %r6051, 14;
	shf.r.wrap.b32 	%r6054, %r6051, %r6052, 14;
	mov.b64 	%rd6169, {%r6054, %r6053};
	shf.r.wrap.b32 	%r6055, %r6052, %r6051, 18;
	shf.r.wrap.b32 	%r6056, %r6051, %r6052, 18;
	mov.b64 	%rd6170, {%r6056, %r6055};
	xor.b64  	%rd6171, %rd6169, %rd6170;
	shf.l.wrap.b32 	%r6057, %r6051, %r6052, 23;
	shf.l.wrap.b32 	%r6058, %r6052, %r6051, 23;
	mov.b64 	%rd6172, {%r6058, %r6057};
	xor.b64  	%rd6173, %rd6171, %rd6172;
	and.b64  	%rd6174, %rd6167, %rd6142;
	not.b64 	%rd6175, %rd6167;
	and.b64  	%rd6176, %rd6117, %rd6175;
	or.b64  	%rd6177, %rd6174, %rd6176;
	add.s64 	%rd6178, %rd6177, %rd6092;
	add.s64 	%rd6179, %rd6178, %rd6173;
	add.s64 	%rd6180, %rd6179, %rd77;
	add.s64 	%rd6181, %rd6180, %rd4717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6059,%dummy}, %rd6168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6060}, %rd6168;
	}
	shf.r.wrap.b32 	%r6061, %r6060, %r6059, 28;
	shf.r.wrap.b32 	%r6062, %r6059, %r6060, 28;
	mov.b64 	%rd6182, {%r6062, %r6061};
	shf.l.wrap.b32 	%r6063, %r6059, %r6060, 30;
	shf.l.wrap.b32 	%r6064, %r6060, %r6059, 30;
	mov.b64 	%rd6183, {%r6064, %r6063};
	xor.b64  	%rd6184, %rd6182, %rd6183;
	shf.l.wrap.b32 	%r6065, %r6059, %r6060, 25;
	shf.l.wrap.b32 	%r6066, %r6060, %r6059, 25;
	mov.b64 	%rd6185, {%r6066, %r6065};
	xor.b64  	%rd6186, %rd6184, %rd6185;
	xor.b64  	%rd6187, %rd6143, %rd6118;
	and.b64  	%rd6188, %rd6168, %rd6187;
	and.b64  	%rd6189, %rd6143, %rd6118;
	xor.b64  	%rd6190, %rd6188, %rd6189;
	add.s64 	%rd6191, %rd6186, %rd6190;
	add.s64 	%rd6192, %rd6181, %rd6093;
	add.s64 	%rd6193, %rd6191, %rd6181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6067,%dummy}, %rd6192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6068}, %rd6192;
	}
	shf.r.wrap.b32 	%r6069, %r6068, %r6067, 14;
	shf.r.wrap.b32 	%r6070, %r6067, %r6068, 14;
	mov.b64 	%rd6194, {%r6070, %r6069};
	shf.r.wrap.b32 	%r6071, %r6068, %r6067, 18;
	shf.r.wrap.b32 	%r6072, %r6067, %r6068, 18;
	mov.b64 	%rd6195, {%r6072, %r6071};
	xor.b64  	%rd6196, %rd6194, %rd6195;
	shf.l.wrap.b32 	%r6073, %r6067, %r6068, 23;
	shf.l.wrap.b32 	%r6074, %r6068, %r6067, 23;
	mov.b64 	%rd6197, {%r6074, %r6073};
	xor.b64  	%rd6198, %rd6196, %rd6197;
	and.b64  	%rd6199, %rd6192, %rd6167;
	not.b64 	%rd6200, %rd6192;
	and.b64  	%rd6201, %rd6142, %rd6200;
	or.b64  	%rd6202, %rd6199, %rd6201;
	add.s64 	%rd6203, %rd6202, %rd6117;
	add.s64 	%rd6204, %rd6203, %rd6198;
	add.s64 	%rd6205, %rd6204, %rd78;
	add.s64 	%rd6206, %rd6205, %rd4730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6075,%dummy}, %rd6193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6076}, %rd6193;
	}
	shf.r.wrap.b32 	%r6077, %r6076, %r6075, 28;
	shf.r.wrap.b32 	%r6078, %r6075, %r6076, 28;
	mov.b64 	%rd6207, {%r6078, %r6077};
	shf.l.wrap.b32 	%r6079, %r6075, %r6076, 30;
	shf.l.wrap.b32 	%r6080, %r6076, %r6075, 30;
	mov.b64 	%rd6208, {%r6080, %r6079};
	xor.b64  	%rd6209, %rd6207, %rd6208;
	shf.l.wrap.b32 	%r6081, %r6075, %r6076, 25;
	shf.l.wrap.b32 	%r6082, %r6076, %r6075, 25;
	mov.b64 	%rd6210, {%r6082, %r6081};
	xor.b64  	%rd6211, %rd6209, %rd6210;
	xor.b64  	%rd6212, %rd6168, %rd6143;
	and.b64  	%rd6213, %rd6193, %rd6212;
	and.b64  	%rd6214, %rd6168, %rd6143;
	xor.b64  	%rd6215, %rd6213, %rd6214;
	add.s64 	%rd6216, %rd6211, %rd6215;
	add.s64 	%rd6217, %rd6206, %rd6118;
	add.s64 	%rd6218, %rd6216, %rd6206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6083,%dummy}, %rd6217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6084}, %rd6217;
	}
	shf.r.wrap.b32 	%r6085, %r6084, %r6083, 14;
	shf.r.wrap.b32 	%r6086, %r6083, %r6084, 14;
	mov.b64 	%rd6219, {%r6086, %r6085};
	shf.r.wrap.b32 	%r6087, %r6084, %r6083, 18;
	shf.r.wrap.b32 	%r6088, %r6083, %r6084, 18;
	mov.b64 	%rd6220, {%r6088, %r6087};
	xor.b64  	%rd6221, %rd6219, %rd6220;
	shf.l.wrap.b32 	%r6089, %r6083, %r6084, 23;
	shf.l.wrap.b32 	%r6090, %r6084, %r6083, 23;
	mov.b64 	%rd6222, {%r6090, %r6089};
	xor.b64  	%rd6223, %rd6221, %rd6222;
	and.b64  	%rd6224, %rd6217, %rd6192;
	not.b64 	%rd6225, %rd6217;
	and.b64  	%rd6226, %rd6167, %rd6225;
	or.b64  	%rd6227, %rd6224, %rd6226;
	add.s64 	%rd6228, %rd6227, %rd6142;
	add.s64 	%rd6229, %rd6228, %rd6223;
	add.s64 	%rd6230, %rd6229, %rd79;
	add.s64 	%rd6231, %rd6230, %rd4743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6091,%dummy}, %rd6218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6092}, %rd6218;
	}
	shf.r.wrap.b32 	%r6093, %r6092, %r6091, 28;
	shf.r.wrap.b32 	%r6094, %r6091, %r6092, 28;
	mov.b64 	%rd6232, {%r6094, %r6093};
	shf.l.wrap.b32 	%r6095, %r6091, %r6092, 30;
	shf.l.wrap.b32 	%r6096, %r6092, %r6091, 30;
	mov.b64 	%rd6233, {%r6096, %r6095};
	xor.b64  	%rd6234, %rd6232, %rd6233;
	shf.l.wrap.b32 	%r6097, %r6091, %r6092, 25;
	shf.l.wrap.b32 	%r6098, %r6092, %r6091, 25;
	mov.b64 	%rd6235, {%r6098, %r6097};
	xor.b64  	%rd6236, %rd6234, %rd6235;
	xor.b64  	%rd6237, %rd6193, %rd6168;
	and.b64  	%rd6238, %rd6218, %rd6237;
	and.b64  	%rd6239, %rd6193, %rd6168;
	xor.b64  	%rd6240, %rd6238, %rd6239;
	add.s64 	%rd6241, %rd6236, %rd6240;
	add.s64 	%rd6242, %rd6231, %rd6143;
	add.s64 	%rd6243, %rd6241, %rd6231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6099,%dummy}, %rd6242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6100}, %rd6242;
	}
	shf.r.wrap.b32 	%r6101, %r6100, %r6099, 14;
	shf.r.wrap.b32 	%r6102, %r6099, %r6100, 14;
	mov.b64 	%rd6244, {%r6102, %r6101};
	shf.r.wrap.b32 	%r6103, %r6100, %r6099, 18;
	shf.r.wrap.b32 	%r6104, %r6099, %r6100, 18;
	mov.b64 	%rd6245, {%r6104, %r6103};
	xor.b64  	%rd6246, %rd6244, %rd6245;
	shf.l.wrap.b32 	%r6105, %r6099, %r6100, 23;
	shf.l.wrap.b32 	%r6106, %r6100, %r6099, 23;
	mov.b64 	%rd6247, {%r6106, %r6105};
	xor.b64  	%rd6248, %rd6246, %rd6247;
	and.b64  	%rd6249, %rd6242, %rd6217;
	not.b64 	%rd6250, %rd6242;
	and.b64  	%rd6251, %rd6192, %rd6250;
	or.b64  	%rd6252, %rd6249, %rd6251;
	add.s64 	%rd6253, %rd6252, %rd6167;
	add.s64 	%rd6254, %rd6253, %rd6248;
	add.s64 	%rd6255, %rd6254, %rd80;
	add.s64 	%rd6256, %rd6255, %rd4756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6107,%dummy}, %rd6243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6108}, %rd6243;
	}
	shf.r.wrap.b32 	%r6109, %r6108, %r6107, 28;
	shf.r.wrap.b32 	%r6110, %r6107, %r6108, 28;
	mov.b64 	%rd6257, {%r6110, %r6109};
	shf.l.wrap.b32 	%r6111, %r6107, %r6108, 30;
	shf.l.wrap.b32 	%r6112, %r6108, %r6107, 30;
	mov.b64 	%rd6258, {%r6112, %r6111};
	xor.b64  	%rd6259, %rd6257, %rd6258;
	shf.l.wrap.b32 	%r6113, %r6107, %r6108, 25;
	shf.l.wrap.b32 	%r6114, %r6108, %r6107, 25;
	mov.b64 	%rd6260, {%r6114, %r6113};
	xor.b64  	%rd6261, %rd6259, %rd6260;
	xor.b64  	%rd6262, %rd6218, %rd6193;
	and.b64  	%rd6263, %rd6243, %rd6262;
	and.b64  	%rd6264, %rd6218, %rd6193;
	xor.b64  	%rd6265, %rd6263, %rd6264;
	add.s64 	%rd6266, %rd6261, %rd6265;
	add.s64 	%rd6267, %rd6256, %rd6168;
	add.s64 	%rd6268, %rd6266, %rd6256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6115,%dummy}, %rd6267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6116}, %rd6267;
	}
	shf.r.wrap.b32 	%r6117, %r6116, %r6115, 14;
	shf.r.wrap.b32 	%r6118, %r6115, %r6116, 14;
	mov.b64 	%rd6269, {%r6118, %r6117};
	shf.r.wrap.b32 	%r6119, %r6116, %r6115, 18;
	shf.r.wrap.b32 	%r6120, %r6115, %r6116, 18;
	mov.b64 	%rd6270, {%r6120, %r6119};
	xor.b64  	%rd6271, %rd6269, %rd6270;
	shf.l.wrap.b32 	%r6121, %r6115, %r6116, 23;
	shf.l.wrap.b32 	%r6122, %r6116, %r6115, 23;
	mov.b64 	%rd6272, {%r6122, %r6121};
	xor.b64  	%rd6273, %rd6271, %rd6272;
	and.b64  	%rd6274, %rd6267, %rd6242;
	not.b64 	%rd6275, %rd6267;
	and.b64  	%rd6276, %rd6217, %rd6275;
	or.b64  	%rd6277, %rd6274, %rd6276;
	add.s64 	%rd6278, %rd6277, %rd6192;
	add.s64 	%rd6279, %rd6278, %rd6273;
	add.s64 	%rd6280, %rd6279, %rd81;
	add.s64 	%rd6281, %rd6280, %rd4769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6123,%dummy}, %rd6268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6124}, %rd6268;
	}
	shf.r.wrap.b32 	%r6125, %r6124, %r6123, 28;
	shf.r.wrap.b32 	%r6126, %r6123, %r6124, 28;
	mov.b64 	%rd6282, {%r6126, %r6125};
	shf.l.wrap.b32 	%r6127, %r6123, %r6124, 30;
	shf.l.wrap.b32 	%r6128, %r6124, %r6123, 30;
	mov.b64 	%rd6283, {%r6128, %r6127};
	xor.b64  	%rd6284, %rd6282, %rd6283;
	shf.l.wrap.b32 	%r6129, %r6123, %r6124, 25;
	shf.l.wrap.b32 	%r6130, %r6124, %r6123, 25;
	mov.b64 	%rd6285, {%r6130, %r6129};
	xor.b64  	%rd6286, %rd6284, %rd6285;
	xor.b64  	%rd6287, %rd6243, %rd6218;
	and.b64  	%rd6288, %rd6268, %rd6287;
	and.b64  	%rd6289, %rd6243, %rd6218;
	xor.b64  	%rd6290, %rd6288, %rd6289;
	add.s64 	%rd6291, %rd6286, %rd6290;
	add.s64 	%rd6292, %rd6281, %rd6193;
	add.s64 	%rd6293, %rd6291, %rd6281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6131,%dummy}, %rd6292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6132}, %rd6292;
	}
	shf.r.wrap.b32 	%r6133, %r6132, %r6131, 14;
	shf.r.wrap.b32 	%r6134, %r6131, %r6132, 14;
	mov.b64 	%rd6294, {%r6134, %r6133};
	shf.r.wrap.b32 	%r6135, %r6132, %r6131, 18;
	shf.r.wrap.b32 	%r6136, %r6131, %r6132, 18;
	mov.b64 	%rd6295, {%r6136, %r6135};
	xor.b64  	%rd6296, %rd6294, %rd6295;
	shf.l.wrap.b32 	%r6137, %r6131, %r6132, 23;
	shf.l.wrap.b32 	%r6138, %r6132, %r6131, 23;
	mov.b64 	%rd6297, {%r6138, %r6137};
	xor.b64  	%rd6298, %rd6296, %rd6297;
	and.b64  	%rd6299, %rd6292, %rd6267;
	not.b64 	%rd6300, %rd6292;
	and.b64  	%rd6301, %rd6242, %rd6300;
	or.b64  	%rd6302, %rd6299, %rd6301;
	add.s64 	%rd6303, %rd6302, %rd6217;
	add.s64 	%rd6304, %rd6303, %rd6298;
	add.s64 	%rd6305, %rd6304, %rd82;
	add.s64 	%rd6306, %rd6305, %rd4782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6139,%dummy}, %rd6293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6140}, %rd6293;
	}
	shf.r.wrap.b32 	%r6141, %r6140, %r6139, 28;
	shf.r.wrap.b32 	%r6142, %r6139, %r6140, 28;
	mov.b64 	%rd6307, {%r6142, %r6141};
	shf.l.wrap.b32 	%r6143, %r6139, %r6140, 30;
	shf.l.wrap.b32 	%r6144, %r6140, %r6139, 30;
	mov.b64 	%rd6308, {%r6144, %r6143};
	xor.b64  	%rd6309, %rd6307, %rd6308;
	shf.l.wrap.b32 	%r6145, %r6139, %r6140, 25;
	shf.l.wrap.b32 	%r6146, %r6140, %r6139, 25;
	mov.b64 	%rd6310, {%r6146, %r6145};
	xor.b64  	%rd6311, %rd6309, %rd6310;
	xor.b64  	%rd6312, %rd6268, %rd6243;
	and.b64  	%rd6313, %rd6293, %rd6312;
	and.b64  	%rd6314, %rd6268, %rd6243;
	xor.b64  	%rd6315, %rd6313, %rd6314;
	add.s64 	%rd6316, %rd6311, %rd6315;
	add.s64 	%rd6317, %rd6306, %rd6218;
	add.s64 	%rd6318, %rd6316, %rd6306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6147,%dummy}, %rd6317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6148}, %rd6317;
	}
	shf.r.wrap.b32 	%r6149, %r6148, %r6147, 14;
	shf.r.wrap.b32 	%r6150, %r6147, %r6148, 14;
	mov.b64 	%rd6319, {%r6150, %r6149};
	shf.r.wrap.b32 	%r6151, %r6148, %r6147, 18;
	shf.r.wrap.b32 	%r6152, %r6147, %r6148, 18;
	mov.b64 	%rd6320, {%r6152, %r6151};
	xor.b64  	%rd6321, %rd6319, %rd6320;
	shf.l.wrap.b32 	%r6153, %r6147, %r6148, 23;
	shf.l.wrap.b32 	%r6154, %r6148, %r6147, 23;
	mov.b64 	%rd6322, {%r6154, %r6153};
	xor.b64  	%rd6323, %rd6321, %rd6322;
	and.b64  	%rd6324, %rd6317, %rd6292;
	not.b64 	%rd6325, %rd6317;
	and.b64  	%rd6326, %rd6267, %rd6325;
	or.b64  	%rd6327, %rd6324, %rd6326;
	add.s64 	%rd6328, %rd6327, %rd6242;
	add.s64 	%rd6329, %rd6328, %rd6323;
	add.s64 	%rd6330, %rd6329, %rd83;
	add.s64 	%rd6331, %rd6330, %rd4795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6155,%dummy}, %rd6318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6156}, %rd6318;
	}
	shf.r.wrap.b32 	%r6157, %r6156, %r6155, 28;
	shf.r.wrap.b32 	%r6158, %r6155, %r6156, 28;
	mov.b64 	%rd6332, {%r6158, %r6157};
	shf.l.wrap.b32 	%r6159, %r6155, %r6156, 30;
	shf.l.wrap.b32 	%r6160, %r6156, %r6155, 30;
	mov.b64 	%rd6333, {%r6160, %r6159};
	xor.b64  	%rd6334, %rd6332, %rd6333;
	shf.l.wrap.b32 	%r6161, %r6155, %r6156, 25;
	shf.l.wrap.b32 	%r6162, %r6156, %r6155, 25;
	mov.b64 	%rd6335, {%r6162, %r6161};
	xor.b64  	%rd6336, %rd6334, %rd6335;
	xor.b64  	%rd6337, %rd6293, %rd6268;
	and.b64  	%rd6338, %rd6318, %rd6337;
	and.b64  	%rd6339, %rd6293, %rd6268;
	xor.b64  	%rd6340, %rd6338, %rd6339;
	add.s64 	%rd6341, %rd6336, %rd6340;
	add.s64 	%rd6342, %rd6331, %rd6243;
	add.s64 	%rd6343, %rd6341, %rd6331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6163,%dummy}, %rd6342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6164}, %rd6342;
	}
	shf.r.wrap.b32 	%r6165, %r6164, %r6163, 14;
	shf.r.wrap.b32 	%r6166, %r6163, %r6164, 14;
	mov.b64 	%rd6344, {%r6166, %r6165};
	shf.r.wrap.b32 	%r6167, %r6164, %r6163, 18;
	shf.r.wrap.b32 	%r6168, %r6163, %r6164, 18;
	mov.b64 	%rd6345, {%r6168, %r6167};
	xor.b64  	%rd6346, %rd6344, %rd6345;
	shf.l.wrap.b32 	%r6169, %r6163, %r6164, 23;
	shf.l.wrap.b32 	%r6170, %r6164, %r6163, 23;
	mov.b64 	%rd6347, {%r6170, %r6169};
	xor.b64  	%rd6348, %rd6346, %rd6347;
	and.b64  	%rd6349, %rd6342, %rd6317;
	not.b64 	%rd6350, %rd6342;
	and.b64  	%rd6351, %rd6292, %rd6350;
	or.b64  	%rd6352, %rd6349, %rd6351;
	add.s64 	%rd6353, %rd6352, %rd6267;
	add.s64 	%rd6354, %rd6353, %rd6348;
	add.s64 	%rd6355, %rd6354, %rd84;
	add.s64 	%rd6356, %rd6355, %rd4808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6171,%dummy}, %rd6343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6172}, %rd6343;
	}
	shf.r.wrap.b32 	%r6173, %r6172, %r6171, 28;
	shf.r.wrap.b32 	%r6174, %r6171, %r6172, 28;
	mov.b64 	%rd6357, {%r6174, %r6173};
	shf.l.wrap.b32 	%r6175, %r6171, %r6172, 30;
	shf.l.wrap.b32 	%r6176, %r6172, %r6171, 30;
	mov.b64 	%rd6358, {%r6176, %r6175};
	xor.b64  	%rd6359, %rd6357, %rd6358;
	shf.l.wrap.b32 	%r6177, %r6171, %r6172, 25;
	shf.l.wrap.b32 	%r6178, %r6172, %r6171, 25;
	mov.b64 	%rd6360, {%r6178, %r6177};
	xor.b64  	%rd6361, %rd6359, %rd6360;
	xor.b64  	%rd6362, %rd6318, %rd6293;
	and.b64  	%rd6363, %rd6343, %rd6362;
	and.b64  	%rd6364, %rd6318, %rd6293;
	xor.b64  	%rd6365, %rd6363, %rd6364;
	add.s64 	%rd6366, %rd6361, %rd6365;
	add.s64 	%rd6367, %rd6356, %rd6268;
	add.s64 	%rd6368, %rd6366, %rd6356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6179,%dummy}, %rd6367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6180}, %rd6367;
	}
	shf.r.wrap.b32 	%r6181, %r6180, %r6179, 14;
	shf.r.wrap.b32 	%r6182, %r6179, %r6180, 14;
	mov.b64 	%rd6369, {%r6182, %r6181};
	shf.r.wrap.b32 	%r6183, %r6180, %r6179, 18;
	shf.r.wrap.b32 	%r6184, %r6179, %r6180, 18;
	mov.b64 	%rd6370, {%r6184, %r6183};
	xor.b64  	%rd6371, %rd6369, %rd6370;
	shf.l.wrap.b32 	%r6185, %r6179, %r6180, 23;
	shf.l.wrap.b32 	%r6186, %r6180, %r6179, 23;
	mov.b64 	%rd6372, {%r6186, %r6185};
	xor.b64  	%rd6373, %rd6371, %rd6372;
	and.b64  	%rd6374, %rd6367, %rd6342;
	not.b64 	%rd6375, %rd6367;
	and.b64  	%rd6376, %rd6317, %rd6375;
	or.b64  	%rd6377, %rd6374, %rd6376;
	add.s64 	%rd6378, %rd6377, %rd6292;
	add.s64 	%rd6379, %rd6378, %rd6373;
	add.s64 	%rd6380, %rd6379, %rd85;
	add.s64 	%rd6381, %rd6380, %rd4821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6187,%dummy}, %rd6368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6188}, %rd6368;
	}
	shf.r.wrap.b32 	%r6189, %r6188, %r6187, 28;
	shf.r.wrap.b32 	%r6190, %r6187, %r6188, 28;
	mov.b64 	%rd6382, {%r6190, %r6189};
	shf.l.wrap.b32 	%r6191, %r6187, %r6188, 30;
	shf.l.wrap.b32 	%r6192, %r6188, %r6187, 30;
	mov.b64 	%rd6383, {%r6192, %r6191};
	xor.b64  	%rd6384, %rd6382, %rd6383;
	shf.l.wrap.b32 	%r6193, %r6187, %r6188, 25;
	shf.l.wrap.b32 	%r6194, %r6188, %r6187, 25;
	mov.b64 	%rd6385, {%r6194, %r6193};
	xor.b64  	%rd6386, %rd6384, %rd6385;
	xor.b64  	%rd6387, %rd6343, %rd6318;
	and.b64  	%rd6388, %rd6368, %rd6387;
	and.b64  	%rd6389, %rd6343, %rd6318;
	xor.b64  	%rd6390, %rd6388, %rd6389;
	add.s64 	%rd6391, %rd6386, %rd6390;
	add.s64 	%rd6392, %rd6381, %rd6293;
	add.s64 	%rd6393, %rd6391, %rd6381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6195,%dummy}, %rd6392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6196}, %rd6392;
	}
	shf.r.wrap.b32 	%r6197, %r6196, %r6195, 14;
	shf.r.wrap.b32 	%r6198, %r6195, %r6196, 14;
	mov.b64 	%rd6394, {%r6198, %r6197};
	shf.r.wrap.b32 	%r6199, %r6196, %r6195, 18;
	shf.r.wrap.b32 	%r6200, %r6195, %r6196, 18;
	mov.b64 	%rd6395, {%r6200, %r6199};
	xor.b64  	%rd6396, %rd6394, %rd6395;
	shf.l.wrap.b32 	%r6201, %r6195, %r6196, 23;
	shf.l.wrap.b32 	%r6202, %r6196, %r6195, 23;
	mov.b64 	%rd6397, {%r6202, %r6201};
	xor.b64  	%rd6398, %rd6396, %rd6397;
	and.b64  	%rd6399, %rd6392, %rd6367;
	not.b64 	%rd6400, %rd6392;
	and.b64  	%rd6401, %rd6342, %rd6400;
	or.b64  	%rd6402, %rd6399, %rd6401;
	add.s64 	%rd6403, %rd6402, %rd6317;
	add.s64 	%rd6404, %rd6403, %rd6398;
	add.s64 	%rd6405, %rd6404, %rd86;
	add.s64 	%rd6406, %rd6405, %rd4834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6203,%dummy}, %rd6393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6204}, %rd6393;
	}
	shf.r.wrap.b32 	%r6205, %r6204, %r6203, 28;
	shf.r.wrap.b32 	%r6206, %r6203, %r6204, 28;
	mov.b64 	%rd6407, {%r6206, %r6205};
	shf.l.wrap.b32 	%r6207, %r6203, %r6204, 30;
	shf.l.wrap.b32 	%r6208, %r6204, %r6203, 30;
	mov.b64 	%rd6408, {%r6208, %r6207};
	xor.b64  	%rd6409, %rd6407, %rd6408;
	shf.l.wrap.b32 	%r6209, %r6203, %r6204, 25;
	shf.l.wrap.b32 	%r6210, %r6204, %r6203, 25;
	mov.b64 	%rd6410, {%r6210, %r6209};
	xor.b64  	%rd6411, %rd6409, %rd6410;
	xor.b64  	%rd6412, %rd6368, %rd6343;
	and.b64  	%rd6413, %rd6393, %rd6412;
	and.b64  	%rd6414, %rd6368, %rd6343;
	xor.b64  	%rd6415, %rd6413, %rd6414;
	add.s64 	%rd6416, %rd6411, %rd6415;
	add.s64 	%rd6417, %rd6406, %rd6318;
	add.s64 	%rd6418, %rd6416, %rd6406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6211,%dummy}, %rd6417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6212}, %rd6417;
	}
	shf.r.wrap.b32 	%r6213, %r6212, %r6211, 14;
	shf.r.wrap.b32 	%r6214, %r6211, %r6212, 14;
	mov.b64 	%rd6419, {%r6214, %r6213};
	shf.r.wrap.b32 	%r6215, %r6212, %r6211, 18;
	shf.r.wrap.b32 	%r6216, %r6211, %r6212, 18;
	mov.b64 	%rd6420, {%r6216, %r6215};
	xor.b64  	%rd6421, %rd6419, %rd6420;
	shf.l.wrap.b32 	%r6217, %r6211, %r6212, 23;
	shf.l.wrap.b32 	%r6218, %r6212, %r6211, 23;
	mov.b64 	%rd6422, {%r6218, %r6217};
	xor.b64  	%rd6423, %rd6421, %rd6422;
	and.b64  	%rd6424, %rd6417, %rd6392;
	not.b64 	%rd6425, %rd6417;
	and.b64  	%rd6426, %rd6367, %rd6425;
	or.b64  	%rd6427, %rd6424, %rd6426;
	add.s64 	%rd6428, %rd6427, %rd6342;
	add.s64 	%rd6429, %rd6428, %rd6423;
	add.s64 	%rd6430, %rd6429, %rd87;
	add.s64 	%rd6431, %rd6430, %rd4847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6219,%dummy}, %rd6418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6220}, %rd6418;
	}
	shf.r.wrap.b32 	%r6221, %r6220, %r6219, 28;
	shf.r.wrap.b32 	%r6222, %r6219, %r6220, 28;
	mov.b64 	%rd6432, {%r6222, %r6221};
	shf.l.wrap.b32 	%r6223, %r6219, %r6220, 30;
	shf.l.wrap.b32 	%r6224, %r6220, %r6219, 30;
	mov.b64 	%rd6433, {%r6224, %r6223};
	xor.b64  	%rd6434, %rd6432, %rd6433;
	shf.l.wrap.b32 	%r6225, %r6219, %r6220, 25;
	shf.l.wrap.b32 	%r6226, %r6220, %r6219, 25;
	mov.b64 	%rd6435, {%r6226, %r6225};
	xor.b64  	%rd6436, %rd6434, %rd6435;
	xor.b64  	%rd6437, %rd6393, %rd6368;
	and.b64  	%rd6438, %rd6418, %rd6437;
	and.b64  	%rd6439, %rd6393, %rd6368;
	xor.b64  	%rd6440, %rd6438, %rd6439;
	add.s64 	%rd6441, %rd6436, %rd6440;
	add.s64 	%rd6442, %rd6431, %rd6343;
	add.s64 	%rd6443, %rd6441, %rd6431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6227,%dummy}, %rd6442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6228}, %rd6442;
	}
	shf.r.wrap.b32 	%r6229, %r6228, %r6227, 14;
	shf.r.wrap.b32 	%r6230, %r6227, %r6228, 14;
	mov.b64 	%rd6444, {%r6230, %r6229};
	shf.r.wrap.b32 	%r6231, %r6228, %r6227, 18;
	shf.r.wrap.b32 	%r6232, %r6227, %r6228, 18;
	mov.b64 	%rd6445, {%r6232, %r6231};
	xor.b64  	%rd6446, %rd6444, %rd6445;
	shf.l.wrap.b32 	%r6233, %r6227, %r6228, 23;
	shf.l.wrap.b32 	%r6234, %r6228, %r6227, 23;
	mov.b64 	%rd6447, {%r6234, %r6233};
	xor.b64  	%rd6448, %rd6446, %rd6447;
	and.b64  	%rd6449, %rd6442, %rd6417;
	not.b64 	%rd6450, %rd6442;
	and.b64  	%rd6451, %rd6392, %rd6450;
	or.b64  	%rd6452, %rd6449, %rd6451;
	add.s64 	%rd6453, %rd6452, %rd6367;
	add.s64 	%rd6454, %rd6453, %rd6448;
	add.s64 	%rd6455, %rd6454, %rd88;
	add.s64 	%rd6456, %rd6455, %rd4860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6235,%dummy}, %rd6443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6236}, %rd6443;
	}
	shf.r.wrap.b32 	%r6237, %r6236, %r6235, 28;
	shf.r.wrap.b32 	%r6238, %r6235, %r6236, 28;
	mov.b64 	%rd6457, {%r6238, %r6237};
	shf.l.wrap.b32 	%r6239, %r6235, %r6236, 30;
	shf.l.wrap.b32 	%r6240, %r6236, %r6235, 30;
	mov.b64 	%rd6458, {%r6240, %r6239};
	xor.b64  	%rd6459, %rd6457, %rd6458;
	shf.l.wrap.b32 	%r6241, %r6235, %r6236, 25;
	shf.l.wrap.b32 	%r6242, %r6236, %r6235, 25;
	mov.b64 	%rd6460, {%r6242, %r6241};
	xor.b64  	%rd6461, %rd6459, %rd6460;
	xor.b64  	%rd6462, %rd6418, %rd6393;
	and.b64  	%rd6463, %rd6443, %rd6462;
	and.b64  	%rd6464, %rd6418, %rd6393;
	xor.b64  	%rd6465, %rd6463, %rd6464;
	add.s64 	%rd6466, %rd6461, %rd6465;
	add.s64 	%rd6467, %rd6456, %rd6368;
	add.s64 	%rd6468, %rd6466, %rd6456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6243,%dummy}, %rd6467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6244}, %rd6467;
	}
	shf.r.wrap.b32 	%r6245, %r6244, %r6243, 14;
	shf.r.wrap.b32 	%r6246, %r6243, %r6244, 14;
	mov.b64 	%rd6469, {%r6246, %r6245};
	shf.r.wrap.b32 	%r6247, %r6244, %r6243, 18;
	shf.r.wrap.b32 	%r6248, %r6243, %r6244, 18;
	mov.b64 	%rd6470, {%r6248, %r6247};
	xor.b64  	%rd6471, %rd6469, %rd6470;
	shf.l.wrap.b32 	%r6249, %r6243, %r6244, 23;
	shf.l.wrap.b32 	%r6250, %r6244, %r6243, 23;
	mov.b64 	%rd6472, {%r6250, %r6249};
	xor.b64  	%rd6473, %rd6471, %rd6472;
	and.b64  	%rd6474, %rd6467, %rd6442;
	not.b64 	%rd6475, %rd6467;
	and.b64  	%rd6476, %rd6417, %rd6475;
	or.b64  	%rd6477, %rd6474, %rd6476;
	add.s64 	%rd6478, %rd6477, %rd6392;
	add.s64 	%rd6479, %rd6478, %rd6473;
	add.s64 	%rd6480, %rd6479, %rd89;
	add.s64 	%rd6481, %rd6480, %rd4873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6251,%dummy}, %rd6468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6252}, %rd6468;
	}
	shf.r.wrap.b32 	%r6253, %r6252, %r6251, 28;
	shf.r.wrap.b32 	%r6254, %r6251, %r6252, 28;
	mov.b64 	%rd6482, {%r6254, %r6253};
	shf.l.wrap.b32 	%r6255, %r6251, %r6252, 30;
	shf.l.wrap.b32 	%r6256, %r6252, %r6251, 30;
	mov.b64 	%rd6483, {%r6256, %r6255};
	xor.b64  	%rd6484, %rd6482, %rd6483;
	shf.l.wrap.b32 	%r6257, %r6251, %r6252, 25;
	shf.l.wrap.b32 	%r6258, %r6252, %r6251, 25;
	mov.b64 	%rd6485, {%r6258, %r6257};
	xor.b64  	%rd6486, %rd6484, %rd6485;
	xor.b64  	%rd6487, %rd6443, %rd6418;
	and.b64  	%rd6488, %rd6468, %rd6487;
	and.b64  	%rd6489, %rd6443, %rd6418;
	xor.b64  	%rd6490, %rd6488, %rd6489;
	add.s64 	%rd6491, %rd6486, %rd6490;
	add.s64 	%rd6492, %rd6481, %rd6393;
	add.s64 	%rd6493, %rd6491, %rd6481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6259,%dummy}, %rd6492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6260}, %rd6492;
	}
	shf.r.wrap.b32 	%r6261, %r6260, %r6259, 14;
	shf.r.wrap.b32 	%r6262, %r6259, %r6260, 14;
	mov.b64 	%rd6494, {%r6262, %r6261};
	shf.r.wrap.b32 	%r6263, %r6260, %r6259, 18;
	shf.r.wrap.b32 	%r6264, %r6259, %r6260, 18;
	mov.b64 	%rd6495, {%r6264, %r6263};
	xor.b64  	%rd6496, %rd6494, %rd6495;
	shf.l.wrap.b32 	%r6265, %r6259, %r6260, 23;
	shf.l.wrap.b32 	%r6266, %r6260, %r6259, 23;
	mov.b64 	%rd6497, {%r6266, %r6265};
	xor.b64  	%rd6498, %rd6496, %rd6497;
	and.b64  	%rd6499, %rd6492, %rd6467;
	not.b64 	%rd6500, %rd6492;
	and.b64  	%rd6501, %rd6442, %rd6500;
	or.b64  	%rd6502, %rd6499, %rd6501;
	add.s64 	%rd6503, %rd6502, %rd6417;
	add.s64 	%rd6504, %rd6503, %rd6498;
	add.s64 	%rd6505, %rd6504, %rd90;
	add.s64 	%rd6506, %rd6505, %rd4886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6267,%dummy}, %rd6493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6268}, %rd6493;
	}
	shf.r.wrap.b32 	%r6269, %r6268, %r6267, 28;
	shf.r.wrap.b32 	%r6270, %r6267, %r6268, 28;
	mov.b64 	%rd6507, {%r6270, %r6269};
	shf.l.wrap.b32 	%r6271, %r6267, %r6268, 30;
	shf.l.wrap.b32 	%r6272, %r6268, %r6267, 30;
	mov.b64 	%rd6508, {%r6272, %r6271};
	xor.b64  	%rd6509, %rd6507, %rd6508;
	shf.l.wrap.b32 	%r6273, %r6267, %r6268, 25;
	shf.l.wrap.b32 	%r6274, %r6268, %r6267, 25;
	mov.b64 	%rd6510, {%r6274, %r6273};
	xor.b64  	%rd6511, %rd6509, %rd6510;
	xor.b64  	%rd6512, %rd6468, %rd6443;
	and.b64  	%rd6513, %rd6493, %rd6512;
	and.b64  	%rd6514, %rd6468, %rd6443;
	xor.b64  	%rd6515, %rd6513, %rd6514;
	add.s64 	%rd6516, %rd6511, %rd6515;
	add.s64 	%rd6517, %rd6506, %rd6418;
	add.s64 	%rd6518, %rd6516, %rd6506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6275,%dummy}, %rd6517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6276}, %rd6517;
	}
	shf.r.wrap.b32 	%r6277, %r6276, %r6275, 14;
	shf.r.wrap.b32 	%r6278, %r6275, %r6276, 14;
	mov.b64 	%rd6519, {%r6278, %r6277};
	shf.r.wrap.b32 	%r6279, %r6276, %r6275, 18;
	shf.r.wrap.b32 	%r6280, %r6275, %r6276, 18;
	mov.b64 	%rd6520, {%r6280, %r6279};
	xor.b64  	%rd6521, %rd6519, %rd6520;
	shf.l.wrap.b32 	%r6281, %r6275, %r6276, 23;
	shf.l.wrap.b32 	%r6282, %r6276, %r6275, 23;
	mov.b64 	%rd6522, {%r6282, %r6281};
	xor.b64  	%rd6523, %rd6521, %rd6522;
	and.b64  	%rd6524, %rd6517, %rd6492;
	not.b64 	%rd6525, %rd6517;
	and.b64  	%rd6526, %rd6467, %rd6525;
	or.b64  	%rd6527, %rd6524, %rd6526;
	add.s64 	%rd6528, %rd6527, %rd6442;
	add.s64 	%rd6529, %rd6528, %rd6523;
	add.s64 	%rd6530, %rd6529, %rd91;
	add.s64 	%rd6531, %rd6530, %rd4899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6283,%dummy}, %rd6518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6284}, %rd6518;
	}
	shf.r.wrap.b32 	%r6285, %r6284, %r6283, 28;
	shf.r.wrap.b32 	%r6286, %r6283, %r6284, 28;
	mov.b64 	%rd6532, {%r6286, %r6285};
	shf.l.wrap.b32 	%r6287, %r6283, %r6284, 30;
	shf.l.wrap.b32 	%r6288, %r6284, %r6283, 30;
	mov.b64 	%rd6533, {%r6288, %r6287};
	xor.b64  	%rd6534, %rd6532, %rd6533;
	shf.l.wrap.b32 	%r6289, %r6283, %r6284, 25;
	shf.l.wrap.b32 	%r6290, %r6284, %r6283, 25;
	mov.b64 	%rd6535, {%r6290, %r6289};
	xor.b64  	%rd6536, %rd6534, %rd6535;
	xor.b64  	%rd6537, %rd6493, %rd6468;
	and.b64  	%rd6538, %rd6518, %rd6537;
	and.b64  	%rd6539, %rd6493, %rd6468;
	xor.b64  	%rd6540, %rd6538, %rd6539;
	add.s64 	%rd6541, %rd6536, %rd6540;
	add.s64 	%rd6542, %rd6531, %rd6443;
	add.s64 	%rd6543, %rd6541, %rd6531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6291,%dummy}, %rd6542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6292}, %rd6542;
	}
	shf.r.wrap.b32 	%r6293, %r6292, %r6291, 14;
	shf.r.wrap.b32 	%r6294, %r6291, %r6292, 14;
	mov.b64 	%rd6544, {%r6294, %r6293};
	shf.r.wrap.b32 	%r6295, %r6292, %r6291, 18;
	shf.r.wrap.b32 	%r6296, %r6291, %r6292, 18;
	mov.b64 	%rd6545, {%r6296, %r6295};
	xor.b64  	%rd6546, %rd6544, %rd6545;
	shf.l.wrap.b32 	%r6297, %r6291, %r6292, 23;
	shf.l.wrap.b32 	%r6298, %r6292, %r6291, 23;
	mov.b64 	%rd6547, {%r6298, %r6297};
	xor.b64  	%rd6548, %rd6546, %rd6547;
	and.b64  	%rd6549, %rd6542, %rd6517;
	not.b64 	%rd6550, %rd6542;
	and.b64  	%rd6551, %rd6492, %rd6550;
	or.b64  	%rd6552, %rd6549, %rd6551;
	add.s64 	%rd6553, %rd6552, %rd6467;
	add.s64 	%rd6554, %rd6553, %rd6548;
	add.s64 	%rd6555, %rd6554, %rd92;
	add.s64 	%rd6556, %rd6555, %rd4912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6299,%dummy}, %rd6543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6300}, %rd6543;
	}
	shf.r.wrap.b32 	%r6301, %r6300, %r6299, 28;
	shf.r.wrap.b32 	%r6302, %r6299, %r6300, 28;
	mov.b64 	%rd6557, {%r6302, %r6301};
	shf.l.wrap.b32 	%r6303, %r6299, %r6300, 30;
	shf.l.wrap.b32 	%r6304, %r6300, %r6299, 30;
	mov.b64 	%rd6558, {%r6304, %r6303};
	xor.b64  	%rd6559, %rd6557, %rd6558;
	shf.l.wrap.b32 	%r6305, %r6299, %r6300, 25;
	shf.l.wrap.b32 	%r6306, %r6300, %r6299, 25;
	mov.b64 	%rd6560, {%r6306, %r6305};
	xor.b64  	%rd6561, %rd6559, %rd6560;
	xor.b64  	%rd6562, %rd6518, %rd6493;
	and.b64  	%rd6563, %rd6543, %rd6562;
	and.b64  	%rd6564, %rd6518, %rd6493;
	xor.b64  	%rd6565, %rd6563, %rd6564;
	add.s64 	%rd6566, %rd6561, %rd6565;
	add.s64 	%rd6567, %rd6556, %rd6468;
	add.s64 	%rd6568, %rd6566, %rd6556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6307,%dummy}, %rd6567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6308}, %rd6567;
	}
	shf.r.wrap.b32 	%r6309, %r6308, %r6307, 14;
	shf.r.wrap.b32 	%r6310, %r6307, %r6308, 14;
	mov.b64 	%rd6569, {%r6310, %r6309};
	shf.r.wrap.b32 	%r6311, %r6308, %r6307, 18;
	shf.r.wrap.b32 	%r6312, %r6307, %r6308, 18;
	mov.b64 	%rd6570, {%r6312, %r6311};
	xor.b64  	%rd6571, %rd6569, %rd6570;
	shf.l.wrap.b32 	%r6313, %r6307, %r6308, 23;
	shf.l.wrap.b32 	%r6314, %r6308, %r6307, 23;
	mov.b64 	%rd6572, {%r6314, %r6313};
	xor.b64  	%rd6573, %rd6571, %rd6572;
	and.b64  	%rd6574, %rd6567, %rd6542;
	not.b64 	%rd6575, %rd6567;
	and.b64  	%rd6576, %rd6517, %rd6575;
	or.b64  	%rd6577, %rd6574, %rd6576;
	add.s64 	%rd6578, %rd6577, %rd6492;
	add.s64 	%rd6579, %rd6578, %rd6573;
	add.s64 	%rd6580, %rd6579, %rd93;
	add.s64 	%rd6581, %rd6580, %rd4925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6315,%dummy}, %rd6568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6316}, %rd6568;
	}
	shf.r.wrap.b32 	%r6317, %r6316, %r6315, 28;
	shf.r.wrap.b32 	%r6318, %r6315, %r6316, 28;
	mov.b64 	%rd6582, {%r6318, %r6317};
	shf.l.wrap.b32 	%r6319, %r6315, %r6316, 30;
	shf.l.wrap.b32 	%r6320, %r6316, %r6315, 30;
	mov.b64 	%rd6583, {%r6320, %r6319};
	xor.b64  	%rd6584, %rd6582, %rd6583;
	shf.l.wrap.b32 	%r6321, %r6315, %r6316, 25;
	shf.l.wrap.b32 	%r6322, %r6316, %r6315, 25;
	mov.b64 	%rd6585, {%r6322, %r6321};
	xor.b64  	%rd6586, %rd6584, %rd6585;
	xor.b64  	%rd6587, %rd6543, %rd6518;
	and.b64  	%rd6588, %rd6568, %rd6587;
	and.b64  	%rd6589, %rd6543, %rd6518;
	xor.b64  	%rd6590, %rd6588, %rd6589;
	add.s64 	%rd6591, %rd6586, %rd6590;
	add.s64 	%rd6592, %rd6581, %rd6493;
	add.s64 	%rd6593, %rd6591, %rd6581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6323,%dummy}, %rd6592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6324}, %rd6592;
	}
	shf.r.wrap.b32 	%r6325, %r6324, %r6323, 14;
	shf.r.wrap.b32 	%r6326, %r6323, %r6324, 14;
	mov.b64 	%rd6594, {%r6326, %r6325};
	shf.r.wrap.b32 	%r6327, %r6324, %r6323, 18;
	shf.r.wrap.b32 	%r6328, %r6323, %r6324, 18;
	mov.b64 	%rd6595, {%r6328, %r6327};
	xor.b64  	%rd6596, %rd6594, %rd6595;
	shf.l.wrap.b32 	%r6329, %r6323, %r6324, 23;
	shf.l.wrap.b32 	%r6330, %r6324, %r6323, 23;
	mov.b64 	%rd6597, {%r6330, %r6329};
	xor.b64  	%rd6598, %rd6596, %rd6597;
	and.b64  	%rd6599, %rd6592, %rd6567;
	not.b64 	%rd6600, %rd6592;
	and.b64  	%rd6601, %rd6542, %rd6600;
	or.b64  	%rd6602, %rd6599, %rd6601;
	add.s64 	%rd6603, %rd6602, %rd6517;
	add.s64 	%rd6604, %rd6603, %rd6598;
	add.s64 	%rd6605, %rd6604, %rd94;
	add.s64 	%rd6606, %rd6605, %rd4938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6331,%dummy}, %rd6593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6332}, %rd6593;
	}
	shf.r.wrap.b32 	%r6333, %r6332, %r6331, 28;
	shf.r.wrap.b32 	%r6334, %r6331, %r6332, 28;
	mov.b64 	%rd6607, {%r6334, %r6333};
	shf.l.wrap.b32 	%r6335, %r6331, %r6332, 30;
	shf.l.wrap.b32 	%r6336, %r6332, %r6331, 30;
	mov.b64 	%rd6608, {%r6336, %r6335};
	xor.b64  	%rd6609, %rd6607, %rd6608;
	shf.l.wrap.b32 	%r6337, %r6331, %r6332, 25;
	shf.l.wrap.b32 	%r6338, %r6332, %r6331, 25;
	mov.b64 	%rd6610, {%r6338, %r6337};
	xor.b64  	%rd6611, %rd6609, %rd6610;
	xor.b64  	%rd6612, %rd6568, %rd6543;
	and.b64  	%rd6613, %rd6593, %rd6612;
	and.b64  	%rd6614, %rd6568, %rd6543;
	xor.b64  	%rd6615, %rd6613, %rd6614;
	add.s64 	%rd6616, %rd6611, %rd6615;
	add.s64 	%rd6617, %rd6606, %rd6518;
	add.s64 	%rd6618, %rd6616, %rd6606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6339,%dummy}, %rd6617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6340}, %rd6617;
	}
	shf.r.wrap.b32 	%r6341, %r6340, %r6339, 14;
	shf.r.wrap.b32 	%r6342, %r6339, %r6340, 14;
	mov.b64 	%rd6619, {%r6342, %r6341};
	shf.r.wrap.b32 	%r6343, %r6340, %r6339, 18;
	shf.r.wrap.b32 	%r6344, %r6339, %r6340, 18;
	mov.b64 	%rd6620, {%r6344, %r6343};
	xor.b64  	%rd6621, %rd6619, %rd6620;
	shf.l.wrap.b32 	%r6345, %r6339, %r6340, 23;
	shf.l.wrap.b32 	%r6346, %r6340, %r6339, 23;
	mov.b64 	%rd6622, {%r6346, %r6345};
	xor.b64  	%rd6623, %rd6621, %rd6622;
	and.b64  	%rd6624, %rd6617, %rd6592;
	not.b64 	%rd6625, %rd6617;
	and.b64  	%rd6626, %rd6567, %rd6625;
	or.b64  	%rd6627, %rd6624, %rd6626;
	add.s64 	%rd6628, %rd6627, %rd6542;
	add.s64 	%rd6629, %rd6628, %rd6623;
	add.s64 	%rd6630, %rd6629, %rd95;
	add.s64 	%rd6631, %rd6630, %rd4951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6347,%dummy}, %rd6618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6348}, %rd6618;
	}
	shf.r.wrap.b32 	%r6349, %r6348, %r6347, 28;
	shf.r.wrap.b32 	%r6350, %r6347, %r6348, 28;
	mov.b64 	%rd6632, {%r6350, %r6349};
	shf.l.wrap.b32 	%r6351, %r6347, %r6348, 30;
	shf.l.wrap.b32 	%r6352, %r6348, %r6347, 30;
	mov.b64 	%rd6633, {%r6352, %r6351};
	xor.b64  	%rd6634, %rd6632, %rd6633;
	shf.l.wrap.b32 	%r6353, %r6347, %r6348, 25;
	shf.l.wrap.b32 	%r6354, %r6348, %r6347, 25;
	mov.b64 	%rd6635, {%r6354, %r6353};
	xor.b64  	%rd6636, %rd6634, %rd6635;
	xor.b64  	%rd6637, %rd6593, %rd6568;
	and.b64  	%rd6638, %rd6618, %rd6637;
	and.b64  	%rd6639, %rd6593, %rd6568;
	xor.b64  	%rd6640, %rd6638, %rd6639;
	add.s64 	%rd6641, %rd6636, %rd6640;
	add.s64 	%rd6642, %rd6631, %rd6543;
	add.s64 	%rd6643, %rd6641, %rd6631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6355,%dummy}, %rd6642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6356}, %rd6642;
	}
	shf.r.wrap.b32 	%r6357, %r6356, %r6355, 14;
	shf.r.wrap.b32 	%r6358, %r6355, %r6356, 14;
	mov.b64 	%rd6644, {%r6358, %r6357};
	shf.r.wrap.b32 	%r6359, %r6356, %r6355, 18;
	shf.r.wrap.b32 	%r6360, %r6355, %r6356, 18;
	mov.b64 	%rd6645, {%r6360, %r6359};
	xor.b64  	%rd6646, %rd6644, %rd6645;
	shf.l.wrap.b32 	%r6361, %r6355, %r6356, 23;
	shf.l.wrap.b32 	%r6362, %r6356, %r6355, 23;
	mov.b64 	%rd6647, {%r6362, %r6361};
	xor.b64  	%rd6648, %rd6646, %rd6647;
	and.b64  	%rd6649, %rd6642, %rd6617;
	not.b64 	%rd6650, %rd6642;
	and.b64  	%rd6651, %rd6592, %rd6650;
	or.b64  	%rd6652, %rd6649, %rd6651;
	add.s64 	%rd6653, %rd6652, %rd6567;
	add.s64 	%rd6654, %rd6653, %rd6648;
	add.s64 	%rd6655, %rd6654, %rd96;
	add.s64 	%rd6656, %rd6655, %rd4964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6363,%dummy}, %rd6643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6364}, %rd6643;
	}
	shf.r.wrap.b32 	%r6365, %r6364, %r6363, 28;
	shf.r.wrap.b32 	%r6366, %r6363, %r6364, 28;
	mov.b64 	%rd6657, {%r6366, %r6365};
	shf.l.wrap.b32 	%r6367, %r6363, %r6364, 30;
	shf.l.wrap.b32 	%r6368, %r6364, %r6363, 30;
	mov.b64 	%rd6658, {%r6368, %r6367};
	xor.b64  	%rd6659, %rd6657, %rd6658;
	shf.l.wrap.b32 	%r6369, %r6363, %r6364, 25;
	shf.l.wrap.b32 	%r6370, %r6364, %r6363, 25;
	mov.b64 	%rd6660, {%r6370, %r6369};
	xor.b64  	%rd6661, %rd6659, %rd6660;
	xor.b64  	%rd6662, %rd6618, %rd6593;
	and.b64  	%rd6663, %rd6643, %rd6662;
	and.b64  	%rd6664, %rd6618, %rd6593;
	xor.b64  	%rd6665, %rd6663, %rd6664;
	add.s64 	%rd6666, %rd6661, %rd6665;
	add.s64 	%rd6667, %rd6656, %rd6568;
	add.s64 	%rd6668, %rd6666, %rd6656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6371,%dummy}, %rd6667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6372}, %rd6667;
	}
	shf.r.wrap.b32 	%r6373, %r6372, %r6371, 14;
	shf.r.wrap.b32 	%r6374, %r6371, %r6372, 14;
	mov.b64 	%rd6669, {%r6374, %r6373};
	shf.r.wrap.b32 	%r6375, %r6372, %r6371, 18;
	shf.r.wrap.b32 	%r6376, %r6371, %r6372, 18;
	mov.b64 	%rd6670, {%r6376, %r6375};
	xor.b64  	%rd6671, %rd6669, %rd6670;
	shf.l.wrap.b32 	%r6377, %r6371, %r6372, 23;
	shf.l.wrap.b32 	%r6378, %r6372, %r6371, 23;
	mov.b64 	%rd6672, {%r6378, %r6377};
	xor.b64  	%rd6673, %rd6671, %rd6672;
	and.b64  	%rd6674, %rd6667, %rd6642;
	not.b64 	%rd6675, %rd6667;
	and.b64  	%rd6676, %rd6617, %rd6675;
	or.b64  	%rd6677, %rd6674, %rd6676;
	add.s64 	%rd6678, %rd6677, %rd6592;
	add.s64 	%rd6679, %rd6678, %rd6673;
	add.s64 	%rd6680, %rd6679, %rd97;
	add.s64 	%rd6681, %rd6680, %rd4977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6379,%dummy}, %rd6668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6380}, %rd6668;
	}
	shf.r.wrap.b32 	%r6381, %r6380, %r6379, 28;
	shf.r.wrap.b32 	%r6382, %r6379, %r6380, 28;
	mov.b64 	%rd6682, {%r6382, %r6381};
	shf.l.wrap.b32 	%r6383, %r6379, %r6380, 30;
	shf.l.wrap.b32 	%r6384, %r6380, %r6379, 30;
	mov.b64 	%rd6683, {%r6384, %r6383};
	xor.b64  	%rd6684, %rd6682, %rd6683;
	shf.l.wrap.b32 	%r6385, %r6379, %r6380, 25;
	shf.l.wrap.b32 	%r6386, %r6380, %r6379, 25;
	mov.b64 	%rd6685, {%r6386, %r6385};
	xor.b64  	%rd6686, %rd6684, %rd6685;
	xor.b64  	%rd6687, %rd6643, %rd6618;
	and.b64  	%rd6688, %rd6668, %rd6687;
	and.b64  	%rd6689, %rd6643, %rd6618;
	xor.b64  	%rd6690, %rd6688, %rd6689;
	add.s64 	%rd6691, %rd6686, %rd6690;
	add.s64 	%rd6692, %rd6681, %rd6593;
	add.s64 	%rd6693, %rd6691, %rd6681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6387,%dummy}, %rd6692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6388}, %rd6692;
	}
	shf.r.wrap.b32 	%r6389, %r6388, %r6387, 14;
	shf.r.wrap.b32 	%r6390, %r6387, %r6388, 14;
	mov.b64 	%rd6694, {%r6390, %r6389};
	shf.r.wrap.b32 	%r6391, %r6388, %r6387, 18;
	shf.r.wrap.b32 	%r6392, %r6387, %r6388, 18;
	mov.b64 	%rd6695, {%r6392, %r6391};
	xor.b64  	%rd6696, %rd6694, %rd6695;
	shf.l.wrap.b32 	%r6393, %r6387, %r6388, 23;
	shf.l.wrap.b32 	%r6394, %r6388, %r6387, 23;
	mov.b64 	%rd6697, {%r6394, %r6393};
	xor.b64  	%rd6698, %rd6696, %rd6697;
	and.b64  	%rd6699, %rd6692, %rd6667;
	not.b64 	%rd6700, %rd6692;
	and.b64  	%rd6701, %rd6642, %rd6700;
	or.b64  	%rd6702, %rd6699, %rd6701;
	add.s64 	%rd6703, %rd6702, %rd6617;
	add.s64 	%rd6704, %rd6703, %rd6698;
	add.s64 	%rd6705, %rd6704, %rd98;
	add.s64 	%rd6706, %rd6705, %rd4990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6395,%dummy}, %rd6693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6396}, %rd6693;
	}
	shf.r.wrap.b32 	%r6397, %r6396, %r6395, 28;
	shf.r.wrap.b32 	%r6398, %r6395, %r6396, 28;
	mov.b64 	%rd6707, {%r6398, %r6397};
	shf.l.wrap.b32 	%r6399, %r6395, %r6396, 30;
	shf.l.wrap.b32 	%r6400, %r6396, %r6395, 30;
	mov.b64 	%rd6708, {%r6400, %r6399};
	xor.b64  	%rd6709, %rd6707, %rd6708;
	shf.l.wrap.b32 	%r6401, %r6395, %r6396, 25;
	shf.l.wrap.b32 	%r6402, %r6396, %r6395, 25;
	mov.b64 	%rd6710, {%r6402, %r6401};
	xor.b64  	%rd6711, %rd6709, %rd6710;
	xor.b64  	%rd6712, %rd6668, %rd6643;
	and.b64  	%rd6713, %rd6693, %rd6712;
	and.b64  	%rd6714, %rd6668, %rd6643;
	xor.b64  	%rd6715, %rd6713, %rd6714;
	add.s64 	%rd6716, %rd6711, %rd6715;
	add.s64 	%rd6717, %rd6706, %rd6618;
	add.s64 	%rd6718, %rd6716, %rd6706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6403,%dummy}, %rd6717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6404}, %rd6717;
	}
	shf.r.wrap.b32 	%r6405, %r6404, %r6403, 14;
	shf.r.wrap.b32 	%r6406, %r6403, %r6404, 14;
	mov.b64 	%rd6719, {%r6406, %r6405};
	shf.r.wrap.b32 	%r6407, %r6404, %r6403, 18;
	shf.r.wrap.b32 	%r6408, %r6403, %r6404, 18;
	mov.b64 	%rd6720, {%r6408, %r6407};
	xor.b64  	%rd6721, %rd6719, %rd6720;
	shf.l.wrap.b32 	%r6409, %r6403, %r6404, 23;
	shf.l.wrap.b32 	%r6410, %r6404, %r6403, 23;
	mov.b64 	%rd6722, {%r6410, %r6409};
	xor.b64  	%rd6723, %rd6721, %rd6722;
	and.b64  	%rd6724, %rd6717, %rd6692;
	not.b64 	%rd6725, %rd6717;
	and.b64  	%rd6726, %rd6667, %rd6725;
	or.b64  	%rd6727, %rd6724, %rd6726;
	add.s64 	%rd6728, %rd6727, %rd6642;
	add.s64 	%rd6729, %rd6728, %rd6723;
	add.s64 	%rd6730, %rd6729, %rd99;
	add.s64 	%rd6731, %rd6730, %rd5003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6411,%dummy}, %rd6718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6412}, %rd6718;
	}
	shf.r.wrap.b32 	%r6413, %r6412, %r6411, 28;
	shf.r.wrap.b32 	%r6414, %r6411, %r6412, 28;
	mov.b64 	%rd6732, {%r6414, %r6413};
	shf.l.wrap.b32 	%r6415, %r6411, %r6412, 30;
	shf.l.wrap.b32 	%r6416, %r6412, %r6411, 30;
	mov.b64 	%rd6733, {%r6416, %r6415};
	xor.b64  	%rd6734, %rd6732, %rd6733;
	shf.l.wrap.b32 	%r6417, %r6411, %r6412, 25;
	shf.l.wrap.b32 	%r6418, %r6412, %r6411, 25;
	mov.b64 	%rd6735, {%r6418, %r6417};
	xor.b64  	%rd6736, %rd6734, %rd6735;
	xor.b64  	%rd6737, %rd6693, %rd6668;
	and.b64  	%rd6738, %rd6718, %rd6737;
	and.b64  	%rd6739, %rd6693, %rd6668;
	xor.b64  	%rd6740, %rd6738, %rd6739;
	add.s64 	%rd6741, %rd6736, %rd6740;
	add.s64 	%rd6742, %rd6731, %rd6643;
	add.s64 	%rd6743, %rd6741, %rd6731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6419,%dummy}, %rd6742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6420}, %rd6742;
	}
	shf.r.wrap.b32 	%r6421, %r6420, %r6419, 14;
	shf.r.wrap.b32 	%r6422, %r6419, %r6420, 14;
	mov.b64 	%rd6744, {%r6422, %r6421};
	shf.r.wrap.b32 	%r6423, %r6420, %r6419, 18;
	shf.r.wrap.b32 	%r6424, %r6419, %r6420, 18;
	mov.b64 	%rd6745, {%r6424, %r6423};
	xor.b64  	%rd6746, %rd6744, %rd6745;
	shf.l.wrap.b32 	%r6425, %r6419, %r6420, 23;
	shf.l.wrap.b32 	%r6426, %r6420, %r6419, 23;
	mov.b64 	%rd6747, {%r6426, %r6425};
	xor.b64  	%rd6748, %rd6746, %rd6747;
	and.b64  	%rd6749, %rd6742, %rd6717;
	not.b64 	%rd6750, %rd6742;
	and.b64  	%rd6751, %rd6692, %rd6750;
	or.b64  	%rd6752, %rd6749, %rd6751;
	add.s64 	%rd6753, %rd6752, %rd6667;
	add.s64 	%rd6754, %rd6753, %rd6748;
	add.s64 	%rd6755, %rd6754, %rd100;
	add.s64 	%rd6756, %rd6755, %rd5016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6427,%dummy}, %rd6743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6428}, %rd6743;
	}
	shf.r.wrap.b32 	%r6429, %r6428, %r6427, 28;
	shf.r.wrap.b32 	%r6430, %r6427, %r6428, 28;
	mov.b64 	%rd6757, {%r6430, %r6429};
	shf.l.wrap.b32 	%r6431, %r6427, %r6428, 30;
	shf.l.wrap.b32 	%r6432, %r6428, %r6427, 30;
	mov.b64 	%rd6758, {%r6432, %r6431};
	xor.b64  	%rd6759, %rd6757, %rd6758;
	shf.l.wrap.b32 	%r6433, %r6427, %r6428, 25;
	shf.l.wrap.b32 	%r6434, %r6428, %r6427, 25;
	mov.b64 	%rd6760, {%r6434, %r6433};
	xor.b64  	%rd6761, %rd6759, %rd6760;
	xor.b64  	%rd6762, %rd6718, %rd6693;
	and.b64  	%rd6763, %rd6743, %rd6762;
	and.b64  	%rd6764, %rd6718, %rd6693;
	xor.b64  	%rd6765, %rd6763, %rd6764;
	add.s64 	%rd6766, %rd6761, %rd6765;
	add.s64 	%rd6767, %rd6756, %rd6668;
	add.s64 	%rd6768, %rd6766, %rd6756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6435,%dummy}, %rd6767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6436}, %rd6767;
	}
	shf.r.wrap.b32 	%r6437, %r6436, %r6435, 14;
	shf.r.wrap.b32 	%r6438, %r6435, %r6436, 14;
	mov.b64 	%rd6769, {%r6438, %r6437};
	shf.r.wrap.b32 	%r6439, %r6436, %r6435, 18;
	shf.r.wrap.b32 	%r6440, %r6435, %r6436, 18;
	mov.b64 	%rd6770, {%r6440, %r6439};
	xor.b64  	%rd6771, %rd6769, %rd6770;
	shf.l.wrap.b32 	%r6441, %r6435, %r6436, 23;
	shf.l.wrap.b32 	%r6442, %r6436, %r6435, 23;
	mov.b64 	%rd6772, {%r6442, %r6441};
	xor.b64  	%rd6773, %rd6771, %rd6772;
	and.b64  	%rd6774, %rd6767, %rd6742;
	not.b64 	%rd6775, %rd6767;
	and.b64  	%rd6776, %rd6717, %rd6775;
	or.b64  	%rd6777, %rd6774, %rd6776;
	add.s64 	%rd6778, %rd6777, %rd6692;
	add.s64 	%rd6779, %rd6778, %rd6773;
	add.s64 	%rd6780, %rd6779, %rd101;
	add.s64 	%rd6781, %rd6780, %rd5029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6443,%dummy}, %rd6768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6444}, %rd6768;
	}
	shf.r.wrap.b32 	%r6445, %r6444, %r6443, 28;
	shf.r.wrap.b32 	%r6446, %r6443, %r6444, 28;
	mov.b64 	%rd6782, {%r6446, %r6445};
	shf.l.wrap.b32 	%r6447, %r6443, %r6444, 30;
	shf.l.wrap.b32 	%r6448, %r6444, %r6443, 30;
	mov.b64 	%rd6783, {%r6448, %r6447};
	xor.b64  	%rd6784, %rd6782, %rd6783;
	shf.l.wrap.b32 	%r6449, %r6443, %r6444, 25;
	shf.l.wrap.b32 	%r6450, %r6444, %r6443, 25;
	mov.b64 	%rd6785, {%r6450, %r6449};
	xor.b64  	%rd6786, %rd6784, %rd6785;
	xor.b64  	%rd6787, %rd6743, %rd6718;
	and.b64  	%rd6788, %rd6768, %rd6787;
	and.b64  	%rd6789, %rd6743, %rd6718;
	xor.b64  	%rd6790, %rd6788, %rd6789;
	add.s64 	%rd6791, %rd6786, %rd6790;
	add.s64 	%rd6792, %rd6781, %rd6693;
	add.s64 	%rd6793, %rd6791, %rd6781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6451,%dummy}, %rd6792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6452}, %rd6792;
	}
	shf.r.wrap.b32 	%r6453, %r6452, %r6451, 14;
	shf.r.wrap.b32 	%r6454, %r6451, %r6452, 14;
	mov.b64 	%rd6794, {%r6454, %r6453};
	shf.r.wrap.b32 	%r6455, %r6452, %r6451, 18;
	shf.r.wrap.b32 	%r6456, %r6451, %r6452, 18;
	mov.b64 	%rd6795, {%r6456, %r6455};
	xor.b64  	%rd6796, %rd6794, %rd6795;
	shf.l.wrap.b32 	%r6457, %r6451, %r6452, 23;
	shf.l.wrap.b32 	%r6458, %r6452, %r6451, 23;
	mov.b64 	%rd6797, {%r6458, %r6457};
	xor.b64  	%rd6798, %rd6796, %rd6797;
	and.b64  	%rd6799, %rd6792, %rd6767;
	not.b64 	%rd6800, %rd6792;
	and.b64  	%rd6801, %rd6742, %rd6800;
	or.b64  	%rd6802, %rd6799, %rd6801;
	add.s64 	%rd6803, %rd6802, %rd6717;
	add.s64 	%rd6804, %rd6803, %rd6798;
	add.s64 	%rd6805, %rd6804, %rd102;
	add.s64 	%rd6806, %rd6805, %rd5042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6459,%dummy}, %rd6793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6460}, %rd6793;
	}
	shf.r.wrap.b32 	%r6461, %r6460, %r6459, 28;
	shf.r.wrap.b32 	%r6462, %r6459, %r6460, 28;
	mov.b64 	%rd6807, {%r6462, %r6461};
	shf.l.wrap.b32 	%r6463, %r6459, %r6460, 30;
	shf.l.wrap.b32 	%r6464, %r6460, %r6459, 30;
	mov.b64 	%rd6808, {%r6464, %r6463};
	xor.b64  	%rd6809, %rd6807, %rd6808;
	shf.l.wrap.b32 	%r6465, %r6459, %r6460, 25;
	shf.l.wrap.b32 	%r6466, %r6460, %r6459, 25;
	mov.b64 	%rd6810, {%r6466, %r6465};
	xor.b64  	%rd6811, %rd6809, %rd6810;
	xor.b64  	%rd6812, %rd6768, %rd6743;
	and.b64  	%rd6813, %rd6793, %rd6812;
	and.b64  	%rd6814, %rd6768, %rd6743;
	xor.b64  	%rd6815, %rd6813, %rd6814;
	add.s64 	%rd6816, %rd6811, %rd6815;
	add.s64 	%rd6817, %rd6806, %rd6718;
	add.s64 	%rd6818, %rd6816, %rd6806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6467,%dummy}, %rd6817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6468}, %rd6817;
	}
	shf.r.wrap.b32 	%r6469, %r6468, %r6467, 14;
	shf.r.wrap.b32 	%r6470, %r6467, %r6468, 14;
	mov.b64 	%rd6819, {%r6470, %r6469};
	shf.r.wrap.b32 	%r6471, %r6468, %r6467, 18;
	shf.r.wrap.b32 	%r6472, %r6467, %r6468, 18;
	mov.b64 	%rd6820, {%r6472, %r6471};
	xor.b64  	%rd6821, %rd6819, %rd6820;
	shf.l.wrap.b32 	%r6473, %r6467, %r6468, 23;
	shf.l.wrap.b32 	%r6474, %r6468, %r6467, 23;
	mov.b64 	%rd6822, {%r6474, %r6473};
	xor.b64  	%rd6823, %rd6821, %rd6822;
	and.b64  	%rd6824, %rd6817, %rd6792;
	not.b64 	%rd6825, %rd6817;
	and.b64  	%rd6826, %rd6767, %rd6825;
	or.b64  	%rd6827, %rd6824, %rd6826;
	add.s64 	%rd6828, %rd6827, %rd6742;
	add.s64 	%rd6829, %rd6828, %rd6823;
	add.s64 	%rd6830, %rd6829, %rd103;
	add.s64 	%rd6831, %rd6830, %rd5055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6475,%dummy}, %rd6818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6476}, %rd6818;
	}
	shf.r.wrap.b32 	%r6477, %r6476, %r6475, 28;
	shf.r.wrap.b32 	%r6478, %r6475, %r6476, 28;
	mov.b64 	%rd6832, {%r6478, %r6477};
	shf.l.wrap.b32 	%r6479, %r6475, %r6476, 30;
	shf.l.wrap.b32 	%r6480, %r6476, %r6475, 30;
	mov.b64 	%rd6833, {%r6480, %r6479};
	xor.b64  	%rd6834, %rd6832, %rd6833;
	shf.l.wrap.b32 	%r6481, %r6475, %r6476, 25;
	shf.l.wrap.b32 	%r6482, %r6476, %r6475, 25;
	mov.b64 	%rd6835, {%r6482, %r6481};
	xor.b64  	%rd6836, %rd6834, %rd6835;
	xor.b64  	%rd6837, %rd6793, %rd6768;
	and.b64  	%rd6838, %rd6818, %rd6837;
	and.b64  	%rd6839, %rd6793, %rd6768;
	xor.b64  	%rd6840, %rd6838, %rd6839;
	add.s64 	%rd6841, %rd6836, %rd6840;
	add.s64 	%rd6842, %rd6831, %rd6743;
	add.s64 	%rd6843, %rd6841, %rd6831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6483,%dummy}, %rd6842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6484}, %rd6842;
	}
	shf.r.wrap.b32 	%r6485, %r6484, %r6483, 14;
	shf.r.wrap.b32 	%r6486, %r6483, %r6484, 14;
	mov.b64 	%rd6844, {%r6486, %r6485};
	shf.r.wrap.b32 	%r6487, %r6484, %r6483, 18;
	shf.r.wrap.b32 	%r6488, %r6483, %r6484, 18;
	mov.b64 	%rd6845, {%r6488, %r6487};
	xor.b64  	%rd6846, %rd6844, %rd6845;
	shf.l.wrap.b32 	%r6489, %r6483, %r6484, 23;
	shf.l.wrap.b32 	%r6490, %r6484, %r6483, 23;
	mov.b64 	%rd6847, {%r6490, %r6489};
	xor.b64  	%rd6848, %rd6846, %rd6847;
	and.b64  	%rd6849, %rd6842, %rd6817;
	not.b64 	%rd6850, %rd6842;
	and.b64  	%rd6851, %rd6792, %rd6850;
	or.b64  	%rd6852, %rd6849, %rd6851;
	add.s64 	%rd6853, %rd6852, %rd6767;
	add.s64 	%rd6854, %rd6853, %rd6848;
	add.s64 	%rd6855, %rd6854, %rd104;
	add.s64 	%rd6856, %rd6855, %rd5068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6491,%dummy}, %rd6843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6492}, %rd6843;
	}
	shf.r.wrap.b32 	%r6493, %r6492, %r6491, 28;
	shf.r.wrap.b32 	%r6494, %r6491, %r6492, 28;
	mov.b64 	%rd6857, {%r6494, %r6493};
	shf.l.wrap.b32 	%r6495, %r6491, %r6492, 30;
	shf.l.wrap.b32 	%r6496, %r6492, %r6491, 30;
	mov.b64 	%rd6858, {%r6496, %r6495};
	xor.b64  	%rd6859, %rd6857, %rd6858;
	shf.l.wrap.b32 	%r6497, %r6491, %r6492, 25;
	shf.l.wrap.b32 	%r6498, %r6492, %r6491, 25;
	mov.b64 	%rd6860, {%r6498, %r6497};
	xor.b64  	%rd6861, %rd6859, %rd6860;
	xor.b64  	%rd6862, %rd6818, %rd6793;
	and.b64  	%rd6863, %rd6843, %rd6862;
	and.b64  	%rd6864, %rd6818, %rd6793;
	xor.b64  	%rd6865, %rd6863, %rd6864;
	add.s64 	%rd6866, %rd6861, %rd6865;
	add.s64 	%rd6867, %rd6856, %rd6768;
	add.s64 	%rd6868, %rd6866, %rd6856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6499,%dummy}, %rd6867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6500}, %rd6867;
	}
	shf.r.wrap.b32 	%r6501, %r6500, %r6499, 14;
	shf.r.wrap.b32 	%r6502, %r6499, %r6500, 14;
	mov.b64 	%rd6869, {%r6502, %r6501};
	shf.r.wrap.b32 	%r6503, %r6500, %r6499, 18;
	shf.r.wrap.b32 	%r6504, %r6499, %r6500, 18;
	mov.b64 	%rd6870, {%r6504, %r6503};
	xor.b64  	%rd6871, %rd6869, %rd6870;
	shf.l.wrap.b32 	%r6505, %r6499, %r6500, 23;
	shf.l.wrap.b32 	%r6506, %r6500, %r6499, 23;
	mov.b64 	%rd6872, {%r6506, %r6505};
	xor.b64  	%rd6873, %rd6871, %rd6872;
	and.b64  	%rd6874, %rd6867, %rd6842;
	not.b64 	%rd6875, %rd6867;
	and.b64  	%rd6876, %rd6817, %rd6875;
	or.b64  	%rd6877, %rd6874, %rd6876;
	add.s64 	%rd6878, %rd6877, %rd6792;
	add.s64 	%rd6879, %rd6878, %rd6873;
	add.s64 	%rd6880, %rd6879, %rd105;
	add.s64 	%rd6881, %rd6880, %rd5081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6507,%dummy}, %rd6868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6508}, %rd6868;
	}
	shf.r.wrap.b32 	%r6509, %r6508, %r6507, 28;
	shf.r.wrap.b32 	%r6510, %r6507, %r6508, 28;
	mov.b64 	%rd6882, {%r6510, %r6509};
	shf.l.wrap.b32 	%r6511, %r6507, %r6508, 30;
	shf.l.wrap.b32 	%r6512, %r6508, %r6507, 30;
	mov.b64 	%rd6883, {%r6512, %r6511};
	xor.b64  	%rd6884, %rd6882, %rd6883;
	shf.l.wrap.b32 	%r6513, %r6507, %r6508, 25;
	shf.l.wrap.b32 	%r6514, %r6508, %r6507, 25;
	mov.b64 	%rd6885, {%r6514, %r6513};
	xor.b64  	%rd6886, %rd6884, %rd6885;
	xor.b64  	%rd6887, %rd6843, %rd6818;
	and.b64  	%rd6888, %rd6868, %rd6887;
	and.b64  	%rd6889, %rd6843, %rd6818;
	xor.b64  	%rd6890, %rd6888, %rd6889;
	add.s64 	%rd6891, %rd6886, %rd6890;
	add.s64 	%rd6892, %rd6881, %rd6793;
	add.s64 	%rd6893, %rd6891, %rd6881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6515,%dummy}, %rd6892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6516}, %rd6892;
	}
	shf.r.wrap.b32 	%r6517, %r6516, %r6515, 14;
	shf.r.wrap.b32 	%r6518, %r6515, %r6516, 14;
	mov.b64 	%rd6894, {%r6518, %r6517};
	shf.r.wrap.b32 	%r6519, %r6516, %r6515, 18;
	shf.r.wrap.b32 	%r6520, %r6515, %r6516, 18;
	mov.b64 	%rd6895, {%r6520, %r6519};
	xor.b64  	%rd6896, %rd6894, %rd6895;
	shf.l.wrap.b32 	%r6521, %r6515, %r6516, 23;
	shf.l.wrap.b32 	%r6522, %r6516, %r6515, 23;
	mov.b64 	%rd6897, {%r6522, %r6521};
	xor.b64  	%rd6898, %rd6896, %rd6897;
	and.b64  	%rd6899, %rd6892, %rd6867;
	not.b64 	%rd6900, %rd6892;
	and.b64  	%rd6901, %rd6842, %rd6900;
	or.b64  	%rd6902, %rd6899, %rd6901;
	add.s64 	%rd6903, %rd6902, %rd6817;
	add.s64 	%rd6904, %rd6903, %rd6898;
	add.s64 	%rd6905, %rd6904, %rd106;
	add.s64 	%rd6906, %rd6905, %rd5094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6523,%dummy}, %rd6893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6524}, %rd6893;
	}
	shf.r.wrap.b32 	%r6525, %r6524, %r6523, 28;
	shf.r.wrap.b32 	%r6526, %r6523, %r6524, 28;
	mov.b64 	%rd6907, {%r6526, %r6525};
	shf.l.wrap.b32 	%r6527, %r6523, %r6524, 30;
	shf.l.wrap.b32 	%r6528, %r6524, %r6523, 30;
	mov.b64 	%rd6908, {%r6528, %r6527};
	xor.b64  	%rd6909, %rd6907, %rd6908;
	shf.l.wrap.b32 	%r6529, %r6523, %r6524, 25;
	shf.l.wrap.b32 	%r6530, %r6524, %r6523, 25;
	mov.b64 	%rd6910, {%r6530, %r6529};
	xor.b64  	%rd6911, %rd6909, %rd6910;
	xor.b64  	%rd6912, %rd6868, %rd6843;
	and.b64  	%rd6913, %rd6893, %rd6912;
	and.b64  	%rd6914, %rd6868, %rd6843;
	xor.b64  	%rd6915, %rd6913, %rd6914;
	add.s64 	%rd6916, %rd6911, %rd6915;
	add.s64 	%rd6917, %rd6906, %rd6818;
	add.s64 	%rd6918, %rd6916, %rd6906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6531,%dummy}, %rd6917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6532}, %rd6917;
	}
	shf.r.wrap.b32 	%r6533, %r6532, %r6531, 14;
	shf.r.wrap.b32 	%r6534, %r6531, %r6532, 14;
	mov.b64 	%rd6919, {%r6534, %r6533};
	shf.r.wrap.b32 	%r6535, %r6532, %r6531, 18;
	shf.r.wrap.b32 	%r6536, %r6531, %r6532, 18;
	mov.b64 	%rd6920, {%r6536, %r6535};
	xor.b64  	%rd6921, %rd6919, %rd6920;
	shf.l.wrap.b32 	%r6537, %r6531, %r6532, 23;
	shf.l.wrap.b32 	%r6538, %r6532, %r6531, 23;
	mov.b64 	%rd6922, {%r6538, %r6537};
	xor.b64  	%rd6923, %rd6921, %rd6922;
	and.b64  	%rd6924, %rd6917, %rd6892;
	not.b64 	%rd6925, %rd6917;
	and.b64  	%rd6926, %rd6867, %rd6925;
	or.b64  	%rd6927, %rd6924, %rd6926;
	add.s64 	%rd6928, %rd6927, %rd6842;
	add.s64 	%rd6929, %rd6928, %rd6923;
	add.s64 	%rd6930, %rd6929, %rd107;
	add.s64 	%rd6931, %rd6930, %rd5107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6539,%dummy}, %rd6918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6540}, %rd6918;
	}
	shf.r.wrap.b32 	%r6541, %r6540, %r6539, 28;
	shf.r.wrap.b32 	%r6542, %r6539, %r6540, 28;
	mov.b64 	%rd6932, {%r6542, %r6541};
	shf.l.wrap.b32 	%r6543, %r6539, %r6540, 30;
	shf.l.wrap.b32 	%r6544, %r6540, %r6539, 30;
	mov.b64 	%rd6933, {%r6544, %r6543};
	xor.b64  	%rd6934, %rd6932, %rd6933;
	shf.l.wrap.b32 	%r6545, %r6539, %r6540, 25;
	shf.l.wrap.b32 	%r6546, %r6540, %r6539, 25;
	mov.b64 	%rd6935, {%r6546, %r6545};
	xor.b64  	%rd6936, %rd6934, %rd6935;
	xor.b64  	%rd6937, %rd6893, %rd6868;
	and.b64  	%rd6938, %rd6918, %rd6937;
	and.b64  	%rd6939, %rd6893, %rd6868;
	xor.b64  	%rd6940, %rd6938, %rd6939;
	add.s64 	%rd6941, %rd6936, %rd6940;
	add.s64 	%rd6942, %rd6931, %rd6843;
	add.s64 	%rd6943, %rd6941, %rd6931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6547,%dummy}, %rd6942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6548}, %rd6942;
	}
	shf.r.wrap.b32 	%r6549, %r6548, %r6547, 14;
	shf.r.wrap.b32 	%r6550, %r6547, %r6548, 14;
	mov.b64 	%rd6944, {%r6550, %r6549};
	shf.r.wrap.b32 	%r6551, %r6548, %r6547, 18;
	shf.r.wrap.b32 	%r6552, %r6547, %r6548, 18;
	mov.b64 	%rd6945, {%r6552, %r6551};
	xor.b64  	%rd6946, %rd6944, %rd6945;
	shf.l.wrap.b32 	%r6553, %r6547, %r6548, 23;
	shf.l.wrap.b32 	%r6554, %r6548, %r6547, 23;
	mov.b64 	%rd6947, {%r6554, %r6553};
	xor.b64  	%rd6948, %rd6946, %rd6947;
	and.b64  	%rd6949, %rd6942, %rd6917;
	not.b64 	%rd6950, %rd6942;
	and.b64  	%rd6951, %rd6892, %rd6950;
	or.b64  	%rd6952, %rd6949, %rd6951;
	add.s64 	%rd6953, %rd6952, %rd6867;
	add.s64 	%rd6954, %rd6953, %rd6948;
	add.s64 	%rd6955, %rd6954, %rd108;
	add.s64 	%rd6956, %rd6955, %rd5120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6555,%dummy}, %rd6943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6556}, %rd6943;
	}
	shf.r.wrap.b32 	%r6557, %r6556, %r6555, 28;
	shf.r.wrap.b32 	%r6558, %r6555, %r6556, 28;
	mov.b64 	%rd6957, {%r6558, %r6557};
	shf.l.wrap.b32 	%r6559, %r6555, %r6556, 30;
	shf.l.wrap.b32 	%r6560, %r6556, %r6555, 30;
	mov.b64 	%rd6958, {%r6560, %r6559};
	xor.b64  	%rd6959, %rd6957, %rd6958;
	shf.l.wrap.b32 	%r6561, %r6555, %r6556, 25;
	shf.l.wrap.b32 	%r6562, %r6556, %r6555, 25;
	mov.b64 	%rd6960, {%r6562, %r6561};
	xor.b64  	%rd6961, %rd6959, %rd6960;
	xor.b64  	%rd6962, %rd6918, %rd6893;
	and.b64  	%rd6963, %rd6943, %rd6962;
	and.b64  	%rd6964, %rd6918, %rd6893;
	xor.b64  	%rd6965, %rd6963, %rd6964;
	add.s64 	%rd6966, %rd6961, %rd6965;
	add.s64 	%rd6967, %rd6956, %rd6868;
	add.s64 	%rd6968, %rd6966, %rd6956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6563,%dummy}, %rd6967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6564}, %rd6967;
	}
	shf.r.wrap.b32 	%r6565, %r6564, %r6563, 14;
	shf.r.wrap.b32 	%r6566, %r6563, %r6564, 14;
	mov.b64 	%rd6969, {%r6566, %r6565};
	shf.r.wrap.b32 	%r6567, %r6564, %r6563, 18;
	shf.r.wrap.b32 	%r6568, %r6563, %r6564, 18;
	mov.b64 	%rd6970, {%r6568, %r6567};
	xor.b64  	%rd6971, %rd6969, %rd6970;
	shf.l.wrap.b32 	%r6569, %r6563, %r6564, 23;
	shf.l.wrap.b32 	%r6570, %r6564, %r6563, 23;
	mov.b64 	%rd6972, {%r6570, %r6569};
	xor.b64  	%rd6973, %rd6971, %rd6972;
	and.b64  	%rd6974, %rd6967, %rd6942;
	not.b64 	%rd6975, %rd6967;
	and.b64  	%rd6976, %rd6917, %rd6975;
	or.b64  	%rd6977, %rd6974, %rd6976;
	add.s64 	%rd6978, %rd6977, %rd6892;
	add.s64 	%rd6979, %rd6978, %rd6973;
	add.s64 	%rd6980, %rd6979, %rd109;
	add.s64 	%rd6981, %rd6980, %rd5133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6571,%dummy}, %rd6968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6572}, %rd6968;
	}
	shf.r.wrap.b32 	%r6573, %r6572, %r6571, 28;
	shf.r.wrap.b32 	%r6574, %r6571, %r6572, 28;
	mov.b64 	%rd6982, {%r6574, %r6573};
	shf.l.wrap.b32 	%r6575, %r6571, %r6572, 30;
	shf.l.wrap.b32 	%r6576, %r6572, %r6571, 30;
	mov.b64 	%rd6983, {%r6576, %r6575};
	xor.b64  	%rd6984, %rd6982, %rd6983;
	shf.l.wrap.b32 	%r6577, %r6571, %r6572, 25;
	shf.l.wrap.b32 	%r6578, %r6572, %r6571, 25;
	mov.b64 	%rd6985, {%r6578, %r6577};
	xor.b64  	%rd6986, %rd6984, %rd6985;
	xor.b64  	%rd6987, %rd6943, %rd6918;
	and.b64  	%rd6988, %rd6968, %rd6987;
	and.b64  	%rd6989, %rd6943, %rd6918;
	xor.b64  	%rd6990, %rd6988, %rd6989;
	add.s64 	%rd6991, %rd6986, %rd6990;
	add.s64 	%rd6992, %rd6981, %rd6893;
	add.s64 	%rd6993, %rd6991, %rd6981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6579,%dummy}, %rd6992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6580}, %rd6992;
	}
	shf.r.wrap.b32 	%r6581, %r6580, %r6579, 14;
	shf.r.wrap.b32 	%r6582, %r6579, %r6580, 14;
	mov.b64 	%rd6994, {%r6582, %r6581};
	shf.r.wrap.b32 	%r6583, %r6580, %r6579, 18;
	shf.r.wrap.b32 	%r6584, %r6579, %r6580, 18;
	mov.b64 	%rd6995, {%r6584, %r6583};
	xor.b64  	%rd6996, %rd6994, %rd6995;
	shf.l.wrap.b32 	%r6585, %r6579, %r6580, 23;
	shf.l.wrap.b32 	%r6586, %r6580, %r6579, 23;
	mov.b64 	%rd6997, {%r6586, %r6585};
	xor.b64  	%rd6998, %rd6996, %rd6997;
	and.b64  	%rd6999, %rd6992, %rd6967;
	not.b64 	%rd7000, %rd6992;
	and.b64  	%rd7001, %rd6942, %rd7000;
	or.b64  	%rd7002, %rd6999, %rd7001;
	add.s64 	%rd7003, %rd7002, %rd6917;
	add.s64 	%rd7004, %rd7003, %rd6998;
	add.s64 	%rd7005, %rd7004, %rd110;
	add.s64 	%rd7006, %rd7005, %rd5146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6587,%dummy}, %rd6993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6588}, %rd6993;
	}
	shf.r.wrap.b32 	%r6589, %r6588, %r6587, 28;
	shf.r.wrap.b32 	%r6590, %r6587, %r6588, 28;
	mov.b64 	%rd7007, {%r6590, %r6589};
	shf.l.wrap.b32 	%r6591, %r6587, %r6588, 30;
	shf.l.wrap.b32 	%r6592, %r6588, %r6587, 30;
	mov.b64 	%rd7008, {%r6592, %r6591};
	xor.b64  	%rd7009, %rd7007, %rd7008;
	shf.l.wrap.b32 	%r6593, %r6587, %r6588, 25;
	shf.l.wrap.b32 	%r6594, %r6588, %r6587, 25;
	mov.b64 	%rd7010, {%r6594, %r6593};
	xor.b64  	%rd7011, %rd7009, %rd7010;
	xor.b64  	%rd7012, %rd6968, %rd6943;
	and.b64  	%rd7013, %rd6993, %rd7012;
	and.b64  	%rd7014, %rd6968, %rd6943;
	xor.b64  	%rd7015, %rd7013, %rd7014;
	add.s64 	%rd7016, %rd7011, %rd7015;
	add.s64 	%rd7017, %rd7006, %rd6918;
	add.s64 	%rd7018, %rd7016, %rd7006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6595,%dummy}, %rd7017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6596}, %rd7017;
	}
	shf.r.wrap.b32 	%r6597, %r6596, %r6595, 14;
	shf.r.wrap.b32 	%r6598, %r6595, %r6596, 14;
	mov.b64 	%rd7019, {%r6598, %r6597};
	shf.r.wrap.b32 	%r6599, %r6596, %r6595, 18;
	shf.r.wrap.b32 	%r6600, %r6595, %r6596, 18;
	mov.b64 	%rd7020, {%r6600, %r6599};
	xor.b64  	%rd7021, %rd7019, %rd7020;
	shf.l.wrap.b32 	%r6601, %r6595, %r6596, 23;
	shf.l.wrap.b32 	%r6602, %r6596, %r6595, 23;
	mov.b64 	%rd7022, {%r6602, %r6601};
	xor.b64  	%rd7023, %rd7021, %rd7022;
	and.b64  	%rd7024, %rd7017, %rd6992;
	not.b64 	%rd7025, %rd7017;
	and.b64  	%rd7026, %rd6967, %rd7025;
	or.b64  	%rd7027, %rd7024, %rd7026;
	add.s64 	%rd7028, %rd7027, %rd6942;
	add.s64 	%rd7029, %rd7028, %rd7023;
	add.s64 	%rd7030, %rd7029, %rd15518;
	add.s64 	%rd7031, %rd7030, %rd5159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6603,%dummy}, %rd7018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6604}, %rd7018;
	}
	shf.r.wrap.b32 	%r6605, %r6604, %r6603, 28;
	shf.r.wrap.b32 	%r6606, %r6603, %r6604, 28;
	mov.b64 	%rd7032, {%r6606, %r6605};
	shf.l.wrap.b32 	%r6607, %r6603, %r6604, 30;
	shf.l.wrap.b32 	%r6608, %r6604, %r6603, 30;
	mov.b64 	%rd7033, {%r6608, %r6607};
	xor.b64  	%rd7034, %rd7032, %rd7033;
	shf.l.wrap.b32 	%r6609, %r6603, %r6604, 25;
	shf.l.wrap.b32 	%r6610, %r6604, %r6603, 25;
	mov.b64 	%rd7035, {%r6610, %r6609};
	xor.b64  	%rd7036, %rd7034, %rd7035;
	xor.b64  	%rd7037, %rd6993, %rd6968;
	and.b64  	%rd7038, %rd7018, %rd7037;
	and.b64  	%rd7039, %rd6993, %rd6968;
	xor.b64  	%rd7040, %rd7038, %rd7039;
	add.s64 	%rd7041, %rd7036, %rd7040;
	add.s64 	%rd7042, %rd7031, %rd6943;
	add.s64 	%rd7043, %rd7041, %rd7031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6611,%dummy}, %rd7042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6612}, %rd7042;
	}
	shf.r.wrap.b32 	%r6613, %r6612, %r6611, 14;
	shf.r.wrap.b32 	%r6614, %r6611, %r6612, 14;
	mov.b64 	%rd7044, {%r6614, %r6613};
	shf.r.wrap.b32 	%r6615, %r6612, %r6611, 18;
	shf.r.wrap.b32 	%r6616, %r6611, %r6612, 18;
	mov.b64 	%rd7045, {%r6616, %r6615};
	xor.b64  	%rd7046, %rd7044, %rd7045;
	shf.l.wrap.b32 	%r6617, %r6611, %r6612, 23;
	shf.l.wrap.b32 	%r6618, %r6612, %r6611, 23;
	mov.b64 	%rd7047, {%r6618, %r6617};
	xor.b64  	%rd7048, %rd7046, %rd7047;
	and.b64  	%rd7049, %rd7042, %rd7017;
	not.b64 	%rd7050, %rd7042;
	and.b64  	%rd7051, %rd6992, %rd7050;
	or.b64  	%rd7052, %rd7049, %rd7051;
	add.s64 	%rd7053, %rd7052, %rd6967;
	add.s64 	%rd7054, %rd7053, %rd7048;
	add.s64 	%rd7055, %rd7054, %rd15517;
	add.s64 	%rd7056, %rd7055, %rd5172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6619,%dummy}, %rd7043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6620}, %rd7043;
	}
	shf.r.wrap.b32 	%r6621, %r6620, %r6619, 28;
	shf.r.wrap.b32 	%r6622, %r6619, %r6620, 28;
	mov.b64 	%rd7057, {%r6622, %r6621};
	shf.l.wrap.b32 	%r6623, %r6619, %r6620, 30;
	shf.l.wrap.b32 	%r6624, %r6620, %r6619, 30;
	mov.b64 	%rd7058, {%r6624, %r6623};
	xor.b64  	%rd7059, %rd7057, %rd7058;
	shf.l.wrap.b32 	%r6625, %r6619, %r6620, 25;
	shf.l.wrap.b32 	%r6626, %r6620, %r6619, 25;
	mov.b64 	%rd7060, {%r6626, %r6625};
	xor.b64  	%rd7061, %rd7059, %rd7060;
	xor.b64  	%rd7062, %rd7018, %rd6993;
	and.b64  	%rd7063, %rd7043, %rd7062;
	and.b64  	%rd7064, %rd7018, %rd6993;
	xor.b64  	%rd7065, %rd7063, %rd7064;
	add.s64 	%rd7066, %rd7061, %rd7065;
	add.s64 	%rd7067, %rd7056, %rd6968;
	add.s64 	%rd7068, %rd7066, %rd7056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6627,%dummy}, %rd7067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6628}, %rd7067;
	}
	shf.r.wrap.b32 	%r6629, %r6628, %r6627, 14;
	shf.r.wrap.b32 	%r6630, %r6627, %r6628, 14;
	mov.b64 	%rd7069, {%r6630, %r6629};
	shf.r.wrap.b32 	%r6631, %r6628, %r6627, 18;
	shf.r.wrap.b32 	%r6632, %r6627, %r6628, 18;
	mov.b64 	%rd7070, {%r6632, %r6631};
	xor.b64  	%rd7071, %rd7069, %rd7070;
	shf.l.wrap.b32 	%r6633, %r6627, %r6628, 23;
	shf.l.wrap.b32 	%r6634, %r6628, %r6627, 23;
	mov.b64 	%rd7072, {%r6634, %r6633};
	xor.b64  	%rd7073, %rd7071, %rd7072;
	and.b64  	%rd7074, %rd7067, %rd7042;
	not.b64 	%rd7075, %rd7067;
	and.b64  	%rd7076, %rd7017, %rd7075;
	or.b64  	%rd7077, %rd7074, %rd7076;
	add.s64 	%rd7078, %rd7077, %rd6992;
	add.s64 	%rd7079, %rd7078, %rd7073;
	add.s64 	%rd7080, %rd7079, %rd15516;
	add.s64 	%rd7081, %rd7080, %rd5185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6635,%dummy}, %rd7068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6636}, %rd7068;
	}
	shf.r.wrap.b32 	%r6637, %r6636, %r6635, 28;
	shf.r.wrap.b32 	%r6638, %r6635, %r6636, 28;
	mov.b64 	%rd7082, {%r6638, %r6637};
	shf.l.wrap.b32 	%r6639, %r6635, %r6636, 30;
	shf.l.wrap.b32 	%r6640, %r6636, %r6635, 30;
	mov.b64 	%rd7083, {%r6640, %r6639};
	xor.b64  	%rd7084, %rd7082, %rd7083;
	shf.l.wrap.b32 	%r6641, %r6635, %r6636, 25;
	shf.l.wrap.b32 	%r6642, %r6636, %r6635, 25;
	mov.b64 	%rd7085, {%r6642, %r6641};
	xor.b64  	%rd7086, %rd7084, %rd7085;
	xor.b64  	%rd7087, %rd7043, %rd7018;
	and.b64  	%rd7088, %rd7068, %rd7087;
	and.b64  	%rd7089, %rd7043, %rd7018;
	xor.b64  	%rd7090, %rd7088, %rd7089;
	add.s64 	%rd7091, %rd7086, %rd7090;
	add.s64 	%rd7092, %rd7081, %rd6993;
	add.s64 	%rd7093, %rd7091, %rd7081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6643,%dummy}, %rd7092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6644}, %rd7092;
	}
	shf.r.wrap.b32 	%r6645, %r6644, %r6643, 14;
	shf.r.wrap.b32 	%r6646, %r6643, %r6644, 14;
	mov.b64 	%rd7094, {%r6646, %r6645};
	shf.r.wrap.b32 	%r6647, %r6644, %r6643, 18;
	shf.r.wrap.b32 	%r6648, %r6643, %r6644, 18;
	mov.b64 	%rd7095, {%r6648, %r6647};
	xor.b64  	%rd7096, %rd7094, %rd7095;
	shf.l.wrap.b32 	%r6649, %r6643, %r6644, 23;
	shf.l.wrap.b32 	%r6650, %r6644, %r6643, 23;
	mov.b64 	%rd7097, {%r6650, %r6649};
	xor.b64  	%rd7098, %rd7096, %rd7097;
	and.b64  	%rd7099, %rd7092, %rd7067;
	not.b64 	%rd7100, %rd7092;
	and.b64  	%rd7101, %rd7042, %rd7100;
	or.b64  	%rd7102, %rd7099, %rd7101;
	add.s64 	%rd7103, %rd7102, %rd7017;
	add.s64 	%rd7104, %rd7103, %rd7098;
	add.s64 	%rd7105, %rd7104, %rd114;
	add.s64 	%rd7106, %rd7105, %rd5198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6651,%dummy}, %rd7093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6652}, %rd7093;
	}
	shf.r.wrap.b32 	%r6653, %r6652, %r6651, 28;
	shf.r.wrap.b32 	%r6654, %r6651, %r6652, 28;
	mov.b64 	%rd7107, {%r6654, %r6653};
	shf.l.wrap.b32 	%r6655, %r6651, %r6652, 30;
	shf.l.wrap.b32 	%r6656, %r6652, %r6651, 30;
	mov.b64 	%rd7108, {%r6656, %r6655};
	xor.b64  	%rd7109, %rd7107, %rd7108;
	shf.l.wrap.b32 	%r6657, %r6651, %r6652, 25;
	shf.l.wrap.b32 	%r6658, %r6652, %r6651, 25;
	mov.b64 	%rd7110, {%r6658, %r6657};
	xor.b64  	%rd7111, %rd7109, %rd7110;
	xor.b64  	%rd7112, %rd7068, %rd7043;
	and.b64  	%rd7113, %rd7093, %rd7112;
	and.b64  	%rd7114, %rd7068, %rd7043;
	xor.b64  	%rd7115, %rd7113, %rd7114;
	add.s64 	%rd7116, %rd7111, %rd7115;
	add.s64 	%rd7117, %rd7106, %rd7018;
	add.s64 	%rd7118, %rd7116, %rd7106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6659,%dummy}, %rd7117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6660}, %rd7117;
	}
	shf.r.wrap.b32 	%r6661, %r6660, %r6659, 14;
	shf.r.wrap.b32 	%r6662, %r6659, %r6660, 14;
	mov.b64 	%rd7119, {%r6662, %r6661};
	shf.r.wrap.b32 	%r6663, %r6660, %r6659, 18;
	shf.r.wrap.b32 	%r6664, %r6659, %r6660, 18;
	mov.b64 	%rd7120, {%r6664, %r6663};
	xor.b64  	%rd7121, %rd7119, %rd7120;
	shf.l.wrap.b32 	%r6665, %r6659, %r6660, 23;
	shf.l.wrap.b32 	%r6666, %r6660, %r6659, 23;
	mov.b64 	%rd7122, {%r6666, %r6665};
	xor.b64  	%rd7123, %rd7121, %rd7122;
	and.b64  	%rd7124, %rd7117, %rd7092;
	not.b64 	%rd7125, %rd7117;
	and.b64  	%rd7126, %rd7067, %rd7125;
	or.b64  	%rd7127, %rd7124, %rd7126;
	add.s64 	%rd7128, %rd7127, %rd7042;
	add.s64 	%rd7129, %rd7128, %rd7123;
	add.s64 	%rd7130, %rd7129, %rd115;
	add.s64 	%rd7131, %rd7130, %rd5211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6667,%dummy}, %rd7118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6668}, %rd7118;
	}
	shf.r.wrap.b32 	%r6669, %r6668, %r6667, 28;
	shf.r.wrap.b32 	%r6670, %r6667, %r6668, 28;
	mov.b64 	%rd7132, {%r6670, %r6669};
	shf.l.wrap.b32 	%r6671, %r6667, %r6668, 30;
	shf.l.wrap.b32 	%r6672, %r6668, %r6667, 30;
	mov.b64 	%rd7133, {%r6672, %r6671};
	xor.b64  	%rd7134, %rd7132, %rd7133;
	shf.l.wrap.b32 	%r6673, %r6667, %r6668, 25;
	shf.l.wrap.b32 	%r6674, %r6668, %r6667, 25;
	mov.b64 	%rd7135, {%r6674, %r6673};
	xor.b64  	%rd7136, %rd7134, %rd7135;
	xor.b64  	%rd7137, %rd7093, %rd7068;
	and.b64  	%rd7138, %rd7118, %rd7137;
	and.b64  	%rd7139, %rd7093, %rd7068;
	xor.b64  	%rd7140, %rd7138, %rd7139;
	add.s64 	%rd7141, %rd7136, %rd7140;
	add.s64 	%rd7142, %rd7131, %rd7043;
	add.s64 	%rd7143, %rd7141, %rd7131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6675,%dummy}, %rd7142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6676}, %rd7142;
	}
	shf.r.wrap.b32 	%r6677, %r6676, %r6675, 14;
	shf.r.wrap.b32 	%r6678, %r6675, %r6676, 14;
	mov.b64 	%rd7144, {%r6678, %r6677};
	shf.r.wrap.b32 	%r6679, %r6676, %r6675, 18;
	shf.r.wrap.b32 	%r6680, %r6675, %r6676, 18;
	mov.b64 	%rd7145, {%r6680, %r6679};
	xor.b64  	%rd7146, %rd7144, %rd7145;
	shf.l.wrap.b32 	%r6681, %r6675, %r6676, 23;
	shf.l.wrap.b32 	%r6682, %r6676, %r6675, 23;
	mov.b64 	%rd7147, {%r6682, %r6681};
	xor.b64  	%rd7148, %rd7146, %rd7147;
	and.b64  	%rd7149, %rd7142, %rd7117;
	not.b64 	%rd7150, %rd7142;
	and.b64  	%rd7151, %rd7092, %rd7150;
	or.b64  	%rd7152, %rd7149, %rd7151;
	add.s64 	%rd7153, %rd7152, %rd7067;
	add.s64 	%rd7154, %rd7153, %rd7148;
	add.s64 	%rd7155, %rd7154, %rd116;
	add.s64 	%rd7156, %rd7155, %rd5224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6683,%dummy}, %rd7143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6684}, %rd7143;
	}
	shf.r.wrap.b32 	%r6685, %r6684, %r6683, 28;
	shf.r.wrap.b32 	%r6686, %r6683, %r6684, 28;
	mov.b64 	%rd7157, {%r6686, %r6685};
	shf.l.wrap.b32 	%r6687, %r6683, %r6684, 30;
	shf.l.wrap.b32 	%r6688, %r6684, %r6683, 30;
	mov.b64 	%rd7158, {%r6688, %r6687};
	xor.b64  	%rd7159, %rd7157, %rd7158;
	shf.l.wrap.b32 	%r6689, %r6683, %r6684, 25;
	shf.l.wrap.b32 	%r6690, %r6684, %r6683, 25;
	mov.b64 	%rd7160, {%r6690, %r6689};
	xor.b64  	%rd7161, %rd7159, %rd7160;
	xor.b64  	%rd7162, %rd7118, %rd7093;
	and.b64  	%rd7163, %rd7143, %rd7162;
	and.b64  	%rd7164, %rd7118, %rd7093;
	xor.b64  	%rd7165, %rd7163, %rd7164;
	add.s64 	%rd7166, %rd7161, %rd7165;
	add.s64 	%rd7167, %rd7156, %rd7068;
	add.s64 	%rd7168, %rd7166, %rd7156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6691,%dummy}, %rd7167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6692}, %rd7167;
	}
	shf.r.wrap.b32 	%r6693, %r6692, %r6691, 14;
	shf.r.wrap.b32 	%r6694, %r6691, %r6692, 14;
	mov.b64 	%rd7169, {%r6694, %r6693};
	shf.r.wrap.b32 	%r6695, %r6692, %r6691, 18;
	shf.r.wrap.b32 	%r6696, %r6691, %r6692, 18;
	mov.b64 	%rd7170, {%r6696, %r6695};
	xor.b64  	%rd7171, %rd7169, %rd7170;
	shf.l.wrap.b32 	%r6697, %r6691, %r6692, 23;
	shf.l.wrap.b32 	%r6698, %r6692, %r6691, 23;
	mov.b64 	%rd7172, {%r6698, %r6697};
	xor.b64  	%rd7173, %rd7171, %rd7172;
	and.b64  	%rd7174, %rd7167, %rd7142;
	not.b64 	%rd7175, %rd7167;
	and.b64  	%rd7176, %rd7117, %rd7175;
	or.b64  	%rd7177, %rd7174, %rd7176;
	add.s64 	%rd7178, %rd7177, %rd7092;
	add.s64 	%rd7179, %rd7178, %rd7173;
	add.s64 	%rd7180, %rd7179, %rd117;
	add.s64 	%rd7181, %rd7180, %rd5237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6699,%dummy}, %rd7168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6700}, %rd7168;
	}
	shf.r.wrap.b32 	%r6701, %r6700, %r6699, 28;
	shf.r.wrap.b32 	%r6702, %r6699, %r6700, 28;
	mov.b64 	%rd7182, {%r6702, %r6701};
	shf.l.wrap.b32 	%r6703, %r6699, %r6700, 30;
	shf.l.wrap.b32 	%r6704, %r6700, %r6699, 30;
	mov.b64 	%rd7183, {%r6704, %r6703};
	xor.b64  	%rd7184, %rd7182, %rd7183;
	shf.l.wrap.b32 	%r6705, %r6699, %r6700, 25;
	shf.l.wrap.b32 	%r6706, %r6700, %r6699, 25;
	mov.b64 	%rd7185, {%r6706, %r6705};
	xor.b64  	%rd7186, %rd7184, %rd7185;
	xor.b64  	%rd7187, %rd7143, %rd7118;
	and.b64  	%rd7188, %rd7168, %rd7187;
	and.b64  	%rd7189, %rd7143, %rd7118;
	xor.b64  	%rd7190, %rd7188, %rd7189;
	add.s64 	%rd7191, %rd7186, %rd7190;
	add.s64 	%rd7192, %rd7181, %rd7093;
	add.s64 	%rd7193, %rd7191, %rd7181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6707,%dummy}, %rd7192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6708}, %rd7192;
	}
	shf.r.wrap.b32 	%r6709, %r6708, %r6707, 14;
	shf.r.wrap.b32 	%r6710, %r6707, %r6708, 14;
	mov.b64 	%rd7194, {%r6710, %r6709};
	shf.r.wrap.b32 	%r6711, %r6708, %r6707, 18;
	shf.r.wrap.b32 	%r6712, %r6707, %r6708, 18;
	mov.b64 	%rd7195, {%r6712, %r6711};
	xor.b64  	%rd7196, %rd7194, %rd7195;
	shf.l.wrap.b32 	%r6713, %r6707, %r6708, 23;
	shf.l.wrap.b32 	%r6714, %r6708, %r6707, 23;
	mov.b64 	%rd7197, {%r6714, %r6713};
	xor.b64  	%rd7198, %rd7196, %rd7197;
	and.b64  	%rd7199, %rd7192, %rd7167;
	not.b64 	%rd7200, %rd7192;
	and.b64  	%rd7201, %rd7142, %rd7200;
	or.b64  	%rd7202, %rd7199, %rd7201;
	add.s64 	%rd7203, %rd7202, %rd7117;
	add.s64 	%rd7204, %rd7203, %rd7198;
	add.s64 	%rd7205, %rd7204, %rd118;
	add.s64 	%rd7206, %rd7205, %rd5250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6715,%dummy}, %rd7193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6716}, %rd7193;
	}
	shf.r.wrap.b32 	%r6717, %r6716, %r6715, 28;
	shf.r.wrap.b32 	%r6718, %r6715, %r6716, 28;
	mov.b64 	%rd7207, {%r6718, %r6717};
	shf.l.wrap.b32 	%r6719, %r6715, %r6716, 30;
	shf.l.wrap.b32 	%r6720, %r6716, %r6715, 30;
	mov.b64 	%rd7208, {%r6720, %r6719};
	xor.b64  	%rd7209, %rd7207, %rd7208;
	shf.l.wrap.b32 	%r6721, %r6715, %r6716, 25;
	shf.l.wrap.b32 	%r6722, %r6716, %r6715, 25;
	mov.b64 	%rd7210, {%r6722, %r6721};
	xor.b64  	%rd7211, %rd7209, %rd7210;
	xor.b64  	%rd7212, %rd7168, %rd7143;
	and.b64  	%rd7213, %rd7193, %rd7212;
	and.b64  	%rd7214, %rd7168, %rd7143;
	xor.b64  	%rd7215, %rd7213, %rd7214;
	add.s64 	%rd7216, %rd7211, %rd7215;
	add.s64 	%rd7217, %rd7206, %rd7118;
	add.s64 	%rd7218, %rd7216, %rd7206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6723,%dummy}, %rd7217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6724}, %rd7217;
	}
	shf.r.wrap.b32 	%r6725, %r6724, %r6723, 14;
	shf.r.wrap.b32 	%r6726, %r6723, %r6724, 14;
	mov.b64 	%rd7219, {%r6726, %r6725};
	shf.r.wrap.b32 	%r6727, %r6724, %r6723, 18;
	shf.r.wrap.b32 	%r6728, %r6723, %r6724, 18;
	mov.b64 	%rd7220, {%r6728, %r6727};
	xor.b64  	%rd7221, %rd7219, %rd7220;
	shf.l.wrap.b32 	%r6729, %r6723, %r6724, 23;
	shf.l.wrap.b32 	%r6730, %r6724, %r6723, 23;
	mov.b64 	%rd7222, {%r6730, %r6729};
	xor.b64  	%rd7223, %rd7221, %rd7222;
	and.b64  	%rd7224, %rd7217, %rd7192;
	not.b64 	%rd7225, %rd7217;
	and.b64  	%rd7226, %rd7167, %rd7225;
	or.b64  	%rd7227, %rd7224, %rd7226;
	add.s64 	%rd7228, %rd7227, %rd7142;
	add.s64 	%rd7229, %rd7228, %rd7223;
	add.s64 	%rd7230, %rd7229, %rd119;
	add.s64 	%rd7231, %rd7230, %rd5263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6731,%dummy}, %rd7218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6732}, %rd7218;
	}
	shf.r.wrap.b32 	%r6733, %r6732, %r6731, 28;
	shf.r.wrap.b32 	%r6734, %r6731, %r6732, 28;
	mov.b64 	%rd7232, {%r6734, %r6733};
	shf.l.wrap.b32 	%r6735, %r6731, %r6732, 30;
	shf.l.wrap.b32 	%r6736, %r6732, %r6731, 30;
	mov.b64 	%rd7233, {%r6736, %r6735};
	xor.b64  	%rd7234, %rd7232, %rd7233;
	shf.l.wrap.b32 	%r6737, %r6731, %r6732, 25;
	shf.l.wrap.b32 	%r6738, %r6732, %r6731, 25;
	mov.b64 	%rd7235, {%r6738, %r6737};
	xor.b64  	%rd7236, %rd7234, %rd7235;
	xor.b64  	%rd7237, %rd7193, %rd7168;
	and.b64  	%rd7238, %rd7218, %rd7237;
	and.b64  	%rd7239, %rd7193, %rd7168;
	xor.b64  	%rd7240, %rd7238, %rd7239;
	add.s64 	%rd7241, %rd7236, %rd7240;
	add.s64 	%rd7242, %rd7241, %rd7231;
	add.s64 	%rd7243, %rd7242, 7640891576956012808;
	add.s64 	%rd7244, %rd7218, -4942790177534073029;
	add.s64 	%rd7245, %rd7193, 4354685564936845355;
	add.s64 	%rd7246, %rd7168, -6534734903238641935;
	shr.u64 	%rd7247, %rd7243, 56;
	cvt.u16.u64 	%rs1162, %rd7247;
	shr.u64 	%rd7248, %rd7243, 48;
	cvt.u16.u64 	%rs1161, %rd7248;
	shr.u64 	%rd7249, %rd7243, 40;
	cvt.u16.u64 	%rs1160, %rd7249;
	shr.u64 	%rd7250, %rd7243, 32;
	cvt.u16.u64 	%rs1159, %rd7250;
	shr.u64 	%rd7251, %rd7243, 24;
	cvt.u16.u64 	%rs1158, %rd7251;
	shr.u64 	%rd7252, %rd7243, 16;
	cvt.u16.u64 	%rs1157, %rd7252;
	shr.u64 	%rd7253, %rd7243, 8;
	cvt.u16.u64 	%rs1156, %rd7253;
	cvt.u16.u64 	%rs1155, %rd7243;
	shr.u64 	%rd7254, %rd7244, 56;
	cvt.u16.u64 	%rs1154, %rd7254;
	shr.u64 	%rd7255, %rd7244, 48;
	cvt.u16.u64 	%rs1153, %rd7255;
	shr.u64 	%rd7256, %rd7244, 40;
	cvt.u16.u64 	%rs1152, %rd7256;
	shr.u64 	%rd7257, %rd7244, 32;
	cvt.u16.u64 	%rs1151, %rd7257;
	shr.u64 	%rd7258, %rd7244, 24;
	cvt.u16.u64 	%rs1150, %rd7258;
	shr.u64 	%rd7259, %rd7244, 16;
	cvt.u16.u64 	%rs1149, %rd7259;
	shr.u64 	%rd7260, %rd7244, 8;
	cvt.u16.u64 	%rs1148, %rd7260;
	cvt.u16.u64 	%rs1147, %rd7244;
	shr.u64 	%rd7261, %rd7245, 56;
	cvt.u16.u64 	%rs1146, %rd7261;
	shr.u64 	%rd7262, %rd7245, 48;
	cvt.u16.u64 	%rs1145, %rd7262;
	shr.u64 	%rd7263, %rd7245, 40;
	cvt.u16.u64 	%rs1144, %rd7263;
	shr.u64 	%rd7264, %rd7245, 32;
	cvt.u16.u64 	%rs1143, %rd7264;
	shr.u64 	%rd7265, %rd7245, 24;
	cvt.u16.u64 	%rs1142, %rd7265;
	shr.u64 	%rd7266, %rd7245, 16;
	cvt.u16.u64 	%rs1141, %rd7266;
	shr.u64 	%rd7267, %rd7245, 8;
	cvt.u16.u64 	%rs1140, %rd7267;
	cvt.u16.u64 	%rs1139, %rd7245;
	shr.u64 	%rd7268, %rd7246, 56;
	cvt.u16.u64 	%rs1138, %rd7268;
	shr.u64 	%rd7269, %rd7246, 48;
	cvt.u16.u64 	%rs1137, %rd7269;
	shr.u64 	%rd7270, %rd7246, 40;
	cvt.u16.u64 	%rs1136, %rd7270;
	shr.u64 	%rd7271, %rd7246, 32;
	cvt.u16.u64 	%rs1135, %rd7271;
	shr.u64 	%rd7272, %rd7246, 24;
	cvt.u16.u64 	%rs1134, %rd7272;
	shr.u64 	%rd7273, %rd7246, 16;
	cvt.u16.u64 	%rs1133, %rd7273;
	shr.u64 	%rd7274, %rd7246, 8;
	cvt.u16.u64 	%rs1132, %rd7274;
	cvt.u16.u64 	%rs1131, %rd7246;

$L__BB4_94:
	mov.u64 	%rd15519, 0;

$L__BB4_95:
	add.s64 	%rd7276, %rd2, %rd15519;
	mov.u16 	%rs622, 0;
	st.local.u8 	[%rd7276], %rs622;
	add.s64 	%rd15519, %rd15519, 1;
	setp.lt.u64 	%p69, %rd15519, 128;
	@%p69 bra 	$L__BB4_95;

	mov.u64 	%rd15520, 0;

$L__BB4_97:
	add.s64 	%rd7280, %rd3, %rd15520;
	mov.u16 	%rs623, 0;
	st.local.u8 	[%rd7280], %rs623;
	add.s64 	%rd15520, %rd15520, 1;
	setp.lt.u64 	%p70, %rd15520, 128;
	@%p70 bra 	$L__BB4_97;

	cvta.to.local.u64 	%rd15524, %rd699;
	mov.u32 	%r11229, %r11221;
	@%p56 bra 	$L__BB4_100;

	cvta.to.local.u64 	%rd7283, %rd699;
	ld.local.v4.u32 	{%r6740, %r6741, %r6742, %r6743}, [%rd7283];
	mov.b32 	{%rs624, %rs625}, %r6740;
	shr.u16 	%rs626, %rs624, 8;
	shr.u16 	%rs627, %rs625, 8;
	mov.b32 	{%rs628, %rs629}, %r6741;
	shr.u16 	%rs630, %rs628, 8;
	shr.u16 	%rs631, %rs629, 8;
	mov.b32 	{%rs632, %rs633}, %r6742;
	shr.u16 	%rs634, %rs632, 8;
	shr.u16 	%rs635, %rs633, 8;
	mov.b32 	{%rs636, %rs637}, %r6743;
	shr.u16 	%rs638, %rs636, 8;
	shr.u16 	%rs639, %rs637, 8;
	cvt.u64.u16 	%rd7284, %rs624;
	shl.b64 	%rd7285, %rd7284, 56;
	cvt.u64.u16 	%rd7286, %rs626;
	shl.b64 	%rd7287, %rd7286, 48;
	or.b64  	%rd7288, %rd7287, %rd7285;
	cvt.u64.u16 	%rd7289, %rs625;
	shl.b64 	%rd7290, %rd7289, 40;
	and.b64  	%rd7291, %rd7290, 280375465082880;
	or.b64  	%rd7292, %rd7288, %rd7291;
	cvt.u64.u16 	%rd7293, %rs627;
	shl.b64 	%rd7294, %rd7293, 32;
	or.b64  	%rd7295, %rd7292, %rd7294;
	cvt.u32.u16 	%r6748, %rs628;
	and.b32  	%r6749, %r6748, 255;
	mul.wide.u32 	%rd7296, %r6749, 16777216;
	or.b64  	%rd7297, %rd7295, %rd7296;
	cvt.u32.u16 	%r6750, %rs630;
	mul.wide.u32 	%rd7298, %r6750, 65536;
	or.b64  	%rd7299, %rd7297, %rd7298;
	cvt.u32.u16 	%r6751, %rs629;
	and.b32  	%r6752, %r6751, 255;
	mul.wide.u32 	%rd7300, %r6752, 256;
	or.b64  	%rd7301, %rd7299, %rd7300;
	cvt.u64.u16 	%rd7302, %rs631;
	or.b64  	%rd7303, %rd7301, %rd7302;
	cvt.u64.u16 	%rd7304, %rs632;
	shl.b64 	%rd7305, %rd7304, 56;
	cvt.u64.u16 	%rd7306, %rs634;
	shl.b64 	%rd7307, %rd7306, 48;
	or.b64  	%rd7308, %rd7307, %rd7305;
	cvt.u64.u16 	%rd7309, %rs633;
	shl.b64 	%rd7310, %rd7309, 40;
	and.b64  	%rd7311, %rd7310, 280375465082880;
	or.b64  	%rd7312, %rd7308, %rd7311;
	cvt.u64.u16 	%rd7313, %rs635;
	shl.b64 	%rd7314, %rd7313, 32;
	or.b64  	%rd7315, %rd7312, %rd7314;
	cvt.u32.u16 	%r6753, %rs636;
	and.b32  	%r6754, %r6753, 255;
	mul.wide.u32 	%rd7316, %r6754, 16777216;
	or.b64  	%rd7317, %rd7315, %rd7316;
	cvt.u32.u16 	%r6755, %rs638;
	mul.wide.u32 	%rd7318, %r6755, 65536;
	or.b64  	%rd7319, %rd7317, %rd7318;
	cvt.u32.u16 	%r6756, %rs637;
	and.b32  	%r6757, %r6756, 255;
	mul.wide.u32 	%rd7320, %r6757, 256;
	or.b64  	%rd7321, %rd7319, %rd7320;
	cvt.u64.u16 	%rd7322, %rs639;
	or.b64  	%rd7323, %rd7321, %rd7322;
	ld.local.v4.u32 	{%r6758, %r6759, %r6760, %r6761}, [%rd7283+16];
	mov.b32 	{%rs640, %rs641}, %r6758;
	shr.u16 	%rs642, %rs640, 8;
	shr.u16 	%rs643, %rs641, 8;
	mov.b32 	{%rs644, %rs645}, %r6759;
	shr.u16 	%rs646, %rs644, 8;
	shr.u16 	%rs647, %rs645, 8;
	mov.b32 	{%rs648, %rs649}, %r6760;
	shr.u16 	%rs650, %rs648, 8;
	shr.u16 	%rs651, %rs649, 8;
	mov.b32 	{%rs652, %rs653}, %r6761;
	shr.u16 	%rs654, %rs652, 8;
	shr.u16 	%rs655, %rs653, 8;
	cvt.u64.u16 	%rd7324, %rs640;
	shl.b64 	%rd7325, %rd7324, 56;
	cvt.u64.u16 	%rd7326, %rs642;
	shl.b64 	%rd7327, %rd7326, 48;
	or.b64  	%rd7328, %rd7327, %rd7325;
	cvt.u64.u16 	%rd7329, %rs641;
	shl.b64 	%rd7330, %rd7329, 40;
	and.b64  	%rd7331, %rd7330, 280375465082880;
	or.b64  	%rd7332, %rd7328, %rd7331;
	cvt.u64.u16 	%rd7333, %rs643;
	shl.b64 	%rd7334, %rd7333, 32;
	or.b64  	%rd7335, %rd7332, %rd7334;
	cvt.u32.u16 	%r6766, %rs644;
	and.b32  	%r6767, %r6766, 255;
	mul.wide.u32 	%rd7336, %r6767, 16777216;
	or.b64  	%rd7337, %rd7335, %rd7336;
	cvt.u32.u16 	%r6768, %rs646;
	mul.wide.u32 	%rd7338, %r6768, 65536;
	or.b64  	%rd7339, %rd7337, %rd7338;
	cvt.u32.u16 	%r6769, %rs645;
	and.b32  	%r6770, %r6769, 255;
	mul.wide.u32 	%rd7340, %r6770, 256;
	or.b64  	%rd7341, %rd7339, %rd7340;
	cvt.u64.u16 	%rd7342, %rs647;
	or.b64  	%rd7343, %rd7341, %rd7342;
	cvt.u64.u16 	%rd7344, %rs648;
	shl.b64 	%rd7345, %rd7344, 56;
	cvt.u64.u16 	%rd7346, %rs650;
	shl.b64 	%rd7347, %rd7346, 48;
	or.b64  	%rd7348, %rd7347, %rd7345;
	cvt.u64.u16 	%rd7349, %rs649;
	shl.b64 	%rd7350, %rd7349, 40;
	and.b64  	%rd7351, %rd7350, 280375465082880;
	or.b64  	%rd7352, %rd7348, %rd7351;
	cvt.u64.u16 	%rd7353, %rs651;
	shl.b64 	%rd7354, %rd7353, 32;
	or.b64  	%rd7355, %rd7352, %rd7354;
	cvt.u32.u16 	%r6771, %rs652;
	and.b32  	%r6772, %r6771, 255;
	mul.wide.u32 	%rd7356, %r6772, 16777216;
	or.b64  	%rd7357, %rd7355, %rd7356;
	cvt.u32.u16 	%r6773, %rs654;
	mul.wide.u32 	%rd7358, %r6773, 65536;
	or.b64  	%rd7359, %rd7357, %rd7358;
	cvt.u32.u16 	%r6774, %rs653;
	and.b32  	%r6775, %r6774, 255;
	mul.wide.u32 	%rd7360, %r6775, 256;
	or.b64  	%rd7361, %rd7359, %rd7360;
	cvt.u64.u16 	%rd7362, %rs655;
	or.b64  	%rd7363, %rd7361, %rd7362;
	ld.local.v4.u32 	{%r6776, %r6777, %r6778, %r6779}, [%rd7283+32];
	mov.b32 	{%rs656, %rs657}, %r6776;
	shr.u16 	%rs658, %rs656, 8;
	shr.u16 	%rs659, %rs657, 8;
	mov.b32 	{%rs660, %rs661}, %r6777;
	shr.u16 	%rs662, %rs660, 8;
	shr.u16 	%rs663, %rs661, 8;
	mov.b32 	{%rs664, %rs665}, %r6778;
	shr.u16 	%rs666, %rs664, 8;
	shr.u16 	%rs667, %rs665, 8;
	mov.b32 	{%rs668, %rs669}, %r6779;
	shr.u16 	%rs670, %rs668, 8;
	shr.u16 	%rs671, %rs669, 8;
	cvt.u64.u16 	%rd7364, %rs656;
	shl.b64 	%rd7365, %rd7364, 56;
	cvt.u64.u16 	%rd7366, %rs658;
	shl.b64 	%rd7367, %rd7366, 48;
	or.b64  	%rd7368, %rd7367, %rd7365;
	cvt.u64.u16 	%rd7369, %rs657;
	shl.b64 	%rd7370, %rd7369, 40;
	and.b64  	%rd7371, %rd7370, 280375465082880;
	or.b64  	%rd7372, %rd7368, %rd7371;
	cvt.u64.u16 	%rd7373, %rs659;
	shl.b64 	%rd7374, %rd7373, 32;
	or.b64  	%rd7375, %rd7372, %rd7374;
	cvt.u32.u16 	%r6784, %rs660;
	and.b32  	%r6785, %r6784, 255;
	mul.wide.u32 	%rd7376, %r6785, 16777216;
	or.b64  	%rd7377, %rd7375, %rd7376;
	cvt.u32.u16 	%r6786, %rs662;
	mul.wide.u32 	%rd7378, %r6786, 65536;
	or.b64  	%rd7379, %rd7377, %rd7378;
	cvt.u32.u16 	%r6787, %rs661;
	and.b32  	%r6788, %r6787, 255;
	mul.wide.u32 	%rd7380, %r6788, 256;
	or.b64  	%rd7381, %rd7379, %rd7380;
	cvt.u64.u16 	%rd7382, %rs663;
	or.b64  	%rd7383, %rd7381, %rd7382;
	cvt.u64.u16 	%rd7384, %rs664;
	shl.b64 	%rd7385, %rd7384, 56;
	cvt.u64.u16 	%rd7386, %rs666;
	shl.b64 	%rd7387, %rd7386, 48;
	or.b64  	%rd7388, %rd7387, %rd7385;
	cvt.u64.u16 	%rd7389, %rs665;
	shl.b64 	%rd7390, %rd7389, 40;
	and.b64  	%rd7391, %rd7390, 280375465082880;
	or.b64  	%rd7392, %rd7388, %rd7391;
	cvt.u64.u16 	%rd7393, %rs667;
	shl.b64 	%rd7394, %rd7393, 32;
	or.b64  	%rd7395, %rd7392, %rd7394;
	cvt.u32.u16 	%r6789, %rs668;
	and.b32  	%r6790, %r6789, 255;
	mul.wide.u32 	%rd7396, %r6790, 16777216;
	or.b64  	%rd7397, %rd7395, %rd7396;
	cvt.u32.u16 	%r6791, %rs670;
	mul.wide.u32 	%rd7398, %r6791, 65536;
	or.b64  	%rd7399, %rd7397, %rd7398;
	cvt.u32.u16 	%r6792, %rs669;
	and.b32  	%r6793, %r6792, 255;
	mul.wide.u32 	%rd7400, %r6793, 256;
	or.b64  	%rd7401, %rd7399, %rd7400;
	cvt.u64.u16 	%rd7402, %rs671;
	or.b64  	%rd7403, %rd7401, %rd7402;
	ld.local.v4.u32 	{%r6794, %r6795, %r6796, %r6797}, [%rd7283+48];
	mov.b32 	{%rs672, %rs673}, %r6794;
	shr.u16 	%rs674, %rs672, 8;
	shr.u16 	%rs675, %rs673, 8;
	mov.b32 	{%rs676, %rs677}, %r6795;
	shr.u16 	%rs678, %rs676, 8;
	shr.u16 	%rs679, %rs677, 8;
	mov.b32 	{%rs680, %rs681}, %r6796;
	shr.u16 	%rs682, %rs680, 8;
	shr.u16 	%rs683, %rs681, 8;
	mov.b32 	{%rs684, %rs685}, %r6797;
	shr.u16 	%rs686, %rs684, 8;
	shr.u16 	%rs687, %rs685, 8;
	cvt.u64.u16 	%rd7404, %rs672;
	shl.b64 	%rd7405, %rd7404, 56;
	cvt.u64.u16 	%rd7406, %rs674;
	shl.b64 	%rd7407, %rd7406, 48;
	or.b64  	%rd7408, %rd7407, %rd7405;
	cvt.u64.u16 	%rd7409, %rs673;
	shl.b64 	%rd7410, %rd7409, 40;
	and.b64  	%rd7411, %rd7410, 280375465082880;
	or.b64  	%rd7412, %rd7408, %rd7411;
	cvt.u64.u16 	%rd7413, %rs675;
	shl.b64 	%rd7414, %rd7413, 32;
	or.b64  	%rd7415, %rd7412, %rd7414;
	cvt.u32.u16 	%r6802, %rs676;
	and.b32  	%r6803, %r6802, 255;
	mul.wide.u32 	%rd7416, %r6803, 16777216;
	or.b64  	%rd7417, %rd7415, %rd7416;
	cvt.u32.u16 	%r6804, %rs678;
	mul.wide.u32 	%rd7418, %r6804, 65536;
	or.b64  	%rd7419, %rd7417, %rd7418;
	cvt.u32.u16 	%r6805, %rs677;
	and.b32  	%r6806, %r6805, 255;
	mul.wide.u32 	%rd7420, %r6806, 256;
	or.b64  	%rd7421, %rd7419, %rd7420;
	cvt.u64.u16 	%rd7422, %rs679;
	or.b64  	%rd7423, %rd7421, %rd7422;
	cvt.u64.u16 	%rd7424, %rs680;
	shl.b64 	%rd7425, %rd7424, 56;
	cvt.u64.u16 	%rd7426, %rs682;
	shl.b64 	%rd7427, %rd7426, 48;
	or.b64  	%rd7428, %rd7427, %rd7425;
	cvt.u64.u16 	%rd7429, %rs681;
	shl.b64 	%rd7430, %rd7429, 40;
	and.b64  	%rd7431, %rd7430, 280375465082880;
	or.b64  	%rd7432, %rd7428, %rd7431;
	cvt.u64.u16 	%rd7433, %rs683;
	shl.b64 	%rd7434, %rd7433, 32;
	or.b64  	%rd7435, %rd7432, %rd7434;
	cvt.u32.u16 	%r6807, %rs684;
	and.b32  	%r6808, %r6807, 255;
	mul.wide.u32 	%rd7436, %r6808, 16777216;
	or.b64  	%rd7437, %rd7435, %rd7436;
	cvt.u32.u16 	%r6809, %rs686;
	mul.wide.u32 	%rd7438, %r6809, 65536;
	or.b64  	%rd7439, %rd7437, %rd7438;
	cvt.u32.u16 	%r6810, %rs685;
	and.b32  	%r6811, %r6810, 255;
	mul.wide.u32 	%rd7440, %r6811, 256;
	or.b64  	%rd7441, %rd7439, %rd7440;
	cvt.u64.u16 	%rd7442, %rs687;
	or.b64  	%rd7443, %rd7441, %rd7442;
	ld.local.v4.u32 	{%r6812, %r6813, %r6814, %r6815}, [%rd7283+64];
	mov.b32 	{%rs688, %rs689}, %r6812;
	shr.u16 	%rs690, %rs688, 8;
	shr.u16 	%rs691, %rs689, 8;
	mov.b32 	{%rs692, %rs693}, %r6813;
	shr.u16 	%rs694, %rs692, 8;
	shr.u16 	%rs695, %rs693, 8;
	mov.b32 	{%rs696, %rs697}, %r6814;
	shr.u16 	%rs698, %rs696, 8;
	shr.u16 	%rs699, %rs697, 8;
	mov.b32 	{%rs700, %rs701}, %r6815;
	shr.u16 	%rs702, %rs700, 8;
	shr.u16 	%rs703, %rs701, 8;
	cvt.u64.u16 	%rd7444, %rs688;
	shl.b64 	%rd7445, %rd7444, 56;
	cvt.u64.u16 	%rd7446, %rs690;
	shl.b64 	%rd7447, %rd7446, 48;
	or.b64  	%rd7448, %rd7447, %rd7445;
	cvt.u64.u16 	%rd7449, %rs689;
	shl.b64 	%rd7450, %rd7449, 40;
	and.b64  	%rd7451, %rd7450, 280375465082880;
	or.b64  	%rd7452, %rd7448, %rd7451;
	cvt.u64.u16 	%rd7453, %rs691;
	shl.b64 	%rd7454, %rd7453, 32;
	or.b64  	%rd7455, %rd7452, %rd7454;
	cvt.u32.u16 	%r6820, %rs692;
	and.b32  	%r6821, %r6820, 255;
	mul.wide.u32 	%rd7456, %r6821, 16777216;
	or.b64  	%rd7457, %rd7455, %rd7456;
	cvt.u32.u16 	%r6822, %rs694;
	mul.wide.u32 	%rd7458, %r6822, 65536;
	or.b64  	%rd7459, %rd7457, %rd7458;
	cvt.u32.u16 	%r6823, %rs693;
	and.b32  	%r6824, %r6823, 255;
	mul.wide.u32 	%rd7460, %r6824, 256;
	or.b64  	%rd7461, %rd7459, %rd7460;
	cvt.u64.u16 	%rd7462, %rs695;
	or.b64  	%rd7463, %rd7461, %rd7462;
	cvt.u64.u16 	%rd7464, %rs696;
	shl.b64 	%rd7465, %rd7464, 56;
	cvt.u64.u16 	%rd7466, %rs698;
	shl.b64 	%rd7467, %rd7466, 48;
	or.b64  	%rd7468, %rd7467, %rd7465;
	cvt.u64.u16 	%rd7469, %rs697;
	shl.b64 	%rd7470, %rd7469, 40;
	and.b64  	%rd7471, %rd7470, 280375465082880;
	or.b64  	%rd7472, %rd7468, %rd7471;
	cvt.u64.u16 	%rd7473, %rs699;
	shl.b64 	%rd7474, %rd7473, 32;
	or.b64  	%rd7475, %rd7472, %rd7474;
	cvt.u32.u16 	%r6825, %rs700;
	and.b32  	%r6826, %r6825, 255;
	mul.wide.u32 	%rd7476, %r6826, 16777216;
	or.b64  	%rd7477, %rd7475, %rd7476;
	cvt.u32.u16 	%r6827, %rs702;
	mul.wide.u32 	%rd7478, %r6827, 65536;
	or.b64  	%rd7479, %rd7477, %rd7478;
	cvt.u32.u16 	%r6828, %rs701;
	and.b32  	%r6829, %r6828, 255;
	mul.wide.u32 	%rd7480, %r6829, 256;
	or.b64  	%rd7481, %rd7479, %rd7480;
	cvt.u64.u16 	%rd7482, %rs703;
	or.b64  	%rd7483, %rd7481, %rd7482;
	ld.local.v4.u32 	{%r6830, %r6831, %r6832, %r6833}, [%rd7283+80];
	mov.b32 	{%rs704, %rs705}, %r6830;
	shr.u16 	%rs706, %rs704, 8;
	shr.u16 	%rs707, %rs705, 8;
	mov.b32 	{%rs708, %rs709}, %r6831;
	shr.u16 	%rs710, %rs708, 8;
	shr.u16 	%rs711, %rs709, 8;
	mov.b32 	{%rs712, %rs713}, %r6832;
	shr.u16 	%rs714, %rs712, 8;
	shr.u16 	%rs715, %rs713, 8;
	mov.b32 	{%rs716, %rs717}, %r6833;
	shr.u16 	%rs718, %rs716, 8;
	shr.u16 	%rs719, %rs717, 8;
	cvt.u64.u16 	%rd7484, %rs704;
	shl.b64 	%rd7485, %rd7484, 56;
	cvt.u64.u16 	%rd7486, %rs706;
	shl.b64 	%rd7487, %rd7486, 48;
	or.b64  	%rd7488, %rd7487, %rd7485;
	cvt.u64.u16 	%rd7489, %rs705;
	shl.b64 	%rd7490, %rd7489, 40;
	and.b64  	%rd7491, %rd7490, 280375465082880;
	or.b64  	%rd7492, %rd7488, %rd7491;
	cvt.u64.u16 	%rd7493, %rs707;
	shl.b64 	%rd7494, %rd7493, 32;
	or.b64  	%rd7495, %rd7492, %rd7494;
	cvt.u32.u16 	%r6838, %rs708;
	and.b32  	%r6839, %r6838, 255;
	mul.wide.u32 	%rd7496, %r6839, 16777216;
	or.b64  	%rd7497, %rd7495, %rd7496;
	cvt.u32.u16 	%r6840, %rs710;
	mul.wide.u32 	%rd7498, %r6840, 65536;
	or.b64  	%rd7499, %rd7497, %rd7498;
	cvt.u32.u16 	%r6841, %rs709;
	and.b32  	%r6842, %r6841, 255;
	mul.wide.u32 	%rd7500, %r6842, 256;
	or.b64  	%rd7501, %rd7499, %rd7500;
	cvt.u64.u16 	%rd7502, %rs711;
	or.b64  	%rd7503, %rd7501, %rd7502;
	cvt.u64.u16 	%rd7504, %rs712;
	shl.b64 	%rd7505, %rd7504, 56;
	cvt.u64.u16 	%rd7506, %rs714;
	shl.b64 	%rd7507, %rd7506, 48;
	or.b64  	%rd7508, %rd7507, %rd7505;
	cvt.u64.u16 	%rd7509, %rs713;
	shl.b64 	%rd7510, %rd7509, 40;
	and.b64  	%rd7511, %rd7510, 280375465082880;
	or.b64  	%rd7512, %rd7508, %rd7511;
	cvt.u64.u16 	%rd7513, %rs715;
	shl.b64 	%rd7514, %rd7513, 32;
	or.b64  	%rd7515, %rd7512, %rd7514;
	cvt.u32.u16 	%r6843, %rs716;
	and.b32  	%r6844, %r6843, 255;
	mul.wide.u32 	%rd7516, %r6844, 16777216;
	or.b64  	%rd7517, %rd7515, %rd7516;
	cvt.u32.u16 	%r6845, %rs718;
	mul.wide.u32 	%rd7518, %r6845, 65536;
	or.b64  	%rd7519, %rd7517, %rd7518;
	cvt.u32.u16 	%r6846, %rs717;
	and.b32  	%r6847, %r6846, 255;
	mul.wide.u32 	%rd7520, %r6847, 256;
	or.b64  	%rd7521, %rd7519, %rd7520;
	cvt.u64.u16 	%rd7522, %rs719;
	or.b64  	%rd7523, %rd7521, %rd7522;
	ld.local.v4.u32 	{%r6848, %r6849, %r6850, %r6851}, [%rd7283+96];
	mov.b32 	{%rs720, %rs721}, %r6848;
	shr.u16 	%rs722, %rs720, 8;
	shr.u16 	%rs723, %rs721, 8;
	mov.b32 	{%rs724, %rs725}, %r6849;
	shr.u16 	%rs726, %rs724, 8;
	shr.u16 	%rs727, %rs725, 8;
	mov.b32 	{%rs728, %rs729}, %r6850;
	shr.u16 	%rs730, %rs728, 8;
	shr.u16 	%rs731, %rs729, 8;
	mov.b32 	{%rs732, %rs733}, %r6851;
	shr.u16 	%rs734, %rs732, 8;
	shr.u16 	%rs735, %rs733, 8;
	cvt.u64.u16 	%rd7524, %rs720;
	shl.b64 	%rd7525, %rd7524, 56;
	cvt.u64.u16 	%rd7526, %rs722;
	shl.b64 	%rd7527, %rd7526, 48;
	or.b64  	%rd7528, %rd7527, %rd7525;
	cvt.u64.u16 	%rd7529, %rs721;
	shl.b64 	%rd7530, %rd7529, 40;
	and.b64  	%rd7531, %rd7530, 280375465082880;
	or.b64  	%rd7532, %rd7528, %rd7531;
	cvt.u64.u16 	%rd7533, %rs723;
	shl.b64 	%rd7534, %rd7533, 32;
	or.b64  	%rd7535, %rd7532, %rd7534;
	cvt.u32.u16 	%r6856, %rs724;
	and.b32  	%r6857, %r6856, 255;
	mul.wide.u32 	%rd7536, %r6857, 16777216;
	or.b64  	%rd7537, %rd7535, %rd7536;
	cvt.u32.u16 	%r6858, %rs726;
	mul.wide.u32 	%rd7538, %r6858, 65536;
	or.b64  	%rd7539, %rd7537, %rd7538;
	cvt.u32.u16 	%r6859, %rs725;
	and.b32  	%r6860, %r6859, 255;
	mul.wide.u32 	%rd7540, %r6860, 256;
	or.b64  	%rd7541, %rd7539, %rd7540;
	cvt.u64.u16 	%rd7542, %rs727;
	or.b64  	%rd7543, %rd7541, %rd7542;
	cvt.u64.u16 	%rd7544, %rs728;
	shl.b64 	%rd7545, %rd7544, 56;
	cvt.u64.u16 	%rd7546, %rs730;
	shl.b64 	%rd7547, %rd7546, 48;
	or.b64  	%rd7548, %rd7547, %rd7545;
	cvt.u64.u16 	%rd7549, %rs729;
	shl.b64 	%rd7550, %rd7549, 40;
	and.b64  	%rd7551, %rd7550, 280375465082880;
	or.b64  	%rd7552, %rd7548, %rd7551;
	cvt.u64.u16 	%rd7553, %rs731;
	shl.b64 	%rd7554, %rd7553, 32;
	or.b64  	%rd7555, %rd7552, %rd7554;
	cvt.u32.u16 	%r6861, %rs732;
	and.b32  	%r6862, %r6861, 255;
	mul.wide.u32 	%rd7556, %r6862, 16777216;
	or.b64  	%rd7557, %rd7555, %rd7556;
	cvt.u32.u16 	%r6863, %rs734;
	mul.wide.u32 	%rd7558, %r6863, 65536;
	or.b64  	%rd7559, %rd7557, %rd7558;
	cvt.u32.u16 	%r6864, %rs733;
	and.b32  	%r6865, %r6864, 255;
	mul.wide.u32 	%rd7560, %r6865, 256;
	or.b64  	%rd7561, %rd7559, %rd7560;
	cvt.u64.u16 	%rd7562, %rs735;
	or.b64  	%rd7563, %rd7561, %rd7562;
	ld.local.v4.u32 	{%r6866, %r6867, %r6868, %r6869}, [%rd7283+112];
	mov.b32 	{%rs736, %rs737}, %r6866;
	shr.u16 	%rs738, %rs736, 8;
	shr.u16 	%rs739, %rs737, 8;
	mov.b32 	{%rs740, %rs741}, %r6867;
	shr.u16 	%rs742, %rs740, 8;
	shr.u16 	%rs743, %rs741, 8;
	mov.b32 	{%rs744, %rs745}, %r6868;
	shr.u16 	%rs746, %rs744, 8;
	shr.u16 	%rs747, %rs745, 8;
	mov.b32 	{%rs748, %rs749}, %r6869;
	shr.u16 	%rs750, %rs748, 8;
	shr.u16 	%rs751, %rs749, 8;
	cvt.u64.u16 	%rd7564, %rs736;
	shl.b64 	%rd7565, %rd7564, 56;
	cvt.u64.u16 	%rd7566, %rs738;
	shl.b64 	%rd7567, %rd7566, 48;
	or.b64  	%rd7568, %rd7567, %rd7565;
	cvt.u64.u16 	%rd7569, %rs737;
	shl.b64 	%rd7570, %rd7569, 40;
	and.b64  	%rd7571, %rd7570, 280375465082880;
	or.b64  	%rd7572, %rd7568, %rd7571;
	cvt.u64.u16 	%rd7573, %rs739;
	shl.b64 	%rd7574, %rd7573, 32;
	or.b64  	%rd7575, %rd7572, %rd7574;
	cvt.u32.u16 	%r6874, %rs740;
	and.b32  	%r6875, %r6874, 255;
	mul.wide.u32 	%rd7576, %r6875, 16777216;
	or.b64  	%rd7577, %rd7575, %rd7576;
	cvt.u32.u16 	%r6876, %rs742;
	mul.wide.u32 	%rd7578, %r6876, 65536;
	or.b64  	%rd7579, %rd7577, %rd7578;
	cvt.u32.u16 	%r6877, %rs741;
	and.b32  	%r6878, %r6877, 255;
	mul.wide.u32 	%rd7580, %r6878, 256;
	or.b64  	%rd7581, %rd7579, %rd7580;
	cvt.u64.u16 	%rd7582, %rs743;
	or.b64  	%rd7583, %rd7581, %rd7582;
	cvt.u64.u16 	%rd7584, %rs744;
	shl.b64 	%rd7585, %rd7584, 56;
	cvt.u64.u16 	%rd7586, %rs746;
	shl.b64 	%rd7587, %rd7586, 48;
	or.b64  	%rd7588, %rd7587, %rd7585;
	cvt.u64.u16 	%rd7589, %rs745;
	shl.b64 	%rd7590, %rd7589, 40;
	and.b64  	%rd7591, %rd7590, 280375465082880;
	or.b64  	%rd7592, %rd7588, %rd7591;
	cvt.u64.u16 	%rd7593, %rs747;
	shl.b64 	%rd7594, %rd7593, 32;
	or.b64  	%rd7595, %rd7592, %rd7594;
	cvt.u32.u16 	%r6879, %rs748;
	and.b32  	%r6880, %r6879, 255;
	mul.wide.u32 	%rd7596, %r6880, 16777216;
	or.b64  	%rd7597, %rd7595, %rd7596;
	cvt.u32.u16 	%r6881, %rs750;
	mul.wide.u32 	%rd7598, %r6881, 65536;
	or.b64  	%rd7599, %rd7597, %rd7598;
	cvt.u32.u16 	%r6882, %rs749;
	and.b32  	%r6883, %r6882, 255;
	mul.wide.u32 	%rd7600, %r6883, 256;
	or.b64  	%rd7601, %rd7599, %rd7600;
	cvt.u64.u16 	%rd7602, %rs751;
	or.b64  	%rd7603, %rd7601, %rd7602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6884,%dummy}, %rd7323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6885}, %rd7323;
	}
	shf.r.wrap.b32 	%r6886, %r6885, %r6884, 1;
	shf.r.wrap.b32 	%r6887, %r6884, %r6885, 1;
	mov.b64 	%rd7604, {%r6887, %r6886};
	shf.r.wrap.b32 	%r6888, %r6885, %r6884, 8;
	shf.r.wrap.b32 	%r6889, %r6884, %r6885, 8;
	mov.b64 	%rd7605, {%r6889, %r6888};
	xor.b64  	%rd7606, %rd7604, %rd7605;
	shr.u64 	%rd7607, %rd7323, 7;
	xor.b64  	%rd7608, %rd7606, %rd7607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6890,%dummy}, %rd7583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6891}, %rd7583;
	}
	shf.r.wrap.b32 	%r6892, %r6891, %r6890, 19;
	shf.r.wrap.b32 	%r6893, %r6890, %r6891, 19;
	mov.b64 	%rd7609, {%r6893, %r6892};
	shf.l.wrap.b32 	%r6894, %r6890, %r6891, 3;
	shf.l.wrap.b32 	%r6895, %r6891, %r6890, 3;
	mov.b64 	%rd7610, {%r6895, %r6894};
	xor.b64  	%rd7611, %rd7609, %rd7610;
	shr.u64 	%rd7612, %rd7583, 6;
	xor.b64  	%rd7613, %rd7611, %rd7612;
	add.s64 	%rd7614, %rd7608, %rd7303;
	add.s64 	%rd7615, %rd7614, %rd7483;
	add.s64 	%rd7616, %rd7615, %rd7613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6896,%dummy}, %rd7343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6897}, %rd7343;
	}
	shf.r.wrap.b32 	%r6898, %r6897, %r6896, 1;
	shf.r.wrap.b32 	%r6899, %r6896, %r6897, 1;
	mov.b64 	%rd7617, {%r6899, %r6898};
	shf.r.wrap.b32 	%r6900, %r6897, %r6896, 8;
	shf.r.wrap.b32 	%r6901, %r6896, %r6897, 8;
	mov.b64 	%rd7618, {%r6901, %r6900};
	xor.b64  	%rd7619, %rd7617, %rd7618;
	shr.u64 	%rd7620, %rd7343, 7;
	xor.b64  	%rd7621, %rd7619, %rd7620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6902,%dummy}, %rd7603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6903}, %rd7603;
	}
	shf.r.wrap.b32 	%r6904, %r6903, %r6902, 19;
	shf.r.wrap.b32 	%r6905, %r6902, %r6903, 19;
	mov.b64 	%rd7622, {%r6905, %r6904};
	shf.l.wrap.b32 	%r6906, %r6902, %r6903, 3;
	shf.l.wrap.b32 	%r6907, %r6903, %r6902, 3;
	mov.b64 	%rd7623, {%r6907, %r6906};
	xor.b64  	%rd7624, %rd7622, %rd7623;
	shr.u64 	%rd7625, %rd7603, 6;
	xor.b64  	%rd7626, %rd7624, %rd7625;
	add.s64 	%rd7627, %rd7621, %rd7323;
	add.s64 	%rd7628, %rd7627, %rd7503;
	add.s64 	%rd7629, %rd7628, %rd7626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6908,%dummy}, %rd7363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6909}, %rd7363;
	}
	shf.r.wrap.b32 	%r6910, %r6909, %r6908, 1;
	shf.r.wrap.b32 	%r6911, %r6908, %r6909, 1;
	mov.b64 	%rd7630, {%r6911, %r6910};
	shf.r.wrap.b32 	%r6912, %r6909, %r6908, 8;
	shf.r.wrap.b32 	%r6913, %r6908, %r6909, 8;
	mov.b64 	%rd7631, {%r6913, %r6912};
	xor.b64  	%rd7632, %rd7630, %rd7631;
	shr.u64 	%rd7633, %rd7363, 7;
	xor.b64  	%rd7634, %rd7632, %rd7633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6914,%dummy}, %rd7616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6915}, %rd7616;
	}
	shf.r.wrap.b32 	%r6916, %r6915, %r6914, 19;
	shf.r.wrap.b32 	%r6917, %r6914, %r6915, 19;
	mov.b64 	%rd7635, {%r6917, %r6916};
	shf.l.wrap.b32 	%r6918, %r6914, %r6915, 3;
	shf.l.wrap.b32 	%r6919, %r6915, %r6914, 3;
	mov.b64 	%rd7636, {%r6919, %r6918};
	xor.b64  	%rd7637, %rd7635, %rd7636;
	shr.u64 	%rd7638, %rd7616, 6;
	xor.b64  	%rd7639, %rd7637, %rd7638;
	add.s64 	%rd7640, %rd7634, %rd7343;
	add.s64 	%rd7641, %rd7640, %rd7523;
	add.s64 	%rd7642, %rd7641, %rd7639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6920,%dummy}, %rd7383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6921}, %rd7383;
	}
	shf.r.wrap.b32 	%r6922, %r6921, %r6920, 1;
	shf.r.wrap.b32 	%r6923, %r6920, %r6921, 1;
	mov.b64 	%rd7643, {%r6923, %r6922};
	shf.r.wrap.b32 	%r6924, %r6921, %r6920, 8;
	shf.r.wrap.b32 	%r6925, %r6920, %r6921, 8;
	mov.b64 	%rd7644, {%r6925, %r6924};
	xor.b64  	%rd7645, %rd7643, %rd7644;
	shr.u64 	%rd7646, %rd7383, 7;
	xor.b64  	%rd7647, %rd7645, %rd7646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6926,%dummy}, %rd7629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6927}, %rd7629;
	}
	shf.r.wrap.b32 	%r6928, %r6927, %r6926, 19;
	shf.r.wrap.b32 	%r6929, %r6926, %r6927, 19;
	mov.b64 	%rd7648, {%r6929, %r6928};
	shf.l.wrap.b32 	%r6930, %r6926, %r6927, 3;
	shf.l.wrap.b32 	%r6931, %r6927, %r6926, 3;
	mov.b64 	%rd7649, {%r6931, %r6930};
	xor.b64  	%rd7650, %rd7648, %rd7649;
	shr.u64 	%rd7651, %rd7629, 6;
	xor.b64  	%rd7652, %rd7650, %rd7651;
	add.s64 	%rd7653, %rd7647, %rd7363;
	add.s64 	%rd7654, %rd7653, %rd7543;
	add.s64 	%rd7655, %rd7654, %rd7652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6932,%dummy}, %rd7403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6933}, %rd7403;
	}
	shf.r.wrap.b32 	%r6934, %r6933, %r6932, 1;
	shf.r.wrap.b32 	%r6935, %r6932, %r6933, 1;
	mov.b64 	%rd7656, {%r6935, %r6934};
	shf.r.wrap.b32 	%r6936, %r6933, %r6932, 8;
	shf.r.wrap.b32 	%r6937, %r6932, %r6933, 8;
	mov.b64 	%rd7657, {%r6937, %r6936};
	xor.b64  	%rd7658, %rd7656, %rd7657;
	shr.u64 	%rd7659, %rd7403, 7;
	xor.b64  	%rd7660, %rd7658, %rd7659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6938,%dummy}, %rd7642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6939}, %rd7642;
	}
	shf.r.wrap.b32 	%r6940, %r6939, %r6938, 19;
	shf.r.wrap.b32 	%r6941, %r6938, %r6939, 19;
	mov.b64 	%rd7661, {%r6941, %r6940};
	shf.l.wrap.b32 	%r6942, %r6938, %r6939, 3;
	shf.l.wrap.b32 	%r6943, %r6939, %r6938, 3;
	mov.b64 	%rd7662, {%r6943, %r6942};
	xor.b64  	%rd7663, %rd7661, %rd7662;
	shr.u64 	%rd7664, %rd7642, 6;
	xor.b64  	%rd7665, %rd7663, %rd7664;
	add.s64 	%rd7666, %rd7660, %rd7383;
	add.s64 	%rd7667, %rd7666, %rd7563;
	add.s64 	%rd7668, %rd7667, %rd7665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6944,%dummy}, %rd7423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6945}, %rd7423;
	}
	shf.r.wrap.b32 	%r6946, %r6945, %r6944, 1;
	shf.r.wrap.b32 	%r6947, %r6944, %r6945, 1;
	mov.b64 	%rd7669, {%r6947, %r6946};
	shf.r.wrap.b32 	%r6948, %r6945, %r6944, 8;
	shf.r.wrap.b32 	%r6949, %r6944, %r6945, 8;
	mov.b64 	%rd7670, {%r6949, %r6948};
	xor.b64  	%rd7671, %rd7669, %rd7670;
	shr.u64 	%rd7672, %rd7423, 7;
	xor.b64  	%rd7673, %rd7671, %rd7672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6950,%dummy}, %rd7655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6951}, %rd7655;
	}
	shf.r.wrap.b32 	%r6952, %r6951, %r6950, 19;
	shf.r.wrap.b32 	%r6953, %r6950, %r6951, 19;
	mov.b64 	%rd7674, {%r6953, %r6952};
	shf.l.wrap.b32 	%r6954, %r6950, %r6951, 3;
	shf.l.wrap.b32 	%r6955, %r6951, %r6950, 3;
	mov.b64 	%rd7675, {%r6955, %r6954};
	xor.b64  	%rd7676, %rd7674, %rd7675;
	shr.u64 	%rd7677, %rd7655, 6;
	xor.b64  	%rd7678, %rd7676, %rd7677;
	add.s64 	%rd7679, %rd7673, %rd7403;
	add.s64 	%rd7680, %rd7679, %rd7583;
	add.s64 	%rd7681, %rd7680, %rd7678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6956,%dummy}, %rd7443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6957}, %rd7443;
	}
	shf.r.wrap.b32 	%r6958, %r6957, %r6956, 1;
	shf.r.wrap.b32 	%r6959, %r6956, %r6957, 1;
	mov.b64 	%rd7682, {%r6959, %r6958};
	shf.r.wrap.b32 	%r6960, %r6957, %r6956, 8;
	shf.r.wrap.b32 	%r6961, %r6956, %r6957, 8;
	mov.b64 	%rd7683, {%r6961, %r6960};
	xor.b64  	%rd7684, %rd7682, %rd7683;
	shr.u64 	%rd7685, %rd7443, 7;
	xor.b64  	%rd7686, %rd7684, %rd7685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6962,%dummy}, %rd7668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6963}, %rd7668;
	}
	shf.r.wrap.b32 	%r6964, %r6963, %r6962, 19;
	shf.r.wrap.b32 	%r6965, %r6962, %r6963, 19;
	mov.b64 	%rd7687, {%r6965, %r6964};
	shf.l.wrap.b32 	%r6966, %r6962, %r6963, 3;
	shf.l.wrap.b32 	%r6967, %r6963, %r6962, 3;
	mov.b64 	%rd7688, {%r6967, %r6966};
	xor.b64  	%rd7689, %rd7687, %rd7688;
	shr.u64 	%rd7690, %rd7668, 6;
	xor.b64  	%rd7691, %rd7689, %rd7690;
	add.s64 	%rd7692, %rd7686, %rd7423;
	add.s64 	%rd7693, %rd7692, %rd7603;
	add.s64 	%rd7694, %rd7693, %rd7691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6968,%dummy}, %rd7463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6969}, %rd7463;
	}
	shf.r.wrap.b32 	%r6970, %r6969, %r6968, 1;
	shf.r.wrap.b32 	%r6971, %r6968, %r6969, 1;
	mov.b64 	%rd7695, {%r6971, %r6970};
	shf.r.wrap.b32 	%r6972, %r6969, %r6968, 8;
	shf.r.wrap.b32 	%r6973, %r6968, %r6969, 8;
	mov.b64 	%rd7696, {%r6973, %r6972};
	xor.b64  	%rd7697, %rd7695, %rd7696;
	shr.u64 	%rd7698, %rd7463, 7;
	xor.b64  	%rd7699, %rd7697, %rd7698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6974,%dummy}, %rd7681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6975}, %rd7681;
	}
	shf.r.wrap.b32 	%r6976, %r6975, %r6974, 19;
	shf.r.wrap.b32 	%r6977, %r6974, %r6975, 19;
	mov.b64 	%rd7700, {%r6977, %r6976};
	shf.l.wrap.b32 	%r6978, %r6974, %r6975, 3;
	shf.l.wrap.b32 	%r6979, %r6975, %r6974, 3;
	mov.b64 	%rd7701, {%r6979, %r6978};
	xor.b64  	%rd7702, %rd7700, %rd7701;
	shr.u64 	%rd7703, %rd7681, 6;
	xor.b64  	%rd7704, %rd7702, %rd7703;
	add.s64 	%rd7705, %rd7699, %rd7443;
	add.s64 	%rd7706, %rd7705, %rd7616;
	add.s64 	%rd7707, %rd7706, %rd7704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6980,%dummy}, %rd7483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6981}, %rd7483;
	}
	shf.r.wrap.b32 	%r6982, %r6981, %r6980, 1;
	shf.r.wrap.b32 	%r6983, %r6980, %r6981, 1;
	mov.b64 	%rd7708, {%r6983, %r6982};
	shf.r.wrap.b32 	%r6984, %r6981, %r6980, 8;
	shf.r.wrap.b32 	%r6985, %r6980, %r6981, 8;
	mov.b64 	%rd7709, {%r6985, %r6984};
	xor.b64  	%rd7710, %rd7708, %rd7709;
	shr.u64 	%rd7711, %rd7483, 7;
	xor.b64  	%rd7712, %rd7710, %rd7711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6986,%dummy}, %rd7694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6987}, %rd7694;
	}
	shf.r.wrap.b32 	%r6988, %r6987, %r6986, 19;
	shf.r.wrap.b32 	%r6989, %r6986, %r6987, 19;
	mov.b64 	%rd7713, {%r6989, %r6988};
	shf.l.wrap.b32 	%r6990, %r6986, %r6987, 3;
	shf.l.wrap.b32 	%r6991, %r6987, %r6986, 3;
	mov.b64 	%rd7714, {%r6991, %r6990};
	xor.b64  	%rd7715, %rd7713, %rd7714;
	shr.u64 	%rd7716, %rd7694, 6;
	xor.b64  	%rd7717, %rd7715, %rd7716;
	add.s64 	%rd7718, %rd7712, %rd7463;
	add.s64 	%rd7719, %rd7718, %rd7629;
	add.s64 	%rd7720, %rd7719, %rd7717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6992,%dummy}, %rd7503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6993}, %rd7503;
	}
	shf.r.wrap.b32 	%r6994, %r6993, %r6992, 1;
	shf.r.wrap.b32 	%r6995, %r6992, %r6993, 1;
	mov.b64 	%rd7721, {%r6995, %r6994};
	shf.r.wrap.b32 	%r6996, %r6993, %r6992, 8;
	shf.r.wrap.b32 	%r6997, %r6992, %r6993, 8;
	mov.b64 	%rd7722, {%r6997, %r6996};
	xor.b64  	%rd7723, %rd7721, %rd7722;
	shr.u64 	%rd7724, %rd7503, 7;
	xor.b64  	%rd7725, %rd7723, %rd7724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6998,%dummy}, %rd7707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6999}, %rd7707;
	}
	shf.r.wrap.b32 	%r7000, %r6999, %r6998, 19;
	shf.r.wrap.b32 	%r7001, %r6998, %r6999, 19;
	mov.b64 	%rd7726, {%r7001, %r7000};
	shf.l.wrap.b32 	%r7002, %r6998, %r6999, 3;
	shf.l.wrap.b32 	%r7003, %r6999, %r6998, 3;
	mov.b64 	%rd7727, {%r7003, %r7002};
	xor.b64  	%rd7728, %rd7726, %rd7727;
	shr.u64 	%rd7729, %rd7707, 6;
	xor.b64  	%rd7730, %rd7728, %rd7729;
	add.s64 	%rd7731, %rd7725, %rd7483;
	add.s64 	%rd7732, %rd7731, %rd7642;
	add.s64 	%rd7733, %rd7732, %rd7730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7004,%dummy}, %rd7523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7005}, %rd7523;
	}
	shf.r.wrap.b32 	%r7006, %r7005, %r7004, 1;
	shf.r.wrap.b32 	%r7007, %r7004, %r7005, 1;
	mov.b64 	%rd7734, {%r7007, %r7006};
	shf.r.wrap.b32 	%r7008, %r7005, %r7004, 8;
	shf.r.wrap.b32 	%r7009, %r7004, %r7005, 8;
	mov.b64 	%rd7735, {%r7009, %r7008};
	xor.b64  	%rd7736, %rd7734, %rd7735;
	shr.u64 	%rd7737, %rd7523, 7;
	xor.b64  	%rd7738, %rd7736, %rd7737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7010,%dummy}, %rd7720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7011}, %rd7720;
	}
	shf.r.wrap.b32 	%r7012, %r7011, %r7010, 19;
	shf.r.wrap.b32 	%r7013, %r7010, %r7011, 19;
	mov.b64 	%rd7739, {%r7013, %r7012};
	shf.l.wrap.b32 	%r7014, %r7010, %r7011, 3;
	shf.l.wrap.b32 	%r7015, %r7011, %r7010, 3;
	mov.b64 	%rd7740, {%r7015, %r7014};
	xor.b64  	%rd7741, %rd7739, %rd7740;
	shr.u64 	%rd7742, %rd7720, 6;
	xor.b64  	%rd7743, %rd7741, %rd7742;
	add.s64 	%rd7744, %rd7738, %rd7503;
	add.s64 	%rd7745, %rd7744, %rd7655;
	add.s64 	%rd7746, %rd7745, %rd7743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7016,%dummy}, %rd7543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7017}, %rd7543;
	}
	shf.r.wrap.b32 	%r7018, %r7017, %r7016, 1;
	shf.r.wrap.b32 	%r7019, %r7016, %r7017, 1;
	mov.b64 	%rd7747, {%r7019, %r7018};
	shf.r.wrap.b32 	%r7020, %r7017, %r7016, 8;
	shf.r.wrap.b32 	%r7021, %r7016, %r7017, 8;
	mov.b64 	%rd7748, {%r7021, %r7020};
	xor.b64  	%rd7749, %rd7747, %rd7748;
	shr.u64 	%rd7750, %rd7543, 7;
	xor.b64  	%rd7751, %rd7749, %rd7750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7022,%dummy}, %rd7733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7023}, %rd7733;
	}
	shf.r.wrap.b32 	%r7024, %r7023, %r7022, 19;
	shf.r.wrap.b32 	%r7025, %r7022, %r7023, 19;
	mov.b64 	%rd7752, {%r7025, %r7024};
	shf.l.wrap.b32 	%r7026, %r7022, %r7023, 3;
	shf.l.wrap.b32 	%r7027, %r7023, %r7022, 3;
	mov.b64 	%rd7753, {%r7027, %r7026};
	xor.b64  	%rd7754, %rd7752, %rd7753;
	shr.u64 	%rd7755, %rd7733, 6;
	xor.b64  	%rd7756, %rd7754, %rd7755;
	add.s64 	%rd7757, %rd7751, %rd7523;
	add.s64 	%rd7758, %rd7757, %rd7668;
	add.s64 	%rd7759, %rd7758, %rd7756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7028,%dummy}, %rd7563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7029}, %rd7563;
	}
	shf.r.wrap.b32 	%r7030, %r7029, %r7028, 1;
	shf.r.wrap.b32 	%r7031, %r7028, %r7029, 1;
	mov.b64 	%rd7760, {%r7031, %r7030};
	shf.r.wrap.b32 	%r7032, %r7029, %r7028, 8;
	shf.r.wrap.b32 	%r7033, %r7028, %r7029, 8;
	mov.b64 	%rd7761, {%r7033, %r7032};
	xor.b64  	%rd7762, %rd7760, %rd7761;
	shr.u64 	%rd7763, %rd7563, 7;
	xor.b64  	%rd7764, %rd7762, %rd7763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7034,%dummy}, %rd7746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7035}, %rd7746;
	}
	shf.r.wrap.b32 	%r7036, %r7035, %r7034, 19;
	shf.r.wrap.b32 	%r7037, %r7034, %r7035, 19;
	mov.b64 	%rd7765, {%r7037, %r7036};
	shf.l.wrap.b32 	%r7038, %r7034, %r7035, 3;
	shf.l.wrap.b32 	%r7039, %r7035, %r7034, 3;
	mov.b64 	%rd7766, {%r7039, %r7038};
	xor.b64  	%rd7767, %rd7765, %rd7766;
	shr.u64 	%rd7768, %rd7746, 6;
	xor.b64  	%rd7769, %rd7767, %rd7768;
	add.s64 	%rd7770, %rd7764, %rd7543;
	add.s64 	%rd7771, %rd7770, %rd7681;
	add.s64 	%rd7772, %rd7771, %rd7769;
	shf.r.wrap.b32 	%r7040, %r6891, %r6890, 1;
	shf.r.wrap.b32 	%r7041, %r6890, %r6891, 1;
	mov.b64 	%rd7773, {%r7041, %r7040};
	shf.r.wrap.b32 	%r7042, %r6891, %r6890, 8;
	shf.r.wrap.b32 	%r7043, %r6890, %r6891, 8;
	mov.b64 	%rd7774, {%r7043, %r7042};
	xor.b64  	%rd7775, %rd7773, %rd7774;
	shr.u64 	%rd7776, %rd7583, 7;
	xor.b64  	%rd7777, %rd7775, %rd7776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7044,%dummy}, %rd7759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7045}, %rd7759;
	}
	shf.r.wrap.b32 	%r7046, %r7045, %r7044, 19;
	shf.r.wrap.b32 	%r7047, %r7044, %r7045, 19;
	mov.b64 	%rd7778, {%r7047, %r7046};
	shf.l.wrap.b32 	%r7048, %r7044, %r7045, 3;
	shf.l.wrap.b32 	%r7049, %r7045, %r7044, 3;
	mov.b64 	%rd7779, {%r7049, %r7048};
	xor.b64  	%rd7780, %rd7778, %rd7779;
	shr.u64 	%rd7781, %rd7759, 6;
	xor.b64  	%rd7782, %rd7780, %rd7781;
	add.s64 	%rd7783, %rd7777, %rd7563;
	add.s64 	%rd7784, %rd7783, %rd7694;
	add.s64 	%rd7785, %rd7784, %rd7782;
	shf.r.wrap.b32 	%r7050, %r6903, %r6902, 1;
	shf.r.wrap.b32 	%r7051, %r6902, %r6903, 1;
	mov.b64 	%rd7786, {%r7051, %r7050};
	shf.r.wrap.b32 	%r7052, %r6903, %r6902, 8;
	shf.r.wrap.b32 	%r7053, %r6902, %r6903, 8;
	mov.b64 	%rd7787, {%r7053, %r7052};
	xor.b64  	%rd7788, %rd7786, %rd7787;
	shr.u64 	%rd7789, %rd7603, 7;
	xor.b64  	%rd7790, %rd7788, %rd7789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7054,%dummy}, %rd7772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7055}, %rd7772;
	}
	shf.r.wrap.b32 	%r7056, %r7055, %r7054, 19;
	shf.r.wrap.b32 	%r7057, %r7054, %r7055, 19;
	mov.b64 	%rd7791, {%r7057, %r7056};
	shf.l.wrap.b32 	%r7058, %r7054, %r7055, 3;
	shf.l.wrap.b32 	%r7059, %r7055, %r7054, 3;
	mov.b64 	%rd7792, {%r7059, %r7058};
	xor.b64  	%rd7793, %rd7791, %rd7792;
	shr.u64 	%rd7794, %rd7772, 6;
	xor.b64  	%rd7795, %rd7793, %rd7794;
	add.s64 	%rd7796, %rd7790, %rd7583;
	add.s64 	%rd7797, %rd7796, %rd7707;
	add.s64 	%rd7798, %rd7797, %rd7795;
	shf.r.wrap.b32 	%r7060, %r6915, %r6914, 1;
	shf.r.wrap.b32 	%r7061, %r6914, %r6915, 1;
	mov.b64 	%rd7799, {%r7061, %r7060};
	shf.r.wrap.b32 	%r7062, %r6915, %r6914, 8;
	shf.r.wrap.b32 	%r7063, %r6914, %r6915, 8;
	mov.b64 	%rd7800, {%r7063, %r7062};
	xor.b64  	%rd7801, %rd7799, %rd7800;
	shr.u64 	%rd7802, %rd7616, 7;
	xor.b64  	%rd7803, %rd7801, %rd7802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7064,%dummy}, %rd7785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7065}, %rd7785;
	}
	shf.r.wrap.b32 	%r7066, %r7065, %r7064, 19;
	shf.r.wrap.b32 	%r7067, %r7064, %r7065, 19;
	mov.b64 	%rd7804, {%r7067, %r7066};
	shf.l.wrap.b32 	%r7068, %r7064, %r7065, 3;
	shf.l.wrap.b32 	%r7069, %r7065, %r7064, 3;
	mov.b64 	%rd7805, {%r7069, %r7068};
	xor.b64  	%rd7806, %rd7804, %rd7805;
	shr.u64 	%rd7807, %rd7785, 6;
	xor.b64  	%rd7808, %rd7806, %rd7807;
	add.s64 	%rd7809, %rd7803, %rd7603;
	add.s64 	%rd7810, %rd7809, %rd7720;
	add.s64 	%rd7811, %rd7810, %rd7808;
	shf.r.wrap.b32 	%r7070, %r6927, %r6926, 1;
	shf.r.wrap.b32 	%r7071, %r6926, %r6927, 1;
	mov.b64 	%rd7812, {%r7071, %r7070};
	shf.r.wrap.b32 	%r7072, %r6927, %r6926, 8;
	shf.r.wrap.b32 	%r7073, %r6926, %r6927, 8;
	mov.b64 	%rd7813, {%r7073, %r7072};
	xor.b64  	%rd7814, %rd7812, %rd7813;
	shr.u64 	%rd7815, %rd7629, 7;
	xor.b64  	%rd7816, %rd7814, %rd7815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7074,%dummy}, %rd7798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7075}, %rd7798;
	}
	shf.r.wrap.b32 	%r7076, %r7075, %r7074, 19;
	shf.r.wrap.b32 	%r7077, %r7074, %r7075, 19;
	mov.b64 	%rd7817, {%r7077, %r7076};
	shf.l.wrap.b32 	%r7078, %r7074, %r7075, 3;
	shf.l.wrap.b32 	%r7079, %r7075, %r7074, 3;
	mov.b64 	%rd7818, {%r7079, %r7078};
	xor.b64  	%rd7819, %rd7817, %rd7818;
	shr.u64 	%rd7820, %rd7798, 6;
	xor.b64  	%rd7821, %rd7819, %rd7820;
	add.s64 	%rd7822, %rd7816, %rd7616;
	add.s64 	%rd7823, %rd7822, %rd7733;
	add.s64 	%rd7824, %rd7823, %rd7821;
	shf.r.wrap.b32 	%r7080, %r6939, %r6938, 1;
	shf.r.wrap.b32 	%r7081, %r6938, %r6939, 1;
	mov.b64 	%rd7825, {%r7081, %r7080};
	shf.r.wrap.b32 	%r7082, %r6939, %r6938, 8;
	shf.r.wrap.b32 	%r7083, %r6938, %r6939, 8;
	mov.b64 	%rd7826, {%r7083, %r7082};
	xor.b64  	%rd7827, %rd7825, %rd7826;
	shr.u64 	%rd7828, %rd7642, 7;
	xor.b64  	%rd7829, %rd7827, %rd7828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7084,%dummy}, %rd7811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7085}, %rd7811;
	}
	shf.r.wrap.b32 	%r7086, %r7085, %r7084, 19;
	shf.r.wrap.b32 	%r7087, %r7084, %r7085, 19;
	mov.b64 	%rd7830, {%r7087, %r7086};
	shf.l.wrap.b32 	%r7088, %r7084, %r7085, 3;
	shf.l.wrap.b32 	%r7089, %r7085, %r7084, 3;
	mov.b64 	%rd7831, {%r7089, %r7088};
	xor.b64  	%rd7832, %rd7830, %rd7831;
	shr.u64 	%rd7833, %rd7811, 6;
	xor.b64  	%rd7834, %rd7832, %rd7833;
	add.s64 	%rd7835, %rd7829, %rd7629;
	add.s64 	%rd7836, %rd7835, %rd7746;
	add.s64 	%rd7837, %rd7836, %rd7834;
	shf.r.wrap.b32 	%r7090, %r6951, %r6950, 1;
	shf.r.wrap.b32 	%r7091, %r6950, %r6951, 1;
	mov.b64 	%rd7838, {%r7091, %r7090};
	shf.r.wrap.b32 	%r7092, %r6951, %r6950, 8;
	shf.r.wrap.b32 	%r7093, %r6950, %r6951, 8;
	mov.b64 	%rd7839, {%r7093, %r7092};
	xor.b64  	%rd7840, %rd7838, %rd7839;
	shr.u64 	%rd7841, %rd7655, 7;
	xor.b64  	%rd7842, %rd7840, %rd7841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7094,%dummy}, %rd7824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7095}, %rd7824;
	}
	shf.r.wrap.b32 	%r7096, %r7095, %r7094, 19;
	shf.r.wrap.b32 	%r7097, %r7094, %r7095, 19;
	mov.b64 	%rd7843, {%r7097, %r7096};
	shf.l.wrap.b32 	%r7098, %r7094, %r7095, 3;
	shf.l.wrap.b32 	%r7099, %r7095, %r7094, 3;
	mov.b64 	%rd7844, {%r7099, %r7098};
	xor.b64  	%rd7845, %rd7843, %rd7844;
	shr.u64 	%rd7846, %rd7824, 6;
	xor.b64  	%rd7847, %rd7845, %rd7846;
	add.s64 	%rd7848, %rd7842, %rd7642;
	add.s64 	%rd7849, %rd7848, %rd7759;
	add.s64 	%rd7850, %rd7849, %rd7847;
	shf.r.wrap.b32 	%r7100, %r6963, %r6962, 1;
	shf.r.wrap.b32 	%r7101, %r6962, %r6963, 1;
	mov.b64 	%rd7851, {%r7101, %r7100};
	shf.r.wrap.b32 	%r7102, %r6963, %r6962, 8;
	shf.r.wrap.b32 	%r7103, %r6962, %r6963, 8;
	mov.b64 	%rd7852, {%r7103, %r7102};
	xor.b64  	%rd7853, %rd7851, %rd7852;
	shr.u64 	%rd7854, %rd7668, 7;
	xor.b64  	%rd7855, %rd7853, %rd7854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7104,%dummy}, %rd7837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7105}, %rd7837;
	}
	shf.r.wrap.b32 	%r7106, %r7105, %r7104, 19;
	shf.r.wrap.b32 	%r7107, %r7104, %r7105, 19;
	mov.b64 	%rd7856, {%r7107, %r7106};
	shf.l.wrap.b32 	%r7108, %r7104, %r7105, 3;
	shf.l.wrap.b32 	%r7109, %r7105, %r7104, 3;
	mov.b64 	%rd7857, {%r7109, %r7108};
	xor.b64  	%rd7858, %rd7856, %rd7857;
	shr.u64 	%rd7859, %rd7837, 6;
	xor.b64  	%rd7860, %rd7858, %rd7859;
	add.s64 	%rd7861, %rd7855, %rd7655;
	add.s64 	%rd7862, %rd7861, %rd7772;
	add.s64 	%rd7863, %rd7862, %rd7860;
	shf.r.wrap.b32 	%r7110, %r6975, %r6974, 1;
	shf.r.wrap.b32 	%r7111, %r6974, %r6975, 1;
	mov.b64 	%rd7864, {%r7111, %r7110};
	shf.r.wrap.b32 	%r7112, %r6975, %r6974, 8;
	shf.r.wrap.b32 	%r7113, %r6974, %r6975, 8;
	mov.b64 	%rd7865, {%r7113, %r7112};
	xor.b64  	%rd7866, %rd7864, %rd7865;
	shr.u64 	%rd7867, %rd7681, 7;
	xor.b64  	%rd7868, %rd7866, %rd7867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7114,%dummy}, %rd7850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7115}, %rd7850;
	}
	shf.r.wrap.b32 	%r7116, %r7115, %r7114, 19;
	shf.r.wrap.b32 	%r7117, %r7114, %r7115, 19;
	mov.b64 	%rd7869, {%r7117, %r7116};
	shf.l.wrap.b32 	%r7118, %r7114, %r7115, 3;
	shf.l.wrap.b32 	%r7119, %r7115, %r7114, 3;
	mov.b64 	%rd7870, {%r7119, %r7118};
	xor.b64  	%rd7871, %rd7869, %rd7870;
	shr.u64 	%rd7872, %rd7850, 6;
	xor.b64  	%rd7873, %rd7871, %rd7872;
	add.s64 	%rd7874, %rd7868, %rd7668;
	add.s64 	%rd7875, %rd7874, %rd7785;
	add.s64 	%rd7876, %rd7875, %rd7873;
	shf.r.wrap.b32 	%r7120, %r6987, %r6986, 1;
	shf.r.wrap.b32 	%r7121, %r6986, %r6987, 1;
	mov.b64 	%rd7877, {%r7121, %r7120};
	shf.r.wrap.b32 	%r7122, %r6987, %r6986, 8;
	shf.r.wrap.b32 	%r7123, %r6986, %r6987, 8;
	mov.b64 	%rd7878, {%r7123, %r7122};
	xor.b64  	%rd7879, %rd7877, %rd7878;
	shr.u64 	%rd7880, %rd7694, 7;
	xor.b64  	%rd7881, %rd7879, %rd7880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7124,%dummy}, %rd7863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7125}, %rd7863;
	}
	shf.r.wrap.b32 	%r7126, %r7125, %r7124, 19;
	shf.r.wrap.b32 	%r7127, %r7124, %r7125, 19;
	mov.b64 	%rd7882, {%r7127, %r7126};
	shf.l.wrap.b32 	%r7128, %r7124, %r7125, 3;
	shf.l.wrap.b32 	%r7129, %r7125, %r7124, 3;
	mov.b64 	%rd7883, {%r7129, %r7128};
	xor.b64  	%rd7884, %rd7882, %rd7883;
	shr.u64 	%rd7885, %rd7863, 6;
	xor.b64  	%rd7886, %rd7884, %rd7885;
	add.s64 	%rd7887, %rd7881, %rd7681;
	add.s64 	%rd7888, %rd7887, %rd7798;
	add.s64 	%rd7889, %rd7888, %rd7886;
	shf.r.wrap.b32 	%r7130, %r6999, %r6998, 1;
	shf.r.wrap.b32 	%r7131, %r6998, %r6999, 1;
	mov.b64 	%rd7890, {%r7131, %r7130};
	shf.r.wrap.b32 	%r7132, %r6999, %r6998, 8;
	shf.r.wrap.b32 	%r7133, %r6998, %r6999, 8;
	mov.b64 	%rd7891, {%r7133, %r7132};
	xor.b64  	%rd7892, %rd7890, %rd7891;
	shr.u64 	%rd7893, %rd7707, 7;
	xor.b64  	%rd7894, %rd7892, %rd7893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7134,%dummy}, %rd7876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7135}, %rd7876;
	}
	shf.r.wrap.b32 	%r7136, %r7135, %r7134, 19;
	shf.r.wrap.b32 	%r7137, %r7134, %r7135, 19;
	mov.b64 	%rd7895, {%r7137, %r7136};
	shf.l.wrap.b32 	%r7138, %r7134, %r7135, 3;
	shf.l.wrap.b32 	%r7139, %r7135, %r7134, 3;
	mov.b64 	%rd7896, {%r7139, %r7138};
	xor.b64  	%rd7897, %rd7895, %rd7896;
	shr.u64 	%rd7898, %rd7876, 6;
	xor.b64  	%rd7899, %rd7897, %rd7898;
	add.s64 	%rd7900, %rd7894, %rd7694;
	add.s64 	%rd7901, %rd7900, %rd7811;
	add.s64 	%rd7902, %rd7901, %rd7899;
	shf.r.wrap.b32 	%r7140, %r7011, %r7010, 1;
	shf.r.wrap.b32 	%r7141, %r7010, %r7011, 1;
	mov.b64 	%rd7903, {%r7141, %r7140};
	shf.r.wrap.b32 	%r7142, %r7011, %r7010, 8;
	shf.r.wrap.b32 	%r7143, %r7010, %r7011, 8;
	mov.b64 	%rd7904, {%r7143, %r7142};
	xor.b64  	%rd7905, %rd7903, %rd7904;
	shr.u64 	%rd7906, %rd7720, 7;
	xor.b64  	%rd7907, %rd7905, %rd7906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7144,%dummy}, %rd7889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7145}, %rd7889;
	}
	shf.r.wrap.b32 	%r7146, %r7145, %r7144, 19;
	shf.r.wrap.b32 	%r7147, %r7144, %r7145, 19;
	mov.b64 	%rd7908, {%r7147, %r7146};
	shf.l.wrap.b32 	%r7148, %r7144, %r7145, 3;
	shf.l.wrap.b32 	%r7149, %r7145, %r7144, 3;
	mov.b64 	%rd7909, {%r7149, %r7148};
	xor.b64  	%rd7910, %rd7908, %rd7909;
	shr.u64 	%rd7911, %rd7889, 6;
	xor.b64  	%rd7912, %rd7910, %rd7911;
	add.s64 	%rd7913, %rd7907, %rd7707;
	add.s64 	%rd7914, %rd7913, %rd7824;
	add.s64 	%rd7915, %rd7914, %rd7912;
	shf.r.wrap.b32 	%r7150, %r7023, %r7022, 1;
	shf.r.wrap.b32 	%r7151, %r7022, %r7023, 1;
	mov.b64 	%rd7916, {%r7151, %r7150};
	shf.r.wrap.b32 	%r7152, %r7023, %r7022, 8;
	shf.r.wrap.b32 	%r7153, %r7022, %r7023, 8;
	mov.b64 	%rd7917, {%r7153, %r7152};
	xor.b64  	%rd7918, %rd7916, %rd7917;
	shr.u64 	%rd7919, %rd7733, 7;
	xor.b64  	%rd7920, %rd7918, %rd7919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7154,%dummy}, %rd7902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7155}, %rd7902;
	}
	shf.r.wrap.b32 	%r7156, %r7155, %r7154, 19;
	shf.r.wrap.b32 	%r7157, %r7154, %r7155, 19;
	mov.b64 	%rd7921, {%r7157, %r7156};
	shf.l.wrap.b32 	%r7158, %r7154, %r7155, 3;
	shf.l.wrap.b32 	%r7159, %r7155, %r7154, 3;
	mov.b64 	%rd7922, {%r7159, %r7158};
	xor.b64  	%rd7923, %rd7921, %rd7922;
	shr.u64 	%rd7924, %rd7902, 6;
	xor.b64  	%rd7925, %rd7923, %rd7924;
	add.s64 	%rd7926, %rd7920, %rd7720;
	add.s64 	%rd7927, %rd7926, %rd7837;
	add.s64 	%rd7928, %rd7927, %rd7925;
	shf.r.wrap.b32 	%r7160, %r7035, %r7034, 1;
	shf.r.wrap.b32 	%r7161, %r7034, %r7035, 1;
	mov.b64 	%rd7929, {%r7161, %r7160};
	shf.r.wrap.b32 	%r7162, %r7035, %r7034, 8;
	shf.r.wrap.b32 	%r7163, %r7034, %r7035, 8;
	mov.b64 	%rd7930, {%r7163, %r7162};
	xor.b64  	%rd7931, %rd7929, %rd7930;
	shr.u64 	%rd7932, %rd7746, 7;
	xor.b64  	%rd7933, %rd7931, %rd7932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7164,%dummy}, %rd7915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7165}, %rd7915;
	}
	shf.r.wrap.b32 	%r7166, %r7165, %r7164, 19;
	shf.r.wrap.b32 	%r7167, %r7164, %r7165, 19;
	mov.b64 	%rd7934, {%r7167, %r7166};
	shf.l.wrap.b32 	%r7168, %r7164, %r7165, 3;
	shf.l.wrap.b32 	%r7169, %r7165, %r7164, 3;
	mov.b64 	%rd7935, {%r7169, %r7168};
	xor.b64  	%rd7936, %rd7934, %rd7935;
	shr.u64 	%rd7937, %rd7915, 6;
	xor.b64  	%rd7938, %rd7936, %rd7937;
	add.s64 	%rd7939, %rd7933, %rd7733;
	add.s64 	%rd7940, %rd7939, %rd7850;
	add.s64 	%rd7941, %rd7940, %rd7938;
	shf.r.wrap.b32 	%r7170, %r7045, %r7044, 1;
	shf.r.wrap.b32 	%r7171, %r7044, %r7045, 1;
	mov.b64 	%rd7942, {%r7171, %r7170};
	shf.r.wrap.b32 	%r7172, %r7045, %r7044, 8;
	shf.r.wrap.b32 	%r7173, %r7044, %r7045, 8;
	mov.b64 	%rd7943, {%r7173, %r7172};
	xor.b64  	%rd7944, %rd7942, %rd7943;
	shr.u64 	%rd7945, %rd7759, 7;
	xor.b64  	%rd7946, %rd7944, %rd7945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7174,%dummy}, %rd7928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7175}, %rd7928;
	}
	shf.r.wrap.b32 	%r7176, %r7175, %r7174, 19;
	shf.r.wrap.b32 	%r7177, %r7174, %r7175, 19;
	mov.b64 	%rd7947, {%r7177, %r7176};
	shf.l.wrap.b32 	%r7178, %r7174, %r7175, 3;
	shf.l.wrap.b32 	%r7179, %r7175, %r7174, 3;
	mov.b64 	%rd7948, {%r7179, %r7178};
	xor.b64  	%rd7949, %rd7947, %rd7948;
	shr.u64 	%rd7950, %rd7928, 6;
	xor.b64  	%rd7951, %rd7949, %rd7950;
	add.s64 	%rd7952, %rd7946, %rd7746;
	add.s64 	%rd7953, %rd7952, %rd7863;
	add.s64 	%rd7954, %rd7953, %rd7951;
	shf.r.wrap.b32 	%r7180, %r7055, %r7054, 1;
	shf.r.wrap.b32 	%r7181, %r7054, %r7055, 1;
	mov.b64 	%rd7955, {%r7181, %r7180};
	shf.r.wrap.b32 	%r7182, %r7055, %r7054, 8;
	shf.r.wrap.b32 	%r7183, %r7054, %r7055, 8;
	mov.b64 	%rd7956, {%r7183, %r7182};
	xor.b64  	%rd7957, %rd7955, %rd7956;
	shr.u64 	%rd7958, %rd7772, 7;
	xor.b64  	%rd7959, %rd7957, %rd7958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7184,%dummy}, %rd7941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7185}, %rd7941;
	}
	shf.r.wrap.b32 	%r7186, %r7185, %r7184, 19;
	shf.r.wrap.b32 	%r7187, %r7184, %r7185, 19;
	mov.b64 	%rd7960, {%r7187, %r7186};
	shf.l.wrap.b32 	%r7188, %r7184, %r7185, 3;
	shf.l.wrap.b32 	%r7189, %r7185, %r7184, 3;
	mov.b64 	%rd7961, {%r7189, %r7188};
	xor.b64  	%rd7962, %rd7960, %rd7961;
	shr.u64 	%rd7963, %rd7941, 6;
	xor.b64  	%rd7964, %rd7962, %rd7963;
	add.s64 	%rd7965, %rd7959, %rd7759;
	add.s64 	%rd7966, %rd7965, %rd7876;
	add.s64 	%rd7967, %rd7966, %rd7964;
	shf.r.wrap.b32 	%r7190, %r7065, %r7064, 1;
	shf.r.wrap.b32 	%r7191, %r7064, %r7065, 1;
	mov.b64 	%rd7968, {%r7191, %r7190};
	shf.r.wrap.b32 	%r7192, %r7065, %r7064, 8;
	shf.r.wrap.b32 	%r7193, %r7064, %r7065, 8;
	mov.b64 	%rd7969, {%r7193, %r7192};
	xor.b64  	%rd7970, %rd7968, %rd7969;
	shr.u64 	%rd7971, %rd7785, 7;
	xor.b64  	%rd7972, %rd7970, %rd7971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7194,%dummy}, %rd7954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7195}, %rd7954;
	}
	shf.r.wrap.b32 	%r7196, %r7195, %r7194, 19;
	shf.r.wrap.b32 	%r7197, %r7194, %r7195, 19;
	mov.b64 	%rd7973, {%r7197, %r7196};
	shf.l.wrap.b32 	%r7198, %r7194, %r7195, 3;
	shf.l.wrap.b32 	%r7199, %r7195, %r7194, 3;
	mov.b64 	%rd7974, {%r7199, %r7198};
	xor.b64  	%rd7975, %rd7973, %rd7974;
	shr.u64 	%rd7976, %rd7954, 6;
	xor.b64  	%rd7977, %rd7975, %rd7976;
	add.s64 	%rd7978, %rd7972, %rd7772;
	add.s64 	%rd7979, %rd7978, %rd7889;
	add.s64 	%rd7980, %rd7979, %rd7977;
	shf.r.wrap.b32 	%r7200, %r7075, %r7074, 1;
	shf.r.wrap.b32 	%r7201, %r7074, %r7075, 1;
	mov.b64 	%rd7981, {%r7201, %r7200};
	shf.r.wrap.b32 	%r7202, %r7075, %r7074, 8;
	shf.r.wrap.b32 	%r7203, %r7074, %r7075, 8;
	mov.b64 	%rd7982, {%r7203, %r7202};
	xor.b64  	%rd7983, %rd7981, %rd7982;
	shr.u64 	%rd7984, %rd7798, 7;
	xor.b64  	%rd7985, %rd7983, %rd7984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7204,%dummy}, %rd7967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7205}, %rd7967;
	}
	shf.r.wrap.b32 	%r7206, %r7205, %r7204, 19;
	shf.r.wrap.b32 	%r7207, %r7204, %r7205, 19;
	mov.b64 	%rd7986, {%r7207, %r7206};
	shf.l.wrap.b32 	%r7208, %r7204, %r7205, 3;
	shf.l.wrap.b32 	%r7209, %r7205, %r7204, 3;
	mov.b64 	%rd7987, {%r7209, %r7208};
	xor.b64  	%rd7988, %rd7986, %rd7987;
	shr.u64 	%rd7989, %rd7967, 6;
	xor.b64  	%rd7990, %rd7988, %rd7989;
	add.s64 	%rd7991, %rd7985, %rd7785;
	add.s64 	%rd7992, %rd7991, %rd7902;
	add.s64 	%rd7993, %rd7992, %rd7990;
	shf.r.wrap.b32 	%r7210, %r7085, %r7084, 1;
	shf.r.wrap.b32 	%r7211, %r7084, %r7085, 1;
	mov.b64 	%rd7994, {%r7211, %r7210};
	shf.r.wrap.b32 	%r7212, %r7085, %r7084, 8;
	shf.r.wrap.b32 	%r7213, %r7084, %r7085, 8;
	mov.b64 	%rd7995, {%r7213, %r7212};
	xor.b64  	%rd7996, %rd7994, %rd7995;
	shr.u64 	%rd7997, %rd7811, 7;
	xor.b64  	%rd7998, %rd7996, %rd7997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7214,%dummy}, %rd7980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7215}, %rd7980;
	}
	shf.r.wrap.b32 	%r7216, %r7215, %r7214, 19;
	shf.r.wrap.b32 	%r7217, %r7214, %r7215, 19;
	mov.b64 	%rd7999, {%r7217, %r7216};
	shf.l.wrap.b32 	%r7218, %r7214, %r7215, 3;
	shf.l.wrap.b32 	%r7219, %r7215, %r7214, 3;
	mov.b64 	%rd8000, {%r7219, %r7218};
	xor.b64  	%rd8001, %rd7999, %rd8000;
	shr.u64 	%rd8002, %rd7980, 6;
	xor.b64  	%rd8003, %rd8001, %rd8002;
	add.s64 	%rd8004, %rd7998, %rd7798;
	add.s64 	%rd8005, %rd8004, %rd7915;
	add.s64 	%rd8006, %rd8005, %rd8003;
	shf.r.wrap.b32 	%r7220, %r7095, %r7094, 1;
	shf.r.wrap.b32 	%r7221, %r7094, %r7095, 1;
	mov.b64 	%rd8007, {%r7221, %r7220};
	shf.r.wrap.b32 	%r7222, %r7095, %r7094, 8;
	shf.r.wrap.b32 	%r7223, %r7094, %r7095, 8;
	mov.b64 	%rd8008, {%r7223, %r7222};
	xor.b64  	%rd8009, %rd8007, %rd8008;
	shr.u64 	%rd8010, %rd7824, 7;
	xor.b64  	%rd8011, %rd8009, %rd8010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7224,%dummy}, %rd7993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7225}, %rd7993;
	}
	shf.r.wrap.b32 	%r7226, %r7225, %r7224, 19;
	shf.r.wrap.b32 	%r7227, %r7224, %r7225, 19;
	mov.b64 	%rd8012, {%r7227, %r7226};
	shf.l.wrap.b32 	%r7228, %r7224, %r7225, 3;
	shf.l.wrap.b32 	%r7229, %r7225, %r7224, 3;
	mov.b64 	%rd8013, {%r7229, %r7228};
	xor.b64  	%rd8014, %rd8012, %rd8013;
	shr.u64 	%rd8015, %rd7993, 6;
	xor.b64  	%rd8016, %rd8014, %rd8015;
	add.s64 	%rd8017, %rd8011, %rd7811;
	add.s64 	%rd8018, %rd8017, %rd7928;
	add.s64 	%rd8019, %rd8018, %rd8016;
	shf.r.wrap.b32 	%r7230, %r7105, %r7104, 1;
	shf.r.wrap.b32 	%r7231, %r7104, %r7105, 1;
	mov.b64 	%rd8020, {%r7231, %r7230};
	shf.r.wrap.b32 	%r7232, %r7105, %r7104, 8;
	shf.r.wrap.b32 	%r7233, %r7104, %r7105, 8;
	mov.b64 	%rd8021, {%r7233, %r7232};
	xor.b64  	%rd8022, %rd8020, %rd8021;
	shr.u64 	%rd8023, %rd7837, 7;
	xor.b64  	%rd8024, %rd8022, %rd8023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7234,%dummy}, %rd8006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7235}, %rd8006;
	}
	shf.r.wrap.b32 	%r7236, %r7235, %r7234, 19;
	shf.r.wrap.b32 	%r7237, %r7234, %r7235, 19;
	mov.b64 	%rd8025, {%r7237, %r7236};
	shf.l.wrap.b32 	%r7238, %r7234, %r7235, 3;
	shf.l.wrap.b32 	%r7239, %r7235, %r7234, 3;
	mov.b64 	%rd8026, {%r7239, %r7238};
	xor.b64  	%rd8027, %rd8025, %rd8026;
	shr.u64 	%rd8028, %rd8006, 6;
	xor.b64  	%rd8029, %rd8027, %rd8028;
	add.s64 	%rd8030, %rd8024, %rd7824;
	add.s64 	%rd8031, %rd8030, %rd7941;
	add.s64 	%rd8032, %rd8031, %rd8029;
	shf.r.wrap.b32 	%r7240, %r7115, %r7114, 1;
	shf.r.wrap.b32 	%r7241, %r7114, %r7115, 1;
	mov.b64 	%rd8033, {%r7241, %r7240};
	shf.r.wrap.b32 	%r7242, %r7115, %r7114, 8;
	shf.r.wrap.b32 	%r7243, %r7114, %r7115, 8;
	mov.b64 	%rd8034, {%r7243, %r7242};
	xor.b64  	%rd8035, %rd8033, %rd8034;
	shr.u64 	%rd8036, %rd7850, 7;
	xor.b64  	%rd8037, %rd8035, %rd8036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7244,%dummy}, %rd8019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7245}, %rd8019;
	}
	shf.r.wrap.b32 	%r7246, %r7245, %r7244, 19;
	shf.r.wrap.b32 	%r7247, %r7244, %r7245, 19;
	mov.b64 	%rd8038, {%r7247, %r7246};
	shf.l.wrap.b32 	%r7248, %r7244, %r7245, 3;
	shf.l.wrap.b32 	%r7249, %r7245, %r7244, 3;
	mov.b64 	%rd8039, {%r7249, %r7248};
	xor.b64  	%rd8040, %rd8038, %rd8039;
	shr.u64 	%rd8041, %rd8019, 6;
	xor.b64  	%rd8042, %rd8040, %rd8041;
	add.s64 	%rd8043, %rd8037, %rd7837;
	add.s64 	%rd8044, %rd8043, %rd7954;
	add.s64 	%rd8045, %rd8044, %rd8042;
	shf.r.wrap.b32 	%r7250, %r7125, %r7124, 1;
	shf.r.wrap.b32 	%r7251, %r7124, %r7125, 1;
	mov.b64 	%rd8046, {%r7251, %r7250};
	shf.r.wrap.b32 	%r7252, %r7125, %r7124, 8;
	shf.r.wrap.b32 	%r7253, %r7124, %r7125, 8;
	mov.b64 	%rd8047, {%r7253, %r7252};
	xor.b64  	%rd8048, %rd8046, %rd8047;
	shr.u64 	%rd8049, %rd7863, 7;
	xor.b64  	%rd8050, %rd8048, %rd8049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7254,%dummy}, %rd8032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7255}, %rd8032;
	}
	shf.r.wrap.b32 	%r7256, %r7255, %r7254, 19;
	shf.r.wrap.b32 	%r7257, %r7254, %r7255, 19;
	mov.b64 	%rd8051, {%r7257, %r7256};
	shf.l.wrap.b32 	%r7258, %r7254, %r7255, 3;
	shf.l.wrap.b32 	%r7259, %r7255, %r7254, 3;
	mov.b64 	%rd8052, {%r7259, %r7258};
	xor.b64  	%rd8053, %rd8051, %rd8052;
	shr.u64 	%rd8054, %rd8032, 6;
	xor.b64  	%rd8055, %rd8053, %rd8054;
	add.s64 	%rd8056, %rd8050, %rd7850;
	add.s64 	%rd8057, %rd8056, %rd7967;
	add.s64 	%rd8058, %rd8057, %rd8055;
	shf.r.wrap.b32 	%r7260, %r7135, %r7134, 1;
	shf.r.wrap.b32 	%r7261, %r7134, %r7135, 1;
	mov.b64 	%rd8059, {%r7261, %r7260};
	shf.r.wrap.b32 	%r7262, %r7135, %r7134, 8;
	shf.r.wrap.b32 	%r7263, %r7134, %r7135, 8;
	mov.b64 	%rd8060, {%r7263, %r7262};
	xor.b64  	%rd8061, %rd8059, %rd8060;
	shr.u64 	%rd8062, %rd7876, 7;
	xor.b64  	%rd8063, %rd8061, %rd8062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7264,%dummy}, %rd8045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7265}, %rd8045;
	}
	shf.r.wrap.b32 	%r7266, %r7265, %r7264, 19;
	shf.r.wrap.b32 	%r7267, %r7264, %r7265, 19;
	mov.b64 	%rd8064, {%r7267, %r7266};
	shf.l.wrap.b32 	%r7268, %r7264, %r7265, 3;
	shf.l.wrap.b32 	%r7269, %r7265, %r7264, 3;
	mov.b64 	%rd8065, {%r7269, %r7268};
	xor.b64  	%rd8066, %rd8064, %rd8065;
	shr.u64 	%rd8067, %rd8045, 6;
	xor.b64  	%rd8068, %rd8066, %rd8067;
	add.s64 	%rd8069, %rd8063, %rd7863;
	add.s64 	%rd8070, %rd8069, %rd7980;
	add.s64 	%rd8071, %rd8070, %rd8068;
	shf.r.wrap.b32 	%r7270, %r7145, %r7144, 1;
	shf.r.wrap.b32 	%r7271, %r7144, %r7145, 1;
	mov.b64 	%rd8072, {%r7271, %r7270};
	shf.r.wrap.b32 	%r7272, %r7145, %r7144, 8;
	shf.r.wrap.b32 	%r7273, %r7144, %r7145, 8;
	mov.b64 	%rd8073, {%r7273, %r7272};
	xor.b64  	%rd8074, %rd8072, %rd8073;
	shr.u64 	%rd8075, %rd7889, 7;
	xor.b64  	%rd8076, %rd8074, %rd8075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7274,%dummy}, %rd8058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7275}, %rd8058;
	}
	shf.r.wrap.b32 	%r7276, %r7275, %r7274, 19;
	shf.r.wrap.b32 	%r7277, %r7274, %r7275, 19;
	mov.b64 	%rd8077, {%r7277, %r7276};
	shf.l.wrap.b32 	%r7278, %r7274, %r7275, 3;
	shf.l.wrap.b32 	%r7279, %r7275, %r7274, 3;
	mov.b64 	%rd8078, {%r7279, %r7278};
	xor.b64  	%rd8079, %rd8077, %rd8078;
	shr.u64 	%rd8080, %rd8058, 6;
	xor.b64  	%rd8081, %rd8079, %rd8080;
	add.s64 	%rd8082, %rd8076, %rd7876;
	add.s64 	%rd8083, %rd8082, %rd7993;
	add.s64 	%rd8084, %rd8083, %rd8081;
	shf.r.wrap.b32 	%r7280, %r7155, %r7154, 1;
	shf.r.wrap.b32 	%r7281, %r7154, %r7155, 1;
	mov.b64 	%rd8085, {%r7281, %r7280};
	shf.r.wrap.b32 	%r7282, %r7155, %r7154, 8;
	shf.r.wrap.b32 	%r7283, %r7154, %r7155, 8;
	mov.b64 	%rd8086, {%r7283, %r7282};
	xor.b64  	%rd8087, %rd8085, %rd8086;
	shr.u64 	%rd8088, %rd7902, 7;
	xor.b64  	%rd8089, %rd8087, %rd8088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7284,%dummy}, %rd8071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7285}, %rd8071;
	}
	shf.r.wrap.b32 	%r7286, %r7285, %r7284, 19;
	shf.r.wrap.b32 	%r7287, %r7284, %r7285, 19;
	mov.b64 	%rd8090, {%r7287, %r7286};
	shf.l.wrap.b32 	%r7288, %r7284, %r7285, 3;
	shf.l.wrap.b32 	%r7289, %r7285, %r7284, 3;
	mov.b64 	%rd8091, {%r7289, %r7288};
	xor.b64  	%rd8092, %rd8090, %rd8091;
	shr.u64 	%rd8093, %rd8071, 6;
	xor.b64  	%rd8094, %rd8092, %rd8093;
	add.s64 	%rd8095, %rd8089, %rd7889;
	add.s64 	%rd8096, %rd8095, %rd8006;
	add.s64 	%rd8097, %rd8096, %rd8094;
	shf.r.wrap.b32 	%r7290, %r7165, %r7164, 1;
	shf.r.wrap.b32 	%r7291, %r7164, %r7165, 1;
	mov.b64 	%rd8098, {%r7291, %r7290};
	shf.r.wrap.b32 	%r7292, %r7165, %r7164, 8;
	shf.r.wrap.b32 	%r7293, %r7164, %r7165, 8;
	mov.b64 	%rd8099, {%r7293, %r7292};
	xor.b64  	%rd8100, %rd8098, %rd8099;
	shr.u64 	%rd8101, %rd7915, 7;
	xor.b64  	%rd8102, %rd8100, %rd8101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7294,%dummy}, %rd8084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7295}, %rd8084;
	}
	shf.r.wrap.b32 	%r7296, %r7295, %r7294, 19;
	shf.r.wrap.b32 	%r7297, %r7294, %r7295, 19;
	mov.b64 	%rd8103, {%r7297, %r7296};
	shf.l.wrap.b32 	%r7298, %r7294, %r7295, 3;
	shf.l.wrap.b32 	%r7299, %r7295, %r7294, 3;
	mov.b64 	%rd8104, {%r7299, %r7298};
	xor.b64  	%rd8105, %rd8103, %rd8104;
	shr.u64 	%rd8106, %rd8084, 6;
	xor.b64  	%rd8107, %rd8105, %rd8106;
	add.s64 	%rd8108, %rd8102, %rd7902;
	add.s64 	%rd8109, %rd8108, %rd8019;
	add.s64 	%rd8110, %rd8109, %rd8107;
	shf.r.wrap.b32 	%r7300, %r7175, %r7174, 1;
	shf.r.wrap.b32 	%r7301, %r7174, %r7175, 1;
	mov.b64 	%rd8111, {%r7301, %r7300};
	shf.r.wrap.b32 	%r7302, %r7175, %r7174, 8;
	shf.r.wrap.b32 	%r7303, %r7174, %r7175, 8;
	mov.b64 	%rd8112, {%r7303, %r7302};
	xor.b64  	%rd8113, %rd8111, %rd8112;
	shr.u64 	%rd8114, %rd7928, 7;
	xor.b64  	%rd8115, %rd8113, %rd8114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7304,%dummy}, %rd8097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7305}, %rd8097;
	}
	shf.r.wrap.b32 	%r7306, %r7305, %r7304, 19;
	shf.r.wrap.b32 	%r7307, %r7304, %r7305, 19;
	mov.b64 	%rd8116, {%r7307, %r7306};
	shf.l.wrap.b32 	%r7308, %r7304, %r7305, 3;
	shf.l.wrap.b32 	%r7309, %r7305, %r7304, 3;
	mov.b64 	%rd8117, {%r7309, %r7308};
	xor.b64  	%rd8118, %rd8116, %rd8117;
	shr.u64 	%rd8119, %rd8097, 6;
	xor.b64  	%rd8120, %rd8118, %rd8119;
	add.s64 	%rd8121, %rd8115, %rd7915;
	add.s64 	%rd8122, %rd8121, %rd8032;
	add.s64 	%rd8123, %rd8122, %rd8120;
	shf.r.wrap.b32 	%r7310, %r7185, %r7184, 1;
	shf.r.wrap.b32 	%r7311, %r7184, %r7185, 1;
	mov.b64 	%rd8124, {%r7311, %r7310};
	shf.r.wrap.b32 	%r7312, %r7185, %r7184, 8;
	shf.r.wrap.b32 	%r7313, %r7184, %r7185, 8;
	mov.b64 	%rd8125, {%r7313, %r7312};
	xor.b64  	%rd8126, %rd8124, %rd8125;
	shr.u64 	%rd8127, %rd7941, 7;
	xor.b64  	%rd8128, %rd8126, %rd8127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7314,%dummy}, %rd8110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7315}, %rd8110;
	}
	shf.r.wrap.b32 	%r7316, %r7315, %r7314, 19;
	shf.r.wrap.b32 	%r7317, %r7314, %r7315, 19;
	mov.b64 	%rd8129, {%r7317, %r7316};
	shf.l.wrap.b32 	%r7318, %r7314, %r7315, 3;
	shf.l.wrap.b32 	%r7319, %r7315, %r7314, 3;
	mov.b64 	%rd8130, {%r7319, %r7318};
	xor.b64  	%rd8131, %rd8129, %rd8130;
	shr.u64 	%rd8132, %rd8110, 6;
	xor.b64  	%rd8133, %rd8131, %rd8132;
	add.s64 	%rd8134, %rd8128, %rd7928;
	add.s64 	%rd8135, %rd8134, %rd8045;
	add.s64 	%rd8136, %rd8135, %rd8133;
	shf.r.wrap.b32 	%r7320, %r7195, %r7194, 1;
	shf.r.wrap.b32 	%r7321, %r7194, %r7195, 1;
	mov.b64 	%rd8137, {%r7321, %r7320};
	shf.r.wrap.b32 	%r7322, %r7195, %r7194, 8;
	shf.r.wrap.b32 	%r7323, %r7194, %r7195, 8;
	mov.b64 	%rd8138, {%r7323, %r7322};
	xor.b64  	%rd8139, %rd8137, %rd8138;
	shr.u64 	%rd8140, %rd7954, 7;
	xor.b64  	%rd8141, %rd8139, %rd8140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7324,%dummy}, %rd8123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7325}, %rd8123;
	}
	shf.r.wrap.b32 	%r7326, %r7325, %r7324, 19;
	shf.r.wrap.b32 	%r7327, %r7324, %r7325, 19;
	mov.b64 	%rd8142, {%r7327, %r7326};
	shf.l.wrap.b32 	%r7328, %r7324, %r7325, 3;
	shf.l.wrap.b32 	%r7329, %r7325, %r7324, 3;
	mov.b64 	%rd8143, {%r7329, %r7328};
	xor.b64  	%rd8144, %rd8142, %rd8143;
	shr.u64 	%rd8145, %rd8123, 6;
	xor.b64  	%rd8146, %rd8144, %rd8145;
	add.s64 	%rd8147, %rd8141, %rd7941;
	add.s64 	%rd8148, %rd8147, %rd8058;
	add.s64 	%rd8149, %rd8148, %rd8146;
	shf.r.wrap.b32 	%r7330, %r7205, %r7204, 1;
	shf.r.wrap.b32 	%r7331, %r7204, %r7205, 1;
	mov.b64 	%rd8150, {%r7331, %r7330};
	shf.r.wrap.b32 	%r7332, %r7205, %r7204, 8;
	shf.r.wrap.b32 	%r7333, %r7204, %r7205, 8;
	mov.b64 	%rd8151, {%r7333, %r7332};
	xor.b64  	%rd8152, %rd8150, %rd8151;
	shr.u64 	%rd8153, %rd7967, 7;
	xor.b64  	%rd8154, %rd8152, %rd8153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7334,%dummy}, %rd8136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7335}, %rd8136;
	}
	shf.r.wrap.b32 	%r7336, %r7335, %r7334, 19;
	shf.r.wrap.b32 	%r7337, %r7334, %r7335, 19;
	mov.b64 	%rd8155, {%r7337, %r7336};
	shf.l.wrap.b32 	%r7338, %r7334, %r7335, 3;
	shf.l.wrap.b32 	%r7339, %r7335, %r7334, 3;
	mov.b64 	%rd8156, {%r7339, %r7338};
	xor.b64  	%rd8157, %rd8155, %rd8156;
	shr.u64 	%rd8158, %rd8136, 6;
	xor.b64  	%rd8159, %rd8157, %rd8158;
	add.s64 	%rd8160, %rd8154, %rd7954;
	add.s64 	%rd8161, %rd8160, %rd8071;
	add.s64 	%rd8162, %rd8161, %rd8159;
	shf.r.wrap.b32 	%r7340, %r7215, %r7214, 1;
	shf.r.wrap.b32 	%r7341, %r7214, %r7215, 1;
	mov.b64 	%rd8163, {%r7341, %r7340};
	shf.r.wrap.b32 	%r7342, %r7215, %r7214, 8;
	shf.r.wrap.b32 	%r7343, %r7214, %r7215, 8;
	mov.b64 	%rd8164, {%r7343, %r7342};
	xor.b64  	%rd8165, %rd8163, %rd8164;
	shr.u64 	%rd8166, %rd7980, 7;
	xor.b64  	%rd8167, %rd8165, %rd8166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7344,%dummy}, %rd8149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7345}, %rd8149;
	}
	shf.r.wrap.b32 	%r7346, %r7345, %r7344, 19;
	shf.r.wrap.b32 	%r7347, %r7344, %r7345, 19;
	mov.b64 	%rd8168, {%r7347, %r7346};
	shf.l.wrap.b32 	%r7348, %r7344, %r7345, 3;
	shf.l.wrap.b32 	%r7349, %r7345, %r7344, 3;
	mov.b64 	%rd8169, {%r7349, %r7348};
	xor.b64  	%rd8170, %rd8168, %rd8169;
	shr.u64 	%rd8171, %rd8149, 6;
	xor.b64  	%rd8172, %rd8170, %rd8171;
	add.s64 	%rd8173, %rd8167, %rd7967;
	add.s64 	%rd8174, %rd8173, %rd8084;
	add.s64 	%rd8175, %rd8174, %rd8172;
	shf.r.wrap.b32 	%r7350, %r7225, %r7224, 1;
	shf.r.wrap.b32 	%r7351, %r7224, %r7225, 1;
	mov.b64 	%rd8176, {%r7351, %r7350};
	shf.r.wrap.b32 	%r7352, %r7225, %r7224, 8;
	shf.r.wrap.b32 	%r7353, %r7224, %r7225, 8;
	mov.b64 	%rd8177, {%r7353, %r7352};
	xor.b64  	%rd8178, %rd8176, %rd8177;
	shr.u64 	%rd8179, %rd7993, 7;
	xor.b64  	%rd8180, %rd8178, %rd8179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7354,%dummy}, %rd8162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7355}, %rd8162;
	}
	shf.r.wrap.b32 	%r7356, %r7355, %r7354, 19;
	shf.r.wrap.b32 	%r7357, %r7354, %r7355, 19;
	mov.b64 	%rd8181, {%r7357, %r7356};
	shf.l.wrap.b32 	%r7358, %r7354, %r7355, 3;
	shf.l.wrap.b32 	%r7359, %r7355, %r7354, 3;
	mov.b64 	%rd8182, {%r7359, %r7358};
	xor.b64  	%rd8183, %rd8181, %rd8182;
	shr.u64 	%rd8184, %rd8162, 6;
	xor.b64  	%rd8185, %rd8183, %rd8184;
	add.s64 	%rd8186, %rd8180, %rd7980;
	add.s64 	%rd8187, %rd8186, %rd8097;
	add.s64 	%rd8188, %rd8187, %rd8185;
	shf.r.wrap.b32 	%r7360, %r7235, %r7234, 1;
	shf.r.wrap.b32 	%r7361, %r7234, %r7235, 1;
	mov.b64 	%rd8189, {%r7361, %r7360};
	shf.r.wrap.b32 	%r7362, %r7235, %r7234, 8;
	shf.r.wrap.b32 	%r7363, %r7234, %r7235, 8;
	mov.b64 	%rd8190, {%r7363, %r7362};
	xor.b64  	%rd8191, %rd8189, %rd8190;
	shr.u64 	%rd8192, %rd8006, 7;
	xor.b64  	%rd8193, %rd8191, %rd8192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7364,%dummy}, %rd8175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7365}, %rd8175;
	}
	shf.r.wrap.b32 	%r7366, %r7365, %r7364, 19;
	shf.r.wrap.b32 	%r7367, %r7364, %r7365, 19;
	mov.b64 	%rd8194, {%r7367, %r7366};
	shf.l.wrap.b32 	%r7368, %r7364, %r7365, 3;
	shf.l.wrap.b32 	%r7369, %r7365, %r7364, 3;
	mov.b64 	%rd8195, {%r7369, %r7368};
	xor.b64  	%rd8196, %rd8194, %rd8195;
	shr.u64 	%rd8197, %rd8175, 6;
	xor.b64  	%rd8198, %rd8196, %rd8197;
	add.s64 	%rd8199, %rd8193, %rd7993;
	add.s64 	%rd8200, %rd8199, %rd8110;
	add.s64 	%rd8201, %rd8200, %rd8198;
	shf.r.wrap.b32 	%r7370, %r7245, %r7244, 1;
	shf.r.wrap.b32 	%r7371, %r7244, %r7245, 1;
	mov.b64 	%rd8202, {%r7371, %r7370};
	shf.r.wrap.b32 	%r7372, %r7245, %r7244, 8;
	shf.r.wrap.b32 	%r7373, %r7244, %r7245, 8;
	mov.b64 	%rd8203, {%r7373, %r7372};
	xor.b64  	%rd8204, %rd8202, %rd8203;
	shr.u64 	%rd8205, %rd8019, 7;
	xor.b64  	%rd8206, %rd8204, %rd8205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7374,%dummy}, %rd8188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7375}, %rd8188;
	}
	shf.r.wrap.b32 	%r7376, %r7375, %r7374, 19;
	shf.r.wrap.b32 	%r7377, %r7374, %r7375, 19;
	mov.b64 	%rd8207, {%r7377, %r7376};
	shf.l.wrap.b32 	%r7378, %r7374, %r7375, 3;
	shf.l.wrap.b32 	%r7379, %r7375, %r7374, 3;
	mov.b64 	%rd8208, {%r7379, %r7378};
	xor.b64  	%rd8209, %rd8207, %rd8208;
	shr.u64 	%rd8210, %rd8188, 6;
	xor.b64  	%rd8211, %rd8209, %rd8210;
	add.s64 	%rd8212, %rd8206, %rd8006;
	add.s64 	%rd8213, %rd8212, %rd8123;
	add.s64 	%rd8214, %rd8213, %rd8211;
	shf.r.wrap.b32 	%r7380, %r7255, %r7254, 1;
	shf.r.wrap.b32 	%r7381, %r7254, %r7255, 1;
	mov.b64 	%rd8215, {%r7381, %r7380};
	shf.r.wrap.b32 	%r7382, %r7255, %r7254, 8;
	shf.r.wrap.b32 	%r7383, %r7254, %r7255, 8;
	mov.b64 	%rd8216, {%r7383, %r7382};
	xor.b64  	%rd8217, %rd8215, %rd8216;
	shr.u64 	%rd8218, %rd8032, 7;
	xor.b64  	%rd8219, %rd8217, %rd8218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7384,%dummy}, %rd8201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7385}, %rd8201;
	}
	shf.r.wrap.b32 	%r7386, %r7385, %r7384, 19;
	shf.r.wrap.b32 	%r7387, %r7384, %r7385, 19;
	mov.b64 	%rd8220, {%r7387, %r7386};
	shf.l.wrap.b32 	%r7388, %r7384, %r7385, 3;
	shf.l.wrap.b32 	%r7389, %r7385, %r7384, 3;
	mov.b64 	%rd8221, {%r7389, %r7388};
	xor.b64  	%rd8222, %rd8220, %rd8221;
	shr.u64 	%rd8223, %rd8201, 6;
	xor.b64  	%rd8224, %rd8222, %rd8223;
	add.s64 	%rd8225, %rd8219, %rd8019;
	add.s64 	%rd8226, %rd8225, %rd8136;
	add.s64 	%rd8227, %rd8226, %rd8224;
	shf.r.wrap.b32 	%r7390, %r7265, %r7264, 1;
	shf.r.wrap.b32 	%r7391, %r7264, %r7265, 1;
	mov.b64 	%rd8228, {%r7391, %r7390};
	shf.r.wrap.b32 	%r7392, %r7265, %r7264, 8;
	shf.r.wrap.b32 	%r7393, %r7264, %r7265, 8;
	mov.b64 	%rd8229, {%r7393, %r7392};
	xor.b64  	%rd8230, %rd8228, %rd8229;
	shr.u64 	%rd8231, %rd8045, 7;
	xor.b64  	%rd8232, %rd8230, %rd8231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7394,%dummy}, %rd8214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7395}, %rd8214;
	}
	shf.r.wrap.b32 	%r7396, %r7395, %r7394, 19;
	shf.r.wrap.b32 	%r7397, %r7394, %r7395, 19;
	mov.b64 	%rd8233, {%r7397, %r7396};
	shf.l.wrap.b32 	%r7398, %r7394, %r7395, 3;
	shf.l.wrap.b32 	%r7399, %r7395, %r7394, 3;
	mov.b64 	%rd8234, {%r7399, %r7398};
	xor.b64  	%rd8235, %rd8233, %rd8234;
	shr.u64 	%rd8236, %rd8214, 6;
	xor.b64  	%rd8237, %rd8235, %rd8236;
	add.s64 	%rd8238, %rd8232, %rd8032;
	add.s64 	%rd8239, %rd8238, %rd8149;
	add.s64 	%rd8240, %rd8239, %rd8237;
	shf.r.wrap.b32 	%r7400, %r7275, %r7274, 1;
	shf.r.wrap.b32 	%r7401, %r7274, %r7275, 1;
	mov.b64 	%rd8241, {%r7401, %r7400};
	shf.r.wrap.b32 	%r7402, %r7275, %r7274, 8;
	shf.r.wrap.b32 	%r7403, %r7274, %r7275, 8;
	mov.b64 	%rd8242, {%r7403, %r7402};
	xor.b64  	%rd8243, %rd8241, %rd8242;
	shr.u64 	%rd8244, %rd8058, 7;
	xor.b64  	%rd8245, %rd8243, %rd8244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7404,%dummy}, %rd8227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7405}, %rd8227;
	}
	shf.r.wrap.b32 	%r7406, %r7405, %r7404, 19;
	shf.r.wrap.b32 	%r7407, %r7404, %r7405, 19;
	mov.b64 	%rd8246, {%r7407, %r7406};
	shf.l.wrap.b32 	%r7408, %r7404, %r7405, 3;
	shf.l.wrap.b32 	%r7409, %r7405, %r7404, 3;
	mov.b64 	%rd8247, {%r7409, %r7408};
	xor.b64  	%rd8248, %rd8246, %rd8247;
	shr.u64 	%rd8249, %rd8227, 6;
	xor.b64  	%rd8250, %rd8248, %rd8249;
	add.s64 	%rd8251, %rd8245, %rd8045;
	add.s64 	%rd8252, %rd8251, %rd8162;
	add.s64 	%rd8253, %rd8252, %rd8250;
	shf.r.wrap.b32 	%r7410, %r7285, %r7284, 1;
	shf.r.wrap.b32 	%r7411, %r7284, %r7285, 1;
	mov.b64 	%rd8254, {%r7411, %r7410};
	shf.r.wrap.b32 	%r7412, %r7285, %r7284, 8;
	shf.r.wrap.b32 	%r7413, %r7284, %r7285, 8;
	mov.b64 	%rd8255, {%r7413, %r7412};
	xor.b64  	%rd8256, %rd8254, %rd8255;
	shr.u64 	%rd8257, %rd8071, 7;
	xor.b64  	%rd8258, %rd8256, %rd8257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7414,%dummy}, %rd8240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7415}, %rd8240;
	}
	shf.r.wrap.b32 	%r7416, %r7415, %r7414, 19;
	shf.r.wrap.b32 	%r7417, %r7414, %r7415, 19;
	mov.b64 	%rd8259, {%r7417, %r7416};
	shf.l.wrap.b32 	%r7418, %r7414, %r7415, 3;
	shf.l.wrap.b32 	%r7419, %r7415, %r7414, 3;
	mov.b64 	%rd8260, {%r7419, %r7418};
	xor.b64  	%rd8261, %rd8259, %rd8260;
	shr.u64 	%rd8262, %rd8240, 6;
	xor.b64  	%rd8263, %rd8261, %rd8262;
	add.s64 	%rd8264, %rd8258, %rd8058;
	add.s64 	%rd8265, %rd8264, %rd8175;
	add.s64 	%rd8266, %rd8265, %rd8263;
	shf.r.wrap.b32 	%r7420, %r7295, %r7294, 1;
	shf.r.wrap.b32 	%r7421, %r7294, %r7295, 1;
	mov.b64 	%rd8267, {%r7421, %r7420};
	shf.r.wrap.b32 	%r7422, %r7295, %r7294, 8;
	shf.r.wrap.b32 	%r7423, %r7294, %r7295, 8;
	mov.b64 	%rd8268, {%r7423, %r7422};
	xor.b64  	%rd8269, %rd8267, %rd8268;
	shr.u64 	%rd8270, %rd8084, 7;
	xor.b64  	%rd8271, %rd8269, %rd8270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7424,%dummy}, %rd8253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7425}, %rd8253;
	}
	shf.r.wrap.b32 	%r7426, %r7425, %r7424, 19;
	shf.r.wrap.b32 	%r7427, %r7424, %r7425, 19;
	mov.b64 	%rd8272, {%r7427, %r7426};
	shf.l.wrap.b32 	%r7428, %r7424, %r7425, 3;
	shf.l.wrap.b32 	%r7429, %r7425, %r7424, 3;
	mov.b64 	%rd8273, {%r7429, %r7428};
	xor.b64  	%rd8274, %rd8272, %rd8273;
	shr.u64 	%rd8275, %rd8253, 6;
	xor.b64  	%rd8276, %rd8274, %rd8275;
	add.s64 	%rd8277, %rd8271, %rd8071;
	add.s64 	%rd8278, %rd8277, %rd8188;
	add.s64 	%rd8279, %rd8278, %rd8276;
	shf.r.wrap.b32 	%r7430, %r7305, %r7304, 1;
	shf.r.wrap.b32 	%r7431, %r7304, %r7305, 1;
	mov.b64 	%rd8280, {%r7431, %r7430};
	shf.r.wrap.b32 	%r7432, %r7305, %r7304, 8;
	shf.r.wrap.b32 	%r7433, %r7304, %r7305, 8;
	mov.b64 	%rd8281, {%r7433, %r7432};
	xor.b64  	%rd8282, %rd8280, %rd8281;
	shr.u64 	%rd8283, %rd8097, 7;
	xor.b64  	%rd8284, %rd8282, %rd8283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7434,%dummy}, %rd8266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7435}, %rd8266;
	}
	shf.r.wrap.b32 	%r7436, %r7435, %r7434, 19;
	shf.r.wrap.b32 	%r7437, %r7434, %r7435, 19;
	mov.b64 	%rd8285, {%r7437, %r7436};
	shf.l.wrap.b32 	%r7438, %r7434, %r7435, 3;
	shf.l.wrap.b32 	%r7439, %r7435, %r7434, 3;
	mov.b64 	%rd8286, {%r7439, %r7438};
	xor.b64  	%rd8287, %rd8285, %rd8286;
	shr.u64 	%rd8288, %rd8266, 6;
	xor.b64  	%rd8289, %rd8287, %rd8288;
	add.s64 	%rd8290, %rd8284, %rd8084;
	add.s64 	%rd8291, %rd8290, %rd8201;
	add.s64 	%rd8292, %rd8291, %rd8289;
	shf.r.wrap.b32 	%r7440, %r7315, %r7314, 1;
	shf.r.wrap.b32 	%r7441, %r7314, %r7315, 1;
	mov.b64 	%rd8293, {%r7441, %r7440};
	shf.r.wrap.b32 	%r7442, %r7315, %r7314, 8;
	shf.r.wrap.b32 	%r7443, %r7314, %r7315, 8;
	mov.b64 	%rd8294, {%r7443, %r7442};
	xor.b64  	%rd8295, %rd8293, %rd8294;
	shr.u64 	%rd8296, %rd8110, 7;
	xor.b64  	%rd8297, %rd8295, %rd8296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7444,%dummy}, %rd8279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7445}, %rd8279;
	}
	shf.r.wrap.b32 	%r7446, %r7445, %r7444, 19;
	shf.r.wrap.b32 	%r7447, %r7444, %r7445, 19;
	mov.b64 	%rd8298, {%r7447, %r7446};
	shf.l.wrap.b32 	%r7448, %r7444, %r7445, 3;
	shf.l.wrap.b32 	%r7449, %r7445, %r7444, 3;
	mov.b64 	%rd8299, {%r7449, %r7448};
	xor.b64  	%rd8300, %rd8298, %rd8299;
	shr.u64 	%rd8301, %rd8279, 6;
	xor.b64  	%rd8302, %rd8300, %rd8301;
	add.s64 	%rd8303, %rd8297, %rd8097;
	add.s64 	%rd8304, %rd8303, %rd8214;
	add.s64 	%rd8305, %rd8304, %rd8302;
	shf.r.wrap.b32 	%r7450, %r7325, %r7324, 1;
	shf.r.wrap.b32 	%r7451, %r7324, %r7325, 1;
	mov.b64 	%rd8306, {%r7451, %r7450};
	shf.r.wrap.b32 	%r7452, %r7325, %r7324, 8;
	shf.r.wrap.b32 	%r7453, %r7324, %r7325, 8;
	mov.b64 	%rd8307, {%r7453, %r7452};
	xor.b64  	%rd8308, %rd8306, %rd8307;
	shr.u64 	%rd8309, %rd8123, 7;
	xor.b64  	%rd8310, %rd8308, %rd8309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7454,%dummy}, %rd8292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7455}, %rd8292;
	}
	shf.r.wrap.b32 	%r7456, %r7455, %r7454, 19;
	shf.r.wrap.b32 	%r7457, %r7454, %r7455, 19;
	mov.b64 	%rd8311, {%r7457, %r7456};
	shf.l.wrap.b32 	%r7458, %r7454, %r7455, 3;
	shf.l.wrap.b32 	%r7459, %r7455, %r7454, 3;
	mov.b64 	%rd8312, {%r7459, %r7458};
	xor.b64  	%rd8313, %rd8311, %rd8312;
	shr.u64 	%rd8314, %rd8292, 6;
	xor.b64  	%rd8315, %rd8313, %rd8314;
	add.s64 	%rd8316, %rd8310, %rd8110;
	add.s64 	%rd8317, %rd8316, %rd8227;
	add.s64 	%rd8318, %rd8317, %rd8315;
	shf.r.wrap.b32 	%r7460, %r7335, %r7334, 1;
	shf.r.wrap.b32 	%r7461, %r7334, %r7335, 1;
	mov.b64 	%rd8319, {%r7461, %r7460};
	shf.r.wrap.b32 	%r7462, %r7335, %r7334, 8;
	shf.r.wrap.b32 	%r7463, %r7334, %r7335, 8;
	mov.b64 	%rd8320, {%r7463, %r7462};
	xor.b64  	%rd8321, %rd8319, %rd8320;
	shr.u64 	%rd8322, %rd8136, 7;
	xor.b64  	%rd8323, %rd8321, %rd8322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7464,%dummy}, %rd8305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7465}, %rd8305;
	}
	shf.r.wrap.b32 	%r7466, %r7465, %r7464, 19;
	shf.r.wrap.b32 	%r7467, %r7464, %r7465, 19;
	mov.b64 	%rd8324, {%r7467, %r7466};
	shf.l.wrap.b32 	%r7468, %r7464, %r7465, 3;
	shf.l.wrap.b32 	%r7469, %r7465, %r7464, 3;
	mov.b64 	%rd8325, {%r7469, %r7468};
	xor.b64  	%rd8326, %rd8324, %rd8325;
	shr.u64 	%rd8327, %rd8305, 6;
	xor.b64  	%rd8328, %rd8326, %rd8327;
	add.s64 	%rd8329, %rd8323, %rd8123;
	add.s64 	%rd8330, %rd8329, %rd8240;
	add.s64 	%rd8331, %rd8330, %rd8328;
	shf.r.wrap.b32 	%r7470, %r7345, %r7344, 1;
	shf.r.wrap.b32 	%r7471, %r7344, %r7345, 1;
	mov.b64 	%rd8332, {%r7471, %r7470};
	shf.r.wrap.b32 	%r7472, %r7345, %r7344, 8;
	shf.r.wrap.b32 	%r7473, %r7344, %r7345, 8;
	mov.b64 	%rd8333, {%r7473, %r7472};
	xor.b64  	%rd8334, %rd8332, %rd8333;
	shr.u64 	%rd8335, %rd8149, 7;
	xor.b64  	%rd8336, %rd8334, %rd8335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7474,%dummy}, %rd8318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7475}, %rd8318;
	}
	shf.r.wrap.b32 	%r7476, %r7475, %r7474, 19;
	shf.r.wrap.b32 	%r7477, %r7474, %r7475, 19;
	mov.b64 	%rd8337, {%r7477, %r7476};
	shf.l.wrap.b32 	%r7478, %r7474, %r7475, 3;
	shf.l.wrap.b32 	%r7479, %r7475, %r7474, 3;
	mov.b64 	%rd8338, {%r7479, %r7478};
	xor.b64  	%rd8339, %rd8337, %rd8338;
	shr.u64 	%rd8340, %rd8318, 6;
	xor.b64  	%rd8341, %rd8339, %rd8340;
	add.s64 	%rd8342, %rd8336, %rd8136;
	add.s64 	%rd8343, %rd8342, %rd8253;
	add.s64 	%rd8344, %rd8343, %rd8341;
	shf.r.wrap.b32 	%r7480, %r7355, %r7354, 1;
	shf.r.wrap.b32 	%r7481, %r7354, %r7355, 1;
	mov.b64 	%rd8345, {%r7481, %r7480};
	shf.r.wrap.b32 	%r7482, %r7355, %r7354, 8;
	shf.r.wrap.b32 	%r7483, %r7354, %r7355, 8;
	mov.b64 	%rd8346, {%r7483, %r7482};
	xor.b64  	%rd8347, %rd8345, %rd8346;
	shr.u64 	%rd8348, %rd8162, 7;
	xor.b64  	%rd8349, %rd8347, %rd8348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7484,%dummy}, %rd8331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7485}, %rd8331;
	}
	shf.r.wrap.b32 	%r7486, %r7485, %r7484, 19;
	shf.r.wrap.b32 	%r7487, %r7484, %r7485, 19;
	mov.b64 	%rd8350, {%r7487, %r7486};
	shf.l.wrap.b32 	%r7488, %r7484, %r7485, 3;
	shf.l.wrap.b32 	%r7489, %r7485, %r7484, 3;
	mov.b64 	%rd8351, {%r7489, %r7488};
	xor.b64  	%rd8352, %rd8350, %rd8351;
	shr.u64 	%rd8353, %rd8331, 6;
	xor.b64  	%rd8354, %rd8352, %rd8353;
	add.s64 	%rd8355, %rd8349, %rd8149;
	add.s64 	%rd8356, %rd8355, %rd8266;
	add.s64 	%rd8357, %rd8356, %rd8354;
	shf.r.wrap.b32 	%r7490, %r7365, %r7364, 1;
	shf.r.wrap.b32 	%r7491, %r7364, %r7365, 1;
	mov.b64 	%rd8358, {%r7491, %r7490};
	shf.r.wrap.b32 	%r7492, %r7365, %r7364, 8;
	shf.r.wrap.b32 	%r7493, %r7364, %r7365, 8;
	mov.b64 	%rd8359, {%r7493, %r7492};
	xor.b64  	%rd8360, %rd8358, %rd8359;
	shr.u64 	%rd8361, %rd8175, 7;
	xor.b64  	%rd8362, %rd8360, %rd8361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7494,%dummy}, %rd8344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7495}, %rd8344;
	}
	shf.r.wrap.b32 	%r7496, %r7495, %r7494, 19;
	shf.r.wrap.b32 	%r7497, %r7494, %r7495, 19;
	mov.b64 	%rd8363, {%r7497, %r7496};
	shf.l.wrap.b32 	%r7498, %r7494, %r7495, 3;
	shf.l.wrap.b32 	%r7499, %r7495, %r7494, 3;
	mov.b64 	%rd8364, {%r7499, %r7498};
	xor.b64  	%rd8365, %rd8363, %rd8364;
	shr.u64 	%rd8366, %rd8344, 6;
	xor.b64  	%rd8367, %rd8365, %rd8366;
	add.s64 	%rd8368, %rd8362, %rd8162;
	add.s64 	%rd8369, %rd8368, %rd8279;
	add.s64 	%rd8370, %rd8369, %rd8367;
	shf.r.wrap.b32 	%r7500, %r7375, %r7374, 1;
	shf.r.wrap.b32 	%r7501, %r7374, %r7375, 1;
	mov.b64 	%rd8371, {%r7501, %r7500};
	shf.r.wrap.b32 	%r7502, %r7375, %r7374, 8;
	shf.r.wrap.b32 	%r7503, %r7374, %r7375, 8;
	mov.b64 	%rd8372, {%r7503, %r7502};
	xor.b64  	%rd8373, %rd8371, %rd8372;
	shr.u64 	%rd8374, %rd8188, 7;
	xor.b64  	%rd8375, %rd8373, %rd8374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7504,%dummy}, %rd8357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7505}, %rd8357;
	}
	shf.r.wrap.b32 	%r7506, %r7505, %r7504, 19;
	shf.r.wrap.b32 	%r7507, %r7504, %r7505, 19;
	mov.b64 	%rd8376, {%r7507, %r7506};
	shf.l.wrap.b32 	%r7508, %r7504, %r7505, 3;
	shf.l.wrap.b32 	%r7509, %r7505, %r7504, 3;
	mov.b64 	%rd8377, {%r7509, %r7508};
	xor.b64  	%rd8378, %rd8376, %rd8377;
	shr.u64 	%rd8379, %rd8357, 6;
	xor.b64  	%rd8380, %rd8378, %rd8379;
	add.s64 	%rd8381, %rd8375, %rd8175;
	add.s64 	%rd8382, %rd8381, %rd8292;
	add.s64 	%rd8383, %rd8382, %rd8380;
	shf.r.wrap.b32 	%r7510, %r7385, %r7384, 1;
	shf.r.wrap.b32 	%r7511, %r7384, %r7385, 1;
	mov.b64 	%rd8384, {%r7511, %r7510};
	shf.r.wrap.b32 	%r7512, %r7385, %r7384, 8;
	shf.r.wrap.b32 	%r7513, %r7384, %r7385, 8;
	mov.b64 	%rd8385, {%r7513, %r7512};
	xor.b64  	%rd8386, %rd8384, %rd8385;
	shr.u64 	%rd8387, %rd8201, 7;
	xor.b64  	%rd8388, %rd8386, %rd8387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7514,%dummy}, %rd8370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7515}, %rd8370;
	}
	shf.r.wrap.b32 	%r7516, %r7515, %r7514, 19;
	shf.r.wrap.b32 	%r7517, %r7514, %r7515, 19;
	mov.b64 	%rd8389, {%r7517, %r7516};
	shf.l.wrap.b32 	%r7518, %r7514, %r7515, 3;
	shf.l.wrap.b32 	%r7519, %r7515, %r7514, 3;
	mov.b64 	%rd8390, {%r7519, %r7518};
	xor.b64  	%rd8391, %rd8389, %rd8390;
	shr.u64 	%rd8392, %rd8370, 6;
	xor.b64  	%rd8393, %rd8391, %rd8392;
	add.s64 	%rd8394, %rd8388, %rd8188;
	add.s64 	%rd8395, %rd8394, %rd8305;
	add.s64 	%rd8396, %rd8395, %rd8393;
	shf.r.wrap.b32 	%r7520, %r7395, %r7394, 1;
	shf.r.wrap.b32 	%r7521, %r7394, %r7395, 1;
	mov.b64 	%rd8397, {%r7521, %r7520};
	shf.r.wrap.b32 	%r7522, %r7395, %r7394, 8;
	shf.r.wrap.b32 	%r7523, %r7394, %r7395, 8;
	mov.b64 	%rd8398, {%r7523, %r7522};
	xor.b64  	%rd8399, %rd8397, %rd8398;
	shr.u64 	%rd8400, %rd8214, 7;
	xor.b64  	%rd8401, %rd8399, %rd8400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7524,%dummy}, %rd8383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7525}, %rd8383;
	}
	shf.r.wrap.b32 	%r7526, %r7525, %r7524, 19;
	shf.r.wrap.b32 	%r7527, %r7524, %r7525, 19;
	mov.b64 	%rd8402, {%r7527, %r7526};
	shf.l.wrap.b32 	%r7528, %r7524, %r7525, 3;
	shf.l.wrap.b32 	%r7529, %r7525, %r7524, 3;
	mov.b64 	%rd8403, {%r7529, %r7528};
	xor.b64  	%rd8404, %rd8402, %rd8403;
	shr.u64 	%rd8405, %rd8383, 6;
	xor.b64  	%rd8406, %rd8404, %rd8405;
	add.s64 	%rd8407, %rd8401, %rd8201;
	add.s64 	%rd8408, %rd8407, %rd8318;
	add.s64 	%rd8409, %rd8408, %rd8406;
	shf.r.wrap.b32 	%r7530, %r7405, %r7404, 1;
	shf.r.wrap.b32 	%r7531, %r7404, %r7405, 1;
	mov.b64 	%rd8410, {%r7531, %r7530};
	shf.r.wrap.b32 	%r7532, %r7405, %r7404, 8;
	shf.r.wrap.b32 	%r7533, %r7404, %r7405, 8;
	mov.b64 	%rd8411, {%r7533, %r7532};
	xor.b64  	%rd8412, %rd8410, %rd8411;
	shr.u64 	%rd8413, %rd8227, 7;
	xor.b64  	%rd8414, %rd8412, %rd8413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7534,%dummy}, %rd8396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7535}, %rd8396;
	}
	shf.r.wrap.b32 	%r7536, %r7535, %r7534, 19;
	shf.r.wrap.b32 	%r7537, %r7534, %r7535, 19;
	mov.b64 	%rd8415, {%r7537, %r7536};
	shf.l.wrap.b32 	%r7538, %r7534, %r7535, 3;
	shf.l.wrap.b32 	%r7539, %r7535, %r7534, 3;
	mov.b64 	%rd8416, {%r7539, %r7538};
	xor.b64  	%rd8417, %rd8415, %rd8416;
	shr.u64 	%rd8418, %rd8396, 6;
	xor.b64  	%rd8419, %rd8417, %rd8418;
	add.s64 	%rd8420, %rd8414, %rd8214;
	add.s64 	%rd8421, %rd8420, %rd8331;
	add.s64 	%rd8422, %rd8421, %rd8419;
	shf.r.wrap.b32 	%r7540, %r7415, %r7414, 1;
	shf.r.wrap.b32 	%r7541, %r7414, %r7415, 1;
	mov.b64 	%rd8423, {%r7541, %r7540};
	shf.r.wrap.b32 	%r7542, %r7415, %r7414, 8;
	shf.r.wrap.b32 	%r7543, %r7414, %r7415, 8;
	mov.b64 	%rd8424, {%r7543, %r7542};
	xor.b64  	%rd8425, %rd8423, %rd8424;
	shr.u64 	%rd8426, %rd8240, 7;
	xor.b64  	%rd8427, %rd8425, %rd8426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7544,%dummy}, %rd8409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7545}, %rd8409;
	}
	shf.r.wrap.b32 	%r7546, %r7545, %r7544, 19;
	shf.r.wrap.b32 	%r7547, %r7544, %r7545, 19;
	mov.b64 	%rd8428, {%r7547, %r7546};
	shf.l.wrap.b32 	%r7548, %r7544, %r7545, 3;
	shf.l.wrap.b32 	%r7549, %r7545, %r7544, 3;
	mov.b64 	%rd8429, {%r7549, %r7548};
	xor.b64  	%rd8430, %rd8428, %rd8429;
	shr.u64 	%rd8431, %rd8409, 6;
	xor.b64  	%rd8432, %rd8430, %rd8431;
	add.s64 	%rd8433, %rd8427, %rd8227;
	add.s64 	%rd8434, %rd8433, %rd8344;
	add.s64 	%rd8435, %rd8434, %rd8432;
	add.s64 	%rd8436, %rd40, %rd7303;
	add.s64 	%rd8437, %rd8436, -6534734903238641935;
	add.s64 	%rd8438, %rd120, %rd8436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7550,%dummy}, %rd8437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7551}, %rd8437;
	}
	shf.r.wrap.b32 	%r7552, %r7551, %r7550, 14;
	shf.r.wrap.b32 	%r7553, %r7550, %r7551, 14;
	mov.b64 	%rd8439, {%r7553, %r7552};
	shf.r.wrap.b32 	%r7554, %r7551, %r7550, 18;
	shf.r.wrap.b32 	%r7555, %r7550, %r7551, 18;
	mov.b64 	%rd8440, {%r7555, %r7554};
	xor.b64  	%rd8441, %rd8439, %rd8440;
	shf.l.wrap.b32 	%r7556, %r7550, %r7551, 23;
	shf.l.wrap.b32 	%r7557, %r7551, %r7550, 23;
	mov.b64 	%rd8442, {%r7557, %r7556};
	xor.b64  	%rd8443, %rd8441, %rd8442;
	and.b64  	%rd8444, %rd8437, 5840696475078001361;
	mov.u64 	%rd8445, 6534734903238641934;
	sub.s64 	%rd8446, %rd8445, %rd8436;
	and.b64  	%rd8447, %rd8446, -7276294671716946913;
	or.b64  	%rd8448, %rd8444, %rd8447;
	add.s64 	%rd8449, %rd8448, %rd8443;
	add.s64 	%rd8450, %rd8449, %rd41;
	add.s64 	%rd8451, %rd8450, %rd7323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7558,%dummy}, %rd8438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7559}, %rd8438;
	}
	shf.r.wrap.b32 	%r7560, %r7559, %r7558, 28;
	shf.r.wrap.b32 	%r7561, %r7558, %r7559, 28;
	mov.b64 	%rd8452, {%r7561, %r7560};
	shf.l.wrap.b32 	%r7562, %r7558, %r7559, 30;
	shf.l.wrap.b32 	%r7563, %r7559, %r7558, 30;
	mov.b64 	%rd8453, {%r7563, %r7562};
	xor.b64  	%rd8454, %rd8452, %rd8453;
	shf.l.wrap.b32 	%r7564, %r7558, %r7559, 25;
	shf.l.wrap.b32 	%r7565, %r7559, %r7558, 25;
	mov.b64 	%rd8455, {%r7565, %r7564};
	xor.b64  	%rd8456, %rd8454, %rd8455;
	and.b64  	%rd8457, %rd8438, -3355664534840381901;
	or.b64  	%rd8458, %rd8457, 3026882967131160840;
	add.s64 	%rd8459, %rd8456, %rd8458;
	add.s64 	%rd8460, %rd8459, %rd8451;
	add.s64 	%rd8461, %rd8451, 6625583534739731862;
	add.s64 	%rd8462, %rd8460, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7566,%dummy}, %rd8461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7567}, %rd8461;
	}
	shf.r.wrap.b32 	%r7568, %r7567, %r7566, 14;
	shf.r.wrap.b32 	%r7569, %r7566, %r7567, 14;
	mov.b64 	%rd8463, {%r7569, %r7568};
	shf.r.wrap.b32 	%r7570, %r7567, %r7566, 18;
	shf.r.wrap.b32 	%r7571, %r7566, %r7567, 18;
	mov.b64 	%rd8464, {%r7571, %r7570};
	xor.b64  	%rd8465, %rd8463, %rd8464;
	shf.l.wrap.b32 	%r7572, %r7566, %r7567, 23;
	shf.l.wrap.b32 	%r7573, %r7567, %r7566, 23;
	mov.b64 	%rd8466, {%r7573, %r7572};
	xor.b64  	%rd8467, %rd8465, %rd8466;
	and.b64  	%rd8468, %rd8461, %rd8437;
	mov.u64 	%rd8469, 2597788502115043945;
	sub.s64 	%rd8470, %rd8469, %rd8451;
	and.b64  	%rd8471, %rd8470, 5840696475078001361;
	or.b64  	%rd8472, %rd8468, %rd8471;
	add.s64 	%rd8473, %rd8472, %rd8467;
	add.s64 	%rd8474, %rd8473, %rd42;
	add.s64 	%rd8475, %rd8474, %rd7343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7574,%dummy}, %rd8462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7575}, %rd8462;
	}
	shf.r.wrap.b32 	%r7576, %r7575, %r7574, 28;
	shf.r.wrap.b32 	%r7577, %r7574, %r7575, 28;
	mov.b64 	%rd8476, {%r7577, %r7576};
	shf.l.wrap.b32 	%r7578, %r7574, %r7575, 30;
	shf.l.wrap.b32 	%r7579, %r7575, %r7574, 30;
	mov.b64 	%rd8477, {%r7579, %r7578};
	xor.b64  	%rd8478, %rd8476, %rd8477;
	shf.l.wrap.b32 	%r7580, %r7574, %r7575, 25;
	shf.l.wrap.b32 	%r7581, %r7575, %r7574, 25;
	mov.b64 	%rd8479, {%r7581, %r7580};
	xor.b64  	%rd8480, %rd8478, %rd8479;
	xor.b64  	%rd8481, %rd8438, 7640891576956012808;
	and.b64  	%rd8482, %rd8462, %rd8481;
	and.b64  	%rd8483, %rd8438, 7640891576956012808;
	xor.b64  	%rd8484, %rd8482, %rd8483;
	add.s64 	%rd8485, %rd8480, %rd8484;
	add.s64 	%rd8486, %rd8485, %rd8475;
	add.s64 	%rd8487, %rd8475, 6227659224458531674;
	add.s64 	%rd8488, %rd8486, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7582,%dummy}, %rd8487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7583}, %rd8487;
	}
	shf.r.wrap.b32 	%r7584, %r7583, %r7582, 14;
	shf.r.wrap.b32 	%r7585, %r7582, %r7583, 14;
	mov.b64 	%rd8489, {%r7585, %r7584};
	shf.r.wrap.b32 	%r7586, %r7583, %r7582, 18;
	shf.r.wrap.b32 	%r7587, %r7582, %r7583, 18;
	mov.b64 	%rd8490, {%r7587, %r7586};
	xor.b64  	%rd8491, %rd8489, %rd8490;
	shf.l.wrap.b32 	%r7588, %r7582, %r7583, 23;
	shf.l.wrap.b32 	%r7589, %r7583, %r7582, 23;
	mov.b64 	%rd8492, {%r7589, %r7588};
	xor.b64  	%rd8493, %rd8491, %rd8492;
	and.b64  	%rd8494, %rd8487, %rd8461;
	mov.u64 	%rd8495, -6227659224458531675;
	sub.s64 	%rd8496, %rd8495, %rd8475;
	and.b64  	%rd8497, %rd8437, %rd8496;
	or.b64  	%rd8498, %rd8494, %rd8497;
	add.s64 	%rd8499, %rd8498, %rd8493;
	add.s64 	%rd8500, %rd8499, %rd43;
	add.s64 	%rd8501, %rd8500, %rd7363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7590,%dummy}, %rd8488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7591}, %rd8488;
	}
	shf.r.wrap.b32 	%r7592, %r7591, %r7590, 28;
	shf.r.wrap.b32 	%r7593, %r7590, %r7591, 28;
	mov.b64 	%rd8502, {%r7593, %r7592};
	shf.l.wrap.b32 	%r7594, %r7590, %r7591, 30;
	shf.l.wrap.b32 	%r7595, %r7591, %r7590, 30;
	mov.b64 	%rd8503, {%r7595, %r7594};
	xor.b64  	%rd8504, %rd8502, %rd8503;
	shf.l.wrap.b32 	%r7596, %r7590, %r7591, 25;
	shf.l.wrap.b32 	%r7597, %r7591, %r7590, 25;
	mov.b64 	%rd8505, {%r7597, %r7596};
	xor.b64  	%rd8506, %rd8504, %rd8505;
	xor.b64  	%rd8507, %rd8462, %rd8438;
	and.b64  	%rd8508, %rd8488, %rd8507;
	and.b64  	%rd8509, %rd8462, %rd8438;
	xor.b64  	%rd8510, %rd8508, %rd8509;
	add.s64 	%rd8511, %rd8506, %rd8510;
	add.s64 	%rd8512, %rd8511, %rd8501;
	add.s64 	%rd8513, %rd8501, -4965156021675537447;
	add.s64 	%rd8514, %rd8512, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7598,%dummy}, %rd8513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7599}, %rd8513;
	}
	shf.r.wrap.b32 	%r7600, %r7599, %r7598, 14;
	shf.r.wrap.b32 	%r7601, %r7598, %r7599, 14;
	mov.b64 	%rd8515, {%r7601, %r7600};
	shf.r.wrap.b32 	%r7602, %r7599, %r7598, 18;
	shf.r.wrap.b32 	%r7603, %r7598, %r7599, 18;
	mov.b64 	%rd8516, {%r7603, %r7602};
	xor.b64  	%rd8517, %rd8515, %rd8516;
	shf.l.wrap.b32 	%r7604, %r7598, %r7599, 23;
	shf.l.wrap.b32 	%r7605, %r7599, %r7598, 23;
	mov.b64 	%rd8518, {%r7605, %r7604};
	xor.b64  	%rd8519, %rd8517, %rd8518;
	and.b64  	%rd8520, %rd8513, %rd8487;
	mov.u64 	%rd8521, 4965156021675537446;
	sub.s64 	%rd8522, %rd8521, %rd8501;
	and.b64  	%rd8523, %rd8461, %rd8522;
	or.b64  	%rd8524, %rd8520, %rd8523;
	add.s64 	%rd8525, %rd8524, %rd8437;
	add.s64 	%rd8526, %rd8525, %rd8519;
	add.s64 	%rd8527, %rd8526, %rd44;
	add.s64 	%rd8528, %rd8527, %rd7383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7606,%dummy}, %rd8514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7607}, %rd8514;
	}
	shf.r.wrap.b32 	%r7608, %r7607, %r7606, 28;
	shf.r.wrap.b32 	%r7609, %r7606, %r7607, 28;
	mov.b64 	%rd8529, {%r7609, %r7608};
	shf.l.wrap.b32 	%r7610, %r7606, %r7607, 30;
	shf.l.wrap.b32 	%r7611, %r7607, %r7606, 30;
	mov.b64 	%rd8530, {%r7611, %r7610};
	xor.b64  	%rd8531, %rd8529, %rd8530;
	shf.l.wrap.b32 	%r7612, %r7606, %r7607, 25;
	shf.l.wrap.b32 	%r7613, %r7607, %r7606, 25;
	mov.b64 	%rd8532, {%r7613, %r7612};
	xor.b64  	%rd8533, %rd8531, %rd8532;
	xor.b64  	%rd8534, %rd8488, %rd8462;
	and.b64  	%rd8535, %rd8514, %rd8534;
	and.b64  	%rd8536, %rd8488, %rd8462;
	xor.b64  	%rd8537, %rd8535, %rd8536;
	add.s64 	%rd8538, %rd8533, %rd8537;
	add.s64 	%rd8539, %rd8528, %rd8438;
	add.s64 	%rd8540, %rd8538, %rd8528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7614,%dummy}, %rd8539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7615}, %rd8539;
	}
	shf.r.wrap.b32 	%r7616, %r7615, %r7614, 14;
	shf.r.wrap.b32 	%r7617, %r7614, %r7615, 14;
	mov.b64 	%rd8541, {%r7617, %r7616};
	shf.r.wrap.b32 	%r7618, %r7615, %r7614, 18;
	shf.r.wrap.b32 	%r7619, %r7614, %r7615, 18;
	mov.b64 	%rd8542, {%r7619, %r7618};
	xor.b64  	%rd8543, %rd8541, %rd8542;
	shf.l.wrap.b32 	%r7620, %r7614, %r7615, 23;
	shf.l.wrap.b32 	%r7621, %r7615, %r7614, 23;
	mov.b64 	%rd8544, {%r7621, %r7620};
	xor.b64  	%rd8545, %rd8543, %rd8544;
	and.b64  	%rd8546, %rd8539, %rd8513;
	not.b64 	%rd8547, %rd8539;
	and.b64  	%rd8548, %rd8487, %rd8547;
	or.b64  	%rd8549, %rd8546, %rd8548;
	add.s64 	%rd8550, %rd8549, %rd8461;
	add.s64 	%rd8551, %rd8550, %rd8545;
	add.s64 	%rd8552, %rd8551, %rd45;
	add.s64 	%rd8553, %rd8552, %rd7403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7622,%dummy}, %rd8540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7623}, %rd8540;
	}
	shf.r.wrap.b32 	%r7624, %r7623, %r7622, 28;
	shf.r.wrap.b32 	%r7625, %r7622, %r7623, 28;
	mov.b64 	%rd8554, {%r7625, %r7624};
	shf.l.wrap.b32 	%r7626, %r7622, %r7623, 30;
	shf.l.wrap.b32 	%r7627, %r7623, %r7622, 30;
	mov.b64 	%rd8555, {%r7627, %r7626};
	xor.b64  	%rd8556, %rd8554, %rd8555;
	shf.l.wrap.b32 	%r7628, %r7622, %r7623, 25;
	shf.l.wrap.b32 	%r7629, %r7623, %r7622, 25;
	mov.b64 	%rd8557, {%r7629, %r7628};
	xor.b64  	%rd8558, %rd8556, %rd8557;
	xor.b64  	%rd8559, %rd8514, %rd8488;
	and.b64  	%rd8560, %rd8540, %rd8559;
	and.b64  	%rd8561, %rd8514, %rd8488;
	xor.b64  	%rd8562, %rd8560, %rd8561;
	add.s64 	%rd8563, %rd8558, %rd8562;
	add.s64 	%rd8564, %rd8553, %rd8462;
	add.s64 	%rd8565, %rd8563, %rd8553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7630,%dummy}, %rd8564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7631}, %rd8564;
	}
	shf.r.wrap.b32 	%r7632, %r7631, %r7630, 14;
	shf.r.wrap.b32 	%r7633, %r7630, %r7631, 14;
	mov.b64 	%rd8566, {%r7633, %r7632};
	shf.r.wrap.b32 	%r7634, %r7631, %r7630, 18;
	shf.r.wrap.b32 	%r7635, %r7630, %r7631, 18;
	mov.b64 	%rd8567, {%r7635, %r7634};
	xor.b64  	%rd8568, %rd8566, %rd8567;
	shf.l.wrap.b32 	%r7636, %r7630, %r7631, 23;
	shf.l.wrap.b32 	%r7637, %r7631, %r7630, 23;
	mov.b64 	%rd8569, {%r7637, %r7636};
	xor.b64  	%rd8570, %rd8568, %rd8569;
	and.b64  	%rd8571, %rd8564, %rd8539;
	not.b64 	%rd8572, %rd8564;
	and.b64  	%rd8573, %rd8513, %rd8572;
	or.b64  	%rd8574, %rd8571, %rd8573;
	add.s64 	%rd8575, %rd8574, %rd8487;
	add.s64 	%rd8576, %rd8575, %rd8570;
	add.s64 	%rd8577, %rd8576, %rd46;
	add.s64 	%rd8578, %rd8577, %rd7423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7638,%dummy}, %rd8565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7639}, %rd8565;
	}
	shf.r.wrap.b32 	%r7640, %r7639, %r7638, 28;
	shf.r.wrap.b32 	%r7641, %r7638, %r7639, 28;
	mov.b64 	%rd8579, {%r7641, %r7640};
	shf.l.wrap.b32 	%r7642, %r7638, %r7639, 30;
	shf.l.wrap.b32 	%r7643, %r7639, %r7638, 30;
	mov.b64 	%rd8580, {%r7643, %r7642};
	xor.b64  	%rd8581, %rd8579, %rd8580;
	shf.l.wrap.b32 	%r7644, %r7638, %r7639, 25;
	shf.l.wrap.b32 	%r7645, %r7639, %r7638, 25;
	mov.b64 	%rd8582, {%r7645, %r7644};
	xor.b64  	%rd8583, %rd8581, %rd8582;
	xor.b64  	%rd8584, %rd8540, %rd8514;
	and.b64  	%rd8585, %rd8565, %rd8584;
	and.b64  	%rd8586, %rd8540, %rd8514;
	xor.b64  	%rd8587, %rd8585, %rd8586;
	add.s64 	%rd8588, %rd8583, %rd8587;
	add.s64 	%rd8589, %rd8578, %rd8488;
	add.s64 	%rd8590, %rd8588, %rd8578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7646,%dummy}, %rd8589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7647}, %rd8589;
	}
	shf.r.wrap.b32 	%r7648, %r7647, %r7646, 14;
	shf.r.wrap.b32 	%r7649, %r7646, %r7647, 14;
	mov.b64 	%rd8591, {%r7649, %r7648};
	shf.r.wrap.b32 	%r7650, %r7647, %r7646, 18;
	shf.r.wrap.b32 	%r7651, %r7646, %r7647, 18;
	mov.b64 	%rd8592, {%r7651, %r7650};
	xor.b64  	%rd8593, %rd8591, %rd8592;
	shf.l.wrap.b32 	%r7652, %r7646, %r7647, 23;
	shf.l.wrap.b32 	%r7653, %r7647, %r7646, 23;
	mov.b64 	%rd8594, {%r7653, %r7652};
	xor.b64  	%rd8595, %rd8593, %rd8594;
	and.b64  	%rd8596, %rd8589, %rd8564;
	not.b64 	%rd8597, %rd8589;
	and.b64  	%rd8598, %rd8539, %rd8597;
	or.b64  	%rd8599, %rd8596, %rd8598;
	add.s64 	%rd8600, %rd8599, %rd8513;
	add.s64 	%rd8601, %rd8600, %rd8595;
	add.s64 	%rd8602, %rd8601, %rd47;
	add.s64 	%rd8603, %rd8602, %rd7443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7654,%dummy}, %rd8590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7655}, %rd8590;
	}
	shf.r.wrap.b32 	%r7656, %r7655, %r7654, 28;
	shf.r.wrap.b32 	%r7657, %r7654, %r7655, 28;
	mov.b64 	%rd8604, {%r7657, %r7656};
	shf.l.wrap.b32 	%r7658, %r7654, %r7655, 30;
	shf.l.wrap.b32 	%r7659, %r7655, %r7654, 30;
	mov.b64 	%rd8605, {%r7659, %r7658};
	xor.b64  	%rd8606, %rd8604, %rd8605;
	shf.l.wrap.b32 	%r7660, %r7654, %r7655, 25;
	shf.l.wrap.b32 	%r7661, %r7655, %r7654, 25;
	mov.b64 	%rd8607, {%r7661, %r7660};
	xor.b64  	%rd8608, %rd8606, %rd8607;
	xor.b64  	%rd8609, %rd8565, %rd8540;
	and.b64  	%rd8610, %rd8590, %rd8609;
	and.b64  	%rd8611, %rd8565, %rd8540;
	xor.b64  	%rd8612, %rd8610, %rd8611;
	add.s64 	%rd8613, %rd8608, %rd8612;
	add.s64 	%rd8614, %rd8603, %rd8514;
	add.s64 	%rd8615, %rd8613, %rd8603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7662,%dummy}, %rd8614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7663}, %rd8614;
	}
	shf.r.wrap.b32 	%r7664, %r7663, %r7662, 14;
	shf.r.wrap.b32 	%r7665, %r7662, %r7663, 14;
	mov.b64 	%rd8616, {%r7665, %r7664};
	shf.r.wrap.b32 	%r7666, %r7663, %r7662, 18;
	shf.r.wrap.b32 	%r7667, %r7662, %r7663, 18;
	mov.b64 	%rd8617, {%r7667, %r7666};
	xor.b64  	%rd8618, %rd8616, %rd8617;
	shf.l.wrap.b32 	%r7668, %r7662, %r7663, 23;
	shf.l.wrap.b32 	%r7669, %r7663, %r7662, 23;
	mov.b64 	%rd8619, {%r7669, %r7668};
	xor.b64  	%rd8620, %rd8618, %rd8619;
	and.b64  	%rd8621, %rd8614, %rd8589;
	not.b64 	%rd8622, %rd8614;
	and.b64  	%rd8623, %rd8564, %rd8622;
	or.b64  	%rd8624, %rd8621, %rd8623;
	add.s64 	%rd8625, %rd8624, %rd8539;
	add.s64 	%rd8626, %rd8625, %rd8620;
	add.s64 	%rd8627, %rd8626, %rd48;
	add.s64 	%rd8628, %rd8627, %rd7463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7670,%dummy}, %rd8615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7671}, %rd8615;
	}
	shf.r.wrap.b32 	%r7672, %r7671, %r7670, 28;
	shf.r.wrap.b32 	%r7673, %r7670, %r7671, 28;
	mov.b64 	%rd8629, {%r7673, %r7672};
	shf.l.wrap.b32 	%r7674, %r7670, %r7671, 30;
	shf.l.wrap.b32 	%r7675, %r7671, %r7670, 30;
	mov.b64 	%rd8630, {%r7675, %r7674};
	xor.b64  	%rd8631, %rd8629, %rd8630;
	shf.l.wrap.b32 	%r7676, %r7670, %r7671, 25;
	shf.l.wrap.b32 	%r7677, %r7671, %r7670, 25;
	mov.b64 	%rd8632, {%r7677, %r7676};
	xor.b64  	%rd8633, %rd8631, %rd8632;
	xor.b64  	%rd8634, %rd8590, %rd8565;
	and.b64  	%rd8635, %rd8615, %rd8634;
	and.b64  	%rd8636, %rd8590, %rd8565;
	xor.b64  	%rd8637, %rd8635, %rd8636;
	add.s64 	%rd8638, %rd8633, %rd8637;
	add.s64 	%rd8639, %rd8628, %rd8540;
	add.s64 	%rd8640, %rd8638, %rd8628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7678,%dummy}, %rd8639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7679}, %rd8639;
	}
	shf.r.wrap.b32 	%r7680, %r7679, %r7678, 14;
	shf.r.wrap.b32 	%r7681, %r7678, %r7679, 14;
	mov.b64 	%rd8641, {%r7681, %r7680};
	shf.r.wrap.b32 	%r7682, %r7679, %r7678, 18;
	shf.r.wrap.b32 	%r7683, %r7678, %r7679, 18;
	mov.b64 	%rd8642, {%r7683, %r7682};
	xor.b64  	%rd8643, %rd8641, %rd8642;
	shf.l.wrap.b32 	%r7684, %r7678, %r7679, 23;
	shf.l.wrap.b32 	%r7685, %r7679, %r7678, 23;
	mov.b64 	%rd8644, {%r7685, %r7684};
	xor.b64  	%rd8645, %rd8643, %rd8644;
	and.b64  	%rd8646, %rd8639, %rd8614;
	not.b64 	%rd8647, %rd8639;
	and.b64  	%rd8648, %rd8589, %rd8647;
	or.b64  	%rd8649, %rd8646, %rd8648;
	add.s64 	%rd8650, %rd8649, %rd8564;
	add.s64 	%rd8651, %rd8650, %rd8645;
	add.s64 	%rd8652, %rd8651, %rd49;
	add.s64 	%rd8653, %rd8652, %rd7483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7686,%dummy}, %rd8640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7687}, %rd8640;
	}
	shf.r.wrap.b32 	%r7688, %r7687, %r7686, 28;
	shf.r.wrap.b32 	%r7689, %r7686, %r7687, 28;
	mov.b64 	%rd8654, {%r7689, %r7688};
	shf.l.wrap.b32 	%r7690, %r7686, %r7687, 30;
	shf.l.wrap.b32 	%r7691, %r7687, %r7686, 30;
	mov.b64 	%rd8655, {%r7691, %r7690};
	xor.b64  	%rd8656, %rd8654, %rd8655;
	shf.l.wrap.b32 	%r7692, %r7686, %r7687, 25;
	shf.l.wrap.b32 	%r7693, %r7687, %r7686, 25;
	mov.b64 	%rd8657, {%r7693, %r7692};
	xor.b64  	%rd8658, %rd8656, %rd8657;
	xor.b64  	%rd8659, %rd8615, %rd8590;
	and.b64  	%rd8660, %rd8640, %rd8659;
	and.b64  	%rd8661, %rd8615, %rd8590;
	xor.b64  	%rd8662, %rd8660, %rd8661;
	add.s64 	%rd8663, %rd8658, %rd8662;
	add.s64 	%rd8664, %rd8653, %rd8565;
	add.s64 	%rd8665, %rd8663, %rd8653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7694,%dummy}, %rd8664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7695}, %rd8664;
	}
	shf.r.wrap.b32 	%r7696, %r7695, %r7694, 14;
	shf.r.wrap.b32 	%r7697, %r7694, %r7695, 14;
	mov.b64 	%rd8666, {%r7697, %r7696};
	shf.r.wrap.b32 	%r7698, %r7695, %r7694, 18;
	shf.r.wrap.b32 	%r7699, %r7694, %r7695, 18;
	mov.b64 	%rd8667, {%r7699, %r7698};
	xor.b64  	%rd8668, %rd8666, %rd8667;
	shf.l.wrap.b32 	%r7700, %r7694, %r7695, 23;
	shf.l.wrap.b32 	%r7701, %r7695, %r7694, 23;
	mov.b64 	%rd8669, {%r7701, %r7700};
	xor.b64  	%rd8670, %rd8668, %rd8669;
	and.b64  	%rd8671, %rd8664, %rd8639;
	not.b64 	%rd8672, %rd8664;
	and.b64  	%rd8673, %rd8614, %rd8672;
	or.b64  	%rd8674, %rd8671, %rd8673;
	add.s64 	%rd8675, %rd8674, %rd8589;
	add.s64 	%rd8676, %rd8675, %rd8670;
	add.s64 	%rd8677, %rd8676, %rd50;
	add.s64 	%rd8678, %rd8677, %rd7503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7702,%dummy}, %rd8665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7703}, %rd8665;
	}
	shf.r.wrap.b32 	%r7704, %r7703, %r7702, 28;
	shf.r.wrap.b32 	%r7705, %r7702, %r7703, 28;
	mov.b64 	%rd8679, {%r7705, %r7704};
	shf.l.wrap.b32 	%r7706, %r7702, %r7703, 30;
	shf.l.wrap.b32 	%r7707, %r7703, %r7702, 30;
	mov.b64 	%rd8680, {%r7707, %r7706};
	xor.b64  	%rd8681, %rd8679, %rd8680;
	shf.l.wrap.b32 	%r7708, %r7702, %r7703, 25;
	shf.l.wrap.b32 	%r7709, %r7703, %r7702, 25;
	mov.b64 	%rd8682, {%r7709, %r7708};
	xor.b64  	%rd8683, %rd8681, %rd8682;
	xor.b64  	%rd8684, %rd8640, %rd8615;
	and.b64  	%rd8685, %rd8665, %rd8684;
	and.b64  	%rd8686, %rd8640, %rd8615;
	xor.b64  	%rd8687, %rd8685, %rd8686;
	add.s64 	%rd8688, %rd8683, %rd8687;
	add.s64 	%rd8689, %rd8678, %rd8590;
	add.s64 	%rd8690, %rd8688, %rd8678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7710,%dummy}, %rd8689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7711}, %rd8689;
	}
	shf.r.wrap.b32 	%r7712, %r7711, %r7710, 14;
	shf.r.wrap.b32 	%r7713, %r7710, %r7711, 14;
	mov.b64 	%rd8691, {%r7713, %r7712};
	shf.r.wrap.b32 	%r7714, %r7711, %r7710, 18;
	shf.r.wrap.b32 	%r7715, %r7710, %r7711, 18;
	mov.b64 	%rd8692, {%r7715, %r7714};
	xor.b64  	%rd8693, %rd8691, %rd8692;
	shf.l.wrap.b32 	%r7716, %r7710, %r7711, 23;
	shf.l.wrap.b32 	%r7717, %r7711, %r7710, 23;
	mov.b64 	%rd8694, {%r7717, %r7716};
	xor.b64  	%rd8695, %rd8693, %rd8694;
	and.b64  	%rd8696, %rd8689, %rd8664;
	not.b64 	%rd8697, %rd8689;
	and.b64  	%rd8698, %rd8639, %rd8697;
	or.b64  	%rd8699, %rd8696, %rd8698;
	add.s64 	%rd8700, %rd8699, %rd8614;
	add.s64 	%rd8701, %rd8700, %rd8695;
	add.s64 	%rd8702, %rd8701, %rd51;
	add.s64 	%rd8703, %rd8702, %rd7523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7718,%dummy}, %rd8690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7719}, %rd8690;
	}
	shf.r.wrap.b32 	%r7720, %r7719, %r7718, 28;
	shf.r.wrap.b32 	%r7721, %r7718, %r7719, 28;
	mov.b64 	%rd8704, {%r7721, %r7720};
	shf.l.wrap.b32 	%r7722, %r7718, %r7719, 30;
	shf.l.wrap.b32 	%r7723, %r7719, %r7718, 30;
	mov.b64 	%rd8705, {%r7723, %r7722};
	xor.b64  	%rd8706, %rd8704, %rd8705;
	shf.l.wrap.b32 	%r7724, %r7718, %r7719, 25;
	shf.l.wrap.b32 	%r7725, %r7719, %r7718, 25;
	mov.b64 	%rd8707, {%r7725, %r7724};
	xor.b64  	%rd8708, %rd8706, %rd8707;
	xor.b64  	%rd8709, %rd8665, %rd8640;
	and.b64  	%rd8710, %rd8690, %rd8709;
	and.b64  	%rd8711, %rd8665, %rd8640;
	xor.b64  	%rd8712, %rd8710, %rd8711;
	add.s64 	%rd8713, %rd8708, %rd8712;
	add.s64 	%rd8714, %rd8703, %rd8615;
	add.s64 	%rd8715, %rd8713, %rd8703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7726,%dummy}, %rd8714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7727}, %rd8714;
	}
	shf.r.wrap.b32 	%r7728, %r7727, %r7726, 14;
	shf.r.wrap.b32 	%r7729, %r7726, %r7727, 14;
	mov.b64 	%rd8716, {%r7729, %r7728};
	shf.r.wrap.b32 	%r7730, %r7727, %r7726, 18;
	shf.r.wrap.b32 	%r7731, %r7726, %r7727, 18;
	mov.b64 	%rd8717, {%r7731, %r7730};
	xor.b64  	%rd8718, %rd8716, %rd8717;
	shf.l.wrap.b32 	%r7732, %r7726, %r7727, 23;
	shf.l.wrap.b32 	%r7733, %r7727, %r7726, 23;
	mov.b64 	%rd8719, {%r7733, %r7732};
	xor.b64  	%rd8720, %rd8718, %rd8719;
	and.b64  	%rd8721, %rd8714, %rd8689;
	not.b64 	%rd8722, %rd8714;
	and.b64  	%rd8723, %rd8664, %rd8722;
	or.b64  	%rd8724, %rd8721, %rd8723;
	add.s64 	%rd8725, %rd8724, %rd8639;
	add.s64 	%rd8726, %rd8725, %rd8720;
	add.s64 	%rd8727, %rd8726, %rd52;
	add.s64 	%rd8728, %rd8727, %rd7543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7734,%dummy}, %rd8715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7735}, %rd8715;
	}
	shf.r.wrap.b32 	%r7736, %r7735, %r7734, 28;
	shf.r.wrap.b32 	%r7737, %r7734, %r7735, 28;
	mov.b64 	%rd8729, {%r7737, %r7736};
	shf.l.wrap.b32 	%r7738, %r7734, %r7735, 30;
	shf.l.wrap.b32 	%r7739, %r7735, %r7734, 30;
	mov.b64 	%rd8730, {%r7739, %r7738};
	xor.b64  	%rd8731, %rd8729, %rd8730;
	shf.l.wrap.b32 	%r7740, %r7734, %r7735, 25;
	shf.l.wrap.b32 	%r7741, %r7735, %r7734, 25;
	mov.b64 	%rd8732, {%r7741, %r7740};
	xor.b64  	%rd8733, %rd8731, %rd8732;
	xor.b64  	%rd8734, %rd8690, %rd8665;
	and.b64  	%rd8735, %rd8715, %rd8734;
	and.b64  	%rd8736, %rd8690, %rd8665;
	xor.b64  	%rd8737, %rd8735, %rd8736;
	add.s64 	%rd8738, %rd8733, %rd8737;
	add.s64 	%rd8739, %rd8728, %rd8640;
	add.s64 	%rd8740, %rd8738, %rd8728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7742,%dummy}, %rd8739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7743}, %rd8739;
	}
	shf.r.wrap.b32 	%r7744, %r7743, %r7742, 14;
	shf.r.wrap.b32 	%r7745, %r7742, %r7743, 14;
	mov.b64 	%rd8741, {%r7745, %r7744};
	shf.r.wrap.b32 	%r7746, %r7743, %r7742, 18;
	shf.r.wrap.b32 	%r7747, %r7742, %r7743, 18;
	mov.b64 	%rd8742, {%r7747, %r7746};
	xor.b64  	%rd8743, %rd8741, %rd8742;
	shf.l.wrap.b32 	%r7748, %r7742, %r7743, 23;
	shf.l.wrap.b32 	%r7749, %r7743, %r7742, 23;
	mov.b64 	%rd8744, {%r7749, %r7748};
	xor.b64  	%rd8745, %rd8743, %rd8744;
	and.b64  	%rd8746, %rd8739, %rd8714;
	not.b64 	%rd8747, %rd8739;
	and.b64  	%rd8748, %rd8689, %rd8747;
	or.b64  	%rd8749, %rd8746, %rd8748;
	add.s64 	%rd8750, %rd8749, %rd8664;
	add.s64 	%rd8751, %rd8750, %rd8745;
	add.s64 	%rd8752, %rd8751, %rd53;
	add.s64 	%rd8753, %rd8752, %rd7563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7750,%dummy}, %rd8740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7751}, %rd8740;
	}
	shf.r.wrap.b32 	%r7752, %r7751, %r7750, 28;
	shf.r.wrap.b32 	%r7753, %r7750, %r7751, 28;
	mov.b64 	%rd8754, {%r7753, %r7752};
	shf.l.wrap.b32 	%r7754, %r7750, %r7751, 30;
	shf.l.wrap.b32 	%r7755, %r7751, %r7750, 30;
	mov.b64 	%rd8755, {%r7755, %r7754};
	xor.b64  	%rd8756, %rd8754, %rd8755;
	shf.l.wrap.b32 	%r7756, %r7750, %r7751, 25;
	shf.l.wrap.b32 	%r7757, %r7751, %r7750, 25;
	mov.b64 	%rd8757, {%r7757, %r7756};
	xor.b64  	%rd8758, %rd8756, %rd8757;
	xor.b64  	%rd8759, %rd8715, %rd8690;
	and.b64  	%rd8760, %rd8740, %rd8759;
	and.b64  	%rd8761, %rd8715, %rd8690;
	xor.b64  	%rd8762, %rd8760, %rd8761;
	add.s64 	%rd8763, %rd8758, %rd8762;
	add.s64 	%rd8764, %rd8753, %rd8665;
	add.s64 	%rd8765, %rd8763, %rd8753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7758,%dummy}, %rd8764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7759}, %rd8764;
	}
	shf.r.wrap.b32 	%r7760, %r7759, %r7758, 14;
	shf.r.wrap.b32 	%r7761, %r7758, %r7759, 14;
	mov.b64 	%rd8766, {%r7761, %r7760};
	shf.r.wrap.b32 	%r7762, %r7759, %r7758, 18;
	shf.r.wrap.b32 	%r7763, %r7758, %r7759, 18;
	mov.b64 	%rd8767, {%r7763, %r7762};
	xor.b64  	%rd8768, %rd8766, %rd8767;
	shf.l.wrap.b32 	%r7764, %r7758, %r7759, 23;
	shf.l.wrap.b32 	%r7765, %r7759, %r7758, 23;
	mov.b64 	%rd8769, {%r7765, %r7764};
	xor.b64  	%rd8770, %rd8768, %rd8769;
	and.b64  	%rd8771, %rd8764, %rd8739;
	not.b64 	%rd8772, %rd8764;
	and.b64  	%rd8773, %rd8714, %rd8772;
	or.b64  	%rd8774, %rd8771, %rd8773;
	add.s64 	%rd8775, %rd8774, %rd8689;
	add.s64 	%rd8776, %rd8775, %rd8770;
	add.s64 	%rd8777, %rd8776, %rd54;
	add.s64 	%rd8778, %rd8777, %rd7583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7766,%dummy}, %rd8765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7767}, %rd8765;
	}
	shf.r.wrap.b32 	%r7768, %r7767, %r7766, 28;
	shf.r.wrap.b32 	%r7769, %r7766, %r7767, 28;
	mov.b64 	%rd8779, {%r7769, %r7768};
	shf.l.wrap.b32 	%r7770, %r7766, %r7767, 30;
	shf.l.wrap.b32 	%r7771, %r7767, %r7766, 30;
	mov.b64 	%rd8780, {%r7771, %r7770};
	xor.b64  	%rd8781, %rd8779, %rd8780;
	shf.l.wrap.b32 	%r7772, %r7766, %r7767, 25;
	shf.l.wrap.b32 	%r7773, %r7767, %r7766, 25;
	mov.b64 	%rd8782, {%r7773, %r7772};
	xor.b64  	%rd8783, %rd8781, %rd8782;
	xor.b64  	%rd8784, %rd8740, %rd8715;
	and.b64  	%rd8785, %rd8765, %rd8784;
	and.b64  	%rd8786, %rd8740, %rd8715;
	xor.b64  	%rd8787, %rd8785, %rd8786;
	add.s64 	%rd8788, %rd8783, %rd8787;
	add.s64 	%rd8789, %rd8778, %rd8690;
	add.s64 	%rd8790, %rd8788, %rd8778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7774,%dummy}, %rd8789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7775}, %rd8789;
	}
	shf.r.wrap.b32 	%r7776, %r7775, %r7774, 14;
	shf.r.wrap.b32 	%r7777, %r7774, %r7775, 14;
	mov.b64 	%rd8791, {%r7777, %r7776};
	shf.r.wrap.b32 	%r7778, %r7775, %r7774, 18;
	shf.r.wrap.b32 	%r7779, %r7774, %r7775, 18;
	mov.b64 	%rd8792, {%r7779, %r7778};
	xor.b64  	%rd8793, %rd8791, %rd8792;
	shf.l.wrap.b32 	%r7780, %r7774, %r7775, 23;
	shf.l.wrap.b32 	%r7781, %r7775, %r7774, 23;
	mov.b64 	%rd8794, {%r7781, %r7780};
	xor.b64  	%rd8795, %rd8793, %rd8794;
	and.b64  	%rd8796, %rd8789, %rd8764;
	not.b64 	%rd8797, %rd8789;
	and.b64  	%rd8798, %rd8739, %rd8797;
	or.b64  	%rd8799, %rd8796, %rd8798;
	add.s64 	%rd8800, %rd8799, %rd8714;
	add.s64 	%rd8801, %rd8800, %rd8795;
	add.s64 	%rd8802, %rd8801, %rd55;
	add.s64 	%rd8803, %rd8802, %rd7603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7782,%dummy}, %rd8790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7783}, %rd8790;
	}
	shf.r.wrap.b32 	%r7784, %r7783, %r7782, 28;
	shf.r.wrap.b32 	%r7785, %r7782, %r7783, 28;
	mov.b64 	%rd8804, {%r7785, %r7784};
	shf.l.wrap.b32 	%r7786, %r7782, %r7783, 30;
	shf.l.wrap.b32 	%r7787, %r7783, %r7782, 30;
	mov.b64 	%rd8805, {%r7787, %r7786};
	xor.b64  	%rd8806, %rd8804, %rd8805;
	shf.l.wrap.b32 	%r7788, %r7782, %r7783, 25;
	shf.l.wrap.b32 	%r7789, %r7783, %r7782, 25;
	mov.b64 	%rd8807, {%r7789, %r7788};
	xor.b64  	%rd8808, %rd8806, %rd8807;
	xor.b64  	%rd8809, %rd8765, %rd8740;
	and.b64  	%rd8810, %rd8790, %rd8809;
	and.b64  	%rd8811, %rd8765, %rd8740;
	xor.b64  	%rd8812, %rd8810, %rd8811;
	add.s64 	%rd8813, %rd8808, %rd8812;
	add.s64 	%rd8814, %rd8803, %rd8715;
	add.s64 	%rd8815, %rd8813, %rd8803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7790,%dummy}, %rd8814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7791}, %rd8814;
	}
	shf.r.wrap.b32 	%r7792, %r7791, %r7790, 14;
	shf.r.wrap.b32 	%r7793, %r7790, %r7791, 14;
	mov.b64 	%rd8816, {%r7793, %r7792};
	shf.r.wrap.b32 	%r7794, %r7791, %r7790, 18;
	shf.r.wrap.b32 	%r7795, %r7790, %r7791, 18;
	mov.b64 	%rd8817, {%r7795, %r7794};
	xor.b64  	%rd8818, %rd8816, %rd8817;
	shf.l.wrap.b32 	%r7796, %r7790, %r7791, 23;
	shf.l.wrap.b32 	%r7797, %r7791, %r7790, 23;
	mov.b64 	%rd8819, {%r7797, %r7796};
	xor.b64  	%rd8820, %rd8818, %rd8819;
	and.b64  	%rd8821, %rd8814, %rd8789;
	not.b64 	%rd8822, %rd8814;
	and.b64  	%rd8823, %rd8764, %rd8822;
	or.b64  	%rd8824, %rd8821, %rd8823;
	add.s64 	%rd8825, %rd8824, %rd8739;
	add.s64 	%rd8826, %rd8825, %rd8820;
	add.s64 	%rd8827, %rd8826, %rd56;
	add.s64 	%rd8828, %rd8827, %rd7616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7798,%dummy}, %rd8815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7799}, %rd8815;
	}
	shf.r.wrap.b32 	%r7800, %r7799, %r7798, 28;
	shf.r.wrap.b32 	%r7801, %r7798, %r7799, 28;
	mov.b64 	%rd8829, {%r7801, %r7800};
	shf.l.wrap.b32 	%r7802, %r7798, %r7799, 30;
	shf.l.wrap.b32 	%r7803, %r7799, %r7798, 30;
	mov.b64 	%rd8830, {%r7803, %r7802};
	xor.b64  	%rd8831, %rd8829, %rd8830;
	shf.l.wrap.b32 	%r7804, %r7798, %r7799, 25;
	shf.l.wrap.b32 	%r7805, %r7799, %r7798, 25;
	mov.b64 	%rd8832, {%r7805, %r7804};
	xor.b64  	%rd8833, %rd8831, %rd8832;
	xor.b64  	%rd8834, %rd8790, %rd8765;
	and.b64  	%rd8835, %rd8815, %rd8834;
	and.b64  	%rd8836, %rd8790, %rd8765;
	xor.b64  	%rd8837, %rd8835, %rd8836;
	add.s64 	%rd8838, %rd8833, %rd8837;
	add.s64 	%rd8839, %rd8828, %rd8740;
	add.s64 	%rd8840, %rd8838, %rd8828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7806,%dummy}, %rd8839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7807}, %rd8839;
	}
	shf.r.wrap.b32 	%r7808, %r7807, %r7806, 14;
	shf.r.wrap.b32 	%r7809, %r7806, %r7807, 14;
	mov.b64 	%rd8841, {%r7809, %r7808};
	shf.r.wrap.b32 	%r7810, %r7807, %r7806, 18;
	shf.r.wrap.b32 	%r7811, %r7806, %r7807, 18;
	mov.b64 	%rd8842, {%r7811, %r7810};
	xor.b64  	%rd8843, %rd8841, %rd8842;
	shf.l.wrap.b32 	%r7812, %r7806, %r7807, 23;
	shf.l.wrap.b32 	%r7813, %r7807, %r7806, 23;
	mov.b64 	%rd8844, {%r7813, %r7812};
	xor.b64  	%rd8845, %rd8843, %rd8844;
	and.b64  	%rd8846, %rd8839, %rd8814;
	not.b64 	%rd8847, %rd8839;
	and.b64  	%rd8848, %rd8789, %rd8847;
	or.b64  	%rd8849, %rd8846, %rd8848;
	add.s64 	%rd8850, %rd8849, %rd8764;
	add.s64 	%rd8851, %rd8850, %rd8845;
	add.s64 	%rd8852, %rd8851, %rd57;
	add.s64 	%rd8853, %rd8852, %rd7629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7814,%dummy}, %rd8840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7815}, %rd8840;
	}
	shf.r.wrap.b32 	%r7816, %r7815, %r7814, 28;
	shf.r.wrap.b32 	%r7817, %r7814, %r7815, 28;
	mov.b64 	%rd8854, {%r7817, %r7816};
	shf.l.wrap.b32 	%r7818, %r7814, %r7815, 30;
	shf.l.wrap.b32 	%r7819, %r7815, %r7814, 30;
	mov.b64 	%rd8855, {%r7819, %r7818};
	xor.b64  	%rd8856, %rd8854, %rd8855;
	shf.l.wrap.b32 	%r7820, %r7814, %r7815, 25;
	shf.l.wrap.b32 	%r7821, %r7815, %r7814, 25;
	mov.b64 	%rd8857, {%r7821, %r7820};
	xor.b64  	%rd8858, %rd8856, %rd8857;
	xor.b64  	%rd8859, %rd8815, %rd8790;
	and.b64  	%rd8860, %rd8840, %rd8859;
	and.b64  	%rd8861, %rd8815, %rd8790;
	xor.b64  	%rd8862, %rd8860, %rd8861;
	add.s64 	%rd8863, %rd8858, %rd8862;
	add.s64 	%rd8864, %rd8853, %rd8765;
	add.s64 	%rd8865, %rd8863, %rd8853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7822,%dummy}, %rd8864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7823}, %rd8864;
	}
	shf.r.wrap.b32 	%r7824, %r7823, %r7822, 14;
	shf.r.wrap.b32 	%r7825, %r7822, %r7823, 14;
	mov.b64 	%rd8866, {%r7825, %r7824};
	shf.r.wrap.b32 	%r7826, %r7823, %r7822, 18;
	shf.r.wrap.b32 	%r7827, %r7822, %r7823, 18;
	mov.b64 	%rd8867, {%r7827, %r7826};
	xor.b64  	%rd8868, %rd8866, %rd8867;
	shf.l.wrap.b32 	%r7828, %r7822, %r7823, 23;
	shf.l.wrap.b32 	%r7829, %r7823, %r7822, 23;
	mov.b64 	%rd8869, {%r7829, %r7828};
	xor.b64  	%rd8870, %rd8868, %rd8869;
	and.b64  	%rd8871, %rd8864, %rd8839;
	not.b64 	%rd8872, %rd8864;
	and.b64  	%rd8873, %rd8814, %rd8872;
	or.b64  	%rd8874, %rd8871, %rd8873;
	add.s64 	%rd8875, %rd8874, %rd8789;
	add.s64 	%rd8876, %rd8875, %rd8870;
	add.s64 	%rd8877, %rd8876, %rd58;
	add.s64 	%rd8878, %rd8877, %rd7642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7830,%dummy}, %rd8865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7831}, %rd8865;
	}
	shf.r.wrap.b32 	%r7832, %r7831, %r7830, 28;
	shf.r.wrap.b32 	%r7833, %r7830, %r7831, 28;
	mov.b64 	%rd8879, {%r7833, %r7832};
	shf.l.wrap.b32 	%r7834, %r7830, %r7831, 30;
	shf.l.wrap.b32 	%r7835, %r7831, %r7830, 30;
	mov.b64 	%rd8880, {%r7835, %r7834};
	xor.b64  	%rd8881, %rd8879, %rd8880;
	shf.l.wrap.b32 	%r7836, %r7830, %r7831, 25;
	shf.l.wrap.b32 	%r7837, %r7831, %r7830, 25;
	mov.b64 	%rd8882, {%r7837, %r7836};
	xor.b64  	%rd8883, %rd8881, %rd8882;
	xor.b64  	%rd8884, %rd8840, %rd8815;
	and.b64  	%rd8885, %rd8865, %rd8884;
	and.b64  	%rd8886, %rd8840, %rd8815;
	xor.b64  	%rd8887, %rd8885, %rd8886;
	add.s64 	%rd8888, %rd8883, %rd8887;
	add.s64 	%rd8889, %rd8878, %rd8790;
	add.s64 	%rd8890, %rd8888, %rd8878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7838,%dummy}, %rd8889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7839}, %rd8889;
	}
	shf.r.wrap.b32 	%r7840, %r7839, %r7838, 14;
	shf.r.wrap.b32 	%r7841, %r7838, %r7839, 14;
	mov.b64 	%rd8891, {%r7841, %r7840};
	shf.r.wrap.b32 	%r7842, %r7839, %r7838, 18;
	shf.r.wrap.b32 	%r7843, %r7838, %r7839, 18;
	mov.b64 	%rd8892, {%r7843, %r7842};
	xor.b64  	%rd8893, %rd8891, %rd8892;
	shf.l.wrap.b32 	%r7844, %r7838, %r7839, 23;
	shf.l.wrap.b32 	%r7845, %r7839, %r7838, 23;
	mov.b64 	%rd8894, {%r7845, %r7844};
	xor.b64  	%rd8895, %rd8893, %rd8894;
	and.b64  	%rd8896, %rd8889, %rd8864;
	not.b64 	%rd8897, %rd8889;
	and.b64  	%rd8898, %rd8839, %rd8897;
	or.b64  	%rd8899, %rd8896, %rd8898;
	add.s64 	%rd8900, %rd8899, %rd8814;
	add.s64 	%rd8901, %rd8900, %rd8895;
	add.s64 	%rd8902, %rd8901, %rd59;
	add.s64 	%rd8903, %rd8902, %rd7655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7846,%dummy}, %rd8890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7847}, %rd8890;
	}
	shf.r.wrap.b32 	%r7848, %r7847, %r7846, 28;
	shf.r.wrap.b32 	%r7849, %r7846, %r7847, 28;
	mov.b64 	%rd8904, {%r7849, %r7848};
	shf.l.wrap.b32 	%r7850, %r7846, %r7847, 30;
	shf.l.wrap.b32 	%r7851, %r7847, %r7846, 30;
	mov.b64 	%rd8905, {%r7851, %r7850};
	xor.b64  	%rd8906, %rd8904, %rd8905;
	shf.l.wrap.b32 	%r7852, %r7846, %r7847, 25;
	shf.l.wrap.b32 	%r7853, %r7847, %r7846, 25;
	mov.b64 	%rd8907, {%r7853, %r7852};
	xor.b64  	%rd8908, %rd8906, %rd8907;
	xor.b64  	%rd8909, %rd8865, %rd8840;
	and.b64  	%rd8910, %rd8890, %rd8909;
	and.b64  	%rd8911, %rd8865, %rd8840;
	xor.b64  	%rd8912, %rd8910, %rd8911;
	add.s64 	%rd8913, %rd8908, %rd8912;
	add.s64 	%rd8914, %rd8903, %rd8815;
	add.s64 	%rd8915, %rd8913, %rd8903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7854,%dummy}, %rd8914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7855}, %rd8914;
	}
	shf.r.wrap.b32 	%r7856, %r7855, %r7854, 14;
	shf.r.wrap.b32 	%r7857, %r7854, %r7855, 14;
	mov.b64 	%rd8916, {%r7857, %r7856};
	shf.r.wrap.b32 	%r7858, %r7855, %r7854, 18;
	shf.r.wrap.b32 	%r7859, %r7854, %r7855, 18;
	mov.b64 	%rd8917, {%r7859, %r7858};
	xor.b64  	%rd8918, %rd8916, %rd8917;
	shf.l.wrap.b32 	%r7860, %r7854, %r7855, 23;
	shf.l.wrap.b32 	%r7861, %r7855, %r7854, 23;
	mov.b64 	%rd8919, {%r7861, %r7860};
	xor.b64  	%rd8920, %rd8918, %rd8919;
	and.b64  	%rd8921, %rd8914, %rd8889;
	not.b64 	%rd8922, %rd8914;
	and.b64  	%rd8923, %rd8864, %rd8922;
	or.b64  	%rd8924, %rd8921, %rd8923;
	add.s64 	%rd8925, %rd8924, %rd8839;
	add.s64 	%rd8926, %rd8925, %rd8920;
	add.s64 	%rd8927, %rd8926, %rd60;
	add.s64 	%rd8928, %rd8927, %rd7668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7862,%dummy}, %rd8915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7863}, %rd8915;
	}
	shf.r.wrap.b32 	%r7864, %r7863, %r7862, 28;
	shf.r.wrap.b32 	%r7865, %r7862, %r7863, 28;
	mov.b64 	%rd8929, {%r7865, %r7864};
	shf.l.wrap.b32 	%r7866, %r7862, %r7863, 30;
	shf.l.wrap.b32 	%r7867, %r7863, %r7862, 30;
	mov.b64 	%rd8930, {%r7867, %r7866};
	xor.b64  	%rd8931, %rd8929, %rd8930;
	shf.l.wrap.b32 	%r7868, %r7862, %r7863, 25;
	shf.l.wrap.b32 	%r7869, %r7863, %r7862, 25;
	mov.b64 	%rd8932, {%r7869, %r7868};
	xor.b64  	%rd8933, %rd8931, %rd8932;
	xor.b64  	%rd8934, %rd8890, %rd8865;
	and.b64  	%rd8935, %rd8915, %rd8934;
	and.b64  	%rd8936, %rd8890, %rd8865;
	xor.b64  	%rd8937, %rd8935, %rd8936;
	add.s64 	%rd8938, %rd8933, %rd8937;
	add.s64 	%rd8939, %rd8928, %rd8840;
	add.s64 	%rd8940, %rd8938, %rd8928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7870,%dummy}, %rd8939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7871}, %rd8939;
	}
	shf.r.wrap.b32 	%r7872, %r7871, %r7870, 14;
	shf.r.wrap.b32 	%r7873, %r7870, %r7871, 14;
	mov.b64 	%rd8941, {%r7873, %r7872};
	shf.r.wrap.b32 	%r7874, %r7871, %r7870, 18;
	shf.r.wrap.b32 	%r7875, %r7870, %r7871, 18;
	mov.b64 	%rd8942, {%r7875, %r7874};
	xor.b64  	%rd8943, %rd8941, %rd8942;
	shf.l.wrap.b32 	%r7876, %r7870, %r7871, 23;
	shf.l.wrap.b32 	%r7877, %r7871, %r7870, 23;
	mov.b64 	%rd8944, {%r7877, %r7876};
	xor.b64  	%rd8945, %rd8943, %rd8944;
	and.b64  	%rd8946, %rd8939, %rd8914;
	not.b64 	%rd8947, %rd8939;
	and.b64  	%rd8948, %rd8889, %rd8947;
	or.b64  	%rd8949, %rd8946, %rd8948;
	add.s64 	%rd8950, %rd8949, %rd8864;
	add.s64 	%rd8951, %rd8950, %rd8945;
	add.s64 	%rd8952, %rd8951, %rd61;
	add.s64 	%rd8953, %rd8952, %rd7681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7878,%dummy}, %rd8940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7879}, %rd8940;
	}
	shf.r.wrap.b32 	%r7880, %r7879, %r7878, 28;
	shf.r.wrap.b32 	%r7881, %r7878, %r7879, 28;
	mov.b64 	%rd8954, {%r7881, %r7880};
	shf.l.wrap.b32 	%r7882, %r7878, %r7879, 30;
	shf.l.wrap.b32 	%r7883, %r7879, %r7878, 30;
	mov.b64 	%rd8955, {%r7883, %r7882};
	xor.b64  	%rd8956, %rd8954, %rd8955;
	shf.l.wrap.b32 	%r7884, %r7878, %r7879, 25;
	shf.l.wrap.b32 	%r7885, %r7879, %r7878, 25;
	mov.b64 	%rd8957, {%r7885, %r7884};
	xor.b64  	%rd8958, %rd8956, %rd8957;
	xor.b64  	%rd8959, %rd8915, %rd8890;
	and.b64  	%rd8960, %rd8940, %rd8959;
	and.b64  	%rd8961, %rd8915, %rd8890;
	xor.b64  	%rd8962, %rd8960, %rd8961;
	add.s64 	%rd8963, %rd8958, %rd8962;
	add.s64 	%rd8964, %rd8953, %rd8865;
	add.s64 	%rd8965, %rd8963, %rd8953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7886,%dummy}, %rd8964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7887}, %rd8964;
	}
	shf.r.wrap.b32 	%r7888, %r7887, %r7886, 14;
	shf.r.wrap.b32 	%r7889, %r7886, %r7887, 14;
	mov.b64 	%rd8966, {%r7889, %r7888};
	shf.r.wrap.b32 	%r7890, %r7887, %r7886, 18;
	shf.r.wrap.b32 	%r7891, %r7886, %r7887, 18;
	mov.b64 	%rd8967, {%r7891, %r7890};
	xor.b64  	%rd8968, %rd8966, %rd8967;
	shf.l.wrap.b32 	%r7892, %r7886, %r7887, 23;
	shf.l.wrap.b32 	%r7893, %r7887, %r7886, 23;
	mov.b64 	%rd8969, {%r7893, %r7892};
	xor.b64  	%rd8970, %rd8968, %rd8969;
	and.b64  	%rd8971, %rd8964, %rd8939;
	not.b64 	%rd8972, %rd8964;
	and.b64  	%rd8973, %rd8914, %rd8972;
	or.b64  	%rd8974, %rd8971, %rd8973;
	add.s64 	%rd8975, %rd8974, %rd8889;
	add.s64 	%rd8976, %rd8975, %rd8970;
	add.s64 	%rd8977, %rd8976, %rd62;
	add.s64 	%rd8978, %rd8977, %rd7694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7894,%dummy}, %rd8965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7895}, %rd8965;
	}
	shf.r.wrap.b32 	%r7896, %r7895, %r7894, 28;
	shf.r.wrap.b32 	%r7897, %r7894, %r7895, 28;
	mov.b64 	%rd8979, {%r7897, %r7896};
	shf.l.wrap.b32 	%r7898, %r7894, %r7895, 30;
	shf.l.wrap.b32 	%r7899, %r7895, %r7894, 30;
	mov.b64 	%rd8980, {%r7899, %r7898};
	xor.b64  	%rd8981, %rd8979, %rd8980;
	shf.l.wrap.b32 	%r7900, %r7894, %r7895, 25;
	shf.l.wrap.b32 	%r7901, %r7895, %r7894, 25;
	mov.b64 	%rd8982, {%r7901, %r7900};
	xor.b64  	%rd8983, %rd8981, %rd8982;
	xor.b64  	%rd8984, %rd8940, %rd8915;
	and.b64  	%rd8985, %rd8965, %rd8984;
	and.b64  	%rd8986, %rd8940, %rd8915;
	xor.b64  	%rd8987, %rd8985, %rd8986;
	add.s64 	%rd8988, %rd8983, %rd8987;
	add.s64 	%rd8989, %rd8978, %rd8890;
	add.s64 	%rd8990, %rd8988, %rd8978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7902,%dummy}, %rd8989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7903}, %rd8989;
	}
	shf.r.wrap.b32 	%r7904, %r7903, %r7902, 14;
	shf.r.wrap.b32 	%r7905, %r7902, %r7903, 14;
	mov.b64 	%rd8991, {%r7905, %r7904};
	shf.r.wrap.b32 	%r7906, %r7903, %r7902, 18;
	shf.r.wrap.b32 	%r7907, %r7902, %r7903, 18;
	mov.b64 	%rd8992, {%r7907, %r7906};
	xor.b64  	%rd8993, %rd8991, %rd8992;
	shf.l.wrap.b32 	%r7908, %r7902, %r7903, 23;
	shf.l.wrap.b32 	%r7909, %r7903, %r7902, 23;
	mov.b64 	%rd8994, {%r7909, %r7908};
	xor.b64  	%rd8995, %rd8993, %rd8994;
	and.b64  	%rd8996, %rd8989, %rd8964;
	not.b64 	%rd8997, %rd8989;
	and.b64  	%rd8998, %rd8939, %rd8997;
	or.b64  	%rd8999, %rd8996, %rd8998;
	add.s64 	%rd9000, %rd8999, %rd8914;
	add.s64 	%rd9001, %rd9000, %rd8995;
	add.s64 	%rd9002, %rd9001, %rd63;
	add.s64 	%rd9003, %rd9002, %rd7707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7910,%dummy}, %rd8990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7911}, %rd8990;
	}
	shf.r.wrap.b32 	%r7912, %r7911, %r7910, 28;
	shf.r.wrap.b32 	%r7913, %r7910, %r7911, 28;
	mov.b64 	%rd9004, {%r7913, %r7912};
	shf.l.wrap.b32 	%r7914, %r7910, %r7911, 30;
	shf.l.wrap.b32 	%r7915, %r7911, %r7910, 30;
	mov.b64 	%rd9005, {%r7915, %r7914};
	xor.b64  	%rd9006, %rd9004, %rd9005;
	shf.l.wrap.b32 	%r7916, %r7910, %r7911, 25;
	shf.l.wrap.b32 	%r7917, %r7911, %r7910, 25;
	mov.b64 	%rd9007, {%r7917, %r7916};
	xor.b64  	%rd9008, %rd9006, %rd9007;
	xor.b64  	%rd9009, %rd8965, %rd8940;
	and.b64  	%rd9010, %rd8990, %rd9009;
	and.b64  	%rd9011, %rd8965, %rd8940;
	xor.b64  	%rd9012, %rd9010, %rd9011;
	add.s64 	%rd9013, %rd9008, %rd9012;
	add.s64 	%rd9014, %rd9003, %rd8915;
	add.s64 	%rd9015, %rd9013, %rd9003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7918,%dummy}, %rd9014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7919}, %rd9014;
	}
	shf.r.wrap.b32 	%r7920, %r7919, %r7918, 14;
	shf.r.wrap.b32 	%r7921, %r7918, %r7919, 14;
	mov.b64 	%rd9016, {%r7921, %r7920};
	shf.r.wrap.b32 	%r7922, %r7919, %r7918, 18;
	shf.r.wrap.b32 	%r7923, %r7918, %r7919, 18;
	mov.b64 	%rd9017, {%r7923, %r7922};
	xor.b64  	%rd9018, %rd9016, %rd9017;
	shf.l.wrap.b32 	%r7924, %r7918, %r7919, 23;
	shf.l.wrap.b32 	%r7925, %r7919, %r7918, 23;
	mov.b64 	%rd9019, {%r7925, %r7924};
	xor.b64  	%rd9020, %rd9018, %rd9019;
	and.b64  	%rd9021, %rd9014, %rd8989;
	not.b64 	%rd9022, %rd9014;
	and.b64  	%rd9023, %rd8964, %rd9022;
	or.b64  	%rd9024, %rd9021, %rd9023;
	add.s64 	%rd9025, %rd9024, %rd8939;
	add.s64 	%rd9026, %rd9025, %rd9020;
	add.s64 	%rd9027, %rd9026, %rd64;
	add.s64 	%rd9028, %rd9027, %rd7720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7926,%dummy}, %rd9015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7927}, %rd9015;
	}
	shf.r.wrap.b32 	%r7928, %r7927, %r7926, 28;
	shf.r.wrap.b32 	%r7929, %r7926, %r7927, 28;
	mov.b64 	%rd9029, {%r7929, %r7928};
	shf.l.wrap.b32 	%r7930, %r7926, %r7927, 30;
	shf.l.wrap.b32 	%r7931, %r7927, %r7926, 30;
	mov.b64 	%rd9030, {%r7931, %r7930};
	xor.b64  	%rd9031, %rd9029, %rd9030;
	shf.l.wrap.b32 	%r7932, %r7926, %r7927, 25;
	shf.l.wrap.b32 	%r7933, %r7927, %r7926, 25;
	mov.b64 	%rd9032, {%r7933, %r7932};
	xor.b64  	%rd9033, %rd9031, %rd9032;
	xor.b64  	%rd9034, %rd8990, %rd8965;
	and.b64  	%rd9035, %rd9015, %rd9034;
	and.b64  	%rd9036, %rd8990, %rd8965;
	xor.b64  	%rd9037, %rd9035, %rd9036;
	add.s64 	%rd9038, %rd9033, %rd9037;
	add.s64 	%rd9039, %rd9028, %rd8940;
	add.s64 	%rd9040, %rd9038, %rd9028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7934,%dummy}, %rd9039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7935}, %rd9039;
	}
	shf.r.wrap.b32 	%r7936, %r7935, %r7934, 14;
	shf.r.wrap.b32 	%r7937, %r7934, %r7935, 14;
	mov.b64 	%rd9041, {%r7937, %r7936};
	shf.r.wrap.b32 	%r7938, %r7935, %r7934, 18;
	shf.r.wrap.b32 	%r7939, %r7934, %r7935, 18;
	mov.b64 	%rd9042, {%r7939, %r7938};
	xor.b64  	%rd9043, %rd9041, %rd9042;
	shf.l.wrap.b32 	%r7940, %r7934, %r7935, 23;
	shf.l.wrap.b32 	%r7941, %r7935, %r7934, 23;
	mov.b64 	%rd9044, {%r7941, %r7940};
	xor.b64  	%rd9045, %rd9043, %rd9044;
	and.b64  	%rd9046, %rd9039, %rd9014;
	not.b64 	%rd9047, %rd9039;
	and.b64  	%rd9048, %rd8989, %rd9047;
	or.b64  	%rd9049, %rd9046, %rd9048;
	add.s64 	%rd9050, %rd9049, %rd8964;
	add.s64 	%rd9051, %rd9050, %rd9045;
	add.s64 	%rd9052, %rd9051, %rd65;
	add.s64 	%rd9053, %rd9052, %rd7733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7942,%dummy}, %rd9040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7943}, %rd9040;
	}
	shf.r.wrap.b32 	%r7944, %r7943, %r7942, 28;
	shf.r.wrap.b32 	%r7945, %r7942, %r7943, 28;
	mov.b64 	%rd9054, {%r7945, %r7944};
	shf.l.wrap.b32 	%r7946, %r7942, %r7943, 30;
	shf.l.wrap.b32 	%r7947, %r7943, %r7942, 30;
	mov.b64 	%rd9055, {%r7947, %r7946};
	xor.b64  	%rd9056, %rd9054, %rd9055;
	shf.l.wrap.b32 	%r7948, %r7942, %r7943, 25;
	shf.l.wrap.b32 	%r7949, %r7943, %r7942, 25;
	mov.b64 	%rd9057, {%r7949, %r7948};
	xor.b64  	%rd9058, %rd9056, %rd9057;
	xor.b64  	%rd9059, %rd9015, %rd8990;
	and.b64  	%rd9060, %rd9040, %rd9059;
	and.b64  	%rd9061, %rd9015, %rd8990;
	xor.b64  	%rd9062, %rd9060, %rd9061;
	add.s64 	%rd9063, %rd9058, %rd9062;
	add.s64 	%rd9064, %rd9053, %rd8965;
	add.s64 	%rd9065, %rd9063, %rd9053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7950,%dummy}, %rd9064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7951}, %rd9064;
	}
	shf.r.wrap.b32 	%r7952, %r7951, %r7950, 14;
	shf.r.wrap.b32 	%r7953, %r7950, %r7951, 14;
	mov.b64 	%rd9066, {%r7953, %r7952};
	shf.r.wrap.b32 	%r7954, %r7951, %r7950, 18;
	shf.r.wrap.b32 	%r7955, %r7950, %r7951, 18;
	mov.b64 	%rd9067, {%r7955, %r7954};
	xor.b64  	%rd9068, %rd9066, %rd9067;
	shf.l.wrap.b32 	%r7956, %r7950, %r7951, 23;
	shf.l.wrap.b32 	%r7957, %r7951, %r7950, 23;
	mov.b64 	%rd9069, {%r7957, %r7956};
	xor.b64  	%rd9070, %rd9068, %rd9069;
	and.b64  	%rd9071, %rd9064, %rd9039;
	not.b64 	%rd9072, %rd9064;
	and.b64  	%rd9073, %rd9014, %rd9072;
	or.b64  	%rd9074, %rd9071, %rd9073;
	add.s64 	%rd9075, %rd9074, %rd8989;
	add.s64 	%rd9076, %rd9075, %rd9070;
	add.s64 	%rd9077, %rd9076, %rd66;
	add.s64 	%rd9078, %rd9077, %rd7746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7958,%dummy}, %rd9065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7959}, %rd9065;
	}
	shf.r.wrap.b32 	%r7960, %r7959, %r7958, 28;
	shf.r.wrap.b32 	%r7961, %r7958, %r7959, 28;
	mov.b64 	%rd9079, {%r7961, %r7960};
	shf.l.wrap.b32 	%r7962, %r7958, %r7959, 30;
	shf.l.wrap.b32 	%r7963, %r7959, %r7958, 30;
	mov.b64 	%rd9080, {%r7963, %r7962};
	xor.b64  	%rd9081, %rd9079, %rd9080;
	shf.l.wrap.b32 	%r7964, %r7958, %r7959, 25;
	shf.l.wrap.b32 	%r7965, %r7959, %r7958, 25;
	mov.b64 	%rd9082, {%r7965, %r7964};
	xor.b64  	%rd9083, %rd9081, %rd9082;
	xor.b64  	%rd9084, %rd9040, %rd9015;
	and.b64  	%rd9085, %rd9065, %rd9084;
	and.b64  	%rd9086, %rd9040, %rd9015;
	xor.b64  	%rd9087, %rd9085, %rd9086;
	add.s64 	%rd9088, %rd9083, %rd9087;
	add.s64 	%rd9089, %rd9078, %rd8990;
	add.s64 	%rd9090, %rd9088, %rd9078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7966,%dummy}, %rd9089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7967}, %rd9089;
	}
	shf.r.wrap.b32 	%r7968, %r7967, %r7966, 14;
	shf.r.wrap.b32 	%r7969, %r7966, %r7967, 14;
	mov.b64 	%rd9091, {%r7969, %r7968};
	shf.r.wrap.b32 	%r7970, %r7967, %r7966, 18;
	shf.r.wrap.b32 	%r7971, %r7966, %r7967, 18;
	mov.b64 	%rd9092, {%r7971, %r7970};
	xor.b64  	%rd9093, %rd9091, %rd9092;
	shf.l.wrap.b32 	%r7972, %r7966, %r7967, 23;
	shf.l.wrap.b32 	%r7973, %r7967, %r7966, 23;
	mov.b64 	%rd9094, {%r7973, %r7972};
	xor.b64  	%rd9095, %rd9093, %rd9094;
	and.b64  	%rd9096, %rd9089, %rd9064;
	not.b64 	%rd9097, %rd9089;
	and.b64  	%rd9098, %rd9039, %rd9097;
	or.b64  	%rd9099, %rd9096, %rd9098;
	add.s64 	%rd9100, %rd9099, %rd9014;
	add.s64 	%rd9101, %rd9100, %rd9095;
	add.s64 	%rd9102, %rd9101, %rd67;
	add.s64 	%rd9103, %rd9102, %rd7759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7974,%dummy}, %rd9090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7975}, %rd9090;
	}
	shf.r.wrap.b32 	%r7976, %r7975, %r7974, 28;
	shf.r.wrap.b32 	%r7977, %r7974, %r7975, 28;
	mov.b64 	%rd9104, {%r7977, %r7976};
	shf.l.wrap.b32 	%r7978, %r7974, %r7975, 30;
	shf.l.wrap.b32 	%r7979, %r7975, %r7974, 30;
	mov.b64 	%rd9105, {%r7979, %r7978};
	xor.b64  	%rd9106, %rd9104, %rd9105;
	shf.l.wrap.b32 	%r7980, %r7974, %r7975, 25;
	shf.l.wrap.b32 	%r7981, %r7975, %r7974, 25;
	mov.b64 	%rd9107, {%r7981, %r7980};
	xor.b64  	%rd9108, %rd9106, %rd9107;
	xor.b64  	%rd9109, %rd9065, %rd9040;
	and.b64  	%rd9110, %rd9090, %rd9109;
	and.b64  	%rd9111, %rd9065, %rd9040;
	xor.b64  	%rd9112, %rd9110, %rd9111;
	add.s64 	%rd9113, %rd9108, %rd9112;
	add.s64 	%rd9114, %rd9103, %rd9015;
	add.s64 	%rd9115, %rd9113, %rd9103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7982,%dummy}, %rd9114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7983}, %rd9114;
	}
	shf.r.wrap.b32 	%r7984, %r7983, %r7982, 14;
	shf.r.wrap.b32 	%r7985, %r7982, %r7983, 14;
	mov.b64 	%rd9116, {%r7985, %r7984};
	shf.r.wrap.b32 	%r7986, %r7983, %r7982, 18;
	shf.r.wrap.b32 	%r7987, %r7982, %r7983, 18;
	mov.b64 	%rd9117, {%r7987, %r7986};
	xor.b64  	%rd9118, %rd9116, %rd9117;
	shf.l.wrap.b32 	%r7988, %r7982, %r7983, 23;
	shf.l.wrap.b32 	%r7989, %r7983, %r7982, 23;
	mov.b64 	%rd9119, {%r7989, %r7988};
	xor.b64  	%rd9120, %rd9118, %rd9119;
	and.b64  	%rd9121, %rd9114, %rd9089;
	not.b64 	%rd9122, %rd9114;
	and.b64  	%rd9123, %rd9064, %rd9122;
	or.b64  	%rd9124, %rd9121, %rd9123;
	add.s64 	%rd9125, %rd9124, %rd9039;
	add.s64 	%rd9126, %rd9125, %rd9120;
	add.s64 	%rd9127, %rd9126, %rd68;
	add.s64 	%rd9128, %rd9127, %rd7772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7990,%dummy}, %rd9115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7991}, %rd9115;
	}
	shf.r.wrap.b32 	%r7992, %r7991, %r7990, 28;
	shf.r.wrap.b32 	%r7993, %r7990, %r7991, 28;
	mov.b64 	%rd9129, {%r7993, %r7992};
	shf.l.wrap.b32 	%r7994, %r7990, %r7991, 30;
	shf.l.wrap.b32 	%r7995, %r7991, %r7990, 30;
	mov.b64 	%rd9130, {%r7995, %r7994};
	xor.b64  	%rd9131, %rd9129, %rd9130;
	shf.l.wrap.b32 	%r7996, %r7990, %r7991, 25;
	shf.l.wrap.b32 	%r7997, %r7991, %r7990, 25;
	mov.b64 	%rd9132, {%r7997, %r7996};
	xor.b64  	%rd9133, %rd9131, %rd9132;
	xor.b64  	%rd9134, %rd9090, %rd9065;
	and.b64  	%rd9135, %rd9115, %rd9134;
	and.b64  	%rd9136, %rd9090, %rd9065;
	xor.b64  	%rd9137, %rd9135, %rd9136;
	add.s64 	%rd9138, %rd9133, %rd9137;
	add.s64 	%rd9139, %rd9128, %rd9040;
	add.s64 	%rd9140, %rd9138, %rd9128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7998,%dummy}, %rd9139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7999}, %rd9139;
	}
	shf.r.wrap.b32 	%r8000, %r7999, %r7998, 14;
	shf.r.wrap.b32 	%r8001, %r7998, %r7999, 14;
	mov.b64 	%rd9141, {%r8001, %r8000};
	shf.r.wrap.b32 	%r8002, %r7999, %r7998, 18;
	shf.r.wrap.b32 	%r8003, %r7998, %r7999, 18;
	mov.b64 	%rd9142, {%r8003, %r8002};
	xor.b64  	%rd9143, %rd9141, %rd9142;
	shf.l.wrap.b32 	%r8004, %r7998, %r7999, 23;
	shf.l.wrap.b32 	%r8005, %r7999, %r7998, 23;
	mov.b64 	%rd9144, {%r8005, %r8004};
	xor.b64  	%rd9145, %rd9143, %rd9144;
	and.b64  	%rd9146, %rd9139, %rd9114;
	not.b64 	%rd9147, %rd9139;
	and.b64  	%rd9148, %rd9089, %rd9147;
	or.b64  	%rd9149, %rd9146, %rd9148;
	add.s64 	%rd9150, %rd9149, %rd9064;
	add.s64 	%rd9151, %rd9150, %rd9145;
	add.s64 	%rd9152, %rd9151, %rd69;
	add.s64 	%rd9153, %rd9152, %rd7785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8006,%dummy}, %rd9140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8007}, %rd9140;
	}
	shf.r.wrap.b32 	%r8008, %r8007, %r8006, 28;
	shf.r.wrap.b32 	%r8009, %r8006, %r8007, 28;
	mov.b64 	%rd9154, {%r8009, %r8008};
	shf.l.wrap.b32 	%r8010, %r8006, %r8007, 30;
	shf.l.wrap.b32 	%r8011, %r8007, %r8006, 30;
	mov.b64 	%rd9155, {%r8011, %r8010};
	xor.b64  	%rd9156, %rd9154, %rd9155;
	shf.l.wrap.b32 	%r8012, %r8006, %r8007, 25;
	shf.l.wrap.b32 	%r8013, %r8007, %r8006, 25;
	mov.b64 	%rd9157, {%r8013, %r8012};
	xor.b64  	%rd9158, %rd9156, %rd9157;
	xor.b64  	%rd9159, %rd9115, %rd9090;
	and.b64  	%rd9160, %rd9140, %rd9159;
	and.b64  	%rd9161, %rd9115, %rd9090;
	xor.b64  	%rd9162, %rd9160, %rd9161;
	add.s64 	%rd9163, %rd9158, %rd9162;
	add.s64 	%rd9164, %rd9153, %rd9065;
	add.s64 	%rd9165, %rd9163, %rd9153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8014,%dummy}, %rd9164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8015}, %rd9164;
	}
	shf.r.wrap.b32 	%r8016, %r8015, %r8014, 14;
	shf.r.wrap.b32 	%r8017, %r8014, %r8015, 14;
	mov.b64 	%rd9166, {%r8017, %r8016};
	shf.r.wrap.b32 	%r8018, %r8015, %r8014, 18;
	shf.r.wrap.b32 	%r8019, %r8014, %r8015, 18;
	mov.b64 	%rd9167, {%r8019, %r8018};
	xor.b64  	%rd9168, %rd9166, %rd9167;
	shf.l.wrap.b32 	%r8020, %r8014, %r8015, 23;
	shf.l.wrap.b32 	%r8021, %r8015, %r8014, 23;
	mov.b64 	%rd9169, {%r8021, %r8020};
	xor.b64  	%rd9170, %rd9168, %rd9169;
	and.b64  	%rd9171, %rd9164, %rd9139;
	not.b64 	%rd9172, %rd9164;
	and.b64  	%rd9173, %rd9114, %rd9172;
	or.b64  	%rd9174, %rd9171, %rd9173;
	add.s64 	%rd9175, %rd9174, %rd9089;
	add.s64 	%rd9176, %rd9175, %rd9170;
	add.s64 	%rd9177, %rd9176, %rd70;
	add.s64 	%rd9178, %rd9177, %rd7798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8022,%dummy}, %rd9165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8023}, %rd9165;
	}
	shf.r.wrap.b32 	%r8024, %r8023, %r8022, 28;
	shf.r.wrap.b32 	%r8025, %r8022, %r8023, 28;
	mov.b64 	%rd9179, {%r8025, %r8024};
	shf.l.wrap.b32 	%r8026, %r8022, %r8023, 30;
	shf.l.wrap.b32 	%r8027, %r8023, %r8022, 30;
	mov.b64 	%rd9180, {%r8027, %r8026};
	xor.b64  	%rd9181, %rd9179, %rd9180;
	shf.l.wrap.b32 	%r8028, %r8022, %r8023, 25;
	shf.l.wrap.b32 	%r8029, %r8023, %r8022, 25;
	mov.b64 	%rd9182, {%r8029, %r8028};
	xor.b64  	%rd9183, %rd9181, %rd9182;
	xor.b64  	%rd9184, %rd9140, %rd9115;
	and.b64  	%rd9185, %rd9165, %rd9184;
	and.b64  	%rd9186, %rd9140, %rd9115;
	xor.b64  	%rd9187, %rd9185, %rd9186;
	add.s64 	%rd9188, %rd9183, %rd9187;
	add.s64 	%rd9189, %rd9178, %rd9090;
	add.s64 	%rd9190, %rd9188, %rd9178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8030,%dummy}, %rd9189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8031}, %rd9189;
	}
	shf.r.wrap.b32 	%r8032, %r8031, %r8030, 14;
	shf.r.wrap.b32 	%r8033, %r8030, %r8031, 14;
	mov.b64 	%rd9191, {%r8033, %r8032};
	shf.r.wrap.b32 	%r8034, %r8031, %r8030, 18;
	shf.r.wrap.b32 	%r8035, %r8030, %r8031, 18;
	mov.b64 	%rd9192, {%r8035, %r8034};
	xor.b64  	%rd9193, %rd9191, %rd9192;
	shf.l.wrap.b32 	%r8036, %r8030, %r8031, 23;
	shf.l.wrap.b32 	%r8037, %r8031, %r8030, 23;
	mov.b64 	%rd9194, {%r8037, %r8036};
	xor.b64  	%rd9195, %rd9193, %rd9194;
	and.b64  	%rd9196, %rd9189, %rd9164;
	not.b64 	%rd9197, %rd9189;
	and.b64  	%rd9198, %rd9139, %rd9197;
	or.b64  	%rd9199, %rd9196, %rd9198;
	add.s64 	%rd9200, %rd9199, %rd9114;
	add.s64 	%rd9201, %rd9200, %rd9195;
	add.s64 	%rd9202, %rd9201, %rd71;
	add.s64 	%rd9203, %rd9202, %rd7811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8038,%dummy}, %rd9190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8039}, %rd9190;
	}
	shf.r.wrap.b32 	%r8040, %r8039, %r8038, 28;
	shf.r.wrap.b32 	%r8041, %r8038, %r8039, 28;
	mov.b64 	%rd9204, {%r8041, %r8040};
	shf.l.wrap.b32 	%r8042, %r8038, %r8039, 30;
	shf.l.wrap.b32 	%r8043, %r8039, %r8038, 30;
	mov.b64 	%rd9205, {%r8043, %r8042};
	xor.b64  	%rd9206, %rd9204, %rd9205;
	shf.l.wrap.b32 	%r8044, %r8038, %r8039, 25;
	shf.l.wrap.b32 	%r8045, %r8039, %r8038, 25;
	mov.b64 	%rd9207, {%r8045, %r8044};
	xor.b64  	%rd9208, %rd9206, %rd9207;
	xor.b64  	%rd9209, %rd9165, %rd9140;
	and.b64  	%rd9210, %rd9190, %rd9209;
	and.b64  	%rd9211, %rd9165, %rd9140;
	xor.b64  	%rd9212, %rd9210, %rd9211;
	add.s64 	%rd9213, %rd9208, %rd9212;
	add.s64 	%rd9214, %rd9203, %rd9115;
	add.s64 	%rd9215, %rd9213, %rd9203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8046,%dummy}, %rd9214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8047}, %rd9214;
	}
	shf.r.wrap.b32 	%r8048, %r8047, %r8046, 14;
	shf.r.wrap.b32 	%r8049, %r8046, %r8047, 14;
	mov.b64 	%rd9216, {%r8049, %r8048};
	shf.r.wrap.b32 	%r8050, %r8047, %r8046, 18;
	shf.r.wrap.b32 	%r8051, %r8046, %r8047, 18;
	mov.b64 	%rd9217, {%r8051, %r8050};
	xor.b64  	%rd9218, %rd9216, %rd9217;
	shf.l.wrap.b32 	%r8052, %r8046, %r8047, 23;
	shf.l.wrap.b32 	%r8053, %r8047, %r8046, 23;
	mov.b64 	%rd9219, {%r8053, %r8052};
	xor.b64  	%rd9220, %rd9218, %rd9219;
	and.b64  	%rd9221, %rd9214, %rd9189;
	not.b64 	%rd9222, %rd9214;
	and.b64  	%rd9223, %rd9164, %rd9222;
	or.b64  	%rd9224, %rd9221, %rd9223;
	add.s64 	%rd9225, %rd9224, %rd9139;
	add.s64 	%rd9226, %rd9225, %rd9220;
	add.s64 	%rd9227, %rd9226, %rd72;
	add.s64 	%rd9228, %rd9227, %rd7824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8054,%dummy}, %rd9215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8055}, %rd9215;
	}
	shf.r.wrap.b32 	%r8056, %r8055, %r8054, 28;
	shf.r.wrap.b32 	%r8057, %r8054, %r8055, 28;
	mov.b64 	%rd9229, {%r8057, %r8056};
	shf.l.wrap.b32 	%r8058, %r8054, %r8055, 30;
	shf.l.wrap.b32 	%r8059, %r8055, %r8054, 30;
	mov.b64 	%rd9230, {%r8059, %r8058};
	xor.b64  	%rd9231, %rd9229, %rd9230;
	shf.l.wrap.b32 	%r8060, %r8054, %r8055, 25;
	shf.l.wrap.b32 	%r8061, %r8055, %r8054, 25;
	mov.b64 	%rd9232, {%r8061, %r8060};
	xor.b64  	%rd9233, %rd9231, %rd9232;
	xor.b64  	%rd9234, %rd9190, %rd9165;
	and.b64  	%rd9235, %rd9215, %rd9234;
	and.b64  	%rd9236, %rd9190, %rd9165;
	xor.b64  	%rd9237, %rd9235, %rd9236;
	add.s64 	%rd9238, %rd9233, %rd9237;
	add.s64 	%rd9239, %rd9228, %rd9140;
	add.s64 	%rd9240, %rd9238, %rd9228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8062,%dummy}, %rd9239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8063}, %rd9239;
	}
	shf.r.wrap.b32 	%r8064, %r8063, %r8062, 14;
	shf.r.wrap.b32 	%r8065, %r8062, %r8063, 14;
	mov.b64 	%rd9241, {%r8065, %r8064};
	shf.r.wrap.b32 	%r8066, %r8063, %r8062, 18;
	shf.r.wrap.b32 	%r8067, %r8062, %r8063, 18;
	mov.b64 	%rd9242, {%r8067, %r8066};
	xor.b64  	%rd9243, %rd9241, %rd9242;
	shf.l.wrap.b32 	%r8068, %r8062, %r8063, 23;
	shf.l.wrap.b32 	%r8069, %r8063, %r8062, 23;
	mov.b64 	%rd9244, {%r8069, %r8068};
	xor.b64  	%rd9245, %rd9243, %rd9244;
	and.b64  	%rd9246, %rd9239, %rd9214;
	not.b64 	%rd9247, %rd9239;
	and.b64  	%rd9248, %rd9189, %rd9247;
	or.b64  	%rd9249, %rd9246, %rd9248;
	add.s64 	%rd9250, %rd9249, %rd9164;
	add.s64 	%rd9251, %rd9250, %rd9245;
	add.s64 	%rd9252, %rd9251, %rd73;
	add.s64 	%rd9253, %rd9252, %rd7837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8070,%dummy}, %rd9240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8071}, %rd9240;
	}
	shf.r.wrap.b32 	%r8072, %r8071, %r8070, 28;
	shf.r.wrap.b32 	%r8073, %r8070, %r8071, 28;
	mov.b64 	%rd9254, {%r8073, %r8072};
	shf.l.wrap.b32 	%r8074, %r8070, %r8071, 30;
	shf.l.wrap.b32 	%r8075, %r8071, %r8070, 30;
	mov.b64 	%rd9255, {%r8075, %r8074};
	xor.b64  	%rd9256, %rd9254, %rd9255;
	shf.l.wrap.b32 	%r8076, %r8070, %r8071, 25;
	shf.l.wrap.b32 	%r8077, %r8071, %r8070, 25;
	mov.b64 	%rd9257, {%r8077, %r8076};
	xor.b64  	%rd9258, %rd9256, %rd9257;
	xor.b64  	%rd9259, %rd9215, %rd9190;
	and.b64  	%rd9260, %rd9240, %rd9259;
	and.b64  	%rd9261, %rd9215, %rd9190;
	xor.b64  	%rd9262, %rd9260, %rd9261;
	add.s64 	%rd9263, %rd9258, %rd9262;
	add.s64 	%rd9264, %rd9253, %rd9165;
	add.s64 	%rd9265, %rd9263, %rd9253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8078,%dummy}, %rd9264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8079}, %rd9264;
	}
	shf.r.wrap.b32 	%r8080, %r8079, %r8078, 14;
	shf.r.wrap.b32 	%r8081, %r8078, %r8079, 14;
	mov.b64 	%rd9266, {%r8081, %r8080};
	shf.r.wrap.b32 	%r8082, %r8079, %r8078, 18;
	shf.r.wrap.b32 	%r8083, %r8078, %r8079, 18;
	mov.b64 	%rd9267, {%r8083, %r8082};
	xor.b64  	%rd9268, %rd9266, %rd9267;
	shf.l.wrap.b32 	%r8084, %r8078, %r8079, 23;
	shf.l.wrap.b32 	%r8085, %r8079, %r8078, 23;
	mov.b64 	%rd9269, {%r8085, %r8084};
	xor.b64  	%rd9270, %rd9268, %rd9269;
	and.b64  	%rd9271, %rd9264, %rd9239;
	not.b64 	%rd9272, %rd9264;
	and.b64  	%rd9273, %rd9214, %rd9272;
	or.b64  	%rd9274, %rd9271, %rd9273;
	add.s64 	%rd9275, %rd9274, %rd9189;
	add.s64 	%rd9276, %rd9275, %rd9270;
	add.s64 	%rd9277, %rd9276, %rd74;
	add.s64 	%rd9278, %rd9277, %rd7850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8086,%dummy}, %rd9265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8087}, %rd9265;
	}
	shf.r.wrap.b32 	%r8088, %r8087, %r8086, 28;
	shf.r.wrap.b32 	%r8089, %r8086, %r8087, 28;
	mov.b64 	%rd9279, {%r8089, %r8088};
	shf.l.wrap.b32 	%r8090, %r8086, %r8087, 30;
	shf.l.wrap.b32 	%r8091, %r8087, %r8086, 30;
	mov.b64 	%rd9280, {%r8091, %r8090};
	xor.b64  	%rd9281, %rd9279, %rd9280;
	shf.l.wrap.b32 	%r8092, %r8086, %r8087, 25;
	shf.l.wrap.b32 	%r8093, %r8087, %r8086, 25;
	mov.b64 	%rd9282, {%r8093, %r8092};
	xor.b64  	%rd9283, %rd9281, %rd9282;
	xor.b64  	%rd9284, %rd9240, %rd9215;
	and.b64  	%rd9285, %rd9265, %rd9284;
	and.b64  	%rd9286, %rd9240, %rd9215;
	xor.b64  	%rd9287, %rd9285, %rd9286;
	add.s64 	%rd9288, %rd9283, %rd9287;
	add.s64 	%rd9289, %rd9278, %rd9190;
	add.s64 	%rd9290, %rd9288, %rd9278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8094,%dummy}, %rd9289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8095}, %rd9289;
	}
	shf.r.wrap.b32 	%r8096, %r8095, %r8094, 14;
	shf.r.wrap.b32 	%r8097, %r8094, %r8095, 14;
	mov.b64 	%rd9291, {%r8097, %r8096};
	shf.r.wrap.b32 	%r8098, %r8095, %r8094, 18;
	shf.r.wrap.b32 	%r8099, %r8094, %r8095, 18;
	mov.b64 	%rd9292, {%r8099, %r8098};
	xor.b64  	%rd9293, %rd9291, %rd9292;
	shf.l.wrap.b32 	%r8100, %r8094, %r8095, 23;
	shf.l.wrap.b32 	%r8101, %r8095, %r8094, 23;
	mov.b64 	%rd9294, {%r8101, %r8100};
	xor.b64  	%rd9295, %rd9293, %rd9294;
	and.b64  	%rd9296, %rd9289, %rd9264;
	not.b64 	%rd9297, %rd9289;
	and.b64  	%rd9298, %rd9239, %rd9297;
	or.b64  	%rd9299, %rd9296, %rd9298;
	add.s64 	%rd9300, %rd9299, %rd9214;
	add.s64 	%rd9301, %rd9300, %rd9295;
	add.s64 	%rd9302, %rd9301, %rd75;
	add.s64 	%rd9303, %rd9302, %rd7863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8102,%dummy}, %rd9290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8103}, %rd9290;
	}
	shf.r.wrap.b32 	%r8104, %r8103, %r8102, 28;
	shf.r.wrap.b32 	%r8105, %r8102, %r8103, 28;
	mov.b64 	%rd9304, {%r8105, %r8104};
	shf.l.wrap.b32 	%r8106, %r8102, %r8103, 30;
	shf.l.wrap.b32 	%r8107, %r8103, %r8102, 30;
	mov.b64 	%rd9305, {%r8107, %r8106};
	xor.b64  	%rd9306, %rd9304, %rd9305;
	shf.l.wrap.b32 	%r8108, %r8102, %r8103, 25;
	shf.l.wrap.b32 	%r8109, %r8103, %r8102, 25;
	mov.b64 	%rd9307, {%r8109, %r8108};
	xor.b64  	%rd9308, %rd9306, %rd9307;
	xor.b64  	%rd9309, %rd9265, %rd9240;
	and.b64  	%rd9310, %rd9290, %rd9309;
	and.b64  	%rd9311, %rd9265, %rd9240;
	xor.b64  	%rd9312, %rd9310, %rd9311;
	add.s64 	%rd9313, %rd9308, %rd9312;
	add.s64 	%rd9314, %rd9303, %rd9215;
	add.s64 	%rd9315, %rd9313, %rd9303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8110,%dummy}, %rd9314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8111}, %rd9314;
	}
	shf.r.wrap.b32 	%r8112, %r8111, %r8110, 14;
	shf.r.wrap.b32 	%r8113, %r8110, %r8111, 14;
	mov.b64 	%rd9316, {%r8113, %r8112};
	shf.r.wrap.b32 	%r8114, %r8111, %r8110, 18;
	shf.r.wrap.b32 	%r8115, %r8110, %r8111, 18;
	mov.b64 	%rd9317, {%r8115, %r8114};
	xor.b64  	%rd9318, %rd9316, %rd9317;
	shf.l.wrap.b32 	%r8116, %r8110, %r8111, 23;
	shf.l.wrap.b32 	%r8117, %r8111, %r8110, 23;
	mov.b64 	%rd9319, {%r8117, %r8116};
	xor.b64  	%rd9320, %rd9318, %rd9319;
	and.b64  	%rd9321, %rd9314, %rd9289;
	not.b64 	%rd9322, %rd9314;
	and.b64  	%rd9323, %rd9264, %rd9322;
	or.b64  	%rd9324, %rd9321, %rd9323;
	add.s64 	%rd9325, %rd9324, %rd9239;
	add.s64 	%rd9326, %rd9325, %rd9320;
	add.s64 	%rd9327, %rd9326, %rd76;
	add.s64 	%rd9328, %rd9327, %rd7876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8118,%dummy}, %rd9315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8119}, %rd9315;
	}
	shf.r.wrap.b32 	%r8120, %r8119, %r8118, 28;
	shf.r.wrap.b32 	%r8121, %r8118, %r8119, 28;
	mov.b64 	%rd9329, {%r8121, %r8120};
	shf.l.wrap.b32 	%r8122, %r8118, %r8119, 30;
	shf.l.wrap.b32 	%r8123, %r8119, %r8118, 30;
	mov.b64 	%rd9330, {%r8123, %r8122};
	xor.b64  	%rd9331, %rd9329, %rd9330;
	shf.l.wrap.b32 	%r8124, %r8118, %r8119, 25;
	shf.l.wrap.b32 	%r8125, %r8119, %r8118, 25;
	mov.b64 	%rd9332, {%r8125, %r8124};
	xor.b64  	%rd9333, %rd9331, %rd9332;
	xor.b64  	%rd9334, %rd9290, %rd9265;
	and.b64  	%rd9335, %rd9315, %rd9334;
	and.b64  	%rd9336, %rd9290, %rd9265;
	xor.b64  	%rd9337, %rd9335, %rd9336;
	add.s64 	%rd9338, %rd9333, %rd9337;
	add.s64 	%rd9339, %rd9328, %rd9240;
	add.s64 	%rd9340, %rd9338, %rd9328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8126,%dummy}, %rd9339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8127}, %rd9339;
	}
	shf.r.wrap.b32 	%r8128, %r8127, %r8126, 14;
	shf.r.wrap.b32 	%r8129, %r8126, %r8127, 14;
	mov.b64 	%rd9341, {%r8129, %r8128};
	shf.r.wrap.b32 	%r8130, %r8127, %r8126, 18;
	shf.r.wrap.b32 	%r8131, %r8126, %r8127, 18;
	mov.b64 	%rd9342, {%r8131, %r8130};
	xor.b64  	%rd9343, %rd9341, %rd9342;
	shf.l.wrap.b32 	%r8132, %r8126, %r8127, 23;
	shf.l.wrap.b32 	%r8133, %r8127, %r8126, 23;
	mov.b64 	%rd9344, {%r8133, %r8132};
	xor.b64  	%rd9345, %rd9343, %rd9344;
	and.b64  	%rd9346, %rd9339, %rd9314;
	not.b64 	%rd9347, %rd9339;
	and.b64  	%rd9348, %rd9289, %rd9347;
	or.b64  	%rd9349, %rd9346, %rd9348;
	add.s64 	%rd9350, %rd9349, %rd9264;
	add.s64 	%rd9351, %rd9350, %rd9345;
	add.s64 	%rd9352, %rd9351, %rd77;
	add.s64 	%rd9353, %rd9352, %rd7889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8134,%dummy}, %rd9340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8135}, %rd9340;
	}
	shf.r.wrap.b32 	%r8136, %r8135, %r8134, 28;
	shf.r.wrap.b32 	%r8137, %r8134, %r8135, 28;
	mov.b64 	%rd9354, {%r8137, %r8136};
	shf.l.wrap.b32 	%r8138, %r8134, %r8135, 30;
	shf.l.wrap.b32 	%r8139, %r8135, %r8134, 30;
	mov.b64 	%rd9355, {%r8139, %r8138};
	xor.b64  	%rd9356, %rd9354, %rd9355;
	shf.l.wrap.b32 	%r8140, %r8134, %r8135, 25;
	shf.l.wrap.b32 	%r8141, %r8135, %r8134, 25;
	mov.b64 	%rd9357, {%r8141, %r8140};
	xor.b64  	%rd9358, %rd9356, %rd9357;
	xor.b64  	%rd9359, %rd9315, %rd9290;
	and.b64  	%rd9360, %rd9340, %rd9359;
	and.b64  	%rd9361, %rd9315, %rd9290;
	xor.b64  	%rd9362, %rd9360, %rd9361;
	add.s64 	%rd9363, %rd9358, %rd9362;
	add.s64 	%rd9364, %rd9353, %rd9265;
	add.s64 	%rd9365, %rd9363, %rd9353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8142,%dummy}, %rd9364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8143}, %rd9364;
	}
	shf.r.wrap.b32 	%r8144, %r8143, %r8142, 14;
	shf.r.wrap.b32 	%r8145, %r8142, %r8143, 14;
	mov.b64 	%rd9366, {%r8145, %r8144};
	shf.r.wrap.b32 	%r8146, %r8143, %r8142, 18;
	shf.r.wrap.b32 	%r8147, %r8142, %r8143, 18;
	mov.b64 	%rd9367, {%r8147, %r8146};
	xor.b64  	%rd9368, %rd9366, %rd9367;
	shf.l.wrap.b32 	%r8148, %r8142, %r8143, 23;
	shf.l.wrap.b32 	%r8149, %r8143, %r8142, 23;
	mov.b64 	%rd9369, {%r8149, %r8148};
	xor.b64  	%rd9370, %rd9368, %rd9369;
	and.b64  	%rd9371, %rd9364, %rd9339;
	not.b64 	%rd9372, %rd9364;
	and.b64  	%rd9373, %rd9314, %rd9372;
	or.b64  	%rd9374, %rd9371, %rd9373;
	add.s64 	%rd9375, %rd9374, %rd9289;
	add.s64 	%rd9376, %rd9375, %rd9370;
	add.s64 	%rd9377, %rd9376, %rd78;
	add.s64 	%rd9378, %rd9377, %rd7902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8150,%dummy}, %rd9365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8151}, %rd9365;
	}
	shf.r.wrap.b32 	%r8152, %r8151, %r8150, 28;
	shf.r.wrap.b32 	%r8153, %r8150, %r8151, 28;
	mov.b64 	%rd9379, {%r8153, %r8152};
	shf.l.wrap.b32 	%r8154, %r8150, %r8151, 30;
	shf.l.wrap.b32 	%r8155, %r8151, %r8150, 30;
	mov.b64 	%rd9380, {%r8155, %r8154};
	xor.b64  	%rd9381, %rd9379, %rd9380;
	shf.l.wrap.b32 	%r8156, %r8150, %r8151, 25;
	shf.l.wrap.b32 	%r8157, %r8151, %r8150, 25;
	mov.b64 	%rd9382, {%r8157, %r8156};
	xor.b64  	%rd9383, %rd9381, %rd9382;
	xor.b64  	%rd9384, %rd9340, %rd9315;
	and.b64  	%rd9385, %rd9365, %rd9384;
	and.b64  	%rd9386, %rd9340, %rd9315;
	xor.b64  	%rd9387, %rd9385, %rd9386;
	add.s64 	%rd9388, %rd9383, %rd9387;
	add.s64 	%rd9389, %rd9378, %rd9290;
	add.s64 	%rd9390, %rd9388, %rd9378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8158,%dummy}, %rd9389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8159}, %rd9389;
	}
	shf.r.wrap.b32 	%r8160, %r8159, %r8158, 14;
	shf.r.wrap.b32 	%r8161, %r8158, %r8159, 14;
	mov.b64 	%rd9391, {%r8161, %r8160};
	shf.r.wrap.b32 	%r8162, %r8159, %r8158, 18;
	shf.r.wrap.b32 	%r8163, %r8158, %r8159, 18;
	mov.b64 	%rd9392, {%r8163, %r8162};
	xor.b64  	%rd9393, %rd9391, %rd9392;
	shf.l.wrap.b32 	%r8164, %r8158, %r8159, 23;
	shf.l.wrap.b32 	%r8165, %r8159, %r8158, 23;
	mov.b64 	%rd9394, {%r8165, %r8164};
	xor.b64  	%rd9395, %rd9393, %rd9394;
	and.b64  	%rd9396, %rd9389, %rd9364;
	not.b64 	%rd9397, %rd9389;
	and.b64  	%rd9398, %rd9339, %rd9397;
	or.b64  	%rd9399, %rd9396, %rd9398;
	add.s64 	%rd9400, %rd9399, %rd9314;
	add.s64 	%rd9401, %rd9400, %rd9395;
	add.s64 	%rd9402, %rd9401, %rd79;
	add.s64 	%rd9403, %rd9402, %rd7915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8166,%dummy}, %rd9390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8167}, %rd9390;
	}
	shf.r.wrap.b32 	%r8168, %r8167, %r8166, 28;
	shf.r.wrap.b32 	%r8169, %r8166, %r8167, 28;
	mov.b64 	%rd9404, {%r8169, %r8168};
	shf.l.wrap.b32 	%r8170, %r8166, %r8167, 30;
	shf.l.wrap.b32 	%r8171, %r8167, %r8166, 30;
	mov.b64 	%rd9405, {%r8171, %r8170};
	xor.b64  	%rd9406, %rd9404, %rd9405;
	shf.l.wrap.b32 	%r8172, %r8166, %r8167, 25;
	shf.l.wrap.b32 	%r8173, %r8167, %r8166, 25;
	mov.b64 	%rd9407, {%r8173, %r8172};
	xor.b64  	%rd9408, %rd9406, %rd9407;
	xor.b64  	%rd9409, %rd9365, %rd9340;
	and.b64  	%rd9410, %rd9390, %rd9409;
	and.b64  	%rd9411, %rd9365, %rd9340;
	xor.b64  	%rd9412, %rd9410, %rd9411;
	add.s64 	%rd9413, %rd9408, %rd9412;
	add.s64 	%rd9414, %rd9403, %rd9315;
	add.s64 	%rd9415, %rd9413, %rd9403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8174,%dummy}, %rd9414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8175}, %rd9414;
	}
	shf.r.wrap.b32 	%r8176, %r8175, %r8174, 14;
	shf.r.wrap.b32 	%r8177, %r8174, %r8175, 14;
	mov.b64 	%rd9416, {%r8177, %r8176};
	shf.r.wrap.b32 	%r8178, %r8175, %r8174, 18;
	shf.r.wrap.b32 	%r8179, %r8174, %r8175, 18;
	mov.b64 	%rd9417, {%r8179, %r8178};
	xor.b64  	%rd9418, %rd9416, %rd9417;
	shf.l.wrap.b32 	%r8180, %r8174, %r8175, 23;
	shf.l.wrap.b32 	%r8181, %r8175, %r8174, 23;
	mov.b64 	%rd9419, {%r8181, %r8180};
	xor.b64  	%rd9420, %rd9418, %rd9419;
	and.b64  	%rd9421, %rd9414, %rd9389;
	not.b64 	%rd9422, %rd9414;
	and.b64  	%rd9423, %rd9364, %rd9422;
	or.b64  	%rd9424, %rd9421, %rd9423;
	add.s64 	%rd9425, %rd9424, %rd9339;
	add.s64 	%rd9426, %rd9425, %rd9420;
	add.s64 	%rd9427, %rd9426, %rd80;
	add.s64 	%rd9428, %rd9427, %rd7928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8182,%dummy}, %rd9415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8183}, %rd9415;
	}
	shf.r.wrap.b32 	%r8184, %r8183, %r8182, 28;
	shf.r.wrap.b32 	%r8185, %r8182, %r8183, 28;
	mov.b64 	%rd9429, {%r8185, %r8184};
	shf.l.wrap.b32 	%r8186, %r8182, %r8183, 30;
	shf.l.wrap.b32 	%r8187, %r8183, %r8182, 30;
	mov.b64 	%rd9430, {%r8187, %r8186};
	xor.b64  	%rd9431, %rd9429, %rd9430;
	shf.l.wrap.b32 	%r8188, %r8182, %r8183, 25;
	shf.l.wrap.b32 	%r8189, %r8183, %r8182, 25;
	mov.b64 	%rd9432, {%r8189, %r8188};
	xor.b64  	%rd9433, %rd9431, %rd9432;
	xor.b64  	%rd9434, %rd9390, %rd9365;
	and.b64  	%rd9435, %rd9415, %rd9434;
	and.b64  	%rd9436, %rd9390, %rd9365;
	xor.b64  	%rd9437, %rd9435, %rd9436;
	add.s64 	%rd9438, %rd9433, %rd9437;
	add.s64 	%rd9439, %rd9428, %rd9340;
	add.s64 	%rd9440, %rd9438, %rd9428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8190,%dummy}, %rd9439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8191}, %rd9439;
	}
	shf.r.wrap.b32 	%r8192, %r8191, %r8190, 14;
	shf.r.wrap.b32 	%r8193, %r8190, %r8191, 14;
	mov.b64 	%rd9441, {%r8193, %r8192};
	shf.r.wrap.b32 	%r8194, %r8191, %r8190, 18;
	shf.r.wrap.b32 	%r8195, %r8190, %r8191, 18;
	mov.b64 	%rd9442, {%r8195, %r8194};
	xor.b64  	%rd9443, %rd9441, %rd9442;
	shf.l.wrap.b32 	%r8196, %r8190, %r8191, 23;
	shf.l.wrap.b32 	%r8197, %r8191, %r8190, 23;
	mov.b64 	%rd9444, {%r8197, %r8196};
	xor.b64  	%rd9445, %rd9443, %rd9444;
	and.b64  	%rd9446, %rd9439, %rd9414;
	not.b64 	%rd9447, %rd9439;
	and.b64  	%rd9448, %rd9389, %rd9447;
	or.b64  	%rd9449, %rd9446, %rd9448;
	add.s64 	%rd9450, %rd9449, %rd9364;
	add.s64 	%rd9451, %rd9450, %rd9445;
	add.s64 	%rd9452, %rd9451, %rd81;
	add.s64 	%rd9453, %rd9452, %rd7941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8198,%dummy}, %rd9440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8199}, %rd9440;
	}
	shf.r.wrap.b32 	%r8200, %r8199, %r8198, 28;
	shf.r.wrap.b32 	%r8201, %r8198, %r8199, 28;
	mov.b64 	%rd9454, {%r8201, %r8200};
	shf.l.wrap.b32 	%r8202, %r8198, %r8199, 30;
	shf.l.wrap.b32 	%r8203, %r8199, %r8198, 30;
	mov.b64 	%rd9455, {%r8203, %r8202};
	xor.b64  	%rd9456, %rd9454, %rd9455;
	shf.l.wrap.b32 	%r8204, %r8198, %r8199, 25;
	shf.l.wrap.b32 	%r8205, %r8199, %r8198, 25;
	mov.b64 	%rd9457, {%r8205, %r8204};
	xor.b64  	%rd9458, %rd9456, %rd9457;
	xor.b64  	%rd9459, %rd9415, %rd9390;
	and.b64  	%rd9460, %rd9440, %rd9459;
	and.b64  	%rd9461, %rd9415, %rd9390;
	xor.b64  	%rd9462, %rd9460, %rd9461;
	add.s64 	%rd9463, %rd9458, %rd9462;
	add.s64 	%rd9464, %rd9453, %rd9365;
	add.s64 	%rd9465, %rd9463, %rd9453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8206,%dummy}, %rd9464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8207}, %rd9464;
	}
	shf.r.wrap.b32 	%r8208, %r8207, %r8206, 14;
	shf.r.wrap.b32 	%r8209, %r8206, %r8207, 14;
	mov.b64 	%rd9466, {%r8209, %r8208};
	shf.r.wrap.b32 	%r8210, %r8207, %r8206, 18;
	shf.r.wrap.b32 	%r8211, %r8206, %r8207, 18;
	mov.b64 	%rd9467, {%r8211, %r8210};
	xor.b64  	%rd9468, %rd9466, %rd9467;
	shf.l.wrap.b32 	%r8212, %r8206, %r8207, 23;
	shf.l.wrap.b32 	%r8213, %r8207, %r8206, 23;
	mov.b64 	%rd9469, {%r8213, %r8212};
	xor.b64  	%rd9470, %rd9468, %rd9469;
	and.b64  	%rd9471, %rd9464, %rd9439;
	not.b64 	%rd9472, %rd9464;
	and.b64  	%rd9473, %rd9414, %rd9472;
	or.b64  	%rd9474, %rd9471, %rd9473;
	add.s64 	%rd9475, %rd9474, %rd9389;
	add.s64 	%rd9476, %rd9475, %rd9470;
	add.s64 	%rd9477, %rd9476, %rd82;
	add.s64 	%rd9478, %rd9477, %rd7954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8214,%dummy}, %rd9465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8215}, %rd9465;
	}
	shf.r.wrap.b32 	%r8216, %r8215, %r8214, 28;
	shf.r.wrap.b32 	%r8217, %r8214, %r8215, 28;
	mov.b64 	%rd9479, {%r8217, %r8216};
	shf.l.wrap.b32 	%r8218, %r8214, %r8215, 30;
	shf.l.wrap.b32 	%r8219, %r8215, %r8214, 30;
	mov.b64 	%rd9480, {%r8219, %r8218};
	xor.b64  	%rd9481, %rd9479, %rd9480;
	shf.l.wrap.b32 	%r8220, %r8214, %r8215, 25;
	shf.l.wrap.b32 	%r8221, %r8215, %r8214, 25;
	mov.b64 	%rd9482, {%r8221, %r8220};
	xor.b64  	%rd9483, %rd9481, %rd9482;
	xor.b64  	%rd9484, %rd9440, %rd9415;
	and.b64  	%rd9485, %rd9465, %rd9484;
	and.b64  	%rd9486, %rd9440, %rd9415;
	xor.b64  	%rd9487, %rd9485, %rd9486;
	add.s64 	%rd9488, %rd9483, %rd9487;
	add.s64 	%rd9489, %rd9478, %rd9390;
	add.s64 	%rd9490, %rd9488, %rd9478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8222,%dummy}, %rd9489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8223}, %rd9489;
	}
	shf.r.wrap.b32 	%r8224, %r8223, %r8222, 14;
	shf.r.wrap.b32 	%r8225, %r8222, %r8223, 14;
	mov.b64 	%rd9491, {%r8225, %r8224};
	shf.r.wrap.b32 	%r8226, %r8223, %r8222, 18;
	shf.r.wrap.b32 	%r8227, %r8222, %r8223, 18;
	mov.b64 	%rd9492, {%r8227, %r8226};
	xor.b64  	%rd9493, %rd9491, %rd9492;
	shf.l.wrap.b32 	%r8228, %r8222, %r8223, 23;
	shf.l.wrap.b32 	%r8229, %r8223, %r8222, 23;
	mov.b64 	%rd9494, {%r8229, %r8228};
	xor.b64  	%rd9495, %rd9493, %rd9494;
	and.b64  	%rd9496, %rd9489, %rd9464;
	not.b64 	%rd9497, %rd9489;
	and.b64  	%rd9498, %rd9439, %rd9497;
	or.b64  	%rd9499, %rd9496, %rd9498;
	add.s64 	%rd9500, %rd9499, %rd9414;
	add.s64 	%rd9501, %rd9500, %rd9495;
	add.s64 	%rd9502, %rd9501, %rd83;
	add.s64 	%rd9503, %rd9502, %rd7967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8230,%dummy}, %rd9490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8231}, %rd9490;
	}
	shf.r.wrap.b32 	%r8232, %r8231, %r8230, 28;
	shf.r.wrap.b32 	%r8233, %r8230, %r8231, 28;
	mov.b64 	%rd9504, {%r8233, %r8232};
	shf.l.wrap.b32 	%r8234, %r8230, %r8231, 30;
	shf.l.wrap.b32 	%r8235, %r8231, %r8230, 30;
	mov.b64 	%rd9505, {%r8235, %r8234};
	xor.b64  	%rd9506, %rd9504, %rd9505;
	shf.l.wrap.b32 	%r8236, %r8230, %r8231, 25;
	shf.l.wrap.b32 	%r8237, %r8231, %r8230, 25;
	mov.b64 	%rd9507, {%r8237, %r8236};
	xor.b64  	%rd9508, %rd9506, %rd9507;
	xor.b64  	%rd9509, %rd9465, %rd9440;
	and.b64  	%rd9510, %rd9490, %rd9509;
	and.b64  	%rd9511, %rd9465, %rd9440;
	xor.b64  	%rd9512, %rd9510, %rd9511;
	add.s64 	%rd9513, %rd9508, %rd9512;
	add.s64 	%rd9514, %rd9503, %rd9415;
	add.s64 	%rd9515, %rd9513, %rd9503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8238,%dummy}, %rd9514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8239}, %rd9514;
	}
	shf.r.wrap.b32 	%r8240, %r8239, %r8238, 14;
	shf.r.wrap.b32 	%r8241, %r8238, %r8239, 14;
	mov.b64 	%rd9516, {%r8241, %r8240};
	shf.r.wrap.b32 	%r8242, %r8239, %r8238, 18;
	shf.r.wrap.b32 	%r8243, %r8238, %r8239, 18;
	mov.b64 	%rd9517, {%r8243, %r8242};
	xor.b64  	%rd9518, %rd9516, %rd9517;
	shf.l.wrap.b32 	%r8244, %r8238, %r8239, 23;
	shf.l.wrap.b32 	%r8245, %r8239, %r8238, 23;
	mov.b64 	%rd9519, {%r8245, %r8244};
	xor.b64  	%rd9520, %rd9518, %rd9519;
	and.b64  	%rd9521, %rd9514, %rd9489;
	not.b64 	%rd9522, %rd9514;
	and.b64  	%rd9523, %rd9464, %rd9522;
	or.b64  	%rd9524, %rd9521, %rd9523;
	add.s64 	%rd9525, %rd9524, %rd9439;
	add.s64 	%rd9526, %rd9525, %rd9520;
	add.s64 	%rd9527, %rd9526, %rd84;
	add.s64 	%rd9528, %rd9527, %rd7980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8246,%dummy}, %rd9515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8247}, %rd9515;
	}
	shf.r.wrap.b32 	%r8248, %r8247, %r8246, 28;
	shf.r.wrap.b32 	%r8249, %r8246, %r8247, 28;
	mov.b64 	%rd9529, {%r8249, %r8248};
	shf.l.wrap.b32 	%r8250, %r8246, %r8247, 30;
	shf.l.wrap.b32 	%r8251, %r8247, %r8246, 30;
	mov.b64 	%rd9530, {%r8251, %r8250};
	xor.b64  	%rd9531, %rd9529, %rd9530;
	shf.l.wrap.b32 	%r8252, %r8246, %r8247, 25;
	shf.l.wrap.b32 	%r8253, %r8247, %r8246, 25;
	mov.b64 	%rd9532, {%r8253, %r8252};
	xor.b64  	%rd9533, %rd9531, %rd9532;
	xor.b64  	%rd9534, %rd9490, %rd9465;
	and.b64  	%rd9535, %rd9515, %rd9534;
	and.b64  	%rd9536, %rd9490, %rd9465;
	xor.b64  	%rd9537, %rd9535, %rd9536;
	add.s64 	%rd9538, %rd9533, %rd9537;
	add.s64 	%rd9539, %rd9528, %rd9440;
	add.s64 	%rd9540, %rd9538, %rd9528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8254,%dummy}, %rd9539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8255}, %rd9539;
	}
	shf.r.wrap.b32 	%r8256, %r8255, %r8254, 14;
	shf.r.wrap.b32 	%r8257, %r8254, %r8255, 14;
	mov.b64 	%rd9541, {%r8257, %r8256};
	shf.r.wrap.b32 	%r8258, %r8255, %r8254, 18;
	shf.r.wrap.b32 	%r8259, %r8254, %r8255, 18;
	mov.b64 	%rd9542, {%r8259, %r8258};
	xor.b64  	%rd9543, %rd9541, %rd9542;
	shf.l.wrap.b32 	%r8260, %r8254, %r8255, 23;
	shf.l.wrap.b32 	%r8261, %r8255, %r8254, 23;
	mov.b64 	%rd9544, {%r8261, %r8260};
	xor.b64  	%rd9545, %rd9543, %rd9544;
	and.b64  	%rd9546, %rd9539, %rd9514;
	not.b64 	%rd9547, %rd9539;
	and.b64  	%rd9548, %rd9489, %rd9547;
	or.b64  	%rd9549, %rd9546, %rd9548;
	add.s64 	%rd9550, %rd9549, %rd9464;
	add.s64 	%rd9551, %rd9550, %rd9545;
	add.s64 	%rd9552, %rd9551, %rd85;
	add.s64 	%rd9553, %rd9552, %rd7993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8262,%dummy}, %rd9540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8263}, %rd9540;
	}
	shf.r.wrap.b32 	%r8264, %r8263, %r8262, 28;
	shf.r.wrap.b32 	%r8265, %r8262, %r8263, 28;
	mov.b64 	%rd9554, {%r8265, %r8264};
	shf.l.wrap.b32 	%r8266, %r8262, %r8263, 30;
	shf.l.wrap.b32 	%r8267, %r8263, %r8262, 30;
	mov.b64 	%rd9555, {%r8267, %r8266};
	xor.b64  	%rd9556, %rd9554, %rd9555;
	shf.l.wrap.b32 	%r8268, %r8262, %r8263, 25;
	shf.l.wrap.b32 	%r8269, %r8263, %r8262, 25;
	mov.b64 	%rd9557, {%r8269, %r8268};
	xor.b64  	%rd9558, %rd9556, %rd9557;
	xor.b64  	%rd9559, %rd9515, %rd9490;
	and.b64  	%rd9560, %rd9540, %rd9559;
	and.b64  	%rd9561, %rd9515, %rd9490;
	xor.b64  	%rd9562, %rd9560, %rd9561;
	add.s64 	%rd9563, %rd9558, %rd9562;
	add.s64 	%rd9564, %rd9553, %rd9465;
	add.s64 	%rd9565, %rd9563, %rd9553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8270,%dummy}, %rd9564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8271}, %rd9564;
	}
	shf.r.wrap.b32 	%r8272, %r8271, %r8270, 14;
	shf.r.wrap.b32 	%r8273, %r8270, %r8271, 14;
	mov.b64 	%rd9566, {%r8273, %r8272};
	shf.r.wrap.b32 	%r8274, %r8271, %r8270, 18;
	shf.r.wrap.b32 	%r8275, %r8270, %r8271, 18;
	mov.b64 	%rd9567, {%r8275, %r8274};
	xor.b64  	%rd9568, %rd9566, %rd9567;
	shf.l.wrap.b32 	%r8276, %r8270, %r8271, 23;
	shf.l.wrap.b32 	%r8277, %r8271, %r8270, 23;
	mov.b64 	%rd9569, {%r8277, %r8276};
	xor.b64  	%rd9570, %rd9568, %rd9569;
	and.b64  	%rd9571, %rd9564, %rd9539;
	not.b64 	%rd9572, %rd9564;
	and.b64  	%rd9573, %rd9514, %rd9572;
	or.b64  	%rd9574, %rd9571, %rd9573;
	add.s64 	%rd9575, %rd9574, %rd9489;
	add.s64 	%rd9576, %rd9575, %rd9570;
	add.s64 	%rd9577, %rd9576, %rd86;
	add.s64 	%rd9578, %rd9577, %rd8006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8278,%dummy}, %rd9565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8279}, %rd9565;
	}
	shf.r.wrap.b32 	%r8280, %r8279, %r8278, 28;
	shf.r.wrap.b32 	%r8281, %r8278, %r8279, 28;
	mov.b64 	%rd9579, {%r8281, %r8280};
	shf.l.wrap.b32 	%r8282, %r8278, %r8279, 30;
	shf.l.wrap.b32 	%r8283, %r8279, %r8278, 30;
	mov.b64 	%rd9580, {%r8283, %r8282};
	xor.b64  	%rd9581, %rd9579, %rd9580;
	shf.l.wrap.b32 	%r8284, %r8278, %r8279, 25;
	shf.l.wrap.b32 	%r8285, %r8279, %r8278, 25;
	mov.b64 	%rd9582, {%r8285, %r8284};
	xor.b64  	%rd9583, %rd9581, %rd9582;
	xor.b64  	%rd9584, %rd9540, %rd9515;
	and.b64  	%rd9585, %rd9565, %rd9584;
	and.b64  	%rd9586, %rd9540, %rd9515;
	xor.b64  	%rd9587, %rd9585, %rd9586;
	add.s64 	%rd9588, %rd9583, %rd9587;
	add.s64 	%rd9589, %rd9578, %rd9490;
	add.s64 	%rd9590, %rd9588, %rd9578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8286,%dummy}, %rd9589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8287}, %rd9589;
	}
	shf.r.wrap.b32 	%r8288, %r8287, %r8286, 14;
	shf.r.wrap.b32 	%r8289, %r8286, %r8287, 14;
	mov.b64 	%rd9591, {%r8289, %r8288};
	shf.r.wrap.b32 	%r8290, %r8287, %r8286, 18;
	shf.r.wrap.b32 	%r8291, %r8286, %r8287, 18;
	mov.b64 	%rd9592, {%r8291, %r8290};
	xor.b64  	%rd9593, %rd9591, %rd9592;
	shf.l.wrap.b32 	%r8292, %r8286, %r8287, 23;
	shf.l.wrap.b32 	%r8293, %r8287, %r8286, 23;
	mov.b64 	%rd9594, {%r8293, %r8292};
	xor.b64  	%rd9595, %rd9593, %rd9594;
	and.b64  	%rd9596, %rd9589, %rd9564;
	not.b64 	%rd9597, %rd9589;
	and.b64  	%rd9598, %rd9539, %rd9597;
	or.b64  	%rd9599, %rd9596, %rd9598;
	add.s64 	%rd9600, %rd9599, %rd9514;
	add.s64 	%rd9601, %rd9600, %rd9595;
	add.s64 	%rd9602, %rd9601, %rd87;
	add.s64 	%rd9603, %rd9602, %rd8019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8294,%dummy}, %rd9590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8295}, %rd9590;
	}
	shf.r.wrap.b32 	%r8296, %r8295, %r8294, 28;
	shf.r.wrap.b32 	%r8297, %r8294, %r8295, 28;
	mov.b64 	%rd9604, {%r8297, %r8296};
	shf.l.wrap.b32 	%r8298, %r8294, %r8295, 30;
	shf.l.wrap.b32 	%r8299, %r8295, %r8294, 30;
	mov.b64 	%rd9605, {%r8299, %r8298};
	xor.b64  	%rd9606, %rd9604, %rd9605;
	shf.l.wrap.b32 	%r8300, %r8294, %r8295, 25;
	shf.l.wrap.b32 	%r8301, %r8295, %r8294, 25;
	mov.b64 	%rd9607, {%r8301, %r8300};
	xor.b64  	%rd9608, %rd9606, %rd9607;
	xor.b64  	%rd9609, %rd9565, %rd9540;
	and.b64  	%rd9610, %rd9590, %rd9609;
	and.b64  	%rd9611, %rd9565, %rd9540;
	xor.b64  	%rd9612, %rd9610, %rd9611;
	add.s64 	%rd9613, %rd9608, %rd9612;
	add.s64 	%rd9614, %rd9603, %rd9515;
	add.s64 	%rd9615, %rd9613, %rd9603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8302,%dummy}, %rd9614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8303}, %rd9614;
	}
	shf.r.wrap.b32 	%r8304, %r8303, %r8302, 14;
	shf.r.wrap.b32 	%r8305, %r8302, %r8303, 14;
	mov.b64 	%rd9616, {%r8305, %r8304};
	shf.r.wrap.b32 	%r8306, %r8303, %r8302, 18;
	shf.r.wrap.b32 	%r8307, %r8302, %r8303, 18;
	mov.b64 	%rd9617, {%r8307, %r8306};
	xor.b64  	%rd9618, %rd9616, %rd9617;
	shf.l.wrap.b32 	%r8308, %r8302, %r8303, 23;
	shf.l.wrap.b32 	%r8309, %r8303, %r8302, 23;
	mov.b64 	%rd9619, {%r8309, %r8308};
	xor.b64  	%rd9620, %rd9618, %rd9619;
	and.b64  	%rd9621, %rd9614, %rd9589;
	not.b64 	%rd9622, %rd9614;
	and.b64  	%rd9623, %rd9564, %rd9622;
	or.b64  	%rd9624, %rd9621, %rd9623;
	add.s64 	%rd9625, %rd9624, %rd9539;
	add.s64 	%rd9626, %rd9625, %rd9620;
	add.s64 	%rd9627, %rd9626, %rd88;
	add.s64 	%rd9628, %rd9627, %rd8032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8310,%dummy}, %rd9615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8311}, %rd9615;
	}
	shf.r.wrap.b32 	%r8312, %r8311, %r8310, 28;
	shf.r.wrap.b32 	%r8313, %r8310, %r8311, 28;
	mov.b64 	%rd9629, {%r8313, %r8312};
	shf.l.wrap.b32 	%r8314, %r8310, %r8311, 30;
	shf.l.wrap.b32 	%r8315, %r8311, %r8310, 30;
	mov.b64 	%rd9630, {%r8315, %r8314};
	xor.b64  	%rd9631, %rd9629, %rd9630;
	shf.l.wrap.b32 	%r8316, %r8310, %r8311, 25;
	shf.l.wrap.b32 	%r8317, %r8311, %r8310, 25;
	mov.b64 	%rd9632, {%r8317, %r8316};
	xor.b64  	%rd9633, %rd9631, %rd9632;
	xor.b64  	%rd9634, %rd9590, %rd9565;
	and.b64  	%rd9635, %rd9615, %rd9634;
	and.b64  	%rd9636, %rd9590, %rd9565;
	xor.b64  	%rd9637, %rd9635, %rd9636;
	add.s64 	%rd9638, %rd9633, %rd9637;
	add.s64 	%rd9639, %rd9628, %rd9540;
	add.s64 	%rd9640, %rd9638, %rd9628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8318,%dummy}, %rd9639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8319}, %rd9639;
	}
	shf.r.wrap.b32 	%r8320, %r8319, %r8318, 14;
	shf.r.wrap.b32 	%r8321, %r8318, %r8319, 14;
	mov.b64 	%rd9641, {%r8321, %r8320};
	shf.r.wrap.b32 	%r8322, %r8319, %r8318, 18;
	shf.r.wrap.b32 	%r8323, %r8318, %r8319, 18;
	mov.b64 	%rd9642, {%r8323, %r8322};
	xor.b64  	%rd9643, %rd9641, %rd9642;
	shf.l.wrap.b32 	%r8324, %r8318, %r8319, 23;
	shf.l.wrap.b32 	%r8325, %r8319, %r8318, 23;
	mov.b64 	%rd9644, {%r8325, %r8324};
	xor.b64  	%rd9645, %rd9643, %rd9644;
	and.b64  	%rd9646, %rd9639, %rd9614;
	not.b64 	%rd9647, %rd9639;
	and.b64  	%rd9648, %rd9589, %rd9647;
	or.b64  	%rd9649, %rd9646, %rd9648;
	add.s64 	%rd9650, %rd9649, %rd9564;
	add.s64 	%rd9651, %rd9650, %rd9645;
	add.s64 	%rd9652, %rd9651, %rd89;
	add.s64 	%rd9653, %rd9652, %rd8045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8326,%dummy}, %rd9640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8327}, %rd9640;
	}
	shf.r.wrap.b32 	%r8328, %r8327, %r8326, 28;
	shf.r.wrap.b32 	%r8329, %r8326, %r8327, 28;
	mov.b64 	%rd9654, {%r8329, %r8328};
	shf.l.wrap.b32 	%r8330, %r8326, %r8327, 30;
	shf.l.wrap.b32 	%r8331, %r8327, %r8326, 30;
	mov.b64 	%rd9655, {%r8331, %r8330};
	xor.b64  	%rd9656, %rd9654, %rd9655;
	shf.l.wrap.b32 	%r8332, %r8326, %r8327, 25;
	shf.l.wrap.b32 	%r8333, %r8327, %r8326, 25;
	mov.b64 	%rd9657, {%r8333, %r8332};
	xor.b64  	%rd9658, %rd9656, %rd9657;
	xor.b64  	%rd9659, %rd9615, %rd9590;
	and.b64  	%rd9660, %rd9640, %rd9659;
	and.b64  	%rd9661, %rd9615, %rd9590;
	xor.b64  	%rd9662, %rd9660, %rd9661;
	add.s64 	%rd9663, %rd9658, %rd9662;
	add.s64 	%rd9664, %rd9653, %rd9565;
	add.s64 	%rd9665, %rd9663, %rd9653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8334,%dummy}, %rd9664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8335}, %rd9664;
	}
	shf.r.wrap.b32 	%r8336, %r8335, %r8334, 14;
	shf.r.wrap.b32 	%r8337, %r8334, %r8335, 14;
	mov.b64 	%rd9666, {%r8337, %r8336};
	shf.r.wrap.b32 	%r8338, %r8335, %r8334, 18;
	shf.r.wrap.b32 	%r8339, %r8334, %r8335, 18;
	mov.b64 	%rd9667, {%r8339, %r8338};
	xor.b64  	%rd9668, %rd9666, %rd9667;
	shf.l.wrap.b32 	%r8340, %r8334, %r8335, 23;
	shf.l.wrap.b32 	%r8341, %r8335, %r8334, 23;
	mov.b64 	%rd9669, {%r8341, %r8340};
	xor.b64  	%rd9670, %rd9668, %rd9669;
	and.b64  	%rd9671, %rd9664, %rd9639;
	not.b64 	%rd9672, %rd9664;
	and.b64  	%rd9673, %rd9614, %rd9672;
	or.b64  	%rd9674, %rd9671, %rd9673;
	add.s64 	%rd9675, %rd9674, %rd9589;
	add.s64 	%rd9676, %rd9675, %rd9670;
	add.s64 	%rd9677, %rd9676, %rd90;
	add.s64 	%rd9678, %rd9677, %rd8058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8342,%dummy}, %rd9665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8343}, %rd9665;
	}
	shf.r.wrap.b32 	%r8344, %r8343, %r8342, 28;
	shf.r.wrap.b32 	%r8345, %r8342, %r8343, 28;
	mov.b64 	%rd9679, {%r8345, %r8344};
	shf.l.wrap.b32 	%r8346, %r8342, %r8343, 30;
	shf.l.wrap.b32 	%r8347, %r8343, %r8342, 30;
	mov.b64 	%rd9680, {%r8347, %r8346};
	xor.b64  	%rd9681, %rd9679, %rd9680;
	shf.l.wrap.b32 	%r8348, %r8342, %r8343, 25;
	shf.l.wrap.b32 	%r8349, %r8343, %r8342, 25;
	mov.b64 	%rd9682, {%r8349, %r8348};
	xor.b64  	%rd9683, %rd9681, %rd9682;
	xor.b64  	%rd9684, %rd9640, %rd9615;
	and.b64  	%rd9685, %rd9665, %rd9684;
	and.b64  	%rd9686, %rd9640, %rd9615;
	xor.b64  	%rd9687, %rd9685, %rd9686;
	add.s64 	%rd9688, %rd9683, %rd9687;
	add.s64 	%rd9689, %rd9678, %rd9590;
	add.s64 	%rd9690, %rd9688, %rd9678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8350,%dummy}, %rd9689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8351}, %rd9689;
	}
	shf.r.wrap.b32 	%r8352, %r8351, %r8350, 14;
	shf.r.wrap.b32 	%r8353, %r8350, %r8351, 14;
	mov.b64 	%rd9691, {%r8353, %r8352};
	shf.r.wrap.b32 	%r8354, %r8351, %r8350, 18;
	shf.r.wrap.b32 	%r8355, %r8350, %r8351, 18;
	mov.b64 	%rd9692, {%r8355, %r8354};
	xor.b64  	%rd9693, %rd9691, %rd9692;
	shf.l.wrap.b32 	%r8356, %r8350, %r8351, 23;
	shf.l.wrap.b32 	%r8357, %r8351, %r8350, 23;
	mov.b64 	%rd9694, {%r8357, %r8356};
	xor.b64  	%rd9695, %rd9693, %rd9694;
	and.b64  	%rd9696, %rd9689, %rd9664;
	not.b64 	%rd9697, %rd9689;
	and.b64  	%rd9698, %rd9639, %rd9697;
	or.b64  	%rd9699, %rd9696, %rd9698;
	add.s64 	%rd9700, %rd9699, %rd9614;
	add.s64 	%rd9701, %rd9700, %rd9695;
	add.s64 	%rd9702, %rd9701, %rd91;
	add.s64 	%rd9703, %rd9702, %rd8071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8358,%dummy}, %rd9690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8359}, %rd9690;
	}
	shf.r.wrap.b32 	%r8360, %r8359, %r8358, 28;
	shf.r.wrap.b32 	%r8361, %r8358, %r8359, 28;
	mov.b64 	%rd9704, {%r8361, %r8360};
	shf.l.wrap.b32 	%r8362, %r8358, %r8359, 30;
	shf.l.wrap.b32 	%r8363, %r8359, %r8358, 30;
	mov.b64 	%rd9705, {%r8363, %r8362};
	xor.b64  	%rd9706, %rd9704, %rd9705;
	shf.l.wrap.b32 	%r8364, %r8358, %r8359, 25;
	shf.l.wrap.b32 	%r8365, %r8359, %r8358, 25;
	mov.b64 	%rd9707, {%r8365, %r8364};
	xor.b64  	%rd9708, %rd9706, %rd9707;
	xor.b64  	%rd9709, %rd9665, %rd9640;
	and.b64  	%rd9710, %rd9690, %rd9709;
	and.b64  	%rd9711, %rd9665, %rd9640;
	xor.b64  	%rd9712, %rd9710, %rd9711;
	add.s64 	%rd9713, %rd9708, %rd9712;
	add.s64 	%rd9714, %rd9703, %rd9615;
	add.s64 	%rd9715, %rd9713, %rd9703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8366,%dummy}, %rd9714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8367}, %rd9714;
	}
	shf.r.wrap.b32 	%r8368, %r8367, %r8366, 14;
	shf.r.wrap.b32 	%r8369, %r8366, %r8367, 14;
	mov.b64 	%rd9716, {%r8369, %r8368};
	shf.r.wrap.b32 	%r8370, %r8367, %r8366, 18;
	shf.r.wrap.b32 	%r8371, %r8366, %r8367, 18;
	mov.b64 	%rd9717, {%r8371, %r8370};
	xor.b64  	%rd9718, %rd9716, %rd9717;
	shf.l.wrap.b32 	%r8372, %r8366, %r8367, 23;
	shf.l.wrap.b32 	%r8373, %r8367, %r8366, 23;
	mov.b64 	%rd9719, {%r8373, %r8372};
	xor.b64  	%rd9720, %rd9718, %rd9719;
	and.b64  	%rd9721, %rd9714, %rd9689;
	not.b64 	%rd9722, %rd9714;
	and.b64  	%rd9723, %rd9664, %rd9722;
	or.b64  	%rd9724, %rd9721, %rd9723;
	add.s64 	%rd9725, %rd9724, %rd9639;
	add.s64 	%rd9726, %rd9725, %rd9720;
	add.s64 	%rd9727, %rd9726, %rd92;
	add.s64 	%rd9728, %rd9727, %rd8084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8374,%dummy}, %rd9715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8375}, %rd9715;
	}
	shf.r.wrap.b32 	%r8376, %r8375, %r8374, 28;
	shf.r.wrap.b32 	%r8377, %r8374, %r8375, 28;
	mov.b64 	%rd9729, {%r8377, %r8376};
	shf.l.wrap.b32 	%r8378, %r8374, %r8375, 30;
	shf.l.wrap.b32 	%r8379, %r8375, %r8374, 30;
	mov.b64 	%rd9730, {%r8379, %r8378};
	xor.b64  	%rd9731, %rd9729, %rd9730;
	shf.l.wrap.b32 	%r8380, %r8374, %r8375, 25;
	shf.l.wrap.b32 	%r8381, %r8375, %r8374, 25;
	mov.b64 	%rd9732, {%r8381, %r8380};
	xor.b64  	%rd9733, %rd9731, %rd9732;
	xor.b64  	%rd9734, %rd9690, %rd9665;
	and.b64  	%rd9735, %rd9715, %rd9734;
	and.b64  	%rd9736, %rd9690, %rd9665;
	xor.b64  	%rd9737, %rd9735, %rd9736;
	add.s64 	%rd9738, %rd9733, %rd9737;
	add.s64 	%rd9739, %rd9728, %rd9640;
	add.s64 	%rd9740, %rd9738, %rd9728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8382,%dummy}, %rd9739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8383}, %rd9739;
	}
	shf.r.wrap.b32 	%r8384, %r8383, %r8382, 14;
	shf.r.wrap.b32 	%r8385, %r8382, %r8383, 14;
	mov.b64 	%rd9741, {%r8385, %r8384};
	shf.r.wrap.b32 	%r8386, %r8383, %r8382, 18;
	shf.r.wrap.b32 	%r8387, %r8382, %r8383, 18;
	mov.b64 	%rd9742, {%r8387, %r8386};
	xor.b64  	%rd9743, %rd9741, %rd9742;
	shf.l.wrap.b32 	%r8388, %r8382, %r8383, 23;
	shf.l.wrap.b32 	%r8389, %r8383, %r8382, 23;
	mov.b64 	%rd9744, {%r8389, %r8388};
	xor.b64  	%rd9745, %rd9743, %rd9744;
	and.b64  	%rd9746, %rd9739, %rd9714;
	not.b64 	%rd9747, %rd9739;
	and.b64  	%rd9748, %rd9689, %rd9747;
	or.b64  	%rd9749, %rd9746, %rd9748;
	add.s64 	%rd9750, %rd9749, %rd9664;
	add.s64 	%rd9751, %rd9750, %rd9745;
	add.s64 	%rd9752, %rd9751, %rd93;
	add.s64 	%rd9753, %rd9752, %rd8097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8390,%dummy}, %rd9740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8391}, %rd9740;
	}
	shf.r.wrap.b32 	%r8392, %r8391, %r8390, 28;
	shf.r.wrap.b32 	%r8393, %r8390, %r8391, 28;
	mov.b64 	%rd9754, {%r8393, %r8392};
	shf.l.wrap.b32 	%r8394, %r8390, %r8391, 30;
	shf.l.wrap.b32 	%r8395, %r8391, %r8390, 30;
	mov.b64 	%rd9755, {%r8395, %r8394};
	xor.b64  	%rd9756, %rd9754, %rd9755;
	shf.l.wrap.b32 	%r8396, %r8390, %r8391, 25;
	shf.l.wrap.b32 	%r8397, %r8391, %r8390, 25;
	mov.b64 	%rd9757, {%r8397, %r8396};
	xor.b64  	%rd9758, %rd9756, %rd9757;
	xor.b64  	%rd9759, %rd9715, %rd9690;
	and.b64  	%rd9760, %rd9740, %rd9759;
	and.b64  	%rd9761, %rd9715, %rd9690;
	xor.b64  	%rd9762, %rd9760, %rd9761;
	add.s64 	%rd9763, %rd9758, %rd9762;
	add.s64 	%rd9764, %rd9753, %rd9665;
	add.s64 	%rd9765, %rd9763, %rd9753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8398,%dummy}, %rd9764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8399}, %rd9764;
	}
	shf.r.wrap.b32 	%r8400, %r8399, %r8398, 14;
	shf.r.wrap.b32 	%r8401, %r8398, %r8399, 14;
	mov.b64 	%rd9766, {%r8401, %r8400};
	shf.r.wrap.b32 	%r8402, %r8399, %r8398, 18;
	shf.r.wrap.b32 	%r8403, %r8398, %r8399, 18;
	mov.b64 	%rd9767, {%r8403, %r8402};
	xor.b64  	%rd9768, %rd9766, %rd9767;
	shf.l.wrap.b32 	%r8404, %r8398, %r8399, 23;
	shf.l.wrap.b32 	%r8405, %r8399, %r8398, 23;
	mov.b64 	%rd9769, {%r8405, %r8404};
	xor.b64  	%rd9770, %rd9768, %rd9769;
	and.b64  	%rd9771, %rd9764, %rd9739;
	not.b64 	%rd9772, %rd9764;
	and.b64  	%rd9773, %rd9714, %rd9772;
	or.b64  	%rd9774, %rd9771, %rd9773;
	add.s64 	%rd9775, %rd9774, %rd9689;
	add.s64 	%rd9776, %rd9775, %rd9770;
	add.s64 	%rd9777, %rd9776, %rd94;
	add.s64 	%rd9778, %rd9777, %rd8110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8406,%dummy}, %rd9765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8407}, %rd9765;
	}
	shf.r.wrap.b32 	%r8408, %r8407, %r8406, 28;
	shf.r.wrap.b32 	%r8409, %r8406, %r8407, 28;
	mov.b64 	%rd9779, {%r8409, %r8408};
	shf.l.wrap.b32 	%r8410, %r8406, %r8407, 30;
	shf.l.wrap.b32 	%r8411, %r8407, %r8406, 30;
	mov.b64 	%rd9780, {%r8411, %r8410};
	xor.b64  	%rd9781, %rd9779, %rd9780;
	shf.l.wrap.b32 	%r8412, %r8406, %r8407, 25;
	shf.l.wrap.b32 	%r8413, %r8407, %r8406, 25;
	mov.b64 	%rd9782, {%r8413, %r8412};
	xor.b64  	%rd9783, %rd9781, %rd9782;
	xor.b64  	%rd9784, %rd9740, %rd9715;
	and.b64  	%rd9785, %rd9765, %rd9784;
	and.b64  	%rd9786, %rd9740, %rd9715;
	xor.b64  	%rd9787, %rd9785, %rd9786;
	add.s64 	%rd9788, %rd9783, %rd9787;
	add.s64 	%rd9789, %rd9778, %rd9690;
	add.s64 	%rd9790, %rd9788, %rd9778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8414,%dummy}, %rd9789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8415}, %rd9789;
	}
	shf.r.wrap.b32 	%r8416, %r8415, %r8414, 14;
	shf.r.wrap.b32 	%r8417, %r8414, %r8415, 14;
	mov.b64 	%rd9791, {%r8417, %r8416};
	shf.r.wrap.b32 	%r8418, %r8415, %r8414, 18;
	shf.r.wrap.b32 	%r8419, %r8414, %r8415, 18;
	mov.b64 	%rd9792, {%r8419, %r8418};
	xor.b64  	%rd9793, %rd9791, %rd9792;
	shf.l.wrap.b32 	%r8420, %r8414, %r8415, 23;
	shf.l.wrap.b32 	%r8421, %r8415, %r8414, 23;
	mov.b64 	%rd9794, {%r8421, %r8420};
	xor.b64  	%rd9795, %rd9793, %rd9794;
	and.b64  	%rd9796, %rd9789, %rd9764;
	not.b64 	%rd9797, %rd9789;
	and.b64  	%rd9798, %rd9739, %rd9797;
	or.b64  	%rd9799, %rd9796, %rd9798;
	add.s64 	%rd9800, %rd9799, %rd9714;
	add.s64 	%rd9801, %rd9800, %rd9795;
	add.s64 	%rd9802, %rd9801, %rd95;
	add.s64 	%rd9803, %rd9802, %rd8123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8422,%dummy}, %rd9790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8423}, %rd9790;
	}
	shf.r.wrap.b32 	%r8424, %r8423, %r8422, 28;
	shf.r.wrap.b32 	%r8425, %r8422, %r8423, 28;
	mov.b64 	%rd9804, {%r8425, %r8424};
	shf.l.wrap.b32 	%r8426, %r8422, %r8423, 30;
	shf.l.wrap.b32 	%r8427, %r8423, %r8422, 30;
	mov.b64 	%rd9805, {%r8427, %r8426};
	xor.b64  	%rd9806, %rd9804, %rd9805;
	shf.l.wrap.b32 	%r8428, %r8422, %r8423, 25;
	shf.l.wrap.b32 	%r8429, %r8423, %r8422, 25;
	mov.b64 	%rd9807, {%r8429, %r8428};
	xor.b64  	%rd9808, %rd9806, %rd9807;
	xor.b64  	%rd9809, %rd9765, %rd9740;
	and.b64  	%rd9810, %rd9790, %rd9809;
	and.b64  	%rd9811, %rd9765, %rd9740;
	xor.b64  	%rd9812, %rd9810, %rd9811;
	add.s64 	%rd9813, %rd9808, %rd9812;
	add.s64 	%rd9814, %rd9803, %rd9715;
	add.s64 	%rd9815, %rd9813, %rd9803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8430,%dummy}, %rd9814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8431}, %rd9814;
	}
	shf.r.wrap.b32 	%r8432, %r8431, %r8430, 14;
	shf.r.wrap.b32 	%r8433, %r8430, %r8431, 14;
	mov.b64 	%rd9816, {%r8433, %r8432};
	shf.r.wrap.b32 	%r8434, %r8431, %r8430, 18;
	shf.r.wrap.b32 	%r8435, %r8430, %r8431, 18;
	mov.b64 	%rd9817, {%r8435, %r8434};
	xor.b64  	%rd9818, %rd9816, %rd9817;
	shf.l.wrap.b32 	%r8436, %r8430, %r8431, 23;
	shf.l.wrap.b32 	%r8437, %r8431, %r8430, 23;
	mov.b64 	%rd9819, {%r8437, %r8436};
	xor.b64  	%rd9820, %rd9818, %rd9819;
	and.b64  	%rd9821, %rd9814, %rd9789;
	not.b64 	%rd9822, %rd9814;
	and.b64  	%rd9823, %rd9764, %rd9822;
	or.b64  	%rd9824, %rd9821, %rd9823;
	add.s64 	%rd9825, %rd9824, %rd9739;
	add.s64 	%rd9826, %rd9825, %rd9820;
	add.s64 	%rd9827, %rd9826, %rd96;
	add.s64 	%rd9828, %rd9827, %rd8136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8438,%dummy}, %rd9815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8439}, %rd9815;
	}
	shf.r.wrap.b32 	%r8440, %r8439, %r8438, 28;
	shf.r.wrap.b32 	%r8441, %r8438, %r8439, 28;
	mov.b64 	%rd9829, {%r8441, %r8440};
	shf.l.wrap.b32 	%r8442, %r8438, %r8439, 30;
	shf.l.wrap.b32 	%r8443, %r8439, %r8438, 30;
	mov.b64 	%rd9830, {%r8443, %r8442};
	xor.b64  	%rd9831, %rd9829, %rd9830;
	shf.l.wrap.b32 	%r8444, %r8438, %r8439, 25;
	shf.l.wrap.b32 	%r8445, %r8439, %r8438, 25;
	mov.b64 	%rd9832, {%r8445, %r8444};
	xor.b64  	%rd9833, %rd9831, %rd9832;
	xor.b64  	%rd9834, %rd9790, %rd9765;
	and.b64  	%rd9835, %rd9815, %rd9834;
	and.b64  	%rd9836, %rd9790, %rd9765;
	xor.b64  	%rd9837, %rd9835, %rd9836;
	add.s64 	%rd9838, %rd9833, %rd9837;
	add.s64 	%rd9839, %rd9828, %rd9740;
	add.s64 	%rd9840, %rd9838, %rd9828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8446,%dummy}, %rd9839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8447}, %rd9839;
	}
	shf.r.wrap.b32 	%r8448, %r8447, %r8446, 14;
	shf.r.wrap.b32 	%r8449, %r8446, %r8447, 14;
	mov.b64 	%rd9841, {%r8449, %r8448};
	shf.r.wrap.b32 	%r8450, %r8447, %r8446, 18;
	shf.r.wrap.b32 	%r8451, %r8446, %r8447, 18;
	mov.b64 	%rd9842, {%r8451, %r8450};
	xor.b64  	%rd9843, %rd9841, %rd9842;
	shf.l.wrap.b32 	%r8452, %r8446, %r8447, 23;
	shf.l.wrap.b32 	%r8453, %r8447, %r8446, 23;
	mov.b64 	%rd9844, {%r8453, %r8452};
	xor.b64  	%rd9845, %rd9843, %rd9844;
	and.b64  	%rd9846, %rd9839, %rd9814;
	not.b64 	%rd9847, %rd9839;
	and.b64  	%rd9848, %rd9789, %rd9847;
	or.b64  	%rd9849, %rd9846, %rd9848;
	add.s64 	%rd9850, %rd9849, %rd9764;
	add.s64 	%rd9851, %rd9850, %rd9845;
	add.s64 	%rd9852, %rd9851, %rd97;
	add.s64 	%rd9853, %rd9852, %rd8149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8454,%dummy}, %rd9840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8455}, %rd9840;
	}
	shf.r.wrap.b32 	%r8456, %r8455, %r8454, 28;
	shf.r.wrap.b32 	%r8457, %r8454, %r8455, 28;
	mov.b64 	%rd9854, {%r8457, %r8456};
	shf.l.wrap.b32 	%r8458, %r8454, %r8455, 30;
	shf.l.wrap.b32 	%r8459, %r8455, %r8454, 30;
	mov.b64 	%rd9855, {%r8459, %r8458};
	xor.b64  	%rd9856, %rd9854, %rd9855;
	shf.l.wrap.b32 	%r8460, %r8454, %r8455, 25;
	shf.l.wrap.b32 	%r8461, %r8455, %r8454, 25;
	mov.b64 	%rd9857, {%r8461, %r8460};
	xor.b64  	%rd9858, %rd9856, %rd9857;
	xor.b64  	%rd9859, %rd9815, %rd9790;
	and.b64  	%rd9860, %rd9840, %rd9859;
	and.b64  	%rd9861, %rd9815, %rd9790;
	xor.b64  	%rd9862, %rd9860, %rd9861;
	add.s64 	%rd9863, %rd9858, %rd9862;
	add.s64 	%rd9864, %rd9853, %rd9765;
	add.s64 	%rd9865, %rd9863, %rd9853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8462,%dummy}, %rd9864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8463}, %rd9864;
	}
	shf.r.wrap.b32 	%r8464, %r8463, %r8462, 14;
	shf.r.wrap.b32 	%r8465, %r8462, %r8463, 14;
	mov.b64 	%rd9866, {%r8465, %r8464};
	shf.r.wrap.b32 	%r8466, %r8463, %r8462, 18;
	shf.r.wrap.b32 	%r8467, %r8462, %r8463, 18;
	mov.b64 	%rd9867, {%r8467, %r8466};
	xor.b64  	%rd9868, %rd9866, %rd9867;
	shf.l.wrap.b32 	%r8468, %r8462, %r8463, 23;
	shf.l.wrap.b32 	%r8469, %r8463, %r8462, 23;
	mov.b64 	%rd9869, {%r8469, %r8468};
	xor.b64  	%rd9870, %rd9868, %rd9869;
	and.b64  	%rd9871, %rd9864, %rd9839;
	not.b64 	%rd9872, %rd9864;
	and.b64  	%rd9873, %rd9814, %rd9872;
	or.b64  	%rd9874, %rd9871, %rd9873;
	add.s64 	%rd9875, %rd9874, %rd9789;
	add.s64 	%rd9876, %rd9875, %rd9870;
	add.s64 	%rd9877, %rd9876, %rd98;
	add.s64 	%rd9878, %rd9877, %rd8162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8470,%dummy}, %rd9865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8471}, %rd9865;
	}
	shf.r.wrap.b32 	%r8472, %r8471, %r8470, 28;
	shf.r.wrap.b32 	%r8473, %r8470, %r8471, 28;
	mov.b64 	%rd9879, {%r8473, %r8472};
	shf.l.wrap.b32 	%r8474, %r8470, %r8471, 30;
	shf.l.wrap.b32 	%r8475, %r8471, %r8470, 30;
	mov.b64 	%rd9880, {%r8475, %r8474};
	xor.b64  	%rd9881, %rd9879, %rd9880;
	shf.l.wrap.b32 	%r8476, %r8470, %r8471, 25;
	shf.l.wrap.b32 	%r8477, %r8471, %r8470, 25;
	mov.b64 	%rd9882, {%r8477, %r8476};
	xor.b64  	%rd9883, %rd9881, %rd9882;
	xor.b64  	%rd9884, %rd9840, %rd9815;
	and.b64  	%rd9885, %rd9865, %rd9884;
	and.b64  	%rd9886, %rd9840, %rd9815;
	xor.b64  	%rd9887, %rd9885, %rd9886;
	add.s64 	%rd9888, %rd9883, %rd9887;
	add.s64 	%rd9889, %rd9878, %rd9790;
	add.s64 	%rd9890, %rd9888, %rd9878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8478,%dummy}, %rd9889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8479}, %rd9889;
	}
	shf.r.wrap.b32 	%r8480, %r8479, %r8478, 14;
	shf.r.wrap.b32 	%r8481, %r8478, %r8479, 14;
	mov.b64 	%rd9891, {%r8481, %r8480};
	shf.r.wrap.b32 	%r8482, %r8479, %r8478, 18;
	shf.r.wrap.b32 	%r8483, %r8478, %r8479, 18;
	mov.b64 	%rd9892, {%r8483, %r8482};
	xor.b64  	%rd9893, %rd9891, %rd9892;
	shf.l.wrap.b32 	%r8484, %r8478, %r8479, 23;
	shf.l.wrap.b32 	%r8485, %r8479, %r8478, 23;
	mov.b64 	%rd9894, {%r8485, %r8484};
	xor.b64  	%rd9895, %rd9893, %rd9894;
	and.b64  	%rd9896, %rd9889, %rd9864;
	not.b64 	%rd9897, %rd9889;
	and.b64  	%rd9898, %rd9839, %rd9897;
	or.b64  	%rd9899, %rd9896, %rd9898;
	add.s64 	%rd9900, %rd9899, %rd9814;
	add.s64 	%rd9901, %rd9900, %rd9895;
	add.s64 	%rd9902, %rd9901, %rd99;
	add.s64 	%rd9903, %rd9902, %rd8175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8486,%dummy}, %rd9890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8487}, %rd9890;
	}
	shf.r.wrap.b32 	%r8488, %r8487, %r8486, 28;
	shf.r.wrap.b32 	%r8489, %r8486, %r8487, 28;
	mov.b64 	%rd9904, {%r8489, %r8488};
	shf.l.wrap.b32 	%r8490, %r8486, %r8487, 30;
	shf.l.wrap.b32 	%r8491, %r8487, %r8486, 30;
	mov.b64 	%rd9905, {%r8491, %r8490};
	xor.b64  	%rd9906, %rd9904, %rd9905;
	shf.l.wrap.b32 	%r8492, %r8486, %r8487, 25;
	shf.l.wrap.b32 	%r8493, %r8487, %r8486, 25;
	mov.b64 	%rd9907, {%r8493, %r8492};
	xor.b64  	%rd9908, %rd9906, %rd9907;
	xor.b64  	%rd9909, %rd9865, %rd9840;
	and.b64  	%rd9910, %rd9890, %rd9909;
	and.b64  	%rd9911, %rd9865, %rd9840;
	xor.b64  	%rd9912, %rd9910, %rd9911;
	add.s64 	%rd9913, %rd9908, %rd9912;
	add.s64 	%rd9914, %rd9903, %rd9815;
	add.s64 	%rd9915, %rd9913, %rd9903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8494,%dummy}, %rd9914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8495}, %rd9914;
	}
	shf.r.wrap.b32 	%r8496, %r8495, %r8494, 14;
	shf.r.wrap.b32 	%r8497, %r8494, %r8495, 14;
	mov.b64 	%rd9916, {%r8497, %r8496};
	shf.r.wrap.b32 	%r8498, %r8495, %r8494, 18;
	shf.r.wrap.b32 	%r8499, %r8494, %r8495, 18;
	mov.b64 	%rd9917, {%r8499, %r8498};
	xor.b64  	%rd9918, %rd9916, %rd9917;
	shf.l.wrap.b32 	%r8500, %r8494, %r8495, 23;
	shf.l.wrap.b32 	%r8501, %r8495, %r8494, 23;
	mov.b64 	%rd9919, {%r8501, %r8500};
	xor.b64  	%rd9920, %rd9918, %rd9919;
	and.b64  	%rd9921, %rd9914, %rd9889;
	not.b64 	%rd9922, %rd9914;
	and.b64  	%rd9923, %rd9864, %rd9922;
	or.b64  	%rd9924, %rd9921, %rd9923;
	add.s64 	%rd9925, %rd9924, %rd9839;
	add.s64 	%rd9926, %rd9925, %rd9920;
	add.s64 	%rd9927, %rd9926, %rd100;
	add.s64 	%rd9928, %rd9927, %rd8188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8502,%dummy}, %rd9915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8503}, %rd9915;
	}
	shf.r.wrap.b32 	%r8504, %r8503, %r8502, 28;
	shf.r.wrap.b32 	%r8505, %r8502, %r8503, 28;
	mov.b64 	%rd9929, {%r8505, %r8504};
	shf.l.wrap.b32 	%r8506, %r8502, %r8503, 30;
	shf.l.wrap.b32 	%r8507, %r8503, %r8502, 30;
	mov.b64 	%rd9930, {%r8507, %r8506};
	xor.b64  	%rd9931, %rd9929, %rd9930;
	shf.l.wrap.b32 	%r8508, %r8502, %r8503, 25;
	shf.l.wrap.b32 	%r8509, %r8503, %r8502, 25;
	mov.b64 	%rd9932, {%r8509, %r8508};
	xor.b64  	%rd9933, %rd9931, %rd9932;
	xor.b64  	%rd9934, %rd9890, %rd9865;
	and.b64  	%rd9935, %rd9915, %rd9934;
	and.b64  	%rd9936, %rd9890, %rd9865;
	xor.b64  	%rd9937, %rd9935, %rd9936;
	add.s64 	%rd9938, %rd9933, %rd9937;
	add.s64 	%rd9939, %rd9928, %rd9840;
	add.s64 	%rd9940, %rd9938, %rd9928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8510,%dummy}, %rd9939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8511}, %rd9939;
	}
	shf.r.wrap.b32 	%r8512, %r8511, %r8510, 14;
	shf.r.wrap.b32 	%r8513, %r8510, %r8511, 14;
	mov.b64 	%rd9941, {%r8513, %r8512};
	shf.r.wrap.b32 	%r8514, %r8511, %r8510, 18;
	shf.r.wrap.b32 	%r8515, %r8510, %r8511, 18;
	mov.b64 	%rd9942, {%r8515, %r8514};
	xor.b64  	%rd9943, %rd9941, %rd9942;
	shf.l.wrap.b32 	%r8516, %r8510, %r8511, 23;
	shf.l.wrap.b32 	%r8517, %r8511, %r8510, 23;
	mov.b64 	%rd9944, {%r8517, %r8516};
	xor.b64  	%rd9945, %rd9943, %rd9944;
	and.b64  	%rd9946, %rd9939, %rd9914;
	not.b64 	%rd9947, %rd9939;
	and.b64  	%rd9948, %rd9889, %rd9947;
	or.b64  	%rd9949, %rd9946, %rd9948;
	add.s64 	%rd9950, %rd9949, %rd9864;
	add.s64 	%rd9951, %rd9950, %rd9945;
	add.s64 	%rd9952, %rd9951, %rd101;
	add.s64 	%rd9953, %rd9952, %rd8201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8518,%dummy}, %rd9940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8519}, %rd9940;
	}
	shf.r.wrap.b32 	%r8520, %r8519, %r8518, 28;
	shf.r.wrap.b32 	%r8521, %r8518, %r8519, 28;
	mov.b64 	%rd9954, {%r8521, %r8520};
	shf.l.wrap.b32 	%r8522, %r8518, %r8519, 30;
	shf.l.wrap.b32 	%r8523, %r8519, %r8518, 30;
	mov.b64 	%rd9955, {%r8523, %r8522};
	xor.b64  	%rd9956, %rd9954, %rd9955;
	shf.l.wrap.b32 	%r8524, %r8518, %r8519, 25;
	shf.l.wrap.b32 	%r8525, %r8519, %r8518, 25;
	mov.b64 	%rd9957, {%r8525, %r8524};
	xor.b64  	%rd9958, %rd9956, %rd9957;
	xor.b64  	%rd9959, %rd9915, %rd9890;
	and.b64  	%rd9960, %rd9940, %rd9959;
	and.b64  	%rd9961, %rd9915, %rd9890;
	xor.b64  	%rd9962, %rd9960, %rd9961;
	add.s64 	%rd9963, %rd9958, %rd9962;
	add.s64 	%rd9964, %rd9953, %rd9865;
	add.s64 	%rd9965, %rd9963, %rd9953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8526,%dummy}, %rd9964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8527}, %rd9964;
	}
	shf.r.wrap.b32 	%r8528, %r8527, %r8526, 14;
	shf.r.wrap.b32 	%r8529, %r8526, %r8527, 14;
	mov.b64 	%rd9966, {%r8529, %r8528};
	shf.r.wrap.b32 	%r8530, %r8527, %r8526, 18;
	shf.r.wrap.b32 	%r8531, %r8526, %r8527, 18;
	mov.b64 	%rd9967, {%r8531, %r8530};
	xor.b64  	%rd9968, %rd9966, %rd9967;
	shf.l.wrap.b32 	%r8532, %r8526, %r8527, 23;
	shf.l.wrap.b32 	%r8533, %r8527, %r8526, 23;
	mov.b64 	%rd9969, {%r8533, %r8532};
	xor.b64  	%rd9970, %rd9968, %rd9969;
	and.b64  	%rd9971, %rd9964, %rd9939;
	not.b64 	%rd9972, %rd9964;
	and.b64  	%rd9973, %rd9914, %rd9972;
	or.b64  	%rd9974, %rd9971, %rd9973;
	add.s64 	%rd9975, %rd9974, %rd9889;
	add.s64 	%rd9976, %rd9975, %rd9970;
	add.s64 	%rd9977, %rd9976, %rd102;
	add.s64 	%rd9978, %rd9977, %rd8214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8534,%dummy}, %rd9965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8535}, %rd9965;
	}
	shf.r.wrap.b32 	%r8536, %r8535, %r8534, 28;
	shf.r.wrap.b32 	%r8537, %r8534, %r8535, 28;
	mov.b64 	%rd9979, {%r8537, %r8536};
	shf.l.wrap.b32 	%r8538, %r8534, %r8535, 30;
	shf.l.wrap.b32 	%r8539, %r8535, %r8534, 30;
	mov.b64 	%rd9980, {%r8539, %r8538};
	xor.b64  	%rd9981, %rd9979, %rd9980;
	shf.l.wrap.b32 	%r8540, %r8534, %r8535, 25;
	shf.l.wrap.b32 	%r8541, %r8535, %r8534, 25;
	mov.b64 	%rd9982, {%r8541, %r8540};
	xor.b64  	%rd9983, %rd9981, %rd9982;
	xor.b64  	%rd9984, %rd9940, %rd9915;
	and.b64  	%rd9985, %rd9965, %rd9984;
	and.b64  	%rd9986, %rd9940, %rd9915;
	xor.b64  	%rd9987, %rd9985, %rd9986;
	add.s64 	%rd9988, %rd9983, %rd9987;
	add.s64 	%rd9989, %rd9978, %rd9890;
	add.s64 	%rd9990, %rd9988, %rd9978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8542,%dummy}, %rd9989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8543}, %rd9989;
	}
	shf.r.wrap.b32 	%r8544, %r8543, %r8542, 14;
	shf.r.wrap.b32 	%r8545, %r8542, %r8543, 14;
	mov.b64 	%rd9991, {%r8545, %r8544};
	shf.r.wrap.b32 	%r8546, %r8543, %r8542, 18;
	shf.r.wrap.b32 	%r8547, %r8542, %r8543, 18;
	mov.b64 	%rd9992, {%r8547, %r8546};
	xor.b64  	%rd9993, %rd9991, %rd9992;
	shf.l.wrap.b32 	%r8548, %r8542, %r8543, 23;
	shf.l.wrap.b32 	%r8549, %r8543, %r8542, 23;
	mov.b64 	%rd9994, {%r8549, %r8548};
	xor.b64  	%rd9995, %rd9993, %rd9994;
	and.b64  	%rd9996, %rd9989, %rd9964;
	not.b64 	%rd9997, %rd9989;
	and.b64  	%rd9998, %rd9939, %rd9997;
	or.b64  	%rd9999, %rd9996, %rd9998;
	add.s64 	%rd10000, %rd9999, %rd9914;
	add.s64 	%rd10001, %rd10000, %rd9995;
	add.s64 	%rd10002, %rd10001, %rd103;
	add.s64 	%rd10003, %rd10002, %rd8227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8550,%dummy}, %rd9990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8551}, %rd9990;
	}
	shf.r.wrap.b32 	%r8552, %r8551, %r8550, 28;
	shf.r.wrap.b32 	%r8553, %r8550, %r8551, 28;
	mov.b64 	%rd10004, {%r8553, %r8552};
	shf.l.wrap.b32 	%r8554, %r8550, %r8551, 30;
	shf.l.wrap.b32 	%r8555, %r8551, %r8550, 30;
	mov.b64 	%rd10005, {%r8555, %r8554};
	xor.b64  	%rd10006, %rd10004, %rd10005;
	shf.l.wrap.b32 	%r8556, %r8550, %r8551, 25;
	shf.l.wrap.b32 	%r8557, %r8551, %r8550, 25;
	mov.b64 	%rd10007, {%r8557, %r8556};
	xor.b64  	%rd10008, %rd10006, %rd10007;
	xor.b64  	%rd10009, %rd9965, %rd9940;
	and.b64  	%rd10010, %rd9990, %rd10009;
	and.b64  	%rd10011, %rd9965, %rd9940;
	xor.b64  	%rd10012, %rd10010, %rd10011;
	add.s64 	%rd10013, %rd10008, %rd10012;
	add.s64 	%rd10014, %rd10003, %rd9915;
	add.s64 	%rd10015, %rd10013, %rd10003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8558,%dummy}, %rd10014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8559}, %rd10014;
	}
	shf.r.wrap.b32 	%r8560, %r8559, %r8558, 14;
	shf.r.wrap.b32 	%r8561, %r8558, %r8559, 14;
	mov.b64 	%rd10016, {%r8561, %r8560};
	shf.r.wrap.b32 	%r8562, %r8559, %r8558, 18;
	shf.r.wrap.b32 	%r8563, %r8558, %r8559, 18;
	mov.b64 	%rd10017, {%r8563, %r8562};
	xor.b64  	%rd10018, %rd10016, %rd10017;
	shf.l.wrap.b32 	%r8564, %r8558, %r8559, 23;
	shf.l.wrap.b32 	%r8565, %r8559, %r8558, 23;
	mov.b64 	%rd10019, {%r8565, %r8564};
	xor.b64  	%rd10020, %rd10018, %rd10019;
	and.b64  	%rd10021, %rd10014, %rd9989;
	not.b64 	%rd10022, %rd10014;
	and.b64  	%rd10023, %rd9964, %rd10022;
	or.b64  	%rd10024, %rd10021, %rd10023;
	add.s64 	%rd10025, %rd10024, %rd9939;
	add.s64 	%rd10026, %rd10025, %rd10020;
	add.s64 	%rd10027, %rd10026, %rd104;
	add.s64 	%rd10028, %rd10027, %rd8240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8566,%dummy}, %rd10015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8567}, %rd10015;
	}
	shf.r.wrap.b32 	%r8568, %r8567, %r8566, 28;
	shf.r.wrap.b32 	%r8569, %r8566, %r8567, 28;
	mov.b64 	%rd10029, {%r8569, %r8568};
	shf.l.wrap.b32 	%r8570, %r8566, %r8567, 30;
	shf.l.wrap.b32 	%r8571, %r8567, %r8566, 30;
	mov.b64 	%rd10030, {%r8571, %r8570};
	xor.b64  	%rd10031, %rd10029, %rd10030;
	shf.l.wrap.b32 	%r8572, %r8566, %r8567, 25;
	shf.l.wrap.b32 	%r8573, %r8567, %r8566, 25;
	mov.b64 	%rd10032, {%r8573, %r8572};
	xor.b64  	%rd10033, %rd10031, %rd10032;
	xor.b64  	%rd10034, %rd9990, %rd9965;
	and.b64  	%rd10035, %rd10015, %rd10034;
	and.b64  	%rd10036, %rd9990, %rd9965;
	xor.b64  	%rd10037, %rd10035, %rd10036;
	add.s64 	%rd10038, %rd10033, %rd10037;
	add.s64 	%rd10039, %rd10028, %rd9940;
	add.s64 	%rd10040, %rd10038, %rd10028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8574,%dummy}, %rd10039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8575}, %rd10039;
	}
	shf.r.wrap.b32 	%r8576, %r8575, %r8574, 14;
	shf.r.wrap.b32 	%r8577, %r8574, %r8575, 14;
	mov.b64 	%rd10041, {%r8577, %r8576};
	shf.r.wrap.b32 	%r8578, %r8575, %r8574, 18;
	shf.r.wrap.b32 	%r8579, %r8574, %r8575, 18;
	mov.b64 	%rd10042, {%r8579, %r8578};
	xor.b64  	%rd10043, %rd10041, %rd10042;
	shf.l.wrap.b32 	%r8580, %r8574, %r8575, 23;
	shf.l.wrap.b32 	%r8581, %r8575, %r8574, 23;
	mov.b64 	%rd10044, {%r8581, %r8580};
	xor.b64  	%rd10045, %rd10043, %rd10044;
	and.b64  	%rd10046, %rd10039, %rd10014;
	not.b64 	%rd10047, %rd10039;
	and.b64  	%rd10048, %rd9989, %rd10047;
	or.b64  	%rd10049, %rd10046, %rd10048;
	add.s64 	%rd10050, %rd10049, %rd9964;
	add.s64 	%rd10051, %rd10050, %rd10045;
	add.s64 	%rd10052, %rd10051, %rd105;
	add.s64 	%rd10053, %rd10052, %rd8253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8582,%dummy}, %rd10040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8583}, %rd10040;
	}
	shf.r.wrap.b32 	%r8584, %r8583, %r8582, 28;
	shf.r.wrap.b32 	%r8585, %r8582, %r8583, 28;
	mov.b64 	%rd10054, {%r8585, %r8584};
	shf.l.wrap.b32 	%r8586, %r8582, %r8583, 30;
	shf.l.wrap.b32 	%r8587, %r8583, %r8582, 30;
	mov.b64 	%rd10055, {%r8587, %r8586};
	xor.b64  	%rd10056, %rd10054, %rd10055;
	shf.l.wrap.b32 	%r8588, %r8582, %r8583, 25;
	shf.l.wrap.b32 	%r8589, %r8583, %r8582, 25;
	mov.b64 	%rd10057, {%r8589, %r8588};
	xor.b64  	%rd10058, %rd10056, %rd10057;
	xor.b64  	%rd10059, %rd10015, %rd9990;
	and.b64  	%rd10060, %rd10040, %rd10059;
	and.b64  	%rd10061, %rd10015, %rd9990;
	xor.b64  	%rd10062, %rd10060, %rd10061;
	add.s64 	%rd10063, %rd10058, %rd10062;
	add.s64 	%rd10064, %rd10053, %rd9965;
	add.s64 	%rd10065, %rd10063, %rd10053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8590,%dummy}, %rd10064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8591}, %rd10064;
	}
	shf.r.wrap.b32 	%r8592, %r8591, %r8590, 14;
	shf.r.wrap.b32 	%r8593, %r8590, %r8591, 14;
	mov.b64 	%rd10066, {%r8593, %r8592};
	shf.r.wrap.b32 	%r8594, %r8591, %r8590, 18;
	shf.r.wrap.b32 	%r8595, %r8590, %r8591, 18;
	mov.b64 	%rd10067, {%r8595, %r8594};
	xor.b64  	%rd10068, %rd10066, %rd10067;
	shf.l.wrap.b32 	%r8596, %r8590, %r8591, 23;
	shf.l.wrap.b32 	%r8597, %r8591, %r8590, 23;
	mov.b64 	%rd10069, {%r8597, %r8596};
	xor.b64  	%rd10070, %rd10068, %rd10069;
	and.b64  	%rd10071, %rd10064, %rd10039;
	not.b64 	%rd10072, %rd10064;
	and.b64  	%rd10073, %rd10014, %rd10072;
	or.b64  	%rd10074, %rd10071, %rd10073;
	add.s64 	%rd10075, %rd10074, %rd9989;
	add.s64 	%rd10076, %rd10075, %rd10070;
	add.s64 	%rd10077, %rd10076, %rd106;
	add.s64 	%rd10078, %rd10077, %rd8266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8598,%dummy}, %rd10065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8599}, %rd10065;
	}
	shf.r.wrap.b32 	%r8600, %r8599, %r8598, 28;
	shf.r.wrap.b32 	%r8601, %r8598, %r8599, 28;
	mov.b64 	%rd10079, {%r8601, %r8600};
	shf.l.wrap.b32 	%r8602, %r8598, %r8599, 30;
	shf.l.wrap.b32 	%r8603, %r8599, %r8598, 30;
	mov.b64 	%rd10080, {%r8603, %r8602};
	xor.b64  	%rd10081, %rd10079, %rd10080;
	shf.l.wrap.b32 	%r8604, %r8598, %r8599, 25;
	shf.l.wrap.b32 	%r8605, %r8599, %r8598, 25;
	mov.b64 	%rd10082, {%r8605, %r8604};
	xor.b64  	%rd10083, %rd10081, %rd10082;
	xor.b64  	%rd10084, %rd10040, %rd10015;
	and.b64  	%rd10085, %rd10065, %rd10084;
	and.b64  	%rd10086, %rd10040, %rd10015;
	xor.b64  	%rd10087, %rd10085, %rd10086;
	add.s64 	%rd10088, %rd10083, %rd10087;
	add.s64 	%rd10089, %rd10078, %rd9990;
	add.s64 	%rd10090, %rd10088, %rd10078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8606,%dummy}, %rd10089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8607}, %rd10089;
	}
	shf.r.wrap.b32 	%r8608, %r8607, %r8606, 14;
	shf.r.wrap.b32 	%r8609, %r8606, %r8607, 14;
	mov.b64 	%rd10091, {%r8609, %r8608};
	shf.r.wrap.b32 	%r8610, %r8607, %r8606, 18;
	shf.r.wrap.b32 	%r8611, %r8606, %r8607, 18;
	mov.b64 	%rd10092, {%r8611, %r8610};
	xor.b64  	%rd10093, %rd10091, %rd10092;
	shf.l.wrap.b32 	%r8612, %r8606, %r8607, 23;
	shf.l.wrap.b32 	%r8613, %r8607, %r8606, 23;
	mov.b64 	%rd10094, {%r8613, %r8612};
	xor.b64  	%rd10095, %rd10093, %rd10094;
	and.b64  	%rd10096, %rd10089, %rd10064;
	not.b64 	%rd10097, %rd10089;
	and.b64  	%rd10098, %rd10039, %rd10097;
	or.b64  	%rd10099, %rd10096, %rd10098;
	add.s64 	%rd10100, %rd10099, %rd10014;
	add.s64 	%rd10101, %rd10100, %rd10095;
	add.s64 	%rd10102, %rd10101, %rd107;
	add.s64 	%rd10103, %rd10102, %rd8279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8614,%dummy}, %rd10090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8615}, %rd10090;
	}
	shf.r.wrap.b32 	%r8616, %r8615, %r8614, 28;
	shf.r.wrap.b32 	%r8617, %r8614, %r8615, 28;
	mov.b64 	%rd10104, {%r8617, %r8616};
	shf.l.wrap.b32 	%r8618, %r8614, %r8615, 30;
	shf.l.wrap.b32 	%r8619, %r8615, %r8614, 30;
	mov.b64 	%rd10105, {%r8619, %r8618};
	xor.b64  	%rd10106, %rd10104, %rd10105;
	shf.l.wrap.b32 	%r8620, %r8614, %r8615, 25;
	shf.l.wrap.b32 	%r8621, %r8615, %r8614, 25;
	mov.b64 	%rd10107, {%r8621, %r8620};
	xor.b64  	%rd10108, %rd10106, %rd10107;
	xor.b64  	%rd10109, %rd10065, %rd10040;
	and.b64  	%rd10110, %rd10090, %rd10109;
	and.b64  	%rd10111, %rd10065, %rd10040;
	xor.b64  	%rd10112, %rd10110, %rd10111;
	add.s64 	%rd10113, %rd10108, %rd10112;
	add.s64 	%rd10114, %rd10103, %rd10015;
	add.s64 	%rd10115, %rd10113, %rd10103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8622,%dummy}, %rd10114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8623}, %rd10114;
	}
	shf.r.wrap.b32 	%r8624, %r8623, %r8622, 14;
	shf.r.wrap.b32 	%r8625, %r8622, %r8623, 14;
	mov.b64 	%rd10116, {%r8625, %r8624};
	shf.r.wrap.b32 	%r8626, %r8623, %r8622, 18;
	shf.r.wrap.b32 	%r8627, %r8622, %r8623, 18;
	mov.b64 	%rd10117, {%r8627, %r8626};
	xor.b64  	%rd10118, %rd10116, %rd10117;
	shf.l.wrap.b32 	%r8628, %r8622, %r8623, 23;
	shf.l.wrap.b32 	%r8629, %r8623, %r8622, 23;
	mov.b64 	%rd10119, {%r8629, %r8628};
	xor.b64  	%rd10120, %rd10118, %rd10119;
	and.b64  	%rd10121, %rd10114, %rd10089;
	not.b64 	%rd10122, %rd10114;
	and.b64  	%rd10123, %rd10064, %rd10122;
	or.b64  	%rd10124, %rd10121, %rd10123;
	add.s64 	%rd10125, %rd10124, %rd10039;
	add.s64 	%rd10126, %rd10125, %rd10120;
	add.s64 	%rd10127, %rd10126, %rd108;
	add.s64 	%rd10128, %rd10127, %rd8292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8630,%dummy}, %rd10115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8631}, %rd10115;
	}
	shf.r.wrap.b32 	%r8632, %r8631, %r8630, 28;
	shf.r.wrap.b32 	%r8633, %r8630, %r8631, 28;
	mov.b64 	%rd10129, {%r8633, %r8632};
	shf.l.wrap.b32 	%r8634, %r8630, %r8631, 30;
	shf.l.wrap.b32 	%r8635, %r8631, %r8630, 30;
	mov.b64 	%rd10130, {%r8635, %r8634};
	xor.b64  	%rd10131, %rd10129, %rd10130;
	shf.l.wrap.b32 	%r8636, %r8630, %r8631, 25;
	shf.l.wrap.b32 	%r8637, %r8631, %r8630, 25;
	mov.b64 	%rd10132, {%r8637, %r8636};
	xor.b64  	%rd10133, %rd10131, %rd10132;
	xor.b64  	%rd10134, %rd10090, %rd10065;
	and.b64  	%rd10135, %rd10115, %rd10134;
	and.b64  	%rd10136, %rd10090, %rd10065;
	xor.b64  	%rd10137, %rd10135, %rd10136;
	add.s64 	%rd10138, %rd10133, %rd10137;
	add.s64 	%rd10139, %rd10128, %rd10040;
	add.s64 	%rd10140, %rd10138, %rd10128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8638,%dummy}, %rd10139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8639}, %rd10139;
	}
	shf.r.wrap.b32 	%r8640, %r8639, %r8638, 14;
	shf.r.wrap.b32 	%r8641, %r8638, %r8639, 14;
	mov.b64 	%rd10141, {%r8641, %r8640};
	shf.r.wrap.b32 	%r8642, %r8639, %r8638, 18;
	shf.r.wrap.b32 	%r8643, %r8638, %r8639, 18;
	mov.b64 	%rd10142, {%r8643, %r8642};
	xor.b64  	%rd10143, %rd10141, %rd10142;
	shf.l.wrap.b32 	%r8644, %r8638, %r8639, 23;
	shf.l.wrap.b32 	%r8645, %r8639, %r8638, 23;
	mov.b64 	%rd10144, {%r8645, %r8644};
	xor.b64  	%rd10145, %rd10143, %rd10144;
	and.b64  	%rd10146, %rd10139, %rd10114;
	not.b64 	%rd10147, %rd10139;
	and.b64  	%rd10148, %rd10089, %rd10147;
	or.b64  	%rd10149, %rd10146, %rd10148;
	add.s64 	%rd10150, %rd10149, %rd10064;
	add.s64 	%rd10151, %rd10150, %rd10145;
	add.s64 	%rd10152, %rd10151, %rd109;
	add.s64 	%rd10153, %rd10152, %rd8305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8646,%dummy}, %rd10140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8647}, %rd10140;
	}
	shf.r.wrap.b32 	%r8648, %r8647, %r8646, 28;
	shf.r.wrap.b32 	%r8649, %r8646, %r8647, 28;
	mov.b64 	%rd10154, {%r8649, %r8648};
	shf.l.wrap.b32 	%r8650, %r8646, %r8647, 30;
	shf.l.wrap.b32 	%r8651, %r8647, %r8646, 30;
	mov.b64 	%rd10155, {%r8651, %r8650};
	xor.b64  	%rd10156, %rd10154, %rd10155;
	shf.l.wrap.b32 	%r8652, %r8646, %r8647, 25;
	shf.l.wrap.b32 	%r8653, %r8647, %r8646, 25;
	mov.b64 	%rd10157, {%r8653, %r8652};
	xor.b64  	%rd10158, %rd10156, %rd10157;
	xor.b64  	%rd10159, %rd10115, %rd10090;
	and.b64  	%rd10160, %rd10140, %rd10159;
	and.b64  	%rd10161, %rd10115, %rd10090;
	xor.b64  	%rd10162, %rd10160, %rd10161;
	add.s64 	%rd10163, %rd10158, %rd10162;
	add.s64 	%rd10164, %rd10153, %rd10065;
	add.s64 	%rd10165, %rd10163, %rd10153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8654,%dummy}, %rd10164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8655}, %rd10164;
	}
	shf.r.wrap.b32 	%r8656, %r8655, %r8654, 14;
	shf.r.wrap.b32 	%r8657, %r8654, %r8655, 14;
	mov.b64 	%rd10166, {%r8657, %r8656};
	shf.r.wrap.b32 	%r8658, %r8655, %r8654, 18;
	shf.r.wrap.b32 	%r8659, %r8654, %r8655, 18;
	mov.b64 	%rd10167, {%r8659, %r8658};
	xor.b64  	%rd10168, %rd10166, %rd10167;
	shf.l.wrap.b32 	%r8660, %r8654, %r8655, 23;
	shf.l.wrap.b32 	%r8661, %r8655, %r8654, 23;
	mov.b64 	%rd10169, {%r8661, %r8660};
	xor.b64  	%rd10170, %rd10168, %rd10169;
	and.b64  	%rd10171, %rd10164, %rd10139;
	not.b64 	%rd10172, %rd10164;
	and.b64  	%rd10173, %rd10114, %rd10172;
	or.b64  	%rd10174, %rd10171, %rd10173;
	add.s64 	%rd10175, %rd10174, %rd10089;
	add.s64 	%rd10176, %rd10175, %rd10170;
	add.s64 	%rd10177, %rd10176, %rd110;
	add.s64 	%rd10178, %rd10177, %rd8318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8662,%dummy}, %rd10165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8663}, %rd10165;
	}
	shf.r.wrap.b32 	%r8664, %r8663, %r8662, 28;
	shf.r.wrap.b32 	%r8665, %r8662, %r8663, 28;
	mov.b64 	%rd10179, {%r8665, %r8664};
	shf.l.wrap.b32 	%r8666, %r8662, %r8663, 30;
	shf.l.wrap.b32 	%r8667, %r8663, %r8662, 30;
	mov.b64 	%rd10180, {%r8667, %r8666};
	xor.b64  	%rd10181, %rd10179, %rd10180;
	shf.l.wrap.b32 	%r8668, %r8662, %r8663, 25;
	shf.l.wrap.b32 	%r8669, %r8663, %r8662, 25;
	mov.b64 	%rd10182, {%r8669, %r8668};
	xor.b64  	%rd10183, %rd10181, %rd10182;
	xor.b64  	%rd10184, %rd10140, %rd10115;
	and.b64  	%rd10185, %rd10165, %rd10184;
	and.b64  	%rd10186, %rd10140, %rd10115;
	xor.b64  	%rd10187, %rd10185, %rd10186;
	add.s64 	%rd10188, %rd10183, %rd10187;
	add.s64 	%rd10189, %rd10178, %rd10090;
	add.s64 	%rd10190, %rd10188, %rd10178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8670,%dummy}, %rd10189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8671}, %rd10189;
	}
	shf.r.wrap.b32 	%r8672, %r8671, %r8670, 14;
	shf.r.wrap.b32 	%r8673, %r8670, %r8671, 14;
	mov.b64 	%rd10191, {%r8673, %r8672};
	shf.r.wrap.b32 	%r8674, %r8671, %r8670, 18;
	shf.r.wrap.b32 	%r8675, %r8670, %r8671, 18;
	mov.b64 	%rd10192, {%r8675, %r8674};
	xor.b64  	%rd10193, %rd10191, %rd10192;
	shf.l.wrap.b32 	%r8676, %r8670, %r8671, 23;
	shf.l.wrap.b32 	%r8677, %r8671, %r8670, 23;
	mov.b64 	%rd10194, {%r8677, %r8676};
	xor.b64  	%rd10195, %rd10193, %rd10194;
	and.b64  	%rd10196, %rd10189, %rd10164;
	not.b64 	%rd10197, %rd10189;
	and.b64  	%rd10198, %rd10139, %rd10197;
	or.b64  	%rd10199, %rd10196, %rd10198;
	add.s64 	%rd10200, %rd10199, %rd10114;
	add.s64 	%rd10201, %rd10200, %rd10195;
	add.s64 	%rd10202, %rd10201, %rd15518;
	add.s64 	%rd10203, %rd10202, %rd8331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8678,%dummy}, %rd10190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8679}, %rd10190;
	}
	shf.r.wrap.b32 	%r8680, %r8679, %r8678, 28;
	shf.r.wrap.b32 	%r8681, %r8678, %r8679, 28;
	mov.b64 	%rd10204, {%r8681, %r8680};
	shf.l.wrap.b32 	%r8682, %r8678, %r8679, 30;
	shf.l.wrap.b32 	%r8683, %r8679, %r8678, 30;
	mov.b64 	%rd10205, {%r8683, %r8682};
	xor.b64  	%rd10206, %rd10204, %rd10205;
	shf.l.wrap.b32 	%r8684, %r8678, %r8679, 25;
	shf.l.wrap.b32 	%r8685, %r8679, %r8678, 25;
	mov.b64 	%rd10207, {%r8685, %r8684};
	xor.b64  	%rd10208, %rd10206, %rd10207;
	xor.b64  	%rd10209, %rd10165, %rd10140;
	and.b64  	%rd10210, %rd10190, %rd10209;
	and.b64  	%rd10211, %rd10165, %rd10140;
	xor.b64  	%rd10212, %rd10210, %rd10211;
	add.s64 	%rd10213, %rd10208, %rd10212;
	add.s64 	%rd10214, %rd10203, %rd10115;
	add.s64 	%rd10215, %rd10213, %rd10203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8686,%dummy}, %rd10214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8687}, %rd10214;
	}
	shf.r.wrap.b32 	%r8688, %r8687, %r8686, 14;
	shf.r.wrap.b32 	%r8689, %r8686, %r8687, 14;
	mov.b64 	%rd10216, {%r8689, %r8688};
	shf.r.wrap.b32 	%r8690, %r8687, %r8686, 18;
	shf.r.wrap.b32 	%r8691, %r8686, %r8687, 18;
	mov.b64 	%rd10217, {%r8691, %r8690};
	xor.b64  	%rd10218, %rd10216, %rd10217;
	shf.l.wrap.b32 	%r8692, %r8686, %r8687, 23;
	shf.l.wrap.b32 	%r8693, %r8687, %r8686, 23;
	mov.b64 	%rd10219, {%r8693, %r8692};
	xor.b64  	%rd10220, %rd10218, %rd10219;
	and.b64  	%rd10221, %rd10214, %rd10189;
	not.b64 	%rd10222, %rd10214;
	and.b64  	%rd10223, %rd10164, %rd10222;
	or.b64  	%rd10224, %rd10221, %rd10223;
	add.s64 	%rd10225, %rd10224, %rd10139;
	add.s64 	%rd10226, %rd10225, %rd10220;
	add.s64 	%rd10227, %rd10226, %rd15517;
	add.s64 	%rd10228, %rd10227, %rd8344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8694,%dummy}, %rd10215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8695}, %rd10215;
	}
	shf.r.wrap.b32 	%r8696, %r8695, %r8694, 28;
	shf.r.wrap.b32 	%r8697, %r8694, %r8695, 28;
	mov.b64 	%rd10229, {%r8697, %r8696};
	shf.l.wrap.b32 	%r8698, %r8694, %r8695, 30;
	shf.l.wrap.b32 	%r8699, %r8695, %r8694, 30;
	mov.b64 	%rd10230, {%r8699, %r8698};
	xor.b64  	%rd10231, %rd10229, %rd10230;
	shf.l.wrap.b32 	%r8700, %r8694, %r8695, 25;
	shf.l.wrap.b32 	%r8701, %r8695, %r8694, 25;
	mov.b64 	%rd10232, {%r8701, %r8700};
	xor.b64  	%rd10233, %rd10231, %rd10232;
	xor.b64  	%rd10234, %rd10190, %rd10165;
	and.b64  	%rd10235, %rd10215, %rd10234;
	and.b64  	%rd10236, %rd10190, %rd10165;
	xor.b64  	%rd10237, %rd10235, %rd10236;
	add.s64 	%rd10238, %rd10233, %rd10237;
	add.s64 	%rd10239, %rd10228, %rd10140;
	add.s64 	%rd10240, %rd10238, %rd10228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8702,%dummy}, %rd10239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8703}, %rd10239;
	}
	shf.r.wrap.b32 	%r8704, %r8703, %r8702, 14;
	shf.r.wrap.b32 	%r8705, %r8702, %r8703, 14;
	mov.b64 	%rd10241, {%r8705, %r8704};
	shf.r.wrap.b32 	%r8706, %r8703, %r8702, 18;
	shf.r.wrap.b32 	%r8707, %r8702, %r8703, 18;
	mov.b64 	%rd10242, {%r8707, %r8706};
	xor.b64  	%rd10243, %rd10241, %rd10242;
	shf.l.wrap.b32 	%r8708, %r8702, %r8703, 23;
	shf.l.wrap.b32 	%r8709, %r8703, %r8702, 23;
	mov.b64 	%rd10244, {%r8709, %r8708};
	xor.b64  	%rd10245, %rd10243, %rd10244;
	and.b64  	%rd10246, %rd10239, %rd10214;
	not.b64 	%rd10247, %rd10239;
	and.b64  	%rd10248, %rd10189, %rd10247;
	or.b64  	%rd10249, %rd10246, %rd10248;
	add.s64 	%rd10250, %rd10249, %rd10164;
	add.s64 	%rd10251, %rd10250, %rd10245;
	add.s64 	%rd10252, %rd10251, %rd15516;
	add.s64 	%rd10253, %rd10252, %rd8357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8710,%dummy}, %rd10240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8711}, %rd10240;
	}
	shf.r.wrap.b32 	%r8712, %r8711, %r8710, 28;
	shf.r.wrap.b32 	%r8713, %r8710, %r8711, 28;
	mov.b64 	%rd10254, {%r8713, %r8712};
	shf.l.wrap.b32 	%r8714, %r8710, %r8711, 30;
	shf.l.wrap.b32 	%r8715, %r8711, %r8710, 30;
	mov.b64 	%rd10255, {%r8715, %r8714};
	xor.b64  	%rd10256, %rd10254, %rd10255;
	shf.l.wrap.b32 	%r8716, %r8710, %r8711, 25;
	shf.l.wrap.b32 	%r8717, %r8711, %r8710, 25;
	mov.b64 	%rd10257, {%r8717, %r8716};
	xor.b64  	%rd10258, %rd10256, %rd10257;
	xor.b64  	%rd10259, %rd10215, %rd10190;
	and.b64  	%rd10260, %rd10240, %rd10259;
	and.b64  	%rd10261, %rd10215, %rd10190;
	xor.b64  	%rd10262, %rd10260, %rd10261;
	add.s64 	%rd10263, %rd10258, %rd10262;
	add.s64 	%rd10264, %rd10253, %rd10165;
	add.s64 	%rd10265, %rd10263, %rd10253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8718,%dummy}, %rd10264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8719}, %rd10264;
	}
	shf.r.wrap.b32 	%r8720, %r8719, %r8718, 14;
	shf.r.wrap.b32 	%r8721, %r8718, %r8719, 14;
	mov.b64 	%rd10266, {%r8721, %r8720};
	shf.r.wrap.b32 	%r8722, %r8719, %r8718, 18;
	shf.r.wrap.b32 	%r8723, %r8718, %r8719, 18;
	mov.b64 	%rd10267, {%r8723, %r8722};
	xor.b64  	%rd10268, %rd10266, %rd10267;
	shf.l.wrap.b32 	%r8724, %r8718, %r8719, 23;
	shf.l.wrap.b32 	%r8725, %r8719, %r8718, 23;
	mov.b64 	%rd10269, {%r8725, %r8724};
	xor.b64  	%rd10270, %rd10268, %rd10269;
	and.b64  	%rd10271, %rd10264, %rd10239;
	not.b64 	%rd10272, %rd10264;
	and.b64  	%rd10273, %rd10214, %rd10272;
	or.b64  	%rd10274, %rd10271, %rd10273;
	add.s64 	%rd10275, %rd10274, %rd10189;
	add.s64 	%rd10276, %rd10275, %rd10270;
	add.s64 	%rd10277, %rd10276, %rd114;
	add.s64 	%rd10278, %rd10277, %rd8370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8726,%dummy}, %rd10265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8727}, %rd10265;
	}
	shf.r.wrap.b32 	%r8728, %r8727, %r8726, 28;
	shf.r.wrap.b32 	%r8729, %r8726, %r8727, 28;
	mov.b64 	%rd10279, {%r8729, %r8728};
	shf.l.wrap.b32 	%r8730, %r8726, %r8727, 30;
	shf.l.wrap.b32 	%r8731, %r8727, %r8726, 30;
	mov.b64 	%rd10280, {%r8731, %r8730};
	xor.b64  	%rd10281, %rd10279, %rd10280;
	shf.l.wrap.b32 	%r8732, %r8726, %r8727, 25;
	shf.l.wrap.b32 	%r8733, %r8727, %r8726, 25;
	mov.b64 	%rd10282, {%r8733, %r8732};
	xor.b64  	%rd10283, %rd10281, %rd10282;
	xor.b64  	%rd10284, %rd10240, %rd10215;
	and.b64  	%rd10285, %rd10265, %rd10284;
	and.b64  	%rd10286, %rd10240, %rd10215;
	xor.b64  	%rd10287, %rd10285, %rd10286;
	add.s64 	%rd10288, %rd10283, %rd10287;
	add.s64 	%rd10289, %rd10278, %rd10190;
	add.s64 	%rd10290, %rd10288, %rd10278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8734,%dummy}, %rd10289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8735}, %rd10289;
	}
	shf.r.wrap.b32 	%r8736, %r8735, %r8734, 14;
	shf.r.wrap.b32 	%r8737, %r8734, %r8735, 14;
	mov.b64 	%rd10291, {%r8737, %r8736};
	shf.r.wrap.b32 	%r8738, %r8735, %r8734, 18;
	shf.r.wrap.b32 	%r8739, %r8734, %r8735, 18;
	mov.b64 	%rd10292, {%r8739, %r8738};
	xor.b64  	%rd10293, %rd10291, %rd10292;
	shf.l.wrap.b32 	%r8740, %r8734, %r8735, 23;
	shf.l.wrap.b32 	%r8741, %r8735, %r8734, 23;
	mov.b64 	%rd10294, {%r8741, %r8740};
	xor.b64  	%rd10295, %rd10293, %rd10294;
	and.b64  	%rd10296, %rd10289, %rd10264;
	not.b64 	%rd10297, %rd10289;
	and.b64  	%rd10298, %rd10239, %rd10297;
	or.b64  	%rd10299, %rd10296, %rd10298;
	add.s64 	%rd10300, %rd10299, %rd10214;
	add.s64 	%rd10301, %rd10300, %rd10295;
	add.s64 	%rd10302, %rd10301, %rd115;
	add.s64 	%rd10303, %rd10302, %rd8383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8742,%dummy}, %rd10290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8743}, %rd10290;
	}
	shf.r.wrap.b32 	%r8744, %r8743, %r8742, 28;
	shf.r.wrap.b32 	%r8745, %r8742, %r8743, 28;
	mov.b64 	%rd10304, {%r8745, %r8744};
	shf.l.wrap.b32 	%r8746, %r8742, %r8743, 30;
	shf.l.wrap.b32 	%r8747, %r8743, %r8742, 30;
	mov.b64 	%rd10305, {%r8747, %r8746};
	xor.b64  	%rd10306, %rd10304, %rd10305;
	shf.l.wrap.b32 	%r8748, %r8742, %r8743, 25;
	shf.l.wrap.b32 	%r8749, %r8743, %r8742, 25;
	mov.b64 	%rd10307, {%r8749, %r8748};
	xor.b64  	%rd10308, %rd10306, %rd10307;
	xor.b64  	%rd10309, %rd10265, %rd10240;
	and.b64  	%rd10310, %rd10290, %rd10309;
	and.b64  	%rd10311, %rd10265, %rd10240;
	xor.b64  	%rd10312, %rd10310, %rd10311;
	add.s64 	%rd10313, %rd10308, %rd10312;
	add.s64 	%rd10314, %rd10303, %rd10215;
	add.s64 	%rd10315, %rd10313, %rd10303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8750,%dummy}, %rd10314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8751}, %rd10314;
	}
	shf.r.wrap.b32 	%r8752, %r8751, %r8750, 14;
	shf.r.wrap.b32 	%r8753, %r8750, %r8751, 14;
	mov.b64 	%rd10316, {%r8753, %r8752};
	shf.r.wrap.b32 	%r8754, %r8751, %r8750, 18;
	shf.r.wrap.b32 	%r8755, %r8750, %r8751, 18;
	mov.b64 	%rd10317, {%r8755, %r8754};
	xor.b64  	%rd10318, %rd10316, %rd10317;
	shf.l.wrap.b32 	%r8756, %r8750, %r8751, 23;
	shf.l.wrap.b32 	%r8757, %r8751, %r8750, 23;
	mov.b64 	%rd10319, {%r8757, %r8756};
	xor.b64  	%rd10320, %rd10318, %rd10319;
	and.b64  	%rd10321, %rd10314, %rd10289;
	not.b64 	%rd10322, %rd10314;
	and.b64  	%rd10323, %rd10264, %rd10322;
	or.b64  	%rd10324, %rd10321, %rd10323;
	add.s64 	%rd10325, %rd10324, %rd10239;
	add.s64 	%rd10326, %rd10325, %rd10320;
	add.s64 	%rd10327, %rd10326, %rd116;
	add.s64 	%rd10328, %rd10327, %rd8396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8758,%dummy}, %rd10315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8759}, %rd10315;
	}
	shf.r.wrap.b32 	%r8760, %r8759, %r8758, 28;
	shf.r.wrap.b32 	%r8761, %r8758, %r8759, 28;
	mov.b64 	%rd10329, {%r8761, %r8760};
	shf.l.wrap.b32 	%r8762, %r8758, %r8759, 30;
	shf.l.wrap.b32 	%r8763, %r8759, %r8758, 30;
	mov.b64 	%rd10330, {%r8763, %r8762};
	xor.b64  	%rd10331, %rd10329, %rd10330;
	shf.l.wrap.b32 	%r8764, %r8758, %r8759, 25;
	shf.l.wrap.b32 	%r8765, %r8759, %r8758, 25;
	mov.b64 	%rd10332, {%r8765, %r8764};
	xor.b64  	%rd10333, %rd10331, %rd10332;
	xor.b64  	%rd10334, %rd10290, %rd10265;
	and.b64  	%rd10335, %rd10315, %rd10334;
	and.b64  	%rd10336, %rd10290, %rd10265;
	xor.b64  	%rd10337, %rd10335, %rd10336;
	add.s64 	%rd10338, %rd10333, %rd10337;
	add.s64 	%rd10339, %rd10328, %rd10240;
	add.s64 	%rd10340, %rd10338, %rd10328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8766,%dummy}, %rd10339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8767}, %rd10339;
	}
	shf.r.wrap.b32 	%r8768, %r8767, %r8766, 14;
	shf.r.wrap.b32 	%r8769, %r8766, %r8767, 14;
	mov.b64 	%rd10341, {%r8769, %r8768};
	shf.r.wrap.b32 	%r8770, %r8767, %r8766, 18;
	shf.r.wrap.b32 	%r8771, %r8766, %r8767, 18;
	mov.b64 	%rd10342, {%r8771, %r8770};
	xor.b64  	%rd10343, %rd10341, %rd10342;
	shf.l.wrap.b32 	%r8772, %r8766, %r8767, 23;
	shf.l.wrap.b32 	%r8773, %r8767, %r8766, 23;
	mov.b64 	%rd10344, {%r8773, %r8772};
	xor.b64  	%rd10345, %rd10343, %rd10344;
	and.b64  	%rd10346, %rd10339, %rd10314;
	not.b64 	%rd10347, %rd10339;
	and.b64  	%rd10348, %rd10289, %rd10347;
	or.b64  	%rd10349, %rd10346, %rd10348;
	add.s64 	%rd10350, %rd10349, %rd10264;
	add.s64 	%rd10351, %rd10350, %rd10345;
	add.s64 	%rd10352, %rd10351, %rd117;
	add.s64 	%rd10353, %rd10352, %rd8409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8774,%dummy}, %rd10340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8775}, %rd10340;
	}
	shf.r.wrap.b32 	%r8776, %r8775, %r8774, 28;
	shf.r.wrap.b32 	%r8777, %r8774, %r8775, 28;
	mov.b64 	%rd10354, {%r8777, %r8776};
	shf.l.wrap.b32 	%r8778, %r8774, %r8775, 30;
	shf.l.wrap.b32 	%r8779, %r8775, %r8774, 30;
	mov.b64 	%rd10355, {%r8779, %r8778};
	xor.b64  	%rd10356, %rd10354, %rd10355;
	shf.l.wrap.b32 	%r8780, %r8774, %r8775, 25;
	shf.l.wrap.b32 	%r8781, %r8775, %r8774, 25;
	mov.b64 	%rd10357, {%r8781, %r8780};
	xor.b64  	%rd10358, %rd10356, %rd10357;
	xor.b64  	%rd10359, %rd10315, %rd10290;
	and.b64  	%rd10360, %rd10340, %rd10359;
	and.b64  	%rd10361, %rd10315, %rd10290;
	xor.b64  	%rd10362, %rd10360, %rd10361;
	add.s64 	%rd10363, %rd10358, %rd10362;
	add.s64 	%rd10364, %rd10353, %rd10265;
	add.s64 	%rd10365, %rd10363, %rd10353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8782,%dummy}, %rd10364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8783}, %rd10364;
	}
	shf.r.wrap.b32 	%r8784, %r8783, %r8782, 14;
	shf.r.wrap.b32 	%r8785, %r8782, %r8783, 14;
	mov.b64 	%rd10366, {%r8785, %r8784};
	shf.r.wrap.b32 	%r8786, %r8783, %r8782, 18;
	shf.r.wrap.b32 	%r8787, %r8782, %r8783, 18;
	mov.b64 	%rd10367, {%r8787, %r8786};
	xor.b64  	%rd10368, %rd10366, %rd10367;
	shf.l.wrap.b32 	%r8788, %r8782, %r8783, 23;
	shf.l.wrap.b32 	%r8789, %r8783, %r8782, 23;
	mov.b64 	%rd10369, {%r8789, %r8788};
	xor.b64  	%rd10370, %rd10368, %rd10369;
	and.b64  	%rd10371, %rd10364, %rd10339;
	not.b64 	%rd10372, %rd10364;
	and.b64  	%rd10373, %rd10314, %rd10372;
	or.b64  	%rd10374, %rd10371, %rd10373;
	add.s64 	%rd10375, %rd10374, %rd10289;
	add.s64 	%rd10376, %rd10375, %rd10370;
	add.s64 	%rd10377, %rd10376, %rd118;
	add.s64 	%rd10378, %rd10377, %rd8422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8790,%dummy}, %rd10365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8791}, %rd10365;
	}
	shf.r.wrap.b32 	%r8792, %r8791, %r8790, 28;
	shf.r.wrap.b32 	%r8793, %r8790, %r8791, 28;
	mov.b64 	%rd10379, {%r8793, %r8792};
	shf.l.wrap.b32 	%r8794, %r8790, %r8791, 30;
	shf.l.wrap.b32 	%r8795, %r8791, %r8790, 30;
	mov.b64 	%rd10380, {%r8795, %r8794};
	xor.b64  	%rd10381, %rd10379, %rd10380;
	shf.l.wrap.b32 	%r8796, %r8790, %r8791, 25;
	shf.l.wrap.b32 	%r8797, %r8791, %r8790, 25;
	mov.b64 	%rd10382, {%r8797, %r8796};
	xor.b64  	%rd10383, %rd10381, %rd10382;
	xor.b64  	%rd10384, %rd10340, %rd10315;
	and.b64  	%rd10385, %rd10365, %rd10384;
	and.b64  	%rd10386, %rd10340, %rd10315;
	xor.b64  	%rd10387, %rd10385, %rd10386;
	add.s64 	%rd10388, %rd10383, %rd10387;
	add.s64 	%rd10389, %rd10378, %rd10290;
	add.s64 	%rd10390, %rd10388, %rd10378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8798,%dummy}, %rd10389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8799}, %rd10389;
	}
	shf.r.wrap.b32 	%r8800, %r8799, %r8798, 14;
	shf.r.wrap.b32 	%r8801, %r8798, %r8799, 14;
	mov.b64 	%rd10391, {%r8801, %r8800};
	shf.r.wrap.b32 	%r8802, %r8799, %r8798, 18;
	shf.r.wrap.b32 	%r8803, %r8798, %r8799, 18;
	mov.b64 	%rd10392, {%r8803, %r8802};
	xor.b64  	%rd10393, %rd10391, %rd10392;
	shf.l.wrap.b32 	%r8804, %r8798, %r8799, 23;
	shf.l.wrap.b32 	%r8805, %r8799, %r8798, 23;
	mov.b64 	%rd10394, {%r8805, %r8804};
	xor.b64  	%rd10395, %rd10393, %rd10394;
	and.b64  	%rd10396, %rd10389, %rd10364;
	not.b64 	%rd10397, %rd10389;
	and.b64  	%rd10398, %rd10339, %rd10397;
	or.b64  	%rd10399, %rd10396, %rd10398;
	add.s64 	%rd10400, %rd10399, %rd10314;
	add.s64 	%rd10401, %rd10400, %rd10395;
	add.s64 	%rd10402, %rd10401, %rd119;
	add.s64 	%rd10403, %rd10402, %rd8435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8806,%dummy}, %rd10390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8807}, %rd10390;
	}
	shf.r.wrap.b32 	%r8808, %r8807, %r8806, 28;
	shf.r.wrap.b32 	%r8809, %r8806, %r8807, 28;
	mov.b64 	%rd10404, {%r8809, %r8808};
	shf.l.wrap.b32 	%r8810, %r8806, %r8807, 30;
	shf.l.wrap.b32 	%r8811, %r8807, %r8806, 30;
	mov.b64 	%rd10405, {%r8811, %r8810};
	xor.b64  	%rd10406, %rd10404, %rd10405;
	shf.l.wrap.b32 	%r8812, %r8806, %r8807, 25;
	shf.l.wrap.b32 	%r8813, %r8807, %r8806, 25;
	mov.b64 	%rd10407, {%r8813, %r8812};
	xor.b64  	%rd10408, %rd10406, %rd10407;
	xor.b64  	%rd10409, %rd10365, %rd10340;
	and.b64  	%rd10410, %rd10390, %rd10409;
	and.b64  	%rd10411, %rd10365, %rd10340;
	xor.b64  	%rd10412, %rd10410, %rd10411;
	add.s64 	%rd10413, %rd10408, %rd10412;
	add.s64 	%rd10414, %rd10403, %rd10315;
	add.s64 	%rd10415, %rd10413, %rd10403;
	add.s64 	%rd10416, %rd10415, 7640891576956012808;
	add.s64 	%rd10417, %rd10390, -4942790177534073029;
	add.s64 	%rd10418, %rd10365, 4354685564936845355;
	add.s64 	%rd10419, %rd10340, -6534734903238641935;
	add.s64 	%rd10420, %rd10414, 5840696475078001361;
	add.s64 	%rd10421, %rd10389, -7276294671716946913;
	add.s64 	%rd10422, %rd10364, 2270897969802886507;
	add.s64 	%rd10423, %rd10339, 6620516959819538809;
	shr.u64 	%rd10424, %rd10416, 56;
	shr.u64 	%rd10425, %rd10416, 48;
	shr.u64 	%rd10426, %rd10416, 40;
	cvt.u32.u64 	%r8814, %rd10426;
	shr.u64 	%rd10427, %rd10416, 32;
	cvt.u32.u64 	%r8815, %rd10416;
	shr.u64 	%rd10428, %rd10416, 16;
	shr.u64 	%rd10429, %rd10417, 56;
	shr.u64 	%rd10430, %rd10417, 48;
	shr.u64 	%rd10431, %rd10417, 40;
	cvt.u32.u64 	%r8816, %rd10431;
	shr.u64 	%rd10432, %rd10417, 32;
	cvt.u32.u64 	%r8817, %rd10417;
	shr.u64 	%rd10433, %rd10417, 16;
	cvt.u16.u64 	%rs752, %rd10424;
	cvt.u16.u64 	%rs753, %rd10425;
	shl.b16 	%rs754, %rs753, 8;
	or.b16  	%rs755, %rs752, %rs754;
	cvt.u32.u64 	%r8818, %rd10427;
	and.b32  	%r8819, %r8814, 255;
	prmt.b32 	%r8820, %r8818, %r8819, 30212;
	cvt.u16.u32 	%rs756, %r8820;
	cvt.u16.u64 	%rs757, %rd10416;
	shl.b16 	%rs758, %rs757, 8;
	shr.u16 	%rs759, %rs757, 8;
	or.b16  	%rs760, %rs759, %rs758;
	shr.u32 	%r8821, %r8815, 24;
	cvt.u32.u64 	%r8822, %rd10428;
	prmt.b32 	%r8823, %r8822, %r8821, 30212;
	cvt.u16.u32 	%rs761, %r8823;
	cvt.u16.u64 	%rs762, %rd10429;
	cvt.u16.u64 	%rs763, %rd10430;
	shl.b16 	%rs764, %rs763, 8;
	or.b16  	%rs765, %rs762, %rs764;
	cvt.u32.u64 	%r8824, %rd10432;
	and.b32  	%r8825, %r8816, 255;
	prmt.b32 	%r8826, %r8824, %r8825, 30212;
	cvt.u16.u32 	%rs766, %r8826;
	cvt.u16.u64 	%rs767, %rd10417;
	shl.b16 	%rs768, %rs767, 8;
	shr.u16 	%rs769, %rs767, 8;
	or.b16  	%rs770, %rs769, %rs768;
	shr.u32 	%r8827, %r8817, 24;
	cvt.u32.u64 	%r8828, %rd10433;
	prmt.b32 	%r8829, %r8828, %r8827, 30212;
	cvt.u16.u32 	%rs771, %r8829;
	mov.b32 	%r8830, {%rs761, %rs760};
	mov.b32 	%r8831, {%rs755, %rs756};
	mov.b32 	%r8832, {%rs771, %rs770};
	mov.b32 	%r8833, {%rs765, %rs766};
	st.local.v4.u32 	[%rd2], {%r8831, %r8830, %r8833, %r8832};
	shr.u64 	%rd10434, %rd10418, 56;
	shr.u64 	%rd10435, %rd10418, 48;
	shr.u64 	%rd10436, %rd10418, 40;
	cvt.u32.u64 	%r8834, %rd10436;
	shr.u64 	%rd10437, %rd10418, 32;
	cvt.u32.u64 	%r8835, %rd10418;
	shr.u64 	%rd10438, %rd10418, 16;
	shr.u64 	%rd10439, %rd10419, 56;
	shr.u64 	%rd10440, %rd10419, 48;
	shr.u64 	%rd10441, %rd10419, 40;
	cvt.u32.u64 	%r8836, %rd10441;
	shr.u64 	%rd10442, %rd10419, 32;
	cvt.u32.u64 	%r8837, %rd10419;
	shr.u64 	%rd10443, %rd10419, 16;
	cvt.u16.u64 	%rs772, %rd10434;
	cvt.u16.u64 	%rs773, %rd10435;
	shl.b16 	%rs774, %rs773, 8;
	or.b16  	%rs775, %rs772, %rs774;
	cvt.u32.u64 	%r8838, %rd10437;
	and.b32  	%r8839, %r8834, 255;
	prmt.b32 	%r8840, %r8838, %r8839, 30212;
	cvt.u16.u32 	%rs776, %r8840;
	cvt.u16.u64 	%rs777, %rd10418;
	shl.b16 	%rs778, %rs777, 8;
	shr.u16 	%rs779, %rs777, 8;
	or.b16  	%rs780, %rs779, %rs778;
	shr.u32 	%r8841, %r8835, 24;
	cvt.u32.u64 	%r8842, %rd10438;
	prmt.b32 	%r8843, %r8842, %r8841, 30212;
	cvt.u16.u32 	%rs781, %r8843;
	cvt.u16.u64 	%rs782, %rd10439;
	cvt.u16.u64 	%rs783, %rd10440;
	shl.b16 	%rs784, %rs783, 8;
	or.b16  	%rs785, %rs782, %rs784;
	cvt.u32.u64 	%r8844, %rd10442;
	and.b32  	%r8845, %r8836, 255;
	prmt.b32 	%r8846, %r8844, %r8845, 30212;
	cvt.u16.u32 	%rs786, %r8846;
	cvt.u16.u64 	%rs787, %rd10419;
	shl.b16 	%rs788, %rs787, 8;
	shr.u16 	%rs789, %rs787, 8;
	or.b16  	%rs790, %rs789, %rs788;
	shr.u32 	%r8847, %r8837, 24;
	cvt.u32.u64 	%r8848, %rd10443;
	prmt.b32 	%r8849, %r8848, %r8847, 30212;
	cvt.u16.u32 	%rs791, %r8849;
	mov.b32 	%r8850, {%rs781, %rs780};
	mov.b32 	%r8851, {%rs775, %rs776};
	mov.b32 	%r8852, {%rs791, %rs790};
	mov.b32 	%r8853, {%rs785, %rs786};
	st.local.v4.u32 	[%rd2+16], {%r8851, %r8850, %r8853, %r8852};
	shr.u64 	%rd10444, %rd10420, 56;
	shr.u64 	%rd10445, %rd10420, 48;
	shr.u64 	%rd10446, %rd10420, 40;
	cvt.u32.u64 	%r8854, %rd10446;
	shr.u64 	%rd10447, %rd10420, 32;
	cvt.u32.u64 	%r8855, %rd10420;
	shr.u64 	%rd10448, %rd10420, 16;
	shr.u64 	%rd10449, %rd10421, 56;
	shr.u64 	%rd10450, %rd10421, 48;
	shr.u64 	%rd10451, %rd10421, 40;
	cvt.u32.u64 	%r8856, %rd10451;
	shr.u64 	%rd10452, %rd10421, 32;
	cvt.u32.u64 	%r8857, %rd10421;
	shr.u64 	%rd10453, %rd10421, 16;
	cvt.u16.u64 	%rs792, %rd10444;
	cvt.u16.u64 	%rs793, %rd10445;
	shl.b16 	%rs794, %rs793, 8;
	or.b16  	%rs795, %rs792, %rs794;
	cvt.u32.u64 	%r8858, %rd10447;
	and.b32  	%r8859, %r8854, 255;
	prmt.b32 	%r8860, %r8858, %r8859, 30212;
	cvt.u16.u32 	%rs796, %r8860;
	cvt.u16.u64 	%rs797, %rd10420;
	shl.b16 	%rs798, %rs797, 8;
	shr.u16 	%rs799, %rs797, 8;
	or.b16  	%rs800, %rs799, %rs798;
	shr.u32 	%r8861, %r8855, 24;
	cvt.u32.u64 	%r8862, %rd10448;
	prmt.b32 	%r8863, %r8862, %r8861, 30212;
	cvt.u16.u32 	%rs801, %r8863;
	cvt.u16.u64 	%rs802, %rd10449;
	cvt.u16.u64 	%rs803, %rd10450;
	shl.b16 	%rs804, %rs803, 8;
	or.b16  	%rs805, %rs802, %rs804;
	cvt.u32.u64 	%r8864, %rd10452;
	and.b32  	%r8865, %r8856, 255;
	prmt.b32 	%r8866, %r8864, %r8865, 30212;
	cvt.u16.u32 	%rs806, %r8866;
	cvt.u16.u64 	%rs807, %rd10421;
	shl.b16 	%rs808, %rs807, 8;
	shr.u16 	%rs809, %rs807, 8;
	or.b16  	%rs810, %rs809, %rs808;
	shr.u32 	%r8867, %r8857, 24;
	cvt.u32.u64 	%r8868, %rd10453;
	prmt.b32 	%r8869, %r8868, %r8867, 30212;
	cvt.u16.u32 	%rs811, %r8869;
	mov.b32 	%r8870, {%rs801, %rs800};
	mov.b32 	%r8871, {%rs795, %rs796};
	mov.b32 	%r8872, {%rs811, %rs810};
	mov.b32 	%r8873, {%rs805, %rs806};
	st.local.v4.u32 	[%rd2+32], {%r8871, %r8870, %r8873, %r8872};
	shr.u64 	%rd10454, %rd10422, 56;
	shr.u64 	%rd10455, %rd10422, 48;
	shr.u64 	%rd10456, %rd10422, 40;
	cvt.u32.u64 	%r8874, %rd10456;
	shr.u64 	%rd10457, %rd10422, 32;
	cvt.u32.u64 	%r8875, %rd10422;
	shr.u64 	%rd10458, %rd10422, 16;
	shr.u64 	%rd10459, %rd10423, 56;
	shr.u64 	%rd10460, %rd10423, 48;
	shr.u64 	%rd10461, %rd10423, 40;
	cvt.u32.u64 	%r8876, %rd10461;
	shr.u64 	%rd10462, %rd10423, 32;
	cvt.u32.u64 	%r8877, %rd10423;
	shr.u64 	%rd10463, %rd10423, 16;
	cvt.u16.u64 	%rs812, %rd10454;
	cvt.u16.u64 	%rs813, %rd10455;
	shl.b16 	%rs814, %rs813, 8;
	or.b16  	%rs815, %rs812, %rs814;
	cvt.u32.u64 	%r8878, %rd10457;
	and.b32  	%r8879, %r8874, 255;
	prmt.b32 	%r8880, %r8878, %r8879, 30212;
	cvt.u16.u32 	%rs816, %r8880;
	cvt.u16.u64 	%rs817, %rd10422;
	shl.b16 	%rs818, %rs817, 8;
	shr.u16 	%rs819, %rs817, 8;
	or.b16  	%rs820, %rs819, %rs818;
	shr.u32 	%r8881, %r8875, 24;
	cvt.u32.u64 	%r8882, %rd10458;
	prmt.b32 	%r8883, %r8882, %r8881, 30212;
	cvt.u16.u32 	%rs821, %r8883;
	cvt.u16.u64 	%rs822, %rd10459;
	cvt.u16.u64 	%rs823, %rd10460;
	shl.b16 	%rs824, %rs823, 8;
	or.b16  	%rs825, %rs822, %rs824;
	cvt.u32.u64 	%r8884, %rd10462;
	and.b32  	%r8885, %r8876, 255;
	prmt.b32 	%r8886, %r8884, %r8885, 30212;
	cvt.u16.u32 	%rs826, %r8886;
	cvt.u16.u64 	%rs827, %rd10423;
	shl.b16 	%rs828, %rs827, 8;
	shr.u16 	%rs829, %rs827, 8;
	or.b16  	%rs830, %rs829, %rs828;
	shr.u32 	%r8887, %r8877, 24;
	cvt.u32.u64 	%r8888, %rd10463;
	prmt.b32 	%r8889, %r8888, %r8887, 30212;
	cvt.u16.u32 	%rs831, %r8889;
	mov.b32 	%r8890, {%rs821, %rs820};
	mov.b32 	%r8891, {%rs815, %rs816};
	mov.b32 	%r8892, {%rs831, %rs830};
	mov.b32 	%r8893, {%rs825, %rs826};
	st.local.v4.u32 	[%rd2+48], {%r8891, %r8890, %r8893, %r8892};
	mov.u32 	%r11229, 64;
	mov.u64 	%rd15524, %rd2;

$L__BB4_100:
	setp.lt.s32 	%p72, %r11229, 1;
	@%p72 bra 	$L__BB4_108;

	add.s32 	%r8895, %r11229, -1;
	and.b32  	%r107, %r11229, 3;
	setp.lt.u32 	%p73, %r8895, 3;
	mov.u32 	%r11232, 0;
	@%p73 bra 	$L__BB4_104;

	sub.s32 	%r11231, %r11229, %r107;

$L__BB4_103:
	cvt.s64.s32 	%rd10465, %r11232;
	add.s64 	%rd10466, %rd15524, %rd10465;
	ld.local.u8 	%rs832, [%rd10466];
	xor.b16  	%rs833, %rs832, 54;
	add.s64 	%rd10467, %rd2, %rd10465;
	st.local.u8 	[%rd10467], %rs833;
	ld.local.u8 	%rs834, [%rd10466];
	add.s64 	%rd10468, %rd3, %rd10465;
	ld.local.u8 	%rs835, [%rd10466+1];
	xor.b16  	%rs836, %rs835, 54;
	st.local.u8 	[%rd10467+1], %rs836;
	ld.local.u8 	%rs837, [%rd10466+1];
	ld.local.u8 	%rs838, [%rd10466+2];
	xor.b16  	%rs839, %rs838, 54;
	st.local.u8 	[%rd10467+2], %rs839;
	ld.local.u8 	%rs840, [%rd10466+2];
	ld.local.u8 	%rs841, [%rd10466+3];
	xor.b16  	%rs842, %rs841, 54;
	st.local.u8 	[%rd10467+3], %rs842;
	ld.local.u8 	%rs843, [%rd10466+3];
	xor.b16  	%rs844, %rs834, 92;
	xor.b16  	%rs845, %rs837, 92;
	xor.b16  	%rs846, %rs840, 92;
	xor.b16  	%rs847, %rs843, 92;
	st.local.v4.u8 	[%rd10468], {%rs844, %rs845, %rs846, %rs847};
	add.s32 	%r11232, %r11232, 4;
	add.s32 	%r11231, %r11231, -4;
	setp.ne.s32 	%p74, %r11231, 0;
	@%p74 bra 	$L__BB4_103;

$L__BB4_104:
	setp.eq.s32 	%p75, %r107, 0;
	@%p75 bra 	$L__BB4_108;

	cvt.s64.s32 	%rd10469, %r11232;
	add.s64 	%rd147, %rd15524, %rd10469;
	ld.local.u8 	%rs848, [%rd147];
	xor.b16  	%rs849, %rs848, 54;
	add.s64 	%rd148, %rd2, %rd10469;
	st.local.u8 	[%rd148], %rs849;
	ld.local.u8 	%rs850, [%rd147];
	xor.b16  	%rs851, %rs850, 92;
	add.s64 	%rd149, %rd3, %rd10469;
	st.local.u8 	[%rd149], %rs851;
	setp.eq.s32 	%p76, %r107, 1;
	@%p76 bra 	$L__BB4_108;

	ld.local.u8 	%rs852, [%rd147+1];
	xor.b16  	%rs853, %rs852, 54;
	st.local.u8 	[%rd148+1], %rs853;
	ld.local.u8 	%rs854, [%rd147+1];
	xor.b16  	%rs855, %rs854, 92;
	st.local.u8 	[%rd149+1], %rs855;
	setp.eq.s32 	%p77, %r107, 2;
	@%p77 bra 	$L__BB4_108;

	ld.local.u8 	%rs856, [%rd147+2];
	xor.b16  	%rs857, %rs856, 54;
	st.local.u8 	[%rd148+2], %rs857;
	ld.local.u8 	%rs858, [%rd147+2];
	xor.b16  	%rs859, %rs858, 92;
	st.local.u8 	[%rd149+2], %rs859;

$L__BB4_108:
	setp.gt.s32 	%p78, %r11229, 127;
	@%p78 bra 	$L__BB4_116;

	neg.s32 	%r8897, %r11229;
	and.b32  	%r114, %r8897, 3;
	setp.eq.s32 	%p79, %r114, 0;
	mov.u32 	%r11233, %r11229;
	@%p79 bra 	$L__BB4_113;

	cvt.s64.s32 	%rd10472, %r11229;
	add.s64 	%rd150, %rd2, %rd10472;
	mov.u16 	%rs860, 54;
	st.local.u8 	[%rd150], %rs860;
	add.s64 	%rd151, %rd3, %rd10472;
	mov.u16 	%rs861, 92;
	st.local.u8 	[%rd151], %rs861;
	add.s32 	%r11233, %r11229, 1;
	setp.eq.s32 	%p80, %r114, 1;
	@%p80 bra 	$L__BB4_113;

	st.local.u8 	[%rd150+1], %rs860;
	st.local.u8 	[%rd151+1], %rs861;
	add.s32 	%r11233, %r11229, 2;
	setp.eq.s32 	%p81, %r114, 2;
	@%p81 bra 	$L__BB4_113;

	mov.u16 	%rs864, 54;
	st.local.u8 	[%rd150+2], %rs864;
	mov.u16 	%rs865, 92;
	st.local.u8 	[%rd151+2], %rs865;
	add.s32 	%r11233, %r11229, 3;

$L__BB4_113:
	mov.u32 	%r8898, 127;
	sub.s32 	%r8899, %r8898, %r11229;
	setp.lt.u32 	%p82, %r8899, 3;
	@%p82 bra 	$L__BB4_116;

$L__BB4_115:
	cvt.s64.s32 	%rd10476, %r11233;
	add.s64 	%rd10477, %rd2, %rd10476;
	mov.u16 	%rs866, 54;
	st.local.u8 	[%rd10477], %rs866;
	add.s64 	%rd10478, %rd3, %rd10476;
	mov.u16 	%rs867, 92;
	st.local.u8 	[%rd10478], %rs867;
	st.local.u8 	[%rd10477+1], %rs866;
	st.local.u8 	[%rd10478+1], %rs867;
	st.local.u8 	[%rd10477+2], %rs866;
	st.local.u8 	[%rd10478+2], %rs867;
	st.local.u8 	[%rd10477+3], %rs866;
	st.local.u8 	[%rd10478+3], %rs867;
	add.s32 	%r120, %r11233, 4;
	setp.lt.s32 	%p83, %r11233, 124;
	mov.u32 	%r11233, %r120;
	@%p83 bra 	$L__BB4_115;

$L__BB4_116:
	ld.local.v4.u32 	{%r8900, %r8901, %r8902, %r8903}, [%rd3];
	mov.b32 	{%rs868, %rs869}, %r8900;
	shr.u16 	%rs870, %rs868, 8;
	shr.u16 	%rs871, %rs869, 8;
	mov.b32 	{%rs872, %rs873}, %r8901;
	shr.u16 	%rs874, %rs872, 8;
	shr.u16 	%rs875, %rs873, 8;
	mov.b32 	{%rs876, %rs877}, %r8902;
	shr.u16 	%rs878, %rs876, 8;
	shr.u16 	%rs879, %rs877, 8;
	mov.b32 	{%rs880, %rs881}, %r8903;
	shr.u16 	%rs882, %rs880, 8;
	shr.u16 	%rs883, %rs881, 8;
	ld.local.v4.u32 	{%r8908, %r8909, %r8910, %r8911}, [%rd3+16];
	mov.b32 	{%rs884, %rs885}, %r8908;
	shr.u16 	%rs886, %rs884, 8;
	shr.u16 	%rs887, %rs885, 8;
	mov.b32 	{%rs888, %rs889}, %r8909;
	shr.u16 	%rs890, %rs888, 8;
	shr.u16 	%rs891, %rs889, 8;
	mov.b32 	{%rs892, %rs893}, %r8910;
	shr.u16 	%rs894, %rs892, 8;
	shr.u16 	%rs895, %rs893, 8;
	mov.b32 	{%rs896, %rs897}, %r8911;
	shr.u16 	%rs898, %rs896, 8;
	shr.u16 	%rs899, %rs897, 8;
	ld.local.v4.u32 	{%r8916, %r8917, %r8918, %r8919}, [%rd3+32];
	mov.b32 	{%rs900, %rs901}, %r8916;
	shr.u16 	%rs902, %rs900, 8;
	shr.u16 	%rs903, %rs901, 8;
	mov.b32 	{%rs904, %rs905}, %r8917;
	shr.u16 	%rs906, %rs904, 8;
	shr.u16 	%rs907, %rs905, 8;
	mov.b32 	{%rs908, %rs909}, %r8918;
	shr.u16 	%rs910, %rs908, 8;
	shr.u16 	%rs911, %rs909, 8;
	mov.b32 	{%rs912, %rs913}, %r8919;
	shr.u16 	%rs914, %rs912, 8;
	shr.u16 	%rs915, %rs913, 8;
	ld.local.v4.u32 	{%r8924, %r8925, %r8926, %r8927}, [%rd3+48];
	mov.b32 	{%rs916, %rs917}, %r8924;
	shr.u16 	%rs918, %rs916, 8;
	shr.u16 	%rs919, %rs917, 8;
	mov.b32 	{%rs920, %rs921}, %r8925;
	shr.u16 	%rs922, %rs920, 8;
	shr.u16 	%rs923, %rs921, 8;
	mov.b32 	{%rs924, %rs925}, %r8926;
	shr.u16 	%rs926, %rs924, 8;
	shr.u16 	%rs927, %rs925, 8;
	mov.b32 	{%rs928, %rs929}, %r8927;
	shr.u16 	%rs930, %rs928, 8;
	shr.u16 	%rs931, %rs929, 8;
	ld.local.v4.u32 	{%r8932, %r8933, %r8934, %r8935}, [%rd3+64];
	mov.b32 	{%rs932, %rs933}, %r8932;
	shr.u16 	%rs934, %rs932, 8;
	shr.u16 	%rs935, %rs933, 8;
	mov.b32 	{%rs936, %rs937}, %r8933;
	shr.u16 	%rs938, %rs936, 8;
	shr.u16 	%rs939, %rs937, 8;
	mov.b32 	{%rs940, %rs941}, %r8934;
	shr.u16 	%rs942, %rs940, 8;
	shr.u16 	%rs943, %rs941, 8;
	mov.b32 	{%rs944, %rs945}, %r8935;
	shr.u16 	%rs946, %rs944, 8;
	shr.u16 	%rs947, %rs945, 8;
	ld.local.v4.u32 	{%r8940, %r8941, %r8942, %r8943}, [%rd3+80];
	mov.b32 	{%rs948, %rs949}, %r8940;
	shr.u16 	%rs950, %rs948, 8;
	shr.u16 	%rs951, %rs949, 8;
	mov.b32 	{%rs952, %rs953}, %r8941;
	shr.u16 	%rs954, %rs952, 8;
	shr.u16 	%rs955, %rs953, 8;
	mov.b32 	{%rs956, %rs957}, %r8942;
	shr.u16 	%rs958, %rs956, 8;
	shr.u16 	%rs959, %rs957, 8;
	mov.b32 	{%rs960, %rs961}, %r8943;
	shr.u16 	%rs962, %rs960, 8;
	shr.u16 	%rs963, %rs961, 8;
	ld.local.v4.u32 	{%r8948, %r8949, %r8950, %r8951}, [%rd3+96];
	mov.b32 	{%rs964, %rs965}, %r8948;
	shr.u16 	%rs966, %rs964, 8;
	shr.u16 	%rs967, %rs965, 8;
	mov.b32 	{%rs968, %rs969}, %r8949;
	shr.u16 	%rs970, %rs968, 8;
	shr.u16 	%rs971, %rs969, 8;
	mov.b32 	{%rs972, %rs973}, %r8950;
	shr.u16 	%rs974, %rs972, 8;
	shr.u16 	%rs975, %rs973, 8;
	mov.b32 	{%rs976, %rs977}, %r8951;
	shr.u16 	%rs978, %rs976, 8;
	shr.u16 	%rs979, %rs977, 8;
	ld.local.v4.u32 	{%r8956, %r8957, %r8958, %r8959}, [%rd3+112];
	mov.b32 	{%rs980, %rs981}, %r8956;
	shr.u16 	%rs982, %rs980, 8;
	shr.u16 	%rs983, %rs981, 8;
	mov.b32 	{%rs984, %rs985}, %r8957;
	shr.u16 	%rs986, %rs984, 8;
	shr.u16 	%rs987, %rs985, 8;
	mov.b32 	{%rs988, %rs989}, %r8958;
	shr.u16 	%rs990, %rs988, 8;
	shr.u16 	%rs991, %rs989, 8;
	mov.b32 	{%rs992, %rs993}, %r8959;
	shr.u16 	%rs994, %rs992, 8;
	shr.u16 	%rs995, %rs993, 8;
	cvt.u64.u16 	%rd10481, %rs868;
	shl.b64 	%rd10482, %rd10481, 56;
	cvt.u64.u16 	%rd10483, %rs870;
	shl.b64 	%rd10484, %rd10483, 48;
	or.b64  	%rd10485, %rd10484, %rd10482;
	cvt.u64.u16 	%rd10486, %rs869;
	shl.b64 	%rd10487, %rd10486, 40;
	and.b64  	%rd10488, %rd10487, 280375465082880;
	or.b64  	%rd10489, %rd10485, %rd10488;
	cvt.u64.u16 	%rd10490, %rs871;
	shl.b64 	%rd10491, %rd10490, 32;
	or.b64  	%rd10492, %rd10489, %rd10491;
	cvt.u32.u16 	%r8964, %rs872;
	and.b32  	%r8965, %r8964, 255;
	mul.wide.u32 	%rd10493, %r8965, 16777216;
	or.b64  	%rd10494, %rd10492, %rd10493;
	cvt.u32.u16 	%r8966, %rs874;
	mul.wide.u32 	%rd10495, %r8966, 65536;
	or.b64  	%rd10496, %rd10494, %rd10495;
	cvt.u32.u16 	%r8967, %rs873;
	and.b32  	%r8968, %r8967, 255;
	mul.wide.u32 	%rd10497, %r8968, 256;
	or.b64  	%rd10498, %rd10496, %rd10497;
	cvt.u64.u16 	%rd10499, %rs875;
	or.b64  	%rd10500, %rd10498, %rd10499;
	cvt.u64.u16 	%rd10501, %rs876;
	shl.b64 	%rd10502, %rd10501, 56;
	cvt.u64.u16 	%rd10503, %rs878;
	shl.b64 	%rd10504, %rd10503, 48;
	or.b64  	%rd10505, %rd10504, %rd10502;
	cvt.u64.u16 	%rd10506, %rs877;
	shl.b64 	%rd10507, %rd10506, 40;
	and.b64  	%rd10508, %rd10507, 280375465082880;
	or.b64  	%rd10509, %rd10505, %rd10508;
	cvt.u64.u16 	%rd10510, %rs879;
	shl.b64 	%rd10511, %rd10510, 32;
	or.b64  	%rd10512, %rd10509, %rd10511;
	cvt.u32.u16 	%r8969, %rs880;
	and.b32  	%r8970, %r8969, 255;
	mul.wide.u32 	%rd10513, %r8970, 16777216;
	or.b64  	%rd10514, %rd10512, %rd10513;
	cvt.u32.u16 	%r8971, %rs882;
	mul.wide.u32 	%rd10515, %r8971, 65536;
	or.b64  	%rd10516, %rd10514, %rd10515;
	cvt.u32.u16 	%r8972, %rs881;
	and.b32  	%r8973, %r8972, 255;
	mul.wide.u32 	%rd10517, %r8973, 256;
	or.b64  	%rd10518, %rd10516, %rd10517;
	cvt.u64.u16 	%rd10519, %rs883;
	or.b64  	%rd10520, %rd10518, %rd10519;
	cvt.u64.u16 	%rd10521, %rs884;
	shl.b64 	%rd10522, %rd10521, 56;
	cvt.u64.u16 	%rd10523, %rs886;
	shl.b64 	%rd10524, %rd10523, 48;
	or.b64  	%rd10525, %rd10524, %rd10522;
	cvt.u64.u16 	%rd10526, %rs885;
	shl.b64 	%rd10527, %rd10526, 40;
	and.b64  	%rd10528, %rd10527, 280375465082880;
	or.b64  	%rd10529, %rd10525, %rd10528;
	cvt.u64.u16 	%rd10530, %rs887;
	shl.b64 	%rd10531, %rd10530, 32;
	or.b64  	%rd10532, %rd10529, %rd10531;
	cvt.u32.u16 	%r8974, %rs888;
	and.b32  	%r8975, %r8974, 255;
	mul.wide.u32 	%rd10533, %r8975, 16777216;
	or.b64  	%rd10534, %rd10532, %rd10533;
	cvt.u32.u16 	%r8976, %rs890;
	mul.wide.u32 	%rd10535, %r8976, 65536;
	or.b64  	%rd10536, %rd10534, %rd10535;
	cvt.u32.u16 	%r8977, %rs889;
	and.b32  	%r8978, %r8977, 255;
	mul.wide.u32 	%rd10537, %r8978, 256;
	or.b64  	%rd10538, %rd10536, %rd10537;
	cvt.u64.u16 	%rd10539, %rs891;
	or.b64  	%rd10540, %rd10538, %rd10539;
	cvt.u64.u16 	%rd10541, %rs892;
	shl.b64 	%rd10542, %rd10541, 56;
	cvt.u64.u16 	%rd10543, %rs894;
	shl.b64 	%rd10544, %rd10543, 48;
	or.b64  	%rd10545, %rd10544, %rd10542;
	cvt.u64.u16 	%rd10546, %rs893;
	shl.b64 	%rd10547, %rd10546, 40;
	and.b64  	%rd10548, %rd10547, 280375465082880;
	or.b64  	%rd10549, %rd10545, %rd10548;
	cvt.u64.u16 	%rd10550, %rs895;
	shl.b64 	%rd10551, %rd10550, 32;
	or.b64  	%rd10552, %rd10549, %rd10551;
	cvt.u32.u16 	%r8979, %rs896;
	and.b32  	%r8980, %r8979, 255;
	mul.wide.u32 	%rd10553, %r8980, 16777216;
	or.b64  	%rd10554, %rd10552, %rd10553;
	cvt.u32.u16 	%r8981, %rs898;
	mul.wide.u32 	%rd10555, %r8981, 65536;
	or.b64  	%rd10556, %rd10554, %rd10555;
	cvt.u32.u16 	%r8982, %rs897;
	and.b32  	%r8983, %r8982, 255;
	mul.wide.u32 	%rd10557, %r8983, 256;
	or.b64  	%rd10558, %rd10556, %rd10557;
	cvt.u64.u16 	%rd10559, %rs899;
	or.b64  	%rd10560, %rd10558, %rd10559;
	cvt.u64.u16 	%rd10561, %rs900;
	shl.b64 	%rd10562, %rd10561, 56;
	cvt.u64.u16 	%rd10563, %rs902;
	shl.b64 	%rd10564, %rd10563, 48;
	or.b64  	%rd10565, %rd10564, %rd10562;
	cvt.u64.u16 	%rd10566, %rs901;
	shl.b64 	%rd10567, %rd10566, 40;
	and.b64  	%rd10568, %rd10567, 280375465082880;
	or.b64  	%rd10569, %rd10565, %rd10568;
	cvt.u64.u16 	%rd10570, %rs903;
	shl.b64 	%rd10571, %rd10570, 32;
	or.b64  	%rd10572, %rd10569, %rd10571;
	cvt.u32.u16 	%r8984, %rs904;
	and.b32  	%r8985, %r8984, 255;
	mul.wide.u32 	%rd10573, %r8985, 16777216;
	or.b64  	%rd10574, %rd10572, %rd10573;
	cvt.u32.u16 	%r8986, %rs906;
	mul.wide.u32 	%rd10575, %r8986, 65536;
	or.b64  	%rd10576, %rd10574, %rd10575;
	cvt.u32.u16 	%r8987, %rs905;
	and.b32  	%r8988, %r8987, 255;
	mul.wide.u32 	%rd10577, %r8988, 256;
	or.b64  	%rd10578, %rd10576, %rd10577;
	cvt.u64.u16 	%rd10579, %rs907;
	or.b64  	%rd10580, %rd10578, %rd10579;
	cvt.u64.u16 	%rd10581, %rs908;
	shl.b64 	%rd10582, %rd10581, 56;
	cvt.u64.u16 	%rd10583, %rs910;
	shl.b64 	%rd10584, %rd10583, 48;
	or.b64  	%rd10585, %rd10584, %rd10582;
	cvt.u64.u16 	%rd10586, %rs909;
	shl.b64 	%rd10587, %rd10586, 40;
	and.b64  	%rd10588, %rd10587, 280375465082880;
	or.b64  	%rd10589, %rd10585, %rd10588;
	cvt.u64.u16 	%rd10590, %rs911;
	shl.b64 	%rd10591, %rd10590, 32;
	or.b64  	%rd10592, %rd10589, %rd10591;
	cvt.u32.u16 	%r8989, %rs912;
	and.b32  	%r8990, %r8989, 255;
	mul.wide.u32 	%rd10593, %r8990, 16777216;
	or.b64  	%rd10594, %rd10592, %rd10593;
	cvt.u32.u16 	%r8991, %rs914;
	mul.wide.u32 	%rd10595, %r8991, 65536;
	or.b64  	%rd10596, %rd10594, %rd10595;
	cvt.u32.u16 	%r8992, %rs913;
	and.b32  	%r8993, %r8992, 255;
	mul.wide.u32 	%rd10597, %r8993, 256;
	or.b64  	%rd10598, %rd10596, %rd10597;
	cvt.u64.u16 	%rd10599, %rs915;
	or.b64  	%rd10600, %rd10598, %rd10599;
	cvt.u64.u16 	%rd10601, %rs916;
	shl.b64 	%rd10602, %rd10601, 56;
	cvt.u64.u16 	%rd10603, %rs918;
	shl.b64 	%rd10604, %rd10603, 48;
	or.b64  	%rd10605, %rd10604, %rd10602;
	cvt.u64.u16 	%rd10606, %rs917;
	shl.b64 	%rd10607, %rd10606, 40;
	and.b64  	%rd10608, %rd10607, 280375465082880;
	or.b64  	%rd10609, %rd10605, %rd10608;
	cvt.u64.u16 	%rd10610, %rs919;
	shl.b64 	%rd10611, %rd10610, 32;
	or.b64  	%rd10612, %rd10609, %rd10611;
	cvt.u32.u16 	%r8994, %rs920;
	and.b32  	%r8995, %r8994, 255;
	mul.wide.u32 	%rd10613, %r8995, 16777216;
	or.b64  	%rd10614, %rd10612, %rd10613;
	cvt.u32.u16 	%r8996, %rs922;
	mul.wide.u32 	%rd10615, %r8996, 65536;
	or.b64  	%rd10616, %rd10614, %rd10615;
	cvt.u32.u16 	%r8997, %rs921;
	and.b32  	%r8998, %r8997, 255;
	mul.wide.u32 	%rd10617, %r8998, 256;
	or.b64  	%rd10618, %rd10616, %rd10617;
	cvt.u64.u16 	%rd10619, %rs923;
	or.b64  	%rd10620, %rd10618, %rd10619;
	cvt.u64.u16 	%rd10621, %rs924;
	shl.b64 	%rd10622, %rd10621, 56;
	cvt.u64.u16 	%rd10623, %rs926;
	shl.b64 	%rd10624, %rd10623, 48;
	or.b64  	%rd10625, %rd10624, %rd10622;
	cvt.u64.u16 	%rd10626, %rs925;
	shl.b64 	%rd10627, %rd10626, 40;
	and.b64  	%rd10628, %rd10627, 280375465082880;
	or.b64  	%rd10629, %rd10625, %rd10628;
	cvt.u64.u16 	%rd10630, %rs927;
	shl.b64 	%rd10631, %rd10630, 32;
	or.b64  	%rd10632, %rd10629, %rd10631;
	cvt.u32.u16 	%r8999, %rs928;
	and.b32  	%r9000, %r8999, 255;
	mul.wide.u32 	%rd10633, %r9000, 16777216;
	or.b64  	%rd10634, %rd10632, %rd10633;
	cvt.u32.u16 	%r9001, %rs930;
	mul.wide.u32 	%rd10635, %r9001, 65536;
	or.b64  	%rd10636, %rd10634, %rd10635;
	cvt.u32.u16 	%r9002, %rs929;
	and.b32  	%r9003, %r9002, 255;
	mul.wide.u32 	%rd10637, %r9003, 256;
	or.b64  	%rd10638, %rd10636, %rd10637;
	cvt.u64.u16 	%rd10639, %rs931;
	or.b64  	%rd10640, %rd10638, %rd10639;
	cvt.u64.u16 	%rd10641, %rs932;
	shl.b64 	%rd10642, %rd10641, 56;
	cvt.u64.u16 	%rd10643, %rs934;
	shl.b64 	%rd10644, %rd10643, 48;
	or.b64  	%rd10645, %rd10644, %rd10642;
	cvt.u64.u16 	%rd10646, %rs933;
	shl.b64 	%rd10647, %rd10646, 40;
	and.b64  	%rd10648, %rd10647, 280375465082880;
	or.b64  	%rd10649, %rd10645, %rd10648;
	cvt.u64.u16 	%rd10650, %rs935;
	shl.b64 	%rd10651, %rd10650, 32;
	or.b64  	%rd10652, %rd10649, %rd10651;
	cvt.u32.u16 	%r9004, %rs936;
	and.b32  	%r9005, %r9004, 255;
	mul.wide.u32 	%rd10653, %r9005, 16777216;
	or.b64  	%rd10654, %rd10652, %rd10653;
	cvt.u32.u16 	%r9006, %rs938;
	mul.wide.u32 	%rd10655, %r9006, 65536;
	or.b64  	%rd10656, %rd10654, %rd10655;
	cvt.u32.u16 	%r9007, %rs937;
	and.b32  	%r9008, %r9007, 255;
	mul.wide.u32 	%rd10657, %r9008, 256;
	or.b64  	%rd10658, %rd10656, %rd10657;
	cvt.u64.u16 	%rd10659, %rs939;
	or.b64  	%rd10660, %rd10658, %rd10659;
	cvt.u64.u16 	%rd10661, %rs940;
	shl.b64 	%rd10662, %rd10661, 56;
	cvt.u64.u16 	%rd10663, %rs942;
	shl.b64 	%rd10664, %rd10663, 48;
	or.b64  	%rd10665, %rd10664, %rd10662;
	cvt.u64.u16 	%rd10666, %rs941;
	shl.b64 	%rd10667, %rd10666, 40;
	and.b64  	%rd10668, %rd10667, 280375465082880;
	or.b64  	%rd10669, %rd10665, %rd10668;
	cvt.u64.u16 	%rd10670, %rs943;
	shl.b64 	%rd10671, %rd10670, 32;
	or.b64  	%rd10672, %rd10669, %rd10671;
	cvt.u32.u16 	%r9009, %rs944;
	and.b32  	%r9010, %r9009, 255;
	mul.wide.u32 	%rd10673, %r9010, 16777216;
	or.b64  	%rd10674, %rd10672, %rd10673;
	cvt.u32.u16 	%r9011, %rs946;
	mul.wide.u32 	%rd10675, %r9011, 65536;
	or.b64  	%rd10676, %rd10674, %rd10675;
	cvt.u32.u16 	%r9012, %rs945;
	and.b32  	%r9013, %r9012, 255;
	mul.wide.u32 	%rd10677, %r9013, 256;
	or.b64  	%rd10678, %rd10676, %rd10677;
	cvt.u64.u16 	%rd10679, %rs947;
	or.b64  	%rd10680, %rd10678, %rd10679;
	cvt.u64.u16 	%rd10681, %rs948;
	shl.b64 	%rd10682, %rd10681, 56;
	cvt.u64.u16 	%rd10683, %rs950;
	shl.b64 	%rd10684, %rd10683, 48;
	or.b64  	%rd10685, %rd10684, %rd10682;
	cvt.u64.u16 	%rd10686, %rs949;
	shl.b64 	%rd10687, %rd10686, 40;
	and.b64  	%rd10688, %rd10687, 280375465082880;
	or.b64  	%rd10689, %rd10685, %rd10688;
	cvt.u64.u16 	%rd10690, %rs951;
	shl.b64 	%rd10691, %rd10690, 32;
	or.b64  	%rd10692, %rd10689, %rd10691;
	cvt.u32.u16 	%r9014, %rs952;
	and.b32  	%r9015, %r9014, 255;
	mul.wide.u32 	%rd10693, %r9015, 16777216;
	or.b64  	%rd10694, %rd10692, %rd10693;
	cvt.u32.u16 	%r9016, %rs954;
	mul.wide.u32 	%rd10695, %r9016, 65536;
	or.b64  	%rd10696, %rd10694, %rd10695;
	cvt.u32.u16 	%r9017, %rs953;
	and.b32  	%r9018, %r9017, 255;
	mul.wide.u32 	%rd10697, %r9018, 256;
	or.b64  	%rd10698, %rd10696, %rd10697;
	cvt.u64.u16 	%rd10699, %rs955;
	or.b64  	%rd10700, %rd10698, %rd10699;
	cvt.u64.u16 	%rd10701, %rs956;
	shl.b64 	%rd10702, %rd10701, 56;
	cvt.u64.u16 	%rd10703, %rs958;
	shl.b64 	%rd10704, %rd10703, 48;
	or.b64  	%rd10705, %rd10704, %rd10702;
	cvt.u64.u16 	%rd10706, %rs957;
	shl.b64 	%rd10707, %rd10706, 40;
	and.b64  	%rd10708, %rd10707, 280375465082880;
	or.b64  	%rd10709, %rd10705, %rd10708;
	cvt.u64.u16 	%rd10710, %rs959;
	shl.b64 	%rd10711, %rd10710, 32;
	or.b64  	%rd10712, %rd10709, %rd10711;
	cvt.u32.u16 	%r9019, %rs960;
	and.b32  	%r9020, %r9019, 255;
	mul.wide.u32 	%rd10713, %r9020, 16777216;
	or.b64  	%rd10714, %rd10712, %rd10713;
	cvt.u32.u16 	%r9021, %rs962;
	mul.wide.u32 	%rd10715, %r9021, 65536;
	or.b64  	%rd10716, %rd10714, %rd10715;
	cvt.u32.u16 	%r9022, %rs961;
	and.b32  	%r9023, %r9022, 255;
	mul.wide.u32 	%rd10717, %r9023, 256;
	or.b64  	%rd10718, %rd10716, %rd10717;
	cvt.u64.u16 	%rd10719, %rs963;
	or.b64  	%rd10720, %rd10718, %rd10719;
	cvt.u64.u16 	%rd10721, %rs964;
	shl.b64 	%rd10722, %rd10721, 56;
	cvt.u64.u16 	%rd10723, %rs966;
	shl.b64 	%rd10724, %rd10723, 48;
	or.b64  	%rd10725, %rd10724, %rd10722;
	cvt.u64.u16 	%rd10726, %rs965;
	shl.b64 	%rd10727, %rd10726, 40;
	and.b64  	%rd10728, %rd10727, 280375465082880;
	or.b64  	%rd10729, %rd10725, %rd10728;
	cvt.u64.u16 	%rd10730, %rs967;
	shl.b64 	%rd10731, %rd10730, 32;
	or.b64  	%rd10732, %rd10729, %rd10731;
	cvt.u32.u16 	%r9024, %rs968;
	and.b32  	%r9025, %r9024, 255;
	mul.wide.u32 	%rd10733, %r9025, 16777216;
	or.b64  	%rd10734, %rd10732, %rd10733;
	cvt.u32.u16 	%r9026, %rs970;
	mul.wide.u32 	%rd10735, %r9026, 65536;
	or.b64  	%rd10736, %rd10734, %rd10735;
	cvt.u32.u16 	%r9027, %rs969;
	and.b32  	%r9028, %r9027, 255;
	mul.wide.u32 	%rd10737, %r9028, 256;
	or.b64  	%rd10738, %rd10736, %rd10737;
	cvt.u64.u16 	%rd10739, %rs971;
	or.b64  	%rd10740, %rd10738, %rd10739;
	cvt.u64.u16 	%rd10741, %rs972;
	shl.b64 	%rd10742, %rd10741, 56;
	cvt.u64.u16 	%rd10743, %rs974;
	shl.b64 	%rd10744, %rd10743, 48;
	or.b64  	%rd10745, %rd10744, %rd10742;
	cvt.u64.u16 	%rd10746, %rs973;
	shl.b64 	%rd10747, %rd10746, 40;
	and.b64  	%rd10748, %rd10747, 280375465082880;
	or.b64  	%rd10749, %rd10745, %rd10748;
	cvt.u64.u16 	%rd10750, %rs975;
	shl.b64 	%rd10751, %rd10750, 32;
	or.b64  	%rd10752, %rd10749, %rd10751;
	cvt.u32.u16 	%r9029, %rs976;
	and.b32  	%r9030, %r9029, 255;
	mul.wide.u32 	%rd10753, %r9030, 16777216;
	or.b64  	%rd10754, %rd10752, %rd10753;
	cvt.u32.u16 	%r9031, %rs978;
	mul.wide.u32 	%rd10755, %r9031, 65536;
	or.b64  	%rd10756, %rd10754, %rd10755;
	cvt.u32.u16 	%r9032, %rs977;
	and.b32  	%r9033, %r9032, 255;
	mul.wide.u32 	%rd10757, %r9033, 256;
	or.b64  	%rd10758, %rd10756, %rd10757;
	cvt.u64.u16 	%rd10759, %rs979;
	or.b64  	%rd10760, %rd10758, %rd10759;
	cvt.u64.u16 	%rd10761, %rs980;
	shl.b64 	%rd10762, %rd10761, 56;
	cvt.u64.u16 	%rd10763, %rs982;
	shl.b64 	%rd10764, %rd10763, 48;
	or.b64  	%rd10765, %rd10764, %rd10762;
	cvt.u64.u16 	%rd10766, %rs981;
	shl.b64 	%rd10767, %rd10766, 40;
	and.b64  	%rd10768, %rd10767, 280375465082880;
	or.b64  	%rd10769, %rd10765, %rd10768;
	cvt.u64.u16 	%rd10770, %rs983;
	shl.b64 	%rd10771, %rd10770, 32;
	or.b64  	%rd10772, %rd10769, %rd10771;
	cvt.u32.u16 	%r9034, %rs984;
	and.b32  	%r9035, %r9034, 255;
	mul.wide.u32 	%rd10773, %r9035, 16777216;
	or.b64  	%rd10774, %rd10772, %rd10773;
	cvt.u32.u16 	%r9036, %rs986;
	mul.wide.u32 	%rd10775, %r9036, 65536;
	or.b64  	%rd10776, %rd10774, %rd10775;
	cvt.u32.u16 	%r9037, %rs985;
	and.b32  	%r9038, %r9037, 255;
	mul.wide.u32 	%rd10777, %r9038, 256;
	or.b64  	%rd10778, %rd10776, %rd10777;
	cvt.u64.u16 	%rd10779, %rs987;
	or.b64  	%rd10780, %rd10778, %rd10779;
	cvt.u64.u16 	%rd10781, %rs988;
	shl.b64 	%rd10782, %rd10781, 56;
	cvt.u64.u16 	%rd10783, %rs990;
	shl.b64 	%rd10784, %rd10783, 48;
	or.b64  	%rd10785, %rd10784, %rd10782;
	cvt.u64.u16 	%rd10786, %rs989;
	shl.b64 	%rd10787, %rd10786, 40;
	and.b64  	%rd10788, %rd10787, 280375465082880;
	or.b64  	%rd10789, %rd10785, %rd10788;
	cvt.u64.u16 	%rd10790, %rs991;
	shl.b64 	%rd10791, %rd10790, 32;
	or.b64  	%rd10792, %rd10789, %rd10791;
	cvt.u32.u16 	%r9039, %rs992;
	and.b32  	%r9040, %r9039, 255;
	mul.wide.u32 	%rd10793, %r9040, 16777216;
	or.b64  	%rd10794, %rd10792, %rd10793;
	cvt.u32.u16 	%r9041, %rs994;
	mul.wide.u32 	%rd10795, %r9041, 65536;
	or.b64  	%rd10796, %rd10794, %rd10795;
	cvt.u32.u16 	%r9042, %rs993;
	and.b32  	%r9043, %r9042, 255;
	mul.wide.u32 	%rd10797, %r9043, 256;
	or.b64  	%rd10798, %rd10796, %rd10797;
	cvt.u64.u16 	%rd10799, %rs995;
	or.b64  	%rd10800, %rd10798, %rd10799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9044,%dummy}, %rd10520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9045}, %rd10520;
	}
	shf.r.wrap.b32 	%r9046, %r9045, %r9044, 1;
	shf.r.wrap.b32 	%r9047, %r9044, %r9045, 1;
	mov.b64 	%rd10801, {%r9047, %r9046};
	shf.r.wrap.b32 	%r9048, %r9045, %r9044, 8;
	shf.r.wrap.b32 	%r9049, %r9044, %r9045, 8;
	mov.b64 	%rd10802, {%r9049, %r9048};
	xor.b64  	%rd10803, %rd10801, %rd10802;
	shr.u64 	%rd10804, %rd10520, 7;
	xor.b64  	%rd10805, %rd10803, %rd10804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9050,%dummy}, %rd10780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9051}, %rd10780;
	}
	shf.r.wrap.b32 	%r9052, %r9051, %r9050, 19;
	shf.r.wrap.b32 	%r9053, %r9050, %r9051, 19;
	mov.b64 	%rd10806, {%r9053, %r9052};
	shf.l.wrap.b32 	%r9054, %r9050, %r9051, 3;
	shf.l.wrap.b32 	%r9055, %r9051, %r9050, 3;
	mov.b64 	%rd10807, {%r9055, %r9054};
	xor.b64  	%rd10808, %rd10806, %rd10807;
	shr.u64 	%rd10809, %rd10780, 6;
	xor.b64  	%rd10810, %rd10808, %rd10809;
	add.s64 	%rd10811, %rd10805, %rd10500;
	add.s64 	%rd10812, %rd10811, %rd10680;
	add.s64 	%rd10813, %rd10812, %rd10810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9056,%dummy}, %rd10540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9057}, %rd10540;
	}
	shf.r.wrap.b32 	%r9058, %r9057, %r9056, 1;
	shf.r.wrap.b32 	%r9059, %r9056, %r9057, 1;
	mov.b64 	%rd10814, {%r9059, %r9058};
	shf.r.wrap.b32 	%r9060, %r9057, %r9056, 8;
	shf.r.wrap.b32 	%r9061, %r9056, %r9057, 8;
	mov.b64 	%rd10815, {%r9061, %r9060};
	xor.b64  	%rd10816, %rd10814, %rd10815;
	shr.u64 	%rd10817, %rd10540, 7;
	xor.b64  	%rd10818, %rd10816, %rd10817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9062,%dummy}, %rd10800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9063}, %rd10800;
	}
	shf.r.wrap.b32 	%r9064, %r9063, %r9062, 19;
	shf.r.wrap.b32 	%r9065, %r9062, %r9063, 19;
	mov.b64 	%rd10819, {%r9065, %r9064};
	shf.l.wrap.b32 	%r9066, %r9062, %r9063, 3;
	shf.l.wrap.b32 	%r9067, %r9063, %r9062, 3;
	mov.b64 	%rd10820, {%r9067, %r9066};
	xor.b64  	%rd10821, %rd10819, %rd10820;
	shr.u64 	%rd10822, %rd10800, 6;
	xor.b64  	%rd10823, %rd10821, %rd10822;
	add.s64 	%rd10824, %rd10818, %rd10520;
	add.s64 	%rd10825, %rd10824, %rd10700;
	add.s64 	%rd10826, %rd10825, %rd10823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9068,%dummy}, %rd10560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9069}, %rd10560;
	}
	shf.r.wrap.b32 	%r9070, %r9069, %r9068, 1;
	shf.r.wrap.b32 	%r9071, %r9068, %r9069, 1;
	mov.b64 	%rd10827, {%r9071, %r9070};
	shf.r.wrap.b32 	%r9072, %r9069, %r9068, 8;
	shf.r.wrap.b32 	%r9073, %r9068, %r9069, 8;
	mov.b64 	%rd10828, {%r9073, %r9072};
	xor.b64  	%rd10829, %rd10827, %rd10828;
	shr.u64 	%rd10830, %rd10560, 7;
	xor.b64  	%rd10831, %rd10829, %rd10830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9074,%dummy}, %rd10813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9075}, %rd10813;
	}
	shf.r.wrap.b32 	%r9076, %r9075, %r9074, 19;
	shf.r.wrap.b32 	%r9077, %r9074, %r9075, 19;
	mov.b64 	%rd10832, {%r9077, %r9076};
	shf.l.wrap.b32 	%r9078, %r9074, %r9075, 3;
	shf.l.wrap.b32 	%r9079, %r9075, %r9074, 3;
	mov.b64 	%rd10833, {%r9079, %r9078};
	xor.b64  	%rd10834, %rd10832, %rd10833;
	shr.u64 	%rd10835, %rd10813, 6;
	xor.b64  	%rd10836, %rd10834, %rd10835;
	add.s64 	%rd10837, %rd10831, %rd10540;
	add.s64 	%rd10838, %rd10837, %rd10720;
	add.s64 	%rd10839, %rd10838, %rd10836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9080,%dummy}, %rd10580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9081}, %rd10580;
	}
	shf.r.wrap.b32 	%r9082, %r9081, %r9080, 1;
	shf.r.wrap.b32 	%r9083, %r9080, %r9081, 1;
	mov.b64 	%rd10840, {%r9083, %r9082};
	shf.r.wrap.b32 	%r9084, %r9081, %r9080, 8;
	shf.r.wrap.b32 	%r9085, %r9080, %r9081, 8;
	mov.b64 	%rd10841, {%r9085, %r9084};
	xor.b64  	%rd10842, %rd10840, %rd10841;
	shr.u64 	%rd10843, %rd10580, 7;
	xor.b64  	%rd10844, %rd10842, %rd10843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9086,%dummy}, %rd10826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9087}, %rd10826;
	}
	shf.r.wrap.b32 	%r9088, %r9087, %r9086, 19;
	shf.r.wrap.b32 	%r9089, %r9086, %r9087, 19;
	mov.b64 	%rd10845, {%r9089, %r9088};
	shf.l.wrap.b32 	%r9090, %r9086, %r9087, 3;
	shf.l.wrap.b32 	%r9091, %r9087, %r9086, 3;
	mov.b64 	%rd10846, {%r9091, %r9090};
	xor.b64  	%rd10847, %rd10845, %rd10846;
	shr.u64 	%rd10848, %rd10826, 6;
	xor.b64  	%rd10849, %rd10847, %rd10848;
	add.s64 	%rd10850, %rd10844, %rd10560;
	add.s64 	%rd10851, %rd10850, %rd10740;
	add.s64 	%rd10852, %rd10851, %rd10849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9092,%dummy}, %rd10600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9093}, %rd10600;
	}
	shf.r.wrap.b32 	%r9094, %r9093, %r9092, 1;
	shf.r.wrap.b32 	%r9095, %r9092, %r9093, 1;
	mov.b64 	%rd10853, {%r9095, %r9094};
	shf.r.wrap.b32 	%r9096, %r9093, %r9092, 8;
	shf.r.wrap.b32 	%r9097, %r9092, %r9093, 8;
	mov.b64 	%rd10854, {%r9097, %r9096};
	xor.b64  	%rd10855, %rd10853, %rd10854;
	shr.u64 	%rd10856, %rd10600, 7;
	xor.b64  	%rd10857, %rd10855, %rd10856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9098,%dummy}, %rd10839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9099}, %rd10839;
	}
	shf.r.wrap.b32 	%r9100, %r9099, %r9098, 19;
	shf.r.wrap.b32 	%r9101, %r9098, %r9099, 19;
	mov.b64 	%rd10858, {%r9101, %r9100};
	shf.l.wrap.b32 	%r9102, %r9098, %r9099, 3;
	shf.l.wrap.b32 	%r9103, %r9099, %r9098, 3;
	mov.b64 	%rd10859, {%r9103, %r9102};
	xor.b64  	%rd10860, %rd10858, %rd10859;
	shr.u64 	%rd10861, %rd10839, 6;
	xor.b64  	%rd10862, %rd10860, %rd10861;
	add.s64 	%rd10863, %rd10857, %rd10580;
	add.s64 	%rd10864, %rd10863, %rd10760;
	add.s64 	%rd10865, %rd10864, %rd10862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9104,%dummy}, %rd10620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9105}, %rd10620;
	}
	shf.r.wrap.b32 	%r9106, %r9105, %r9104, 1;
	shf.r.wrap.b32 	%r9107, %r9104, %r9105, 1;
	mov.b64 	%rd10866, {%r9107, %r9106};
	shf.r.wrap.b32 	%r9108, %r9105, %r9104, 8;
	shf.r.wrap.b32 	%r9109, %r9104, %r9105, 8;
	mov.b64 	%rd10867, {%r9109, %r9108};
	xor.b64  	%rd10868, %rd10866, %rd10867;
	shr.u64 	%rd10869, %rd10620, 7;
	xor.b64  	%rd10870, %rd10868, %rd10869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9110,%dummy}, %rd10852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9111}, %rd10852;
	}
	shf.r.wrap.b32 	%r9112, %r9111, %r9110, 19;
	shf.r.wrap.b32 	%r9113, %r9110, %r9111, 19;
	mov.b64 	%rd10871, {%r9113, %r9112};
	shf.l.wrap.b32 	%r9114, %r9110, %r9111, 3;
	shf.l.wrap.b32 	%r9115, %r9111, %r9110, 3;
	mov.b64 	%rd10872, {%r9115, %r9114};
	xor.b64  	%rd10873, %rd10871, %rd10872;
	shr.u64 	%rd10874, %rd10852, 6;
	xor.b64  	%rd10875, %rd10873, %rd10874;
	add.s64 	%rd10876, %rd10870, %rd10600;
	add.s64 	%rd10877, %rd10876, %rd10780;
	add.s64 	%rd10878, %rd10877, %rd10875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9116,%dummy}, %rd10640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9117}, %rd10640;
	}
	shf.r.wrap.b32 	%r9118, %r9117, %r9116, 1;
	shf.r.wrap.b32 	%r9119, %r9116, %r9117, 1;
	mov.b64 	%rd10879, {%r9119, %r9118};
	shf.r.wrap.b32 	%r9120, %r9117, %r9116, 8;
	shf.r.wrap.b32 	%r9121, %r9116, %r9117, 8;
	mov.b64 	%rd10880, {%r9121, %r9120};
	xor.b64  	%rd10881, %rd10879, %rd10880;
	shr.u64 	%rd10882, %rd10640, 7;
	xor.b64  	%rd10883, %rd10881, %rd10882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9122,%dummy}, %rd10865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9123}, %rd10865;
	}
	shf.r.wrap.b32 	%r9124, %r9123, %r9122, 19;
	shf.r.wrap.b32 	%r9125, %r9122, %r9123, 19;
	mov.b64 	%rd10884, {%r9125, %r9124};
	shf.l.wrap.b32 	%r9126, %r9122, %r9123, 3;
	shf.l.wrap.b32 	%r9127, %r9123, %r9122, 3;
	mov.b64 	%rd10885, {%r9127, %r9126};
	xor.b64  	%rd10886, %rd10884, %rd10885;
	shr.u64 	%rd10887, %rd10865, 6;
	xor.b64  	%rd10888, %rd10886, %rd10887;
	add.s64 	%rd10889, %rd10883, %rd10620;
	add.s64 	%rd10890, %rd10889, %rd10800;
	add.s64 	%rd10891, %rd10890, %rd10888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9128,%dummy}, %rd10660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9129}, %rd10660;
	}
	shf.r.wrap.b32 	%r9130, %r9129, %r9128, 1;
	shf.r.wrap.b32 	%r9131, %r9128, %r9129, 1;
	mov.b64 	%rd10892, {%r9131, %r9130};
	shf.r.wrap.b32 	%r9132, %r9129, %r9128, 8;
	shf.r.wrap.b32 	%r9133, %r9128, %r9129, 8;
	mov.b64 	%rd10893, {%r9133, %r9132};
	xor.b64  	%rd10894, %rd10892, %rd10893;
	shr.u64 	%rd10895, %rd10660, 7;
	xor.b64  	%rd10896, %rd10894, %rd10895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9134,%dummy}, %rd10878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9135}, %rd10878;
	}
	shf.r.wrap.b32 	%r9136, %r9135, %r9134, 19;
	shf.r.wrap.b32 	%r9137, %r9134, %r9135, 19;
	mov.b64 	%rd10897, {%r9137, %r9136};
	shf.l.wrap.b32 	%r9138, %r9134, %r9135, 3;
	shf.l.wrap.b32 	%r9139, %r9135, %r9134, 3;
	mov.b64 	%rd10898, {%r9139, %r9138};
	xor.b64  	%rd10899, %rd10897, %rd10898;
	shr.u64 	%rd10900, %rd10878, 6;
	xor.b64  	%rd10901, %rd10899, %rd10900;
	add.s64 	%rd10902, %rd10896, %rd10640;
	add.s64 	%rd10903, %rd10902, %rd10813;
	add.s64 	%rd10904, %rd10903, %rd10901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9140,%dummy}, %rd10680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9141}, %rd10680;
	}
	shf.r.wrap.b32 	%r9142, %r9141, %r9140, 1;
	shf.r.wrap.b32 	%r9143, %r9140, %r9141, 1;
	mov.b64 	%rd10905, {%r9143, %r9142};
	shf.r.wrap.b32 	%r9144, %r9141, %r9140, 8;
	shf.r.wrap.b32 	%r9145, %r9140, %r9141, 8;
	mov.b64 	%rd10906, {%r9145, %r9144};
	xor.b64  	%rd10907, %rd10905, %rd10906;
	shr.u64 	%rd10908, %rd10680, 7;
	xor.b64  	%rd10909, %rd10907, %rd10908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9146,%dummy}, %rd10891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9147}, %rd10891;
	}
	shf.r.wrap.b32 	%r9148, %r9147, %r9146, 19;
	shf.r.wrap.b32 	%r9149, %r9146, %r9147, 19;
	mov.b64 	%rd10910, {%r9149, %r9148};
	shf.l.wrap.b32 	%r9150, %r9146, %r9147, 3;
	shf.l.wrap.b32 	%r9151, %r9147, %r9146, 3;
	mov.b64 	%rd10911, {%r9151, %r9150};
	xor.b64  	%rd10912, %rd10910, %rd10911;
	shr.u64 	%rd10913, %rd10891, 6;
	xor.b64  	%rd10914, %rd10912, %rd10913;
	add.s64 	%rd10915, %rd10909, %rd10660;
	add.s64 	%rd10916, %rd10915, %rd10826;
	add.s64 	%rd10917, %rd10916, %rd10914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9152,%dummy}, %rd10700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9153}, %rd10700;
	}
	shf.r.wrap.b32 	%r9154, %r9153, %r9152, 1;
	shf.r.wrap.b32 	%r9155, %r9152, %r9153, 1;
	mov.b64 	%rd10918, {%r9155, %r9154};
	shf.r.wrap.b32 	%r9156, %r9153, %r9152, 8;
	shf.r.wrap.b32 	%r9157, %r9152, %r9153, 8;
	mov.b64 	%rd10919, {%r9157, %r9156};
	xor.b64  	%rd10920, %rd10918, %rd10919;
	shr.u64 	%rd10921, %rd10700, 7;
	xor.b64  	%rd10922, %rd10920, %rd10921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9158,%dummy}, %rd10904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9159}, %rd10904;
	}
	shf.r.wrap.b32 	%r9160, %r9159, %r9158, 19;
	shf.r.wrap.b32 	%r9161, %r9158, %r9159, 19;
	mov.b64 	%rd10923, {%r9161, %r9160};
	shf.l.wrap.b32 	%r9162, %r9158, %r9159, 3;
	shf.l.wrap.b32 	%r9163, %r9159, %r9158, 3;
	mov.b64 	%rd10924, {%r9163, %r9162};
	xor.b64  	%rd10925, %rd10923, %rd10924;
	shr.u64 	%rd10926, %rd10904, 6;
	xor.b64  	%rd10927, %rd10925, %rd10926;
	add.s64 	%rd10928, %rd10922, %rd10680;
	add.s64 	%rd10929, %rd10928, %rd10839;
	add.s64 	%rd10930, %rd10929, %rd10927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9164,%dummy}, %rd10720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9165}, %rd10720;
	}
	shf.r.wrap.b32 	%r9166, %r9165, %r9164, 1;
	shf.r.wrap.b32 	%r9167, %r9164, %r9165, 1;
	mov.b64 	%rd10931, {%r9167, %r9166};
	shf.r.wrap.b32 	%r9168, %r9165, %r9164, 8;
	shf.r.wrap.b32 	%r9169, %r9164, %r9165, 8;
	mov.b64 	%rd10932, {%r9169, %r9168};
	xor.b64  	%rd10933, %rd10931, %rd10932;
	shr.u64 	%rd10934, %rd10720, 7;
	xor.b64  	%rd10935, %rd10933, %rd10934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9170,%dummy}, %rd10917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9171}, %rd10917;
	}
	shf.r.wrap.b32 	%r9172, %r9171, %r9170, 19;
	shf.r.wrap.b32 	%r9173, %r9170, %r9171, 19;
	mov.b64 	%rd10936, {%r9173, %r9172};
	shf.l.wrap.b32 	%r9174, %r9170, %r9171, 3;
	shf.l.wrap.b32 	%r9175, %r9171, %r9170, 3;
	mov.b64 	%rd10937, {%r9175, %r9174};
	xor.b64  	%rd10938, %rd10936, %rd10937;
	shr.u64 	%rd10939, %rd10917, 6;
	xor.b64  	%rd10940, %rd10938, %rd10939;
	add.s64 	%rd10941, %rd10935, %rd10700;
	add.s64 	%rd10942, %rd10941, %rd10852;
	add.s64 	%rd10943, %rd10942, %rd10940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9176,%dummy}, %rd10740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9177}, %rd10740;
	}
	shf.r.wrap.b32 	%r9178, %r9177, %r9176, 1;
	shf.r.wrap.b32 	%r9179, %r9176, %r9177, 1;
	mov.b64 	%rd10944, {%r9179, %r9178};
	shf.r.wrap.b32 	%r9180, %r9177, %r9176, 8;
	shf.r.wrap.b32 	%r9181, %r9176, %r9177, 8;
	mov.b64 	%rd10945, {%r9181, %r9180};
	xor.b64  	%rd10946, %rd10944, %rd10945;
	shr.u64 	%rd10947, %rd10740, 7;
	xor.b64  	%rd10948, %rd10946, %rd10947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9182,%dummy}, %rd10930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9183}, %rd10930;
	}
	shf.r.wrap.b32 	%r9184, %r9183, %r9182, 19;
	shf.r.wrap.b32 	%r9185, %r9182, %r9183, 19;
	mov.b64 	%rd10949, {%r9185, %r9184};
	shf.l.wrap.b32 	%r9186, %r9182, %r9183, 3;
	shf.l.wrap.b32 	%r9187, %r9183, %r9182, 3;
	mov.b64 	%rd10950, {%r9187, %r9186};
	xor.b64  	%rd10951, %rd10949, %rd10950;
	shr.u64 	%rd10952, %rd10930, 6;
	xor.b64  	%rd10953, %rd10951, %rd10952;
	add.s64 	%rd10954, %rd10948, %rd10720;
	add.s64 	%rd10955, %rd10954, %rd10865;
	add.s64 	%rd10956, %rd10955, %rd10953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9188,%dummy}, %rd10760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9189}, %rd10760;
	}
	shf.r.wrap.b32 	%r9190, %r9189, %r9188, 1;
	shf.r.wrap.b32 	%r9191, %r9188, %r9189, 1;
	mov.b64 	%rd10957, {%r9191, %r9190};
	shf.r.wrap.b32 	%r9192, %r9189, %r9188, 8;
	shf.r.wrap.b32 	%r9193, %r9188, %r9189, 8;
	mov.b64 	%rd10958, {%r9193, %r9192};
	xor.b64  	%rd10959, %rd10957, %rd10958;
	shr.u64 	%rd10960, %rd10760, 7;
	xor.b64  	%rd10961, %rd10959, %rd10960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9194,%dummy}, %rd10943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9195}, %rd10943;
	}
	shf.r.wrap.b32 	%r9196, %r9195, %r9194, 19;
	shf.r.wrap.b32 	%r9197, %r9194, %r9195, 19;
	mov.b64 	%rd10962, {%r9197, %r9196};
	shf.l.wrap.b32 	%r9198, %r9194, %r9195, 3;
	shf.l.wrap.b32 	%r9199, %r9195, %r9194, 3;
	mov.b64 	%rd10963, {%r9199, %r9198};
	xor.b64  	%rd10964, %rd10962, %rd10963;
	shr.u64 	%rd10965, %rd10943, 6;
	xor.b64  	%rd10966, %rd10964, %rd10965;
	add.s64 	%rd10967, %rd10961, %rd10740;
	add.s64 	%rd10968, %rd10967, %rd10878;
	add.s64 	%rd10969, %rd10968, %rd10966;
	shf.r.wrap.b32 	%r9200, %r9051, %r9050, 1;
	shf.r.wrap.b32 	%r9201, %r9050, %r9051, 1;
	mov.b64 	%rd10970, {%r9201, %r9200};
	shf.r.wrap.b32 	%r9202, %r9051, %r9050, 8;
	shf.r.wrap.b32 	%r9203, %r9050, %r9051, 8;
	mov.b64 	%rd10971, {%r9203, %r9202};
	xor.b64  	%rd10972, %rd10970, %rd10971;
	shr.u64 	%rd10973, %rd10780, 7;
	xor.b64  	%rd10974, %rd10972, %rd10973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9204,%dummy}, %rd10956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9205}, %rd10956;
	}
	shf.r.wrap.b32 	%r9206, %r9205, %r9204, 19;
	shf.r.wrap.b32 	%r9207, %r9204, %r9205, 19;
	mov.b64 	%rd10975, {%r9207, %r9206};
	shf.l.wrap.b32 	%r9208, %r9204, %r9205, 3;
	shf.l.wrap.b32 	%r9209, %r9205, %r9204, 3;
	mov.b64 	%rd10976, {%r9209, %r9208};
	xor.b64  	%rd10977, %rd10975, %rd10976;
	shr.u64 	%rd10978, %rd10956, 6;
	xor.b64  	%rd10979, %rd10977, %rd10978;
	add.s64 	%rd10980, %rd10974, %rd10760;
	add.s64 	%rd10981, %rd10980, %rd10891;
	add.s64 	%rd10982, %rd10981, %rd10979;
	shf.r.wrap.b32 	%r9210, %r9063, %r9062, 1;
	shf.r.wrap.b32 	%r9211, %r9062, %r9063, 1;
	mov.b64 	%rd10983, {%r9211, %r9210};
	shf.r.wrap.b32 	%r9212, %r9063, %r9062, 8;
	shf.r.wrap.b32 	%r9213, %r9062, %r9063, 8;
	mov.b64 	%rd10984, {%r9213, %r9212};
	xor.b64  	%rd10985, %rd10983, %rd10984;
	shr.u64 	%rd10986, %rd10800, 7;
	xor.b64  	%rd10987, %rd10985, %rd10986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9214,%dummy}, %rd10969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9215}, %rd10969;
	}
	shf.r.wrap.b32 	%r9216, %r9215, %r9214, 19;
	shf.r.wrap.b32 	%r9217, %r9214, %r9215, 19;
	mov.b64 	%rd10988, {%r9217, %r9216};
	shf.l.wrap.b32 	%r9218, %r9214, %r9215, 3;
	shf.l.wrap.b32 	%r9219, %r9215, %r9214, 3;
	mov.b64 	%rd10989, {%r9219, %r9218};
	xor.b64  	%rd10990, %rd10988, %rd10989;
	shr.u64 	%rd10991, %rd10969, 6;
	xor.b64  	%rd10992, %rd10990, %rd10991;
	add.s64 	%rd10993, %rd10987, %rd10780;
	add.s64 	%rd10994, %rd10993, %rd10904;
	add.s64 	%rd10995, %rd10994, %rd10992;
	shf.r.wrap.b32 	%r9220, %r9075, %r9074, 1;
	shf.r.wrap.b32 	%r9221, %r9074, %r9075, 1;
	mov.b64 	%rd10996, {%r9221, %r9220};
	shf.r.wrap.b32 	%r9222, %r9075, %r9074, 8;
	shf.r.wrap.b32 	%r9223, %r9074, %r9075, 8;
	mov.b64 	%rd10997, {%r9223, %r9222};
	xor.b64  	%rd10998, %rd10996, %rd10997;
	shr.u64 	%rd10999, %rd10813, 7;
	xor.b64  	%rd11000, %rd10998, %rd10999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9224,%dummy}, %rd10982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9225}, %rd10982;
	}
	shf.r.wrap.b32 	%r9226, %r9225, %r9224, 19;
	shf.r.wrap.b32 	%r9227, %r9224, %r9225, 19;
	mov.b64 	%rd11001, {%r9227, %r9226};
	shf.l.wrap.b32 	%r9228, %r9224, %r9225, 3;
	shf.l.wrap.b32 	%r9229, %r9225, %r9224, 3;
	mov.b64 	%rd11002, {%r9229, %r9228};
	xor.b64  	%rd11003, %rd11001, %rd11002;
	shr.u64 	%rd11004, %rd10982, 6;
	xor.b64  	%rd11005, %rd11003, %rd11004;
	add.s64 	%rd11006, %rd11000, %rd10800;
	add.s64 	%rd11007, %rd11006, %rd10917;
	add.s64 	%rd11008, %rd11007, %rd11005;
	shf.r.wrap.b32 	%r9230, %r9087, %r9086, 1;
	shf.r.wrap.b32 	%r9231, %r9086, %r9087, 1;
	mov.b64 	%rd11009, {%r9231, %r9230};
	shf.r.wrap.b32 	%r9232, %r9087, %r9086, 8;
	shf.r.wrap.b32 	%r9233, %r9086, %r9087, 8;
	mov.b64 	%rd11010, {%r9233, %r9232};
	xor.b64  	%rd11011, %rd11009, %rd11010;
	shr.u64 	%rd11012, %rd10826, 7;
	xor.b64  	%rd11013, %rd11011, %rd11012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9234,%dummy}, %rd10995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9235}, %rd10995;
	}
	shf.r.wrap.b32 	%r9236, %r9235, %r9234, 19;
	shf.r.wrap.b32 	%r9237, %r9234, %r9235, 19;
	mov.b64 	%rd11014, {%r9237, %r9236};
	shf.l.wrap.b32 	%r9238, %r9234, %r9235, 3;
	shf.l.wrap.b32 	%r9239, %r9235, %r9234, 3;
	mov.b64 	%rd11015, {%r9239, %r9238};
	xor.b64  	%rd11016, %rd11014, %rd11015;
	shr.u64 	%rd11017, %rd10995, 6;
	xor.b64  	%rd11018, %rd11016, %rd11017;
	add.s64 	%rd11019, %rd11013, %rd10813;
	add.s64 	%rd11020, %rd11019, %rd10930;
	add.s64 	%rd11021, %rd11020, %rd11018;
	shf.r.wrap.b32 	%r9240, %r9099, %r9098, 1;
	shf.r.wrap.b32 	%r9241, %r9098, %r9099, 1;
	mov.b64 	%rd11022, {%r9241, %r9240};
	shf.r.wrap.b32 	%r9242, %r9099, %r9098, 8;
	shf.r.wrap.b32 	%r9243, %r9098, %r9099, 8;
	mov.b64 	%rd11023, {%r9243, %r9242};
	xor.b64  	%rd11024, %rd11022, %rd11023;
	shr.u64 	%rd11025, %rd10839, 7;
	xor.b64  	%rd11026, %rd11024, %rd11025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9244,%dummy}, %rd11008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9245}, %rd11008;
	}
	shf.r.wrap.b32 	%r9246, %r9245, %r9244, 19;
	shf.r.wrap.b32 	%r9247, %r9244, %r9245, 19;
	mov.b64 	%rd11027, {%r9247, %r9246};
	shf.l.wrap.b32 	%r9248, %r9244, %r9245, 3;
	shf.l.wrap.b32 	%r9249, %r9245, %r9244, 3;
	mov.b64 	%rd11028, {%r9249, %r9248};
	xor.b64  	%rd11029, %rd11027, %rd11028;
	shr.u64 	%rd11030, %rd11008, 6;
	xor.b64  	%rd11031, %rd11029, %rd11030;
	add.s64 	%rd11032, %rd11026, %rd10826;
	add.s64 	%rd11033, %rd11032, %rd10943;
	add.s64 	%rd11034, %rd11033, %rd11031;
	shf.r.wrap.b32 	%r9250, %r9111, %r9110, 1;
	shf.r.wrap.b32 	%r9251, %r9110, %r9111, 1;
	mov.b64 	%rd11035, {%r9251, %r9250};
	shf.r.wrap.b32 	%r9252, %r9111, %r9110, 8;
	shf.r.wrap.b32 	%r9253, %r9110, %r9111, 8;
	mov.b64 	%rd11036, {%r9253, %r9252};
	xor.b64  	%rd11037, %rd11035, %rd11036;
	shr.u64 	%rd11038, %rd10852, 7;
	xor.b64  	%rd11039, %rd11037, %rd11038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9254,%dummy}, %rd11021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9255}, %rd11021;
	}
	shf.r.wrap.b32 	%r9256, %r9255, %r9254, 19;
	shf.r.wrap.b32 	%r9257, %r9254, %r9255, 19;
	mov.b64 	%rd11040, {%r9257, %r9256};
	shf.l.wrap.b32 	%r9258, %r9254, %r9255, 3;
	shf.l.wrap.b32 	%r9259, %r9255, %r9254, 3;
	mov.b64 	%rd11041, {%r9259, %r9258};
	xor.b64  	%rd11042, %rd11040, %rd11041;
	shr.u64 	%rd11043, %rd11021, 6;
	xor.b64  	%rd11044, %rd11042, %rd11043;
	add.s64 	%rd11045, %rd11039, %rd10839;
	add.s64 	%rd11046, %rd11045, %rd10956;
	add.s64 	%rd11047, %rd11046, %rd11044;
	shf.r.wrap.b32 	%r9260, %r9123, %r9122, 1;
	shf.r.wrap.b32 	%r9261, %r9122, %r9123, 1;
	mov.b64 	%rd11048, {%r9261, %r9260};
	shf.r.wrap.b32 	%r9262, %r9123, %r9122, 8;
	shf.r.wrap.b32 	%r9263, %r9122, %r9123, 8;
	mov.b64 	%rd11049, {%r9263, %r9262};
	xor.b64  	%rd11050, %rd11048, %rd11049;
	shr.u64 	%rd11051, %rd10865, 7;
	xor.b64  	%rd11052, %rd11050, %rd11051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9264,%dummy}, %rd11034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9265}, %rd11034;
	}
	shf.r.wrap.b32 	%r9266, %r9265, %r9264, 19;
	shf.r.wrap.b32 	%r9267, %r9264, %r9265, 19;
	mov.b64 	%rd11053, {%r9267, %r9266};
	shf.l.wrap.b32 	%r9268, %r9264, %r9265, 3;
	shf.l.wrap.b32 	%r9269, %r9265, %r9264, 3;
	mov.b64 	%rd11054, {%r9269, %r9268};
	xor.b64  	%rd11055, %rd11053, %rd11054;
	shr.u64 	%rd11056, %rd11034, 6;
	xor.b64  	%rd11057, %rd11055, %rd11056;
	add.s64 	%rd11058, %rd11052, %rd10852;
	add.s64 	%rd11059, %rd11058, %rd10969;
	add.s64 	%rd11060, %rd11059, %rd11057;
	shf.r.wrap.b32 	%r9270, %r9135, %r9134, 1;
	shf.r.wrap.b32 	%r9271, %r9134, %r9135, 1;
	mov.b64 	%rd11061, {%r9271, %r9270};
	shf.r.wrap.b32 	%r9272, %r9135, %r9134, 8;
	shf.r.wrap.b32 	%r9273, %r9134, %r9135, 8;
	mov.b64 	%rd11062, {%r9273, %r9272};
	xor.b64  	%rd11063, %rd11061, %rd11062;
	shr.u64 	%rd11064, %rd10878, 7;
	xor.b64  	%rd11065, %rd11063, %rd11064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9274,%dummy}, %rd11047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9275}, %rd11047;
	}
	shf.r.wrap.b32 	%r9276, %r9275, %r9274, 19;
	shf.r.wrap.b32 	%r9277, %r9274, %r9275, 19;
	mov.b64 	%rd11066, {%r9277, %r9276};
	shf.l.wrap.b32 	%r9278, %r9274, %r9275, 3;
	shf.l.wrap.b32 	%r9279, %r9275, %r9274, 3;
	mov.b64 	%rd11067, {%r9279, %r9278};
	xor.b64  	%rd11068, %rd11066, %rd11067;
	shr.u64 	%rd11069, %rd11047, 6;
	xor.b64  	%rd11070, %rd11068, %rd11069;
	add.s64 	%rd11071, %rd11065, %rd10865;
	add.s64 	%rd11072, %rd11071, %rd10982;
	add.s64 	%rd11073, %rd11072, %rd11070;
	shf.r.wrap.b32 	%r9280, %r9147, %r9146, 1;
	shf.r.wrap.b32 	%r9281, %r9146, %r9147, 1;
	mov.b64 	%rd11074, {%r9281, %r9280};
	shf.r.wrap.b32 	%r9282, %r9147, %r9146, 8;
	shf.r.wrap.b32 	%r9283, %r9146, %r9147, 8;
	mov.b64 	%rd11075, {%r9283, %r9282};
	xor.b64  	%rd11076, %rd11074, %rd11075;
	shr.u64 	%rd11077, %rd10891, 7;
	xor.b64  	%rd11078, %rd11076, %rd11077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9284,%dummy}, %rd11060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9285}, %rd11060;
	}
	shf.r.wrap.b32 	%r9286, %r9285, %r9284, 19;
	shf.r.wrap.b32 	%r9287, %r9284, %r9285, 19;
	mov.b64 	%rd11079, {%r9287, %r9286};
	shf.l.wrap.b32 	%r9288, %r9284, %r9285, 3;
	shf.l.wrap.b32 	%r9289, %r9285, %r9284, 3;
	mov.b64 	%rd11080, {%r9289, %r9288};
	xor.b64  	%rd11081, %rd11079, %rd11080;
	shr.u64 	%rd11082, %rd11060, 6;
	xor.b64  	%rd11083, %rd11081, %rd11082;
	add.s64 	%rd11084, %rd11078, %rd10878;
	add.s64 	%rd11085, %rd11084, %rd10995;
	add.s64 	%rd11086, %rd11085, %rd11083;
	shf.r.wrap.b32 	%r9290, %r9159, %r9158, 1;
	shf.r.wrap.b32 	%r9291, %r9158, %r9159, 1;
	mov.b64 	%rd11087, {%r9291, %r9290};
	shf.r.wrap.b32 	%r9292, %r9159, %r9158, 8;
	shf.r.wrap.b32 	%r9293, %r9158, %r9159, 8;
	mov.b64 	%rd11088, {%r9293, %r9292};
	xor.b64  	%rd11089, %rd11087, %rd11088;
	shr.u64 	%rd11090, %rd10904, 7;
	xor.b64  	%rd11091, %rd11089, %rd11090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9294,%dummy}, %rd11073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9295}, %rd11073;
	}
	shf.r.wrap.b32 	%r9296, %r9295, %r9294, 19;
	shf.r.wrap.b32 	%r9297, %r9294, %r9295, 19;
	mov.b64 	%rd11092, {%r9297, %r9296};
	shf.l.wrap.b32 	%r9298, %r9294, %r9295, 3;
	shf.l.wrap.b32 	%r9299, %r9295, %r9294, 3;
	mov.b64 	%rd11093, {%r9299, %r9298};
	xor.b64  	%rd11094, %rd11092, %rd11093;
	shr.u64 	%rd11095, %rd11073, 6;
	xor.b64  	%rd11096, %rd11094, %rd11095;
	add.s64 	%rd11097, %rd11091, %rd10891;
	add.s64 	%rd11098, %rd11097, %rd11008;
	add.s64 	%rd11099, %rd11098, %rd11096;
	shf.r.wrap.b32 	%r9300, %r9171, %r9170, 1;
	shf.r.wrap.b32 	%r9301, %r9170, %r9171, 1;
	mov.b64 	%rd11100, {%r9301, %r9300};
	shf.r.wrap.b32 	%r9302, %r9171, %r9170, 8;
	shf.r.wrap.b32 	%r9303, %r9170, %r9171, 8;
	mov.b64 	%rd11101, {%r9303, %r9302};
	xor.b64  	%rd11102, %rd11100, %rd11101;
	shr.u64 	%rd11103, %rd10917, 7;
	xor.b64  	%rd11104, %rd11102, %rd11103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9304,%dummy}, %rd11086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9305}, %rd11086;
	}
	shf.r.wrap.b32 	%r9306, %r9305, %r9304, 19;
	shf.r.wrap.b32 	%r9307, %r9304, %r9305, 19;
	mov.b64 	%rd11105, {%r9307, %r9306};
	shf.l.wrap.b32 	%r9308, %r9304, %r9305, 3;
	shf.l.wrap.b32 	%r9309, %r9305, %r9304, 3;
	mov.b64 	%rd11106, {%r9309, %r9308};
	xor.b64  	%rd11107, %rd11105, %rd11106;
	shr.u64 	%rd11108, %rd11086, 6;
	xor.b64  	%rd11109, %rd11107, %rd11108;
	add.s64 	%rd11110, %rd11104, %rd10904;
	add.s64 	%rd11111, %rd11110, %rd11021;
	add.s64 	%rd11112, %rd11111, %rd11109;
	shf.r.wrap.b32 	%r9310, %r9183, %r9182, 1;
	shf.r.wrap.b32 	%r9311, %r9182, %r9183, 1;
	mov.b64 	%rd11113, {%r9311, %r9310};
	shf.r.wrap.b32 	%r9312, %r9183, %r9182, 8;
	shf.r.wrap.b32 	%r9313, %r9182, %r9183, 8;
	mov.b64 	%rd11114, {%r9313, %r9312};
	xor.b64  	%rd11115, %rd11113, %rd11114;
	shr.u64 	%rd11116, %rd10930, 7;
	xor.b64  	%rd11117, %rd11115, %rd11116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9314,%dummy}, %rd11099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9315}, %rd11099;
	}
	shf.r.wrap.b32 	%r9316, %r9315, %r9314, 19;
	shf.r.wrap.b32 	%r9317, %r9314, %r9315, 19;
	mov.b64 	%rd11118, {%r9317, %r9316};
	shf.l.wrap.b32 	%r9318, %r9314, %r9315, 3;
	shf.l.wrap.b32 	%r9319, %r9315, %r9314, 3;
	mov.b64 	%rd11119, {%r9319, %r9318};
	xor.b64  	%rd11120, %rd11118, %rd11119;
	shr.u64 	%rd11121, %rd11099, 6;
	xor.b64  	%rd11122, %rd11120, %rd11121;
	add.s64 	%rd11123, %rd11117, %rd10917;
	add.s64 	%rd11124, %rd11123, %rd11034;
	add.s64 	%rd11125, %rd11124, %rd11122;
	shf.r.wrap.b32 	%r9320, %r9195, %r9194, 1;
	shf.r.wrap.b32 	%r9321, %r9194, %r9195, 1;
	mov.b64 	%rd11126, {%r9321, %r9320};
	shf.r.wrap.b32 	%r9322, %r9195, %r9194, 8;
	shf.r.wrap.b32 	%r9323, %r9194, %r9195, 8;
	mov.b64 	%rd11127, {%r9323, %r9322};
	xor.b64  	%rd11128, %rd11126, %rd11127;
	shr.u64 	%rd11129, %rd10943, 7;
	xor.b64  	%rd11130, %rd11128, %rd11129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9324,%dummy}, %rd11112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9325}, %rd11112;
	}
	shf.r.wrap.b32 	%r9326, %r9325, %r9324, 19;
	shf.r.wrap.b32 	%r9327, %r9324, %r9325, 19;
	mov.b64 	%rd11131, {%r9327, %r9326};
	shf.l.wrap.b32 	%r9328, %r9324, %r9325, 3;
	shf.l.wrap.b32 	%r9329, %r9325, %r9324, 3;
	mov.b64 	%rd11132, {%r9329, %r9328};
	xor.b64  	%rd11133, %rd11131, %rd11132;
	shr.u64 	%rd11134, %rd11112, 6;
	xor.b64  	%rd11135, %rd11133, %rd11134;
	add.s64 	%rd11136, %rd11130, %rd10930;
	add.s64 	%rd11137, %rd11136, %rd11047;
	add.s64 	%rd11138, %rd11137, %rd11135;
	shf.r.wrap.b32 	%r9330, %r9205, %r9204, 1;
	shf.r.wrap.b32 	%r9331, %r9204, %r9205, 1;
	mov.b64 	%rd11139, {%r9331, %r9330};
	shf.r.wrap.b32 	%r9332, %r9205, %r9204, 8;
	shf.r.wrap.b32 	%r9333, %r9204, %r9205, 8;
	mov.b64 	%rd11140, {%r9333, %r9332};
	xor.b64  	%rd11141, %rd11139, %rd11140;
	shr.u64 	%rd11142, %rd10956, 7;
	xor.b64  	%rd11143, %rd11141, %rd11142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9334,%dummy}, %rd11125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9335}, %rd11125;
	}
	shf.r.wrap.b32 	%r9336, %r9335, %r9334, 19;
	shf.r.wrap.b32 	%r9337, %r9334, %r9335, 19;
	mov.b64 	%rd11144, {%r9337, %r9336};
	shf.l.wrap.b32 	%r9338, %r9334, %r9335, 3;
	shf.l.wrap.b32 	%r9339, %r9335, %r9334, 3;
	mov.b64 	%rd11145, {%r9339, %r9338};
	xor.b64  	%rd11146, %rd11144, %rd11145;
	shr.u64 	%rd11147, %rd11125, 6;
	xor.b64  	%rd11148, %rd11146, %rd11147;
	add.s64 	%rd11149, %rd11143, %rd10943;
	add.s64 	%rd11150, %rd11149, %rd11060;
	add.s64 	%rd11151, %rd11150, %rd11148;
	shf.r.wrap.b32 	%r9340, %r9215, %r9214, 1;
	shf.r.wrap.b32 	%r9341, %r9214, %r9215, 1;
	mov.b64 	%rd11152, {%r9341, %r9340};
	shf.r.wrap.b32 	%r9342, %r9215, %r9214, 8;
	shf.r.wrap.b32 	%r9343, %r9214, %r9215, 8;
	mov.b64 	%rd11153, {%r9343, %r9342};
	xor.b64  	%rd11154, %rd11152, %rd11153;
	shr.u64 	%rd11155, %rd10969, 7;
	xor.b64  	%rd11156, %rd11154, %rd11155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9344,%dummy}, %rd11138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9345}, %rd11138;
	}
	shf.r.wrap.b32 	%r9346, %r9345, %r9344, 19;
	shf.r.wrap.b32 	%r9347, %r9344, %r9345, 19;
	mov.b64 	%rd11157, {%r9347, %r9346};
	shf.l.wrap.b32 	%r9348, %r9344, %r9345, 3;
	shf.l.wrap.b32 	%r9349, %r9345, %r9344, 3;
	mov.b64 	%rd11158, {%r9349, %r9348};
	xor.b64  	%rd11159, %rd11157, %rd11158;
	shr.u64 	%rd11160, %rd11138, 6;
	xor.b64  	%rd11161, %rd11159, %rd11160;
	add.s64 	%rd11162, %rd11156, %rd10956;
	add.s64 	%rd11163, %rd11162, %rd11073;
	add.s64 	%rd11164, %rd11163, %rd11161;
	shf.r.wrap.b32 	%r9350, %r9225, %r9224, 1;
	shf.r.wrap.b32 	%r9351, %r9224, %r9225, 1;
	mov.b64 	%rd11165, {%r9351, %r9350};
	shf.r.wrap.b32 	%r9352, %r9225, %r9224, 8;
	shf.r.wrap.b32 	%r9353, %r9224, %r9225, 8;
	mov.b64 	%rd11166, {%r9353, %r9352};
	xor.b64  	%rd11167, %rd11165, %rd11166;
	shr.u64 	%rd11168, %rd10982, 7;
	xor.b64  	%rd11169, %rd11167, %rd11168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9354,%dummy}, %rd11151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9355}, %rd11151;
	}
	shf.r.wrap.b32 	%r9356, %r9355, %r9354, 19;
	shf.r.wrap.b32 	%r9357, %r9354, %r9355, 19;
	mov.b64 	%rd11170, {%r9357, %r9356};
	shf.l.wrap.b32 	%r9358, %r9354, %r9355, 3;
	shf.l.wrap.b32 	%r9359, %r9355, %r9354, 3;
	mov.b64 	%rd11171, {%r9359, %r9358};
	xor.b64  	%rd11172, %rd11170, %rd11171;
	shr.u64 	%rd11173, %rd11151, 6;
	xor.b64  	%rd11174, %rd11172, %rd11173;
	add.s64 	%rd11175, %rd11169, %rd10969;
	add.s64 	%rd11176, %rd11175, %rd11086;
	add.s64 	%rd11177, %rd11176, %rd11174;
	shf.r.wrap.b32 	%r9360, %r9235, %r9234, 1;
	shf.r.wrap.b32 	%r9361, %r9234, %r9235, 1;
	mov.b64 	%rd11178, {%r9361, %r9360};
	shf.r.wrap.b32 	%r9362, %r9235, %r9234, 8;
	shf.r.wrap.b32 	%r9363, %r9234, %r9235, 8;
	mov.b64 	%rd11179, {%r9363, %r9362};
	xor.b64  	%rd11180, %rd11178, %rd11179;
	shr.u64 	%rd11181, %rd10995, 7;
	xor.b64  	%rd11182, %rd11180, %rd11181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9364,%dummy}, %rd11164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9365}, %rd11164;
	}
	shf.r.wrap.b32 	%r9366, %r9365, %r9364, 19;
	shf.r.wrap.b32 	%r9367, %r9364, %r9365, 19;
	mov.b64 	%rd11183, {%r9367, %r9366};
	shf.l.wrap.b32 	%r9368, %r9364, %r9365, 3;
	shf.l.wrap.b32 	%r9369, %r9365, %r9364, 3;
	mov.b64 	%rd11184, {%r9369, %r9368};
	xor.b64  	%rd11185, %rd11183, %rd11184;
	shr.u64 	%rd11186, %rd11164, 6;
	xor.b64  	%rd11187, %rd11185, %rd11186;
	add.s64 	%rd11188, %rd11182, %rd10982;
	add.s64 	%rd11189, %rd11188, %rd11099;
	add.s64 	%rd11190, %rd11189, %rd11187;
	shf.r.wrap.b32 	%r9370, %r9245, %r9244, 1;
	shf.r.wrap.b32 	%r9371, %r9244, %r9245, 1;
	mov.b64 	%rd11191, {%r9371, %r9370};
	shf.r.wrap.b32 	%r9372, %r9245, %r9244, 8;
	shf.r.wrap.b32 	%r9373, %r9244, %r9245, 8;
	mov.b64 	%rd11192, {%r9373, %r9372};
	xor.b64  	%rd11193, %rd11191, %rd11192;
	shr.u64 	%rd11194, %rd11008, 7;
	xor.b64  	%rd11195, %rd11193, %rd11194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9374,%dummy}, %rd11177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9375}, %rd11177;
	}
	shf.r.wrap.b32 	%r9376, %r9375, %r9374, 19;
	shf.r.wrap.b32 	%r9377, %r9374, %r9375, 19;
	mov.b64 	%rd11196, {%r9377, %r9376};
	shf.l.wrap.b32 	%r9378, %r9374, %r9375, 3;
	shf.l.wrap.b32 	%r9379, %r9375, %r9374, 3;
	mov.b64 	%rd11197, {%r9379, %r9378};
	xor.b64  	%rd11198, %rd11196, %rd11197;
	shr.u64 	%rd11199, %rd11177, 6;
	xor.b64  	%rd11200, %rd11198, %rd11199;
	add.s64 	%rd11201, %rd11195, %rd10995;
	add.s64 	%rd11202, %rd11201, %rd11112;
	add.s64 	%rd11203, %rd11202, %rd11200;
	shf.r.wrap.b32 	%r9380, %r9255, %r9254, 1;
	shf.r.wrap.b32 	%r9381, %r9254, %r9255, 1;
	mov.b64 	%rd11204, {%r9381, %r9380};
	shf.r.wrap.b32 	%r9382, %r9255, %r9254, 8;
	shf.r.wrap.b32 	%r9383, %r9254, %r9255, 8;
	mov.b64 	%rd11205, {%r9383, %r9382};
	xor.b64  	%rd11206, %rd11204, %rd11205;
	shr.u64 	%rd11207, %rd11021, 7;
	xor.b64  	%rd11208, %rd11206, %rd11207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9384,%dummy}, %rd11190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9385}, %rd11190;
	}
	shf.r.wrap.b32 	%r9386, %r9385, %r9384, 19;
	shf.r.wrap.b32 	%r9387, %r9384, %r9385, 19;
	mov.b64 	%rd11209, {%r9387, %r9386};
	shf.l.wrap.b32 	%r9388, %r9384, %r9385, 3;
	shf.l.wrap.b32 	%r9389, %r9385, %r9384, 3;
	mov.b64 	%rd11210, {%r9389, %r9388};
	xor.b64  	%rd11211, %rd11209, %rd11210;
	shr.u64 	%rd11212, %rd11190, 6;
	xor.b64  	%rd11213, %rd11211, %rd11212;
	add.s64 	%rd11214, %rd11208, %rd11008;
	add.s64 	%rd11215, %rd11214, %rd11125;
	add.s64 	%rd11216, %rd11215, %rd11213;
	shf.r.wrap.b32 	%r9390, %r9265, %r9264, 1;
	shf.r.wrap.b32 	%r9391, %r9264, %r9265, 1;
	mov.b64 	%rd11217, {%r9391, %r9390};
	shf.r.wrap.b32 	%r9392, %r9265, %r9264, 8;
	shf.r.wrap.b32 	%r9393, %r9264, %r9265, 8;
	mov.b64 	%rd11218, {%r9393, %r9392};
	xor.b64  	%rd11219, %rd11217, %rd11218;
	shr.u64 	%rd11220, %rd11034, 7;
	xor.b64  	%rd11221, %rd11219, %rd11220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9394,%dummy}, %rd11203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9395}, %rd11203;
	}
	shf.r.wrap.b32 	%r9396, %r9395, %r9394, 19;
	shf.r.wrap.b32 	%r9397, %r9394, %r9395, 19;
	mov.b64 	%rd11222, {%r9397, %r9396};
	shf.l.wrap.b32 	%r9398, %r9394, %r9395, 3;
	shf.l.wrap.b32 	%r9399, %r9395, %r9394, 3;
	mov.b64 	%rd11223, {%r9399, %r9398};
	xor.b64  	%rd11224, %rd11222, %rd11223;
	shr.u64 	%rd11225, %rd11203, 6;
	xor.b64  	%rd11226, %rd11224, %rd11225;
	add.s64 	%rd11227, %rd11221, %rd11021;
	add.s64 	%rd11228, %rd11227, %rd11138;
	add.s64 	%rd11229, %rd11228, %rd11226;
	shf.r.wrap.b32 	%r9400, %r9275, %r9274, 1;
	shf.r.wrap.b32 	%r9401, %r9274, %r9275, 1;
	mov.b64 	%rd11230, {%r9401, %r9400};
	shf.r.wrap.b32 	%r9402, %r9275, %r9274, 8;
	shf.r.wrap.b32 	%r9403, %r9274, %r9275, 8;
	mov.b64 	%rd11231, {%r9403, %r9402};
	xor.b64  	%rd11232, %rd11230, %rd11231;
	shr.u64 	%rd11233, %rd11047, 7;
	xor.b64  	%rd11234, %rd11232, %rd11233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9404,%dummy}, %rd11216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9405}, %rd11216;
	}
	shf.r.wrap.b32 	%r9406, %r9405, %r9404, 19;
	shf.r.wrap.b32 	%r9407, %r9404, %r9405, 19;
	mov.b64 	%rd11235, {%r9407, %r9406};
	shf.l.wrap.b32 	%r9408, %r9404, %r9405, 3;
	shf.l.wrap.b32 	%r9409, %r9405, %r9404, 3;
	mov.b64 	%rd11236, {%r9409, %r9408};
	xor.b64  	%rd11237, %rd11235, %rd11236;
	shr.u64 	%rd11238, %rd11216, 6;
	xor.b64  	%rd11239, %rd11237, %rd11238;
	add.s64 	%rd11240, %rd11234, %rd11034;
	add.s64 	%rd11241, %rd11240, %rd11151;
	add.s64 	%rd11242, %rd11241, %rd11239;
	shf.r.wrap.b32 	%r9410, %r9285, %r9284, 1;
	shf.r.wrap.b32 	%r9411, %r9284, %r9285, 1;
	mov.b64 	%rd11243, {%r9411, %r9410};
	shf.r.wrap.b32 	%r9412, %r9285, %r9284, 8;
	shf.r.wrap.b32 	%r9413, %r9284, %r9285, 8;
	mov.b64 	%rd11244, {%r9413, %r9412};
	xor.b64  	%rd11245, %rd11243, %rd11244;
	shr.u64 	%rd11246, %rd11060, 7;
	xor.b64  	%rd11247, %rd11245, %rd11246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9414,%dummy}, %rd11229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9415}, %rd11229;
	}
	shf.r.wrap.b32 	%r9416, %r9415, %r9414, 19;
	shf.r.wrap.b32 	%r9417, %r9414, %r9415, 19;
	mov.b64 	%rd11248, {%r9417, %r9416};
	shf.l.wrap.b32 	%r9418, %r9414, %r9415, 3;
	shf.l.wrap.b32 	%r9419, %r9415, %r9414, 3;
	mov.b64 	%rd11249, {%r9419, %r9418};
	xor.b64  	%rd11250, %rd11248, %rd11249;
	shr.u64 	%rd11251, %rd11229, 6;
	xor.b64  	%rd11252, %rd11250, %rd11251;
	add.s64 	%rd11253, %rd11247, %rd11047;
	add.s64 	%rd11254, %rd11253, %rd11164;
	add.s64 	%rd11255, %rd11254, %rd11252;
	shf.r.wrap.b32 	%r9420, %r9295, %r9294, 1;
	shf.r.wrap.b32 	%r9421, %r9294, %r9295, 1;
	mov.b64 	%rd11256, {%r9421, %r9420};
	shf.r.wrap.b32 	%r9422, %r9295, %r9294, 8;
	shf.r.wrap.b32 	%r9423, %r9294, %r9295, 8;
	mov.b64 	%rd11257, {%r9423, %r9422};
	xor.b64  	%rd11258, %rd11256, %rd11257;
	shr.u64 	%rd11259, %rd11073, 7;
	xor.b64  	%rd11260, %rd11258, %rd11259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9424,%dummy}, %rd11242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9425}, %rd11242;
	}
	shf.r.wrap.b32 	%r9426, %r9425, %r9424, 19;
	shf.r.wrap.b32 	%r9427, %r9424, %r9425, 19;
	mov.b64 	%rd11261, {%r9427, %r9426};
	shf.l.wrap.b32 	%r9428, %r9424, %r9425, 3;
	shf.l.wrap.b32 	%r9429, %r9425, %r9424, 3;
	mov.b64 	%rd11262, {%r9429, %r9428};
	xor.b64  	%rd11263, %rd11261, %rd11262;
	shr.u64 	%rd11264, %rd11242, 6;
	xor.b64  	%rd11265, %rd11263, %rd11264;
	add.s64 	%rd11266, %rd11260, %rd11060;
	add.s64 	%rd11267, %rd11266, %rd11177;
	add.s64 	%rd11268, %rd11267, %rd11265;
	shf.r.wrap.b32 	%r9430, %r9305, %r9304, 1;
	shf.r.wrap.b32 	%r9431, %r9304, %r9305, 1;
	mov.b64 	%rd11269, {%r9431, %r9430};
	shf.r.wrap.b32 	%r9432, %r9305, %r9304, 8;
	shf.r.wrap.b32 	%r9433, %r9304, %r9305, 8;
	mov.b64 	%rd11270, {%r9433, %r9432};
	xor.b64  	%rd11271, %rd11269, %rd11270;
	shr.u64 	%rd11272, %rd11086, 7;
	xor.b64  	%rd11273, %rd11271, %rd11272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9434,%dummy}, %rd11255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9435}, %rd11255;
	}
	shf.r.wrap.b32 	%r9436, %r9435, %r9434, 19;
	shf.r.wrap.b32 	%r9437, %r9434, %r9435, 19;
	mov.b64 	%rd11274, {%r9437, %r9436};
	shf.l.wrap.b32 	%r9438, %r9434, %r9435, 3;
	shf.l.wrap.b32 	%r9439, %r9435, %r9434, 3;
	mov.b64 	%rd11275, {%r9439, %r9438};
	xor.b64  	%rd11276, %rd11274, %rd11275;
	shr.u64 	%rd11277, %rd11255, 6;
	xor.b64  	%rd11278, %rd11276, %rd11277;
	add.s64 	%rd11279, %rd11273, %rd11073;
	add.s64 	%rd11280, %rd11279, %rd11190;
	add.s64 	%rd11281, %rd11280, %rd11278;
	shf.r.wrap.b32 	%r9440, %r9315, %r9314, 1;
	shf.r.wrap.b32 	%r9441, %r9314, %r9315, 1;
	mov.b64 	%rd11282, {%r9441, %r9440};
	shf.r.wrap.b32 	%r9442, %r9315, %r9314, 8;
	shf.r.wrap.b32 	%r9443, %r9314, %r9315, 8;
	mov.b64 	%rd11283, {%r9443, %r9442};
	xor.b64  	%rd11284, %rd11282, %rd11283;
	shr.u64 	%rd11285, %rd11099, 7;
	xor.b64  	%rd11286, %rd11284, %rd11285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9444,%dummy}, %rd11268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9445}, %rd11268;
	}
	shf.r.wrap.b32 	%r9446, %r9445, %r9444, 19;
	shf.r.wrap.b32 	%r9447, %r9444, %r9445, 19;
	mov.b64 	%rd11287, {%r9447, %r9446};
	shf.l.wrap.b32 	%r9448, %r9444, %r9445, 3;
	shf.l.wrap.b32 	%r9449, %r9445, %r9444, 3;
	mov.b64 	%rd11288, {%r9449, %r9448};
	xor.b64  	%rd11289, %rd11287, %rd11288;
	shr.u64 	%rd11290, %rd11268, 6;
	xor.b64  	%rd11291, %rd11289, %rd11290;
	add.s64 	%rd11292, %rd11286, %rd11086;
	add.s64 	%rd11293, %rd11292, %rd11203;
	add.s64 	%rd11294, %rd11293, %rd11291;
	shf.r.wrap.b32 	%r9450, %r9325, %r9324, 1;
	shf.r.wrap.b32 	%r9451, %r9324, %r9325, 1;
	mov.b64 	%rd11295, {%r9451, %r9450};
	shf.r.wrap.b32 	%r9452, %r9325, %r9324, 8;
	shf.r.wrap.b32 	%r9453, %r9324, %r9325, 8;
	mov.b64 	%rd11296, {%r9453, %r9452};
	xor.b64  	%rd11297, %rd11295, %rd11296;
	shr.u64 	%rd11298, %rd11112, 7;
	xor.b64  	%rd11299, %rd11297, %rd11298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9454,%dummy}, %rd11281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9455}, %rd11281;
	}
	shf.r.wrap.b32 	%r9456, %r9455, %r9454, 19;
	shf.r.wrap.b32 	%r9457, %r9454, %r9455, 19;
	mov.b64 	%rd11300, {%r9457, %r9456};
	shf.l.wrap.b32 	%r9458, %r9454, %r9455, 3;
	shf.l.wrap.b32 	%r9459, %r9455, %r9454, 3;
	mov.b64 	%rd11301, {%r9459, %r9458};
	xor.b64  	%rd11302, %rd11300, %rd11301;
	shr.u64 	%rd11303, %rd11281, 6;
	xor.b64  	%rd11304, %rd11302, %rd11303;
	add.s64 	%rd11305, %rd11299, %rd11099;
	add.s64 	%rd11306, %rd11305, %rd11216;
	add.s64 	%rd11307, %rd11306, %rd11304;
	shf.r.wrap.b32 	%r9460, %r9335, %r9334, 1;
	shf.r.wrap.b32 	%r9461, %r9334, %r9335, 1;
	mov.b64 	%rd11308, {%r9461, %r9460};
	shf.r.wrap.b32 	%r9462, %r9335, %r9334, 8;
	shf.r.wrap.b32 	%r9463, %r9334, %r9335, 8;
	mov.b64 	%rd11309, {%r9463, %r9462};
	xor.b64  	%rd11310, %rd11308, %rd11309;
	shr.u64 	%rd11311, %rd11125, 7;
	xor.b64  	%rd11312, %rd11310, %rd11311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9464,%dummy}, %rd11294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9465}, %rd11294;
	}
	shf.r.wrap.b32 	%r9466, %r9465, %r9464, 19;
	shf.r.wrap.b32 	%r9467, %r9464, %r9465, 19;
	mov.b64 	%rd11313, {%r9467, %r9466};
	shf.l.wrap.b32 	%r9468, %r9464, %r9465, 3;
	shf.l.wrap.b32 	%r9469, %r9465, %r9464, 3;
	mov.b64 	%rd11314, {%r9469, %r9468};
	xor.b64  	%rd11315, %rd11313, %rd11314;
	shr.u64 	%rd11316, %rd11294, 6;
	xor.b64  	%rd11317, %rd11315, %rd11316;
	add.s64 	%rd11318, %rd11312, %rd11112;
	add.s64 	%rd11319, %rd11318, %rd11229;
	add.s64 	%rd11320, %rd11319, %rd11317;
	shf.r.wrap.b32 	%r9470, %r9345, %r9344, 1;
	shf.r.wrap.b32 	%r9471, %r9344, %r9345, 1;
	mov.b64 	%rd11321, {%r9471, %r9470};
	shf.r.wrap.b32 	%r9472, %r9345, %r9344, 8;
	shf.r.wrap.b32 	%r9473, %r9344, %r9345, 8;
	mov.b64 	%rd11322, {%r9473, %r9472};
	xor.b64  	%rd11323, %rd11321, %rd11322;
	shr.u64 	%rd11324, %rd11138, 7;
	xor.b64  	%rd11325, %rd11323, %rd11324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9474,%dummy}, %rd11307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9475}, %rd11307;
	}
	shf.r.wrap.b32 	%r9476, %r9475, %r9474, 19;
	shf.r.wrap.b32 	%r9477, %r9474, %r9475, 19;
	mov.b64 	%rd11326, {%r9477, %r9476};
	shf.l.wrap.b32 	%r9478, %r9474, %r9475, 3;
	shf.l.wrap.b32 	%r9479, %r9475, %r9474, 3;
	mov.b64 	%rd11327, {%r9479, %r9478};
	xor.b64  	%rd11328, %rd11326, %rd11327;
	shr.u64 	%rd11329, %rd11307, 6;
	xor.b64  	%rd11330, %rd11328, %rd11329;
	add.s64 	%rd11331, %rd11325, %rd11125;
	add.s64 	%rd11332, %rd11331, %rd11242;
	add.s64 	%rd11333, %rd11332, %rd11330;
	shf.r.wrap.b32 	%r9480, %r9355, %r9354, 1;
	shf.r.wrap.b32 	%r9481, %r9354, %r9355, 1;
	mov.b64 	%rd11334, {%r9481, %r9480};
	shf.r.wrap.b32 	%r9482, %r9355, %r9354, 8;
	shf.r.wrap.b32 	%r9483, %r9354, %r9355, 8;
	mov.b64 	%rd11335, {%r9483, %r9482};
	xor.b64  	%rd11336, %rd11334, %rd11335;
	shr.u64 	%rd11337, %rd11151, 7;
	xor.b64  	%rd11338, %rd11336, %rd11337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9484,%dummy}, %rd11320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9485}, %rd11320;
	}
	shf.r.wrap.b32 	%r9486, %r9485, %r9484, 19;
	shf.r.wrap.b32 	%r9487, %r9484, %r9485, 19;
	mov.b64 	%rd11339, {%r9487, %r9486};
	shf.l.wrap.b32 	%r9488, %r9484, %r9485, 3;
	shf.l.wrap.b32 	%r9489, %r9485, %r9484, 3;
	mov.b64 	%rd11340, {%r9489, %r9488};
	xor.b64  	%rd11341, %rd11339, %rd11340;
	shr.u64 	%rd11342, %rd11320, 6;
	xor.b64  	%rd11343, %rd11341, %rd11342;
	add.s64 	%rd11344, %rd11338, %rd11138;
	add.s64 	%rd11345, %rd11344, %rd11255;
	add.s64 	%rd11346, %rd11345, %rd11343;
	shf.r.wrap.b32 	%r9490, %r9365, %r9364, 1;
	shf.r.wrap.b32 	%r9491, %r9364, %r9365, 1;
	mov.b64 	%rd11347, {%r9491, %r9490};
	shf.r.wrap.b32 	%r9492, %r9365, %r9364, 8;
	shf.r.wrap.b32 	%r9493, %r9364, %r9365, 8;
	mov.b64 	%rd11348, {%r9493, %r9492};
	xor.b64  	%rd11349, %rd11347, %rd11348;
	shr.u64 	%rd11350, %rd11164, 7;
	xor.b64  	%rd11351, %rd11349, %rd11350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9494,%dummy}, %rd11333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9495}, %rd11333;
	}
	shf.r.wrap.b32 	%r9496, %r9495, %r9494, 19;
	shf.r.wrap.b32 	%r9497, %r9494, %r9495, 19;
	mov.b64 	%rd11352, {%r9497, %r9496};
	shf.l.wrap.b32 	%r9498, %r9494, %r9495, 3;
	shf.l.wrap.b32 	%r9499, %r9495, %r9494, 3;
	mov.b64 	%rd11353, {%r9499, %r9498};
	xor.b64  	%rd11354, %rd11352, %rd11353;
	shr.u64 	%rd11355, %rd11333, 6;
	xor.b64  	%rd11356, %rd11354, %rd11355;
	add.s64 	%rd11357, %rd11351, %rd11151;
	add.s64 	%rd11358, %rd11357, %rd11268;
	add.s64 	%rd11359, %rd11358, %rd11356;
	shf.r.wrap.b32 	%r9500, %r9375, %r9374, 1;
	shf.r.wrap.b32 	%r9501, %r9374, %r9375, 1;
	mov.b64 	%rd11360, {%r9501, %r9500};
	shf.r.wrap.b32 	%r9502, %r9375, %r9374, 8;
	shf.r.wrap.b32 	%r9503, %r9374, %r9375, 8;
	mov.b64 	%rd11361, {%r9503, %r9502};
	xor.b64  	%rd11362, %rd11360, %rd11361;
	shr.u64 	%rd11363, %rd11177, 7;
	xor.b64  	%rd11364, %rd11362, %rd11363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9504,%dummy}, %rd11346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9505}, %rd11346;
	}
	shf.r.wrap.b32 	%r9506, %r9505, %r9504, 19;
	shf.r.wrap.b32 	%r9507, %r9504, %r9505, 19;
	mov.b64 	%rd11365, {%r9507, %r9506};
	shf.l.wrap.b32 	%r9508, %r9504, %r9505, 3;
	shf.l.wrap.b32 	%r9509, %r9505, %r9504, 3;
	mov.b64 	%rd11366, {%r9509, %r9508};
	xor.b64  	%rd11367, %rd11365, %rd11366;
	shr.u64 	%rd11368, %rd11346, 6;
	xor.b64  	%rd11369, %rd11367, %rd11368;
	add.s64 	%rd11370, %rd11364, %rd11164;
	add.s64 	%rd11371, %rd11370, %rd11281;
	add.s64 	%rd11372, %rd11371, %rd11369;
	shf.r.wrap.b32 	%r9510, %r9385, %r9384, 1;
	shf.r.wrap.b32 	%r9511, %r9384, %r9385, 1;
	mov.b64 	%rd11373, {%r9511, %r9510};
	shf.r.wrap.b32 	%r9512, %r9385, %r9384, 8;
	shf.r.wrap.b32 	%r9513, %r9384, %r9385, 8;
	mov.b64 	%rd11374, {%r9513, %r9512};
	xor.b64  	%rd11375, %rd11373, %rd11374;
	shr.u64 	%rd11376, %rd11190, 7;
	xor.b64  	%rd11377, %rd11375, %rd11376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9514,%dummy}, %rd11359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9515}, %rd11359;
	}
	shf.r.wrap.b32 	%r9516, %r9515, %r9514, 19;
	shf.r.wrap.b32 	%r9517, %r9514, %r9515, 19;
	mov.b64 	%rd11378, {%r9517, %r9516};
	shf.l.wrap.b32 	%r9518, %r9514, %r9515, 3;
	shf.l.wrap.b32 	%r9519, %r9515, %r9514, 3;
	mov.b64 	%rd11379, {%r9519, %r9518};
	xor.b64  	%rd11380, %rd11378, %rd11379;
	shr.u64 	%rd11381, %rd11359, 6;
	xor.b64  	%rd11382, %rd11380, %rd11381;
	add.s64 	%rd11383, %rd11377, %rd11177;
	add.s64 	%rd11384, %rd11383, %rd11294;
	add.s64 	%rd11385, %rd11384, %rd11382;
	shf.r.wrap.b32 	%r9520, %r9395, %r9394, 1;
	shf.r.wrap.b32 	%r9521, %r9394, %r9395, 1;
	mov.b64 	%rd11386, {%r9521, %r9520};
	shf.r.wrap.b32 	%r9522, %r9395, %r9394, 8;
	shf.r.wrap.b32 	%r9523, %r9394, %r9395, 8;
	mov.b64 	%rd11387, {%r9523, %r9522};
	xor.b64  	%rd11388, %rd11386, %rd11387;
	shr.u64 	%rd11389, %rd11203, 7;
	xor.b64  	%rd11390, %rd11388, %rd11389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9524,%dummy}, %rd11372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9525}, %rd11372;
	}
	shf.r.wrap.b32 	%r9526, %r9525, %r9524, 19;
	shf.r.wrap.b32 	%r9527, %r9524, %r9525, 19;
	mov.b64 	%rd11391, {%r9527, %r9526};
	shf.l.wrap.b32 	%r9528, %r9524, %r9525, 3;
	shf.l.wrap.b32 	%r9529, %r9525, %r9524, 3;
	mov.b64 	%rd11392, {%r9529, %r9528};
	xor.b64  	%rd11393, %rd11391, %rd11392;
	shr.u64 	%rd11394, %rd11372, 6;
	xor.b64  	%rd11395, %rd11393, %rd11394;
	add.s64 	%rd11396, %rd11390, %rd11190;
	add.s64 	%rd11397, %rd11396, %rd11307;
	add.s64 	%rd11398, %rd11397, %rd11395;
	shf.r.wrap.b32 	%r9530, %r9405, %r9404, 1;
	shf.r.wrap.b32 	%r9531, %r9404, %r9405, 1;
	mov.b64 	%rd11399, {%r9531, %r9530};
	shf.r.wrap.b32 	%r9532, %r9405, %r9404, 8;
	shf.r.wrap.b32 	%r9533, %r9404, %r9405, 8;
	mov.b64 	%rd11400, {%r9533, %r9532};
	xor.b64  	%rd11401, %rd11399, %rd11400;
	shr.u64 	%rd11402, %rd11216, 7;
	xor.b64  	%rd11403, %rd11401, %rd11402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9534,%dummy}, %rd11385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9535}, %rd11385;
	}
	shf.r.wrap.b32 	%r9536, %r9535, %r9534, 19;
	shf.r.wrap.b32 	%r9537, %r9534, %r9535, 19;
	mov.b64 	%rd11404, {%r9537, %r9536};
	shf.l.wrap.b32 	%r9538, %r9534, %r9535, 3;
	shf.l.wrap.b32 	%r9539, %r9535, %r9534, 3;
	mov.b64 	%rd11405, {%r9539, %r9538};
	xor.b64  	%rd11406, %rd11404, %rd11405;
	shr.u64 	%rd11407, %rd11385, 6;
	xor.b64  	%rd11408, %rd11406, %rd11407;
	add.s64 	%rd11409, %rd11403, %rd11203;
	add.s64 	%rd11410, %rd11409, %rd11320;
	add.s64 	%rd11411, %rd11410, %rd11408;
	shf.r.wrap.b32 	%r9540, %r9415, %r9414, 1;
	shf.r.wrap.b32 	%r9541, %r9414, %r9415, 1;
	mov.b64 	%rd11412, {%r9541, %r9540};
	shf.r.wrap.b32 	%r9542, %r9415, %r9414, 8;
	shf.r.wrap.b32 	%r9543, %r9414, %r9415, 8;
	mov.b64 	%rd11413, {%r9543, %r9542};
	xor.b64  	%rd11414, %rd11412, %rd11413;
	shr.u64 	%rd11415, %rd11229, 7;
	xor.b64  	%rd11416, %rd11414, %rd11415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9544,%dummy}, %rd11398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9545}, %rd11398;
	}
	shf.r.wrap.b32 	%r9546, %r9545, %r9544, 19;
	shf.r.wrap.b32 	%r9547, %r9544, %r9545, 19;
	mov.b64 	%rd11417, {%r9547, %r9546};
	shf.l.wrap.b32 	%r9548, %r9544, %r9545, 3;
	shf.l.wrap.b32 	%r9549, %r9545, %r9544, 3;
	mov.b64 	%rd11418, {%r9549, %r9548};
	xor.b64  	%rd11419, %rd11417, %rd11418;
	shr.u64 	%rd11420, %rd11398, 6;
	xor.b64  	%rd11421, %rd11419, %rd11420;
	add.s64 	%rd11422, %rd11416, %rd11216;
	add.s64 	%rd11423, %rd11422, %rd11333;
	add.s64 	%rd11424, %rd11423, %rd11421;
	shf.r.wrap.b32 	%r9550, %r9425, %r9424, 1;
	shf.r.wrap.b32 	%r9551, %r9424, %r9425, 1;
	mov.b64 	%rd11425, {%r9551, %r9550};
	shf.r.wrap.b32 	%r9552, %r9425, %r9424, 8;
	shf.r.wrap.b32 	%r9553, %r9424, %r9425, 8;
	mov.b64 	%rd11426, {%r9553, %r9552};
	xor.b64  	%rd11427, %rd11425, %rd11426;
	shr.u64 	%rd11428, %rd11242, 7;
	xor.b64  	%rd11429, %rd11427, %rd11428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9554,%dummy}, %rd11411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9555}, %rd11411;
	}
	shf.r.wrap.b32 	%r9556, %r9555, %r9554, 19;
	shf.r.wrap.b32 	%r9557, %r9554, %r9555, 19;
	mov.b64 	%rd11430, {%r9557, %r9556};
	shf.l.wrap.b32 	%r9558, %r9554, %r9555, 3;
	shf.l.wrap.b32 	%r9559, %r9555, %r9554, 3;
	mov.b64 	%rd11431, {%r9559, %r9558};
	xor.b64  	%rd11432, %rd11430, %rd11431;
	shr.u64 	%rd11433, %rd11411, 6;
	xor.b64  	%rd11434, %rd11432, %rd11433;
	add.s64 	%rd11435, %rd11429, %rd11229;
	add.s64 	%rd11436, %rd11435, %rd11346;
	add.s64 	%rd11437, %rd11436, %rd11434;
	shf.r.wrap.b32 	%r9560, %r9435, %r9434, 1;
	shf.r.wrap.b32 	%r9561, %r9434, %r9435, 1;
	mov.b64 	%rd11438, {%r9561, %r9560};
	shf.r.wrap.b32 	%r9562, %r9435, %r9434, 8;
	shf.r.wrap.b32 	%r9563, %r9434, %r9435, 8;
	mov.b64 	%rd11439, {%r9563, %r9562};
	xor.b64  	%rd11440, %rd11438, %rd11439;
	shr.u64 	%rd11441, %rd11255, 7;
	xor.b64  	%rd11442, %rd11440, %rd11441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9564,%dummy}, %rd11424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9565}, %rd11424;
	}
	shf.r.wrap.b32 	%r9566, %r9565, %r9564, 19;
	shf.r.wrap.b32 	%r9567, %r9564, %r9565, 19;
	mov.b64 	%rd11443, {%r9567, %r9566};
	shf.l.wrap.b32 	%r9568, %r9564, %r9565, 3;
	shf.l.wrap.b32 	%r9569, %r9565, %r9564, 3;
	mov.b64 	%rd11444, {%r9569, %r9568};
	xor.b64  	%rd11445, %rd11443, %rd11444;
	shr.u64 	%rd11446, %rd11424, 6;
	xor.b64  	%rd11447, %rd11445, %rd11446;
	add.s64 	%rd11448, %rd11442, %rd11242;
	add.s64 	%rd11449, %rd11448, %rd11359;
	add.s64 	%rd11450, %rd11449, %rd11447;
	shf.r.wrap.b32 	%r9570, %r9445, %r9444, 1;
	shf.r.wrap.b32 	%r9571, %r9444, %r9445, 1;
	mov.b64 	%rd11451, {%r9571, %r9570};
	shf.r.wrap.b32 	%r9572, %r9445, %r9444, 8;
	shf.r.wrap.b32 	%r9573, %r9444, %r9445, 8;
	mov.b64 	%rd11452, {%r9573, %r9572};
	xor.b64  	%rd11453, %rd11451, %rd11452;
	shr.u64 	%rd11454, %rd11268, 7;
	xor.b64  	%rd11455, %rd11453, %rd11454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9574,%dummy}, %rd11437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9575}, %rd11437;
	}
	shf.r.wrap.b32 	%r9576, %r9575, %r9574, 19;
	shf.r.wrap.b32 	%r9577, %r9574, %r9575, 19;
	mov.b64 	%rd11456, {%r9577, %r9576};
	shf.l.wrap.b32 	%r9578, %r9574, %r9575, 3;
	shf.l.wrap.b32 	%r9579, %r9575, %r9574, 3;
	mov.b64 	%rd11457, {%r9579, %r9578};
	xor.b64  	%rd11458, %rd11456, %rd11457;
	shr.u64 	%rd11459, %rd11437, 6;
	xor.b64  	%rd11460, %rd11458, %rd11459;
	add.s64 	%rd11461, %rd11455, %rd11255;
	add.s64 	%rd11462, %rd11461, %rd11372;
	add.s64 	%rd11463, %rd11462, %rd11460;
	shf.r.wrap.b32 	%r9580, %r9455, %r9454, 1;
	shf.r.wrap.b32 	%r9581, %r9454, %r9455, 1;
	mov.b64 	%rd11464, {%r9581, %r9580};
	shf.r.wrap.b32 	%r9582, %r9455, %r9454, 8;
	shf.r.wrap.b32 	%r9583, %r9454, %r9455, 8;
	mov.b64 	%rd11465, {%r9583, %r9582};
	xor.b64  	%rd11466, %rd11464, %rd11465;
	shr.u64 	%rd11467, %rd11281, 7;
	xor.b64  	%rd11468, %rd11466, %rd11467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9584,%dummy}, %rd11450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9585}, %rd11450;
	}
	shf.r.wrap.b32 	%r9586, %r9585, %r9584, 19;
	shf.r.wrap.b32 	%r9587, %r9584, %r9585, 19;
	mov.b64 	%rd11469, {%r9587, %r9586};
	shf.l.wrap.b32 	%r9588, %r9584, %r9585, 3;
	shf.l.wrap.b32 	%r9589, %r9585, %r9584, 3;
	mov.b64 	%rd11470, {%r9589, %r9588};
	xor.b64  	%rd11471, %rd11469, %rd11470;
	shr.u64 	%rd11472, %rd11450, 6;
	xor.b64  	%rd11473, %rd11471, %rd11472;
	add.s64 	%rd11474, %rd11468, %rd11268;
	add.s64 	%rd11475, %rd11474, %rd11385;
	add.s64 	%rd11476, %rd11475, %rd11473;
	shf.r.wrap.b32 	%r9590, %r9465, %r9464, 1;
	shf.r.wrap.b32 	%r9591, %r9464, %r9465, 1;
	mov.b64 	%rd11477, {%r9591, %r9590};
	shf.r.wrap.b32 	%r9592, %r9465, %r9464, 8;
	shf.r.wrap.b32 	%r9593, %r9464, %r9465, 8;
	mov.b64 	%rd11478, {%r9593, %r9592};
	xor.b64  	%rd11479, %rd11477, %rd11478;
	shr.u64 	%rd11480, %rd11294, 7;
	xor.b64  	%rd11481, %rd11479, %rd11480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9594,%dummy}, %rd11463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9595}, %rd11463;
	}
	shf.r.wrap.b32 	%r9596, %r9595, %r9594, 19;
	shf.r.wrap.b32 	%r9597, %r9594, %r9595, 19;
	mov.b64 	%rd11482, {%r9597, %r9596};
	shf.l.wrap.b32 	%r9598, %r9594, %r9595, 3;
	shf.l.wrap.b32 	%r9599, %r9595, %r9594, 3;
	mov.b64 	%rd11483, {%r9599, %r9598};
	xor.b64  	%rd11484, %rd11482, %rd11483;
	shr.u64 	%rd11485, %rd11463, 6;
	xor.b64  	%rd11486, %rd11484, %rd11485;
	add.s64 	%rd11487, %rd11481, %rd11281;
	add.s64 	%rd11488, %rd11487, %rd11398;
	add.s64 	%rd11489, %rd11488, %rd11486;
	shf.r.wrap.b32 	%r9600, %r9475, %r9474, 1;
	shf.r.wrap.b32 	%r9601, %r9474, %r9475, 1;
	mov.b64 	%rd11490, {%r9601, %r9600};
	shf.r.wrap.b32 	%r9602, %r9475, %r9474, 8;
	shf.r.wrap.b32 	%r9603, %r9474, %r9475, 8;
	mov.b64 	%rd11491, {%r9603, %r9602};
	xor.b64  	%rd11492, %rd11490, %rd11491;
	shr.u64 	%rd11493, %rd11307, 7;
	xor.b64  	%rd11494, %rd11492, %rd11493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9604,%dummy}, %rd11476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9605}, %rd11476;
	}
	shf.r.wrap.b32 	%r9606, %r9605, %r9604, 19;
	shf.r.wrap.b32 	%r9607, %r9604, %r9605, 19;
	mov.b64 	%rd11495, {%r9607, %r9606};
	shf.l.wrap.b32 	%r9608, %r9604, %r9605, 3;
	shf.l.wrap.b32 	%r9609, %r9605, %r9604, 3;
	mov.b64 	%rd11496, {%r9609, %r9608};
	xor.b64  	%rd11497, %rd11495, %rd11496;
	shr.u64 	%rd11498, %rd11476, 6;
	xor.b64  	%rd11499, %rd11497, %rd11498;
	add.s64 	%rd11500, %rd11494, %rd11294;
	add.s64 	%rd11501, %rd11500, %rd11411;
	add.s64 	%rd11502, %rd11501, %rd11499;
	shf.r.wrap.b32 	%r9610, %r9485, %r9484, 1;
	shf.r.wrap.b32 	%r9611, %r9484, %r9485, 1;
	mov.b64 	%rd11503, {%r9611, %r9610};
	shf.r.wrap.b32 	%r9612, %r9485, %r9484, 8;
	shf.r.wrap.b32 	%r9613, %r9484, %r9485, 8;
	mov.b64 	%rd11504, {%r9613, %r9612};
	xor.b64  	%rd11505, %rd11503, %rd11504;
	shr.u64 	%rd11506, %rd11320, 7;
	xor.b64  	%rd11507, %rd11505, %rd11506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9614,%dummy}, %rd11489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9615}, %rd11489;
	}
	shf.r.wrap.b32 	%r9616, %r9615, %r9614, 19;
	shf.r.wrap.b32 	%r9617, %r9614, %r9615, 19;
	mov.b64 	%rd11508, {%r9617, %r9616};
	shf.l.wrap.b32 	%r9618, %r9614, %r9615, 3;
	shf.l.wrap.b32 	%r9619, %r9615, %r9614, 3;
	mov.b64 	%rd11509, {%r9619, %r9618};
	xor.b64  	%rd11510, %rd11508, %rd11509;
	shr.u64 	%rd11511, %rd11489, 6;
	xor.b64  	%rd11512, %rd11510, %rd11511;
	add.s64 	%rd11513, %rd11507, %rd11307;
	add.s64 	%rd11514, %rd11513, %rd11424;
	add.s64 	%rd11515, %rd11514, %rd11512;
	shf.r.wrap.b32 	%r9620, %r9495, %r9494, 1;
	shf.r.wrap.b32 	%r9621, %r9494, %r9495, 1;
	mov.b64 	%rd11516, {%r9621, %r9620};
	shf.r.wrap.b32 	%r9622, %r9495, %r9494, 8;
	shf.r.wrap.b32 	%r9623, %r9494, %r9495, 8;
	mov.b64 	%rd11517, {%r9623, %r9622};
	xor.b64  	%rd11518, %rd11516, %rd11517;
	shr.u64 	%rd11519, %rd11333, 7;
	xor.b64  	%rd11520, %rd11518, %rd11519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9624,%dummy}, %rd11502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9625}, %rd11502;
	}
	shf.r.wrap.b32 	%r9626, %r9625, %r9624, 19;
	shf.r.wrap.b32 	%r9627, %r9624, %r9625, 19;
	mov.b64 	%rd11521, {%r9627, %r9626};
	shf.l.wrap.b32 	%r9628, %r9624, %r9625, 3;
	shf.l.wrap.b32 	%r9629, %r9625, %r9624, 3;
	mov.b64 	%rd11522, {%r9629, %r9628};
	xor.b64  	%rd11523, %rd11521, %rd11522;
	shr.u64 	%rd11524, %rd11502, 6;
	xor.b64  	%rd11525, %rd11523, %rd11524;
	add.s64 	%rd11526, %rd11520, %rd11320;
	add.s64 	%rd11527, %rd11526, %rd11437;
	add.s64 	%rd11528, %rd11527, %rd11525;
	shf.r.wrap.b32 	%r9630, %r9505, %r9504, 1;
	shf.r.wrap.b32 	%r9631, %r9504, %r9505, 1;
	mov.b64 	%rd11529, {%r9631, %r9630};
	shf.r.wrap.b32 	%r9632, %r9505, %r9504, 8;
	shf.r.wrap.b32 	%r9633, %r9504, %r9505, 8;
	mov.b64 	%rd11530, {%r9633, %r9632};
	xor.b64  	%rd11531, %rd11529, %rd11530;
	shr.u64 	%rd11532, %rd11346, 7;
	xor.b64  	%rd11533, %rd11531, %rd11532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9634,%dummy}, %rd11515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9635}, %rd11515;
	}
	shf.r.wrap.b32 	%r9636, %r9635, %r9634, 19;
	shf.r.wrap.b32 	%r9637, %r9634, %r9635, 19;
	mov.b64 	%rd11534, {%r9637, %r9636};
	shf.l.wrap.b32 	%r9638, %r9634, %r9635, 3;
	shf.l.wrap.b32 	%r9639, %r9635, %r9634, 3;
	mov.b64 	%rd11535, {%r9639, %r9638};
	xor.b64  	%rd11536, %rd11534, %rd11535;
	shr.u64 	%rd11537, %rd11515, 6;
	xor.b64  	%rd11538, %rd11536, %rd11537;
	add.s64 	%rd11539, %rd11533, %rd11333;
	add.s64 	%rd11540, %rd11539, %rd11450;
	add.s64 	%rd11541, %rd11540, %rd11538;
	shf.r.wrap.b32 	%r9640, %r9515, %r9514, 1;
	shf.r.wrap.b32 	%r9641, %r9514, %r9515, 1;
	mov.b64 	%rd11542, {%r9641, %r9640};
	shf.r.wrap.b32 	%r9642, %r9515, %r9514, 8;
	shf.r.wrap.b32 	%r9643, %r9514, %r9515, 8;
	mov.b64 	%rd11543, {%r9643, %r9642};
	xor.b64  	%rd11544, %rd11542, %rd11543;
	shr.u64 	%rd11545, %rd11359, 7;
	xor.b64  	%rd11546, %rd11544, %rd11545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9644,%dummy}, %rd11528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9645}, %rd11528;
	}
	shf.r.wrap.b32 	%r9646, %r9645, %r9644, 19;
	shf.r.wrap.b32 	%r9647, %r9644, %r9645, 19;
	mov.b64 	%rd11547, {%r9647, %r9646};
	shf.l.wrap.b32 	%r9648, %r9644, %r9645, 3;
	shf.l.wrap.b32 	%r9649, %r9645, %r9644, 3;
	mov.b64 	%rd11548, {%r9649, %r9648};
	xor.b64  	%rd11549, %rd11547, %rd11548;
	shr.u64 	%rd11550, %rd11528, 6;
	xor.b64  	%rd11551, %rd11549, %rd11550;
	add.s64 	%rd11552, %rd11546, %rd11346;
	add.s64 	%rd11553, %rd11552, %rd11463;
	add.s64 	%rd11554, %rd11553, %rd11551;
	shf.r.wrap.b32 	%r9650, %r9525, %r9524, 1;
	shf.r.wrap.b32 	%r9651, %r9524, %r9525, 1;
	mov.b64 	%rd11555, {%r9651, %r9650};
	shf.r.wrap.b32 	%r9652, %r9525, %r9524, 8;
	shf.r.wrap.b32 	%r9653, %r9524, %r9525, 8;
	mov.b64 	%rd11556, {%r9653, %r9652};
	xor.b64  	%rd11557, %rd11555, %rd11556;
	shr.u64 	%rd11558, %rd11372, 7;
	xor.b64  	%rd11559, %rd11557, %rd11558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9654,%dummy}, %rd11541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9655}, %rd11541;
	}
	shf.r.wrap.b32 	%r9656, %r9655, %r9654, 19;
	shf.r.wrap.b32 	%r9657, %r9654, %r9655, 19;
	mov.b64 	%rd11560, {%r9657, %r9656};
	shf.l.wrap.b32 	%r9658, %r9654, %r9655, 3;
	shf.l.wrap.b32 	%r9659, %r9655, %r9654, 3;
	mov.b64 	%rd11561, {%r9659, %r9658};
	xor.b64  	%rd11562, %rd11560, %rd11561;
	shr.u64 	%rd11563, %rd11541, 6;
	xor.b64  	%rd11564, %rd11562, %rd11563;
	add.s64 	%rd11565, %rd11559, %rd11359;
	add.s64 	%rd11566, %rd11565, %rd11476;
	add.s64 	%rd11567, %rd11566, %rd11564;
	shf.r.wrap.b32 	%r9660, %r9535, %r9534, 1;
	shf.r.wrap.b32 	%r9661, %r9534, %r9535, 1;
	mov.b64 	%rd11568, {%r9661, %r9660};
	shf.r.wrap.b32 	%r9662, %r9535, %r9534, 8;
	shf.r.wrap.b32 	%r9663, %r9534, %r9535, 8;
	mov.b64 	%rd11569, {%r9663, %r9662};
	xor.b64  	%rd11570, %rd11568, %rd11569;
	shr.u64 	%rd11571, %rd11385, 7;
	xor.b64  	%rd11572, %rd11570, %rd11571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9664,%dummy}, %rd11554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9665}, %rd11554;
	}
	shf.r.wrap.b32 	%r9666, %r9665, %r9664, 19;
	shf.r.wrap.b32 	%r9667, %r9664, %r9665, 19;
	mov.b64 	%rd11573, {%r9667, %r9666};
	shf.l.wrap.b32 	%r9668, %r9664, %r9665, 3;
	shf.l.wrap.b32 	%r9669, %r9665, %r9664, 3;
	mov.b64 	%rd11574, {%r9669, %r9668};
	xor.b64  	%rd11575, %rd11573, %rd11574;
	shr.u64 	%rd11576, %rd11554, 6;
	xor.b64  	%rd11577, %rd11575, %rd11576;
	add.s64 	%rd11578, %rd11572, %rd11372;
	add.s64 	%rd11579, %rd11578, %rd11489;
	add.s64 	%rd11580, %rd11579, %rd11577;
	shf.r.wrap.b32 	%r9670, %r9545, %r9544, 1;
	shf.r.wrap.b32 	%r9671, %r9544, %r9545, 1;
	mov.b64 	%rd11581, {%r9671, %r9670};
	shf.r.wrap.b32 	%r9672, %r9545, %r9544, 8;
	shf.r.wrap.b32 	%r9673, %r9544, %r9545, 8;
	mov.b64 	%rd11582, {%r9673, %r9672};
	xor.b64  	%rd11583, %rd11581, %rd11582;
	shr.u64 	%rd11584, %rd11398, 7;
	xor.b64  	%rd11585, %rd11583, %rd11584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9674,%dummy}, %rd11567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9675}, %rd11567;
	}
	shf.r.wrap.b32 	%r9676, %r9675, %r9674, 19;
	shf.r.wrap.b32 	%r9677, %r9674, %r9675, 19;
	mov.b64 	%rd11586, {%r9677, %r9676};
	shf.l.wrap.b32 	%r9678, %r9674, %r9675, 3;
	shf.l.wrap.b32 	%r9679, %r9675, %r9674, 3;
	mov.b64 	%rd11587, {%r9679, %r9678};
	xor.b64  	%rd11588, %rd11586, %rd11587;
	shr.u64 	%rd11589, %rd11567, 6;
	xor.b64  	%rd11590, %rd11588, %rd11589;
	add.s64 	%rd11591, %rd11585, %rd11385;
	add.s64 	%rd11592, %rd11591, %rd11502;
	add.s64 	%rd11593, %rd11592, %rd11590;
	shf.r.wrap.b32 	%r9680, %r9555, %r9554, 1;
	shf.r.wrap.b32 	%r9681, %r9554, %r9555, 1;
	mov.b64 	%rd11594, {%r9681, %r9680};
	shf.r.wrap.b32 	%r9682, %r9555, %r9554, 8;
	shf.r.wrap.b32 	%r9683, %r9554, %r9555, 8;
	mov.b64 	%rd11595, {%r9683, %r9682};
	xor.b64  	%rd11596, %rd11594, %rd11595;
	shr.u64 	%rd11597, %rd11411, 7;
	xor.b64  	%rd11598, %rd11596, %rd11597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9684,%dummy}, %rd11580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9685}, %rd11580;
	}
	shf.r.wrap.b32 	%r9686, %r9685, %r9684, 19;
	shf.r.wrap.b32 	%r9687, %r9684, %r9685, 19;
	mov.b64 	%rd11599, {%r9687, %r9686};
	shf.l.wrap.b32 	%r9688, %r9684, %r9685, 3;
	shf.l.wrap.b32 	%r9689, %r9685, %r9684, 3;
	mov.b64 	%rd11600, {%r9689, %r9688};
	xor.b64  	%rd11601, %rd11599, %rd11600;
	shr.u64 	%rd11602, %rd11580, 6;
	xor.b64  	%rd11603, %rd11601, %rd11602;
	add.s64 	%rd11604, %rd11598, %rd11398;
	add.s64 	%rd11605, %rd11604, %rd11515;
	add.s64 	%rd11606, %rd11605, %rd11603;
	shf.r.wrap.b32 	%r9690, %r9565, %r9564, 1;
	shf.r.wrap.b32 	%r9691, %r9564, %r9565, 1;
	mov.b64 	%rd11607, {%r9691, %r9690};
	shf.r.wrap.b32 	%r9692, %r9565, %r9564, 8;
	shf.r.wrap.b32 	%r9693, %r9564, %r9565, 8;
	mov.b64 	%rd11608, {%r9693, %r9692};
	xor.b64  	%rd11609, %rd11607, %rd11608;
	shr.u64 	%rd11610, %rd11424, 7;
	xor.b64  	%rd11611, %rd11609, %rd11610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9694,%dummy}, %rd11593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9695}, %rd11593;
	}
	shf.r.wrap.b32 	%r9696, %r9695, %r9694, 19;
	shf.r.wrap.b32 	%r9697, %r9694, %r9695, 19;
	mov.b64 	%rd11612, {%r9697, %r9696};
	shf.l.wrap.b32 	%r9698, %r9694, %r9695, 3;
	shf.l.wrap.b32 	%r9699, %r9695, %r9694, 3;
	mov.b64 	%rd11613, {%r9699, %r9698};
	xor.b64  	%rd11614, %rd11612, %rd11613;
	shr.u64 	%rd11615, %rd11593, 6;
	xor.b64  	%rd11616, %rd11614, %rd11615;
	add.s64 	%rd11617, %rd11611, %rd11411;
	add.s64 	%rd11618, %rd11617, %rd11528;
	add.s64 	%rd11619, %rd11618, %rd11616;
	shf.r.wrap.b32 	%r9700, %r9575, %r9574, 1;
	shf.r.wrap.b32 	%r9701, %r9574, %r9575, 1;
	mov.b64 	%rd11620, {%r9701, %r9700};
	shf.r.wrap.b32 	%r9702, %r9575, %r9574, 8;
	shf.r.wrap.b32 	%r9703, %r9574, %r9575, 8;
	mov.b64 	%rd11621, {%r9703, %r9702};
	xor.b64  	%rd11622, %rd11620, %rd11621;
	shr.u64 	%rd11623, %rd11437, 7;
	xor.b64  	%rd11624, %rd11622, %rd11623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9704,%dummy}, %rd11606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9705}, %rd11606;
	}
	shf.r.wrap.b32 	%r9706, %r9705, %r9704, 19;
	shf.r.wrap.b32 	%r9707, %r9704, %r9705, 19;
	mov.b64 	%rd11625, {%r9707, %r9706};
	shf.l.wrap.b32 	%r9708, %r9704, %r9705, 3;
	shf.l.wrap.b32 	%r9709, %r9705, %r9704, 3;
	mov.b64 	%rd11626, {%r9709, %r9708};
	xor.b64  	%rd11627, %rd11625, %rd11626;
	shr.u64 	%rd11628, %rd11606, 6;
	xor.b64  	%rd11629, %rd11627, %rd11628;
	add.s64 	%rd11630, %rd11624, %rd11424;
	add.s64 	%rd11631, %rd11630, %rd11541;
	add.s64 	%rd11632, %rd11631, %rd11629;
	add.s64 	%rd11633, %rd40, %rd10500;
	add.s64 	%rd11634, %rd11633, -6534734903238641935;
	add.s64 	%rd11635, %rd120, %rd11633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9710,%dummy}, %rd11634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9711}, %rd11634;
	}
	shf.r.wrap.b32 	%r9712, %r9711, %r9710, 14;
	shf.r.wrap.b32 	%r9713, %r9710, %r9711, 14;
	mov.b64 	%rd11636, {%r9713, %r9712};
	shf.r.wrap.b32 	%r9714, %r9711, %r9710, 18;
	shf.r.wrap.b32 	%r9715, %r9710, %r9711, 18;
	mov.b64 	%rd11637, {%r9715, %r9714};
	xor.b64  	%rd11638, %rd11636, %rd11637;
	shf.l.wrap.b32 	%r9716, %r9710, %r9711, 23;
	shf.l.wrap.b32 	%r9717, %r9711, %r9710, 23;
	mov.b64 	%rd11639, {%r9717, %r9716};
	xor.b64  	%rd11640, %rd11638, %rd11639;
	and.b64  	%rd11641, %rd11634, 5840696475078001361;
	mov.u64 	%rd11642, 6534734903238641934;
	sub.s64 	%rd11643, %rd11642, %rd11633;
	and.b64  	%rd11644, %rd11643, -7276294671716946913;
	or.b64  	%rd11645, %rd11641, %rd11644;
	add.s64 	%rd11646, %rd11645, %rd11640;
	add.s64 	%rd11647, %rd11646, %rd41;
	add.s64 	%rd11648, %rd11647, %rd10520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9718,%dummy}, %rd11635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9719}, %rd11635;
	}
	shf.r.wrap.b32 	%r9720, %r9719, %r9718, 28;
	shf.r.wrap.b32 	%r9721, %r9718, %r9719, 28;
	mov.b64 	%rd11649, {%r9721, %r9720};
	shf.l.wrap.b32 	%r9722, %r9718, %r9719, 30;
	shf.l.wrap.b32 	%r9723, %r9719, %r9718, 30;
	mov.b64 	%rd11650, {%r9723, %r9722};
	xor.b64  	%rd11651, %rd11649, %rd11650;
	shf.l.wrap.b32 	%r9724, %r9718, %r9719, 25;
	shf.l.wrap.b32 	%r9725, %r9719, %r9718, 25;
	mov.b64 	%rd11652, {%r9725, %r9724};
	xor.b64  	%rd11653, %rd11651, %rd11652;
	and.b64  	%rd11654, %rd11635, -3355664534840381901;
	or.b64  	%rd11655, %rd11654, 3026882967131160840;
	add.s64 	%rd11656, %rd11653, %rd11655;
	add.s64 	%rd11657, %rd11656, %rd11648;
	add.s64 	%rd11658, %rd11648, 6625583534739731862;
	add.s64 	%rd11659, %rd11657, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9726,%dummy}, %rd11658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9727}, %rd11658;
	}
	shf.r.wrap.b32 	%r9728, %r9727, %r9726, 14;
	shf.r.wrap.b32 	%r9729, %r9726, %r9727, 14;
	mov.b64 	%rd11660, {%r9729, %r9728};
	shf.r.wrap.b32 	%r9730, %r9727, %r9726, 18;
	shf.r.wrap.b32 	%r9731, %r9726, %r9727, 18;
	mov.b64 	%rd11661, {%r9731, %r9730};
	xor.b64  	%rd11662, %rd11660, %rd11661;
	shf.l.wrap.b32 	%r9732, %r9726, %r9727, 23;
	shf.l.wrap.b32 	%r9733, %r9727, %r9726, 23;
	mov.b64 	%rd11663, {%r9733, %r9732};
	xor.b64  	%rd11664, %rd11662, %rd11663;
	and.b64  	%rd11665, %rd11658, %rd11634;
	mov.u64 	%rd11666, 2597788502115043945;
	sub.s64 	%rd11667, %rd11666, %rd11648;
	and.b64  	%rd11668, %rd11667, 5840696475078001361;
	or.b64  	%rd11669, %rd11665, %rd11668;
	add.s64 	%rd11670, %rd11669, %rd11664;
	add.s64 	%rd11671, %rd11670, %rd42;
	add.s64 	%rd11672, %rd11671, %rd10540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9734,%dummy}, %rd11659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9735}, %rd11659;
	}
	shf.r.wrap.b32 	%r9736, %r9735, %r9734, 28;
	shf.r.wrap.b32 	%r9737, %r9734, %r9735, 28;
	mov.b64 	%rd11673, {%r9737, %r9736};
	shf.l.wrap.b32 	%r9738, %r9734, %r9735, 30;
	shf.l.wrap.b32 	%r9739, %r9735, %r9734, 30;
	mov.b64 	%rd11674, {%r9739, %r9738};
	xor.b64  	%rd11675, %rd11673, %rd11674;
	shf.l.wrap.b32 	%r9740, %r9734, %r9735, 25;
	shf.l.wrap.b32 	%r9741, %r9735, %r9734, 25;
	mov.b64 	%rd11676, {%r9741, %r9740};
	xor.b64  	%rd11677, %rd11675, %rd11676;
	xor.b64  	%rd11678, %rd11635, 7640891576956012808;
	and.b64  	%rd11679, %rd11659, %rd11678;
	and.b64  	%rd11680, %rd11635, 7640891576956012808;
	xor.b64  	%rd11681, %rd11679, %rd11680;
	add.s64 	%rd11682, %rd11677, %rd11681;
	add.s64 	%rd11683, %rd11682, %rd11672;
	add.s64 	%rd11684, %rd11672, 6227659224458531674;
	add.s64 	%rd11685, %rd11683, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9742,%dummy}, %rd11684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9743}, %rd11684;
	}
	shf.r.wrap.b32 	%r9744, %r9743, %r9742, 14;
	shf.r.wrap.b32 	%r9745, %r9742, %r9743, 14;
	mov.b64 	%rd11686, {%r9745, %r9744};
	shf.r.wrap.b32 	%r9746, %r9743, %r9742, 18;
	shf.r.wrap.b32 	%r9747, %r9742, %r9743, 18;
	mov.b64 	%rd11687, {%r9747, %r9746};
	xor.b64  	%rd11688, %rd11686, %rd11687;
	shf.l.wrap.b32 	%r9748, %r9742, %r9743, 23;
	shf.l.wrap.b32 	%r9749, %r9743, %r9742, 23;
	mov.b64 	%rd11689, {%r9749, %r9748};
	xor.b64  	%rd11690, %rd11688, %rd11689;
	and.b64  	%rd11691, %rd11684, %rd11658;
	mov.u64 	%rd11692, -6227659224458531675;
	sub.s64 	%rd11693, %rd11692, %rd11672;
	and.b64  	%rd11694, %rd11634, %rd11693;
	or.b64  	%rd11695, %rd11691, %rd11694;
	add.s64 	%rd11696, %rd11695, %rd11690;
	add.s64 	%rd11697, %rd11696, %rd43;
	add.s64 	%rd11698, %rd11697, %rd10560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9750,%dummy}, %rd11685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9751}, %rd11685;
	}
	shf.r.wrap.b32 	%r9752, %r9751, %r9750, 28;
	shf.r.wrap.b32 	%r9753, %r9750, %r9751, 28;
	mov.b64 	%rd11699, {%r9753, %r9752};
	shf.l.wrap.b32 	%r9754, %r9750, %r9751, 30;
	shf.l.wrap.b32 	%r9755, %r9751, %r9750, 30;
	mov.b64 	%rd11700, {%r9755, %r9754};
	xor.b64  	%rd11701, %rd11699, %rd11700;
	shf.l.wrap.b32 	%r9756, %r9750, %r9751, 25;
	shf.l.wrap.b32 	%r9757, %r9751, %r9750, 25;
	mov.b64 	%rd11702, {%r9757, %r9756};
	xor.b64  	%rd11703, %rd11701, %rd11702;
	xor.b64  	%rd11704, %rd11659, %rd11635;
	and.b64  	%rd11705, %rd11685, %rd11704;
	and.b64  	%rd11706, %rd11659, %rd11635;
	xor.b64  	%rd11707, %rd11705, %rd11706;
	add.s64 	%rd11708, %rd11703, %rd11707;
	add.s64 	%rd11709, %rd11708, %rd11698;
	add.s64 	%rd11710, %rd11698, -4965156021675537447;
	add.s64 	%rd11711, %rd11709, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9758,%dummy}, %rd11710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9759}, %rd11710;
	}
	shf.r.wrap.b32 	%r9760, %r9759, %r9758, 14;
	shf.r.wrap.b32 	%r9761, %r9758, %r9759, 14;
	mov.b64 	%rd11712, {%r9761, %r9760};
	shf.r.wrap.b32 	%r9762, %r9759, %r9758, 18;
	shf.r.wrap.b32 	%r9763, %r9758, %r9759, 18;
	mov.b64 	%rd11713, {%r9763, %r9762};
	xor.b64  	%rd11714, %rd11712, %rd11713;
	shf.l.wrap.b32 	%r9764, %r9758, %r9759, 23;
	shf.l.wrap.b32 	%r9765, %r9759, %r9758, 23;
	mov.b64 	%rd11715, {%r9765, %r9764};
	xor.b64  	%rd11716, %rd11714, %rd11715;
	and.b64  	%rd11717, %rd11710, %rd11684;
	mov.u64 	%rd11718, 4965156021675537446;
	sub.s64 	%rd11719, %rd11718, %rd11698;
	and.b64  	%rd11720, %rd11658, %rd11719;
	or.b64  	%rd11721, %rd11717, %rd11720;
	add.s64 	%rd11722, %rd11721, %rd11634;
	add.s64 	%rd11723, %rd11722, %rd11716;
	add.s64 	%rd11724, %rd11723, %rd44;
	add.s64 	%rd11725, %rd11724, %rd10580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9766,%dummy}, %rd11711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9767}, %rd11711;
	}
	shf.r.wrap.b32 	%r9768, %r9767, %r9766, 28;
	shf.r.wrap.b32 	%r9769, %r9766, %r9767, 28;
	mov.b64 	%rd11726, {%r9769, %r9768};
	shf.l.wrap.b32 	%r9770, %r9766, %r9767, 30;
	shf.l.wrap.b32 	%r9771, %r9767, %r9766, 30;
	mov.b64 	%rd11727, {%r9771, %r9770};
	xor.b64  	%rd11728, %rd11726, %rd11727;
	shf.l.wrap.b32 	%r9772, %r9766, %r9767, 25;
	shf.l.wrap.b32 	%r9773, %r9767, %r9766, 25;
	mov.b64 	%rd11729, {%r9773, %r9772};
	xor.b64  	%rd11730, %rd11728, %rd11729;
	xor.b64  	%rd11731, %rd11685, %rd11659;
	and.b64  	%rd11732, %rd11711, %rd11731;
	and.b64  	%rd11733, %rd11685, %rd11659;
	xor.b64  	%rd11734, %rd11732, %rd11733;
	add.s64 	%rd11735, %rd11730, %rd11734;
	add.s64 	%rd11736, %rd11725, %rd11635;
	add.s64 	%rd11737, %rd11735, %rd11725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9774,%dummy}, %rd11736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9775}, %rd11736;
	}
	shf.r.wrap.b32 	%r9776, %r9775, %r9774, 14;
	shf.r.wrap.b32 	%r9777, %r9774, %r9775, 14;
	mov.b64 	%rd11738, {%r9777, %r9776};
	shf.r.wrap.b32 	%r9778, %r9775, %r9774, 18;
	shf.r.wrap.b32 	%r9779, %r9774, %r9775, 18;
	mov.b64 	%rd11739, {%r9779, %r9778};
	xor.b64  	%rd11740, %rd11738, %rd11739;
	shf.l.wrap.b32 	%r9780, %r9774, %r9775, 23;
	shf.l.wrap.b32 	%r9781, %r9775, %r9774, 23;
	mov.b64 	%rd11741, {%r9781, %r9780};
	xor.b64  	%rd11742, %rd11740, %rd11741;
	and.b64  	%rd11743, %rd11736, %rd11710;
	not.b64 	%rd11744, %rd11736;
	and.b64  	%rd11745, %rd11684, %rd11744;
	or.b64  	%rd11746, %rd11743, %rd11745;
	add.s64 	%rd11747, %rd11746, %rd11658;
	add.s64 	%rd11748, %rd11747, %rd11742;
	add.s64 	%rd11749, %rd11748, %rd45;
	add.s64 	%rd11750, %rd11749, %rd10600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9782,%dummy}, %rd11737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9783}, %rd11737;
	}
	shf.r.wrap.b32 	%r9784, %r9783, %r9782, 28;
	shf.r.wrap.b32 	%r9785, %r9782, %r9783, 28;
	mov.b64 	%rd11751, {%r9785, %r9784};
	shf.l.wrap.b32 	%r9786, %r9782, %r9783, 30;
	shf.l.wrap.b32 	%r9787, %r9783, %r9782, 30;
	mov.b64 	%rd11752, {%r9787, %r9786};
	xor.b64  	%rd11753, %rd11751, %rd11752;
	shf.l.wrap.b32 	%r9788, %r9782, %r9783, 25;
	shf.l.wrap.b32 	%r9789, %r9783, %r9782, 25;
	mov.b64 	%rd11754, {%r9789, %r9788};
	xor.b64  	%rd11755, %rd11753, %rd11754;
	xor.b64  	%rd11756, %rd11711, %rd11685;
	and.b64  	%rd11757, %rd11737, %rd11756;
	and.b64  	%rd11758, %rd11711, %rd11685;
	xor.b64  	%rd11759, %rd11757, %rd11758;
	add.s64 	%rd11760, %rd11755, %rd11759;
	add.s64 	%rd11761, %rd11750, %rd11659;
	add.s64 	%rd11762, %rd11760, %rd11750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9790,%dummy}, %rd11761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9791}, %rd11761;
	}
	shf.r.wrap.b32 	%r9792, %r9791, %r9790, 14;
	shf.r.wrap.b32 	%r9793, %r9790, %r9791, 14;
	mov.b64 	%rd11763, {%r9793, %r9792};
	shf.r.wrap.b32 	%r9794, %r9791, %r9790, 18;
	shf.r.wrap.b32 	%r9795, %r9790, %r9791, 18;
	mov.b64 	%rd11764, {%r9795, %r9794};
	xor.b64  	%rd11765, %rd11763, %rd11764;
	shf.l.wrap.b32 	%r9796, %r9790, %r9791, 23;
	shf.l.wrap.b32 	%r9797, %r9791, %r9790, 23;
	mov.b64 	%rd11766, {%r9797, %r9796};
	xor.b64  	%rd11767, %rd11765, %rd11766;
	and.b64  	%rd11768, %rd11761, %rd11736;
	not.b64 	%rd11769, %rd11761;
	and.b64  	%rd11770, %rd11710, %rd11769;
	or.b64  	%rd11771, %rd11768, %rd11770;
	add.s64 	%rd11772, %rd11771, %rd11684;
	add.s64 	%rd11773, %rd11772, %rd11767;
	add.s64 	%rd11774, %rd11773, %rd46;
	add.s64 	%rd11775, %rd11774, %rd10620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9798,%dummy}, %rd11762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9799}, %rd11762;
	}
	shf.r.wrap.b32 	%r9800, %r9799, %r9798, 28;
	shf.r.wrap.b32 	%r9801, %r9798, %r9799, 28;
	mov.b64 	%rd11776, {%r9801, %r9800};
	shf.l.wrap.b32 	%r9802, %r9798, %r9799, 30;
	shf.l.wrap.b32 	%r9803, %r9799, %r9798, 30;
	mov.b64 	%rd11777, {%r9803, %r9802};
	xor.b64  	%rd11778, %rd11776, %rd11777;
	shf.l.wrap.b32 	%r9804, %r9798, %r9799, 25;
	shf.l.wrap.b32 	%r9805, %r9799, %r9798, 25;
	mov.b64 	%rd11779, {%r9805, %r9804};
	xor.b64  	%rd11780, %rd11778, %rd11779;
	xor.b64  	%rd11781, %rd11737, %rd11711;
	and.b64  	%rd11782, %rd11762, %rd11781;
	and.b64  	%rd11783, %rd11737, %rd11711;
	xor.b64  	%rd11784, %rd11782, %rd11783;
	add.s64 	%rd11785, %rd11780, %rd11784;
	add.s64 	%rd11786, %rd11775, %rd11685;
	add.s64 	%rd11787, %rd11785, %rd11775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9806,%dummy}, %rd11786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9807}, %rd11786;
	}
	shf.r.wrap.b32 	%r9808, %r9807, %r9806, 14;
	shf.r.wrap.b32 	%r9809, %r9806, %r9807, 14;
	mov.b64 	%rd11788, {%r9809, %r9808};
	shf.r.wrap.b32 	%r9810, %r9807, %r9806, 18;
	shf.r.wrap.b32 	%r9811, %r9806, %r9807, 18;
	mov.b64 	%rd11789, {%r9811, %r9810};
	xor.b64  	%rd11790, %rd11788, %rd11789;
	shf.l.wrap.b32 	%r9812, %r9806, %r9807, 23;
	shf.l.wrap.b32 	%r9813, %r9807, %r9806, 23;
	mov.b64 	%rd11791, {%r9813, %r9812};
	xor.b64  	%rd11792, %rd11790, %rd11791;
	and.b64  	%rd11793, %rd11786, %rd11761;
	not.b64 	%rd11794, %rd11786;
	and.b64  	%rd11795, %rd11736, %rd11794;
	or.b64  	%rd11796, %rd11793, %rd11795;
	add.s64 	%rd11797, %rd11796, %rd11710;
	add.s64 	%rd11798, %rd11797, %rd11792;
	add.s64 	%rd11799, %rd11798, %rd47;
	add.s64 	%rd11800, %rd11799, %rd10640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9814,%dummy}, %rd11787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9815}, %rd11787;
	}
	shf.r.wrap.b32 	%r9816, %r9815, %r9814, 28;
	shf.r.wrap.b32 	%r9817, %r9814, %r9815, 28;
	mov.b64 	%rd11801, {%r9817, %r9816};
	shf.l.wrap.b32 	%r9818, %r9814, %r9815, 30;
	shf.l.wrap.b32 	%r9819, %r9815, %r9814, 30;
	mov.b64 	%rd11802, {%r9819, %r9818};
	xor.b64  	%rd11803, %rd11801, %rd11802;
	shf.l.wrap.b32 	%r9820, %r9814, %r9815, 25;
	shf.l.wrap.b32 	%r9821, %r9815, %r9814, 25;
	mov.b64 	%rd11804, {%r9821, %r9820};
	xor.b64  	%rd11805, %rd11803, %rd11804;
	xor.b64  	%rd11806, %rd11762, %rd11737;
	and.b64  	%rd11807, %rd11787, %rd11806;
	and.b64  	%rd11808, %rd11762, %rd11737;
	xor.b64  	%rd11809, %rd11807, %rd11808;
	add.s64 	%rd11810, %rd11805, %rd11809;
	add.s64 	%rd11811, %rd11800, %rd11711;
	add.s64 	%rd11812, %rd11810, %rd11800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9822,%dummy}, %rd11811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9823}, %rd11811;
	}
	shf.r.wrap.b32 	%r9824, %r9823, %r9822, 14;
	shf.r.wrap.b32 	%r9825, %r9822, %r9823, 14;
	mov.b64 	%rd11813, {%r9825, %r9824};
	shf.r.wrap.b32 	%r9826, %r9823, %r9822, 18;
	shf.r.wrap.b32 	%r9827, %r9822, %r9823, 18;
	mov.b64 	%rd11814, {%r9827, %r9826};
	xor.b64  	%rd11815, %rd11813, %rd11814;
	shf.l.wrap.b32 	%r9828, %r9822, %r9823, 23;
	shf.l.wrap.b32 	%r9829, %r9823, %r9822, 23;
	mov.b64 	%rd11816, {%r9829, %r9828};
	xor.b64  	%rd11817, %rd11815, %rd11816;
	and.b64  	%rd11818, %rd11811, %rd11786;
	not.b64 	%rd11819, %rd11811;
	and.b64  	%rd11820, %rd11761, %rd11819;
	or.b64  	%rd11821, %rd11818, %rd11820;
	add.s64 	%rd11822, %rd11821, %rd11736;
	add.s64 	%rd11823, %rd11822, %rd11817;
	add.s64 	%rd11824, %rd11823, %rd48;
	add.s64 	%rd11825, %rd11824, %rd10660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9830,%dummy}, %rd11812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9831}, %rd11812;
	}
	shf.r.wrap.b32 	%r9832, %r9831, %r9830, 28;
	shf.r.wrap.b32 	%r9833, %r9830, %r9831, 28;
	mov.b64 	%rd11826, {%r9833, %r9832};
	shf.l.wrap.b32 	%r9834, %r9830, %r9831, 30;
	shf.l.wrap.b32 	%r9835, %r9831, %r9830, 30;
	mov.b64 	%rd11827, {%r9835, %r9834};
	xor.b64  	%rd11828, %rd11826, %rd11827;
	shf.l.wrap.b32 	%r9836, %r9830, %r9831, 25;
	shf.l.wrap.b32 	%r9837, %r9831, %r9830, 25;
	mov.b64 	%rd11829, {%r9837, %r9836};
	xor.b64  	%rd11830, %rd11828, %rd11829;
	xor.b64  	%rd11831, %rd11787, %rd11762;
	and.b64  	%rd11832, %rd11812, %rd11831;
	and.b64  	%rd11833, %rd11787, %rd11762;
	xor.b64  	%rd11834, %rd11832, %rd11833;
	add.s64 	%rd11835, %rd11830, %rd11834;
	add.s64 	%rd11836, %rd11825, %rd11737;
	add.s64 	%rd11837, %rd11835, %rd11825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9838,%dummy}, %rd11836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9839}, %rd11836;
	}
	shf.r.wrap.b32 	%r9840, %r9839, %r9838, 14;
	shf.r.wrap.b32 	%r9841, %r9838, %r9839, 14;
	mov.b64 	%rd11838, {%r9841, %r9840};
	shf.r.wrap.b32 	%r9842, %r9839, %r9838, 18;
	shf.r.wrap.b32 	%r9843, %r9838, %r9839, 18;
	mov.b64 	%rd11839, {%r9843, %r9842};
	xor.b64  	%rd11840, %rd11838, %rd11839;
	shf.l.wrap.b32 	%r9844, %r9838, %r9839, 23;
	shf.l.wrap.b32 	%r9845, %r9839, %r9838, 23;
	mov.b64 	%rd11841, {%r9845, %r9844};
	xor.b64  	%rd11842, %rd11840, %rd11841;
	and.b64  	%rd11843, %rd11836, %rd11811;
	not.b64 	%rd11844, %rd11836;
	and.b64  	%rd11845, %rd11786, %rd11844;
	or.b64  	%rd11846, %rd11843, %rd11845;
	add.s64 	%rd11847, %rd11846, %rd11761;
	add.s64 	%rd11848, %rd11847, %rd11842;
	add.s64 	%rd11849, %rd11848, %rd49;
	add.s64 	%rd11850, %rd11849, %rd10680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9846,%dummy}, %rd11837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9847}, %rd11837;
	}
	shf.r.wrap.b32 	%r9848, %r9847, %r9846, 28;
	shf.r.wrap.b32 	%r9849, %r9846, %r9847, 28;
	mov.b64 	%rd11851, {%r9849, %r9848};
	shf.l.wrap.b32 	%r9850, %r9846, %r9847, 30;
	shf.l.wrap.b32 	%r9851, %r9847, %r9846, 30;
	mov.b64 	%rd11852, {%r9851, %r9850};
	xor.b64  	%rd11853, %rd11851, %rd11852;
	shf.l.wrap.b32 	%r9852, %r9846, %r9847, 25;
	shf.l.wrap.b32 	%r9853, %r9847, %r9846, 25;
	mov.b64 	%rd11854, {%r9853, %r9852};
	xor.b64  	%rd11855, %rd11853, %rd11854;
	xor.b64  	%rd11856, %rd11812, %rd11787;
	and.b64  	%rd11857, %rd11837, %rd11856;
	and.b64  	%rd11858, %rd11812, %rd11787;
	xor.b64  	%rd11859, %rd11857, %rd11858;
	add.s64 	%rd11860, %rd11855, %rd11859;
	add.s64 	%rd11861, %rd11850, %rd11762;
	add.s64 	%rd11862, %rd11860, %rd11850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9854,%dummy}, %rd11861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9855}, %rd11861;
	}
	shf.r.wrap.b32 	%r9856, %r9855, %r9854, 14;
	shf.r.wrap.b32 	%r9857, %r9854, %r9855, 14;
	mov.b64 	%rd11863, {%r9857, %r9856};
	shf.r.wrap.b32 	%r9858, %r9855, %r9854, 18;
	shf.r.wrap.b32 	%r9859, %r9854, %r9855, 18;
	mov.b64 	%rd11864, {%r9859, %r9858};
	xor.b64  	%rd11865, %rd11863, %rd11864;
	shf.l.wrap.b32 	%r9860, %r9854, %r9855, 23;
	shf.l.wrap.b32 	%r9861, %r9855, %r9854, 23;
	mov.b64 	%rd11866, {%r9861, %r9860};
	xor.b64  	%rd11867, %rd11865, %rd11866;
	and.b64  	%rd11868, %rd11861, %rd11836;
	not.b64 	%rd11869, %rd11861;
	and.b64  	%rd11870, %rd11811, %rd11869;
	or.b64  	%rd11871, %rd11868, %rd11870;
	add.s64 	%rd11872, %rd11871, %rd11786;
	add.s64 	%rd11873, %rd11872, %rd11867;
	add.s64 	%rd11874, %rd11873, %rd50;
	add.s64 	%rd11875, %rd11874, %rd10700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9862,%dummy}, %rd11862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9863}, %rd11862;
	}
	shf.r.wrap.b32 	%r9864, %r9863, %r9862, 28;
	shf.r.wrap.b32 	%r9865, %r9862, %r9863, 28;
	mov.b64 	%rd11876, {%r9865, %r9864};
	shf.l.wrap.b32 	%r9866, %r9862, %r9863, 30;
	shf.l.wrap.b32 	%r9867, %r9863, %r9862, 30;
	mov.b64 	%rd11877, {%r9867, %r9866};
	xor.b64  	%rd11878, %rd11876, %rd11877;
	shf.l.wrap.b32 	%r9868, %r9862, %r9863, 25;
	shf.l.wrap.b32 	%r9869, %r9863, %r9862, 25;
	mov.b64 	%rd11879, {%r9869, %r9868};
	xor.b64  	%rd11880, %rd11878, %rd11879;
	xor.b64  	%rd11881, %rd11837, %rd11812;
	and.b64  	%rd11882, %rd11862, %rd11881;
	and.b64  	%rd11883, %rd11837, %rd11812;
	xor.b64  	%rd11884, %rd11882, %rd11883;
	add.s64 	%rd11885, %rd11880, %rd11884;
	add.s64 	%rd11886, %rd11875, %rd11787;
	add.s64 	%rd11887, %rd11885, %rd11875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9870,%dummy}, %rd11886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9871}, %rd11886;
	}
	shf.r.wrap.b32 	%r9872, %r9871, %r9870, 14;
	shf.r.wrap.b32 	%r9873, %r9870, %r9871, 14;
	mov.b64 	%rd11888, {%r9873, %r9872};
	shf.r.wrap.b32 	%r9874, %r9871, %r9870, 18;
	shf.r.wrap.b32 	%r9875, %r9870, %r9871, 18;
	mov.b64 	%rd11889, {%r9875, %r9874};
	xor.b64  	%rd11890, %rd11888, %rd11889;
	shf.l.wrap.b32 	%r9876, %r9870, %r9871, 23;
	shf.l.wrap.b32 	%r9877, %r9871, %r9870, 23;
	mov.b64 	%rd11891, {%r9877, %r9876};
	xor.b64  	%rd11892, %rd11890, %rd11891;
	and.b64  	%rd11893, %rd11886, %rd11861;
	not.b64 	%rd11894, %rd11886;
	and.b64  	%rd11895, %rd11836, %rd11894;
	or.b64  	%rd11896, %rd11893, %rd11895;
	add.s64 	%rd11897, %rd11896, %rd11811;
	add.s64 	%rd11898, %rd11897, %rd11892;
	add.s64 	%rd11899, %rd11898, %rd51;
	add.s64 	%rd11900, %rd11899, %rd10720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9878,%dummy}, %rd11887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9879}, %rd11887;
	}
	shf.r.wrap.b32 	%r9880, %r9879, %r9878, 28;
	shf.r.wrap.b32 	%r9881, %r9878, %r9879, 28;
	mov.b64 	%rd11901, {%r9881, %r9880};
	shf.l.wrap.b32 	%r9882, %r9878, %r9879, 30;
	shf.l.wrap.b32 	%r9883, %r9879, %r9878, 30;
	mov.b64 	%rd11902, {%r9883, %r9882};
	xor.b64  	%rd11903, %rd11901, %rd11902;
	shf.l.wrap.b32 	%r9884, %r9878, %r9879, 25;
	shf.l.wrap.b32 	%r9885, %r9879, %r9878, 25;
	mov.b64 	%rd11904, {%r9885, %r9884};
	xor.b64  	%rd11905, %rd11903, %rd11904;
	xor.b64  	%rd11906, %rd11862, %rd11837;
	and.b64  	%rd11907, %rd11887, %rd11906;
	and.b64  	%rd11908, %rd11862, %rd11837;
	xor.b64  	%rd11909, %rd11907, %rd11908;
	add.s64 	%rd11910, %rd11905, %rd11909;
	add.s64 	%rd11911, %rd11900, %rd11812;
	add.s64 	%rd11912, %rd11910, %rd11900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9886,%dummy}, %rd11911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9887}, %rd11911;
	}
	shf.r.wrap.b32 	%r9888, %r9887, %r9886, 14;
	shf.r.wrap.b32 	%r9889, %r9886, %r9887, 14;
	mov.b64 	%rd11913, {%r9889, %r9888};
	shf.r.wrap.b32 	%r9890, %r9887, %r9886, 18;
	shf.r.wrap.b32 	%r9891, %r9886, %r9887, 18;
	mov.b64 	%rd11914, {%r9891, %r9890};
	xor.b64  	%rd11915, %rd11913, %rd11914;
	shf.l.wrap.b32 	%r9892, %r9886, %r9887, 23;
	shf.l.wrap.b32 	%r9893, %r9887, %r9886, 23;
	mov.b64 	%rd11916, {%r9893, %r9892};
	xor.b64  	%rd11917, %rd11915, %rd11916;
	and.b64  	%rd11918, %rd11911, %rd11886;
	not.b64 	%rd11919, %rd11911;
	and.b64  	%rd11920, %rd11861, %rd11919;
	or.b64  	%rd11921, %rd11918, %rd11920;
	add.s64 	%rd11922, %rd11921, %rd11836;
	add.s64 	%rd11923, %rd11922, %rd11917;
	add.s64 	%rd11924, %rd11923, %rd52;
	add.s64 	%rd11925, %rd11924, %rd10740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9894,%dummy}, %rd11912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9895}, %rd11912;
	}
	shf.r.wrap.b32 	%r9896, %r9895, %r9894, 28;
	shf.r.wrap.b32 	%r9897, %r9894, %r9895, 28;
	mov.b64 	%rd11926, {%r9897, %r9896};
	shf.l.wrap.b32 	%r9898, %r9894, %r9895, 30;
	shf.l.wrap.b32 	%r9899, %r9895, %r9894, 30;
	mov.b64 	%rd11927, {%r9899, %r9898};
	xor.b64  	%rd11928, %rd11926, %rd11927;
	shf.l.wrap.b32 	%r9900, %r9894, %r9895, 25;
	shf.l.wrap.b32 	%r9901, %r9895, %r9894, 25;
	mov.b64 	%rd11929, {%r9901, %r9900};
	xor.b64  	%rd11930, %rd11928, %rd11929;
	xor.b64  	%rd11931, %rd11887, %rd11862;
	and.b64  	%rd11932, %rd11912, %rd11931;
	and.b64  	%rd11933, %rd11887, %rd11862;
	xor.b64  	%rd11934, %rd11932, %rd11933;
	add.s64 	%rd11935, %rd11930, %rd11934;
	add.s64 	%rd11936, %rd11925, %rd11837;
	add.s64 	%rd11937, %rd11935, %rd11925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9902,%dummy}, %rd11936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9903}, %rd11936;
	}
	shf.r.wrap.b32 	%r9904, %r9903, %r9902, 14;
	shf.r.wrap.b32 	%r9905, %r9902, %r9903, 14;
	mov.b64 	%rd11938, {%r9905, %r9904};
	shf.r.wrap.b32 	%r9906, %r9903, %r9902, 18;
	shf.r.wrap.b32 	%r9907, %r9902, %r9903, 18;
	mov.b64 	%rd11939, {%r9907, %r9906};
	xor.b64  	%rd11940, %rd11938, %rd11939;
	shf.l.wrap.b32 	%r9908, %r9902, %r9903, 23;
	shf.l.wrap.b32 	%r9909, %r9903, %r9902, 23;
	mov.b64 	%rd11941, {%r9909, %r9908};
	xor.b64  	%rd11942, %rd11940, %rd11941;
	and.b64  	%rd11943, %rd11936, %rd11911;
	not.b64 	%rd11944, %rd11936;
	and.b64  	%rd11945, %rd11886, %rd11944;
	or.b64  	%rd11946, %rd11943, %rd11945;
	add.s64 	%rd11947, %rd11946, %rd11861;
	add.s64 	%rd11948, %rd11947, %rd11942;
	add.s64 	%rd11949, %rd11948, %rd53;
	add.s64 	%rd11950, %rd11949, %rd10760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9910,%dummy}, %rd11937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9911}, %rd11937;
	}
	shf.r.wrap.b32 	%r9912, %r9911, %r9910, 28;
	shf.r.wrap.b32 	%r9913, %r9910, %r9911, 28;
	mov.b64 	%rd11951, {%r9913, %r9912};
	shf.l.wrap.b32 	%r9914, %r9910, %r9911, 30;
	shf.l.wrap.b32 	%r9915, %r9911, %r9910, 30;
	mov.b64 	%rd11952, {%r9915, %r9914};
	xor.b64  	%rd11953, %rd11951, %rd11952;
	shf.l.wrap.b32 	%r9916, %r9910, %r9911, 25;
	shf.l.wrap.b32 	%r9917, %r9911, %r9910, 25;
	mov.b64 	%rd11954, {%r9917, %r9916};
	xor.b64  	%rd11955, %rd11953, %rd11954;
	xor.b64  	%rd11956, %rd11912, %rd11887;
	and.b64  	%rd11957, %rd11937, %rd11956;
	and.b64  	%rd11958, %rd11912, %rd11887;
	xor.b64  	%rd11959, %rd11957, %rd11958;
	add.s64 	%rd11960, %rd11955, %rd11959;
	add.s64 	%rd11961, %rd11950, %rd11862;
	add.s64 	%rd11962, %rd11960, %rd11950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9918,%dummy}, %rd11961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9919}, %rd11961;
	}
	shf.r.wrap.b32 	%r9920, %r9919, %r9918, 14;
	shf.r.wrap.b32 	%r9921, %r9918, %r9919, 14;
	mov.b64 	%rd11963, {%r9921, %r9920};
	shf.r.wrap.b32 	%r9922, %r9919, %r9918, 18;
	shf.r.wrap.b32 	%r9923, %r9918, %r9919, 18;
	mov.b64 	%rd11964, {%r9923, %r9922};
	xor.b64  	%rd11965, %rd11963, %rd11964;
	shf.l.wrap.b32 	%r9924, %r9918, %r9919, 23;
	shf.l.wrap.b32 	%r9925, %r9919, %r9918, 23;
	mov.b64 	%rd11966, {%r9925, %r9924};
	xor.b64  	%rd11967, %rd11965, %rd11966;
	and.b64  	%rd11968, %rd11961, %rd11936;
	not.b64 	%rd11969, %rd11961;
	and.b64  	%rd11970, %rd11911, %rd11969;
	or.b64  	%rd11971, %rd11968, %rd11970;
	add.s64 	%rd11972, %rd11971, %rd11886;
	add.s64 	%rd11973, %rd11972, %rd11967;
	add.s64 	%rd11974, %rd11973, %rd54;
	add.s64 	%rd11975, %rd11974, %rd10780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9926,%dummy}, %rd11962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9927}, %rd11962;
	}
	shf.r.wrap.b32 	%r9928, %r9927, %r9926, 28;
	shf.r.wrap.b32 	%r9929, %r9926, %r9927, 28;
	mov.b64 	%rd11976, {%r9929, %r9928};
	shf.l.wrap.b32 	%r9930, %r9926, %r9927, 30;
	shf.l.wrap.b32 	%r9931, %r9927, %r9926, 30;
	mov.b64 	%rd11977, {%r9931, %r9930};
	xor.b64  	%rd11978, %rd11976, %rd11977;
	shf.l.wrap.b32 	%r9932, %r9926, %r9927, 25;
	shf.l.wrap.b32 	%r9933, %r9927, %r9926, 25;
	mov.b64 	%rd11979, {%r9933, %r9932};
	xor.b64  	%rd11980, %rd11978, %rd11979;
	xor.b64  	%rd11981, %rd11937, %rd11912;
	and.b64  	%rd11982, %rd11962, %rd11981;
	and.b64  	%rd11983, %rd11937, %rd11912;
	xor.b64  	%rd11984, %rd11982, %rd11983;
	add.s64 	%rd11985, %rd11980, %rd11984;
	add.s64 	%rd11986, %rd11975, %rd11887;
	add.s64 	%rd11987, %rd11985, %rd11975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9934,%dummy}, %rd11986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9935}, %rd11986;
	}
	shf.r.wrap.b32 	%r9936, %r9935, %r9934, 14;
	shf.r.wrap.b32 	%r9937, %r9934, %r9935, 14;
	mov.b64 	%rd11988, {%r9937, %r9936};
	shf.r.wrap.b32 	%r9938, %r9935, %r9934, 18;
	shf.r.wrap.b32 	%r9939, %r9934, %r9935, 18;
	mov.b64 	%rd11989, {%r9939, %r9938};
	xor.b64  	%rd11990, %rd11988, %rd11989;
	shf.l.wrap.b32 	%r9940, %r9934, %r9935, 23;
	shf.l.wrap.b32 	%r9941, %r9935, %r9934, 23;
	mov.b64 	%rd11991, {%r9941, %r9940};
	xor.b64  	%rd11992, %rd11990, %rd11991;
	and.b64  	%rd11993, %rd11986, %rd11961;
	not.b64 	%rd11994, %rd11986;
	and.b64  	%rd11995, %rd11936, %rd11994;
	or.b64  	%rd11996, %rd11993, %rd11995;
	add.s64 	%rd11997, %rd11996, %rd11911;
	add.s64 	%rd11998, %rd11997, %rd11992;
	add.s64 	%rd11999, %rd11998, %rd55;
	add.s64 	%rd12000, %rd11999, %rd10800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9942,%dummy}, %rd11987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9943}, %rd11987;
	}
	shf.r.wrap.b32 	%r9944, %r9943, %r9942, 28;
	shf.r.wrap.b32 	%r9945, %r9942, %r9943, 28;
	mov.b64 	%rd12001, {%r9945, %r9944};
	shf.l.wrap.b32 	%r9946, %r9942, %r9943, 30;
	shf.l.wrap.b32 	%r9947, %r9943, %r9942, 30;
	mov.b64 	%rd12002, {%r9947, %r9946};
	xor.b64  	%rd12003, %rd12001, %rd12002;
	shf.l.wrap.b32 	%r9948, %r9942, %r9943, 25;
	shf.l.wrap.b32 	%r9949, %r9943, %r9942, 25;
	mov.b64 	%rd12004, {%r9949, %r9948};
	xor.b64  	%rd12005, %rd12003, %rd12004;
	xor.b64  	%rd12006, %rd11962, %rd11937;
	and.b64  	%rd12007, %rd11987, %rd12006;
	and.b64  	%rd12008, %rd11962, %rd11937;
	xor.b64  	%rd12009, %rd12007, %rd12008;
	add.s64 	%rd12010, %rd12005, %rd12009;
	add.s64 	%rd12011, %rd12000, %rd11912;
	add.s64 	%rd12012, %rd12010, %rd12000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9950,%dummy}, %rd12011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9951}, %rd12011;
	}
	shf.r.wrap.b32 	%r9952, %r9951, %r9950, 14;
	shf.r.wrap.b32 	%r9953, %r9950, %r9951, 14;
	mov.b64 	%rd12013, {%r9953, %r9952};
	shf.r.wrap.b32 	%r9954, %r9951, %r9950, 18;
	shf.r.wrap.b32 	%r9955, %r9950, %r9951, 18;
	mov.b64 	%rd12014, {%r9955, %r9954};
	xor.b64  	%rd12015, %rd12013, %rd12014;
	shf.l.wrap.b32 	%r9956, %r9950, %r9951, 23;
	shf.l.wrap.b32 	%r9957, %r9951, %r9950, 23;
	mov.b64 	%rd12016, {%r9957, %r9956};
	xor.b64  	%rd12017, %rd12015, %rd12016;
	and.b64  	%rd12018, %rd12011, %rd11986;
	not.b64 	%rd12019, %rd12011;
	and.b64  	%rd12020, %rd11961, %rd12019;
	or.b64  	%rd12021, %rd12018, %rd12020;
	add.s64 	%rd12022, %rd12021, %rd11936;
	add.s64 	%rd12023, %rd12022, %rd12017;
	add.s64 	%rd12024, %rd12023, %rd56;
	add.s64 	%rd12025, %rd12024, %rd10813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9958,%dummy}, %rd12012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9959}, %rd12012;
	}
	shf.r.wrap.b32 	%r9960, %r9959, %r9958, 28;
	shf.r.wrap.b32 	%r9961, %r9958, %r9959, 28;
	mov.b64 	%rd12026, {%r9961, %r9960};
	shf.l.wrap.b32 	%r9962, %r9958, %r9959, 30;
	shf.l.wrap.b32 	%r9963, %r9959, %r9958, 30;
	mov.b64 	%rd12027, {%r9963, %r9962};
	xor.b64  	%rd12028, %rd12026, %rd12027;
	shf.l.wrap.b32 	%r9964, %r9958, %r9959, 25;
	shf.l.wrap.b32 	%r9965, %r9959, %r9958, 25;
	mov.b64 	%rd12029, {%r9965, %r9964};
	xor.b64  	%rd12030, %rd12028, %rd12029;
	xor.b64  	%rd12031, %rd11987, %rd11962;
	and.b64  	%rd12032, %rd12012, %rd12031;
	and.b64  	%rd12033, %rd11987, %rd11962;
	xor.b64  	%rd12034, %rd12032, %rd12033;
	add.s64 	%rd12035, %rd12030, %rd12034;
	add.s64 	%rd12036, %rd12025, %rd11937;
	add.s64 	%rd12037, %rd12035, %rd12025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9966,%dummy}, %rd12036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9967}, %rd12036;
	}
	shf.r.wrap.b32 	%r9968, %r9967, %r9966, 14;
	shf.r.wrap.b32 	%r9969, %r9966, %r9967, 14;
	mov.b64 	%rd12038, {%r9969, %r9968};
	shf.r.wrap.b32 	%r9970, %r9967, %r9966, 18;
	shf.r.wrap.b32 	%r9971, %r9966, %r9967, 18;
	mov.b64 	%rd12039, {%r9971, %r9970};
	xor.b64  	%rd12040, %rd12038, %rd12039;
	shf.l.wrap.b32 	%r9972, %r9966, %r9967, 23;
	shf.l.wrap.b32 	%r9973, %r9967, %r9966, 23;
	mov.b64 	%rd12041, {%r9973, %r9972};
	xor.b64  	%rd12042, %rd12040, %rd12041;
	and.b64  	%rd12043, %rd12036, %rd12011;
	not.b64 	%rd12044, %rd12036;
	and.b64  	%rd12045, %rd11986, %rd12044;
	or.b64  	%rd12046, %rd12043, %rd12045;
	add.s64 	%rd12047, %rd12046, %rd11961;
	add.s64 	%rd12048, %rd12047, %rd12042;
	add.s64 	%rd12049, %rd12048, %rd57;
	add.s64 	%rd12050, %rd12049, %rd10826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9974,%dummy}, %rd12037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9975}, %rd12037;
	}
	shf.r.wrap.b32 	%r9976, %r9975, %r9974, 28;
	shf.r.wrap.b32 	%r9977, %r9974, %r9975, 28;
	mov.b64 	%rd12051, {%r9977, %r9976};
	shf.l.wrap.b32 	%r9978, %r9974, %r9975, 30;
	shf.l.wrap.b32 	%r9979, %r9975, %r9974, 30;
	mov.b64 	%rd12052, {%r9979, %r9978};
	xor.b64  	%rd12053, %rd12051, %rd12052;
	shf.l.wrap.b32 	%r9980, %r9974, %r9975, 25;
	shf.l.wrap.b32 	%r9981, %r9975, %r9974, 25;
	mov.b64 	%rd12054, {%r9981, %r9980};
	xor.b64  	%rd12055, %rd12053, %rd12054;
	xor.b64  	%rd12056, %rd12012, %rd11987;
	and.b64  	%rd12057, %rd12037, %rd12056;
	and.b64  	%rd12058, %rd12012, %rd11987;
	xor.b64  	%rd12059, %rd12057, %rd12058;
	add.s64 	%rd12060, %rd12055, %rd12059;
	add.s64 	%rd12061, %rd12050, %rd11962;
	add.s64 	%rd12062, %rd12060, %rd12050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9982,%dummy}, %rd12061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9983}, %rd12061;
	}
	shf.r.wrap.b32 	%r9984, %r9983, %r9982, 14;
	shf.r.wrap.b32 	%r9985, %r9982, %r9983, 14;
	mov.b64 	%rd12063, {%r9985, %r9984};
	shf.r.wrap.b32 	%r9986, %r9983, %r9982, 18;
	shf.r.wrap.b32 	%r9987, %r9982, %r9983, 18;
	mov.b64 	%rd12064, {%r9987, %r9986};
	xor.b64  	%rd12065, %rd12063, %rd12064;
	shf.l.wrap.b32 	%r9988, %r9982, %r9983, 23;
	shf.l.wrap.b32 	%r9989, %r9983, %r9982, 23;
	mov.b64 	%rd12066, {%r9989, %r9988};
	xor.b64  	%rd12067, %rd12065, %rd12066;
	and.b64  	%rd12068, %rd12061, %rd12036;
	not.b64 	%rd12069, %rd12061;
	and.b64  	%rd12070, %rd12011, %rd12069;
	or.b64  	%rd12071, %rd12068, %rd12070;
	add.s64 	%rd12072, %rd12071, %rd11986;
	add.s64 	%rd12073, %rd12072, %rd12067;
	add.s64 	%rd12074, %rd12073, %rd58;
	add.s64 	%rd12075, %rd12074, %rd10839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9990,%dummy}, %rd12062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9991}, %rd12062;
	}
	shf.r.wrap.b32 	%r9992, %r9991, %r9990, 28;
	shf.r.wrap.b32 	%r9993, %r9990, %r9991, 28;
	mov.b64 	%rd12076, {%r9993, %r9992};
	shf.l.wrap.b32 	%r9994, %r9990, %r9991, 30;
	shf.l.wrap.b32 	%r9995, %r9991, %r9990, 30;
	mov.b64 	%rd12077, {%r9995, %r9994};
	xor.b64  	%rd12078, %rd12076, %rd12077;
	shf.l.wrap.b32 	%r9996, %r9990, %r9991, 25;
	shf.l.wrap.b32 	%r9997, %r9991, %r9990, 25;
	mov.b64 	%rd12079, {%r9997, %r9996};
	xor.b64  	%rd12080, %rd12078, %rd12079;
	xor.b64  	%rd12081, %rd12037, %rd12012;
	and.b64  	%rd12082, %rd12062, %rd12081;
	and.b64  	%rd12083, %rd12037, %rd12012;
	xor.b64  	%rd12084, %rd12082, %rd12083;
	add.s64 	%rd12085, %rd12080, %rd12084;
	add.s64 	%rd12086, %rd12075, %rd11987;
	add.s64 	%rd12087, %rd12085, %rd12075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9998,%dummy}, %rd12086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9999}, %rd12086;
	}
	shf.r.wrap.b32 	%r10000, %r9999, %r9998, 14;
	shf.r.wrap.b32 	%r10001, %r9998, %r9999, 14;
	mov.b64 	%rd12088, {%r10001, %r10000};
	shf.r.wrap.b32 	%r10002, %r9999, %r9998, 18;
	shf.r.wrap.b32 	%r10003, %r9998, %r9999, 18;
	mov.b64 	%rd12089, {%r10003, %r10002};
	xor.b64  	%rd12090, %rd12088, %rd12089;
	shf.l.wrap.b32 	%r10004, %r9998, %r9999, 23;
	shf.l.wrap.b32 	%r10005, %r9999, %r9998, 23;
	mov.b64 	%rd12091, {%r10005, %r10004};
	xor.b64  	%rd12092, %rd12090, %rd12091;
	and.b64  	%rd12093, %rd12086, %rd12061;
	not.b64 	%rd12094, %rd12086;
	and.b64  	%rd12095, %rd12036, %rd12094;
	or.b64  	%rd12096, %rd12093, %rd12095;
	add.s64 	%rd12097, %rd12096, %rd12011;
	add.s64 	%rd12098, %rd12097, %rd12092;
	add.s64 	%rd12099, %rd12098, %rd59;
	add.s64 	%rd12100, %rd12099, %rd10852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10006,%dummy}, %rd12087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10007}, %rd12087;
	}
	shf.r.wrap.b32 	%r10008, %r10007, %r10006, 28;
	shf.r.wrap.b32 	%r10009, %r10006, %r10007, 28;
	mov.b64 	%rd12101, {%r10009, %r10008};
	shf.l.wrap.b32 	%r10010, %r10006, %r10007, 30;
	shf.l.wrap.b32 	%r10011, %r10007, %r10006, 30;
	mov.b64 	%rd12102, {%r10011, %r10010};
	xor.b64  	%rd12103, %rd12101, %rd12102;
	shf.l.wrap.b32 	%r10012, %r10006, %r10007, 25;
	shf.l.wrap.b32 	%r10013, %r10007, %r10006, 25;
	mov.b64 	%rd12104, {%r10013, %r10012};
	xor.b64  	%rd12105, %rd12103, %rd12104;
	xor.b64  	%rd12106, %rd12062, %rd12037;
	and.b64  	%rd12107, %rd12087, %rd12106;
	and.b64  	%rd12108, %rd12062, %rd12037;
	xor.b64  	%rd12109, %rd12107, %rd12108;
	add.s64 	%rd12110, %rd12105, %rd12109;
	add.s64 	%rd12111, %rd12100, %rd12012;
	add.s64 	%rd12112, %rd12110, %rd12100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10014,%dummy}, %rd12111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10015}, %rd12111;
	}
	shf.r.wrap.b32 	%r10016, %r10015, %r10014, 14;
	shf.r.wrap.b32 	%r10017, %r10014, %r10015, 14;
	mov.b64 	%rd12113, {%r10017, %r10016};
	shf.r.wrap.b32 	%r10018, %r10015, %r10014, 18;
	shf.r.wrap.b32 	%r10019, %r10014, %r10015, 18;
	mov.b64 	%rd12114, {%r10019, %r10018};
	xor.b64  	%rd12115, %rd12113, %rd12114;
	shf.l.wrap.b32 	%r10020, %r10014, %r10015, 23;
	shf.l.wrap.b32 	%r10021, %r10015, %r10014, 23;
	mov.b64 	%rd12116, {%r10021, %r10020};
	xor.b64  	%rd12117, %rd12115, %rd12116;
	and.b64  	%rd12118, %rd12111, %rd12086;
	not.b64 	%rd12119, %rd12111;
	and.b64  	%rd12120, %rd12061, %rd12119;
	or.b64  	%rd12121, %rd12118, %rd12120;
	add.s64 	%rd12122, %rd12121, %rd12036;
	add.s64 	%rd12123, %rd12122, %rd12117;
	add.s64 	%rd12124, %rd12123, %rd60;
	add.s64 	%rd12125, %rd12124, %rd10865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10022,%dummy}, %rd12112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10023}, %rd12112;
	}
	shf.r.wrap.b32 	%r10024, %r10023, %r10022, 28;
	shf.r.wrap.b32 	%r10025, %r10022, %r10023, 28;
	mov.b64 	%rd12126, {%r10025, %r10024};
	shf.l.wrap.b32 	%r10026, %r10022, %r10023, 30;
	shf.l.wrap.b32 	%r10027, %r10023, %r10022, 30;
	mov.b64 	%rd12127, {%r10027, %r10026};
	xor.b64  	%rd12128, %rd12126, %rd12127;
	shf.l.wrap.b32 	%r10028, %r10022, %r10023, 25;
	shf.l.wrap.b32 	%r10029, %r10023, %r10022, 25;
	mov.b64 	%rd12129, {%r10029, %r10028};
	xor.b64  	%rd12130, %rd12128, %rd12129;
	xor.b64  	%rd12131, %rd12087, %rd12062;
	and.b64  	%rd12132, %rd12112, %rd12131;
	and.b64  	%rd12133, %rd12087, %rd12062;
	xor.b64  	%rd12134, %rd12132, %rd12133;
	add.s64 	%rd12135, %rd12130, %rd12134;
	add.s64 	%rd12136, %rd12125, %rd12037;
	add.s64 	%rd12137, %rd12135, %rd12125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10030,%dummy}, %rd12136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10031}, %rd12136;
	}
	shf.r.wrap.b32 	%r10032, %r10031, %r10030, 14;
	shf.r.wrap.b32 	%r10033, %r10030, %r10031, 14;
	mov.b64 	%rd12138, {%r10033, %r10032};
	shf.r.wrap.b32 	%r10034, %r10031, %r10030, 18;
	shf.r.wrap.b32 	%r10035, %r10030, %r10031, 18;
	mov.b64 	%rd12139, {%r10035, %r10034};
	xor.b64  	%rd12140, %rd12138, %rd12139;
	shf.l.wrap.b32 	%r10036, %r10030, %r10031, 23;
	shf.l.wrap.b32 	%r10037, %r10031, %r10030, 23;
	mov.b64 	%rd12141, {%r10037, %r10036};
	xor.b64  	%rd12142, %rd12140, %rd12141;
	and.b64  	%rd12143, %rd12136, %rd12111;
	not.b64 	%rd12144, %rd12136;
	and.b64  	%rd12145, %rd12086, %rd12144;
	or.b64  	%rd12146, %rd12143, %rd12145;
	add.s64 	%rd12147, %rd12146, %rd12061;
	add.s64 	%rd12148, %rd12147, %rd12142;
	add.s64 	%rd12149, %rd12148, %rd61;
	add.s64 	%rd12150, %rd12149, %rd10878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10038,%dummy}, %rd12137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10039}, %rd12137;
	}
	shf.r.wrap.b32 	%r10040, %r10039, %r10038, 28;
	shf.r.wrap.b32 	%r10041, %r10038, %r10039, 28;
	mov.b64 	%rd12151, {%r10041, %r10040};
	shf.l.wrap.b32 	%r10042, %r10038, %r10039, 30;
	shf.l.wrap.b32 	%r10043, %r10039, %r10038, 30;
	mov.b64 	%rd12152, {%r10043, %r10042};
	xor.b64  	%rd12153, %rd12151, %rd12152;
	shf.l.wrap.b32 	%r10044, %r10038, %r10039, 25;
	shf.l.wrap.b32 	%r10045, %r10039, %r10038, 25;
	mov.b64 	%rd12154, {%r10045, %r10044};
	xor.b64  	%rd12155, %rd12153, %rd12154;
	xor.b64  	%rd12156, %rd12112, %rd12087;
	and.b64  	%rd12157, %rd12137, %rd12156;
	and.b64  	%rd12158, %rd12112, %rd12087;
	xor.b64  	%rd12159, %rd12157, %rd12158;
	add.s64 	%rd12160, %rd12155, %rd12159;
	add.s64 	%rd12161, %rd12150, %rd12062;
	add.s64 	%rd12162, %rd12160, %rd12150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10046,%dummy}, %rd12161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10047}, %rd12161;
	}
	shf.r.wrap.b32 	%r10048, %r10047, %r10046, 14;
	shf.r.wrap.b32 	%r10049, %r10046, %r10047, 14;
	mov.b64 	%rd12163, {%r10049, %r10048};
	shf.r.wrap.b32 	%r10050, %r10047, %r10046, 18;
	shf.r.wrap.b32 	%r10051, %r10046, %r10047, 18;
	mov.b64 	%rd12164, {%r10051, %r10050};
	xor.b64  	%rd12165, %rd12163, %rd12164;
	shf.l.wrap.b32 	%r10052, %r10046, %r10047, 23;
	shf.l.wrap.b32 	%r10053, %r10047, %r10046, 23;
	mov.b64 	%rd12166, {%r10053, %r10052};
	xor.b64  	%rd12167, %rd12165, %rd12166;
	and.b64  	%rd12168, %rd12161, %rd12136;
	not.b64 	%rd12169, %rd12161;
	and.b64  	%rd12170, %rd12111, %rd12169;
	or.b64  	%rd12171, %rd12168, %rd12170;
	add.s64 	%rd12172, %rd12171, %rd12086;
	add.s64 	%rd12173, %rd12172, %rd12167;
	add.s64 	%rd12174, %rd12173, %rd62;
	add.s64 	%rd12175, %rd12174, %rd10891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10054,%dummy}, %rd12162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10055}, %rd12162;
	}
	shf.r.wrap.b32 	%r10056, %r10055, %r10054, 28;
	shf.r.wrap.b32 	%r10057, %r10054, %r10055, 28;
	mov.b64 	%rd12176, {%r10057, %r10056};
	shf.l.wrap.b32 	%r10058, %r10054, %r10055, 30;
	shf.l.wrap.b32 	%r10059, %r10055, %r10054, 30;
	mov.b64 	%rd12177, {%r10059, %r10058};
	xor.b64  	%rd12178, %rd12176, %rd12177;
	shf.l.wrap.b32 	%r10060, %r10054, %r10055, 25;
	shf.l.wrap.b32 	%r10061, %r10055, %r10054, 25;
	mov.b64 	%rd12179, {%r10061, %r10060};
	xor.b64  	%rd12180, %rd12178, %rd12179;
	xor.b64  	%rd12181, %rd12137, %rd12112;
	and.b64  	%rd12182, %rd12162, %rd12181;
	and.b64  	%rd12183, %rd12137, %rd12112;
	xor.b64  	%rd12184, %rd12182, %rd12183;
	add.s64 	%rd12185, %rd12180, %rd12184;
	add.s64 	%rd12186, %rd12175, %rd12087;
	add.s64 	%rd12187, %rd12185, %rd12175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10062,%dummy}, %rd12186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10063}, %rd12186;
	}
	shf.r.wrap.b32 	%r10064, %r10063, %r10062, 14;
	shf.r.wrap.b32 	%r10065, %r10062, %r10063, 14;
	mov.b64 	%rd12188, {%r10065, %r10064};
	shf.r.wrap.b32 	%r10066, %r10063, %r10062, 18;
	shf.r.wrap.b32 	%r10067, %r10062, %r10063, 18;
	mov.b64 	%rd12189, {%r10067, %r10066};
	xor.b64  	%rd12190, %rd12188, %rd12189;
	shf.l.wrap.b32 	%r10068, %r10062, %r10063, 23;
	shf.l.wrap.b32 	%r10069, %r10063, %r10062, 23;
	mov.b64 	%rd12191, {%r10069, %r10068};
	xor.b64  	%rd12192, %rd12190, %rd12191;
	and.b64  	%rd12193, %rd12186, %rd12161;
	not.b64 	%rd12194, %rd12186;
	and.b64  	%rd12195, %rd12136, %rd12194;
	or.b64  	%rd12196, %rd12193, %rd12195;
	add.s64 	%rd12197, %rd12196, %rd12111;
	add.s64 	%rd12198, %rd12197, %rd12192;
	add.s64 	%rd12199, %rd12198, %rd63;
	add.s64 	%rd12200, %rd12199, %rd10904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10070,%dummy}, %rd12187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10071}, %rd12187;
	}
	shf.r.wrap.b32 	%r10072, %r10071, %r10070, 28;
	shf.r.wrap.b32 	%r10073, %r10070, %r10071, 28;
	mov.b64 	%rd12201, {%r10073, %r10072};
	shf.l.wrap.b32 	%r10074, %r10070, %r10071, 30;
	shf.l.wrap.b32 	%r10075, %r10071, %r10070, 30;
	mov.b64 	%rd12202, {%r10075, %r10074};
	xor.b64  	%rd12203, %rd12201, %rd12202;
	shf.l.wrap.b32 	%r10076, %r10070, %r10071, 25;
	shf.l.wrap.b32 	%r10077, %r10071, %r10070, 25;
	mov.b64 	%rd12204, {%r10077, %r10076};
	xor.b64  	%rd12205, %rd12203, %rd12204;
	xor.b64  	%rd12206, %rd12162, %rd12137;
	and.b64  	%rd12207, %rd12187, %rd12206;
	and.b64  	%rd12208, %rd12162, %rd12137;
	xor.b64  	%rd12209, %rd12207, %rd12208;
	add.s64 	%rd12210, %rd12205, %rd12209;
	add.s64 	%rd12211, %rd12200, %rd12112;
	add.s64 	%rd12212, %rd12210, %rd12200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10078,%dummy}, %rd12211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10079}, %rd12211;
	}
	shf.r.wrap.b32 	%r10080, %r10079, %r10078, 14;
	shf.r.wrap.b32 	%r10081, %r10078, %r10079, 14;
	mov.b64 	%rd12213, {%r10081, %r10080};
	shf.r.wrap.b32 	%r10082, %r10079, %r10078, 18;
	shf.r.wrap.b32 	%r10083, %r10078, %r10079, 18;
	mov.b64 	%rd12214, {%r10083, %r10082};
	xor.b64  	%rd12215, %rd12213, %rd12214;
	shf.l.wrap.b32 	%r10084, %r10078, %r10079, 23;
	shf.l.wrap.b32 	%r10085, %r10079, %r10078, 23;
	mov.b64 	%rd12216, {%r10085, %r10084};
	xor.b64  	%rd12217, %rd12215, %rd12216;
	and.b64  	%rd12218, %rd12211, %rd12186;
	not.b64 	%rd12219, %rd12211;
	and.b64  	%rd12220, %rd12161, %rd12219;
	or.b64  	%rd12221, %rd12218, %rd12220;
	add.s64 	%rd12222, %rd12221, %rd12136;
	add.s64 	%rd12223, %rd12222, %rd12217;
	add.s64 	%rd12224, %rd12223, %rd64;
	add.s64 	%rd12225, %rd12224, %rd10917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10086,%dummy}, %rd12212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10087}, %rd12212;
	}
	shf.r.wrap.b32 	%r10088, %r10087, %r10086, 28;
	shf.r.wrap.b32 	%r10089, %r10086, %r10087, 28;
	mov.b64 	%rd12226, {%r10089, %r10088};
	shf.l.wrap.b32 	%r10090, %r10086, %r10087, 30;
	shf.l.wrap.b32 	%r10091, %r10087, %r10086, 30;
	mov.b64 	%rd12227, {%r10091, %r10090};
	xor.b64  	%rd12228, %rd12226, %rd12227;
	shf.l.wrap.b32 	%r10092, %r10086, %r10087, 25;
	shf.l.wrap.b32 	%r10093, %r10087, %r10086, 25;
	mov.b64 	%rd12229, {%r10093, %r10092};
	xor.b64  	%rd12230, %rd12228, %rd12229;
	xor.b64  	%rd12231, %rd12187, %rd12162;
	and.b64  	%rd12232, %rd12212, %rd12231;
	and.b64  	%rd12233, %rd12187, %rd12162;
	xor.b64  	%rd12234, %rd12232, %rd12233;
	add.s64 	%rd12235, %rd12230, %rd12234;
	add.s64 	%rd12236, %rd12225, %rd12137;
	add.s64 	%rd12237, %rd12235, %rd12225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10094,%dummy}, %rd12236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10095}, %rd12236;
	}
	shf.r.wrap.b32 	%r10096, %r10095, %r10094, 14;
	shf.r.wrap.b32 	%r10097, %r10094, %r10095, 14;
	mov.b64 	%rd12238, {%r10097, %r10096};
	shf.r.wrap.b32 	%r10098, %r10095, %r10094, 18;
	shf.r.wrap.b32 	%r10099, %r10094, %r10095, 18;
	mov.b64 	%rd12239, {%r10099, %r10098};
	xor.b64  	%rd12240, %rd12238, %rd12239;
	shf.l.wrap.b32 	%r10100, %r10094, %r10095, 23;
	shf.l.wrap.b32 	%r10101, %r10095, %r10094, 23;
	mov.b64 	%rd12241, {%r10101, %r10100};
	xor.b64  	%rd12242, %rd12240, %rd12241;
	and.b64  	%rd12243, %rd12236, %rd12211;
	not.b64 	%rd12244, %rd12236;
	and.b64  	%rd12245, %rd12186, %rd12244;
	or.b64  	%rd12246, %rd12243, %rd12245;
	add.s64 	%rd12247, %rd12246, %rd12161;
	add.s64 	%rd12248, %rd12247, %rd12242;
	add.s64 	%rd12249, %rd12248, %rd65;
	add.s64 	%rd12250, %rd12249, %rd10930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10102,%dummy}, %rd12237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10103}, %rd12237;
	}
	shf.r.wrap.b32 	%r10104, %r10103, %r10102, 28;
	shf.r.wrap.b32 	%r10105, %r10102, %r10103, 28;
	mov.b64 	%rd12251, {%r10105, %r10104};
	shf.l.wrap.b32 	%r10106, %r10102, %r10103, 30;
	shf.l.wrap.b32 	%r10107, %r10103, %r10102, 30;
	mov.b64 	%rd12252, {%r10107, %r10106};
	xor.b64  	%rd12253, %rd12251, %rd12252;
	shf.l.wrap.b32 	%r10108, %r10102, %r10103, 25;
	shf.l.wrap.b32 	%r10109, %r10103, %r10102, 25;
	mov.b64 	%rd12254, {%r10109, %r10108};
	xor.b64  	%rd12255, %rd12253, %rd12254;
	xor.b64  	%rd12256, %rd12212, %rd12187;
	and.b64  	%rd12257, %rd12237, %rd12256;
	and.b64  	%rd12258, %rd12212, %rd12187;
	xor.b64  	%rd12259, %rd12257, %rd12258;
	add.s64 	%rd12260, %rd12255, %rd12259;
	add.s64 	%rd12261, %rd12250, %rd12162;
	add.s64 	%rd12262, %rd12260, %rd12250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10110,%dummy}, %rd12261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10111}, %rd12261;
	}
	shf.r.wrap.b32 	%r10112, %r10111, %r10110, 14;
	shf.r.wrap.b32 	%r10113, %r10110, %r10111, 14;
	mov.b64 	%rd12263, {%r10113, %r10112};
	shf.r.wrap.b32 	%r10114, %r10111, %r10110, 18;
	shf.r.wrap.b32 	%r10115, %r10110, %r10111, 18;
	mov.b64 	%rd12264, {%r10115, %r10114};
	xor.b64  	%rd12265, %rd12263, %rd12264;
	shf.l.wrap.b32 	%r10116, %r10110, %r10111, 23;
	shf.l.wrap.b32 	%r10117, %r10111, %r10110, 23;
	mov.b64 	%rd12266, {%r10117, %r10116};
	xor.b64  	%rd12267, %rd12265, %rd12266;
	and.b64  	%rd12268, %rd12261, %rd12236;
	not.b64 	%rd12269, %rd12261;
	and.b64  	%rd12270, %rd12211, %rd12269;
	or.b64  	%rd12271, %rd12268, %rd12270;
	add.s64 	%rd12272, %rd12271, %rd12186;
	add.s64 	%rd12273, %rd12272, %rd12267;
	add.s64 	%rd12274, %rd12273, %rd66;
	add.s64 	%rd12275, %rd12274, %rd10943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10118,%dummy}, %rd12262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10119}, %rd12262;
	}
	shf.r.wrap.b32 	%r10120, %r10119, %r10118, 28;
	shf.r.wrap.b32 	%r10121, %r10118, %r10119, 28;
	mov.b64 	%rd12276, {%r10121, %r10120};
	shf.l.wrap.b32 	%r10122, %r10118, %r10119, 30;
	shf.l.wrap.b32 	%r10123, %r10119, %r10118, 30;
	mov.b64 	%rd12277, {%r10123, %r10122};
	xor.b64  	%rd12278, %rd12276, %rd12277;
	shf.l.wrap.b32 	%r10124, %r10118, %r10119, 25;
	shf.l.wrap.b32 	%r10125, %r10119, %r10118, 25;
	mov.b64 	%rd12279, {%r10125, %r10124};
	xor.b64  	%rd12280, %rd12278, %rd12279;
	xor.b64  	%rd12281, %rd12237, %rd12212;
	and.b64  	%rd12282, %rd12262, %rd12281;
	and.b64  	%rd12283, %rd12237, %rd12212;
	xor.b64  	%rd12284, %rd12282, %rd12283;
	add.s64 	%rd12285, %rd12280, %rd12284;
	add.s64 	%rd12286, %rd12275, %rd12187;
	add.s64 	%rd12287, %rd12285, %rd12275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10126,%dummy}, %rd12286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10127}, %rd12286;
	}
	shf.r.wrap.b32 	%r10128, %r10127, %r10126, 14;
	shf.r.wrap.b32 	%r10129, %r10126, %r10127, 14;
	mov.b64 	%rd12288, {%r10129, %r10128};
	shf.r.wrap.b32 	%r10130, %r10127, %r10126, 18;
	shf.r.wrap.b32 	%r10131, %r10126, %r10127, 18;
	mov.b64 	%rd12289, {%r10131, %r10130};
	xor.b64  	%rd12290, %rd12288, %rd12289;
	shf.l.wrap.b32 	%r10132, %r10126, %r10127, 23;
	shf.l.wrap.b32 	%r10133, %r10127, %r10126, 23;
	mov.b64 	%rd12291, {%r10133, %r10132};
	xor.b64  	%rd12292, %rd12290, %rd12291;
	and.b64  	%rd12293, %rd12286, %rd12261;
	not.b64 	%rd12294, %rd12286;
	and.b64  	%rd12295, %rd12236, %rd12294;
	or.b64  	%rd12296, %rd12293, %rd12295;
	add.s64 	%rd12297, %rd12296, %rd12211;
	add.s64 	%rd12298, %rd12297, %rd12292;
	add.s64 	%rd12299, %rd12298, %rd67;
	add.s64 	%rd12300, %rd12299, %rd10956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10134,%dummy}, %rd12287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10135}, %rd12287;
	}
	shf.r.wrap.b32 	%r10136, %r10135, %r10134, 28;
	shf.r.wrap.b32 	%r10137, %r10134, %r10135, 28;
	mov.b64 	%rd12301, {%r10137, %r10136};
	shf.l.wrap.b32 	%r10138, %r10134, %r10135, 30;
	shf.l.wrap.b32 	%r10139, %r10135, %r10134, 30;
	mov.b64 	%rd12302, {%r10139, %r10138};
	xor.b64  	%rd12303, %rd12301, %rd12302;
	shf.l.wrap.b32 	%r10140, %r10134, %r10135, 25;
	shf.l.wrap.b32 	%r10141, %r10135, %r10134, 25;
	mov.b64 	%rd12304, {%r10141, %r10140};
	xor.b64  	%rd12305, %rd12303, %rd12304;
	xor.b64  	%rd12306, %rd12262, %rd12237;
	and.b64  	%rd12307, %rd12287, %rd12306;
	and.b64  	%rd12308, %rd12262, %rd12237;
	xor.b64  	%rd12309, %rd12307, %rd12308;
	add.s64 	%rd12310, %rd12305, %rd12309;
	add.s64 	%rd12311, %rd12300, %rd12212;
	add.s64 	%rd12312, %rd12310, %rd12300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10142,%dummy}, %rd12311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10143}, %rd12311;
	}
	shf.r.wrap.b32 	%r10144, %r10143, %r10142, 14;
	shf.r.wrap.b32 	%r10145, %r10142, %r10143, 14;
	mov.b64 	%rd12313, {%r10145, %r10144};
	shf.r.wrap.b32 	%r10146, %r10143, %r10142, 18;
	shf.r.wrap.b32 	%r10147, %r10142, %r10143, 18;
	mov.b64 	%rd12314, {%r10147, %r10146};
	xor.b64  	%rd12315, %rd12313, %rd12314;
	shf.l.wrap.b32 	%r10148, %r10142, %r10143, 23;
	shf.l.wrap.b32 	%r10149, %r10143, %r10142, 23;
	mov.b64 	%rd12316, {%r10149, %r10148};
	xor.b64  	%rd12317, %rd12315, %rd12316;
	and.b64  	%rd12318, %rd12311, %rd12286;
	not.b64 	%rd12319, %rd12311;
	and.b64  	%rd12320, %rd12261, %rd12319;
	or.b64  	%rd12321, %rd12318, %rd12320;
	add.s64 	%rd12322, %rd12321, %rd12236;
	add.s64 	%rd12323, %rd12322, %rd12317;
	add.s64 	%rd12324, %rd12323, %rd68;
	add.s64 	%rd12325, %rd12324, %rd10969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10150,%dummy}, %rd12312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10151}, %rd12312;
	}
	shf.r.wrap.b32 	%r10152, %r10151, %r10150, 28;
	shf.r.wrap.b32 	%r10153, %r10150, %r10151, 28;
	mov.b64 	%rd12326, {%r10153, %r10152};
	shf.l.wrap.b32 	%r10154, %r10150, %r10151, 30;
	shf.l.wrap.b32 	%r10155, %r10151, %r10150, 30;
	mov.b64 	%rd12327, {%r10155, %r10154};
	xor.b64  	%rd12328, %rd12326, %rd12327;
	shf.l.wrap.b32 	%r10156, %r10150, %r10151, 25;
	shf.l.wrap.b32 	%r10157, %r10151, %r10150, 25;
	mov.b64 	%rd12329, {%r10157, %r10156};
	xor.b64  	%rd12330, %rd12328, %rd12329;
	xor.b64  	%rd12331, %rd12287, %rd12262;
	and.b64  	%rd12332, %rd12312, %rd12331;
	and.b64  	%rd12333, %rd12287, %rd12262;
	xor.b64  	%rd12334, %rd12332, %rd12333;
	add.s64 	%rd12335, %rd12330, %rd12334;
	add.s64 	%rd12336, %rd12325, %rd12237;
	add.s64 	%rd12337, %rd12335, %rd12325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10158,%dummy}, %rd12336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10159}, %rd12336;
	}
	shf.r.wrap.b32 	%r10160, %r10159, %r10158, 14;
	shf.r.wrap.b32 	%r10161, %r10158, %r10159, 14;
	mov.b64 	%rd12338, {%r10161, %r10160};
	shf.r.wrap.b32 	%r10162, %r10159, %r10158, 18;
	shf.r.wrap.b32 	%r10163, %r10158, %r10159, 18;
	mov.b64 	%rd12339, {%r10163, %r10162};
	xor.b64  	%rd12340, %rd12338, %rd12339;
	shf.l.wrap.b32 	%r10164, %r10158, %r10159, 23;
	shf.l.wrap.b32 	%r10165, %r10159, %r10158, 23;
	mov.b64 	%rd12341, {%r10165, %r10164};
	xor.b64  	%rd12342, %rd12340, %rd12341;
	and.b64  	%rd12343, %rd12336, %rd12311;
	not.b64 	%rd12344, %rd12336;
	and.b64  	%rd12345, %rd12286, %rd12344;
	or.b64  	%rd12346, %rd12343, %rd12345;
	add.s64 	%rd12347, %rd12346, %rd12261;
	add.s64 	%rd12348, %rd12347, %rd12342;
	add.s64 	%rd12349, %rd12348, %rd69;
	add.s64 	%rd12350, %rd12349, %rd10982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10166,%dummy}, %rd12337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10167}, %rd12337;
	}
	shf.r.wrap.b32 	%r10168, %r10167, %r10166, 28;
	shf.r.wrap.b32 	%r10169, %r10166, %r10167, 28;
	mov.b64 	%rd12351, {%r10169, %r10168};
	shf.l.wrap.b32 	%r10170, %r10166, %r10167, 30;
	shf.l.wrap.b32 	%r10171, %r10167, %r10166, 30;
	mov.b64 	%rd12352, {%r10171, %r10170};
	xor.b64  	%rd12353, %rd12351, %rd12352;
	shf.l.wrap.b32 	%r10172, %r10166, %r10167, 25;
	shf.l.wrap.b32 	%r10173, %r10167, %r10166, 25;
	mov.b64 	%rd12354, {%r10173, %r10172};
	xor.b64  	%rd12355, %rd12353, %rd12354;
	xor.b64  	%rd12356, %rd12312, %rd12287;
	and.b64  	%rd12357, %rd12337, %rd12356;
	and.b64  	%rd12358, %rd12312, %rd12287;
	xor.b64  	%rd12359, %rd12357, %rd12358;
	add.s64 	%rd12360, %rd12355, %rd12359;
	add.s64 	%rd12361, %rd12350, %rd12262;
	add.s64 	%rd12362, %rd12360, %rd12350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10174,%dummy}, %rd12361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10175}, %rd12361;
	}
	shf.r.wrap.b32 	%r10176, %r10175, %r10174, 14;
	shf.r.wrap.b32 	%r10177, %r10174, %r10175, 14;
	mov.b64 	%rd12363, {%r10177, %r10176};
	shf.r.wrap.b32 	%r10178, %r10175, %r10174, 18;
	shf.r.wrap.b32 	%r10179, %r10174, %r10175, 18;
	mov.b64 	%rd12364, {%r10179, %r10178};
	xor.b64  	%rd12365, %rd12363, %rd12364;
	shf.l.wrap.b32 	%r10180, %r10174, %r10175, 23;
	shf.l.wrap.b32 	%r10181, %r10175, %r10174, 23;
	mov.b64 	%rd12366, {%r10181, %r10180};
	xor.b64  	%rd12367, %rd12365, %rd12366;
	and.b64  	%rd12368, %rd12361, %rd12336;
	not.b64 	%rd12369, %rd12361;
	and.b64  	%rd12370, %rd12311, %rd12369;
	or.b64  	%rd12371, %rd12368, %rd12370;
	add.s64 	%rd12372, %rd12371, %rd12286;
	add.s64 	%rd12373, %rd12372, %rd12367;
	add.s64 	%rd12374, %rd12373, %rd70;
	add.s64 	%rd12375, %rd12374, %rd10995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10182,%dummy}, %rd12362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10183}, %rd12362;
	}
	shf.r.wrap.b32 	%r10184, %r10183, %r10182, 28;
	shf.r.wrap.b32 	%r10185, %r10182, %r10183, 28;
	mov.b64 	%rd12376, {%r10185, %r10184};
	shf.l.wrap.b32 	%r10186, %r10182, %r10183, 30;
	shf.l.wrap.b32 	%r10187, %r10183, %r10182, 30;
	mov.b64 	%rd12377, {%r10187, %r10186};
	xor.b64  	%rd12378, %rd12376, %rd12377;
	shf.l.wrap.b32 	%r10188, %r10182, %r10183, 25;
	shf.l.wrap.b32 	%r10189, %r10183, %r10182, 25;
	mov.b64 	%rd12379, {%r10189, %r10188};
	xor.b64  	%rd12380, %rd12378, %rd12379;
	xor.b64  	%rd12381, %rd12337, %rd12312;
	and.b64  	%rd12382, %rd12362, %rd12381;
	and.b64  	%rd12383, %rd12337, %rd12312;
	xor.b64  	%rd12384, %rd12382, %rd12383;
	add.s64 	%rd12385, %rd12380, %rd12384;
	add.s64 	%rd12386, %rd12375, %rd12287;
	add.s64 	%rd12387, %rd12385, %rd12375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10190,%dummy}, %rd12386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10191}, %rd12386;
	}
	shf.r.wrap.b32 	%r10192, %r10191, %r10190, 14;
	shf.r.wrap.b32 	%r10193, %r10190, %r10191, 14;
	mov.b64 	%rd12388, {%r10193, %r10192};
	shf.r.wrap.b32 	%r10194, %r10191, %r10190, 18;
	shf.r.wrap.b32 	%r10195, %r10190, %r10191, 18;
	mov.b64 	%rd12389, {%r10195, %r10194};
	xor.b64  	%rd12390, %rd12388, %rd12389;
	shf.l.wrap.b32 	%r10196, %r10190, %r10191, 23;
	shf.l.wrap.b32 	%r10197, %r10191, %r10190, 23;
	mov.b64 	%rd12391, {%r10197, %r10196};
	xor.b64  	%rd12392, %rd12390, %rd12391;
	and.b64  	%rd12393, %rd12386, %rd12361;
	not.b64 	%rd12394, %rd12386;
	and.b64  	%rd12395, %rd12336, %rd12394;
	or.b64  	%rd12396, %rd12393, %rd12395;
	add.s64 	%rd12397, %rd12396, %rd12311;
	add.s64 	%rd12398, %rd12397, %rd12392;
	add.s64 	%rd12399, %rd12398, %rd71;
	add.s64 	%rd12400, %rd12399, %rd11008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10198,%dummy}, %rd12387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10199}, %rd12387;
	}
	shf.r.wrap.b32 	%r10200, %r10199, %r10198, 28;
	shf.r.wrap.b32 	%r10201, %r10198, %r10199, 28;
	mov.b64 	%rd12401, {%r10201, %r10200};
	shf.l.wrap.b32 	%r10202, %r10198, %r10199, 30;
	shf.l.wrap.b32 	%r10203, %r10199, %r10198, 30;
	mov.b64 	%rd12402, {%r10203, %r10202};
	xor.b64  	%rd12403, %rd12401, %rd12402;
	shf.l.wrap.b32 	%r10204, %r10198, %r10199, 25;
	shf.l.wrap.b32 	%r10205, %r10199, %r10198, 25;
	mov.b64 	%rd12404, {%r10205, %r10204};
	xor.b64  	%rd12405, %rd12403, %rd12404;
	xor.b64  	%rd12406, %rd12362, %rd12337;
	and.b64  	%rd12407, %rd12387, %rd12406;
	and.b64  	%rd12408, %rd12362, %rd12337;
	xor.b64  	%rd12409, %rd12407, %rd12408;
	add.s64 	%rd12410, %rd12405, %rd12409;
	add.s64 	%rd12411, %rd12400, %rd12312;
	add.s64 	%rd12412, %rd12410, %rd12400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10206,%dummy}, %rd12411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10207}, %rd12411;
	}
	shf.r.wrap.b32 	%r10208, %r10207, %r10206, 14;
	shf.r.wrap.b32 	%r10209, %r10206, %r10207, 14;
	mov.b64 	%rd12413, {%r10209, %r10208};
	shf.r.wrap.b32 	%r10210, %r10207, %r10206, 18;
	shf.r.wrap.b32 	%r10211, %r10206, %r10207, 18;
	mov.b64 	%rd12414, {%r10211, %r10210};
	xor.b64  	%rd12415, %rd12413, %rd12414;
	shf.l.wrap.b32 	%r10212, %r10206, %r10207, 23;
	shf.l.wrap.b32 	%r10213, %r10207, %r10206, 23;
	mov.b64 	%rd12416, {%r10213, %r10212};
	xor.b64  	%rd12417, %rd12415, %rd12416;
	and.b64  	%rd12418, %rd12411, %rd12386;
	not.b64 	%rd12419, %rd12411;
	and.b64  	%rd12420, %rd12361, %rd12419;
	or.b64  	%rd12421, %rd12418, %rd12420;
	add.s64 	%rd12422, %rd12421, %rd12336;
	add.s64 	%rd12423, %rd12422, %rd12417;
	add.s64 	%rd12424, %rd12423, %rd72;
	add.s64 	%rd12425, %rd12424, %rd11021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10214,%dummy}, %rd12412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10215}, %rd12412;
	}
	shf.r.wrap.b32 	%r10216, %r10215, %r10214, 28;
	shf.r.wrap.b32 	%r10217, %r10214, %r10215, 28;
	mov.b64 	%rd12426, {%r10217, %r10216};
	shf.l.wrap.b32 	%r10218, %r10214, %r10215, 30;
	shf.l.wrap.b32 	%r10219, %r10215, %r10214, 30;
	mov.b64 	%rd12427, {%r10219, %r10218};
	xor.b64  	%rd12428, %rd12426, %rd12427;
	shf.l.wrap.b32 	%r10220, %r10214, %r10215, 25;
	shf.l.wrap.b32 	%r10221, %r10215, %r10214, 25;
	mov.b64 	%rd12429, {%r10221, %r10220};
	xor.b64  	%rd12430, %rd12428, %rd12429;
	xor.b64  	%rd12431, %rd12387, %rd12362;
	and.b64  	%rd12432, %rd12412, %rd12431;
	and.b64  	%rd12433, %rd12387, %rd12362;
	xor.b64  	%rd12434, %rd12432, %rd12433;
	add.s64 	%rd12435, %rd12430, %rd12434;
	add.s64 	%rd12436, %rd12425, %rd12337;
	add.s64 	%rd12437, %rd12435, %rd12425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10222,%dummy}, %rd12436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10223}, %rd12436;
	}
	shf.r.wrap.b32 	%r10224, %r10223, %r10222, 14;
	shf.r.wrap.b32 	%r10225, %r10222, %r10223, 14;
	mov.b64 	%rd12438, {%r10225, %r10224};
	shf.r.wrap.b32 	%r10226, %r10223, %r10222, 18;
	shf.r.wrap.b32 	%r10227, %r10222, %r10223, 18;
	mov.b64 	%rd12439, {%r10227, %r10226};
	xor.b64  	%rd12440, %rd12438, %rd12439;
	shf.l.wrap.b32 	%r10228, %r10222, %r10223, 23;
	shf.l.wrap.b32 	%r10229, %r10223, %r10222, 23;
	mov.b64 	%rd12441, {%r10229, %r10228};
	xor.b64  	%rd12442, %rd12440, %rd12441;
	and.b64  	%rd12443, %rd12436, %rd12411;
	not.b64 	%rd12444, %rd12436;
	and.b64  	%rd12445, %rd12386, %rd12444;
	or.b64  	%rd12446, %rd12443, %rd12445;
	add.s64 	%rd12447, %rd12446, %rd12361;
	add.s64 	%rd12448, %rd12447, %rd12442;
	add.s64 	%rd12449, %rd12448, %rd73;
	add.s64 	%rd12450, %rd12449, %rd11034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10230,%dummy}, %rd12437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10231}, %rd12437;
	}
	shf.r.wrap.b32 	%r10232, %r10231, %r10230, 28;
	shf.r.wrap.b32 	%r10233, %r10230, %r10231, 28;
	mov.b64 	%rd12451, {%r10233, %r10232};
	shf.l.wrap.b32 	%r10234, %r10230, %r10231, 30;
	shf.l.wrap.b32 	%r10235, %r10231, %r10230, 30;
	mov.b64 	%rd12452, {%r10235, %r10234};
	xor.b64  	%rd12453, %rd12451, %rd12452;
	shf.l.wrap.b32 	%r10236, %r10230, %r10231, 25;
	shf.l.wrap.b32 	%r10237, %r10231, %r10230, 25;
	mov.b64 	%rd12454, {%r10237, %r10236};
	xor.b64  	%rd12455, %rd12453, %rd12454;
	xor.b64  	%rd12456, %rd12412, %rd12387;
	and.b64  	%rd12457, %rd12437, %rd12456;
	and.b64  	%rd12458, %rd12412, %rd12387;
	xor.b64  	%rd12459, %rd12457, %rd12458;
	add.s64 	%rd12460, %rd12455, %rd12459;
	add.s64 	%rd12461, %rd12450, %rd12362;
	add.s64 	%rd12462, %rd12460, %rd12450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10238,%dummy}, %rd12461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10239}, %rd12461;
	}
	shf.r.wrap.b32 	%r10240, %r10239, %r10238, 14;
	shf.r.wrap.b32 	%r10241, %r10238, %r10239, 14;
	mov.b64 	%rd12463, {%r10241, %r10240};
	shf.r.wrap.b32 	%r10242, %r10239, %r10238, 18;
	shf.r.wrap.b32 	%r10243, %r10238, %r10239, 18;
	mov.b64 	%rd12464, {%r10243, %r10242};
	xor.b64  	%rd12465, %rd12463, %rd12464;
	shf.l.wrap.b32 	%r10244, %r10238, %r10239, 23;
	shf.l.wrap.b32 	%r10245, %r10239, %r10238, 23;
	mov.b64 	%rd12466, {%r10245, %r10244};
	xor.b64  	%rd12467, %rd12465, %rd12466;
	and.b64  	%rd12468, %rd12461, %rd12436;
	not.b64 	%rd12469, %rd12461;
	and.b64  	%rd12470, %rd12411, %rd12469;
	or.b64  	%rd12471, %rd12468, %rd12470;
	add.s64 	%rd12472, %rd12471, %rd12386;
	add.s64 	%rd12473, %rd12472, %rd12467;
	add.s64 	%rd12474, %rd12473, %rd74;
	add.s64 	%rd12475, %rd12474, %rd11047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10246,%dummy}, %rd12462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10247}, %rd12462;
	}
	shf.r.wrap.b32 	%r10248, %r10247, %r10246, 28;
	shf.r.wrap.b32 	%r10249, %r10246, %r10247, 28;
	mov.b64 	%rd12476, {%r10249, %r10248};
	shf.l.wrap.b32 	%r10250, %r10246, %r10247, 30;
	shf.l.wrap.b32 	%r10251, %r10247, %r10246, 30;
	mov.b64 	%rd12477, {%r10251, %r10250};
	xor.b64  	%rd12478, %rd12476, %rd12477;
	shf.l.wrap.b32 	%r10252, %r10246, %r10247, 25;
	shf.l.wrap.b32 	%r10253, %r10247, %r10246, 25;
	mov.b64 	%rd12479, {%r10253, %r10252};
	xor.b64  	%rd12480, %rd12478, %rd12479;
	xor.b64  	%rd12481, %rd12437, %rd12412;
	and.b64  	%rd12482, %rd12462, %rd12481;
	and.b64  	%rd12483, %rd12437, %rd12412;
	xor.b64  	%rd12484, %rd12482, %rd12483;
	add.s64 	%rd12485, %rd12480, %rd12484;
	add.s64 	%rd12486, %rd12475, %rd12387;
	add.s64 	%rd12487, %rd12485, %rd12475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10254,%dummy}, %rd12486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10255}, %rd12486;
	}
	shf.r.wrap.b32 	%r10256, %r10255, %r10254, 14;
	shf.r.wrap.b32 	%r10257, %r10254, %r10255, 14;
	mov.b64 	%rd12488, {%r10257, %r10256};
	shf.r.wrap.b32 	%r10258, %r10255, %r10254, 18;
	shf.r.wrap.b32 	%r10259, %r10254, %r10255, 18;
	mov.b64 	%rd12489, {%r10259, %r10258};
	xor.b64  	%rd12490, %rd12488, %rd12489;
	shf.l.wrap.b32 	%r10260, %r10254, %r10255, 23;
	shf.l.wrap.b32 	%r10261, %r10255, %r10254, 23;
	mov.b64 	%rd12491, {%r10261, %r10260};
	xor.b64  	%rd12492, %rd12490, %rd12491;
	and.b64  	%rd12493, %rd12486, %rd12461;
	not.b64 	%rd12494, %rd12486;
	and.b64  	%rd12495, %rd12436, %rd12494;
	or.b64  	%rd12496, %rd12493, %rd12495;
	add.s64 	%rd12497, %rd12496, %rd12411;
	add.s64 	%rd12498, %rd12497, %rd12492;
	add.s64 	%rd12499, %rd12498, %rd75;
	add.s64 	%rd12500, %rd12499, %rd11060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10262,%dummy}, %rd12487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10263}, %rd12487;
	}
	shf.r.wrap.b32 	%r10264, %r10263, %r10262, 28;
	shf.r.wrap.b32 	%r10265, %r10262, %r10263, 28;
	mov.b64 	%rd12501, {%r10265, %r10264};
	shf.l.wrap.b32 	%r10266, %r10262, %r10263, 30;
	shf.l.wrap.b32 	%r10267, %r10263, %r10262, 30;
	mov.b64 	%rd12502, {%r10267, %r10266};
	xor.b64  	%rd12503, %rd12501, %rd12502;
	shf.l.wrap.b32 	%r10268, %r10262, %r10263, 25;
	shf.l.wrap.b32 	%r10269, %r10263, %r10262, 25;
	mov.b64 	%rd12504, {%r10269, %r10268};
	xor.b64  	%rd12505, %rd12503, %rd12504;
	xor.b64  	%rd12506, %rd12462, %rd12437;
	and.b64  	%rd12507, %rd12487, %rd12506;
	and.b64  	%rd12508, %rd12462, %rd12437;
	xor.b64  	%rd12509, %rd12507, %rd12508;
	add.s64 	%rd12510, %rd12505, %rd12509;
	add.s64 	%rd12511, %rd12500, %rd12412;
	add.s64 	%rd12512, %rd12510, %rd12500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10270,%dummy}, %rd12511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10271}, %rd12511;
	}
	shf.r.wrap.b32 	%r10272, %r10271, %r10270, 14;
	shf.r.wrap.b32 	%r10273, %r10270, %r10271, 14;
	mov.b64 	%rd12513, {%r10273, %r10272};
	shf.r.wrap.b32 	%r10274, %r10271, %r10270, 18;
	shf.r.wrap.b32 	%r10275, %r10270, %r10271, 18;
	mov.b64 	%rd12514, {%r10275, %r10274};
	xor.b64  	%rd12515, %rd12513, %rd12514;
	shf.l.wrap.b32 	%r10276, %r10270, %r10271, 23;
	shf.l.wrap.b32 	%r10277, %r10271, %r10270, 23;
	mov.b64 	%rd12516, {%r10277, %r10276};
	xor.b64  	%rd12517, %rd12515, %rd12516;
	and.b64  	%rd12518, %rd12511, %rd12486;
	not.b64 	%rd12519, %rd12511;
	and.b64  	%rd12520, %rd12461, %rd12519;
	or.b64  	%rd12521, %rd12518, %rd12520;
	add.s64 	%rd12522, %rd12521, %rd12436;
	add.s64 	%rd12523, %rd12522, %rd12517;
	add.s64 	%rd12524, %rd12523, %rd76;
	add.s64 	%rd12525, %rd12524, %rd11073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10278,%dummy}, %rd12512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10279}, %rd12512;
	}
	shf.r.wrap.b32 	%r10280, %r10279, %r10278, 28;
	shf.r.wrap.b32 	%r10281, %r10278, %r10279, 28;
	mov.b64 	%rd12526, {%r10281, %r10280};
	shf.l.wrap.b32 	%r10282, %r10278, %r10279, 30;
	shf.l.wrap.b32 	%r10283, %r10279, %r10278, 30;
	mov.b64 	%rd12527, {%r10283, %r10282};
	xor.b64  	%rd12528, %rd12526, %rd12527;
	shf.l.wrap.b32 	%r10284, %r10278, %r10279, 25;
	shf.l.wrap.b32 	%r10285, %r10279, %r10278, 25;
	mov.b64 	%rd12529, {%r10285, %r10284};
	xor.b64  	%rd12530, %rd12528, %rd12529;
	xor.b64  	%rd12531, %rd12487, %rd12462;
	and.b64  	%rd12532, %rd12512, %rd12531;
	and.b64  	%rd12533, %rd12487, %rd12462;
	xor.b64  	%rd12534, %rd12532, %rd12533;
	add.s64 	%rd12535, %rd12530, %rd12534;
	add.s64 	%rd12536, %rd12525, %rd12437;
	add.s64 	%rd12537, %rd12535, %rd12525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10286,%dummy}, %rd12536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10287}, %rd12536;
	}
	shf.r.wrap.b32 	%r10288, %r10287, %r10286, 14;
	shf.r.wrap.b32 	%r10289, %r10286, %r10287, 14;
	mov.b64 	%rd12538, {%r10289, %r10288};
	shf.r.wrap.b32 	%r10290, %r10287, %r10286, 18;
	shf.r.wrap.b32 	%r10291, %r10286, %r10287, 18;
	mov.b64 	%rd12539, {%r10291, %r10290};
	xor.b64  	%rd12540, %rd12538, %rd12539;
	shf.l.wrap.b32 	%r10292, %r10286, %r10287, 23;
	shf.l.wrap.b32 	%r10293, %r10287, %r10286, 23;
	mov.b64 	%rd12541, {%r10293, %r10292};
	xor.b64  	%rd12542, %rd12540, %rd12541;
	and.b64  	%rd12543, %rd12536, %rd12511;
	not.b64 	%rd12544, %rd12536;
	and.b64  	%rd12545, %rd12486, %rd12544;
	or.b64  	%rd12546, %rd12543, %rd12545;
	add.s64 	%rd12547, %rd12546, %rd12461;
	add.s64 	%rd12548, %rd12547, %rd12542;
	add.s64 	%rd12549, %rd12548, %rd77;
	add.s64 	%rd12550, %rd12549, %rd11086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10294,%dummy}, %rd12537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10295}, %rd12537;
	}
	shf.r.wrap.b32 	%r10296, %r10295, %r10294, 28;
	shf.r.wrap.b32 	%r10297, %r10294, %r10295, 28;
	mov.b64 	%rd12551, {%r10297, %r10296};
	shf.l.wrap.b32 	%r10298, %r10294, %r10295, 30;
	shf.l.wrap.b32 	%r10299, %r10295, %r10294, 30;
	mov.b64 	%rd12552, {%r10299, %r10298};
	xor.b64  	%rd12553, %rd12551, %rd12552;
	shf.l.wrap.b32 	%r10300, %r10294, %r10295, 25;
	shf.l.wrap.b32 	%r10301, %r10295, %r10294, 25;
	mov.b64 	%rd12554, {%r10301, %r10300};
	xor.b64  	%rd12555, %rd12553, %rd12554;
	xor.b64  	%rd12556, %rd12512, %rd12487;
	and.b64  	%rd12557, %rd12537, %rd12556;
	and.b64  	%rd12558, %rd12512, %rd12487;
	xor.b64  	%rd12559, %rd12557, %rd12558;
	add.s64 	%rd12560, %rd12555, %rd12559;
	add.s64 	%rd12561, %rd12550, %rd12462;
	add.s64 	%rd12562, %rd12560, %rd12550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10302,%dummy}, %rd12561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10303}, %rd12561;
	}
	shf.r.wrap.b32 	%r10304, %r10303, %r10302, 14;
	shf.r.wrap.b32 	%r10305, %r10302, %r10303, 14;
	mov.b64 	%rd12563, {%r10305, %r10304};
	shf.r.wrap.b32 	%r10306, %r10303, %r10302, 18;
	shf.r.wrap.b32 	%r10307, %r10302, %r10303, 18;
	mov.b64 	%rd12564, {%r10307, %r10306};
	xor.b64  	%rd12565, %rd12563, %rd12564;
	shf.l.wrap.b32 	%r10308, %r10302, %r10303, 23;
	shf.l.wrap.b32 	%r10309, %r10303, %r10302, 23;
	mov.b64 	%rd12566, {%r10309, %r10308};
	xor.b64  	%rd12567, %rd12565, %rd12566;
	and.b64  	%rd12568, %rd12561, %rd12536;
	not.b64 	%rd12569, %rd12561;
	and.b64  	%rd12570, %rd12511, %rd12569;
	or.b64  	%rd12571, %rd12568, %rd12570;
	add.s64 	%rd12572, %rd12571, %rd12486;
	add.s64 	%rd12573, %rd12572, %rd12567;
	add.s64 	%rd12574, %rd12573, %rd78;
	add.s64 	%rd12575, %rd12574, %rd11099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10310,%dummy}, %rd12562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10311}, %rd12562;
	}
	shf.r.wrap.b32 	%r10312, %r10311, %r10310, 28;
	shf.r.wrap.b32 	%r10313, %r10310, %r10311, 28;
	mov.b64 	%rd12576, {%r10313, %r10312};
	shf.l.wrap.b32 	%r10314, %r10310, %r10311, 30;
	shf.l.wrap.b32 	%r10315, %r10311, %r10310, 30;
	mov.b64 	%rd12577, {%r10315, %r10314};
	xor.b64  	%rd12578, %rd12576, %rd12577;
	shf.l.wrap.b32 	%r10316, %r10310, %r10311, 25;
	shf.l.wrap.b32 	%r10317, %r10311, %r10310, 25;
	mov.b64 	%rd12579, {%r10317, %r10316};
	xor.b64  	%rd12580, %rd12578, %rd12579;
	xor.b64  	%rd12581, %rd12537, %rd12512;
	and.b64  	%rd12582, %rd12562, %rd12581;
	and.b64  	%rd12583, %rd12537, %rd12512;
	xor.b64  	%rd12584, %rd12582, %rd12583;
	add.s64 	%rd12585, %rd12580, %rd12584;
	add.s64 	%rd12586, %rd12575, %rd12487;
	add.s64 	%rd12587, %rd12585, %rd12575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10318,%dummy}, %rd12586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10319}, %rd12586;
	}
	shf.r.wrap.b32 	%r10320, %r10319, %r10318, 14;
	shf.r.wrap.b32 	%r10321, %r10318, %r10319, 14;
	mov.b64 	%rd12588, {%r10321, %r10320};
	shf.r.wrap.b32 	%r10322, %r10319, %r10318, 18;
	shf.r.wrap.b32 	%r10323, %r10318, %r10319, 18;
	mov.b64 	%rd12589, {%r10323, %r10322};
	xor.b64  	%rd12590, %rd12588, %rd12589;
	shf.l.wrap.b32 	%r10324, %r10318, %r10319, 23;
	shf.l.wrap.b32 	%r10325, %r10319, %r10318, 23;
	mov.b64 	%rd12591, {%r10325, %r10324};
	xor.b64  	%rd12592, %rd12590, %rd12591;
	and.b64  	%rd12593, %rd12586, %rd12561;
	not.b64 	%rd12594, %rd12586;
	and.b64  	%rd12595, %rd12536, %rd12594;
	or.b64  	%rd12596, %rd12593, %rd12595;
	add.s64 	%rd12597, %rd12596, %rd12511;
	add.s64 	%rd12598, %rd12597, %rd12592;
	add.s64 	%rd12599, %rd12598, %rd79;
	add.s64 	%rd12600, %rd12599, %rd11112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10326,%dummy}, %rd12587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10327}, %rd12587;
	}
	shf.r.wrap.b32 	%r10328, %r10327, %r10326, 28;
	shf.r.wrap.b32 	%r10329, %r10326, %r10327, 28;
	mov.b64 	%rd12601, {%r10329, %r10328};
	shf.l.wrap.b32 	%r10330, %r10326, %r10327, 30;
	shf.l.wrap.b32 	%r10331, %r10327, %r10326, 30;
	mov.b64 	%rd12602, {%r10331, %r10330};
	xor.b64  	%rd12603, %rd12601, %rd12602;
	shf.l.wrap.b32 	%r10332, %r10326, %r10327, 25;
	shf.l.wrap.b32 	%r10333, %r10327, %r10326, 25;
	mov.b64 	%rd12604, {%r10333, %r10332};
	xor.b64  	%rd12605, %rd12603, %rd12604;
	xor.b64  	%rd12606, %rd12562, %rd12537;
	and.b64  	%rd12607, %rd12587, %rd12606;
	and.b64  	%rd12608, %rd12562, %rd12537;
	xor.b64  	%rd12609, %rd12607, %rd12608;
	add.s64 	%rd12610, %rd12605, %rd12609;
	add.s64 	%rd12611, %rd12600, %rd12512;
	add.s64 	%rd12612, %rd12610, %rd12600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10334,%dummy}, %rd12611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10335}, %rd12611;
	}
	shf.r.wrap.b32 	%r10336, %r10335, %r10334, 14;
	shf.r.wrap.b32 	%r10337, %r10334, %r10335, 14;
	mov.b64 	%rd12613, {%r10337, %r10336};
	shf.r.wrap.b32 	%r10338, %r10335, %r10334, 18;
	shf.r.wrap.b32 	%r10339, %r10334, %r10335, 18;
	mov.b64 	%rd12614, {%r10339, %r10338};
	xor.b64  	%rd12615, %rd12613, %rd12614;
	shf.l.wrap.b32 	%r10340, %r10334, %r10335, 23;
	shf.l.wrap.b32 	%r10341, %r10335, %r10334, 23;
	mov.b64 	%rd12616, {%r10341, %r10340};
	xor.b64  	%rd12617, %rd12615, %rd12616;
	and.b64  	%rd12618, %rd12611, %rd12586;
	not.b64 	%rd12619, %rd12611;
	and.b64  	%rd12620, %rd12561, %rd12619;
	or.b64  	%rd12621, %rd12618, %rd12620;
	add.s64 	%rd12622, %rd12621, %rd12536;
	add.s64 	%rd12623, %rd12622, %rd12617;
	add.s64 	%rd12624, %rd12623, %rd80;
	add.s64 	%rd12625, %rd12624, %rd11125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10342,%dummy}, %rd12612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10343}, %rd12612;
	}
	shf.r.wrap.b32 	%r10344, %r10343, %r10342, 28;
	shf.r.wrap.b32 	%r10345, %r10342, %r10343, 28;
	mov.b64 	%rd12626, {%r10345, %r10344};
	shf.l.wrap.b32 	%r10346, %r10342, %r10343, 30;
	shf.l.wrap.b32 	%r10347, %r10343, %r10342, 30;
	mov.b64 	%rd12627, {%r10347, %r10346};
	xor.b64  	%rd12628, %rd12626, %rd12627;
	shf.l.wrap.b32 	%r10348, %r10342, %r10343, 25;
	shf.l.wrap.b32 	%r10349, %r10343, %r10342, 25;
	mov.b64 	%rd12629, {%r10349, %r10348};
	xor.b64  	%rd12630, %rd12628, %rd12629;
	xor.b64  	%rd12631, %rd12587, %rd12562;
	and.b64  	%rd12632, %rd12612, %rd12631;
	and.b64  	%rd12633, %rd12587, %rd12562;
	xor.b64  	%rd12634, %rd12632, %rd12633;
	add.s64 	%rd12635, %rd12630, %rd12634;
	add.s64 	%rd12636, %rd12625, %rd12537;
	add.s64 	%rd12637, %rd12635, %rd12625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10350,%dummy}, %rd12636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10351}, %rd12636;
	}
	shf.r.wrap.b32 	%r10352, %r10351, %r10350, 14;
	shf.r.wrap.b32 	%r10353, %r10350, %r10351, 14;
	mov.b64 	%rd12638, {%r10353, %r10352};
	shf.r.wrap.b32 	%r10354, %r10351, %r10350, 18;
	shf.r.wrap.b32 	%r10355, %r10350, %r10351, 18;
	mov.b64 	%rd12639, {%r10355, %r10354};
	xor.b64  	%rd12640, %rd12638, %rd12639;
	shf.l.wrap.b32 	%r10356, %r10350, %r10351, 23;
	shf.l.wrap.b32 	%r10357, %r10351, %r10350, 23;
	mov.b64 	%rd12641, {%r10357, %r10356};
	xor.b64  	%rd12642, %rd12640, %rd12641;
	and.b64  	%rd12643, %rd12636, %rd12611;
	not.b64 	%rd12644, %rd12636;
	and.b64  	%rd12645, %rd12586, %rd12644;
	or.b64  	%rd12646, %rd12643, %rd12645;
	add.s64 	%rd12647, %rd12646, %rd12561;
	add.s64 	%rd12648, %rd12647, %rd12642;
	add.s64 	%rd12649, %rd12648, %rd81;
	add.s64 	%rd12650, %rd12649, %rd11138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10358,%dummy}, %rd12637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10359}, %rd12637;
	}
	shf.r.wrap.b32 	%r10360, %r10359, %r10358, 28;
	shf.r.wrap.b32 	%r10361, %r10358, %r10359, 28;
	mov.b64 	%rd12651, {%r10361, %r10360};
	shf.l.wrap.b32 	%r10362, %r10358, %r10359, 30;
	shf.l.wrap.b32 	%r10363, %r10359, %r10358, 30;
	mov.b64 	%rd12652, {%r10363, %r10362};
	xor.b64  	%rd12653, %rd12651, %rd12652;
	shf.l.wrap.b32 	%r10364, %r10358, %r10359, 25;
	shf.l.wrap.b32 	%r10365, %r10359, %r10358, 25;
	mov.b64 	%rd12654, {%r10365, %r10364};
	xor.b64  	%rd12655, %rd12653, %rd12654;
	xor.b64  	%rd12656, %rd12612, %rd12587;
	and.b64  	%rd12657, %rd12637, %rd12656;
	and.b64  	%rd12658, %rd12612, %rd12587;
	xor.b64  	%rd12659, %rd12657, %rd12658;
	add.s64 	%rd12660, %rd12655, %rd12659;
	add.s64 	%rd12661, %rd12650, %rd12562;
	add.s64 	%rd12662, %rd12660, %rd12650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10366,%dummy}, %rd12661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10367}, %rd12661;
	}
	shf.r.wrap.b32 	%r10368, %r10367, %r10366, 14;
	shf.r.wrap.b32 	%r10369, %r10366, %r10367, 14;
	mov.b64 	%rd12663, {%r10369, %r10368};
	shf.r.wrap.b32 	%r10370, %r10367, %r10366, 18;
	shf.r.wrap.b32 	%r10371, %r10366, %r10367, 18;
	mov.b64 	%rd12664, {%r10371, %r10370};
	xor.b64  	%rd12665, %rd12663, %rd12664;
	shf.l.wrap.b32 	%r10372, %r10366, %r10367, 23;
	shf.l.wrap.b32 	%r10373, %r10367, %r10366, 23;
	mov.b64 	%rd12666, {%r10373, %r10372};
	xor.b64  	%rd12667, %rd12665, %rd12666;
	and.b64  	%rd12668, %rd12661, %rd12636;
	not.b64 	%rd12669, %rd12661;
	and.b64  	%rd12670, %rd12611, %rd12669;
	or.b64  	%rd12671, %rd12668, %rd12670;
	add.s64 	%rd12672, %rd12671, %rd12586;
	add.s64 	%rd12673, %rd12672, %rd12667;
	add.s64 	%rd12674, %rd12673, %rd82;
	add.s64 	%rd12675, %rd12674, %rd11151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10374,%dummy}, %rd12662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10375}, %rd12662;
	}
	shf.r.wrap.b32 	%r10376, %r10375, %r10374, 28;
	shf.r.wrap.b32 	%r10377, %r10374, %r10375, 28;
	mov.b64 	%rd12676, {%r10377, %r10376};
	shf.l.wrap.b32 	%r10378, %r10374, %r10375, 30;
	shf.l.wrap.b32 	%r10379, %r10375, %r10374, 30;
	mov.b64 	%rd12677, {%r10379, %r10378};
	xor.b64  	%rd12678, %rd12676, %rd12677;
	shf.l.wrap.b32 	%r10380, %r10374, %r10375, 25;
	shf.l.wrap.b32 	%r10381, %r10375, %r10374, 25;
	mov.b64 	%rd12679, {%r10381, %r10380};
	xor.b64  	%rd12680, %rd12678, %rd12679;
	xor.b64  	%rd12681, %rd12637, %rd12612;
	and.b64  	%rd12682, %rd12662, %rd12681;
	and.b64  	%rd12683, %rd12637, %rd12612;
	xor.b64  	%rd12684, %rd12682, %rd12683;
	add.s64 	%rd12685, %rd12680, %rd12684;
	add.s64 	%rd12686, %rd12675, %rd12587;
	add.s64 	%rd12687, %rd12685, %rd12675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10382,%dummy}, %rd12686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10383}, %rd12686;
	}
	shf.r.wrap.b32 	%r10384, %r10383, %r10382, 14;
	shf.r.wrap.b32 	%r10385, %r10382, %r10383, 14;
	mov.b64 	%rd12688, {%r10385, %r10384};
	shf.r.wrap.b32 	%r10386, %r10383, %r10382, 18;
	shf.r.wrap.b32 	%r10387, %r10382, %r10383, 18;
	mov.b64 	%rd12689, {%r10387, %r10386};
	xor.b64  	%rd12690, %rd12688, %rd12689;
	shf.l.wrap.b32 	%r10388, %r10382, %r10383, 23;
	shf.l.wrap.b32 	%r10389, %r10383, %r10382, 23;
	mov.b64 	%rd12691, {%r10389, %r10388};
	xor.b64  	%rd12692, %rd12690, %rd12691;
	and.b64  	%rd12693, %rd12686, %rd12661;
	not.b64 	%rd12694, %rd12686;
	and.b64  	%rd12695, %rd12636, %rd12694;
	or.b64  	%rd12696, %rd12693, %rd12695;
	add.s64 	%rd12697, %rd12696, %rd12611;
	add.s64 	%rd12698, %rd12697, %rd12692;
	add.s64 	%rd12699, %rd12698, %rd83;
	add.s64 	%rd12700, %rd12699, %rd11164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10390,%dummy}, %rd12687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10391}, %rd12687;
	}
	shf.r.wrap.b32 	%r10392, %r10391, %r10390, 28;
	shf.r.wrap.b32 	%r10393, %r10390, %r10391, 28;
	mov.b64 	%rd12701, {%r10393, %r10392};
	shf.l.wrap.b32 	%r10394, %r10390, %r10391, 30;
	shf.l.wrap.b32 	%r10395, %r10391, %r10390, 30;
	mov.b64 	%rd12702, {%r10395, %r10394};
	xor.b64  	%rd12703, %rd12701, %rd12702;
	shf.l.wrap.b32 	%r10396, %r10390, %r10391, 25;
	shf.l.wrap.b32 	%r10397, %r10391, %r10390, 25;
	mov.b64 	%rd12704, {%r10397, %r10396};
	xor.b64  	%rd12705, %rd12703, %rd12704;
	xor.b64  	%rd12706, %rd12662, %rd12637;
	and.b64  	%rd12707, %rd12687, %rd12706;
	and.b64  	%rd12708, %rd12662, %rd12637;
	xor.b64  	%rd12709, %rd12707, %rd12708;
	add.s64 	%rd12710, %rd12705, %rd12709;
	add.s64 	%rd12711, %rd12700, %rd12612;
	add.s64 	%rd12712, %rd12710, %rd12700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10398,%dummy}, %rd12711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10399}, %rd12711;
	}
	shf.r.wrap.b32 	%r10400, %r10399, %r10398, 14;
	shf.r.wrap.b32 	%r10401, %r10398, %r10399, 14;
	mov.b64 	%rd12713, {%r10401, %r10400};
	shf.r.wrap.b32 	%r10402, %r10399, %r10398, 18;
	shf.r.wrap.b32 	%r10403, %r10398, %r10399, 18;
	mov.b64 	%rd12714, {%r10403, %r10402};
	xor.b64  	%rd12715, %rd12713, %rd12714;
	shf.l.wrap.b32 	%r10404, %r10398, %r10399, 23;
	shf.l.wrap.b32 	%r10405, %r10399, %r10398, 23;
	mov.b64 	%rd12716, {%r10405, %r10404};
	xor.b64  	%rd12717, %rd12715, %rd12716;
	and.b64  	%rd12718, %rd12711, %rd12686;
	not.b64 	%rd12719, %rd12711;
	and.b64  	%rd12720, %rd12661, %rd12719;
	or.b64  	%rd12721, %rd12718, %rd12720;
	add.s64 	%rd12722, %rd12721, %rd12636;
	add.s64 	%rd12723, %rd12722, %rd12717;
	add.s64 	%rd12724, %rd12723, %rd84;
	add.s64 	%rd12725, %rd12724, %rd11177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10406,%dummy}, %rd12712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10407}, %rd12712;
	}
	shf.r.wrap.b32 	%r10408, %r10407, %r10406, 28;
	shf.r.wrap.b32 	%r10409, %r10406, %r10407, 28;
	mov.b64 	%rd12726, {%r10409, %r10408};
	shf.l.wrap.b32 	%r10410, %r10406, %r10407, 30;
	shf.l.wrap.b32 	%r10411, %r10407, %r10406, 30;
	mov.b64 	%rd12727, {%r10411, %r10410};
	xor.b64  	%rd12728, %rd12726, %rd12727;
	shf.l.wrap.b32 	%r10412, %r10406, %r10407, 25;
	shf.l.wrap.b32 	%r10413, %r10407, %r10406, 25;
	mov.b64 	%rd12729, {%r10413, %r10412};
	xor.b64  	%rd12730, %rd12728, %rd12729;
	xor.b64  	%rd12731, %rd12687, %rd12662;
	and.b64  	%rd12732, %rd12712, %rd12731;
	and.b64  	%rd12733, %rd12687, %rd12662;
	xor.b64  	%rd12734, %rd12732, %rd12733;
	add.s64 	%rd12735, %rd12730, %rd12734;
	add.s64 	%rd12736, %rd12725, %rd12637;
	add.s64 	%rd12737, %rd12735, %rd12725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10414,%dummy}, %rd12736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10415}, %rd12736;
	}
	shf.r.wrap.b32 	%r10416, %r10415, %r10414, 14;
	shf.r.wrap.b32 	%r10417, %r10414, %r10415, 14;
	mov.b64 	%rd12738, {%r10417, %r10416};
	shf.r.wrap.b32 	%r10418, %r10415, %r10414, 18;
	shf.r.wrap.b32 	%r10419, %r10414, %r10415, 18;
	mov.b64 	%rd12739, {%r10419, %r10418};
	xor.b64  	%rd12740, %rd12738, %rd12739;
	shf.l.wrap.b32 	%r10420, %r10414, %r10415, 23;
	shf.l.wrap.b32 	%r10421, %r10415, %r10414, 23;
	mov.b64 	%rd12741, {%r10421, %r10420};
	xor.b64  	%rd12742, %rd12740, %rd12741;
	and.b64  	%rd12743, %rd12736, %rd12711;
	not.b64 	%rd12744, %rd12736;
	and.b64  	%rd12745, %rd12686, %rd12744;
	or.b64  	%rd12746, %rd12743, %rd12745;
	add.s64 	%rd12747, %rd12746, %rd12661;
	add.s64 	%rd12748, %rd12747, %rd12742;
	add.s64 	%rd12749, %rd12748, %rd85;
	add.s64 	%rd12750, %rd12749, %rd11190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10422,%dummy}, %rd12737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10423}, %rd12737;
	}
	shf.r.wrap.b32 	%r10424, %r10423, %r10422, 28;
	shf.r.wrap.b32 	%r10425, %r10422, %r10423, 28;
	mov.b64 	%rd12751, {%r10425, %r10424};
	shf.l.wrap.b32 	%r10426, %r10422, %r10423, 30;
	shf.l.wrap.b32 	%r10427, %r10423, %r10422, 30;
	mov.b64 	%rd12752, {%r10427, %r10426};
	xor.b64  	%rd12753, %rd12751, %rd12752;
	shf.l.wrap.b32 	%r10428, %r10422, %r10423, 25;
	shf.l.wrap.b32 	%r10429, %r10423, %r10422, 25;
	mov.b64 	%rd12754, {%r10429, %r10428};
	xor.b64  	%rd12755, %rd12753, %rd12754;
	xor.b64  	%rd12756, %rd12712, %rd12687;
	and.b64  	%rd12757, %rd12737, %rd12756;
	and.b64  	%rd12758, %rd12712, %rd12687;
	xor.b64  	%rd12759, %rd12757, %rd12758;
	add.s64 	%rd12760, %rd12755, %rd12759;
	add.s64 	%rd12761, %rd12750, %rd12662;
	add.s64 	%rd12762, %rd12760, %rd12750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10430,%dummy}, %rd12761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10431}, %rd12761;
	}
	shf.r.wrap.b32 	%r10432, %r10431, %r10430, 14;
	shf.r.wrap.b32 	%r10433, %r10430, %r10431, 14;
	mov.b64 	%rd12763, {%r10433, %r10432};
	shf.r.wrap.b32 	%r10434, %r10431, %r10430, 18;
	shf.r.wrap.b32 	%r10435, %r10430, %r10431, 18;
	mov.b64 	%rd12764, {%r10435, %r10434};
	xor.b64  	%rd12765, %rd12763, %rd12764;
	shf.l.wrap.b32 	%r10436, %r10430, %r10431, 23;
	shf.l.wrap.b32 	%r10437, %r10431, %r10430, 23;
	mov.b64 	%rd12766, {%r10437, %r10436};
	xor.b64  	%rd12767, %rd12765, %rd12766;
	and.b64  	%rd12768, %rd12761, %rd12736;
	not.b64 	%rd12769, %rd12761;
	and.b64  	%rd12770, %rd12711, %rd12769;
	or.b64  	%rd12771, %rd12768, %rd12770;
	add.s64 	%rd12772, %rd12771, %rd12686;
	add.s64 	%rd12773, %rd12772, %rd12767;
	add.s64 	%rd12774, %rd12773, %rd86;
	add.s64 	%rd12775, %rd12774, %rd11203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10438,%dummy}, %rd12762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10439}, %rd12762;
	}
	shf.r.wrap.b32 	%r10440, %r10439, %r10438, 28;
	shf.r.wrap.b32 	%r10441, %r10438, %r10439, 28;
	mov.b64 	%rd12776, {%r10441, %r10440};
	shf.l.wrap.b32 	%r10442, %r10438, %r10439, 30;
	shf.l.wrap.b32 	%r10443, %r10439, %r10438, 30;
	mov.b64 	%rd12777, {%r10443, %r10442};
	xor.b64  	%rd12778, %rd12776, %rd12777;
	shf.l.wrap.b32 	%r10444, %r10438, %r10439, 25;
	shf.l.wrap.b32 	%r10445, %r10439, %r10438, 25;
	mov.b64 	%rd12779, {%r10445, %r10444};
	xor.b64  	%rd12780, %rd12778, %rd12779;
	xor.b64  	%rd12781, %rd12737, %rd12712;
	and.b64  	%rd12782, %rd12762, %rd12781;
	and.b64  	%rd12783, %rd12737, %rd12712;
	xor.b64  	%rd12784, %rd12782, %rd12783;
	add.s64 	%rd12785, %rd12780, %rd12784;
	add.s64 	%rd12786, %rd12775, %rd12687;
	add.s64 	%rd12787, %rd12785, %rd12775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10446,%dummy}, %rd12786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10447}, %rd12786;
	}
	shf.r.wrap.b32 	%r10448, %r10447, %r10446, 14;
	shf.r.wrap.b32 	%r10449, %r10446, %r10447, 14;
	mov.b64 	%rd12788, {%r10449, %r10448};
	shf.r.wrap.b32 	%r10450, %r10447, %r10446, 18;
	shf.r.wrap.b32 	%r10451, %r10446, %r10447, 18;
	mov.b64 	%rd12789, {%r10451, %r10450};
	xor.b64  	%rd12790, %rd12788, %rd12789;
	shf.l.wrap.b32 	%r10452, %r10446, %r10447, 23;
	shf.l.wrap.b32 	%r10453, %r10447, %r10446, 23;
	mov.b64 	%rd12791, {%r10453, %r10452};
	xor.b64  	%rd12792, %rd12790, %rd12791;
	and.b64  	%rd12793, %rd12786, %rd12761;
	not.b64 	%rd12794, %rd12786;
	and.b64  	%rd12795, %rd12736, %rd12794;
	or.b64  	%rd12796, %rd12793, %rd12795;
	add.s64 	%rd12797, %rd12796, %rd12711;
	add.s64 	%rd12798, %rd12797, %rd12792;
	add.s64 	%rd12799, %rd12798, %rd87;
	add.s64 	%rd12800, %rd12799, %rd11216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10454,%dummy}, %rd12787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10455}, %rd12787;
	}
	shf.r.wrap.b32 	%r10456, %r10455, %r10454, 28;
	shf.r.wrap.b32 	%r10457, %r10454, %r10455, 28;
	mov.b64 	%rd12801, {%r10457, %r10456};
	shf.l.wrap.b32 	%r10458, %r10454, %r10455, 30;
	shf.l.wrap.b32 	%r10459, %r10455, %r10454, 30;
	mov.b64 	%rd12802, {%r10459, %r10458};
	xor.b64  	%rd12803, %rd12801, %rd12802;
	shf.l.wrap.b32 	%r10460, %r10454, %r10455, 25;
	shf.l.wrap.b32 	%r10461, %r10455, %r10454, 25;
	mov.b64 	%rd12804, {%r10461, %r10460};
	xor.b64  	%rd12805, %rd12803, %rd12804;
	xor.b64  	%rd12806, %rd12762, %rd12737;
	and.b64  	%rd12807, %rd12787, %rd12806;
	and.b64  	%rd12808, %rd12762, %rd12737;
	xor.b64  	%rd12809, %rd12807, %rd12808;
	add.s64 	%rd12810, %rd12805, %rd12809;
	add.s64 	%rd12811, %rd12800, %rd12712;
	add.s64 	%rd12812, %rd12810, %rd12800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10462,%dummy}, %rd12811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10463}, %rd12811;
	}
	shf.r.wrap.b32 	%r10464, %r10463, %r10462, 14;
	shf.r.wrap.b32 	%r10465, %r10462, %r10463, 14;
	mov.b64 	%rd12813, {%r10465, %r10464};
	shf.r.wrap.b32 	%r10466, %r10463, %r10462, 18;
	shf.r.wrap.b32 	%r10467, %r10462, %r10463, 18;
	mov.b64 	%rd12814, {%r10467, %r10466};
	xor.b64  	%rd12815, %rd12813, %rd12814;
	shf.l.wrap.b32 	%r10468, %r10462, %r10463, 23;
	shf.l.wrap.b32 	%r10469, %r10463, %r10462, 23;
	mov.b64 	%rd12816, {%r10469, %r10468};
	xor.b64  	%rd12817, %rd12815, %rd12816;
	and.b64  	%rd12818, %rd12811, %rd12786;
	not.b64 	%rd12819, %rd12811;
	and.b64  	%rd12820, %rd12761, %rd12819;
	or.b64  	%rd12821, %rd12818, %rd12820;
	add.s64 	%rd12822, %rd12821, %rd12736;
	add.s64 	%rd12823, %rd12822, %rd12817;
	add.s64 	%rd12824, %rd12823, %rd88;
	add.s64 	%rd12825, %rd12824, %rd11229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10470,%dummy}, %rd12812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10471}, %rd12812;
	}
	shf.r.wrap.b32 	%r10472, %r10471, %r10470, 28;
	shf.r.wrap.b32 	%r10473, %r10470, %r10471, 28;
	mov.b64 	%rd12826, {%r10473, %r10472};
	shf.l.wrap.b32 	%r10474, %r10470, %r10471, 30;
	shf.l.wrap.b32 	%r10475, %r10471, %r10470, 30;
	mov.b64 	%rd12827, {%r10475, %r10474};
	xor.b64  	%rd12828, %rd12826, %rd12827;
	shf.l.wrap.b32 	%r10476, %r10470, %r10471, 25;
	shf.l.wrap.b32 	%r10477, %r10471, %r10470, 25;
	mov.b64 	%rd12829, {%r10477, %r10476};
	xor.b64  	%rd12830, %rd12828, %rd12829;
	xor.b64  	%rd12831, %rd12787, %rd12762;
	and.b64  	%rd12832, %rd12812, %rd12831;
	and.b64  	%rd12833, %rd12787, %rd12762;
	xor.b64  	%rd12834, %rd12832, %rd12833;
	add.s64 	%rd12835, %rd12830, %rd12834;
	add.s64 	%rd12836, %rd12825, %rd12737;
	add.s64 	%rd12837, %rd12835, %rd12825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10478,%dummy}, %rd12836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10479}, %rd12836;
	}
	shf.r.wrap.b32 	%r10480, %r10479, %r10478, 14;
	shf.r.wrap.b32 	%r10481, %r10478, %r10479, 14;
	mov.b64 	%rd12838, {%r10481, %r10480};
	shf.r.wrap.b32 	%r10482, %r10479, %r10478, 18;
	shf.r.wrap.b32 	%r10483, %r10478, %r10479, 18;
	mov.b64 	%rd12839, {%r10483, %r10482};
	xor.b64  	%rd12840, %rd12838, %rd12839;
	shf.l.wrap.b32 	%r10484, %r10478, %r10479, 23;
	shf.l.wrap.b32 	%r10485, %r10479, %r10478, 23;
	mov.b64 	%rd12841, {%r10485, %r10484};
	xor.b64  	%rd12842, %rd12840, %rd12841;
	and.b64  	%rd12843, %rd12836, %rd12811;
	not.b64 	%rd12844, %rd12836;
	and.b64  	%rd12845, %rd12786, %rd12844;
	or.b64  	%rd12846, %rd12843, %rd12845;
	add.s64 	%rd12847, %rd12846, %rd12761;
	add.s64 	%rd12848, %rd12847, %rd12842;
	add.s64 	%rd12849, %rd12848, %rd89;
	add.s64 	%rd12850, %rd12849, %rd11242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10486,%dummy}, %rd12837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10487}, %rd12837;
	}
	shf.r.wrap.b32 	%r10488, %r10487, %r10486, 28;
	shf.r.wrap.b32 	%r10489, %r10486, %r10487, 28;
	mov.b64 	%rd12851, {%r10489, %r10488};
	shf.l.wrap.b32 	%r10490, %r10486, %r10487, 30;
	shf.l.wrap.b32 	%r10491, %r10487, %r10486, 30;
	mov.b64 	%rd12852, {%r10491, %r10490};
	xor.b64  	%rd12853, %rd12851, %rd12852;
	shf.l.wrap.b32 	%r10492, %r10486, %r10487, 25;
	shf.l.wrap.b32 	%r10493, %r10487, %r10486, 25;
	mov.b64 	%rd12854, {%r10493, %r10492};
	xor.b64  	%rd12855, %rd12853, %rd12854;
	xor.b64  	%rd12856, %rd12812, %rd12787;
	and.b64  	%rd12857, %rd12837, %rd12856;
	and.b64  	%rd12858, %rd12812, %rd12787;
	xor.b64  	%rd12859, %rd12857, %rd12858;
	add.s64 	%rd12860, %rd12855, %rd12859;
	add.s64 	%rd12861, %rd12850, %rd12762;
	add.s64 	%rd12862, %rd12860, %rd12850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10494,%dummy}, %rd12861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10495}, %rd12861;
	}
	shf.r.wrap.b32 	%r10496, %r10495, %r10494, 14;
	shf.r.wrap.b32 	%r10497, %r10494, %r10495, 14;
	mov.b64 	%rd12863, {%r10497, %r10496};
	shf.r.wrap.b32 	%r10498, %r10495, %r10494, 18;
	shf.r.wrap.b32 	%r10499, %r10494, %r10495, 18;
	mov.b64 	%rd12864, {%r10499, %r10498};
	xor.b64  	%rd12865, %rd12863, %rd12864;
	shf.l.wrap.b32 	%r10500, %r10494, %r10495, 23;
	shf.l.wrap.b32 	%r10501, %r10495, %r10494, 23;
	mov.b64 	%rd12866, {%r10501, %r10500};
	xor.b64  	%rd12867, %rd12865, %rd12866;
	and.b64  	%rd12868, %rd12861, %rd12836;
	not.b64 	%rd12869, %rd12861;
	and.b64  	%rd12870, %rd12811, %rd12869;
	or.b64  	%rd12871, %rd12868, %rd12870;
	add.s64 	%rd12872, %rd12871, %rd12786;
	add.s64 	%rd12873, %rd12872, %rd12867;
	add.s64 	%rd12874, %rd12873, %rd90;
	add.s64 	%rd12875, %rd12874, %rd11255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10502,%dummy}, %rd12862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10503}, %rd12862;
	}
	shf.r.wrap.b32 	%r10504, %r10503, %r10502, 28;
	shf.r.wrap.b32 	%r10505, %r10502, %r10503, 28;
	mov.b64 	%rd12876, {%r10505, %r10504};
	shf.l.wrap.b32 	%r10506, %r10502, %r10503, 30;
	shf.l.wrap.b32 	%r10507, %r10503, %r10502, 30;
	mov.b64 	%rd12877, {%r10507, %r10506};
	xor.b64  	%rd12878, %rd12876, %rd12877;
	shf.l.wrap.b32 	%r10508, %r10502, %r10503, 25;
	shf.l.wrap.b32 	%r10509, %r10503, %r10502, 25;
	mov.b64 	%rd12879, {%r10509, %r10508};
	xor.b64  	%rd12880, %rd12878, %rd12879;
	xor.b64  	%rd12881, %rd12837, %rd12812;
	and.b64  	%rd12882, %rd12862, %rd12881;
	and.b64  	%rd12883, %rd12837, %rd12812;
	xor.b64  	%rd12884, %rd12882, %rd12883;
	add.s64 	%rd12885, %rd12880, %rd12884;
	add.s64 	%rd12886, %rd12875, %rd12787;
	add.s64 	%rd12887, %rd12885, %rd12875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10510,%dummy}, %rd12886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10511}, %rd12886;
	}
	shf.r.wrap.b32 	%r10512, %r10511, %r10510, 14;
	shf.r.wrap.b32 	%r10513, %r10510, %r10511, 14;
	mov.b64 	%rd12888, {%r10513, %r10512};
	shf.r.wrap.b32 	%r10514, %r10511, %r10510, 18;
	shf.r.wrap.b32 	%r10515, %r10510, %r10511, 18;
	mov.b64 	%rd12889, {%r10515, %r10514};
	xor.b64  	%rd12890, %rd12888, %rd12889;
	shf.l.wrap.b32 	%r10516, %r10510, %r10511, 23;
	shf.l.wrap.b32 	%r10517, %r10511, %r10510, 23;
	mov.b64 	%rd12891, {%r10517, %r10516};
	xor.b64  	%rd12892, %rd12890, %rd12891;
	and.b64  	%rd12893, %rd12886, %rd12861;
	not.b64 	%rd12894, %rd12886;
	and.b64  	%rd12895, %rd12836, %rd12894;
	or.b64  	%rd12896, %rd12893, %rd12895;
	add.s64 	%rd12897, %rd12896, %rd12811;
	add.s64 	%rd12898, %rd12897, %rd12892;
	add.s64 	%rd12899, %rd12898, %rd91;
	add.s64 	%rd12900, %rd12899, %rd11268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10518,%dummy}, %rd12887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10519}, %rd12887;
	}
	shf.r.wrap.b32 	%r10520, %r10519, %r10518, 28;
	shf.r.wrap.b32 	%r10521, %r10518, %r10519, 28;
	mov.b64 	%rd12901, {%r10521, %r10520};
	shf.l.wrap.b32 	%r10522, %r10518, %r10519, 30;
	shf.l.wrap.b32 	%r10523, %r10519, %r10518, 30;
	mov.b64 	%rd12902, {%r10523, %r10522};
	xor.b64  	%rd12903, %rd12901, %rd12902;
	shf.l.wrap.b32 	%r10524, %r10518, %r10519, 25;
	shf.l.wrap.b32 	%r10525, %r10519, %r10518, 25;
	mov.b64 	%rd12904, {%r10525, %r10524};
	xor.b64  	%rd12905, %rd12903, %rd12904;
	xor.b64  	%rd12906, %rd12862, %rd12837;
	and.b64  	%rd12907, %rd12887, %rd12906;
	and.b64  	%rd12908, %rd12862, %rd12837;
	xor.b64  	%rd12909, %rd12907, %rd12908;
	add.s64 	%rd12910, %rd12905, %rd12909;
	add.s64 	%rd12911, %rd12900, %rd12812;
	add.s64 	%rd12912, %rd12910, %rd12900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10526,%dummy}, %rd12911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10527}, %rd12911;
	}
	shf.r.wrap.b32 	%r10528, %r10527, %r10526, 14;
	shf.r.wrap.b32 	%r10529, %r10526, %r10527, 14;
	mov.b64 	%rd12913, {%r10529, %r10528};
	shf.r.wrap.b32 	%r10530, %r10527, %r10526, 18;
	shf.r.wrap.b32 	%r10531, %r10526, %r10527, 18;
	mov.b64 	%rd12914, {%r10531, %r10530};
	xor.b64  	%rd12915, %rd12913, %rd12914;
	shf.l.wrap.b32 	%r10532, %r10526, %r10527, 23;
	shf.l.wrap.b32 	%r10533, %r10527, %r10526, 23;
	mov.b64 	%rd12916, {%r10533, %r10532};
	xor.b64  	%rd12917, %rd12915, %rd12916;
	and.b64  	%rd12918, %rd12911, %rd12886;
	not.b64 	%rd12919, %rd12911;
	and.b64  	%rd12920, %rd12861, %rd12919;
	or.b64  	%rd12921, %rd12918, %rd12920;
	add.s64 	%rd12922, %rd12921, %rd12836;
	add.s64 	%rd12923, %rd12922, %rd12917;
	add.s64 	%rd12924, %rd12923, %rd92;
	add.s64 	%rd12925, %rd12924, %rd11281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10534,%dummy}, %rd12912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10535}, %rd12912;
	}
	shf.r.wrap.b32 	%r10536, %r10535, %r10534, 28;
	shf.r.wrap.b32 	%r10537, %r10534, %r10535, 28;
	mov.b64 	%rd12926, {%r10537, %r10536};
	shf.l.wrap.b32 	%r10538, %r10534, %r10535, 30;
	shf.l.wrap.b32 	%r10539, %r10535, %r10534, 30;
	mov.b64 	%rd12927, {%r10539, %r10538};
	xor.b64  	%rd12928, %rd12926, %rd12927;
	shf.l.wrap.b32 	%r10540, %r10534, %r10535, 25;
	shf.l.wrap.b32 	%r10541, %r10535, %r10534, 25;
	mov.b64 	%rd12929, {%r10541, %r10540};
	xor.b64  	%rd12930, %rd12928, %rd12929;
	xor.b64  	%rd12931, %rd12887, %rd12862;
	and.b64  	%rd12932, %rd12912, %rd12931;
	and.b64  	%rd12933, %rd12887, %rd12862;
	xor.b64  	%rd12934, %rd12932, %rd12933;
	add.s64 	%rd12935, %rd12930, %rd12934;
	add.s64 	%rd12936, %rd12925, %rd12837;
	add.s64 	%rd12937, %rd12935, %rd12925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10542,%dummy}, %rd12936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10543}, %rd12936;
	}
	shf.r.wrap.b32 	%r10544, %r10543, %r10542, 14;
	shf.r.wrap.b32 	%r10545, %r10542, %r10543, 14;
	mov.b64 	%rd12938, {%r10545, %r10544};
	shf.r.wrap.b32 	%r10546, %r10543, %r10542, 18;
	shf.r.wrap.b32 	%r10547, %r10542, %r10543, 18;
	mov.b64 	%rd12939, {%r10547, %r10546};
	xor.b64  	%rd12940, %rd12938, %rd12939;
	shf.l.wrap.b32 	%r10548, %r10542, %r10543, 23;
	shf.l.wrap.b32 	%r10549, %r10543, %r10542, 23;
	mov.b64 	%rd12941, {%r10549, %r10548};
	xor.b64  	%rd12942, %rd12940, %rd12941;
	and.b64  	%rd12943, %rd12936, %rd12911;
	not.b64 	%rd12944, %rd12936;
	and.b64  	%rd12945, %rd12886, %rd12944;
	or.b64  	%rd12946, %rd12943, %rd12945;
	add.s64 	%rd12947, %rd12946, %rd12861;
	add.s64 	%rd12948, %rd12947, %rd12942;
	add.s64 	%rd12949, %rd12948, %rd93;
	add.s64 	%rd12950, %rd12949, %rd11294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10550,%dummy}, %rd12937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10551}, %rd12937;
	}
	shf.r.wrap.b32 	%r10552, %r10551, %r10550, 28;
	shf.r.wrap.b32 	%r10553, %r10550, %r10551, 28;
	mov.b64 	%rd12951, {%r10553, %r10552};
	shf.l.wrap.b32 	%r10554, %r10550, %r10551, 30;
	shf.l.wrap.b32 	%r10555, %r10551, %r10550, 30;
	mov.b64 	%rd12952, {%r10555, %r10554};
	xor.b64  	%rd12953, %rd12951, %rd12952;
	shf.l.wrap.b32 	%r10556, %r10550, %r10551, 25;
	shf.l.wrap.b32 	%r10557, %r10551, %r10550, 25;
	mov.b64 	%rd12954, {%r10557, %r10556};
	xor.b64  	%rd12955, %rd12953, %rd12954;
	xor.b64  	%rd12956, %rd12912, %rd12887;
	and.b64  	%rd12957, %rd12937, %rd12956;
	and.b64  	%rd12958, %rd12912, %rd12887;
	xor.b64  	%rd12959, %rd12957, %rd12958;
	add.s64 	%rd12960, %rd12955, %rd12959;
	add.s64 	%rd12961, %rd12950, %rd12862;
	add.s64 	%rd12962, %rd12960, %rd12950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10558,%dummy}, %rd12961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10559}, %rd12961;
	}
	shf.r.wrap.b32 	%r10560, %r10559, %r10558, 14;
	shf.r.wrap.b32 	%r10561, %r10558, %r10559, 14;
	mov.b64 	%rd12963, {%r10561, %r10560};
	shf.r.wrap.b32 	%r10562, %r10559, %r10558, 18;
	shf.r.wrap.b32 	%r10563, %r10558, %r10559, 18;
	mov.b64 	%rd12964, {%r10563, %r10562};
	xor.b64  	%rd12965, %rd12963, %rd12964;
	shf.l.wrap.b32 	%r10564, %r10558, %r10559, 23;
	shf.l.wrap.b32 	%r10565, %r10559, %r10558, 23;
	mov.b64 	%rd12966, {%r10565, %r10564};
	xor.b64  	%rd12967, %rd12965, %rd12966;
	and.b64  	%rd12968, %rd12961, %rd12936;
	not.b64 	%rd12969, %rd12961;
	and.b64  	%rd12970, %rd12911, %rd12969;
	or.b64  	%rd12971, %rd12968, %rd12970;
	add.s64 	%rd12972, %rd12971, %rd12886;
	add.s64 	%rd12973, %rd12972, %rd12967;
	add.s64 	%rd12974, %rd12973, %rd94;
	add.s64 	%rd12975, %rd12974, %rd11307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10566,%dummy}, %rd12962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10567}, %rd12962;
	}
	shf.r.wrap.b32 	%r10568, %r10567, %r10566, 28;
	shf.r.wrap.b32 	%r10569, %r10566, %r10567, 28;
	mov.b64 	%rd12976, {%r10569, %r10568};
	shf.l.wrap.b32 	%r10570, %r10566, %r10567, 30;
	shf.l.wrap.b32 	%r10571, %r10567, %r10566, 30;
	mov.b64 	%rd12977, {%r10571, %r10570};
	xor.b64  	%rd12978, %rd12976, %rd12977;
	shf.l.wrap.b32 	%r10572, %r10566, %r10567, 25;
	shf.l.wrap.b32 	%r10573, %r10567, %r10566, 25;
	mov.b64 	%rd12979, {%r10573, %r10572};
	xor.b64  	%rd12980, %rd12978, %rd12979;
	xor.b64  	%rd12981, %rd12937, %rd12912;
	and.b64  	%rd12982, %rd12962, %rd12981;
	and.b64  	%rd12983, %rd12937, %rd12912;
	xor.b64  	%rd12984, %rd12982, %rd12983;
	add.s64 	%rd12985, %rd12980, %rd12984;
	add.s64 	%rd12986, %rd12975, %rd12887;
	add.s64 	%rd12987, %rd12985, %rd12975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10574,%dummy}, %rd12986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10575}, %rd12986;
	}
	shf.r.wrap.b32 	%r10576, %r10575, %r10574, 14;
	shf.r.wrap.b32 	%r10577, %r10574, %r10575, 14;
	mov.b64 	%rd12988, {%r10577, %r10576};
	shf.r.wrap.b32 	%r10578, %r10575, %r10574, 18;
	shf.r.wrap.b32 	%r10579, %r10574, %r10575, 18;
	mov.b64 	%rd12989, {%r10579, %r10578};
	xor.b64  	%rd12990, %rd12988, %rd12989;
	shf.l.wrap.b32 	%r10580, %r10574, %r10575, 23;
	shf.l.wrap.b32 	%r10581, %r10575, %r10574, 23;
	mov.b64 	%rd12991, {%r10581, %r10580};
	xor.b64  	%rd12992, %rd12990, %rd12991;
	and.b64  	%rd12993, %rd12986, %rd12961;
	not.b64 	%rd12994, %rd12986;
	and.b64  	%rd12995, %rd12936, %rd12994;
	or.b64  	%rd12996, %rd12993, %rd12995;
	add.s64 	%rd12997, %rd12996, %rd12911;
	add.s64 	%rd12998, %rd12997, %rd12992;
	add.s64 	%rd12999, %rd12998, %rd95;
	add.s64 	%rd13000, %rd12999, %rd11320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10582,%dummy}, %rd12987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10583}, %rd12987;
	}
	shf.r.wrap.b32 	%r10584, %r10583, %r10582, 28;
	shf.r.wrap.b32 	%r10585, %r10582, %r10583, 28;
	mov.b64 	%rd13001, {%r10585, %r10584};
	shf.l.wrap.b32 	%r10586, %r10582, %r10583, 30;
	shf.l.wrap.b32 	%r10587, %r10583, %r10582, 30;
	mov.b64 	%rd13002, {%r10587, %r10586};
	xor.b64  	%rd13003, %rd13001, %rd13002;
	shf.l.wrap.b32 	%r10588, %r10582, %r10583, 25;
	shf.l.wrap.b32 	%r10589, %r10583, %r10582, 25;
	mov.b64 	%rd13004, {%r10589, %r10588};
	xor.b64  	%rd13005, %rd13003, %rd13004;
	xor.b64  	%rd13006, %rd12962, %rd12937;
	and.b64  	%rd13007, %rd12987, %rd13006;
	and.b64  	%rd13008, %rd12962, %rd12937;
	xor.b64  	%rd13009, %rd13007, %rd13008;
	add.s64 	%rd13010, %rd13005, %rd13009;
	add.s64 	%rd13011, %rd13000, %rd12912;
	add.s64 	%rd13012, %rd13010, %rd13000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10590,%dummy}, %rd13011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10591}, %rd13011;
	}
	shf.r.wrap.b32 	%r10592, %r10591, %r10590, 14;
	shf.r.wrap.b32 	%r10593, %r10590, %r10591, 14;
	mov.b64 	%rd13013, {%r10593, %r10592};
	shf.r.wrap.b32 	%r10594, %r10591, %r10590, 18;
	shf.r.wrap.b32 	%r10595, %r10590, %r10591, 18;
	mov.b64 	%rd13014, {%r10595, %r10594};
	xor.b64  	%rd13015, %rd13013, %rd13014;
	shf.l.wrap.b32 	%r10596, %r10590, %r10591, 23;
	shf.l.wrap.b32 	%r10597, %r10591, %r10590, 23;
	mov.b64 	%rd13016, {%r10597, %r10596};
	xor.b64  	%rd13017, %rd13015, %rd13016;
	and.b64  	%rd13018, %rd13011, %rd12986;
	not.b64 	%rd13019, %rd13011;
	and.b64  	%rd13020, %rd12961, %rd13019;
	or.b64  	%rd13021, %rd13018, %rd13020;
	add.s64 	%rd13022, %rd13021, %rd12936;
	add.s64 	%rd13023, %rd13022, %rd13017;
	add.s64 	%rd13024, %rd13023, %rd96;
	add.s64 	%rd13025, %rd13024, %rd11333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10598,%dummy}, %rd13012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10599}, %rd13012;
	}
	shf.r.wrap.b32 	%r10600, %r10599, %r10598, 28;
	shf.r.wrap.b32 	%r10601, %r10598, %r10599, 28;
	mov.b64 	%rd13026, {%r10601, %r10600};
	shf.l.wrap.b32 	%r10602, %r10598, %r10599, 30;
	shf.l.wrap.b32 	%r10603, %r10599, %r10598, 30;
	mov.b64 	%rd13027, {%r10603, %r10602};
	xor.b64  	%rd13028, %rd13026, %rd13027;
	shf.l.wrap.b32 	%r10604, %r10598, %r10599, 25;
	shf.l.wrap.b32 	%r10605, %r10599, %r10598, 25;
	mov.b64 	%rd13029, {%r10605, %r10604};
	xor.b64  	%rd13030, %rd13028, %rd13029;
	xor.b64  	%rd13031, %rd12987, %rd12962;
	and.b64  	%rd13032, %rd13012, %rd13031;
	and.b64  	%rd13033, %rd12987, %rd12962;
	xor.b64  	%rd13034, %rd13032, %rd13033;
	add.s64 	%rd13035, %rd13030, %rd13034;
	add.s64 	%rd13036, %rd13025, %rd12937;
	add.s64 	%rd13037, %rd13035, %rd13025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10606,%dummy}, %rd13036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10607}, %rd13036;
	}
	shf.r.wrap.b32 	%r10608, %r10607, %r10606, 14;
	shf.r.wrap.b32 	%r10609, %r10606, %r10607, 14;
	mov.b64 	%rd13038, {%r10609, %r10608};
	shf.r.wrap.b32 	%r10610, %r10607, %r10606, 18;
	shf.r.wrap.b32 	%r10611, %r10606, %r10607, 18;
	mov.b64 	%rd13039, {%r10611, %r10610};
	xor.b64  	%rd13040, %rd13038, %rd13039;
	shf.l.wrap.b32 	%r10612, %r10606, %r10607, 23;
	shf.l.wrap.b32 	%r10613, %r10607, %r10606, 23;
	mov.b64 	%rd13041, {%r10613, %r10612};
	xor.b64  	%rd13042, %rd13040, %rd13041;
	and.b64  	%rd13043, %rd13036, %rd13011;
	not.b64 	%rd13044, %rd13036;
	and.b64  	%rd13045, %rd12986, %rd13044;
	or.b64  	%rd13046, %rd13043, %rd13045;
	add.s64 	%rd13047, %rd13046, %rd12961;
	add.s64 	%rd13048, %rd13047, %rd13042;
	add.s64 	%rd13049, %rd13048, %rd97;
	add.s64 	%rd13050, %rd13049, %rd11346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10614,%dummy}, %rd13037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10615}, %rd13037;
	}
	shf.r.wrap.b32 	%r10616, %r10615, %r10614, 28;
	shf.r.wrap.b32 	%r10617, %r10614, %r10615, 28;
	mov.b64 	%rd13051, {%r10617, %r10616};
	shf.l.wrap.b32 	%r10618, %r10614, %r10615, 30;
	shf.l.wrap.b32 	%r10619, %r10615, %r10614, 30;
	mov.b64 	%rd13052, {%r10619, %r10618};
	xor.b64  	%rd13053, %rd13051, %rd13052;
	shf.l.wrap.b32 	%r10620, %r10614, %r10615, 25;
	shf.l.wrap.b32 	%r10621, %r10615, %r10614, 25;
	mov.b64 	%rd13054, {%r10621, %r10620};
	xor.b64  	%rd13055, %rd13053, %rd13054;
	xor.b64  	%rd13056, %rd13012, %rd12987;
	and.b64  	%rd13057, %rd13037, %rd13056;
	and.b64  	%rd13058, %rd13012, %rd12987;
	xor.b64  	%rd13059, %rd13057, %rd13058;
	add.s64 	%rd13060, %rd13055, %rd13059;
	add.s64 	%rd13061, %rd13050, %rd12962;
	add.s64 	%rd13062, %rd13060, %rd13050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10622,%dummy}, %rd13061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10623}, %rd13061;
	}
	shf.r.wrap.b32 	%r10624, %r10623, %r10622, 14;
	shf.r.wrap.b32 	%r10625, %r10622, %r10623, 14;
	mov.b64 	%rd13063, {%r10625, %r10624};
	shf.r.wrap.b32 	%r10626, %r10623, %r10622, 18;
	shf.r.wrap.b32 	%r10627, %r10622, %r10623, 18;
	mov.b64 	%rd13064, {%r10627, %r10626};
	xor.b64  	%rd13065, %rd13063, %rd13064;
	shf.l.wrap.b32 	%r10628, %r10622, %r10623, 23;
	shf.l.wrap.b32 	%r10629, %r10623, %r10622, 23;
	mov.b64 	%rd13066, {%r10629, %r10628};
	xor.b64  	%rd13067, %rd13065, %rd13066;
	and.b64  	%rd13068, %rd13061, %rd13036;
	not.b64 	%rd13069, %rd13061;
	and.b64  	%rd13070, %rd13011, %rd13069;
	or.b64  	%rd13071, %rd13068, %rd13070;
	add.s64 	%rd13072, %rd13071, %rd12986;
	add.s64 	%rd13073, %rd13072, %rd13067;
	add.s64 	%rd13074, %rd13073, %rd98;
	add.s64 	%rd13075, %rd13074, %rd11359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10630,%dummy}, %rd13062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10631}, %rd13062;
	}
	shf.r.wrap.b32 	%r10632, %r10631, %r10630, 28;
	shf.r.wrap.b32 	%r10633, %r10630, %r10631, 28;
	mov.b64 	%rd13076, {%r10633, %r10632};
	shf.l.wrap.b32 	%r10634, %r10630, %r10631, 30;
	shf.l.wrap.b32 	%r10635, %r10631, %r10630, 30;
	mov.b64 	%rd13077, {%r10635, %r10634};
	xor.b64  	%rd13078, %rd13076, %rd13077;
	shf.l.wrap.b32 	%r10636, %r10630, %r10631, 25;
	shf.l.wrap.b32 	%r10637, %r10631, %r10630, 25;
	mov.b64 	%rd13079, {%r10637, %r10636};
	xor.b64  	%rd13080, %rd13078, %rd13079;
	xor.b64  	%rd13081, %rd13037, %rd13012;
	and.b64  	%rd13082, %rd13062, %rd13081;
	and.b64  	%rd13083, %rd13037, %rd13012;
	xor.b64  	%rd13084, %rd13082, %rd13083;
	add.s64 	%rd13085, %rd13080, %rd13084;
	add.s64 	%rd13086, %rd13075, %rd12987;
	add.s64 	%rd13087, %rd13085, %rd13075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10638,%dummy}, %rd13086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10639}, %rd13086;
	}
	shf.r.wrap.b32 	%r10640, %r10639, %r10638, 14;
	shf.r.wrap.b32 	%r10641, %r10638, %r10639, 14;
	mov.b64 	%rd13088, {%r10641, %r10640};
	shf.r.wrap.b32 	%r10642, %r10639, %r10638, 18;
	shf.r.wrap.b32 	%r10643, %r10638, %r10639, 18;
	mov.b64 	%rd13089, {%r10643, %r10642};
	xor.b64  	%rd13090, %rd13088, %rd13089;
	shf.l.wrap.b32 	%r10644, %r10638, %r10639, 23;
	shf.l.wrap.b32 	%r10645, %r10639, %r10638, 23;
	mov.b64 	%rd13091, {%r10645, %r10644};
	xor.b64  	%rd13092, %rd13090, %rd13091;
	and.b64  	%rd13093, %rd13086, %rd13061;
	not.b64 	%rd13094, %rd13086;
	and.b64  	%rd13095, %rd13036, %rd13094;
	or.b64  	%rd13096, %rd13093, %rd13095;
	add.s64 	%rd13097, %rd13096, %rd13011;
	add.s64 	%rd13098, %rd13097, %rd13092;
	add.s64 	%rd13099, %rd13098, %rd99;
	add.s64 	%rd13100, %rd13099, %rd11372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10646,%dummy}, %rd13087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10647}, %rd13087;
	}
	shf.r.wrap.b32 	%r10648, %r10647, %r10646, 28;
	shf.r.wrap.b32 	%r10649, %r10646, %r10647, 28;
	mov.b64 	%rd13101, {%r10649, %r10648};
	shf.l.wrap.b32 	%r10650, %r10646, %r10647, 30;
	shf.l.wrap.b32 	%r10651, %r10647, %r10646, 30;
	mov.b64 	%rd13102, {%r10651, %r10650};
	xor.b64  	%rd13103, %rd13101, %rd13102;
	shf.l.wrap.b32 	%r10652, %r10646, %r10647, 25;
	shf.l.wrap.b32 	%r10653, %r10647, %r10646, 25;
	mov.b64 	%rd13104, {%r10653, %r10652};
	xor.b64  	%rd13105, %rd13103, %rd13104;
	xor.b64  	%rd13106, %rd13062, %rd13037;
	and.b64  	%rd13107, %rd13087, %rd13106;
	and.b64  	%rd13108, %rd13062, %rd13037;
	xor.b64  	%rd13109, %rd13107, %rd13108;
	add.s64 	%rd13110, %rd13105, %rd13109;
	add.s64 	%rd13111, %rd13100, %rd13012;
	add.s64 	%rd13112, %rd13110, %rd13100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10654,%dummy}, %rd13111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10655}, %rd13111;
	}
	shf.r.wrap.b32 	%r10656, %r10655, %r10654, 14;
	shf.r.wrap.b32 	%r10657, %r10654, %r10655, 14;
	mov.b64 	%rd13113, {%r10657, %r10656};
	shf.r.wrap.b32 	%r10658, %r10655, %r10654, 18;
	shf.r.wrap.b32 	%r10659, %r10654, %r10655, 18;
	mov.b64 	%rd13114, {%r10659, %r10658};
	xor.b64  	%rd13115, %rd13113, %rd13114;
	shf.l.wrap.b32 	%r10660, %r10654, %r10655, 23;
	shf.l.wrap.b32 	%r10661, %r10655, %r10654, 23;
	mov.b64 	%rd13116, {%r10661, %r10660};
	xor.b64  	%rd13117, %rd13115, %rd13116;
	and.b64  	%rd13118, %rd13111, %rd13086;
	not.b64 	%rd13119, %rd13111;
	and.b64  	%rd13120, %rd13061, %rd13119;
	or.b64  	%rd13121, %rd13118, %rd13120;
	add.s64 	%rd13122, %rd13121, %rd13036;
	add.s64 	%rd13123, %rd13122, %rd13117;
	add.s64 	%rd13124, %rd13123, %rd100;
	add.s64 	%rd13125, %rd13124, %rd11385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10662,%dummy}, %rd13112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10663}, %rd13112;
	}
	shf.r.wrap.b32 	%r10664, %r10663, %r10662, 28;
	shf.r.wrap.b32 	%r10665, %r10662, %r10663, 28;
	mov.b64 	%rd13126, {%r10665, %r10664};
	shf.l.wrap.b32 	%r10666, %r10662, %r10663, 30;
	shf.l.wrap.b32 	%r10667, %r10663, %r10662, 30;
	mov.b64 	%rd13127, {%r10667, %r10666};
	xor.b64  	%rd13128, %rd13126, %rd13127;
	shf.l.wrap.b32 	%r10668, %r10662, %r10663, 25;
	shf.l.wrap.b32 	%r10669, %r10663, %r10662, 25;
	mov.b64 	%rd13129, {%r10669, %r10668};
	xor.b64  	%rd13130, %rd13128, %rd13129;
	xor.b64  	%rd13131, %rd13087, %rd13062;
	and.b64  	%rd13132, %rd13112, %rd13131;
	and.b64  	%rd13133, %rd13087, %rd13062;
	xor.b64  	%rd13134, %rd13132, %rd13133;
	add.s64 	%rd13135, %rd13130, %rd13134;
	add.s64 	%rd13136, %rd13125, %rd13037;
	add.s64 	%rd13137, %rd13135, %rd13125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10670,%dummy}, %rd13136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10671}, %rd13136;
	}
	shf.r.wrap.b32 	%r10672, %r10671, %r10670, 14;
	shf.r.wrap.b32 	%r10673, %r10670, %r10671, 14;
	mov.b64 	%rd13138, {%r10673, %r10672};
	shf.r.wrap.b32 	%r10674, %r10671, %r10670, 18;
	shf.r.wrap.b32 	%r10675, %r10670, %r10671, 18;
	mov.b64 	%rd13139, {%r10675, %r10674};
	xor.b64  	%rd13140, %rd13138, %rd13139;
	shf.l.wrap.b32 	%r10676, %r10670, %r10671, 23;
	shf.l.wrap.b32 	%r10677, %r10671, %r10670, 23;
	mov.b64 	%rd13141, {%r10677, %r10676};
	xor.b64  	%rd13142, %rd13140, %rd13141;
	and.b64  	%rd13143, %rd13136, %rd13111;
	not.b64 	%rd13144, %rd13136;
	and.b64  	%rd13145, %rd13086, %rd13144;
	or.b64  	%rd13146, %rd13143, %rd13145;
	add.s64 	%rd13147, %rd13146, %rd13061;
	add.s64 	%rd13148, %rd13147, %rd13142;
	add.s64 	%rd13149, %rd13148, %rd101;
	add.s64 	%rd13150, %rd13149, %rd11398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10678,%dummy}, %rd13137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10679}, %rd13137;
	}
	shf.r.wrap.b32 	%r10680, %r10679, %r10678, 28;
	shf.r.wrap.b32 	%r10681, %r10678, %r10679, 28;
	mov.b64 	%rd13151, {%r10681, %r10680};
	shf.l.wrap.b32 	%r10682, %r10678, %r10679, 30;
	shf.l.wrap.b32 	%r10683, %r10679, %r10678, 30;
	mov.b64 	%rd13152, {%r10683, %r10682};
	xor.b64  	%rd13153, %rd13151, %rd13152;
	shf.l.wrap.b32 	%r10684, %r10678, %r10679, 25;
	shf.l.wrap.b32 	%r10685, %r10679, %r10678, 25;
	mov.b64 	%rd13154, {%r10685, %r10684};
	xor.b64  	%rd13155, %rd13153, %rd13154;
	xor.b64  	%rd13156, %rd13112, %rd13087;
	and.b64  	%rd13157, %rd13137, %rd13156;
	and.b64  	%rd13158, %rd13112, %rd13087;
	xor.b64  	%rd13159, %rd13157, %rd13158;
	add.s64 	%rd13160, %rd13155, %rd13159;
	add.s64 	%rd13161, %rd13150, %rd13062;
	add.s64 	%rd13162, %rd13160, %rd13150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10686,%dummy}, %rd13161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10687}, %rd13161;
	}
	shf.r.wrap.b32 	%r10688, %r10687, %r10686, 14;
	shf.r.wrap.b32 	%r10689, %r10686, %r10687, 14;
	mov.b64 	%rd13163, {%r10689, %r10688};
	shf.r.wrap.b32 	%r10690, %r10687, %r10686, 18;
	shf.r.wrap.b32 	%r10691, %r10686, %r10687, 18;
	mov.b64 	%rd13164, {%r10691, %r10690};
	xor.b64  	%rd13165, %rd13163, %rd13164;
	shf.l.wrap.b32 	%r10692, %r10686, %r10687, 23;
	shf.l.wrap.b32 	%r10693, %r10687, %r10686, 23;
	mov.b64 	%rd13166, {%r10693, %r10692};
	xor.b64  	%rd13167, %rd13165, %rd13166;
	and.b64  	%rd13168, %rd13161, %rd13136;
	not.b64 	%rd13169, %rd13161;
	and.b64  	%rd13170, %rd13111, %rd13169;
	or.b64  	%rd13171, %rd13168, %rd13170;
	add.s64 	%rd13172, %rd13171, %rd13086;
	add.s64 	%rd13173, %rd13172, %rd13167;
	add.s64 	%rd13174, %rd13173, %rd102;
	add.s64 	%rd13175, %rd13174, %rd11411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10694,%dummy}, %rd13162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10695}, %rd13162;
	}
	shf.r.wrap.b32 	%r10696, %r10695, %r10694, 28;
	shf.r.wrap.b32 	%r10697, %r10694, %r10695, 28;
	mov.b64 	%rd13176, {%r10697, %r10696};
	shf.l.wrap.b32 	%r10698, %r10694, %r10695, 30;
	shf.l.wrap.b32 	%r10699, %r10695, %r10694, 30;
	mov.b64 	%rd13177, {%r10699, %r10698};
	xor.b64  	%rd13178, %rd13176, %rd13177;
	shf.l.wrap.b32 	%r10700, %r10694, %r10695, 25;
	shf.l.wrap.b32 	%r10701, %r10695, %r10694, 25;
	mov.b64 	%rd13179, {%r10701, %r10700};
	xor.b64  	%rd13180, %rd13178, %rd13179;
	xor.b64  	%rd13181, %rd13137, %rd13112;
	and.b64  	%rd13182, %rd13162, %rd13181;
	and.b64  	%rd13183, %rd13137, %rd13112;
	xor.b64  	%rd13184, %rd13182, %rd13183;
	add.s64 	%rd13185, %rd13180, %rd13184;
	add.s64 	%rd13186, %rd13175, %rd13087;
	add.s64 	%rd13187, %rd13185, %rd13175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10702,%dummy}, %rd13186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10703}, %rd13186;
	}
	shf.r.wrap.b32 	%r10704, %r10703, %r10702, 14;
	shf.r.wrap.b32 	%r10705, %r10702, %r10703, 14;
	mov.b64 	%rd13188, {%r10705, %r10704};
	shf.r.wrap.b32 	%r10706, %r10703, %r10702, 18;
	shf.r.wrap.b32 	%r10707, %r10702, %r10703, 18;
	mov.b64 	%rd13189, {%r10707, %r10706};
	xor.b64  	%rd13190, %rd13188, %rd13189;
	shf.l.wrap.b32 	%r10708, %r10702, %r10703, 23;
	shf.l.wrap.b32 	%r10709, %r10703, %r10702, 23;
	mov.b64 	%rd13191, {%r10709, %r10708};
	xor.b64  	%rd13192, %rd13190, %rd13191;
	and.b64  	%rd13193, %rd13186, %rd13161;
	not.b64 	%rd13194, %rd13186;
	and.b64  	%rd13195, %rd13136, %rd13194;
	or.b64  	%rd13196, %rd13193, %rd13195;
	add.s64 	%rd13197, %rd13196, %rd13111;
	add.s64 	%rd13198, %rd13197, %rd13192;
	add.s64 	%rd13199, %rd13198, %rd103;
	add.s64 	%rd13200, %rd13199, %rd11424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10710,%dummy}, %rd13187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10711}, %rd13187;
	}
	shf.r.wrap.b32 	%r10712, %r10711, %r10710, 28;
	shf.r.wrap.b32 	%r10713, %r10710, %r10711, 28;
	mov.b64 	%rd13201, {%r10713, %r10712};
	shf.l.wrap.b32 	%r10714, %r10710, %r10711, 30;
	shf.l.wrap.b32 	%r10715, %r10711, %r10710, 30;
	mov.b64 	%rd13202, {%r10715, %r10714};
	xor.b64  	%rd13203, %rd13201, %rd13202;
	shf.l.wrap.b32 	%r10716, %r10710, %r10711, 25;
	shf.l.wrap.b32 	%r10717, %r10711, %r10710, 25;
	mov.b64 	%rd13204, {%r10717, %r10716};
	xor.b64  	%rd13205, %rd13203, %rd13204;
	xor.b64  	%rd13206, %rd13162, %rd13137;
	and.b64  	%rd13207, %rd13187, %rd13206;
	and.b64  	%rd13208, %rd13162, %rd13137;
	xor.b64  	%rd13209, %rd13207, %rd13208;
	add.s64 	%rd13210, %rd13205, %rd13209;
	add.s64 	%rd13211, %rd13200, %rd13112;
	add.s64 	%rd13212, %rd13210, %rd13200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10718,%dummy}, %rd13211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10719}, %rd13211;
	}
	shf.r.wrap.b32 	%r10720, %r10719, %r10718, 14;
	shf.r.wrap.b32 	%r10721, %r10718, %r10719, 14;
	mov.b64 	%rd13213, {%r10721, %r10720};
	shf.r.wrap.b32 	%r10722, %r10719, %r10718, 18;
	shf.r.wrap.b32 	%r10723, %r10718, %r10719, 18;
	mov.b64 	%rd13214, {%r10723, %r10722};
	xor.b64  	%rd13215, %rd13213, %rd13214;
	shf.l.wrap.b32 	%r10724, %r10718, %r10719, 23;
	shf.l.wrap.b32 	%r10725, %r10719, %r10718, 23;
	mov.b64 	%rd13216, {%r10725, %r10724};
	xor.b64  	%rd13217, %rd13215, %rd13216;
	and.b64  	%rd13218, %rd13211, %rd13186;
	not.b64 	%rd13219, %rd13211;
	and.b64  	%rd13220, %rd13161, %rd13219;
	or.b64  	%rd13221, %rd13218, %rd13220;
	add.s64 	%rd13222, %rd13221, %rd13136;
	add.s64 	%rd13223, %rd13222, %rd13217;
	add.s64 	%rd13224, %rd13223, %rd104;
	add.s64 	%rd13225, %rd13224, %rd11437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10726,%dummy}, %rd13212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10727}, %rd13212;
	}
	shf.r.wrap.b32 	%r10728, %r10727, %r10726, 28;
	shf.r.wrap.b32 	%r10729, %r10726, %r10727, 28;
	mov.b64 	%rd13226, {%r10729, %r10728};
	shf.l.wrap.b32 	%r10730, %r10726, %r10727, 30;
	shf.l.wrap.b32 	%r10731, %r10727, %r10726, 30;
	mov.b64 	%rd13227, {%r10731, %r10730};
	xor.b64  	%rd13228, %rd13226, %rd13227;
	shf.l.wrap.b32 	%r10732, %r10726, %r10727, 25;
	shf.l.wrap.b32 	%r10733, %r10727, %r10726, 25;
	mov.b64 	%rd13229, {%r10733, %r10732};
	xor.b64  	%rd13230, %rd13228, %rd13229;
	xor.b64  	%rd13231, %rd13187, %rd13162;
	and.b64  	%rd13232, %rd13212, %rd13231;
	and.b64  	%rd13233, %rd13187, %rd13162;
	xor.b64  	%rd13234, %rd13232, %rd13233;
	add.s64 	%rd13235, %rd13230, %rd13234;
	add.s64 	%rd13236, %rd13225, %rd13137;
	add.s64 	%rd13237, %rd13235, %rd13225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10734,%dummy}, %rd13236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10735}, %rd13236;
	}
	shf.r.wrap.b32 	%r10736, %r10735, %r10734, 14;
	shf.r.wrap.b32 	%r10737, %r10734, %r10735, 14;
	mov.b64 	%rd13238, {%r10737, %r10736};
	shf.r.wrap.b32 	%r10738, %r10735, %r10734, 18;
	shf.r.wrap.b32 	%r10739, %r10734, %r10735, 18;
	mov.b64 	%rd13239, {%r10739, %r10738};
	xor.b64  	%rd13240, %rd13238, %rd13239;
	shf.l.wrap.b32 	%r10740, %r10734, %r10735, 23;
	shf.l.wrap.b32 	%r10741, %r10735, %r10734, 23;
	mov.b64 	%rd13241, {%r10741, %r10740};
	xor.b64  	%rd13242, %rd13240, %rd13241;
	and.b64  	%rd13243, %rd13236, %rd13211;
	not.b64 	%rd13244, %rd13236;
	and.b64  	%rd13245, %rd13186, %rd13244;
	or.b64  	%rd13246, %rd13243, %rd13245;
	add.s64 	%rd13247, %rd13246, %rd13161;
	add.s64 	%rd13248, %rd13247, %rd13242;
	add.s64 	%rd13249, %rd13248, %rd105;
	add.s64 	%rd13250, %rd13249, %rd11450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10742,%dummy}, %rd13237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10743}, %rd13237;
	}
	shf.r.wrap.b32 	%r10744, %r10743, %r10742, 28;
	shf.r.wrap.b32 	%r10745, %r10742, %r10743, 28;
	mov.b64 	%rd13251, {%r10745, %r10744};
	shf.l.wrap.b32 	%r10746, %r10742, %r10743, 30;
	shf.l.wrap.b32 	%r10747, %r10743, %r10742, 30;
	mov.b64 	%rd13252, {%r10747, %r10746};
	xor.b64  	%rd13253, %rd13251, %rd13252;
	shf.l.wrap.b32 	%r10748, %r10742, %r10743, 25;
	shf.l.wrap.b32 	%r10749, %r10743, %r10742, 25;
	mov.b64 	%rd13254, {%r10749, %r10748};
	xor.b64  	%rd13255, %rd13253, %rd13254;
	xor.b64  	%rd13256, %rd13212, %rd13187;
	and.b64  	%rd13257, %rd13237, %rd13256;
	and.b64  	%rd13258, %rd13212, %rd13187;
	xor.b64  	%rd13259, %rd13257, %rd13258;
	add.s64 	%rd13260, %rd13255, %rd13259;
	add.s64 	%rd13261, %rd13250, %rd13162;
	add.s64 	%rd13262, %rd13260, %rd13250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10750,%dummy}, %rd13261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10751}, %rd13261;
	}
	shf.r.wrap.b32 	%r10752, %r10751, %r10750, 14;
	shf.r.wrap.b32 	%r10753, %r10750, %r10751, 14;
	mov.b64 	%rd13263, {%r10753, %r10752};
	shf.r.wrap.b32 	%r10754, %r10751, %r10750, 18;
	shf.r.wrap.b32 	%r10755, %r10750, %r10751, 18;
	mov.b64 	%rd13264, {%r10755, %r10754};
	xor.b64  	%rd13265, %rd13263, %rd13264;
	shf.l.wrap.b32 	%r10756, %r10750, %r10751, 23;
	shf.l.wrap.b32 	%r10757, %r10751, %r10750, 23;
	mov.b64 	%rd13266, {%r10757, %r10756};
	xor.b64  	%rd13267, %rd13265, %rd13266;
	and.b64  	%rd13268, %rd13261, %rd13236;
	not.b64 	%rd13269, %rd13261;
	and.b64  	%rd13270, %rd13211, %rd13269;
	or.b64  	%rd13271, %rd13268, %rd13270;
	add.s64 	%rd13272, %rd13271, %rd13186;
	add.s64 	%rd13273, %rd13272, %rd13267;
	add.s64 	%rd13274, %rd13273, %rd106;
	add.s64 	%rd13275, %rd13274, %rd11463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10758,%dummy}, %rd13262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10759}, %rd13262;
	}
	shf.r.wrap.b32 	%r10760, %r10759, %r10758, 28;
	shf.r.wrap.b32 	%r10761, %r10758, %r10759, 28;
	mov.b64 	%rd13276, {%r10761, %r10760};
	shf.l.wrap.b32 	%r10762, %r10758, %r10759, 30;
	shf.l.wrap.b32 	%r10763, %r10759, %r10758, 30;
	mov.b64 	%rd13277, {%r10763, %r10762};
	xor.b64  	%rd13278, %rd13276, %rd13277;
	shf.l.wrap.b32 	%r10764, %r10758, %r10759, 25;
	shf.l.wrap.b32 	%r10765, %r10759, %r10758, 25;
	mov.b64 	%rd13279, {%r10765, %r10764};
	xor.b64  	%rd13280, %rd13278, %rd13279;
	xor.b64  	%rd13281, %rd13237, %rd13212;
	and.b64  	%rd13282, %rd13262, %rd13281;
	and.b64  	%rd13283, %rd13237, %rd13212;
	xor.b64  	%rd13284, %rd13282, %rd13283;
	add.s64 	%rd13285, %rd13280, %rd13284;
	add.s64 	%rd13286, %rd13275, %rd13187;
	add.s64 	%rd13287, %rd13285, %rd13275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10766,%dummy}, %rd13286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10767}, %rd13286;
	}
	shf.r.wrap.b32 	%r10768, %r10767, %r10766, 14;
	shf.r.wrap.b32 	%r10769, %r10766, %r10767, 14;
	mov.b64 	%rd13288, {%r10769, %r10768};
	shf.r.wrap.b32 	%r10770, %r10767, %r10766, 18;
	shf.r.wrap.b32 	%r10771, %r10766, %r10767, 18;
	mov.b64 	%rd13289, {%r10771, %r10770};
	xor.b64  	%rd13290, %rd13288, %rd13289;
	shf.l.wrap.b32 	%r10772, %r10766, %r10767, 23;
	shf.l.wrap.b32 	%r10773, %r10767, %r10766, 23;
	mov.b64 	%rd13291, {%r10773, %r10772};
	xor.b64  	%rd13292, %rd13290, %rd13291;
	and.b64  	%rd13293, %rd13286, %rd13261;
	not.b64 	%rd13294, %rd13286;
	and.b64  	%rd13295, %rd13236, %rd13294;
	or.b64  	%rd13296, %rd13293, %rd13295;
	add.s64 	%rd13297, %rd13296, %rd13211;
	add.s64 	%rd13298, %rd13297, %rd13292;
	add.s64 	%rd13299, %rd13298, %rd107;
	add.s64 	%rd13300, %rd13299, %rd11476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10774,%dummy}, %rd13287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10775}, %rd13287;
	}
	shf.r.wrap.b32 	%r10776, %r10775, %r10774, 28;
	shf.r.wrap.b32 	%r10777, %r10774, %r10775, 28;
	mov.b64 	%rd13301, {%r10777, %r10776};
	shf.l.wrap.b32 	%r10778, %r10774, %r10775, 30;
	shf.l.wrap.b32 	%r10779, %r10775, %r10774, 30;
	mov.b64 	%rd13302, {%r10779, %r10778};
	xor.b64  	%rd13303, %rd13301, %rd13302;
	shf.l.wrap.b32 	%r10780, %r10774, %r10775, 25;
	shf.l.wrap.b32 	%r10781, %r10775, %r10774, 25;
	mov.b64 	%rd13304, {%r10781, %r10780};
	xor.b64  	%rd13305, %rd13303, %rd13304;
	xor.b64  	%rd13306, %rd13262, %rd13237;
	and.b64  	%rd13307, %rd13287, %rd13306;
	and.b64  	%rd13308, %rd13262, %rd13237;
	xor.b64  	%rd13309, %rd13307, %rd13308;
	add.s64 	%rd13310, %rd13305, %rd13309;
	add.s64 	%rd13311, %rd13300, %rd13212;
	add.s64 	%rd13312, %rd13310, %rd13300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10782,%dummy}, %rd13311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10783}, %rd13311;
	}
	shf.r.wrap.b32 	%r10784, %r10783, %r10782, 14;
	shf.r.wrap.b32 	%r10785, %r10782, %r10783, 14;
	mov.b64 	%rd13313, {%r10785, %r10784};
	shf.r.wrap.b32 	%r10786, %r10783, %r10782, 18;
	shf.r.wrap.b32 	%r10787, %r10782, %r10783, 18;
	mov.b64 	%rd13314, {%r10787, %r10786};
	xor.b64  	%rd13315, %rd13313, %rd13314;
	shf.l.wrap.b32 	%r10788, %r10782, %r10783, 23;
	shf.l.wrap.b32 	%r10789, %r10783, %r10782, 23;
	mov.b64 	%rd13316, {%r10789, %r10788};
	xor.b64  	%rd13317, %rd13315, %rd13316;
	and.b64  	%rd13318, %rd13311, %rd13286;
	not.b64 	%rd13319, %rd13311;
	and.b64  	%rd13320, %rd13261, %rd13319;
	or.b64  	%rd13321, %rd13318, %rd13320;
	add.s64 	%rd13322, %rd13321, %rd13236;
	add.s64 	%rd13323, %rd13322, %rd13317;
	add.s64 	%rd13324, %rd13323, %rd108;
	add.s64 	%rd13325, %rd13324, %rd11489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10790,%dummy}, %rd13312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10791}, %rd13312;
	}
	shf.r.wrap.b32 	%r10792, %r10791, %r10790, 28;
	shf.r.wrap.b32 	%r10793, %r10790, %r10791, 28;
	mov.b64 	%rd13326, {%r10793, %r10792};
	shf.l.wrap.b32 	%r10794, %r10790, %r10791, 30;
	shf.l.wrap.b32 	%r10795, %r10791, %r10790, 30;
	mov.b64 	%rd13327, {%r10795, %r10794};
	xor.b64  	%rd13328, %rd13326, %rd13327;
	shf.l.wrap.b32 	%r10796, %r10790, %r10791, 25;
	shf.l.wrap.b32 	%r10797, %r10791, %r10790, 25;
	mov.b64 	%rd13329, {%r10797, %r10796};
	xor.b64  	%rd13330, %rd13328, %rd13329;
	xor.b64  	%rd13331, %rd13287, %rd13262;
	and.b64  	%rd13332, %rd13312, %rd13331;
	and.b64  	%rd13333, %rd13287, %rd13262;
	xor.b64  	%rd13334, %rd13332, %rd13333;
	add.s64 	%rd13335, %rd13330, %rd13334;
	add.s64 	%rd13336, %rd13325, %rd13237;
	add.s64 	%rd13337, %rd13335, %rd13325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10798,%dummy}, %rd13336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10799}, %rd13336;
	}
	shf.r.wrap.b32 	%r10800, %r10799, %r10798, 14;
	shf.r.wrap.b32 	%r10801, %r10798, %r10799, 14;
	mov.b64 	%rd13338, {%r10801, %r10800};
	shf.r.wrap.b32 	%r10802, %r10799, %r10798, 18;
	shf.r.wrap.b32 	%r10803, %r10798, %r10799, 18;
	mov.b64 	%rd13339, {%r10803, %r10802};
	xor.b64  	%rd13340, %rd13338, %rd13339;
	shf.l.wrap.b32 	%r10804, %r10798, %r10799, 23;
	shf.l.wrap.b32 	%r10805, %r10799, %r10798, 23;
	mov.b64 	%rd13341, {%r10805, %r10804};
	xor.b64  	%rd13342, %rd13340, %rd13341;
	and.b64  	%rd13343, %rd13336, %rd13311;
	not.b64 	%rd13344, %rd13336;
	and.b64  	%rd13345, %rd13286, %rd13344;
	or.b64  	%rd13346, %rd13343, %rd13345;
	add.s64 	%rd13347, %rd13346, %rd13261;
	add.s64 	%rd13348, %rd13347, %rd13342;
	add.s64 	%rd13349, %rd13348, %rd109;
	add.s64 	%rd13350, %rd13349, %rd11502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10806,%dummy}, %rd13337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10807}, %rd13337;
	}
	shf.r.wrap.b32 	%r10808, %r10807, %r10806, 28;
	shf.r.wrap.b32 	%r10809, %r10806, %r10807, 28;
	mov.b64 	%rd13351, {%r10809, %r10808};
	shf.l.wrap.b32 	%r10810, %r10806, %r10807, 30;
	shf.l.wrap.b32 	%r10811, %r10807, %r10806, 30;
	mov.b64 	%rd13352, {%r10811, %r10810};
	xor.b64  	%rd13353, %rd13351, %rd13352;
	shf.l.wrap.b32 	%r10812, %r10806, %r10807, 25;
	shf.l.wrap.b32 	%r10813, %r10807, %r10806, 25;
	mov.b64 	%rd13354, {%r10813, %r10812};
	xor.b64  	%rd13355, %rd13353, %rd13354;
	xor.b64  	%rd13356, %rd13312, %rd13287;
	and.b64  	%rd13357, %rd13337, %rd13356;
	and.b64  	%rd13358, %rd13312, %rd13287;
	xor.b64  	%rd13359, %rd13357, %rd13358;
	add.s64 	%rd13360, %rd13355, %rd13359;
	add.s64 	%rd13361, %rd13350, %rd13262;
	add.s64 	%rd13362, %rd13360, %rd13350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10814,%dummy}, %rd13361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10815}, %rd13361;
	}
	shf.r.wrap.b32 	%r10816, %r10815, %r10814, 14;
	shf.r.wrap.b32 	%r10817, %r10814, %r10815, 14;
	mov.b64 	%rd13363, {%r10817, %r10816};
	shf.r.wrap.b32 	%r10818, %r10815, %r10814, 18;
	shf.r.wrap.b32 	%r10819, %r10814, %r10815, 18;
	mov.b64 	%rd13364, {%r10819, %r10818};
	xor.b64  	%rd13365, %rd13363, %rd13364;
	shf.l.wrap.b32 	%r10820, %r10814, %r10815, 23;
	shf.l.wrap.b32 	%r10821, %r10815, %r10814, 23;
	mov.b64 	%rd13366, {%r10821, %r10820};
	xor.b64  	%rd13367, %rd13365, %rd13366;
	and.b64  	%rd13368, %rd13361, %rd13336;
	not.b64 	%rd13369, %rd13361;
	and.b64  	%rd13370, %rd13311, %rd13369;
	or.b64  	%rd13371, %rd13368, %rd13370;
	add.s64 	%rd13372, %rd13371, %rd13286;
	add.s64 	%rd13373, %rd13372, %rd13367;
	add.s64 	%rd13374, %rd13373, %rd110;
	add.s64 	%rd13375, %rd13374, %rd11515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10822,%dummy}, %rd13362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10823}, %rd13362;
	}
	shf.r.wrap.b32 	%r10824, %r10823, %r10822, 28;
	shf.r.wrap.b32 	%r10825, %r10822, %r10823, 28;
	mov.b64 	%rd13376, {%r10825, %r10824};
	shf.l.wrap.b32 	%r10826, %r10822, %r10823, 30;
	shf.l.wrap.b32 	%r10827, %r10823, %r10822, 30;
	mov.b64 	%rd13377, {%r10827, %r10826};
	xor.b64  	%rd13378, %rd13376, %rd13377;
	shf.l.wrap.b32 	%r10828, %r10822, %r10823, 25;
	shf.l.wrap.b32 	%r10829, %r10823, %r10822, 25;
	mov.b64 	%rd13379, {%r10829, %r10828};
	xor.b64  	%rd13380, %rd13378, %rd13379;
	xor.b64  	%rd13381, %rd13337, %rd13312;
	and.b64  	%rd13382, %rd13362, %rd13381;
	and.b64  	%rd13383, %rd13337, %rd13312;
	xor.b64  	%rd13384, %rd13382, %rd13383;
	add.s64 	%rd13385, %rd13380, %rd13384;
	add.s64 	%rd13386, %rd13375, %rd13287;
	add.s64 	%rd13387, %rd13385, %rd13375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10830,%dummy}, %rd13386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10831}, %rd13386;
	}
	shf.r.wrap.b32 	%r10832, %r10831, %r10830, 14;
	shf.r.wrap.b32 	%r10833, %r10830, %r10831, 14;
	mov.b64 	%rd13388, {%r10833, %r10832};
	shf.r.wrap.b32 	%r10834, %r10831, %r10830, 18;
	shf.r.wrap.b32 	%r10835, %r10830, %r10831, 18;
	mov.b64 	%rd13389, {%r10835, %r10834};
	xor.b64  	%rd13390, %rd13388, %rd13389;
	shf.l.wrap.b32 	%r10836, %r10830, %r10831, 23;
	shf.l.wrap.b32 	%r10837, %r10831, %r10830, 23;
	mov.b64 	%rd13391, {%r10837, %r10836};
	xor.b64  	%rd13392, %rd13390, %rd13391;
	and.b64  	%rd13393, %rd13386, %rd13361;
	not.b64 	%rd13394, %rd13386;
	and.b64  	%rd13395, %rd13336, %rd13394;
	or.b64  	%rd13396, %rd13393, %rd13395;
	add.s64 	%rd13397, %rd13396, %rd13311;
	add.s64 	%rd13398, %rd13397, %rd13392;
	add.s64 	%rd13399, %rd13398, %rd15518;
	add.s64 	%rd13400, %rd13399, %rd11528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10838,%dummy}, %rd13387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10839}, %rd13387;
	}
	shf.r.wrap.b32 	%r10840, %r10839, %r10838, 28;
	shf.r.wrap.b32 	%r10841, %r10838, %r10839, 28;
	mov.b64 	%rd13401, {%r10841, %r10840};
	shf.l.wrap.b32 	%r10842, %r10838, %r10839, 30;
	shf.l.wrap.b32 	%r10843, %r10839, %r10838, 30;
	mov.b64 	%rd13402, {%r10843, %r10842};
	xor.b64  	%rd13403, %rd13401, %rd13402;
	shf.l.wrap.b32 	%r10844, %r10838, %r10839, 25;
	shf.l.wrap.b32 	%r10845, %r10839, %r10838, 25;
	mov.b64 	%rd13404, {%r10845, %r10844};
	xor.b64  	%rd13405, %rd13403, %rd13404;
	xor.b64  	%rd13406, %rd13362, %rd13337;
	and.b64  	%rd13407, %rd13387, %rd13406;
	and.b64  	%rd13408, %rd13362, %rd13337;
	xor.b64  	%rd13409, %rd13407, %rd13408;
	add.s64 	%rd13410, %rd13405, %rd13409;
	add.s64 	%rd13411, %rd13400, %rd13312;
	add.s64 	%rd13412, %rd13410, %rd13400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10846,%dummy}, %rd13411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10847}, %rd13411;
	}
	shf.r.wrap.b32 	%r10848, %r10847, %r10846, 14;
	shf.r.wrap.b32 	%r10849, %r10846, %r10847, 14;
	mov.b64 	%rd13413, {%r10849, %r10848};
	shf.r.wrap.b32 	%r10850, %r10847, %r10846, 18;
	shf.r.wrap.b32 	%r10851, %r10846, %r10847, 18;
	mov.b64 	%rd13414, {%r10851, %r10850};
	xor.b64  	%rd13415, %rd13413, %rd13414;
	shf.l.wrap.b32 	%r10852, %r10846, %r10847, 23;
	shf.l.wrap.b32 	%r10853, %r10847, %r10846, 23;
	mov.b64 	%rd13416, {%r10853, %r10852};
	xor.b64  	%rd13417, %rd13415, %rd13416;
	and.b64  	%rd13418, %rd13411, %rd13386;
	not.b64 	%rd13419, %rd13411;
	and.b64  	%rd13420, %rd13361, %rd13419;
	or.b64  	%rd13421, %rd13418, %rd13420;
	add.s64 	%rd13422, %rd13421, %rd13336;
	add.s64 	%rd13423, %rd13422, %rd13417;
	add.s64 	%rd13424, %rd13423, %rd15517;
	add.s64 	%rd13425, %rd13424, %rd11541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10854,%dummy}, %rd13412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10855}, %rd13412;
	}
	shf.r.wrap.b32 	%r10856, %r10855, %r10854, 28;
	shf.r.wrap.b32 	%r10857, %r10854, %r10855, 28;
	mov.b64 	%rd13426, {%r10857, %r10856};
	shf.l.wrap.b32 	%r10858, %r10854, %r10855, 30;
	shf.l.wrap.b32 	%r10859, %r10855, %r10854, 30;
	mov.b64 	%rd13427, {%r10859, %r10858};
	xor.b64  	%rd13428, %rd13426, %rd13427;
	shf.l.wrap.b32 	%r10860, %r10854, %r10855, 25;
	shf.l.wrap.b32 	%r10861, %r10855, %r10854, 25;
	mov.b64 	%rd13429, {%r10861, %r10860};
	xor.b64  	%rd13430, %rd13428, %rd13429;
	xor.b64  	%rd13431, %rd13387, %rd13362;
	and.b64  	%rd13432, %rd13412, %rd13431;
	and.b64  	%rd13433, %rd13387, %rd13362;
	xor.b64  	%rd13434, %rd13432, %rd13433;
	add.s64 	%rd13435, %rd13430, %rd13434;
	add.s64 	%rd13436, %rd13425, %rd13337;
	add.s64 	%rd13437, %rd13435, %rd13425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10862,%dummy}, %rd13436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10863}, %rd13436;
	}
	shf.r.wrap.b32 	%r10864, %r10863, %r10862, 14;
	shf.r.wrap.b32 	%r10865, %r10862, %r10863, 14;
	mov.b64 	%rd13438, {%r10865, %r10864};
	shf.r.wrap.b32 	%r10866, %r10863, %r10862, 18;
	shf.r.wrap.b32 	%r10867, %r10862, %r10863, 18;
	mov.b64 	%rd13439, {%r10867, %r10866};
	xor.b64  	%rd13440, %rd13438, %rd13439;
	shf.l.wrap.b32 	%r10868, %r10862, %r10863, 23;
	shf.l.wrap.b32 	%r10869, %r10863, %r10862, 23;
	mov.b64 	%rd13441, {%r10869, %r10868};
	xor.b64  	%rd13442, %rd13440, %rd13441;
	and.b64  	%rd13443, %rd13436, %rd13411;
	not.b64 	%rd13444, %rd13436;
	and.b64  	%rd13445, %rd13386, %rd13444;
	or.b64  	%rd13446, %rd13443, %rd13445;
	add.s64 	%rd13447, %rd13446, %rd13361;
	add.s64 	%rd13448, %rd13447, %rd13442;
	add.s64 	%rd13449, %rd13448, %rd15516;
	add.s64 	%rd13450, %rd13449, %rd11554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10870,%dummy}, %rd13437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10871}, %rd13437;
	}
	shf.r.wrap.b32 	%r10872, %r10871, %r10870, 28;
	shf.r.wrap.b32 	%r10873, %r10870, %r10871, 28;
	mov.b64 	%rd13451, {%r10873, %r10872};
	shf.l.wrap.b32 	%r10874, %r10870, %r10871, 30;
	shf.l.wrap.b32 	%r10875, %r10871, %r10870, 30;
	mov.b64 	%rd13452, {%r10875, %r10874};
	xor.b64  	%rd13453, %rd13451, %rd13452;
	shf.l.wrap.b32 	%r10876, %r10870, %r10871, 25;
	shf.l.wrap.b32 	%r10877, %r10871, %r10870, 25;
	mov.b64 	%rd13454, {%r10877, %r10876};
	xor.b64  	%rd13455, %rd13453, %rd13454;
	xor.b64  	%rd13456, %rd13412, %rd13387;
	and.b64  	%rd13457, %rd13437, %rd13456;
	and.b64  	%rd13458, %rd13412, %rd13387;
	xor.b64  	%rd13459, %rd13457, %rd13458;
	add.s64 	%rd13460, %rd13455, %rd13459;
	add.s64 	%rd13461, %rd13450, %rd13362;
	add.s64 	%rd13462, %rd13460, %rd13450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10878,%dummy}, %rd13461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10879}, %rd13461;
	}
	shf.r.wrap.b32 	%r10880, %r10879, %r10878, 14;
	shf.r.wrap.b32 	%r10881, %r10878, %r10879, 14;
	mov.b64 	%rd13463, {%r10881, %r10880};
	shf.r.wrap.b32 	%r10882, %r10879, %r10878, 18;
	shf.r.wrap.b32 	%r10883, %r10878, %r10879, 18;
	mov.b64 	%rd13464, {%r10883, %r10882};
	xor.b64  	%rd13465, %rd13463, %rd13464;
	shf.l.wrap.b32 	%r10884, %r10878, %r10879, 23;
	shf.l.wrap.b32 	%r10885, %r10879, %r10878, 23;
	mov.b64 	%rd13466, {%r10885, %r10884};
	xor.b64  	%rd13467, %rd13465, %rd13466;
	and.b64  	%rd13468, %rd13461, %rd13436;
	not.b64 	%rd13469, %rd13461;
	and.b64  	%rd13470, %rd13411, %rd13469;
	or.b64  	%rd13471, %rd13468, %rd13470;
	add.s64 	%rd13472, %rd13471, %rd13386;
	add.s64 	%rd13473, %rd13472, %rd13467;
	add.s64 	%rd13474, %rd13473, %rd114;
	add.s64 	%rd13475, %rd13474, %rd11567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10886,%dummy}, %rd13462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10887}, %rd13462;
	}
	shf.r.wrap.b32 	%r10888, %r10887, %r10886, 28;
	shf.r.wrap.b32 	%r10889, %r10886, %r10887, 28;
	mov.b64 	%rd13476, {%r10889, %r10888};
	shf.l.wrap.b32 	%r10890, %r10886, %r10887, 30;
	shf.l.wrap.b32 	%r10891, %r10887, %r10886, 30;
	mov.b64 	%rd13477, {%r10891, %r10890};
	xor.b64  	%rd13478, %rd13476, %rd13477;
	shf.l.wrap.b32 	%r10892, %r10886, %r10887, 25;
	shf.l.wrap.b32 	%r10893, %r10887, %r10886, 25;
	mov.b64 	%rd13479, {%r10893, %r10892};
	xor.b64  	%rd13480, %rd13478, %rd13479;
	xor.b64  	%rd13481, %rd13437, %rd13412;
	and.b64  	%rd13482, %rd13462, %rd13481;
	and.b64  	%rd13483, %rd13437, %rd13412;
	xor.b64  	%rd13484, %rd13482, %rd13483;
	add.s64 	%rd13485, %rd13480, %rd13484;
	add.s64 	%rd13486, %rd13475, %rd13387;
	add.s64 	%rd13487, %rd13485, %rd13475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10894,%dummy}, %rd13486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10895}, %rd13486;
	}
	shf.r.wrap.b32 	%r10896, %r10895, %r10894, 14;
	shf.r.wrap.b32 	%r10897, %r10894, %r10895, 14;
	mov.b64 	%rd13488, {%r10897, %r10896};
	shf.r.wrap.b32 	%r10898, %r10895, %r10894, 18;
	shf.r.wrap.b32 	%r10899, %r10894, %r10895, 18;
	mov.b64 	%rd13489, {%r10899, %r10898};
	xor.b64  	%rd13490, %rd13488, %rd13489;
	shf.l.wrap.b32 	%r10900, %r10894, %r10895, 23;
	shf.l.wrap.b32 	%r10901, %r10895, %r10894, 23;
	mov.b64 	%rd13491, {%r10901, %r10900};
	xor.b64  	%rd13492, %rd13490, %rd13491;
	and.b64  	%rd13493, %rd13486, %rd13461;
	not.b64 	%rd13494, %rd13486;
	and.b64  	%rd13495, %rd13436, %rd13494;
	or.b64  	%rd13496, %rd13493, %rd13495;
	add.s64 	%rd13497, %rd13496, %rd13411;
	add.s64 	%rd13498, %rd13497, %rd13492;
	add.s64 	%rd13499, %rd13498, %rd115;
	add.s64 	%rd13500, %rd13499, %rd11580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10902,%dummy}, %rd13487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10903}, %rd13487;
	}
	shf.r.wrap.b32 	%r10904, %r10903, %r10902, 28;
	shf.r.wrap.b32 	%r10905, %r10902, %r10903, 28;
	mov.b64 	%rd13501, {%r10905, %r10904};
	shf.l.wrap.b32 	%r10906, %r10902, %r10903, 30;
	shf.l.wrap.b32 	%r10907, %r10903, %r10902, 30;
	mov.b64 	%rd13502, {%r10907, %r10906};
	xor.b64  	%rd13503, %rd13501, %rd13502;
	shf.l.wrap.b32 	%r10908, %r10902, %r10903, 25;
	shf.l.wrap.b32 	%r10909, %r10903, %r10902, 25;
	mov.b64 	%rd13504, {%r10909, %r10908};
	xor.b64  	%rd13505, %rd13503, %rd13504;
	xor.b64  	%rd13506, %rd13462, %rd13437;
	and.b64  	%rd13507, %rd13487, %rd13506;
	and.b64  	%rd13508, %rd13462, %rd13437;
	xor.b64  	%rd13509, %rd13507, %rd13508;
	add.s64 	%rd13510, %rd13505, %rd13509;
	add.s64 	%rd13511, %rd13500, %rd13412;
	add.s64 	%rd13512, %rd13510, %rd13500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10910,%dummy}, %rd13511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10911}, %rd13511;
	}
	shf.r.wrap.b32 	%r10912, %r10911, %r10910, 14;
	shf.r.wrap.b32 	%r10913, %r10910, %r10911, 14;
	mov.b64 	%rd13513, {%r10913, %r10912};
	shf.r.wrap.b32 	%r10914, %r10911, %r10910, 18;
	shf.r.wrap.b32 	%r10915, %r10910, %r10911, 18;
	mov.b64 	%rd13514, {%r10915, %r10914};
	xor.b64  	%rd13515, %rd13513, %rd13514;
	shf.l.wrap.b32 	%r10916, %r10910, %r10911, 23;
	shf.l.wrap.b32 	%r10917, %r10911, %r10910, 23;
	mov.b64 	%rd13516, {%r10917, %r10916};
	xor.b64  	%rd13517, %rd13515, %rd13516;
	and.b64  	%rd13518, %rd13511, %rd13486;
	not.b64 	%rd13519, %rd13511;
	and.b64  	%rd13520, %rd13461, %rd13519;
	or.b64  	%rd13521, %rd13518, %rd13520;
	add.s64 	%rd13522, %rd13521, %rd13436;
	add.s64 	%rd13523, %rd13522, %rd13517;
	add.s64 	%rd13524, %rd13523, %rd116;
	add.s64 	%rd13525, %rd13524, %rd11593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10918,%dummy}, %rd13512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10919}, %rd13512;
	}
	shf.r.wrap.b32 	%r10920, %r10919, %r10918, 28;
	shf.r.wrap.b32 	%r10921, %r10918, %r10919, 28;
	mov.b64 	%rd13526, {%r10921, %r10920};
	shf.l.wrap.b32 	%r10922, %r10918, %r10919, 30;
	shf.l.wrap.b32 	%r10923, %r10919, %r10918, 30;
	mov.b64 	%rd13527, {%r10923, %r10922};
	xor.b64  	%rd13528, %rd13526, %rd13527;
	shf.l.wrap.b32 	%r10924, %r10918, %r10919, 25;
	shf.l.wrap.b32 	%r10925, %r10919, %r10918, 25;
	mov.b64 	%rd13529, {%r10925, %r10924};
	xor.b64  	%rd13530, %rd13528, %rd13529;
	xor.b64  	%rd13531, %rd13487, %rd13462;
	and.b64  	%rd13532, %rd13512, %rd13531;
	and.b64  	%rd13533, %rd13487, %rd13462;
	xor.b64  	%rd13534, %rd13532, %rd13533;
	add.s64 	%rd13535, %rd13530, %rd13534;
	add.s64 	%rd13536, %rd13525, %rd13437;
	add.s64 	%rd13537, %rd13535, %rd13525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10926,%dummy}, %rd13536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10927}, %rd13536;
	}
	shf.r.wrap.b32 	%r10928, %r10927, %r10926, 14;
	shf.r.wrap.b32 	%r10929, %r10926, %r10927, 14;
	mov.b64 	%rd13538, {%r10929, %r10928};
	shf.r.wrap.b32 	%r10930, %r10927, %r10926, 18;
	shf.r.wrap.b32 	%r10931, %r10926, %r10927, 18;
	mov.b64 	%rd13539, {%r10931, %r10930};
	xor.b64  	%rd13540, %rd13538, %rd13539;
	shf.l.wrap.b32 	%r10932, %r10926, %r10927, 23;
	shf.l.wrap.b32 	%r10933, %r10927, %r10926, 23;
	mov.b64 	%rd13541, {%r10933, %r10932};
	xor.b64  	%rd13542, %rd13540, %rd13541;
	and.b64  	%rd13543, %rd13536, %rd13511;
	not.b64 	%rd13544, %rd13536;
	and.b64  	%rd13545, %rd13486, %rd13544;
	or.b64  	%rd13546, %rd13543, %rd13545;
	add.s64 	%rd13547, %rd13546, %rd13461;
	add.s64 	%rd13548, %rd13547, %rd13542;
	add.s64 	%rd13549, %rd13548, %rd117;
	add.s64 	%rd13550, %rd13549, %rd11606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10934,%dummy}, %rd13537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10935}, %rd13537;
	}
	shf.r.wrap.b32 	%r10936, %r10935, %r10934, 28;
	shf.r.wrap.b32 	%r10937, %r10934, %r10935, 28;
	mov.b64 	%rd13551, {%r10937, %r10936};
	shf.l.wrap.b32 	%r10938, %r10934, %r10935, 30;
	shf.l.wrap.b32 	%r10939, %r10935, %r10934, 30;
	mov.b64 	%rd13552, {%r10939, %r10938};
	xor.b64  	%rd13553, %rd13551, %rd13552;
	shf.l.wrap.b32 	%r10940, %r10934, %r10935, 25;
	shf.l.wrap.b32 	%r10941, %r10935, %r10934, 25;
	mov.b64 	%rd13554, {%r10941, %r10940};
	xor.b64  	%rd13555, %rd13553, %rd13554;
	xor.b64  	%rd13556, %rd13512, %rd13487;
	and.b64  	%rd13557, %rd13537, %rd13556;
	and.b64  	%rd13558, %rd13512, %rd13487;
	xor.b64  	%rd13559, %rd13557, %rd13558;
	add.s64 	%rd13560, %rd13555, %rd13559;
	add.s64 	%rd13561, %rd13550, %rd13462;
	add.s64 	%rd13562, %rd13560, %rd13550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10942,%dummy}, %rd13561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10943}, %rd13561;
	}
	shf.r.wrap.b32 	%r10944, %r10943, %r10942, 14;
	shf.r.wrap.b32 	%r10945, %r10942, %r10943, 14;
	mov.b64 	%rd13563, {%r10945, %r10944};
	shf.r.wrap.b32 	%r10946, %r10943, %r10942, 18;
	shf.r.wrap.b32 	%r10947, %r10942, %r10943, 18;
	mov.b64 	%rd13564, {%r10947, %r10946};
	xor.b64  	%rd13565, %rd13563, %rd13564;
	shf.l.wrap.b32 	%r10948, %r10942, %r10943, 23;
	shf.l.wrap.b32 	%r10949, %r10943, %r10942, 23;
	mov.b64 	%rd13566, {%r10949, %r10948};
	xor.b64  	%rd13567, %rd13565, %rd13566;
	and.b64  	%rd13568, %rd13561, %rd13536;
	not.b64 	%rd13569, %rd13561;
	and.b64  	%rd13570, %rd13511, %rd13569;
	or.b64  	%rd13571, %rd13568, %rd13570;
	add.s64 	%rd13572, %rd13571, %rd13486;
	add.s64 	%rd13573, %rd13572, %rd13567;
	add.s64 	%rd13574, %rd13573, %rd118;
	add.s64 	%rd13575, %rd13574, %rd11619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10950,%dummy}, %rd13562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10951}, %rd13562;
	}
	shf.r.wrap.b32 	%r10952, %r10951, %r10950, 28;
	shf.r.wrap.b32 	%r10953, %r10950, %r10951, 28;
	mov.b64 	%rd13576, {%r10953, %r10952};
	shf.l.wrap.b32 	%r10954, %r10950, %r10951, 30;
	shf.l.wrap.b32 	%r10955, %r10951, %r10950, 30;
	mov.b64 	%rd13577, {%r10955, %r10954};
	xor.b64  	%rd13578, %rd13576, %rd13577;
	shf.l.wrap.b32 	%r10956, %r10950, %r10951, 25;
	shf.l.wrap.b32 	%r10957, %r10951, %r10950, 25;
	mov.b64 	%rd13579, {%r10957, %r10956};
	xor.b64  	%rd13580, %rd13578, %rd13579;
	xor.b64  	%rd13581, %rd13537, %rd13512;
	and.b64  	%rd13582, %rd13562, %rd13581;
	and.b64  	%rd13583, %rd13537, %rd13512;
	xor.b64  	%rd13584, %rd13582, %rd13583;
	add.s64 	%rd13585, %rd13580, %rd13584;
	add.s64 	%rd13586, %rd13575, %rd13487;
	add.s64 	%rd13587, %rd13585, %rd13575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10958,%dummy}, %rd13586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10959}, %rd13586;
	}
	shf.r.wrap.b32 	%r10960, %r10959, %r10958, 14;
	shf.r.wrap.b32 	%r10961, %r10958, %r10959, 14;
	mov.b64 	%rd13588, {%r10961, %r10960};
	shf.r.wrap.b32 	%r10962, %r10959, %r10958, 18;
	shf.r.wrap.b32 	%r10963, %r10958, %r10959, 18;
	mov.b64 	%rd13589, {%r10963, %r10962};
	xor.b64  	%rd13590, %rd13588, %rd13589;
	shf.l.wrap.b32 	%r10964, %r10958, %r10959, 23;
	shf.l.wrap.b32 	%r10965, %r10959, %r10958, 23;
	mov.b64 	%rd13591, {%r10965, %r10964};
	xor.b64  	%rd13592, %rd13590, %rd13591;
	and.b64  	%rd13593, %rd13586, %rd13561;
	not.b64 	%rd13594, %rd13586;
	and.b64  	%rd13595, %rd13536, %rd13594;
	or.b64  	%rd13596, %rd13593, %rd13595;
	add.s64 	%rd13597, %rd13596, %rd13511;
	add.s64 	%rd13598, %rd13597, %rd13592;
	add.s64 	%rd13599, %rd13598, %rd119;
	add.s64 	%rd13600, %rd13599, %rd11632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10966,%dummy}, %rd13587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10967}, %rd13587;
	}
	shf.r.wrap.b32 	%r10968, %r10967, %r10966, 28;
	shf.r.wrap.b32 	%r10969, %r10966, %r10967, 28;
	mov.b64 	%rd13601, {%r10969, %r10968};
	shf.l.wrap.b32 	%r10970, %r10966, %r10967, 30;
	shf.l.wrap.b32 	%r10971, %r10967, %r10966, 30;
	mov.b64 	%rd13602, {%r10971, %r10970};
	xor.b64  	%rd13603, %rd13601, %rd13602;
	shf.l.wrap.b32 	%r10972, %r10966, %r10967, 25;
	shf.l.wrap.b32 	%r10973, %r10967, %r10966, 25;
	mov.b64 	%rd13604, {%r10973, %r10972};
	xor.b64  	%rd13605, %rd13603, %rd13604;
	xor.b64  	%rd13606, %rd13562, %rd13537;
	and.b64  	%rd13607, %rd13587, %rd13606;
	and.b64  	%rd13608, %rd13562, %rd13537;
	xor.b64  	%rd13609, %rd13607, %rd13608;
	add.s64 	%rd13610, %rd13605, %rd13609;
	add.s64 	%rd13611, %rd13610, %rd13600;
	add.s64 	%rd13612, %rd13611, 7640891576956012808;
	add.s64 	%rd13613, %rd13587, -4942790177534073029;
	add.s64 	%rd13614, %rd13562, 4354685564936845355;
	add.s64 	%rd13615, %rd13537, -6534734903238641935;
	shr.u64 	%rd13616, %rd13612, 56;
	cvt.u16.u64 	%rs996, %rd13616;
	shr.u64 	%rd13617, %rd13612, 48;
	cvt.u16.u64 	%rs997, %rd13617;
	shr.u64 	%rd13618, %rd13612, 40;
	cvt.u16.u64 	%rs998, %rd13618;
	shr.u64 	%rd13619, %rd13612, 32;
	cvt.u16.u64 	%rs999, %rd13619;
	shr.u64 	%rd13620, %rd13612, 24;
	cvt.u16.u64 	%rs1000, %rd13620;
	shr.u64 	%rd13621, %rd13612, 16;
	cvt.u16.u64 	%rs1001, %rd13621;
	shr.u64 	%rd13622, %rd13612, 8;
	cvt.u16.u64 	%rs1002, %rd13622;
	cvt.u16.u64 	%rs1003, %rd13612;
	shr.u64 	%rd13623, %rd13613, 56;
	cvt.u16.u64 	%rs1004, %rd13623;
	shr.u64 	%rd13624, %rd13613, 48;
	cvt.u16.u64 	%rs1005, %rd13624;
	shr.u64 	%rd13625, %rd13613, 40;
	cvt.u16.u64 	%rs1006, %rd13625;
	shr.u64 	%rd13626, %rd13613, 32;
	cvt.u16.u64 	%rs1007, %rd13626;
	shr.u64 	%rd13627, %rd13613, 24;
	cvt.u16.u64 	%rs1008, %rd13627;
	shr.u64 	%rd13628, %rd13613, 16;
	cvt.u16.u64 	%rs1009, %rd13628;
	shr.u64 	%rd13629, %rd13613, 8;
	cvt.u16.u64 	%rs1010, %rd13629;
	cvt.u16.u64 	%rs1011, %rd13613;
	shr.u64 	%rd13630, %rd13614, 56;
	cvt.u16.u64 	%rs1012, %rd13630;
	shr.u64 	%rd13631, %rd13614, 48;
	cvt.u16.u64 	%rs1013, %rd13631;
	shr.u64 	%rd13632, %rd13614, 40;
	cvt.u16.u64 	%rs1014, %rd13632;
	shr.u64 	%rd13633, %rd13614, 32;
	cvt.u16.u64 	%rs1015, %rd13633;
	shr.u64 	%rd13634, %rd13614, 24;
	cvt.u16.u64 	%rs1016, %rd13634;
	shr.u64 	%rd13635, %rd13614, 16;
	cvt.u16.u64 	%rs1017, %rd13635;
	shr.u64 	%rd13636, %rd13614, 8;
	cvt.u16.u64 	%rs1018, %rd13636;
	cvt.u16.u64 	%rs1019, %rd13614;
	shr.u64 	%rd13637, %rd13615, 56;
	cvt.u16.u64 	%rs1020, %rd13637;
	shr.u64 	%rd13638, %rd13615, 48;
	cvt.u16.u64 	%rs1021, %rd13638;
	shr.u64 	%rd13639, %rd13615, 40;
	cvt.u16.u64 	%rs1022, %rd13639;
	shr.u64 	%rd13640, %rd13615, 32;
	cvt.u16.u64 	%rs1023, %rd13640;
	shr.u64 	%rd13641, %rd13615, 24;
	cvt.u16.u64 	%rs1024, %rd13641;
	shr.u64 	%rd13642, %rd13615, 16;
	cvt.u16.u64 	%rs1025, %rd13642;
	shr.u64 	%rd13643, %rd13615, 8;
	cvt.u16.u64 	%rs1026, %rd13643;
	cvt.u16.u64 	%rs1027, %rd13615;
	xor.b16  	%rs1162, %rs1162, %rs996;
	xor.b16  	%rs1161, %rs1161, %rs997;
	xor.b16  	%rs1160, %rs1160, %rs998;
	xor.b16  	%rs1159, %rs1159, %rs999;
	xor.b16  	%rs1158, %rs1158, %rs1000;
	xor.b16  	%rs1157, %rs1157, %rs1001;
	xor.b16  	%rs1156, %rs1156, %rs1002;
	xor.b16  	%rs1155, %rs1155, %rs1003;
	xor.b16  	%rs1154, %rs1154, %rs1004;
	xor.b16  	%rs1153, %rs1153, %rs1005;
	xor.b16  	%rs1152, %rs1152, %rs1006;
	xor.b16  	%rs1151, %rs1151, %rs1007;
	xor.b16  	%rs1150, %rs1150, %rs1008;
	xor.b16  	%rs1149, %rs1149, %rs1009;
	xor.b16  	%rs1148, %rs1148, %rs1010;
	xor.b16  	%rs1147, %rs1147, %rs1011;
	xor.b16  	%rs1146, %rs1146, %rs1012;
	xor.b16  	%rs1145, %rs1145, %rs1013;
	xor.b16  	%rs1144, %rs1144, %rs1014;
	xor.b16  	%rs1143, %rs1143, %rs1015;
	xor.b16  	%rs1142, %rs1142, %rs1016;
	xor.b16  	%rs1141, %rs1141, %rs1017;
	xor.b16  	%rs1140, %rs1140, %rs1018;
	xor.b16  	%rs1139, %rs1139, %rs1019;
	xor.b16  	%rs1138, %rs1138, %rs1020;
	xor.b16  	%rs1137, %rs1137, %rs1021;
	xor.b16  	%rs1136, %rs1136, %rs1022;
	xor.b16  	%rs1135, %rs1135, %rs1023;
	xor.b16  	%rs1134, %rs1134, %rs1024;
	xor.b16  	%rs1133, %rs1133, %rs1025;
	xor.b16  	%rs1132, %rs1132, %rs1026;
	xor.b16  	%rs1131, %rs1131, %rs1027;
	add.s32 	%r11228, %r11228, 1;
	setp.lt.u32 	%p84, %r11228, 2048;
	@%p84 bra 	$L__BB4_94;

	cvt.u64.u16 	%rd13652, %rs1162;
	shl.b64 	%rd13653, %rd13652, 56;
	cvt.u64.u16 	%rd13654, %rs1161;
	shl.b64 	%rd13655, %rd13654, 48;
	and.b64  	%rd13656, %rd13655, 71776119061217280;
	or.b64  	%rd13657, %rd13656, %rd13653;
	cvt.u64.u16 	%rd13658, %rs1160;
	shl.b64 	%rd13659, %rd13658, 40;
	and.b64  	%rd13660, %rd13659, 280375465082880;
	or.b64  	%rd13661, %rd13657, %rd13660;
	cvt.u64.u16 	%rd13662, %rs1159;
	shl.b64 	%rd13663, %rd13662, 32;
	and.b64  	%rd13664, %rd13663, 1095216660480;
	or.b64  	%rd13665, %rd13661, %rd13664;
	cvt.u32.u16 	%r10975, %rs1158;
	and.b32  	%r10976, %r10975, 255;
	mul.wide.u32 	%rd13666, %r10976, 16777216;
	or.b64  	%rd13667, %rd13665, %rd13666;
	cvt.u32.u16 	%r10977, %rs1157;
	and.b32  	%r10978, %r10977, 255;
	mul.wide.u32 	%rd13668, %r10978, 65536;
	or.b64  	%rd13669, %rd13667, %rd13668;
	cvt.u32.u16 	%r10979, %rs1156;
	and.b32  	%r10980, %r10979, 255;
	mul.wide.u32 	%rd13670, %r10980, 256;
	or.b64  	%rd13671, %rd13669, %rd13670;
	cvt.u64.u16 	%rd13672, %rs1155;
	and.b64  	%rd13673, %rd13672, 255;
	cvt.u64.u16 	%rd13674, %rs1154;
	shl.b64 	%rd13675, %rd13674, 56;
	cvt.u64.u16 	%rd13676, %rs1153;
	shl.b64 	%rd13677, %rd13676, 48;
	and.b64  	%rd13678, %rd13677, 71776119061217280;
	or.b64  	%rd13679, %rd13678, %rd13675;
	cvt.u64.u16 	%rd13680, %rs1152;
	shl.b64 	%rd13681, %rd13680, 40;
	and.b64  	%rd13682, %rd13681, 280375465082880;
	or.b64  	%rd13683, %rd13679, %rd13682;
	cvt.u64.u16 	%rd13684, %rs1151;
	shl.b64 	%rd13685, %rd13684, 32;
	and.b64  	%rd13686, %rd13685, 1095216660480;
	or.b64  	%rd13687, %rd13683, %rd13686;
	cvt.u32.u16 	%r10981, %rs1150;
	and.b32  	%r10982, %r10981, 255;
	mul.wide.u32 	%rd13688, %r10982, 16777216;
	or.b64  	%rd13689, %rd13687, %rd13688;
	cvt.u32.u16 	%r10983, %rs1149;
	and.b32  	%r10984, %r10983, 255;
	mul.wide.u32 	%rd13690, %r10984, 65536;
	or.b64  	%rd13691, %rd13689, %rd13690;
	cvt.u32.u16 	%r10985, %rs1148;
	and.b32  	%r10986, %r10985, 255;
	mul.wide.u32 	%rd13692, %r10986, 256;
	or.b64  	%rd13693, %rd13691, %rd13692;
	cvt.u64.u16 	%rd13694, %rs1147;
	and.b64  	%rd13695, %rd13694, 255;
	mov.u64 	%rd15705, 0;
	or.b64  	%rd13696, %rd13693, %rd13695;
	or.b64  	%rd13697, %rd13671, %rd13673;
	add.u64 	%rd15713, %SPL, 0;
	st.local.v2.u64 	[%rd15713], {%rd13697, %rd13696};
	cvt.u64.u16 	%rd13699, %rs1146;
	shl.b64 	%rd13700, %rd13699, 56;
	cvt.u64.u16 	%rd13701, %rs1145;
	shl.b64 	%rd13702, %rd13701, 48;
	and.b64  	%rd13703, %rd13702, 71776119061217280;
	or.b64  	%rd13704, %rd13703, %rd13700;
	cvt.u64.u16 	%rd13705, %rs1144;
	shl.b64 	%rd13706, %rd13705, 40;
	and.b64  	%rd13707, %rd13706, 280375465082880;
	or.b64  	%rd13708, %rd13704, %rd13707;
	cvt.u64.u16 	%rd13709, %rs1143;
	shl.b64 	%rd13710, %rd13709, 32;
	and.b64  	%rd13711, %rd13710, 1095216660480;
	or.b64  	%rd13712, %rd13708, %rd13711;
	cvt.u32.u16 	%r10987, %rs1142;
	and.b32  	%r10988, %r10987, 255;
	mul.wide.u32 	%rd13713, %r10988, 16777216;
	or.b64  	%rd13714, %rd13712, %rd13713;
	cvt.u32.u16 	%r10989, %rs1141;
	and.b32  	%r10990, %r10989, 255;
	mul.wide.u32 	%rd13715, %r10990, 65536;
	or.b64  	%rd13716, %rd13714, %rd13715;
	cvt.u32.u16 	%r10991, %rs1140;
	and.b32  	%r10992, %r10991, 255;
	mul.wide.u32 	%rd13717, %r10992, 256;
	or.b64  	%rd13718, %rd13716, %rd13717;
	cvt.u64.u16 	%rd13719, %rs1139;
	and.b64  	%rd13720, %rd13719, 255;
	cvt.u64.u16 	%rd13721, %rs1138;
	shl.b64 	%rd13722, %rd13721, 56;
	cvt.u64.u16 	%rd13723, %rs1137;
	shl.b64 	%rd13724, %rd13723, 48;
	and.b64  	%rd13725, %rd13724, 71776119061217280;
	or.b64  	%rd13726, %rd13725, %rd13722;
	cvt.u64.u16 	%rd13727, %rs1136;
	shl.b64 	%rd13728, %rd13727, 40;
	and.b64  	%rd13729, %rd13728, 280375465082880;
	or.b64  	%rd13730, %rd13726, %rd13729;
	cvt.u64.u16 	%rd13731, %rs1135;
	shl.b64 	%rd13732, %rd13731, 32;
	and.b64  	%rd13733, %rd13732, 1095216660480;
	or.b64  	%rd13734, %rd13730, %rd13733;
	cvt.u32.u16 	%r10993, %rs1134;
	and.b32  	%r10994, %r10993, 255;
	mul.wide.u32 	%rd13735, %r10994, 16777216;
	or.b64  	%rd13736, %rd13734, %rd13735;
	cvt.u32.u16 	%r10995, %rs1133;
	and.b32  	%r10996, %r10995, 255;
	mul.wide.u32 	%rd13737, %r10996, 65536;
	or.b64  	%rd13738, %rd13736, %rd13737;
	cvt.u32.u16 	%r10997, %rs1132;
	and.b32  	%r10998, %r10997, 255;
	mul.wide.u32 	%rd13739, %r10998, 256;
	or.b64  	%rd13740, %rd13738, %rd13739;
	cvt.u64.u16 	%rd13741, %rs1131;
	and.b64  	%rd13742, %rd13741, 255;
	or.b64  	%rd13743, %rd13740, %rd13742;
	or.b64  	%rd13744, %rd13718, %rd13720;
	st.local.v2.u64 	[%rd15713+16], {%rd13744, %rd13743};
	ld.const.u64 	%rd154, [SECP256K1_P+24];
	ld.const.u64 	%rd155, [SECP256K1_P];
	ld.const.u64 	%rd156, [SECP256K1_P+8];
	mov.u32 	%r11235, 255;
	ld.const.u64 	%rd157, [SECP256K1_P+16];
	mov.u64 	%rd15706, %rd15705;
	mov.u64 	%rd15707, %rd15705;
	mov.u64 	%rd15708, %rd15705;
	mov.u64 	%rd15709, %rd15705;
	mov.u64 	%rd15710, %rd15705;
	mov.u64 	%rd15711, %rd15705;
	mov.u64 	%rd15712, %rd15705;
	bra.uni 	$L__BB4_118;

$L__BB4_127:
	setp.lt.u64 	%p98, %rd15543, %rd157;
	@%p98 bra 	$L__BB4_132;

	setp.gt.u64 	%p99, %rd15543, %rd157;
	@%p99 bra 	$L__BB4_133;

	setp.lt.u64 	%p100, %rd15542, %rd156;
	@%p100 bra 	$L__BB4_132;

	setp.gt.u64 	%p101, %rd15542, %rd156;
	@%p101 bra 	$L__BB4_133;

	setp.gt.u64 	%p102, %rd15541, %rd155;
	@%p102 bra 	$L__BB4_133;
	bra.uni 	$L__BB4_132;

$L__BB4_135:
	setp.lt.u64 	%p105, %rd15547, %rd157;
	@%p105 bra 	$L__BB4_140;

	setp.gt.u64 	%p106, %rd15547, %rd157;
	@%p106 bra 	$L__BB4_141;

	setp.lt.u64 	%p107, %rd15546, %rd156;
	@%p107 bra 	$L__BB4_140;

	setp.gt.u64 	%p108, %rd15546, %rd156;
	@%p108 bra 	$L__BB4_141;

	setp.gt.u64 	%p109, %rd15545, %rd155;
	@%p109 bra 	$L__BB4_141;
	bra.uni 	$L__BB4_140;

$L__BB4_143:
	setp.lt.u64 	%p113, %rd15569, %rd157;
	@%p113 bra 	$L__BB4_148;

	setp.gt.u64 	%p114, %rd15569, %rd157;
	@%p114 bra 	$L__BB4_149;

	setp.lt.u64 	%p115, %rd15550, %rd156;
	@%p115 bra 	$L__BB4_148;

	setp.gt.u64 	%p116, %rd15550, %rd156;
	@%p116 bra 	$L__BB4_149;

	setp.gt.u64 	%p117, %rd15549, %rd155;
	@%p117 bra 	$L__BB4_149;
	bra.uni 	$L__BB4_148;

$L__BB4_191:
	setp.lt.u64 	%p192, %rd15603, %rd157;
	@%p192 bra 	$L__BB4_196;

	setp.gt.u64 	%p193, %rd15603, %rd157;
	@%p193 bra 	$L__BB4_197;

	setp.lt.u64 	%p194, %rd15602, %rd156;
	@%p194 bra 	$L__BB4_196;

	setp.gt.u64 	%p195, %rd15602, %rd156;
	@%p195 bra 	$L__BB4_197;

	setp.gt.u64 	%p196, %rd15601, %rd155;
	@%p196 bra 	$L__BB4_197;
	bra.uni 	$L__BB4_196;

$L__BB4_118:
	mov.u32 	%r122, %r11235;
	mov.u64 	%rd158, %rd15705;
	// begin inline asm
	mul.lo.u64 %rd15533, %rd15709, %rd15709;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13748, %rd15709, %rd15709;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd13751, %rd15709, %rd15710;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13754, %rd15709, %rd15710;
	// end inline asm
	add.s64 	%rd13841, %rd13748, %rd13751;
	// begin inline asm
	mul.lo.u64 %rd13757, %rd15709, %rd15711;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13760, %rd15709, %rd15711;
	// end inline asm
	add.s64 	%rd13842, %rd13754, %rd13757;
	// begin inline asm
	mul.lo.u64 %rd13763, %rd15709, %rd15712;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13766, %rd15709, %rd15712;
	// end inline asm
	add.s64 	%rd13843, %rd13760, %rd13763;
	// begin inline asm
	mul.lo.u64 %rd13769, %rd15710, %rd15709;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13772, %rd15710, %rd15709;
	// end inline asm
	add.s64 	%rd15534, %rd13841, %rd13769;
	add.s64 	%rd13844, %rd13842, %rd13772;
	// begin inline asm
	mul.lo.u64 %rd13775, %rd15710, %rd15710;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13778, %rd15710, %rd15710;
	// end inline asm
	add.s64 	%rd13845, %rd13844, %rd13775;
	add.s64 	%rd13846, %rd13843, %rd13778;
	// begin inline asm
	mul.lo.u64 %rd13781, %rd15710, %rd15711;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13784, %rd15710, %rd15711;
	// end inline asm
	add.s64 	%rd13847, %rd13846, %rd13781;
	add.s64 	%rd13848, %rd13766, %rd13784;
	// begin inline asm
	mul.lo.u64 %rd13787, %rd15710, %rd15712;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13790, %rd15710, %rd15712;
	// end inline asm
	add.s64 	%rd13849, %rd13848, %rd13787;
	// begin inline asm
	mul.lo.u64 %rd13793, %rd15711, %rd15709;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13796, %rd15711, %rd15709;
	// end inline asm
	add.s64 	%rd15535, %rd13845, %rd13793;
	add.s64 	%rd13850, %rd13847, %rd13796;
	// begin inline asm
	mul.lo.u64 %rd13799, %rd15711, %rd15710;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13802, %rd15711, %rd15710;
	// end inline asm
	add.s64 	%rd13851, %rd13850, %rd13799;
	add.s64 	%rd13852, %rd13849, %rd13802;
	// begin inline asm
	mul.lo.u64 %rd13805, %rd15711, %rd15711;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13808, %rd15711, %rd15711;
	// end inline asm
	add.s64 	%rd13853, %rd13852, %rd13805;
	add.s64 	%rd13854, %rd13790, %rd13808;
	// begin inline asm
	mul.lo.u64 %rd13811, %rd15711, %rd15712;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13814, %rd15711, %rd15712;
	// end inline asm
	add.s64 	%rd13855, %rd13854, %rd13811;
	// begin inline asm
	mul.lo.u64 %rd13817, %rd15712, %rd15709;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13820, %rd15712, %rd15709;
	// end inline asm
	add.s64 	%rd15536, %rd13851, %rd13817;
	add.s64 	%rd13856, %rd13853, %rd13820;
	// begin inline asm
	mul.lo.u64 %rd13823, %rd15712, %rd15710;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13826, %rd15712, %rd15710;
	// end inline asm
	add.s64 	%rd15537, %rd13856, %rd13823;
	add.s64 	%rd13857, %rd13855, %rd13826;
	// begin inline asm
	mul.lo.u64 %rd13829, %rd15712, %rd15711;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13832, %rd15712, %rd15711;
	// end inline asm
	add.s64 	%rd15538, %rd13857, %rd13829;
	add.s64 	%rd13858, %rd13814, %rd13832;
	// begin inline asm
	mul.lo.u64 %rd13835, %rd15712, %rd15712;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15540, %rd15712, %rd15712;
	// end inline asm
	add.s64 	%rd15539, %rd13858, %rd13835;
	bra.uni 	$L__BB4_119;

$L__BB4_329:
	setp.lt.u64 	%p426, %rd15533, %rd155;
	selp.u64 	%rd15489, 1, 0, %p426;
	sub.s64 	%rd15533, %rd15533, %rd155;
	add.s64 	%rd15490, %rd156, %rd15489;
	setp.lt.u64 	%p427, %rd15534, %rd15490;
	selp.u64 	%rd15491, 1, 0, %p427;
	sub.s64 	%rd15534, %rd15534, %rd15490;
	add.s64 	%rd15492, %rd157, %rd15491;
	setp.lt.u64 	%p428, %rd15535, %rd15492;
	selp.u64 	%rd15493, 1, 0, %p428;
	sub.s64 	%rd15535, %rd15535, %rd15492;
	add.s64 	%rd15494, %rd154, %rd15493;
	setp.lt.u64 	%p429, %rd15536, %rd15494;
	selp.u64 	%rd15495, 1, 0, %p429;
	sub.s64 	%rd15536, %rd15536, %rd15494;
	setp.lt.u64 	%p430, %rd15537, %rd15495;
	selp.u64 	%rd15496, 1, 0, %p430;
	sub.s64 	%rd15537, %rd15537, %rd15495;
	setp.lt.u64 	%p431, %rd15538, %rd15496;
	selp.u64 	%rd15497, 1, 0, %p431;
	sub.s64 	%rd15538, %rd15538, %rd15496;
	setp.lt.u64 	%p432, %rd15539, %rd15497;
	selp.u64 	%rd15498, 1, 0, %p432;
	sub.s64 	%rd15539, %rd15539, %rd15497;
	sub.s64 	%rd15540, %rd15540, %rd15498;

$L__BB4_119:
	or.b64  	%rd13859, %rd15540, %rd15539;
	or.b64  	%rd13860, %rd13859, %rd15538;
	or.b64  	%rd13861, %rd13860, %rd15537;
	setp.ne.s64 	%p85, %rd13861, 0;
	setp.gt.u64 	%p86, %rd15536, %rd154;
	or.pred  	%p87, %p85, %p86;
	@%p87 bra 	$L__BB4_329;

	setp.lt.u64 	%p88, %rd15536, %rd154;
	@%p88 bra 	$L__BB4_125;

	setp.gt.u64 	%p89, %rd15535, %rd157;
	@%p89 bra 	$L__BB4_329;

	setp.lt.u64 	%p90, %rd15535, %rd157;
	@%p90 bra 	$L__BB4_125;

	setp.gt.u64 	%p91, %rd15534, %rd156;
	@%p91 bra 	$L__BB4_329;

	setp.ge.u64 	%p92, %rd15534, %rd156;
	setp.gt.u64 	%p93, %rd15533, %rd155;
	and.pred  	%p94, %p92, %p93;
	@%p94 bra 	$L__BB4_329;

$L__BB4_125:
	shl.b64 	%rd15541, %rd15533, 1;
	shl.b64 	%rd15543, %rd15535, 1;
	setp.lt.u64 	%p95, %rd15541, %rd15533;
	selp.u64 	%rd13862, 1, 0, %p95;
	bfi.b64 	%rd15542, %rd15534, %rd13862, 1, 63;
	shl.b64 	%rd15544, %rd15536, 1;
	setp.lt.u64 	%p96, %rd15544, %rd154;
	@%p96 bra 	$L__BB4_132;
	bra.uni 	$L__BB4_126;

$L__BB4_132:
	sub.s64 	%rd15541, %rd15541, %rd155;
	sub.s64 	%rd15542, %rd15542, %rd156;
	sub.s64 	%rd15543, %rd15543, %rd157;
	sub.s64 	%rd15544, %rd15544, %rd154;
	bra.uni 	$L__BB4_133;

$L__BB4_126:
	setp.gt.u64 	%p97, %rd15544, %rd154;
	@%p97 bra 	$L__BB4_133;
	bra.uni 	$L__BB4_127;

$L__BB4_133:
	add.s64 	%rd15545, %rd15533, %rd15541;
	add.s64 	%rd15546, %rd15534, %rd15542;
	add.s64 	%rd15547, %rd15535, %rd15543;
	add.s64 	%rd15548, %rd15536, %rd15544;
	setp.lt.u64 	%p103, %rd15548, %rd154;
	@%p103 bra 	$L__BB4_140;
	bra.uni 	$L__BB4_134;

$L__BB4_140:
	sub.s64 	%rd15545, %rd15545, %rd155;
	sub.s64 	%rd15546, %rd15546, %rd156;
	sub.s64 	%rd15547, %rd15547, %rd157;
	sub.s64 	%rd15548, %rd15548, %rd154;
	bra.uni 	$L__BB4_141;

$L__BB4_134:
	setp.gt.u64 	%p104, %rd15548, %rd154;
	@%p104 bra 	$L__BB4_141;
	bra.uni 	$L__BB4_135;

$L__BB4_141:
	shl.b64 	%rd15569, %rd15707, 1;
	shl.b64 	%rd15549, %rd158, 1;
	setp.lt.u64 	%p110, %rd15549, %rd158;
	selp.u64 	%rd13863, 1, 0, %p110;
	bfi.b64 	%rd15550, %rd15706, %rd13863, 1, 63;
	shl.b64 	%rd15570, %rd15708, 1;
	setp.lt.u64 	%p111, %rd15570, %rd154;
	@%p111 bra 	$L__BB4_148;
	bra.uni 	$L__BB4_142;

$L__BB4_148:
	sub.s64 	%rd15549, %rd15549, %rd155;
	sub.s64 	%rd15550, %rd15550, %rd156;
	sub.s64 	%rd15569, %rd15569, %rd157;
	sub.s64 	%rd15570, %rd15570, %rd154;
	bra.uni 	$L__BB4_149;

$L__BB4_142:
	setp.gt.u64 	%p112, %rd15570, %rd154;
	@%p112 bra 	$L__BB4_149;
	bra.uni 	$L__BB4_143;

$L__BB4_149:
	mov.u32 	%r11236, 3;
	mov.u64 	%rd15582, 0;
	mov.u64 	%rd15581, 1;
	mov.u64 	%rd15583, %rd15582;
	mov.u64 	%rd15584, %rd15582;

$L__BB4_150:
	mul.wide.s32 	%rd13868, %r11236, 8;
	mov.u64 	%rd13869, EXP_P_MINUS_2;
	add.s64 	%rd13870, %rd13869, %rd13868;
	ld.const.u64 	%rd226, [%rd13870];
	mov.u32 	%r11237, 63;

$L__BB4_151:
	mov.u32 	%r124, %r11237;
	// begin inline asm
	mul.lo.u64 %rd15571, %rd15549, %rd15549;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13874, %rd15549, %rd15549;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd13877, %rd15549, %rd15550;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13880, %rd15549, %rd15550;
	// end inline asm
	add.s64 	%rd13967, %rd13877, %rd13874;
	setp.lt.u64 	%p118, %rd13967, %rd13877;
	selp.u64 	%rd13968, 1, 0, %p118;
	add.s64 	%rd13969, %rd13880, %rd13968;
	// begin inline asm
	mul.lo.u64 %rd13883, %rd15549, %rd15569;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13886, %rd15549, %rd15569;
	// end inline asm
	add.s64 	%rd13970, %rd13883, %rd13969;
	setp.lt.u64 	%p119, %rd13970, %rd13883;
	selp.u64 	%rd13971, 1, 0, %p119;
	add.s64 	%rd13972, %rd13886, %rd13971;
	// begin inline asm
	mul.lo.u64 %rd13889, %rd15549, %rd15570;
	// end inline asm
	add.s64 	%rd13973, %rd13889, %rd13972;
	// begin inline asm
	mul.lo.u64 %rd13895, %rd15550, %rd15549;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13898, %rd15550, %rd15549;
	// end inline asm
	add.s64 	%rd15572, %rd13895, %rd13967;
	setp.lt.u64 	%p120, %rd15572, %rd13895;
	selp.u64 	%rd13974, 1, 0, %p120;
	add.s64 	%rd13975, %rd13898, %rd13974;
	add.s64 	%rd13976, %rd13970, %rd13975;
	setp.lt.u64 	%p121, %rd13976, %rd13970;
	selp.u64 	%rd13977, 1, 0, %p121;
	// begin inline asm
	mul.lo.u64 %rd13901, %rd15550, %rd15550;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13904, %rd15550, %rd15550;
	// end inline asm
	add.s64 	%rd13978, %rd13901, %rd13977;
	add.s64 	%rd13979, %rd13978, %rd13976;
	setp.lt.u64 	%p122, %rd13979, %rd13978;
	selp.u64 	%rd13980, 1, 0, %p122;
	add.s64 	%rd13981, %rd13904, %rd13980;
	add.s64 	%rd13982, %rd13973, %rd13981;
	setp.lt.u64 	%p123, %rd13982, %rd13973;
	selp.u64 	%rd13983, 1, 0, %p123;
	// begin inline asm
	mul.lo.u64 %rd13907, %rd15550, %rd15569;
	// end inline asm
	add.s64 	%rd13984, %rd13907, %rd13983;
	add.s64 	%rd13985, %rd13984, %rd13982;
	// begin inline asm
	mul.lo.u64 %rd13919, %rd15569, %rd15549;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd13922, %rd15569, %rd15549;
	// end inline asm
	add.s64 	%rd237, %rd13919, %rd13979;
	setp.lt.u64 	%p124, %rd237, %rd13919;
	selp.u64 	%rd13986, 1, 0, %p124;
	add.s64 	%rd13987, %rd13922, %rd13986;
	add.s64 	%rd13988, %rd13985, %rd13987;
	setp.lt.u64 	%p125, %rd13988, %rd13985;
	selp.u64 	%rd13989, 1, 0, %p125;
	// begin inline asm
	mul.lo.u64 %rd13925, %rd15569, %rd15550;
	// end inline asm
	add.s64 	%rd13990, %rd13925, %rd13989;
	add.s64 	%rd13991, %rd13990, %rd13988;
	// begin inline asm
	mul.lo.u64 %rd13943, %rd15570, %rd15549;
	// end inline asm
	add.s64 	%rd15570, %rd13943, %rd13991;
	mov.u64 	%rd15569, %rd237;
	bra.uni 	$L__BB4_152;

$L__BB4_163:
	selp.u64 	%rd13998, 1, 0, %p136;
	add.s64 	%rd13999, %rd244, %rd13998;
	add.s64 	%rd15569, %rd13999, %rd157;
	setp.lt.u64 	%p148, %rd15569, %rd244;
	selp.u64 	%rd14000, 1, 0, %p148;
	add.s64 	%rd14001, %rd245, %rd14000;
	add.s64 	%rd15570, %rd14001, %rd154;
	mov.u64 	%rd15571, %rd15549;
	mov.u64 	%rd15572, %rd15550;

$L__BB4_152:
	mov.u64 	%rd15550, %rd15572;
	mov.u64 	%rd15549, %rd15571;
	setp.lt.u64 	%p126, %rd15570, %rd154;
	@%p126 bra 	$L__BB4_164;

	setp.gt.u64 	%p127, %rd15570, %rd154;
	@%p127 bra 	$L__BB4_158;

	setp.lt.u64 	%p128, %rd15569, %rd157;
	@%p128 bra 	$L__BB4_164;

	setp.gt.u64 	%p129, %rd15569, %rd157;
	@%p129 bra 	$L__BB4_158;

	setp.lt.u64 	%p130, %rd15550, %rd156;
	@%p130 bra 	$L__BB4_164;

	setp.le.u64 	%p131, %rd15550, %rd156;
	setp.lt.u64 	%p132, %rd15549, %rd155;
	and.pred  	%p133, %p131, %p132;
	@%p133 bra 	$L__BB4_164;

$L__BB4_158:
	setp.lt.u64 	%p135, %rd15549, %rd155;
	selp.u64 	%rd13992, 1, 0, %p135;
	sub.s64 	%rd13993, %rd15550, %rd156;
	sub.s64 	%rd15572, %rd13993, %rd13992;
	setp.gt.u64 	%p136, %rd15572, %rd15550;
	mov.pred 	%p434, -1;
	mov.pred 	%p433, %p434;
	@%p136 bra 	$L__BB4_160;

	setp.eq.s64 	%p138, %rd15572, %rd15550;
	and.pred  	%p433, %p135, %p138;

$L__BB4_160:
	sub.s64 	%rd13994, %rd15569, %rd157;
	selp.u64 	%rd13995, 1, 0, %p433;
	sub.s64 	%rd244, %rd13994, %rd13995;
	setp.gt.u64 	%p140, %rd244, %rd15569;
	@%p140 bra 	$L__BB4_162;

	setp.eq.s64 	%p141, %rd244, %rd15569;
	and.pred  	%p434, %p433, %p141;

$L__BB4_162:
	sub.s64 	%rd13996, %rd15570, %rd154;
	not.pred 	%p142, %p434;
	selp.u64 	%rd13997, 1, 0, %p434;
	sub.s64 	%rd245, %rd13996, %rd13997;
	setp.le.u64 	%p143, %rd245, %rd15570;
	setp.ne.s64 	%p144, %rd245, %rd15570;
	or.pred  	%p145, %p142, %p144;
	sub.s64 	%rd15571, %rd15549, %rd155;
	and.pred  	%p146, %p143, %p145;
	mov.u64 	%rd15569, %rd244;
	mov.u64 	%rd15570, %rd245;
	@%p146 bra 	$L__BB4_152;
	bra.uni 	$L__BB4_163;

$L__BB4_164:
	mov.u64 	%rd14002, 1;
	shl.b64 	%rd14003, %rd14002, %r124;
	and.b64  	%rd14004, %rd14003, %rd226;
	setp.eq.s64 	%p149, %rd14004, 0;
	@%p149 bra 	$L__BB4_173;

	// begin inline asm
	mul.lo.u64 %rd14005, %rd15581, %rd15549;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14008, %rd15581, %rd15549;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14011, %rd15581, %rd15550;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14014, %rd15581, %rd15550;
	// end inline asm
	add.s64 	%rd14101, %rd14008, %rd14011;
	// begin inline asm
	mul.lo.u64 %rd14017, %rd15581, %rd15569;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14020, %rd15581, %rd15569;
	// end inline asm
	add.s64 	%rd14102, %rd14014, %rd14017;
	// begin inline asm
	mul.lo.u64 %rd14023, %rd15581, %rd15570;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14026, %rd15581, %rd15570;
	// end inline asm
	add.s64 	%rd14103, %rd14020, %rd14023;
	// begin inline asm
	mul.lo.u64 %rd14029, %rd15582, %rd15549;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14032, %rd15582, %rd15549;
	// end inline asm
	add.s64 	%rd250, %rd14101, %rd14029;
	add.s64 	%rd14104, %rd14102, %rd14032;
	// begin inline asm
	mul.lo.u64 %rd14035, %rd15582, %rd15550;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14038, %rd15582, %rd15550;
	// end inline asm
	add.s64 	%rd14105, %rd14104, %rd14035;
	add.s64 	%rd14106, %rd14103, %rd14038;
	// begin inline asm
	mul.lo.u64 %rd14041, %rd15582, %rd15569;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14044, %rd15582, %rd15569;
	// end inline asm
	add.s64 	%rd14107, %rd14106, %rd14041;
	add.s64 	%rd14108, %rd14026, %rd14044;
	// begin inline asm
	mul.lo.u64 %rd14047, %rd15582, %rd15570;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14050, %rd15582, %rd15570;
	// end inline asm
	add.s64 	%rd14109, %rd14108, %rd14047;
	// begin inline asm
	mul.lo.u64 %rd14053, %rd15583, %rd15549;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14056, %rd15583, %rd15549;
	// end inline asm
	add.s64 	%rd251, %rd14105, %rd14053;
	add.s64 	%rd14110, %rd14107, %rd14056;
	// begin inline asm
	mul.lo.u64 %rd14059, %rd15583, %rd15550;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14062, %rd15583, %rd15550;
	// end inline asm
	add.s64 	%rd14111, %rd14110, %rd14059;
	add.s64 	%rd14112, %rd14109, %rd14062;
	// begin inline asm
	mul.lo.u64 %rd14065, %rd15583, %rd15569;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14068, %rd15583, %rd15569;
	// end inline asm
	add.s64 	%rd14113, %rd14112, %rd14065;
	add.s64 	%rd14114, %rd14050, %rd14068;
	// begin inline asm
	mul.lo.u64 %rd14071, %rd15583, %rd15570;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14074, %rd15583, %rd15570;
	// end inline asm
	add.s64 	%rd14115, %rd14114, %rd14071;
	// begin inline asm
	mul.lo.u64 %rd14077, %rd15584, %rd15549;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14080, %rd15584, %rd15549;
	// end inline asm
	add.s64 	%rd252, %rd14111, %rd14077;
	add.s64 	%rd14116, %rd14113, %rd14080;
	// begin inline asm
	mul.lo.u64 %rd14083, %rd15584, %rd15550;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14086, %rd15584, %rd15550;
	// end inline asm
	add.s64 	%rd15577, %rd14116, %rd14083;
	add.s64 	%rd14117, %rd14115, %rd14086;
	// begin inline asm
	mul.lo.u64 %rd14089, %rd15584, %rd15569;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14092, %rd15584, %rd15569;
	// end inline asm
	add.s64 	%rd15578, %rd14117, %rd14089;
	add.s64 	%rd14118, %rd14074, %rd14092;
	// begin inline asm
	mul.lo.u64 %rd14095, %rd15584, %rd15570;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15580, %rd15584, %rd15570;
	// end inline asm
	add.s64 	%rd15579, %rd14118, %rd14095;
	mov.u64 	%rd15581, %rd14005;
	mov.u64 	%rd15582, %rd250;
	mov.u64 	%rd15583, %rd251;
	mov.u64 	%rd15584, %rd252;
	bra.uni 	$L__BB4_166;

$L__BB4_172:
	setp.lt.u64 	%p160, %rd15581, %rd155;
	selp.u64 	%rd14122, 1, 0, %p160;
	sub.s64 	%rd15581, %rd15581, %rd155;
	add.s64 	%rd14123, %rd156, %rd14122;
	setp.lt.u64 	%p161, %rd15582, %rd14123;
	selp.u64 	%rd14124, 1, 0, %p161;
	sub.s64 	%rd15582, %rd15582, %rd14123;
	add.s64 	%rd14125, %rd157, %rd14124;
	setp.lt.u64 	%p162, %rd15583, %rd14125;
	selp.u64 	%rd14126, 1, 0, %p162;
	sub.s64 	%rd15583, %rd15583, %rd14125;
	add.s64 	%rd14127, %rd154, %rd14126;
	setp.lt.u64 	%p163, %rd15584, %rd14127;
	selp.u64 	%rd14128, 1, 0, %p163;
	sub.s64 	%rd15584, %rd15584, %rd14127;
	setp.lt.u64 	%p164, %rd15577, %rd14128;
	selp.u64 	%rd14129, 1, 0, %p164;
	sub.s64 	%rd15577, %rd15577, %rd14128;
	setp.lt.u64 	%p165, %rd15578, %rd14129;
	selp.u64 	%rd14130, 1, 0, %p165;
	sub.s64 	%rd15578, %rd15578, %rd14129;
	setp.lt.u64 	%p166, %rd15579, %rd14130;
	selp.u64 	%rd14131, 1, 0, %p166;
	sub.s64 	%rd15579, %rd15579, %rd14130;
	sub.s64 	%rd15580, %rd15580, %rd14131;

$L__BB4_166:
	or.b64  	%rd14119, %rd15580, %rd15579;
	or.b64  	%rd14120, %rd14119, %rd15578;
	or.b64  	%rd14121, %rd14120, %rd15577;
	setp.ne.s64 	%p150, %rd14121, 0;
	setp.gt.u64 	%p151, %rd15584, %rd154;
	or.pred  	%p152, %p150, %p151;
	@%p152 bra 	$L__BB4_172;

	setp.lt.u64 	%p153, %rd15584, %rd154;
	@%p153 bra 	$L__BB4_173;

	setp.gt.u64 	%p154, %rd15583, %rd157;
	@%p154 bra 	$L__BB4_172;

	setp.lt.u64 	%p155, %rd15583, %rd157;
	@%p155 bra 	$L__BB4_173;

	setp.gt.u64 	%p156, %rd15582, %rd156;
	@%p156 bra 	$L__BB4_172;

	setp.lt.u64 	%p157, %rd15582, %rd156;
	setp.le.u64 	%p158, %rd15581, %rd155;
	or.pred  	%p159, %p157, %p158;
	@%p159 bra 	$L__BB4_173;
	bra.uni 	$L__BB4_172;

$L__BB4_173:
	add.s32 	%r11237, %r124, -1;
	setp.gt.s32 	%p167, %r124, 0;
	@%p167 bra 	$L__BB4_151;

	add.s32 	%r126, %r11236, -1;
	setp.gt.s32 	%p168, %r11236, 0;
	mov.u32 	%r11236, %r126;
	@%p168 bra 	$L__BB4_150;

	// begin inline asm
	mul.lo.u64 %rd15585, %rd15545, %rd15581;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14135, %rd15545, %rd15581;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14138, %rd15545, %rd15582;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14141, %rd15545, %rd15582;
	// end inline asm
	add.s64 	%rd14228, %rd14135, %rd14138;
	// begin inline asm
	mul.lo.u64 %rd14144, %rd15545, %rd15583;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14147, %rd15545, %rd15583;
	// end inline asm
	add.s64 	%rd14229, %rd14141, %rd14144;
	// begin inline asm
	mul.lo.u64 %rd14150, %rd15545, %rd15584;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14153, %rd15545, %rd15584;
	// end inline asm
	add.s64 	%rd14230, %rd14147, %rd14150;
	// begin inline asm
	mul.lo.u64 %rd14156, %rd15546, %rd15581;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14159, %rd15546, %rd15581;
	// end inline asm
	add.s64 	%rd15586, %rd14228, %rd14156;
	add.s64 	%rd14231, %rd14229, %rd14159;
	// begin inline asm
	mul.lo.u64 %rd14162, %rd15546, %rd15582;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14165, %rd15546, %rd15582;
	// end inline asm
	add.s64 	%rd14232, %rd14231, %rd14162;
	add.s64 	%rd14233, %rd14230, %rd14165;
	// begin inline asm
	mul.lo.u64 %rd14168, %rd15546, %rd15583;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14171, %rd15546, %rd15583;
	// end inline asm
	add.s64 	%rd14234, %rd14233, %rd14168;
	add.s64 	%rd14235, %rd14153, %rd14171;
	// begin inline asm
	mul.lo.u64 %rd14174, %rd15546, %rd15584;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14177, %rd15546, %rd15584;
	// end inline asm
	add.s64 	%rd14236, %rd14235, %rd14174;
	// begin inline asm
	mul.lo.u64 %rd14180, %rd15547, %rd15581;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14183, %rd15547, %rd15581;
	// end inline asm
	add.s64 	%rd15587, %rd14232, %rd14180;
	add.s64 	%rd14237, %rd14234, %rd14183;
	// begin inline asm
	mul.lo.u64 %rd14186, %rd15547, %rd15582;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14189, %rd15547, %rd15582;
	// end inline asm
	add.s64 	%rd14238, %rd14237, %rd14186;
	add.s64 	%rd14239, %rd14236, %rd14189;
	// begin inline asm
	mul.lo.u64 %rd14192, %rd15547, %rd15583;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14195, %rd15547, %rd15583;
	// end inline asm
	add.s64 	%rd14240, %rd14239, %rd14192;
	add.s64 	%rd14241, %rd14177, %rd14195;
	// begin inline asm
	mul.lo.u64 %rd14198, %rd15547, %rd15584;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14201, %rd15547, %rd15584;
	// end inline asm
	add.s64 	%rd14242, %rd14241, %rd14198;
	// begin inline asm
	mul.lo.u64 %rd14204, %rd15548, %rd15581;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14207, %rd15548, %rd15581;
	// end inline asm
	add.s64 	%rd15588, %rd14238, %rd14204;
	add.s64 	%rd14243, %rd14240, %rd14207;
	// begin inline asm
	mul.lo.u64 %rd14210, %rd15548, %rd15582;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14213, %rd15548, %rd15582;
	// end inline asm
	add.s64 	%rd15589, %rd14243, %rd14210;
	add.s64 	%rd14244, %rd14242, %rd14213;
	// begin inline asm
	mul.lo.u64 %rd14216, %rd15548, %rd15583;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14219, %rd15548, %rd15583;
	// end inline asm
	add.s64 	%rd15590, %rd14244, %rd14216;
	add.s64 	%rd14245, %rd14201, %rd14219;
	// begin inline asm
	mul.lo.u64 %rd14222, %rd15548, %rd15584;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15592, %rd15548, %rd15584;
	// end inline asm
	add.s64 	%rd15591, %rd14245, %rd14222;
	bra.uni 	$L__BB4_176;

$L__BB4_328:
	setp.lt.u64 	%p419, %rd15585, %rd155;
	selp.u64 	%rd15479, 1, 0, %p419;
	sub.s64 	%rd15585, %rd15585, %rd155;
	add.s64 	%rd15480, %rd156, %rd15479;
	setp.lt.u64 	%p420, %rd15586, %rd15480;
	selp.u64 	%rd15481, 1, 0, %p420;
	sub.s64 	%rd15586, %rd15586, %rd15480;
	add.s64 	%rd15482, %rd157, %rd15481;
	setp.lt.u64 	%p421, %rd15587, %rd15482;
	selp.u64 	%rd15483, 1, 0, %p421;
	sub.s64 	%rd15587, %rd15587, %rd15482;
	add.s64 	%rd15484, %rd154, %rd15483;
	setp.lt.u64 	%p422, %rd15588, %rd15484;
	selp.u64 	%rd15485, 1, 0, %p422;
	sub.s64 	%rd15588, %rd15588, %rd15484;
	setp.lt.u64 	%p423, %rd15589, %rd15485;
	selp.u64 	%rd15486, 1, 0, %p423;
	sub.s64 	%rd15589, %rd15589, %rd15485;
	setp.lt.u64 	%p424, %rd15590, %rd15486;
	selp.u64 	%rd15487, 1, 0, %p424;
	sub.s64 	%rd15590, %rd15590, %rd15486;
	setp.lt.u64 	%p425, %rd15591, %rd15487;
	selp.u64 	%rd15488, 1, 0, %p425;
	sub.s64 	%rd15591, %rd15591, %rd15487;
	sub.s64 	%rd15592, %rd15592, %rd15488;

$L__BB4_176:
	or.b64  	%rd14246, %rd15592, %rd15591;
	or.b64  	%rd14247, %rd14246, %rd15590;
	or.b64  	%rd14248, %rd14247, %rd15589;
	setp.ne.s64 	%p169, %rd14248, 0;
	setp.gt.u64 	%p170, %rd15588, %rd154;
	or.pred  	%p171, %p169, %p170;
	@%p171 bra 	$L__BB4_328;

	setp.lt.u64 	%p172, %rd15588, %rd154;
	@%p172 bra 	$L__BB4_182;

	setp.gt.u64 	%p173, %rd15587, %rd157;
	@%p173 bra 	$L__BB4_328;

	setp.lt.u64 	%p174, %rd15587, %rd157;
	@%p174 bra 	$L__BB4_182;

	setp.gt.u64 	%p175, %rd15586, %rd156;
	@%p175 bra 	$L__BB4_328;

	setp.ge.u64 	%p176, %rd15586, %rd156;
	setp.gt.u64 	%p177, %rd15585, %rd155;
	and.pred  	%p178, %p176, %p177;
	@%p178 bra 	$L__BB4_328;

$L__BB4_182:
	// begin inline asm
	mul.lo.u64 %rd15593, %rd15585, %rd15585;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14252, %rd15585, %rd15585;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14255, %rd15585, %rd15586;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14258, %rd15585, %rd15586;
	// end inline asm
	add.s64 	%rd14345, %rd14252, %rd14255;
	// begin inline asm
	mul.lo.u64 %rd14261, %rd15585, %rd15587;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14264, %rd15585, %rd15587;
	// end inline asm
	add.s64 	%rd14346, %rd14258, %rd14261;
	// begin inline asm
	mul.lo.u64 %rd14267, %rd15585, %rd15588;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14270, %rd15585, %rd15588;
	// end inline asm
	add.s64 	%rd14347, %rd14264, %rd14267;
	// begin inline asm
	mul.lo.u64 %rd14273, %rd15586, %rd15585;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14276, %rd15586, %rd15585;
	// end inline asm
	add.s64 	%rd15594, %rd14345, %rd14273;
	add.s64 	%rd14348, %rd14346, %rd14276;
	// begin inline asm
	mul.lo.u64 %rd14279, %rd15586, %rd15586;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14282, %rd15586, %rd15586;
	// end inline asm
	add.s64 	%rd14349, %rd14348, %rd14279;
	add.s64 	%rd14350, %rd14347, %rd14282;
	// begin inline asm
	mul.lo.u64 %rd14285, %rd15586, %rd15587;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14288, %rd15586, %rd15587;
	// end inline asm
	add.s64 	%rd14351, %rd14350, %rd14285;
	add.s64 	%rd14352, %rd14270, %rd14288;
	// begin inline asm
	mul.lo.u64 %rd14291, %rd15586, %rd15588;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14294, %rd15586, %rd15588;
	// end inline asm
	add.s64 	%rd14353, %rd14352, %rd14291;
	// begin inline asm
	mul.lo.u64 %rd14297, %rd15587, %rd15585;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14300, %rd15587, %rd15585;
	// end inline asm
	add.s64 	%rd15595, %rd14349, %rd14297;
	add.s64 	%rd14354, %rd14351, %rd14300;
	// begin inline asm
	mul.lo.u64 %rd14303, %rd15587, %rd15586;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14306, %rd15587, %rd15586;
	// end inline asm
	add.s64 	%rd14355, %rd14354, %rd14303;
	add.s64 	%rd14356, %rd14353, %rd14306;
	// begin inline asm
	mul.lo.u64 %rd14309, %rd15587, %rd15587;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14312, %rd15587, %rd15587;
	// end inline asm
	add.s64 	%rd14357, %rd14356, %rd14309;
	add.s64 	%rd14358, %rd14294, %rd14312;
	// begin inline asm
	mul.lo.u64 %rd14315, %rd15587, %rd15588;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14318, %rd15587, %rd15588;
	// end inline asm
	add.s64 	%rd14359, %rd14358, %rd14315;
	// begin inline asm
	mul.lo.u64 %rd14321, %rd15588, %rd15585;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14324, %rd15588, %rd15585;
	// end inline asm
	add.s64 	%rd15596, %rd14355, %rd14321;
	add.s64 	%rd14360, %rd14357, %rd14324;
	// begin inline asm
	mul.lo.u64 %rd14327, %rd15588, %rd15586;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14330, %rd15588, %rd15586;
	// end inline asm
	add.s64 	%rd15597, %rd14360, %rd14327;
	add.s64 	%rd14361, %rd14359, %rd14330;
	// begin inline asm
	mul.lo.u64 %rd14333, %rd15588, %rd15587;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14336, %rd15588, %rd15587;
	// end inline asm
	add.s64 	%rd15598, %rd14361, %rd14333;
	add.s64 	%rd14362, %rd14318, %rd14336;
	// begin inline asm
	mul.lo.u64 %rd14339, %rd15588, %rd15588;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15600, %rd15588, %rd15588;
	// end inline asm
	add.s64 	%rd15599, %rd14362, %rd14339;
	bra.uni 	$L__BB4_183;

$L__BB4_327:
	setp.lt.u64 	%p412, %rd15593, %rd155;
	selp.u64 	%rd15469, 1, 0, %p412;
	sub.s64 	%rd15593, %rd15593, %rd155;
	add.s64 	%rd15470, %rd156, %rd15469;
	setp.lt.u64 	%p413, %rd15594, %rd15470;
	selp.u64 	%rd15471, 1, 0, %p413;
	sub.s64 	%rd15594, %rd15594, %rd15470;
	add.s64 	%rd15472, %rd157, %rd15471;
	setp.lt.u64 	%p414, %rd15595, %rd15472;
	selp.u64 	%rd15473, 1, 0, %p414;
	sub.s64 	%rd15595, %rd15595, %rd15472;
	add.s64 	%rd15474, %rd154, %rd15473;
	setp.lt.u64 	%p415, %rd15596, %rd15474;
	selp.u64 	%rd15475, 1, 0, %p415;
	sub.s64 	%rd15596, %rd15596, %rd15474;
	setp.lt.u64 	%p416, %rd15597, %rd15475;
	selp.u64 	%rd15476, 1, 0, %p416;
	sub.s64 	%rd15597, %rd15597, %rd15475;
	setp.lt.u64 	%p417, %rd15598, %rd15476;
	selp.u64 	%rd15477, 1, 0, %p417;
	sub.s64 	%rd15598, %rd15598, %rd15476;
	setp.lt.u64 	%p418, %rd15599, %rd15477;
	selp.u64 	%rd15478, 1, 0, %p418;
	sub.s64 	%rd15599, %rd15599, %rd15477;
	sub.s64 	%rd15600, %rd15600, %rd15478;

$L__BB4_183:
	or.b64  	%rd14363, %rd15600, %rd15599;
	or.b64  	%rd14364, %rd14363, %rd15598;
	or.b64  	%rd14365, %rd14364, %rd15597;
	setp.ne.s64 	%p179, %rd14365, 0;
	setp.gt.u64 	%p180, %rd15596, %rd154;
	or.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB4_327;

	setp.lt.u64 	%p182, %rd15596, %rd154;
	@%p182 bra 	$L__BB4_189;

	setp.gt.u64 	%p183, %rd15595, %rd157;
	@%p183 bra 	$L__BB4_327;

	setp.lt.u64 	%p184, %rd15595, %rd157;
	@%p184 bra 	$L__BB4_189;

	setp.gt.u64 	%p185, %rd15594, %rd156;
	@%p185 bra 	$L__BB4_327;

	setp.ge.u64 	%p186, %rd15594, %rd156;
	setp.gt.u64 	%p187, %rd15593, %rd155;
	and.pred  	%p188, %p186, %p187;
	@%p188 bra 	$L__BB4_327;

$L__BB4_189:
	shl.b64 	%rd15601, %rd15709, 1;
	shl.b64 	%rd15603, %rd15711, 1;
	setp.lt.u64 	%p189, %rd15601, %rd15709;
	selp.u64 	%rd14366, 1, 0, %p189;
	bfi.b64 	%rd15602, %rd15710, %rd14366, 1, 63;
	shl.b64 	%rd15604, %rd15712, 1;
	setp.lt.u64 	%p190, %rd15604, %rd154;
	@%p190 bra 	$L__BB4_196;
	bra.uni 	$L__BB4_190;

$L__BB4_196:
	sub.s64 	%rd15601, %rd15601, %rd155;
	sub.s64 	%rd15602, %rd15602, %rd156;
	sub.s64 	%rd15603, %rd15603, %rd157;
	sub.s64 	%rd15604, %rd15604, %rd154;
	bra.uni 	$L__BB4_197;

$L__BB4_190:
	setp.gt.u64 	%p191, %rd15604, %rd154;
	@%p191 bra 	$L__BB4_197;
	bra.uni 	$L__BB4_191;

$L__BB4_197:
	sub.s64 	%rd15709, %rd15593, %rd15601;
	sub.s64 	%rd15710, %rd15594, %rd15602;
	setp.ge.u64 	%p197, %rd15593, %rd15601;
	mov.u16 	%rs1164, 0;
	mov.u16 	%rs1163, %rs1164;
	@%p197 bra 	$L__BB4_199;

	setp.eq.s64 	%p198, %rd15594, 0;
	not.b64 	%rd14367, %rd15602;
	add.s64 	%rd14368, %rd15594, %rd14367;
	neg.s64 	%rd14369, %rd15602;
	selp.b64 	%rd15710, %rd14369, %rd14368, %p198;
	setp.le.u64 	%p199, %rd15594, %rd15602;
	selp.u16 	%rs1163, 1, 0, %p199;

$L__BB4_199:
	setp.eq.s16 	%p200, %rs1163, 0;
	sub.s64 	%rd15711, %rd15595, %rd15603;
	@%p200 bra 	$L__BB4_201;

	setp.eq.s64 	%p201, %rd15595, 0;
	not.b64 	%rd14370, %rd15603;
	add.s64 	%rd14371, %rd15595, %rd14370;
	neg.s64 	%rd14372, %rd15603;
	selp.b64 	%rd15711, %rd14372, %rd14371, %p201;
	setp.le.u64 	%p202, %rd15595, %rd15603;
	selp.u16 	%rs1164, 1, 0, %p202;

$L__BB4_201:
	setp.eq.s16 	%p203, %rs1164, 0;
	mov.u16 	%rs1165, 0;
	sub.s64 	%rd15712, %rd15596, %rd15604;
	@%p203 bra 	$L__BB4_203;

	setp.eq.s64 	%p204, %rd15596, 0;
	not.b64 	%rd14373, %rd15604;
	add.s64 	%rd14374, %rd15596, %rd14373;
	neg.s64 	%rd14375, %rd15604;
	selp.b64 	%rd15712, %rd14375, %rd14374, %p204;
	setp.le.u64 	%p205, %rd15596, %rd15604;
	selp.u16 	%rs1165, 1, 0, %p205;

$L__BB4_203:
	setp.eq.s16 	%p206, %rs1165, 0;
	@%p206 bra 	$L__BB4_205;

	add.s64 	%rd15709, %rd15709, %rd155;
	add.s64 	%rd15710, %rd15710, %rd156;
	add.s64 	%rd15711, %rd15711, %rd157;
	add.s64 	%rd15712, %rd15712, %rd154;

$L__BB4_205:
	mov.u64 	%rd14471, 0;
	// begin inline asm
	mul.lo.u64 %rd15612, %rd15585, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14379, %rd15585, %rd14471;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14382, %rd15585, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14385, %rd15585, %rd14471;
	// end inline asm
	add.s64 	%rd14472, %rd14379, %rd14382;
	// begin inline asm
	mul.lo.u64 %rd14388, %rd15585, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14391, %rd15585, %rd14471;
	// end inline asm
	add.s64 	%rd14473, %rd14385, %rd14388;
	// begin inline asm
	mul.lo.u64 %rd14394, %rd15585, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14397, %rd15585, %rd14471;
	// end inline asm
	add.s64 	%rd14474, %rd14391, %rd14394;
	// begin inline asm
	mul.lo.u64 %rd14400, %rd15586, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14403, %rd15586, %rd14471;
	// end inline asm
	add.s64 	%rd15613, %rd14472, %rd14400;
	add.s64 	%rd14475, %rd14473, %rd14403;
	// begin inline asm
	mul.lo.u64 %rd14406, %rd15586, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14409, %rd15586, %rd14471;
	// end inline asm
	add.s64 	%rd14476, %rd14475, %rd14406;
	add.s64 	%rd14477, %rd14474, %rd14409;
	// begin inline asm
	mul.lo.u64 %rd14412, %rd15586, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14415, %rd15586, %rd14471;
	// end inline asm
	add.s64 	%rd14478, %rd14477, %rd14412;
	add.s64 	%rd14479, %rd14397, %rd14415;
	// begin inline asm
	mul.lo.u64 %rd14418, %rd15586, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14421, %rd15586, %rd14471;
	// end inline asm
	add.s64 	%rd14480, %rd14479, %rd14418;
	// begin inline asm
	mul.lo.u64 %rd14424, %rd15587, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14427, %rd15587, %rd14471;
	// end inline asm
	add.s64 	%rd15614, %rd14476, %rd14424;
	add.s64 	%rd14481, %rd14478, %rd14427;
	// begin inline asm
	mul.lo.u64 %rd14430, %rd15587, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14433, %rd15587, %rd14471;
	// end inline asm
	add.s64 	%rd14482, %rd14481, %rd14430;
	add.s64 	%rd14483, %rd14480, %rd14433;
	// begin inline asm
	mul.lo.u64 %rd14436, %rd15587, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14439, %rd15587, %rd14471;
	// end inline asm
	add.s64 	%rd14484, %rd14483, %rd14436;
	add.s64 	%rd14485, %rd14421, %rd14439;
	// begin inline asm
	mul.lo.u64 %rd14442, %rd15587, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14445, %rd15587, %rd14471;
	// end inline asm
	add.s64 	%rd14486, %rd14485, %rd14442;
	// begin inline asm
	mul.lo.u64 %rd14448, %rd15588, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14451, %rd15588, %rd14471;
	// end inline asm
	add.s64 	%rd15615, %rd14482, %rd14448;
	add.s64 	%rd14487, %rd14484, %rd14451;
	// begin inline asm
	mul.lo.u64 %rd14454, %rd15588, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14457, %rd15588, %rd14471;
	// end inline asm
	add.s64 	%rd15616, %rd14487, %rd14454;
	add.s64 	%rd14488, %rd14486, %rd14457;
	// begin inline asm
	mul.lo.u64 %rd14460, %rd15588, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14463, %rd15588, %rd14471;
	// end inline asm
	add.s64 	%rd15617, %rd14488, %rd14460;
	add.s64 	%rd14489, %rd14445, %rd14463;
	// begin inline asm
	mul.lo.u64 %rd14466, %rd15588, %rd14471;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15619, %rd15588, %rd14471;
	// end inline asm
	add.s64 	%rd15618, %rd14489, %rd14466;
	bra.uni 	$L__BB4_206;

$L__BB4_326:
	setp.lt.u64 	%p405, %rd15612, %rd155;
	selp.u64 	%rd15459, 1, 0, %p405;
	sub.s64 	%rd15612, %rd15612, %rd155;
	add.s64 	%rd15460, %rd156, %rd15459;
	setp.lt.u64 	%p406, %rd15613, %rd15460;
	selp.u64 	%rd15461, 1, 0, %p406;
	sub.s64 	%rd15613, %rd15613, %rd15460;
	add.s64 	%rd15462, %rd157, %rd15461;
	setp.lt.u64 	%p407, %rd15614, %rd15462;
	selp.u64 	%rd15463, 1, 0, %p407;
	sub.s64 	%rd15614, %rd15614, %rd15462;
	add.s64 	%rd15464, %rd154, %rd15463;
	setp.lt.u64 	%p408, %rd15615, %rd15464;
	selp.u64 	%rd15465, 1, 0, %p408;
	sub.s64 	%rd15615, %rd15615, %rd15464;
	setp.lt.u64 	%p409, %rd15616, %rd15465;
	selp.u64 	%rd15466, 1, 0, %p409;
	sub.s64 	%rd15616, %rd15616, %rd15465;
	setp.lt.u64 	%p410, %rd15617, %rd15466;
	selp.u64 	%rd15467, 1, 0, %p410;
	sub.s64 	%rd15617, %rd15617, %rd15466;
	setp.lt.u64 	%p411, %rd15618, %rd15467;
	selp.u64 	%rd15468, 1, 0, %p411;
	sub.s64 	%rd15618, %rd15618, %rd15467;
	sub.s64 	%rd15619, %rd15619, %rd15468;

$L__BB4_206:
	or.b64  	%rd14490, %rd15619, %rd15618;
	or.b64  	%rd14491, %rd14490, %rd15617;
	or.b64  	%rd14492, %rd14491, %rd15616;
	setp.ne.s64 	%p207, %rd14492, 0;
	setp.gt.u64 	%p208, %rd15615, %rd154;
	or.pred  	%p209, %p207, %p208;
	@%p209 bra 	$L__BB4_326;

	setp.lt.u64 	%p210, %rd15615, %rd154;
	@%p210 bra 	$L__BB4_212;

	setp.gt.u64 	%p211, %rd15614, %rd157;
	@%p211 bra 	$L__BB4_326;

	setp.lt.u64 	%p212, %rd15614, %rd157;
	@%p212 bra 	$L__BB4_212;

	setp.gt.u64 	%p213, %rd15613, %rd156;
	@%p213 bra 	$L__BB4_326;

	setp.ge.u64 	%p214, %rd15613, %rd156;
	setp.gt.u64 	%p215, %rd15612, %rd155;
	and.pred  	%p216, %p214, %p215;
	@%p216 bra 	$L__BB4_326;

$L__BB4_212:
	sub.s64 	%rd15705, %rd15612, %rd158;
	sub.s64 	%rd15706, %rd15613, %rd15706;
	sub.s64 	%rd15707, %rd15614, %rd15707;
	sub.s64 	%rd15708, %rd15615, %rd15708;
	setp.ge.u64 	%p217, %rd15612, %rd158;
	mov.u16 	%rs1167, 0;
	mov.u16 	%rs1166, %rs1167;
	@%p217 bra 	$L__BB4_214;

	setp.eq.s64 	%p218, %rd15613, 0;
	not.b64 	%rd14493, %rd15706;
	add.s64 	%rd14494, %rd15613, %rd14493;
	neg.s64 	%rd14495, %rd15706;
	selp.b64 	%rd15706, %rd14495, %rd14494, %p218;
	setp.le.u64 	%p219, %rd15613, %rd15706;
	selp.u16 	%rs1166, 1, 0, %p219;

$L__BB4_214:
	setp.eq.s16 	%p220, %rs1166, 0;
	@%p220 bra 	$L__BB4_216;

	setp.eq.s64 	%p221, %rd15614, 0;
	not.b64 	%rd14496, %rd15707;
	add.s64 	%rd14497, %rd15614, %rd14496;
	neg.s64 	%rd14498, %rd15707;
	selp.b64 	%rd15707, %rd14498, %rd14497, %p221;
	setp.le.u64 	%p222, %rd15614, %rd15707;
	selp.u16 	%rs1167, 1, 0, %p222;

$L__BB4_216:
	setp.eq.s16 	%p223, %rs1167, 0;
	mov.u16 	%rs1168, 0;
	@%p223 bra 	$L__BB4_218;

	setp.eq.s64 	%p224, %rd15615, 0;
	not.b64 	%rd14499, %rd15708;
	add.s64 	%rd14500, %rd15615, %rd14499;
	neg.s64 	%rd14501, %rd15708;
	selp.b64 	%rd15708, %rd14501, %rd14500, %p224;
	setp.le.u64 	%p225, %rd15615, %rd15708;
	selp.u16 	%rs1168, 1, 0, %p225;

$L__BB4_218:
	setp.eq.s16 	%p226, %rs1168, 0;
	@%p226 bra 	$L__BB4_220;

	add.s64 	%rd15705, %rd15705, %rd155;
	add.s64 	%rd15706, %rd15706, %rd156;
	add.s64 	%rd15707, %rd15707, %rd157;
	add.s64 	%rd15708, %rd15708, %rd154;

$L__BB4_220:
	shr.s32 	%r11001, %r122, 31;
	shr.u32 	%r11002, %r11001, 26;
	add.s32 	%r11003, %r122, %r11002;
	shr.s32 	%r11004, %r11003, 6;
	mul.wide.s32 	%rd14502, %r11004, 8;
	add.s64 	%rd14503, %rd15713, %rd14502;
	and.b32  	%r11005, %r11003, -64;
	sub.s32 	%r11006, %r122, %r11005;
	mov.u64 	%rd14504, 1;
	shl.b64 	%rd14505, %rd14504, %r11006;
	ld.local.u64 	%rd14506, [%rd14503];
	and.b64  	%rd14507, %rd14506, %rd14505;
	setp.eq.s64 	%p227, %rd14507, 0;
	@%p227 bra 	$L__BB4_293;

	mov.u64 	%rd14508, 5204712524664259685;
	sub.s64 	%rd15627, %rd14508, %rd15705;
	setp.gt.u64 	%p228, %rd15705, 5204712524664259685;
	selp.b64 	%rd14509, 6747795201694173351, 6747795201694173352, %p228;
	sub.s64 	%rd15628, %rd14509, %rd15706;
	setp.gt.u64 	%p229, %rd15706, 6747795201694173351;
	and.pred  	%p230, %p228, %p229;
	selp.b64 	%rd14510, -209500633525038056, -209500633525038055, %p230;
	sub.s64 	%rd15629, %rd14510, %rd15707;
	setp.gt.u64 	%p231, %rd15707, -209500633525038056;
	and.pred  	%p232, %p231, %p230;
	not.pred 	%p233, %p232;
	selp.b64 	%rd14511, -7185545363635252041, -7185545363635252040, %p232;
	sub.s64 	%rd15630, %rd14511, %rd15708;
	setp.lt.u64 	%p234, %rd15708, -7185545363635252040;
	or.pred  	%p235, %p234, %p233;
	@%p235 bra 	$L__BB4_223;

	add.s64 	%rd15627, %rd15627, %rd155;
	add.s64 	%rd15628, %rd15628, %rd156;
	add.s64 	%rd15629, %rd15629, %rd157;
	add.s64 	%rd15630, %rd15630, %rd154;

$L__BB4_223:
	mov.u64 	%rd14512, 8772561819708210092;
	sub.s64 	%rd15643, %rd14512, %rd15709;
	setp.gt.u64 	%p236, %rd15709, 8772561819708210092;
	selp.b64 	%rd14513, 6170039885052185350, 6170039885052185351, %p236;
	sub.s64 	%rd15644, %rd14513, %rd15710;
	setp.gt.u64 	%p237, %rd15710, 6170039885052185350;
	and.pred  	%p238, %p236, %p237;
	selp.b64 	%rd14514, 188021827762530520, 188021827762530521, %p238;
	sub.s64 	%rd15651, %rd14514, %rd15711;
	setp.gt.u64 	%p239, %rd15711, 188021827762530520;
	and.pred  	%p240, %p239, %p238;
	not.pred 	%p241, %p240;
	selp.b64 	%rd14515, 6481385041966929815, 6481385041966929816, %p240;
	sub.s64 	%rd15652, %rd14515, %rd15712;
	setp.lt.u64 	%p242, %rd15712, 6481385041966929816;
	or.pred  	%p243, %p242, %p241;
	@%p243 bra 	$L__BB4_225;

	add.s64 	%rd15643, %rd15643, %rd155;
	add.s64 	%rd15644, %rd15644, %rd156;
	add.s64 	%rd15651, %rd15651, %rd157;
	add.s64 	%rd15652, %rd15652, %rd154;

$L__BB4_225:
	mov.u32 	%r11238, 3;
	mov.u64 	%rd15664, 0;
	mov.u64 	%rd15663, 1;
	mov.u64 	%rd15665, %rd15664;
	mov.u64 	%rd15666, %rd15664;

$L__BB4_226:
	mul.wide.s32 	%rd14520, %r11238, 8;
	add.s64 	%rd14522, %rd13869, %rd14520;
	ld.const.u64 	%rd405, [%rd14522];
	mov.u32 	%r11239, 63;

$L__BB4_227:
	mov.u32 	%r128, %r11239;
	// begin inline asm
	mul.lo.u64 %rd15653, %rd15643, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14526, %rd15643, %rd15643;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14529, %rd15643, %rd15644;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14532, %rd15643, %rd15644;
	// end inline asm
	add.s64 	%rd14619, %rd14529, %rd14526;
	setp.lt.u64 	%p244, %rd14619, %rd14529;
	selp.u64 	%rd14620, 1, 0, %p244;
	add.s64 	%rd14621, %rd14532, %rd14620;
	// begin inline asm
	mul.lo.u64 %rd14535, %rd15643, %rd15651;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14538, %rd15643, %rd15651;
	// end inline asm
	add.s64 	%rd14622, %rd14535, %rd14621;
	setp.lt.u64 	%p245, %rd14622, %rd14535;
	selp.u64 	%rd14623, 1, 0, %p245;
	add.s64 	%rd14624, %rd14538, %rd14623;
	// begin inline asm
	mul.lo.u64 %rd14541, %rd15643, %rd15652;
	// end inline asm
	add.s64 	%rd14625, %rd14541, %rd14624;
	// begin inline asm
	mul.lo.u64 %rd14547, %rd15644, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14550, %rd15644, %rd15643;
	// end inline asm
	add.s64 	%rd15654, %rd14547, %rd14619;
	setp.lt.u64 	%p246, %rd15654, %rd14547;
	selp.u64 	%rd14626, 1, 0, %p246;
	add.s64 	%rd14627, %rd14550, %rd14626;
	add.s64 	%rd14628, %rd14622, %rd14627;
	setp.lt.u64 	%p247, %rd14628, %rd14622;
	selp.u64 	%rd14629, 1, 0, %p247;
	// begin inline asm
	mul.lo.u64 %rd14553, %rd15644, %rd15644;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14556, %rd15644, %rd15644;
	// end inline asm
	add.s64 	%rd14630, %rd14553, %rd14629;
	add.s64 	%rd14631, %rd14630, %rd14628;
	setp.lt.u64 	%p248, %rd14631, %rd14630;
	selp.u64 	%rd14632, 1, 0, %p248;
	add.s64 	%rd14633, %rd14556, %rd14632;
	add.s64 	%rd14634, %rd14625, %rd14633;
	setp.lt.u64 	%p249, %rd14634, %rd14625;
	selp.u64 	%rd14635, 1, 0, %p249;
	// begin inline asm
	mul.lo.u64 %rd14559, %rd15644, %rd15651;
	// end inline asm
	add.s64 	%rd14636, %rd14559, %rd14635;
	add.s64 	%rd14637, %rd14636, %rd14634;
	// begin inline asm
	mul.lo.u64 %rd14571, %rd15651, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14574, %rd15651, %rd15643;
	// end inline asm
	add.s64 	%rd416, %rd14571, %rd14631;
	setp.lt.u64 	%p250, %rd416, %rd14571;
	selp.u64 	%rd14638, 1, 0, %p250;
	add.s64 	%rd14639, %rd14574, %rd14638;
	add.s64 	%rd14640, %rd14637, %rd14639;
	setp.lt.u64 	%p251, %rd14640, %rd14637;
	selp.u64 	%rd14641, 1, 0, %p251;
	// begin inline asm
	mul.lo.u64 %rd14577, %rd15651, %rd15644;
	// end inline asm
	add.s64 	%rd14642, %rd14577, %rd14641;
	add.s64 	%rd14643, %rd14642, %rd14640;
	// begin inline asm
	mul.lo.u64 %rd14595, %rd15652, %rd15643;
	// end inline asm
	add.s64 	%rd15652, %rd14595, %rd14643;
	mov.u64 	%rd15651, %rd416;
	bra.uni 	$L__BB4_228;

$L__BB4_239:
	selp.u64 	%rd14650, 1, 0, %p262;
	add.s64 	%rd14651, %rd423, %rd14650;
	add.s64 	%rd15651, %rd14651, %rd157;
	setp.lt.u64 	%p274, %rd15651, %rd423;
	selp.u64 	%rd14652, 1, 0, %p274;
	add.s64 	%rd14653, %rd424, %rd14652;
	add.s64 	%rd15652, %rd14653, %rd154;
	mov.u64 	%rd15653, %rd15643;
	mov.u64 	%rd15654, %rd15644;

$L__BB4_228:
	mov.u64 	%rd15644, %rd15654;
	mov.u64 	%rd15643, %rd15653;
	setp.lt.u64 	%p252, %rd15652, %rd154;
	@%p252 bra 	$L__BB4_240;

	setp.gt.u64 	%p253, %rd15652, %rd154;
	@%p253 bra 	$L__BB4_234;

	setp.lt.u64 	%p254, %rd15651, %rd157;
	@%p254 bra 	$L__BB4_240;

	setp.gt.u64 	%p255, %rd15651, %rd157;
	@%p255 bra 	$L__BB4_234;

	setp.lt.u64 	%p256, %rd15644, %rd156;
	@%p256 bra 	$L__BB4_240;

	setp.le.u64 	%p257, %rd15644, %rd156;
	setp.lt.u64 	%p258, %rd15643, %rd155;
	and.pred  	%p259, %p257, %p258;
	@%p259 bra 	$L__BB4_240;

$L__BB4_234:
	setp.lt.u64 	%p261, %rd15643, %rd155;
	selp.u64 	%rd14644, 1, 0, %p261;
	sub.s64 	%rd14645, %rd15644, %rd156;
	sub.s64 	%rd15654, %rd14645, %rd14644;
	setp.gt.u64 	%p262, %rd15654, %rd15644;
	mov.pred 	%p436, -1;
	mov.pred 	%p435, %p436;
	@%p262 bra 	$L__BB4_236;

	setp.eq.s64 	%p264, %rd15654, %rd15644;
	and.pred  	%p435, %p261, %p264;

$L__BB4_236:
	sub.s64 	%rd14646, %rd15651, %rd157;
	selp.u64 	%rd14647, 1, 0, %p435;
	sub.s64 	%rd423, %rd14646, %rd14647;
	setp.gt.u64 	%p266, %rd423, %rd15651;
	@%p266 bra 	$L__BB4_238;

	setp.eq.s64 	%p267, %rd423, %rd15651;
	and.pred  	%p436, %p435, %p267;

$L__BB4_238:
	sub.s64 	%rd14648, %rd15652, %rd154;
	not.pred 	%p268, %p436;
	selp.u64 	%rd14649, 1, 0, %p436;
	sub.s64 	%rd424, %rd14648, %rd14649;
	setp.le.u64 	%p269, %rd424, %rd15652;
	setp.ne.s64 	%p270, %rd424, %rd15652;
	or.pred  	%p271, %p268, %p270;
	sub.s64 	%rd15653, %rd15643, %rd155;
	and.pred  	%p272, %p269, %p271;
	mov.u64 	%rd15651, %rd423;
	mov.u64 	%rd15652, %rd424;
	@%p272 bra 	$L__BB4_228;
	bra.uni 	$L__BB4_239;

$L__BB4_240:
	mov.u64 	%rd14654, 1;
	shl.b64 	%rd14655, %rd14654, %r128;
	and.b64  	%rd14656, %rd14655, %rd405;
	setp.eq.s64 	%p275, %rd14656, 0;
	@%p275 bra 	$L__BB4_249;

	// begin inline asm
	mul.lo.u64 %rd14657, %rd15663, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14660, %rd15663, %rd15643;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14663, %rd15663, %rd15644;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14666, %rd15663, %rd15644;
	// end inline asm
	add.s64 	%rd14753, %rd14660, %rd14663;
	// begin inline asm
	mul.lo.u64 %rd14669, %rd15663, %rd15651;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14672, %rd15663, %rd15651;
	// end inline asm
	add.s64 	%rd14754, %rd14666, %rd14669;
	// begin inline asm
	mul.lo.u64 %rd14675, %rd15663, %rd15652;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14678, %rd15663, %rd15652;
	// end inline asm
	add.s64 	%rd14755, %rd14672, %rd14675;
	// begin inline asm
	mul.lo.u64 %rd14681, %rd15664, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14684, %rd15664, %rd15643;
	// end inline asm
	add.s64 	%rd429, %rd14753, %rd14681;
	add.s64 	%rd14756, %rd14754, %rd14684;
	// begin inline asm
	mul.lo.u64 %rd14687, %rd15664, %rd15644;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14690, %rd15664, %rd15644;
	// end inline asm
	add.s64 	%rd14757, %rd14756, %rd14687;
	add.s64 	%rd14758, %rd14755, %rd14690;
	// begin inline asm
	mul.lo.u64 %rd14693, %rd15664, %rd15651;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14696, %rd15664, %rd15651;
	// end inline asm
	add.s64 	%rd14759, %rd14758, %rd14693;
	add.s64 	%rd14760, %rd14678, %rd14696;
	// begin inline asm
	mul.lo.u64 %rd14699, %rd15664, %rd15652;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14702, %rd15664, %rd15652;
	// end inline asm
	add.s64 	%rd14761, %rd14760, %rd14699;
	// begin inline asm
	mul.lo.u64 %rd14705, %rd15665, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14708, %rd15665, %rd15643;
	// end inline asm
	add.s64 	%rd430, %rd14757, %rd14705;
	add.s64 	%rd14762, %rd14759, %rd14708;
	// begin inline asm
	mul.lo.u64 %rd14711, %rd15665, %rd15644;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14714, %rd15665, %rd15644;
	// end inline asm
	add.s64 	%rd14763, %rd14762, %rd14711;
	add.s64 	%rd14764, %rd14761, %rd14714;
	// begin inline asm
	mul.lo.u64 %rd14717, %rd15665, %rd15651;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14720, %rd15665, %rd15651;
	// end inline asm
	add.s64 	%rd14765, %rd14764, %rd14717;
	add.s64 	%rd14766, %rd14702, %rd14720;
	// begin inline asm
	mul.lo.u64 %rd14723, %rd15665, %rd15652;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14726, %rd15665, %rd15652;
	// end inline asm
	add.s64 	%rd14767, %rd14766, %rd14723;
	// begin inline asm
	mul.lo.u64 %rd14729, %rd15666, %rd15643;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14732, %rd15666, %rd15643;
	// end inline asm
	add.s64 	%rd431, %rd14763, %rd14729;
	add.s64 	%rd14768, %rd14765, %rd14732;
	// begin inline asm
	mul.lo.u64 %rd14735, %rd15666, %rd15644;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14738, %rd15666, %rd15644;
	// end inline asm
	add.s64 	%rd15659, %rd14768, %rd14735;
	add.s64 	%rd14769, %rd14767, %rd14738;
	// begin inline asm
	mul.lo.u64 %rd14741, %rd15666, %rd15651;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14744, %rd15666, %rd15651;
	// end inline asm
	add.s64 	%rd15660, %rd14769, %rd14741;
	add.s64 	%rd14770, %rd14726, %rd14744;
	// begin inline asm
	mul.lo.u64 %rd14747, %rd15666, %rd15652;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15662, %rd15666, %rd15652;
	// end inline asm
	add.s64 	%rd15661, %rd14770, %rd14747;
	mov.u64 	%rd15663, %rd14657;
	mov.u64 	%rd15664, %rd429;
	mov.u64 	%rd15665, %rd430;
	mov.u64 	%rd15666, %rd431;
	bra.uni 	$L__BB4_242;

$L__BB4_248:
	setp.lt.u64 	%p286, %rd15663, %rd155;
	selp.u64 	%rd14774, 1, 0, %p286;
	sub.s64 	%rd15663, %rd15663, %rd155;
	add.s64 	%rd14775, %rd156, %rd14774;
	setp.lt.u64 	%p287, %rd15664, %rd14775;
	selp.u64 	%rd14776, 1, 0, %p287;
	sub.s64 	%rd15664, %rd15664, %rd14775;
	add.s64 	%rd14777, %rd157, %rd14776;
	setp.lt.u64 	%p288, %rd15665, %rd14777;
	selp.u64 	%rd14778, 1, 0, %p288;
	sub.s64 	%rd15665, %rd15665, %rd14777;
	add.s64 	%rd14779, %rd154, %rd14778;
	setp.lt.u64 	%p289, %rd15666, %rd14779;
	selp.u64 	%rd14780, 1, 0, %p289;
	sub.s64 	%rd15666, %rd15666, %rd14779;
	setp.lt.u64 	%p290, %rd15659, %rd14780;
	selp.u64 	%rd14781, 1, 0, %p290;
	sub.s64 	%rd15659, %rd15659, %rd14780;
	setp.lt.u64 	%p291, %rd15660, %rd14781;
	selp.u64 	%rd14782, 1, 0, %p291;
	sub.s64 	%rd15660, %rd15660, %rd14781;
	setp.lt.u64 	%p292, %rd15661, %rd14782;
	selp.u64 	%rd14783, 1, 0, %p292;
	sub.s64 	%rd15661, %rd15661, %rd14782;
	sub.s64 	%rd15662, %rd15662, %rd14783;

$L__BB4_242:
	or.b64  	%rd14771, %rd15662, %rd15661;
	or.b64  	%rd14772, %rd14771, %rd15660;
	or.b64  	%rd14773, %rd14772, %rd15659;
	setp.ne.s64 	%p276, %rd14773, 0;
	setp.gt.u64 	%p277, %rd15666, %rd154;
	or.pred  	%p278, %p276, %p277;
	@%p278 bra 	$L__BB4_248;

	setp.lt.u64 	%p279, %rd15666, %rd154;
	@%p279 bra 	$L__BB4_249;

	setp.gt.u64 	%p280, %rd15665, %rd157;
	@%p280 bra 	$L__BB4_248;

	setp.lt.u64 	%p281, %rd15665, %rd157;
	@%p281 bra 	$L__BB4_249;

	setp.gt.u64 	%p282, %rd15664, %rd156;
	@%p282 bra 	$L__BB4_248;

	setp.lt.u64 	%p283, %rd15664, %rd156;
	setp.le.u64 	%p284, %rd15663, %rd155;
	or.pred  	%p285, %p283, %p284;
	@%p285 bra 	$L__BB4_249;
	bra.uni 	$L__BB4_248;

$L__BB4_249:
	add.s32 	%r11239, %r128, -1;
	setp.gt.s32 	%p293, %r128, 0;
	@%p293 bra 	$L__BB4_227;

	add.s32 	%r130, %r11238, -1;
	setp.gt.s32 	%p294, %r11238, 0;
	mov.u32 	%r11238, %r130;
	@%p294 bra 	$L__BB4_226;

	// begin inline asm
	mul.lo.u64 %rd15667, %rd15627, %rd15663;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14787, %rd15627, %rd15663;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14790, %rd15627, %rd15664;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14793, %rd15627, %rd15664;
	// end inline asm
	add.s64 	%rd14880, %rd14787, %rd14790;
	// begin inline asm
	mul.lo.u64 %rd14796, %rd15627, %rd15665;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14799, %rd15627, %rd15665;
	// end inline asm
	add.s64 	%rd14881, %rd14793, %rd14796;
	// begin inline asm
	mul.lo.u64 %rd14802, %rd15627, %rd15666;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14805, %rd15627, %rd15666;
	// end inline asm
	add.s64 	%rd14882, %rd14799, %rd14802;
	// begin inline asm
	mul.lo.u64 %rd14808, %rd15628, %rd15663;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14811, %rd15628, %rd15663;
	// end inline asm
	add.s64 	%rd15668, %rd14880, %rd14808;
	add.s64 	%rd14883, %rd14881, %rd14811;
	// begin inline asm
	mul.lo.u64 %rd14814, %rd15628, %rd15664;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14817, %rd15628, %rd15664;
	// end inline asm
	add.s64 	%rd14884, %rd14883, %rd14814;
	add.s64 	%rd14885, %rd14882, %rd14817;
	// begin inline asm
	mul.lo.u64 %rd14820, %rd15628, %rd15665;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14823, %rd15628, %rd15665;
	// end inline asm
	add.s64 	%rd14886, %rd14885, %rd14820;
	add.s64 	%rd14887, %rd14805, %rd14823;
	// begin inline asm
	mul.lo.u64 %rd14826, %rd15628, %rd15666;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14829, %rd15628, %rd15666;
	// end inline asm
	add.s64 	%rd14888, %rd14887, %rd14826;
	// begin inline asm
	mul.lo.u64 %rd14832, %rd15629, %rd15663;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14835, %rd15629, %rd15663;
	// end inline asm
	add.s64 	%rd15669, %rd14884, %rd14832;
	add.s64 	%rd14889, %rd14886, %rd14835;
	// begin inline asm
	mul.lo.u64 %rd14838, %rd15629, %rd15664;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14841, %rd15629, %rd15664;
	// end inline asm
	add.s64 	%rd14890, %rd14889, %rd14838;
	add.s64 	%rd14891, %rd14888, %rd14841;
	// begin inline asm
	mul.lo.u64 %rd14844, %rd15629, %rd15665;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14847, %rd15629, %rd15665;
	// end inline asm
	add.s64 	%rd14892, %rd14891, %rd14844;
	add.s64 	%rd14893, %rd14829, %rd14847;
	// begin inline asm
	mul.lo.u64 %rd14850, %rd15629, %rd15666;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14853, %rd15629, %rd15666;
	// end inline asm
	add.s64 	%rd14894, %rd14893, %rd14850;
	// begin inline asm
	mul.lo.u64 %rd14856, %rd15630, %rd15663;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14859, %rd15630, %rd15663;
	// end inline asm
	add.s64 	%rd15670, %rd14890, %rd14856;
	add.s64 	%rd14895, %rd14892, %rd14859;
	// begin inline asm
	mul.lo.u64 %rd14862, %rd15630, %rd15664;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14865, %rd15630, %rd15664;
	// end inline asm
	add.s64 	%rd15671, %rd14895, %rd14862;
	add.s64 	%rd14896, %rd14894, %rd14865;
	// begin inline asm
	mul.lo.u64 %rd14868, %rd15630, %rd15665;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14871, %rd15630, %rd15665;
	// end inline asm
	add.s64 	%rd15672, %rd14896, %rd14868;
	add.s64 	%rd14897, %rd14853, %rd14871;
	// begin inline asm
	mul.lo.u64 %rd14874, %rd15630, %rd15666;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15674, %rd15630, %rd15666;
	// end inline asm
	add.s64 	%rd15673, %rd14897, %rd14874;
	bra.uni 	$L__BB4_252;

$L__BB4_292:
	setp.lt.u64 	%p370, %rd15667, %rd155;
	selp.u64 	%rd15182, 1, 0, %p370;
	sub.s64 	%rd15667, %rd15667, %rd155;
	add.s64 	%rd15183, %rd156, %rd15182;
	setp.lt.u64 	%p371, %rd15668, %rd15183;
	selp.u64 	%rd15184, 1, 0, %p371;
	sub.s64 	%rd15668, %rd15668, %rd15183;
	add.s64 	%rd15185, %rd157, %rd15184;
	setp.lt.u64 	%p372, %rd15669, %rd15185;
	selp.u64 	%rd15186, 1, 0, %p372;
	sub.s64 	%rd15669, %rd15669, %rd15185;
	add.s64 	%rd15187, %rd154, %rd15186;
	setp.lt.u64 	%p373, %rd15670, %rd15187;
	selp.u64 	%rd15188, 1, 0, %p373;
	sub.s64 	%rd15670, %rd15670, %rd15187;
	setp.lt.u64 	%p374, %rd15671, %rd15188;
	selp.u64 	%rd15189, 1, 0, %p374;
	sub.s64 	%rd15671, %rd15671, %rd15188;
	setp.lt.u64 	%p375, %rd15672, %rd15189;
	selp.u64 	%rd15190, 1, 0, %p375;
	sub.s64 	%rd15672, %rd15672, %rd15189;
	setp.lt.u64 	%p376, %rd15673, %rd15190;
	selp.u64 	%rd15191, 1, 0, %p376;
	sub.s64 	%rd15673, %rd15673, %rd15190;
	sub.s64 	%rd15674, %rd15674, %rd15191;

$L__BB4_252:
	or.b64  	%rd14898, %rd15674, %rd15673;
	or.b64  	%rd14899, %rd14898, %rd15672;
	or.b64  	%rd14900, %rd14899, %rd15671;
	setp.ne.s64 	%p295, %rd14900, 0;
	setp.gt.u64 	%p296, %rd15670, %rd154;
	or.pred  	%p297, %p295, %p296;
	@%p297 bra 	$L__BB4_292;

	setp.lt.u64 	%p298, %rd15670, %rd154;
	@%p298 bra 	$L__BB4_258;

	setp.gt.u64 	%p299, %rd15669, %rd157;
	@%p299 bra 	$L__BB4_292;

	setp.lt.u64 	%p300, %rd15669, %rd157;
	@%p300 bra 	$L__BB4_258;

	setp.gt.u64 	%p301, %rd15668, %rd156;
	@%p301 bra 	$L__BB4_292;

	setp.ge.u64 	%p302, %rd15668, %rd156;
	setp.gt.u64 	%p303, %rd15667, %rd155;
	and.pred  	%p304, %p302, %p303;
	@%p304 bra 	$L__BB4_292;

$L__BB4_258:
	// begin inline asm
	mul.lo.u64 %rd15675, %rd15667, %rd15667;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14904, %rd15667, %rd15667;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd14907, %rd15667, %rd15668;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14910, %rd15667, %rd15668;
	// end inline asm
	add.s64 	%rd14997, %rd14904, %rd14907;
	// begin inline asm
	mul.lo.u64 %rd14913, %rd15667, %rd15669;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14916, %rd15667, %rd15669;
	// end inline asm
	add.s64 	%rd14998, %rd14910, %rd14913;
	// begin inline asm
	mul.lo.u64 %rd14919, %rd15667, %rd15670;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14922, %rd15667, %rd15670;
	// end inline asm
	add.s64 	%rd14999, %rd14916, %rd14919;
	// begin inline asm
	mul.lo.u64 %rd14925, %rd15668, %rd15667;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14928, %rd15668, %rd15667;
	// end inline asm
	add.s64 	%rd15676, %rd14997, %rd14925;
	add.s64 	%rd15000, %rd14998, %rd14928;
	// begin inline asm
	mul.lo.u64 %rd14931, %rd15668, %rd15668;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14934, %rd15668, %rd15668;
	// end inline asm
	add.s64 	%rd15001, %rd15000, %rd14931;
	add.s64 	%rd15002, %rd14999, %rd14934;
	// begin inline asm
	mul.lo.u64 %rd14937, %rd15668, %rd15669;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14940, %rd15668, %rd15669;
	// end inline asm
	add.s64 	%rd15003, %rd15002, %rd14937;
	add.s64 	%rd15004, %rd14922, %rd14940;
	// begin inline asm
	mul.lo.u64 %rd14943, %rd15668, %rd15670;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14946, %rd15668, %rd15670;
	// end inline asm
	add.s64 	%rd15005, %rd15004, %rd14943;
	// begin inline asm
	mul.lo.u64 %rd14949, %rd15669, %rd15667;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14952, %rd15669, %rd15667;
	// end inline asm
	add.s64 	%rd15677, %rd15001, %rd14949;
	add.s64 	%rd15006, %rd15003, %rd14952;
	// begin inline asm
	mul.lo.u64 %rd14955, %rd15669, %rd15668;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14958, %rd15669, %rd15668;
	// end inline asm
	add.s64 	%rd15007, %rd15006, %rd14955;
	add.s64 	%rd15008, %rd15005, %rd14958;
	// begin inline asm
	mul.lo.u64 %rd14961, %rd15669, %rd15669;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14964, %rd15669, %rd15669;
	// end inline asm
	add.s64 	%rd15009, %rd15008, %rd14961;
	add.s64 	%rd15010, %rd14946, %rd14964;
	// begin inline asm
	mul.lo.u64 %rd14967, %rd15669, %rd15670;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14970, %rd15669, %rd15670;
	// end inline asm
	add.s64 	%rd15011, %rd15010, %rd14967;
	// begin inline asm
	mul.lo.u64 %rd14973, %rd15670, %rd15667;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14976, %rd15670, %rd15667;
	// end inline asm
	add.s64 	%rd15678, %rd15007, %rd14973;
	add.s64 	%rd15012, %rd15009, %rd14976;
	// begin inline asm
	mul.lo.u64 %rd14979, %rd15670, %rd15668;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14982, %rd15670, %rd15668;
	// end inline asm
	add.s64 	%rd15679, %rd15012, %rd14979;
	add.s64 	%rd15013, %rd15011, %rd14982;
	// begin inline asm
	mul.lo.u64 %rd14985, %rd15670, %rd15669;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd14988, %rd15670, %rd15669;
	// end inline asm
	add.s64 	%rd15680, %rd15013, %rd14985;
	add.s64 	%rd15014, %rd14970, %rd14988;
	// begin inline asm
	mul.lo.u64 %rd14991, %rd15670, %rd15670;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15682, %rd15670, %rd15670;
	// end inline asm
	add.s64 	%rd15681, %rd15014, %rd14991;
	bra.uni 	$L__BB4_259;

$L__BB4_291:
	setp.lt.u64 	%p363, %rd15675, %rd155;
	selp.u64 	%rd15172, 1, 0, %p363;
	sub.s64 	%rd15675, %rd15675, %rd155;
	add.s64 	%rd15173, %rd156, %rd15172;
	setp.lt.u64 	%p364, %rd15676, %rd15173;
	selp.u64 	%rd15174, 1, 0, %p364;
	sub.s64 	%rd15676, %rd15676, %rd15173;
	add.s64 	%rd15175, %rd157, %rd15174;
	setp.lt.u64 	%p365, %rd15677, %rd15175;
	selp.u64 	%rd15176, 1, 0, %p365;
	sub.s64 	%rd15677, %rd15677, %rd15175;
	add.s64 	%rd15177, %rd154, %rd15176;
	setp.lt.u64 	%p366, %rd15678, %rd15177;
	selp.u64 	%rd15178, 1, 0, %p366;
	sub.s64 	%rd15678, %rd15678, %rd15177;
	setp.lt.u64 	%p367, %rd15679, %rd15178;
	selp.u64 	%rd15179, 1, 0, %p367;
	sub.s64 	%rd15679, %rd15679, %rd15178;
	setp.lt.u64 	%p368, %rd15680, %rd15179;
	selp.u64 	%rd15180, 1, 0, %p368;
	sub.s64 	%rd15680, %rd15680, %rd15179;
	setp.lt.u64 	%p369, %rd15681, %rd15180;
	selp.u64 	%rd15181, 1, 0, %p369;
	sub.s64 	%rd15681, %rd15681, %rd15180;
	sub.s64 	%rd15682, %rd15682, %rd15181;

$L__BB4_259:
	or.b64  	%rd15015, %rd15682, %rd15681;
	or.b64  	%rd15016, %rd15015, %rd15680;
	or.b64  	%rd15017, %rd15016, %rd15679;
	setp.ne.s64 	%p305, %rd15017, 0;
	setp.gt.u64 	%p306, %rd15678, %rd154;
	or.pred  	%p307, %p305, %p306;
	@%p307 bra 	$L__BB4_291;

	setp.lt.u64 	%p308, %rd15678, %rd154;
	@%p308 bra 	$L__BB4_265;

	setp.gt.u64 	%p309, %rd15677, %rd157;
	@%p309 bra 	$L__BB4_291;

	setp.lt.u64 	%p310, %rd15677, %rd157;
	@%p310 bra 	$L__BB4_265;

	setp.gt.u64 	%p311, %rd15676, %rd156;
	@%p311 bra 	$L__BB4_291;

	setp.ge.u64 	%p312, %rd15676, %rd156;
	setp.gt.u64 	%p313, %rd15675, %rd155;
	and.pred  	%p314, %p312, %p313;
	@%p314 bra 	$L__BB4_291;

$L__BB4_265:
	sub.s64 	%rd15686, %rd15675, %rd15709;
	sub.s64 	%rd15687, %rd15676, %rd15710;
	setp.ge.u64 	%p315, %rd15675, %rd15709;
	mov.u16 	%rs1170, 0;
	mov.u16 	%rs1169, %rs1170;
	@%p315 bra 	$L__BB4_267;

	setp.eq.s64 	%p316, %rd15676, 0;
	not.b64 	%rd15018, %rd15710;
	add.s64 	%rd15019, %rd15676, %rd15018;
	neg.s64 	%rd15020, %rd15710;
	selp.b64 	%rd15687, %rd15020, %rd15019, %p316;
	setp.le.u64 	%p317, %rd15676, %rd15710;
	selp.u16 	%rs1169, 1, 0, %p317;

$L__BB4_267:
	setp.eq.s16 	%p318, %rs1169, 0;
	sub.s64 	%rd15688, %rd15677, %rd15711;
	@%p318 bra 	$L__BB4_269;

	setp.eq.s64 	%p319, %rd15677, 0;
	not.b64 	%rd15021, %rd15711;
	add.s64 	%rd15022, %rd15677, %rd15021;
	neg.s64 	%rd15023, %rd15711;
	selp.b64 	%rd15688, %rd15023, %rd15022, %p319;
	setp.le.u64 	%p320, %rd15677, %rd15711;
	selp.u16 	%rs1170, 1, 0, %p320;

$L__BB4_269:
	setp.eq.s16 	%p321, %rs1170, 0;
	mov.u16 	%rs1171, 0;
	sub.s64 	%rd15689, %rd15678, %rd15712;
	@%p321 bra 	$L__BB4_271;

	setp.eq.s64 	%p322, %rd15678, 0;
	not.b64 	%rd15024, %rd15712;
	add.s64 	%rd15025, %rd15678, %rd15024;
	neg.s64 	%rd15026, %rd15712;
	selp.b64 	%rd15689, %rd15026, %rd15025, %p322;
	setp.le.u64 	%p323, %rd15678, %rd15712;
	selp.u16 	%rs1171, 1, 0, %p323;

$L__BB4_271:
	setp.eq.s16 	%p324, %rs1171, 0;
	@%p324 bra 	$L__BB4_273;

	add.s64 	%rd15686, %rd15686, %rd155;
	add.s64 	%rd15687, %rd15687, %rd156;
	add.s64 	%rd15688, %rd15688, %rd157;
	add.s64 	%rd15689, %rd15689, %rd154;

$L__BB4_273:
	add.s64 	%rd15709, %rd15686, -8772561819708210092;
	add.s64 	%rd15027, %rd15687, -6170039885052185352;
	setp.eq.s64 	%p325, %rd15687, 0;
	selp.b64 	%rd15028, -6170039885052185351, %rd15027, %p325;
	setp.lt.u64 	%p326, %rd15686, 8772561819708210092;
	add.s64 	%rd15029, %rd15687, -6170039885052185351;
	selp.b64 	%rd15710, %rd15028, %rd15029, %p326;
	setp.lt.u64 	%p327, %rd15687, 6170039885052185352;
	and.pred  	%p328, %p326, %p327;
	add.s64 	%rd15030, %rd15688, -188021827762530522;
	setp.eq.s64 	%p329, %rd15688, 0;
	selp.b64 	%rd15031, -188021827762530521, %rd15030, %p329;
	add.s64 	%rd15032, %rd15688, -188021827762530521;
	selp.b64 	%rd15711, %rd15031, %rd15032, %p328;
	setp.lt.u64 	%p330, %rd15688, 188021827762530522;
	and.pred  	%p331, %p330, %p328;
	not.pred 	%p332, %p331;
	add.s64 	%rd15033, %rd15689, -6481385041966929817;
	setp.eq.s64 	%p333, %rd15689, 0;
	selp.b64 	%rd15034, -6481385041966929816, %rd15033, %p333;
	add.s64 	%rd15035, %rd15689, -6481385041966929816;
	selp.b64 	%rd15712, %rd15034, %rd15035, %p331;
	setp.gt.u64 	%p334, %rd15689, 6481385041966929816;
	or.pred  	%p335, %p334, %p332;
	@%p335 bra 	$L__BB4_275;

	add.s64 	%rd15709, %rd15709, %rd155;
	add.s64 	%rd15710, %rd15710, %rd156;
	add.s64 	%rd15711, %rd15711, %rd157;
	add.s64 	%rd15712, %rd15712, %rd154;

$L__BB4_275:
	mov.u64 	%rd15131, 0;
	// begin inline asm
	mul.lo.u64 %rd15694, %rd15667, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15039, %rd15667, %rd15131;
	// end inline asm
	// begin inline asm
	mul.lo.u64 %rd15042, %rd15667, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15045, %rd15667, %rd15131;
	// end inline asm
	add.s64 	%rd15132, %rd15039, %rd15042;
	// begin inline asm
	mul.lo.u64 %rd15048, %rd15667, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15051, %rd15667, %rd15131;
	// end inline asm
	add.s64 	%rd15133, %rd15045, %rd15048;
	// begin inline asm
	mul.lo.u64 %rd15054, %rd15667, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15057, %rd15667, %rd15131;
	// end inline asm
	add.s64 	%rd15134, %rd15051, %rd15054;
	// begin inline asm
	mul.lo.u64 %rd15060, %rd15668, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15063, %rd15668, %rd15131;
	// end inline asm
	add.s64 	%rd15695, %rd15132, %rd15060;
	add.s64 	%rd15135, %rd15133, %rd15063;
	// begin inline asm
	mul.lo.u64 %rd15066, %rd15668, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15069, %rd15668, %rd15131;
	// end inline asm
	add.s64 	%rd15136, %rd15135, %rd15066;
	add.s64 	%rd15137, %rd15134, %rd15069;
	// begin inline asm
	mul.lo.u64 %rd15072, %rd15668, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15075, %rd15668, %rd15131;
	// end inline asm
	add.s64 	%rd15138, %rd15137, %rd15072;
	add.s64 	%rd15139, %rd15057, %rd15075;
	// begin inline asm
	mul.lo.u64 %rd15078, %rd15668, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15081, %rd15668, %rd15131;
	// end inline asm
	add.s64 	%rd15140, %rd15139, %rd15078;
	// begin inline asm
	mul.lo.u64 %rd15084, %rd15669, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15087, %rd15669, %rd15131;
	// end inline asm
	add.s64 	%rd15696, %rd15136, %rd15084;
	add.s64 	%rd15141, %rd15138, %rd15087;
	// begin inline asm
	mul.lo.u64 %rd15090, %rd15669, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15093, %rd15669, %rd15131;
	// end inline asm
	add.s64 	%rd15142, %rd15141, %rd15090;
	add.s64 	%rd15143, %rd15140, %rd15093;
	// begin inline asm
	mul.lo.u64 %rd15096, %rd15669, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15099, %rd15669, %rd15131;
	// end inline asm
	add.s64 	%rd15144, %rd15143, %rd15096;
	add.s64 	%rd15145, %rd15081, %rd15099;
	// begin inline asm
	mul.lo.u64 %rd15102, %rd15669, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15105, %rd15669, %rd15131;
	// end inline asm
	add.s64 	%rd15146, %rd15145, %rd15102;
	// begin inline asm
	mul.lo.u64 %rd15108, %rd15670, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15111, %rd15670, %rd15131;
	// end inline asm
	add.s64 	%rd15697, %rd15142, %rd15108;
	add.s64 	%rd15147, %rd15144, %rd15111;
	// begin inline asm
	mul.lo.u64 %rd15114, %rd15670, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15117, %rd15670, %rd15131;
	// end inline asm
	add.s64 	%rd15698, %rd15147, %rd15114;
	add.s64 	%rd15148, %rd15146, %rd15117;
	// begin inline asm
	mul.lo.u64 %rd15120, %rd15670, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15123, %rd15670, %rd15131;
	// end inline asm
	add.s64 	%rd15699, %rd15148, %rd15120;
	add.s64 	%rd15149, %rd15105, %rd15123;
	// begin inline asm
	mul.lo.u64 %rd15126, %rd15670, %rd15131;
	// end inline asm
	// begin inline asm
	mul.hi.u64 %rd15701, %rd15670, %rd15131;
	// end inline asm
	add.s64 	%rd15700, %rd15149, %rd15126;
	bra.uni 	$L__BB4_276;

$L__BB4_290:
	setp.lt.u64 	%p356, %rd15694, %rd155;
	selp.u64 	%rd15162, 1, 0, %p356;
	sub.s64 	%rd15694, %rd15694, %rd155;
	add.s64 	%rd15163, %rd156, %rd15162;
	setp.lt.u64 	%p357, %rd15695, %rd15163;
	selp.u64 	%rd15164, 1, 0, %p357;
	sub.s64 	%rd15695, %rd15695, %rd15163;
	add.s64 	%rd15165, %rd157, %rd15164;
	setp.lt.u64 	%p358, %rd15696, %rd15165;
	selp.u64 	%rd15166, 1, 0, %p358;
	sub.s64 	%rd15696, %rd15696, %rd15165;
	add.s64 	%rd15167, %rd154, %rd15166;
	setp.lt.u64 	%p359, %rd15697, %rd15167;
	selp.u64 	%rd15168, 1, 0, %p359;
	sub.s64 	%rd15697, %rd15697, %rd15167;
	setp.lt.u64 	%p360, %rd15698, %rd15168;
	selp.u64 	%rd15169, 1, 0, %p360;
	sub.s64 	%rd15698, %rd15698, %rd15168;
	setp.lt.u64 	%p361, %rd15699, %rd15169;
	selp.u64 	%rd15170, 1, 0, %p361;
	sub.s64 	%rd15699, %rd15699, %rd15169;
	setp.lt.u64 	%p362, %rd15700, %rd15170;
	selp.u64 	%rd15171, 1, 0, %p362;
	sub.s64 	%rd15700, %rd15700, %rd15170;
	sub.s64 	%rd15701, %rd15701, %rd15171;

$L__BB4_276:
	or.b64  	%rd15150, %rd15701, %rd15700;
	or.b64  	%rd15151, %rd15150, %rd15699;
	or.b64  	%rd15152, %rd15151, %rd15698;
	setp.ne.s64 	%p336, %rd15152, 0;
	setp.gt.u64 	%p337, %rd15697, %rd154;
	or.pred  	%p338, %p336, %p337;
	@%p338 bra 	$L__BB4_290;

	setp.lt.u64 	%p339, %rd15697, %rd154;
	@%p339 bra 	$L__BB4_282;

	setp.gt.u64 	%p340, %rd15696, %rd157;
	@%p340 bra 	$L__BB4_290;

	setp.lt.u64 	%p341, %rd15696, %rd157;
	@%p341 bra 	$L__BB4_282;

	setp.gt.u64 	%p342, %rd15695, %rd156;
	@%p342 bra 	$L__BB4_290;

	setp.ge.u64 	%p343, %rd15695, %rd156;
	setp.gt.u64 	%p344, %rd15694, %rd155;
	and.pred  	%p345, %p343, %p344;
	@%p345 bra 	$L__BB4_290;

$L__BB4_282:
	sub.s64 	%rd534, %rd15694, %rd15705;
	sub.s64 	%rd15706, %rd15695, %rd15706;
	sub.s64 	%rd15707, %rd15696, %rd15707;
	sub.s64 	%rd15708, %rd15697, %rd15708;
	setp.ge.u64 	%p346, %rd15694, %rd15705;
	mov.u16 	%rs1173, 0;
	mov.u16 	%rs1172, %rs1173;
	@%p346 bra 	$L__BB4_284;

	setp.eq.s64 	%p347, %rd15695, 0;
	not.b64 	%rd15153, %rd15706;
	add.s64 	%rd15154, %rd15695, %rd15153;
	neg.s64 	%rd15155, %rd15706;
	selp.b64 	%rd15706, %rd15155, %rd15154, %p347;
	setp.le.u64 	%p348, %rd15695, %rd15706;
	selp.u16 	%rs1172, 1, 0, %p348;

$L__BB4_284:
	setp.eq.s16 	%p349, %rs1172, 0;
	@%p349 bra 	$L__BB4_286;

	setp.eq.s64 	%p350, %rd15696, 0;
	not.b64 	%rd15156, %rd15707;
	add.s64 	%rd15157, %rd15696, %rd15156;
	neg.s64 	%rd15158, %rd15707;
	selp.b64 	%rd15707, %rd15158, %rd15157, %p350;
	setp.le.u64 	%p351, %rd15696, %rd15707;
	selp.u16 	%rs1173, 1, 0, %p351;

$L__BB4_286:
	setp.eq.s16 	%p352, %rs1173, 0;
	mov.u16 	%rs1174, 0;
	@%p352 bra 	$L__BB4_288;

	setp.eq.s64 	%p353, %rd15697, 0;
	not.b64 	%rd15159, %rd15708;
	add.s64 	%rd15160, %rd15697, %rd15159;
	neg.s64 	%rd15161, %rd15708;
	selp.b64 	%rd15708, %rd15161, %rd15160, %p353;
	setp.le.u64 	%p354, %rd15697, %rd15708;
	selp.u16 	%rs1174, 1, 0, %p354;

$L__BB4_288:
	setp.eq.s16 	%p355, %rs1174, 0;
	mov.u64 	%rd15705, %rd534;
	@%p355 bra 	$L__BB4_293;

	add.s64 	%rd15705, %rd534, %rd155;
	add.s64 	%rd15706, %rd15706, %rd156;
	add.s64 	%rd15707, %rd15707, %rd157;
	add.s64 	%rd15708, %rd15708, %rd154;

$L__BB4_293:
	add.s32 	%r11235, %r122, -1;
	setp.gt.s32 	%p377, %r122, 0;
	@%p377 bra 	$L__BB4_118;

	and.b64  	%rd15213, %rd15705, 1;
	shr.u64 	%rd15214, %rd15709, 56;
	bfi.b64 	%rd15215, %rd15214, %rd15213, 8, 56;
	shr.u64 	%rd15216, %rd15709, 32;
	and.b64  	%rd15217, %rd15216, 16711680;
	or.b64  	%rd15218, %rd15217, %rd15215;
	shr.u64 	%rd15219, %rd15709, 16;
	and.b64  	%rd15220, %rd15219, 4278190080;
	or.b64  	%rd15221, %rd15220, %rd15218;
	and.b64  	%rd15222, %rd15709, 1095216660480;
	or.b64  	%rd15223, %rd15222, %rd15221;
	shl.b64 	%rd15224, %rd15709, 16;
	and.b64  	%rd15225, %rd15224, 280375465082880;
	or.b64  	%rd15226, %rd15225, %rd15223;
	or.b64  	%rd15227, %rd15226, 2;
	shl.b64 	%rd15228, %rd15709, 32;
	and.b64  	%rd15229, %rd15228, 71776119061217280;
	xor.b64  	%rd15230, %rd15229, %rd15227;
	shl.b64 	%rd15231, %rd15709, 48;
	and.b64  	%rd15232, %rd15231, -72057594037927936;
	xor.b64  	%rd15738, %rd15232, %rd15230;
	shr.u64 	%rd15233, %rd15710, 56;
	and.b64  	%rd15234, %rd15709, 255;
	bfi.b64 	%rd15235, %rd15233, %rd15234, 8, 56;
	shr.u64 	%rd15236, %rd15710, 32;
	and.b64  	%rd15237, %rd15236, 16711680;
	or.b64  	%rd15238, %rd15237, %rd15235;
	shr.u64 	%rd15239, %rd15710, 16;
	and.b64  	%rd15240, %rd15239, 4278190080;
	or.b64  	%rd15241, %rd15240, %rd15238;
	and.b64  	%rd15242, %rd15710, 1095216660480;
	or.b64  	%rd15243, %rd15242, %rd15241;
	shl.b64 	%rd15244, %rd15710, 16;
	and.b64  	%rd15245, %rd15244, 280375465082880;
	or.b64  	%rd15246, %rd15245, %rd15243;
	shl.b64 	%rd15247, %rd15710, 32;
	and.b64  	%rd15248, %rd15247, 71776119061217280;
	xor.b64  	%rd15249, %rd15248, %rd15246;
	shl.b64 	%rd15250, %rd15710, 48;
	and.b64  	%rd15251, %rd15250, -72057594037927936;
	xor.b64  	%rd15733, %rd15251, %rd15249;
	shr.u64 	%rd15252, %rd15711, 56;
	and.b64  	%rd15253, %rd15710, 255;
	bfi.b64 	%rd15254, %rd15252, %rd15253, 8, 56;
	shr.u64 	%rd15255, %rd15711, 32;
	and.b64  	%rd15256, %rd15255, 16711680;
	or.b64  	%rd15257, %rd15256, %rd15254;
	shr.u64 	%rd15258, %rd15711, 16;
	and.b64  	%rd15259, %rd15258, 4278190080;
	or.b64  	%rd15260, %rd15259, %rd15257;
	and.b64  	%rd15261, %rd15711, 1095216660480;
	or.b64  	%rd15262, %rd15261, %rd15260;
	shl.b64 	%rd15263, %rd15711, 16;
	and.b64  	%rd15264, %rd15263, 280375465082880;
	or.b64  	%rd15265, %rd15264, %rd15262;
	shl.b64 	%rd15266, %rd15711, 32;
	and.b64  	%rd15267, %rd15266, 71776119061217280;
	xor.b64  	%rd15268, %rd15267, %rd15265;
	shl.b64 	%rd15269, %rd15711, 48;
	and.b64  	%rd15270, %rd15269, -72057594037927936;
	xor.b64  	%rd15728, %rd15270, %rd15268;
	shr.u64 	%rd15271, %rd15712, 56;
	and.b64  	%rd15272, %rd15711, 255;
	bfi.b64 	%rd15273, %rd15271, %rd15272, 8, 56;
	shr.u64 	%rd15274, %rd15712, 32;
	and.b64  	%rd15275, %rd15274, 16711680;
	or.b64  	%rd15276, %rd15275, %rd15273;
	shr.u64 	%rd15277, %rd15712, 16;
	and.b64  	%rd15278, %rd15277, 4278190080;
	or.b64  	%rd15279, %rd15278, %rd15276;
	and.b64  	%rd15280, %rd15712, 1095216660480;
	or.b64  	%rd15281, %rd15280, %rd15279;
	shl.b64 	%rd15282, %rd15712, 16;
	and.b64  	%rd15283, %rd15282, 280375465082880;
	or.b64  	%rd15284, %rd15283, %rd15281;
	shl.b64 	%rd15285, %rd15712, 32;
	and.b64  	%rd15286, %rd15285, 71776119061217280;
	xor.b64  	%rd15287, %rd15286, %rd15284;
	shl.b64 	%rd15288, %rd15712, 48;
	and.b64  	%rd15289, %rd15288, -72057594037927936;
	xor.b64  	%rd15723, %rd15289, %rd15287;
	and.b64  	%rd15290, %rd15712, 255;
	or.b64  	%rd15718, %rd15290, 256;
	mov.u64 	%rd15714, 0;
	mov.u64 	%rd15291, 32898;
	mov.u64 	%rd15292, 1;
	st.local.v2.u64 	[%rd15713], {%rd15292, %rd15291};
	mov.u64 	%rd15293, -9223372034707259392;
	mov.u64 	%rd15294, -9223372036854742902;
	st.local.v2.u64 	[%rd15713+16], {%rd15294, %rd15293};
	mov.u64 	%rd15295, 32907;
	mov.u64 	%rd15296, 2147483649;
	st.local.v2.u64 	[%rd15713+32], {%rd15295, %rd15296};
	mov.u64 	%rd15297, -9223372036854743031;
	mov.u64 	%rd15298, -9223372034707259263;
	st.local.v2.u64 	[%rd15713+48], {%rd15298, %rd15297};
	mov.u64 	%rd15299, 136;
	mov.u64 	%rd15300, 138;
	st.local.v2.u64 	[%rd15713+64], {%rd15300, %rd15299};
	mov.u64 	%rd15301, 2147483658;
	mov.u64 	%rd15302, 2147516425;
	st.local.v2.u64 	[%rd15713+80], {%rd15302, %rd15301};
	mov.u64 	%rd15303, -9223372036854775669;
	mov.u64 	%rd15304, 2147516555;
	st.local.v2.u64 	[%rd15713+96], {%rd15304, %rd15303};
	mov.u64 	%rd15305, -9223372036854743037;
	mov.u64 	%rd15306, -9223372036854742903;
	st.local.v2.u64 	[%rd15713+112], {%rd15306, %rd15305};
	mov.u64 	%rd15307, -9223372036854775680;
	mov.u64 	%rd15308, -9223372036854743038;
	st.local.v2.u64 	[%rd15713+128], {%rd15308, %rd15307};
	mov.u64 	%rd15309, -9223372034707292150;
	mov.u64 	%rd15310, 32778;
	st.local.v2.u64 	[%rd15713+144], {%rd15310, %rd15309};
	mov.u64 	%rd15311, -9223372036854742912;
	st.local.v2.u64 	[%rd15713+160], {%rd15298, %rd15311};
	mov.u64 	%rd15312, -9223372034707259384;
	st.local.v2.u64 	[%rd15713+176], {%rd15296, %rd15312};
	mov.u32 	%r11240, 0;
	mov.u64 	%rd15730, -9223372036854775808;
	mov.u64 	%rd15715, %rd15714;
	mov.u64 	%rd15716, %rd15714;
	mov.u64 	%rd15717, %rd15714;
	mov.u64 	%rd15719, %rd15714;
	mov.u64 	%rd15720, %rd15714;
	mov.u64 	%rd15721, %rd15714;
	mov.u64 	%rd15722, %rd15714;
	mov.u64 	%rd15724, %rd15714;
	mov.u64 	%rd15725, %rd15714;
	mov.u64 	%rd15726, %rd15714;
	mov.u64 	%rd15727, %rd15714;
	mov.u64 	%rd15729, %rd15714;
	mov.u64 	%rd15731, %rd15714;
	mov.u64 	%rd15732, %rd15714;
	mov.u64 	%rd15734, %rd15714;
	mov.u64 	%rd15735, %rd15714;
	mov.u64 	%rd15736, %rd15714;
	mov.u64 	%rd15737, %rd15714;

$L__BB4_295:
	xor.b64  	%rd15313, %rd15737, %rd15738;
	xor.b64  	%rd15314, %rd15313, %rd15736;
	xor.b64  	%rd15315, %rd15314, %rd15735;
	xor.b64  	%rd15316, %rd15315, %rd15734;
	xor.b64  	%rd15317, %rd15732, %rd15733;
	xor.b64  	%rd15318, %rd15317, %rd15731;
	xor.b64  	%rd15319, %rd15318, %rd15730;
	xor.b64  	%rd15320, %rd15319, %rd15729;
	xor.b64  	%rd15321, %rd15727, %rd15728;
	xor.b64  	%rd15322, %rd15321, %rd15726;
	xor.b64  	%rd15323, %rd15322, %rd15725;
	xor.b64  	%rd15324, %rd15323, %rd15724;
	xor.b64  	%rd15325, %rd15722, %rd15723;
	xor.b64  	%rd15326, %rd15325, %rd15721;
	xor.b64  	%rd15327, %rd15326, %rd15720;
	xor.b64  	%rd15328, %rd15327, %rd15719;
	xor.b64  	%rd15329, %rd15717, %rd15718;
	xor.b64  	%rd15330, %rd15329, %rd15716;
	xor.b64  	%rd15331, %rd15330, %rd15715;
	xor.b64  	%rd15332, %rd15331, %rd15714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11010,%dummy}, %rd15320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11011}, %rd15320;
	}
	shf.r.wrap.b32 	%r11012, %r11011, %r11010, 1;
	shf.r.wrap.b32 	%r11013, %r11010, %r11011, 1;
	mov.b64 	%rd15333, {%r11013, %r11012};
	xor.b64  	%rd15334, %rd15333, %rd15332;
	xor.b64  	%rd15335, %rd15334, %rd15738;
	xor.b64  	%rd15336, %rd15334, %rd15737;
	xor.b64  	%rd15337, %rd15334, %rd15736;
	xor.b64  	%rd15338, %rd15334, %rd15735;
	xor.b64  	%rd15339, %rd15334, %rd15734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11014,%dummy}, %rd15324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11015}, %rd15324;
	}
	shf.r.wrap.b32 	%r11016, %r11015, %r11014, 1;
	shf.r.wrap.b32 	%r11017, %r11014, %r11015, 1;
	mov.b64 	%rd15340, {%r11017, %r11016};
	xor.b64  	%rd15341, %rd15340, %rd15316;
	xor.b64  	%rd15342, %rd15341, %rd15733;
	xor.b64  	%rd15343, %rd15341, %rd15732;
	xor.b64  	%rd15344, %rd15341, %rd15731;
	xor.b64  	%rd15345, %rd15341, %rd15730;
	xor.b64  	%rd15346, %rd15341, %rd15729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11018,%dummy}, %rd15328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11019}, %rd15328;
	}
	shf.r.wrap.b32 	%r11020, %r11019, %r11018, 1;
	shf.r.wrap.b32 	%r11021, %r11018, %r11019, 1;
	mov.b64 	%rd15347, {%r11021, %r11020};
	xor.b64  	%rd15348, %rd15347, %rd15320;
	xor.b64  	%rd15349, %rd15348, %rd15728;
	xor.b64  	%rd15350, %rd15348, %rd15727;
	xor.b64  	%rd15351, %rd15348, %rd15726;
	xor.b64  	%rd15352, %rd15348, %rd15725;
	xor.b64  	%rd15353, %rd15348, %rd15724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11022,%dummy}, %rd15332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11023}, %rd15332;
	}
	shf.r.wrap.b32 	%r11024, %r11023, %r11022, 1;
	shf.r.wrap.b32 	%r11025, %r11022, %r11023, 1;
	mov.b64 	%rd15354, {%r11025, %r11024};
	xor.b64  	%rd15355, %rd15354, %rd15324;
	xor.b64  	%rd15356, %rd15355, %rd15723;
	xor.b64  	%rd15357, %rd15355, %rd15722;
	xor.b64  	%rd15358, %rd15355, %rd15721;
	xor.b64  	%rd15359, %rd15355, %rd15720;
	xor.b64  	%rd15360, %rd15355, %rd15719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11026,%dummy}, %rd15316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11027}, %rd15316;
	}
	shf.r.wrap.b32 	%r11028, %r11027, %r11026, 1;
	shf.r.wrap.b32 	%r11029, %r11026, %r11027, 1;
	mov.b64 	%rd15361, {%r11029, %r11028};
	xor.b64  	%rd15362, %rd15361, %rd15328;
	xor.b64  	%rd15363, %rd15362, %rd15718;
	xor.b64  	%rd15364, %rd15362, %rd15717;
	xor.b64  	%rd15365, %rd15362, %rd15716;
	xor.b64  	%rd15366, %rd15362, %rd15715;
	xor.b64  	%rd15367, %rd15362, %rd15714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11030,%dummy}, %rd15342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11031}, %rd15342;
	}
	shf.r.wrap.b32 	%r11032, %r11031, %r11030, 1;
	shf.r.wrap.b32 	%r11033, %r11030, %r11031, 1;
	mov.b64 	%rd15368, {%r11033, %r11032};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11034,%dummy}, %rd15337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11035}, %rd15337;
	}
	shf.r.wrap.b32 	%r11036, %r11035, %r11034, 3;
	shf.r.wrap.b32 	%r11037, %r11034, %r11035, 3;
	mov.b64 	%rd15369, {%r11037, %r11036};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11038,%dummy}, %rd15350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11039}, %rd15350;
	}
	shf.r.wrap.b32 	%r11040, %r11039, %r11038, 6;
	shf.r.wrap.b32 	%r11041, %r11038, %r11039, 6;
	mov.b64 	%rd15370, {%r11041, %r11040};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11042,%dummy}, %rd15344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11043}, %rd15344;
	}
	shf.r.wrap.b32 	%r11044, %r11043, %r11042, 10;
	shf.r.wrap.b32 	%r11045, %r11042, %r11043, 10;
	mov.b64 	%rd15371, {%r11045, %r11044};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11046,%dummy}, %rd15352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11047}, %rd15352;
	}
	shf.r.wrap.b32 	%r11048, %r11047, %r11046, 15;
	shf.r.wrap.b32 	%r11049, %r11046, %r11047, 15;
	mov.b64 	%rd15372, {%r11049, %r11048};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11050,%dummy}, %rd15359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11051}, %rd15359;
	}
	shf.r.wrap.b32 	%r11052, %r11051, %r11050, 21;
	shf.r.wrap.b32 	%r11053, %r11050, %r11051, 21;
	mov.b64 	%rd15373, {%r11053, %r11052};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11054,%dummy}, %rd15356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11055}, %rd15356;
	}
	shf.r.wrap.b32 	%r11056, %r11055, %r11054, 28;
	shf.r.wrap.b32 	%r11057, %r11054, %r11055, 28;
	mov.b64 	%rd15374, {%r11057, %r11056};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11058}, %rd15336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11059,%dummy}, %rd15336;
	}
	shf.l.wrap.b32 	%r11060, %r11059, %r11058, 28;
	shf.l.wrap.b32 	%r11061, %r11058, %r11059, 28;
	mov.b64 	%rd15375, {%r11061, %r11060};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11062}, %rd15345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11063,%dummy}, %rd15345;
	}
	shf.l.wrap.b32 	%r11064, %r11063, %r11062, 19;
	shf.l.wrap.b32 	%r11065, %r11062, %r11063, 19;
	mov.b64 	%rd15376, {%r11065, %r11064};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11066}, %rd15357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11067,%dummy}, %rd15357;
	}
	shf.l.wrap.b32 	%r11068, %r11067, %r11066, 9;
	shf.l.wrap.b32 	%r11069, %r11066, %r11067, 9;
	mov.b64 	%rd15377, {%r11069, %r11068};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11070,%dummy}, %rd15346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11071}, %rd15346;
	}
	shf.r.wrap.b32 	%r11072, %r11071, %r11070, 2;
	shf.r.wrap.b32 	%r11073, %r11070, %r11071, 2;
	mov.b64 	%rd15378, {%r11073, %r11072};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11074,%dummy}, %rd15367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11075}, %rd15367;
	}
	shf.r.wrap.b32 	%r11076, %r11075, %r11074, 14;
	shf.r.wrap.b32 	%r11077, %r11074, %r11075, 14;
	mov.b64 	%rd15379, {%r11077, %r11076};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11078,%dummy}, %rd15363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11079}, %rd15363;
	}
	shf.r.wrap.b32 	%r11080, %r11079, %r11078, 27;
	shf.r.wrap.b32 	%r11081, %r11078, %r11079, 27;
	mov.b64 	%rd15380, {%r11081, %r11080};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11082}, %rd15338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11083,%dummy}, %rd15338;
	}
	shf.l.wrap.b32 	%r11084, %r11083, %r11082, 23;
	shf.l.wrap.b32 	%r11085, %r11082, %r11083, 23;
	mov.b64 	%rd15381, {%r11085, %r11084};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11086}, %rd15360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11087,%dummy}, %rd15360;
	}
	shf.l.wrap.b32 	%r11088, %r11087, %r11086, 8;
	shf.l.wrap.b32 	%r11089, %r11086, %r11087, 8;
	mov.b64 	%rd15382, {%r11089, %r11088};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11090,%dummy}, %rd15366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11091}, %rd15366;
	}
	shf.r.wrap.b32 	%r11092, %r11091, %r11090, 8;
	shf.r.wrap.b32 	%r11093, %r11090, %r11091, 8;
	mov.b64 	%rd15383, {%r11093, %r11092};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11094,%dummy}, %rd15358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11095}, %rd15358;
	}
	shf.r.wrap.b32 	%r11096, %r11095, %r11094, 25;
	shf.r.wrap.b32 	%r11097, %r11094, %r11095, 25;
	mov.b64 	%rd15384, {%r11097, %r11096};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11098}, %rd15351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11099,%dummy}, %rd15351;
	}
	shf.l.wrap.b32 	%r11100, %r11099, %r11098, 21;
	shf.l.wrap.b32 	%r11101, %r11098, %r11099, 21;
	mov.b64 	%rd15385, {%r11101, %r11100};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11102}, %rd15349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11103,%dummy}, %rd15349;
	}
	shf.l.wrap.b32 	%r11104, %r11103, %r11102, 2;
	shf.l.wrap.b32 	%r11105, %r11102, %r11103, 2;
	mov.b64 	%rd15386, {%r11105, %r11104};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11106,%dummy}, %rd15339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11107}, %rd15339;
	}
	shf.r.wrap.b32 	%r11108, %r11107, %r11106, 18;
	shf.r.wrap.b32 	%r11109, %r11106, %r11107, 18;
	mov.b64 	%rd15387, {%r11109, %r11108};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11110}, %rd15365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11111,%dummy}, %rd15365;
	}
	shf.l.wrap.b32 	%r11112, %r11111, %r11110, 25;
	shf.l.wrap.b32 	%r11113, %r11110, %r11111, 25;
	mov.b64 	%rd15388, {%r11113, %r11112};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11114}, %rd15353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11115,%dummy}, %rd15353;
	}
	shf.l.wrap.b32 	%r11116, %r11115, %r11114, 3;
	shf.l.wrap.b32 	%r11117, %r11114, %r11115, 3;
	mov.b64 	%rd15389, {%r11117, %r11116};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11118,%dummy}, %rd15364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11119}, %rd15364;
	}
	shf.r.wrap.b32 	%r11120, %r11119, %r11118, 20;
	shf.r.wrap.b32 	%r11121, %r11118, %r11119, 20;
	mov.b64 	%rd15390, {%r11121, %r11120};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11122}, %rd15343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11123,%dummy}, %rd15343;
	}
	shf.l.wrap.b32 	%r11124, %r11123, %r11122, 20;
	shf.l.wrap.b32 	%r11125, %r11122, %r11123, 20;
	mov.b64 	%rd15391, {%r11125, %r11124};
	xor.b64  	%rd15392, %rd15374, %rd15335;
	xor.b64  	%rd15393, %rd15392, %rd15368;
	xor.b64  	%rd15394, %rd15393, %rd15380;
	xor.b64  	%rd15395, %rd15394, %rd15386;
	xor.b64  	%rd15396, %rd15390, %rd15391;
	xor.b64  	%rd15397, %rd15396, %rd15370;
	xor.b64  	%rd15398, %rd15397, %rd15375;
	xor.b64  	%rd15399, %rd15398, %rd15377;
	xor.b64  	%rd15400, %rd15369, %rd15385;
	xor.b64  	%rd15401, %rd15400, %rd15384;
	xor.b64  	%rd15402, %rd15401, %rd15371;
	xor.b64  	%rd15403, %rd15402, %rd15388;
	xor.b64  	%rd15404, %rd15376, %rd15373;
	xor.b64  	%rd15405, %rd15404, %rd15383;
	xor.b64  	%rd15406, %rd15405, %rd15372;
	xor.b64  	%rd15407, %rd15406, %rd15381;
	xor.b64  	%rd15408, %rd15389, %rd15379;
	xor.b64  	%rd15409, %rd15408, %rd15387;
	xor.b64  	%rd15410, %rd15409, %rd15382;
	xor.b64  	%rd15411, %rd15410, %rd15378;
	not.b64 	%rd15412, %rd15399;
	and.b64  	%rd15413, %rd15403, %rd15412;
	xor.b64  	%rd15414, %rd15335, %rd15413;
	xor.b64  	%rd15737, %rd15374, %rd15413;
	xor.b64  	%rd15736, %rd15368, %rd15413;
	xor.b64  	%rd15735, %rd15380, %rd15413;
	xor.b64  	%rd15734, %rd15386, %rd15413;
	not.b64 	%rd15415, %rd15403;
	and.b64  	%rd15416, %rd15407, %rd15415;
	xor.b64  	%rd15733, %rd15391, %rd15416;
	xor.b64  	%rd15732, %rd15390, %rd15416;
	xor.b64  	%rd15731, %rd15370, %rd15416;
	xor.b64  	%rd15730, %rd15375, %rd15416;
	xor.b64  	%rd15729, %rd15377, %rd15416;
	not.b64 	%rd15417, %rd15407;
	and.b64  	%rd15418, %rd15411, %rd15417;
	xor.b64  	%rd15728, %rd15385, %rd15418;
	xor.b64  	%rd15727, %rd15369, %rd15418;
	xor.b64  	%rd15726, %rd15384, %rd15418;
	xor.b64  	%rd15725, %rd15371, %rd15418;
	xor.b64  	%rd15724, %rd15388, %rd15418;
	not.b64 	%rd15419, %rd15411;
	and.b64  	%rd15420, %rd15395, %rd15419;
	xor.b64  	%rd15723, %rd15373, %rd15420;
	xor.b64  	%rd15722, %rd15376, %rd15420;
	xor.b64  	%rd15721, %rd15383, %rd15420;
	xor.b64  	%rd15720, %rd15372, %rd15420;
	xor.b64  	%rd15719, %rd15381, %rd15420;
	not.b64 	%rd15421, %rd15395;
	and.b64  	%rd15422, %rd15399, %rd15421;
	xor.b64  	%rd15718, %rd15379, %rd15422;
	xor.b64  	%rd15717, %rd15389, %rd15422;
	xor.b64  	%rd15716, %rd15387, %rd15422;
	xor.b64  	%rd15715, %rd15382, %rd15422;
	xor.b64  	%rd15714, %rd15378, %rd15422;
	ld.local.u64 	%rd15423, [%rd15713];
	xor.b64  	%rd15738, %rd15414, %rd15423;
	add.s64 	%rd15713, %rd15713, 8;
	add.s32 	%r11240, %r11240, 1;
	setp.ne.s32 	%p378, %r11240, 24;
	@%p378 bra 	$L__BB4_295;

	ld.param.u32 	%r11170, [search_seeds_param_8];
	shr.u64 	%rd638, %rd15733, 32;
	cvt.u32.u64 	%r11126, %rd638;
	cvt.u16.u64 	%rs158, %rd638;
	shr.u64 	%rd639, %rd15733, 40;
	cvt.u16.u64 	%rs159, %rd639;
	shr.u64 	%rd640, %rd15733, 48;
	cvt.u32.u64 	%r11127, %rd640;
	cvt.u16.u64 	%rs160, %rd640;
	shr.u64 	%rd641, %rd15733, 56;
	cvt.u16.u64 	%rs161, %rd641;
	cvt.u32.u64 	%r11128, %rd15728;
	shr.u64 	%rd642, %rd15728, 8;
	cvt.u16.u64 	%rs162, %rd642;
	shr.u64 	%rd643, %rd15728, 16;
	cvt.u32.u64 	%r11129, %rd643;
	cvt.u16.u64 	%rs163, %rd643;
	shr.u64 	%rd644, %rd15728, 24;
	cvt.u16.u64 	%rs164, %rd644;
	shr.u64 	%rd645, %rd15728, 32;
	cvt.u32.u64 	%r11130, %rd645;
	cvt.u16.u64 	%rs165, %rd645;
	shr.u64 	%rd646, %rd15728, 40;
	cvt.u16.u64 	%rs166, %rd646;
	shr.u64 	%rd647, %rd15728, 48;
	cvt.u32.u64 	%r11131, %rd647;
	cvt.u16.u64 	%rs167, %rd647;
	shr.u64 	%rd648, %rd15728, 56;
	cvt.u16.u64 	%rs168, %rd648;
	cvt.u32.u64 	%r11132, %rd15723;
	shr.u64 	%rd649, %rd15723, 8;
	cvt.u16.u64 	%rs169, %rd649;
	shr.u64 	%rd650, %rd15723, 16;
	cvt.u32.u64 	%r11133, %rd650;
	cvt.u16.u64 	%rs170, %rd650;
	shr.u64 	%rd651, %rd15723, 24;
	cvt.u16.u64 	%rs171, %rd651;
	shr.u64 	%rd652, %rd15723, 32;
	cvt.u16.u64 	%rs172, %rd652;
	shr.u64 	%rd653, %rd15723, 40;
	cvt.u16.u64 	%rs173, %rd653;
	shr.u64 	%rd654, %rd15723, 48;
	cvt.u16.u64 	%rs174, %rd654;
	shr.u64 	%rd655, %rd15723, 56;
	cvt.u16.u64 	%rs175, %rd655;
	cvt.u16.u64 	%rs176, %rd15728;
	cvt.u16.u64 	%rs177, %rd15723;
	cvt.u32.u64 	%r11134, %rd639;
	and.b32  	%r11135, %r11126, 255;
	prmt.b32 	%r11136, %r11134, %r11135, 30212;
	cvt.u32.u64 	%r11137, %rd641;
	and.b32  	%r11138, %r11127, 255;
	prmt.b32 	%r11139, %r11137, %r11138, 30212;
	and.b32  	%r11140, %r11128, 255;
	cvt.u32.u64 	%r11141, %rd642;
	prmt.b32 	%r11142, %r11141, %r11140, 30212;
	cvt.u32.u64 	%r11143, %rd644;
	and.b32  	%r11144, %r11129, 255;
	prmt.b32 	%r11145, %r11143, %r11144, 30212;
	cvt.u32.u64 	%r11146, %rd646;
	and.b32  	%r11147, %r11130, 255;
	prmt.b32 	%r11148, %r11146, %r11147, 30212;
	cvt.u32.u64 	%r11149, %rd648;
	and.b32  	%r11150, %r11131, 255;
	prmt.b32 	%r11151, %r11149, %r11150, 30212;
	and.b32  	%r11152, %r11132, 255;
	cvt.u32.u64 	%r11153, %rd649;
	prmt.b32 	%r11154, %r11153, %r11152, 30212;
	cvt.u32.u64 	%r11155, %rd651;
	and.b32  	%r11156, %r11133, 255;
	prmt.b32 	%r11157, %r11155, %r11156, 30212;
	prmt.b32 	%r11158, %r11157, %r11154, 4180;
	prmt.b32 	%r11159, %r11151, %r11148, 4180;
	prmt.b32 	%r11160, %r11145, %r11142, 4180;
	prmt.b32 	%r11161, %r11139, %r11136, 4180;
	st.local.v4.u32 	[%rd2], {%r11161, %r11160, %r11159, %r11158};
	st.local.v4.u8 	[%rd2+16], {%rs172, %rs173, %rs174, %rs175};
	setp.eq.s32 	%p379, %r11170, 0;
	@%p379 bra 	$L__BB4_302;

	ld.param.u32 	%r11171, [search_seeds_param_8];
	setp.ne.s32 	%p380, %r11171, 1;
	@%p380 bra 	$L__BB4_322;

	ld.param.u32 	%r11172, [search_seeds_param_9];
	setp.lt.s32 	%p381, %r11172, 1;
	@%p381 bra 	$L__BB4_323;

	ld.param.u64 	%rd15504, [search_seeds_param_7];
	ld.param.u32 	%r11173, [search_seeds_param_9];
	cvta.to.global.u64 	%rd656, %rd15504;
	min.s32 	%r11163, %r11173, 20;
	mov.u32 	%r11241, 0;
	max.s32 	%r134, %r11163, 0;

$L__BB4_300:
	cvt.s64.s32 	%rd15424, %r11241;
	add.s64 	%rd15425, %rd2, %rd15424;
	add.s64 	%rd15426, %rd656, %rd15424;
	ld.global.u8 	%rs1040, [%rd15426];
	ld.local.u8 	%rs1041, [%rd15425];
	setp.ne.s16 	%p382, %rs1041, %rs1040;
	add.s32 	%r11241, %r11241, 1;
	@%p382 bra 	$L__BB4_324;

	setp.lt.s32 	%p383, %r11241, %r134;
	@%p383 bra 	$L__BB4_300;
	bra.uni 	$L__BB4_323;

$L__BB4_34:
	atom.global.add.u64 	%rd760, [%rd26], 1;
	bra.uni 	$L__BB4_325;

$L__BB4_302:
	ld.param.u64 	%rd15505, [search_seeds_param_7];
	cvta.to.global.u64 	%rd15427, %rd15505;
	ld.global.u8 	%rs1042, [%rd15427];
	and.b16  	%rs1043, %rs158, 255;
	setp.ne.s16 	%p384, %rs1042, %rs1043;
	@%p384 bra 	$L__BB4_324;

	ld.global.u8 	%rs1044, [%rd15427+1];
	and.b16  	%rs1045, %rs159, 255;
	setp.ne.s16 	%p385, %rs1044, %rs1045;
	@%p385 bra 	$L__BB4_324;

	ld.global.u8 	%rs1046, [%rd15427+2];
	and.b16  	%rs1047, %rs160, 255;
	setp.ne.s16 	%p386, %rs1046, %rs1047;
	@%p386 bra 	$L__BB4_324;

	ld.global.u8 	%rs1048, [%rd15427+3];
	setp.ne.s16 	%p387, %rs1048, %rs161;
	@%p387 bra 	$L__BB4_324;

	ld.global.u8 	%rs1049, [%rd15427+4];
	and.b16  	%rs1050, %rs176, 255;
	setp.ne.s16 	%p388, %rs1049, %rs1050;
	@%p388 bra 	$L__BB4_324;

	ld.global.u8 	%rs1051, [%rd15427+5];
	and.b16  	%rs1052, %rs162, 255;
	setp.ne.s16 	%p389, %rs1051, %rs1052;
	@%p389 bra 	$L__BB4_324;

	ld.global.u8 	%rs1053, [%rd15427+6];
	and.b16  	%rs1054, %rs163, 255;
	setp.ne.s16 	%p390, %rs1053, %rs1054;
	@%p390 bra 	$L__BB4_324;

	ld.global.u8 	%rs1055, [%rd15427+7];
	and.b16  	%rs1056, %rs164, 255;
	setp.ne.s16 	%p391, %rs1055, %rs1056;
	@%p391 bra 	$L__BB4_324;

	ld.global.u8 	%rs1057, [%rd15427+8];
	and.b16  	%rs1058, %rs165, 255;
	setp.ne.s16 	%p392, %rs1057, %rs1058;
	@%p392 bra 	$L__BB4_324;

	ld.global.u8 	%rs1059, [%rd15427+9];
	and.b16  	%rs1060, %rs166, 255;
	setp.ne.s16 	%p393, %rs1059, %rs1060;
	@%p393 bra 	$L__BB4_324;

	ld.global.u8 	%rs1061, [%rd15427+10];
	and.b16  	%rs1062, %rs167, 255;
	setp.ne.s16 	%p394, %rs1061, %rs1062;
	@%p394 bra 	$L__BB4_324;

	ld.global.u8 	%rs1063, [%rd15427+11];
	setp.ne.s16 	%p395, %rs1063, %rs168;
	@%p395 bra 	$L__BB4_324;

	ld.global.u8 	%rs1064, [%rd15427+12];
	and.b16  	%rs1065, %rs177, 255;
	setp.ne.s16 	%p396, %rs1064, %rs1065;
	@%p396 bra 	$L__BB4_324;

	ld.global.u8 	%rs1066, [%rd15427+13];
	and.b16  	%rs1067, %rs169, 255;
	setp.ne.s16 	%p397, %rs1066, %rs1067;
	@%p397 bra 	$L__BB4_324;

	ld.global.u8 	%rs1068, [%rd15427+14];
	and.b16  	%rs1069, %rs170, 255;
	setp.ne.s16 	%p398, %rs1068, %rs1069;
	@%p398 bra 	$L__BB4_324;

	ld.global.u8 	%rs1070, [%rd15427+15];
	and.b16  	%rs1071, %rs171, 255;
	setp.ne.s16 	%p399, %rs1070, %rs1071;
	@%p399 bra 	$L__BB4_324;

	ld.global.u8 	%rs1072, [%rd15427+16];
	and.b16  	%rs1073, %rs172, 255;
	setp.ne.s16 	%p400, %rs1072, %rs1073;
	@%p400 bra 	$L__BB4_324;

	ld.global.u8 	%rs1074, [%rd15427+17];
	and.b16  	%rs1075, %rs173, 255;
	setp.ne.s16 	%p401, %rs1074, %rs1075;
	@%p401 bra 	$L__BB4_324;

	ld.global.u8 	%rs1076, [%rd15427+18];
	and.b16  	%rs1077, %rs174, 255;
	setp.ne.s16 	%p402, %rs1076, %rs1077;
	@%p402 bra 	$L__BB4_324;

	ld.global.u8 	%rs1078, [%rd15427+19];
	setp.eq.s16 	%p403, %rs1078, %rs175;
	@%p403 bra 	$L__BB4_323;
	bra.uni 	$L__BB4_324;

$L__BB4_322:
	or.b16  	%rs1081, %rs158, %rs159;
	or.b16  	%rs1083, %rs1081, %rs160;
	or.b16  	%rs1085, %rs1083, %rs161;
	or.b16  	%rs1087, %rs1085, %rs176;
	or.b16  	%rs1089, %rs1087, %rs162;
	or.b16  	%rs1091, %rs1089, %rs163;
	or.b16  	%rs1093, %rs1091, %rs164;
	or.b16  	%rs1095, %rs1093, %rs165;
	or.b16  	%rs1097, %rs1095, %rs166;
	or.b16  	%rs1099, %rs1097, %rs167;
	or.b16  	%rs1101, %rs1099, %rs168;
	or.b16  	%rs1103, %rs1101, %rs177;
	or.b16  	%rs1105, %rs1103, %rs169;
	or.b16  	%rs1107, %rs1105, %rs170;
	or.b16  	%rs1109, %rs1107, %rs171;
	or.b16  	%rs1111, %rs1109, %rs172;
	or.b16  	%rs1113, %rs1111, %rs173;
	or.b16  	%rs1115, %rs1113, %rs174;
	or.b16  	%rs1117, %rs1115, %rs175;
	and.b16  	%rs1118, %rs1117, 255;
	setp.ne.s16 	%p404, %rs1118, 0;
	@%p404 bra 	$L__BB4_324;

$L__BB4_323:
	mov.u32 	%r11177, %tid.x;
	mov.u32 	%r11176, %ntid.x;
	mov.u32 	%r11175, %ctaid.x;
	mad.lo.s32 	%r11174, %r11175, %r11176, %r11177;
	ld.param.u64 	%rd15503, [search_seeds_param_10];
	ld.param.u64 	%rd15502, [search_seeds_param_1];
	add.u64 	%rd15447, %SP, 192;
	add.u64 	%rd15448, %SPL, 192;
	st.local.u64 	[%rd15448], %rd699;
	mov.u64 	%rd15450, $str$1;
	cvta.global.u64 	%rd15451, %rd15450;
	mov.u32 	%r11164, 1;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd15451;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd15447;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r11165, [retval0+0];
	} // callseq 0
	cvta.to.global.u64 	%rd15452, %rd15502;
	atom.global.add.u64 	%rd15453, [%rd15452], 1;
	cvta.to.global.u64 	%rd15454, %rd15503;
	mul.wide.u32 	%rd15455, %r11174, 4;
	add.s64 	%rd15456, %rd15454, %rd15455;
	st.global.u32 	[%rd15456], %r11164;

$L__BB4_324:
	ld.param.u64 	%rd15501, [search_seeds_param_0];
	cvta.to.global.u64 	%rd15500, %rd15501;
	atom.global.add.u64 	%rd15458, [%rd15500], 1;

$L__BB4_325:
	ret;

}

